<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="123212"><g><title>std::sys::unix::futex::futex_wait (47 samples, 0.04%)</title><rect x="0.0089%" y="565" width="0.0381%" height="15" fill="rgb(227,0,7)" fg:x="11" fg:w="47"/><text x="0.2589%" y="575.50"></text></g><g><title>syscall (42 samples, 0.03%)</title><rect x="0.0130%" y="549" width="0.0341%" height="15" fill="rgb(217,0,24)" fg:x="16" fg:w="42"/><text x="0.2630%" y="559.50"></text></g><g><title>async-io (60 samples, 0.05%)</title><rect x="0.0008%" y="917" width="0.0487%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="60"/><text x="0.2508%" y="927.50"></text></g><g><title>clone (60 samples, 0.05%)</title><rect x="0.0008%" y="901" width="0.0487%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="60"/><text x="0.2508%" y="911.50"></text></g><g><title>start_thread (60 samples, 0.05%)</title><rect x="0.0008%" y="885" width="0.0487%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="60"/><text x="0.2508%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (60 samples, 0.05%)</title><rect x="0.0008%" y="869" width="0.0487%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="60"/><text x="0.2508%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (60 samples, 0.05%)</title><rect x="0.0008%" y="853" width="0.0487%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="60"/><text x="0.2508%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (60 samples, 0.05%)</title><rect x="0.0008%" y="837" width="0.0487%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="60"/><text x="0.2508%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (60 samples, 0.05%)</title><rect x="0.0008%" y="821" width="0.0487%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="60"/><text x="0.2508%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (60 samples, 0.05%)</title><rect x="0.0008%" y="805" width="0.0487%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="60"/><text x="0.2508%" y="815.50"></text></g><g><title>std::panic::catch_unwind (60 samples, 0.05%)</title><rect x="0.0008%" y="789" width="0.0487%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="60"/><text x="0.2508%" y="799.50"></text></g><g><title>std::panicking::try (60 samples, 0.05%)</title><rect x="0.0008%" y="773" width="0.0487%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="60"/><text x="0.2508%" y="783.50"></text></g><g><title>std::panicking::try::do_call (60 samples, 0.05%)</title><rect x="0.0008%" y="757" width="0.0487%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="60"/><text x="0.2508%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60 samples, 0.05%)</title><rect x="0.0008%" y="741" width="0.0487%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="60"/><text x="0.2508%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (60 samples, 0.05%)</title><rect x="0.0008%" y="725" width="0.0487%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="60"/><text x="0.2508%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (60 samples, 0.05%)</title><rect x="0.0008%" y="709" width="0.0487%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="60"/><text x="0.2508%" y="719.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (60 samples, 0.05%)</title><rect x="0.0008%" y="693" width="0.0487%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="60"/><text x="0.2508%" y="703.50"></text></g><g><title>async_io::driver::main_loop (60 samples, 0.05%)</title><rect x="0.0008%" y="677" width="0.0487%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="60"/><text x="0.2508%" y="687.50"></text></g><g><title>parking::Parker::park_timeout (53 samples, 0.04%)</title><rect x="0.0065%" y="661" width="0.0430%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="53"/><text x="0.2565%" y="671.50"></text></g><g><title>parking::Inner::park (53 samples, 0.04%)</title><rect x="0.0065%" y="645" width="0.0430%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="53"/><text x="0.2565%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (52 samples, 0.04%)</title><rect x="0.0073%" y="629" width="0.0422%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="52"/><text x="0.2573%" y="639.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (52 samples, 0.04%)</title><rect x="0.0073%" y="613" width="0.0422%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="52"/><text x="0.2573%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (52 samples, 0.04%)</title><rect x="0.0073%" y="597" width="0.0422%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="52"/><text x="0.2573%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (52 samples, 0.04%)</title><rect x="0.0073%" y="581" width="0.0422%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="52"/><text x="0.2573%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="0.0536%" y="901" width="0.0122%" height="15" fill="rgb(241,131,45)" fg:x="66" fg:w="15"/><text x="0.3036%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="0.0657%" y="901" width="0.0130%" height="15" fill="rgb(249,31,29)" fg:x="81" fg:w="16"/><text x="0.3157%" y="911.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (31 samples, 0.03%)</title><rect x="0.0787%" y="901" width="0.0252%" height="15" fill="rgb(225,111,53)" fg:x="97" fg:w="31"/><text x="0.3287%" y="911.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="0.1039%" y="901" width="0.0219%" height="15" fill="rgb(238,160,17)" fg:x="128" fg:w="27"/><text x="0.3539%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="0.1258%" y="901" width="0.0162%" height="15" fill="rgb(214,148,48)" fg:x="155" fg:w="20"/><text x="0.3758%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.03%)</title><rect x="0.1534%" y="885" width="0.0252%" height="15" fill="rgb(232,36,49)" fg:x="189" fg:w="31"/><text x="0.4034%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.04%)</title><rect x="0.1786%" y="885" width="0.0398%" height="15" fill="rgb(209,103,24)" fg:x="220" fg:w="49"/><text x="0.4286%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="0.2216%" y="885" width="0.0455%" height="15" fill="rgb(229,88,8)" fg:x="273" fg:w="56"/><text x="0.4716%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.03%)</title><rect x="0.2670%" y="885" width="0.0325%" height="15" fill="rgb(213,181,19)" fg:x="329" fg:w="40"/><text x="0.5170%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="0.2995%" y="885" width="0.0308%" height="15" fill="rgb(254,191,54)" fg:x="369" fg:w="38"/><text x="0.5495%" y="895.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (216 samples, 0.18%)</title><rect x="0.3376%" y="885" width="0.1753%" height="15" fill="rgb(241,83,37)" fg:x="416" fg:w="216"/><text x="0.5876%" y="895.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (32 samples, 0.03%)</title><rect x="0.4870%" y="869" width="0.0260%" height="15" fill="rgb(233,36,39)" fg:x="600" fg:w="32"/><text x="0.7370%" y="879.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.02%)</title><rect x="0.5129%" y="885" width="0.0243%" height="15" fill="rgb(226,3,54)" fg:x="632" fg:w="30"/><text x="0.7629%" y="895.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (50 samples, 0.04%)</title><rect x="0.5876%" y="869" width="0.0406%" height="15" fill="rgb(245,192,40)" fg:x="724" fg:w="50"/><text x="0.8376%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (31 samples, 0.03%)</title><rect x="0.6030%" y="853" width="0.0252%" height="15" fill="rgb(238,167,29)" fg:x="743" fg:w="31"/><text x="0.8530%" y="863.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (120 samples, 0.10%)</title><rect x="0.5373%" y="885" width="0.0974%" height="15" fill="rgb(232,182,51)" fg:x="662" fg:w="120"/><text x="0.7873%" y="895.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (46 samples, 0.04%)</title><rect x="0.9431%" y="869" width="0.0373%" height="15" fill="rgb(231,60,39)" fg:x="1162" fg:w="46"/><text x="1.1931%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="1.0129%" y="853" width="0.0122%" height="15" fill="rgb(208,69,12)" fg:x="1248" fg:w="15"/><text x="1.2629%" y="863.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="1.0129%" y="837" width="0.0122%" height="15" fill="rgb(235,93,37)" fg:x="1248" fg:w="15"/><text x="1.2629%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="1.0340%" y="853" width="0.0106%" height="15" fill="rgb(213,116,39)" fg:x="1274" fg:w="13"/><text x="1.2840%" y="863.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (76 samples, 0.06%)</title><rect x="0.9877%" y="869" width="0.0617%" height="15" fill="rgb(222,207,29)" fg:x="1217" fg:w="76"/><text x="1.2377%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (15 samples, 0.01%)</title><rect x="1.0494%" y="869" width="0.0122%" height="15" fill="rgb(206,96,30)" fg:x="1293" fg:w="15"/><text x="1.2994%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (19 samples, 0.02%)</title><rect x="1.0616%" y="869" width="0.0154%" height="15" fill="rgb(218,138,4)" fg:x="1308" fg:w="19"/><text x="1.3116%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="1.1103%" y="853" width="0.0114%" height="15" fill="rgb(250,191,14)" fg:x="1368" fg:w="14"/><text x="1.3603%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="1.1103%" y="837" width="0.0114%" height="15" fill="rgb(239,60,40)" fg:x="1368" fg:w="14"/><text x="1.3603%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (14 samples, 0.01%)</title><rect x="1.1103%" y="821" width="0.0114%" height="15" fill="rgb(206,27,48)" fg:x="1368" fg:w="14"/><text x="1.3603%" y="831.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="1.1103%" y="805" width="0.0114%" height="15" fill="rgb(225,35,8)" fg:x="1368" fg:w="14"/><text x="1.3603%" y="815.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (17 samples, 0.01%)</title><rect x="1.1216%" y="853" width="0.0138%" height="15" fill="rgb(250,213,24)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (17 samples, 0.01%)</title><rect x="1.1216%" y="837" width="0.0138%" height="15" fill="rgb(247,123,22)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="847.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (17 samples, 0.01%)</title><rect x="1.1216%" y="821" width="0.0138%" height="15" fill="rgb(231,138,38)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (17 samples, 0.01%)</title><rect x="1.1216%" y="805" width="0.0138%" height="15" fill="rgb(231,145,46)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.01%)</title><rect x="1.1216%" y="789" width="0.0138%" height="15" fill="rgb(251,118,11)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.01%)</title><rect x="1.1216%" y="773" width="0.0138%" height="15" fill="rgb(217,147,25)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.01%)</title><rect x="1.1216%" y="757" width="0.0138%" height="15" fill="rgb(247,81,37)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.01%)</title><rect x="1.1216%" y="741" width="0.0138%" height="15" fill="rgb(209,12,38)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.01%)</title><rect x="1.1216%" y="725" width="0.0138%" height="15" fill="rgb(227,1,9)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.01%)</title><rect x="1.1216%" y="709" width="0.0138%" height="15" fill="rgb(248,47,43)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.01%)</title><rect x="1.1216%" y="693" width="0.0138%" height="15" fill="rgb(221,10,30)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.01%)</title><rect x="1.1216%" y="677" width="0.0138%" height="15" fill="rgb(210,229,1)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.01%)</title><rect x="1.1216%" y="661" width="0.0138%" height="15" fill="rgb(222,148,37)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="671.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.01%)</title><rect x="1.1216%" y="645" width="0.0138%" height="15" fill="rgb(234,67,33)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="655.50"></text></g><g><title>__rg_alloc (17 samples, 0.01%)</title><rect x="1.1216%" y="629" width="0.0138%" height="15" fill="rgb(247,98,35)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.01%)</title><rect x="1.1216%" y="613" width="0.0138%" height="15" fill="rgb(247,138,52)" fg:x="1382" fg:w="17"/><text x="1.3716%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (628 samples, 0.51%)</title><rect x="0.6347%" y="885" width="0.5097%" height="15" fill="rgb(213,79,30)" fg:x="782" fg:w="628"/><text x="0.8847%" y="895.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (83 samples, 0.07%)</title><rect x="1.0770%" y="869" width="0.0674%" height="15" fill="rgb(246,177,23)" fg:x="1327" fg:w="83"/><text x="1.3270%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (114 samples, 0.09%)</title><rect x="1.1444%" y="885" width="0.0925%" height="15" fill="rgb(230,62,27)" fg:x="1410" fg:w="114"/><text x="1.3944%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (42 samples, 0.03%)</title><rect x="1.2442%" y="885" width="0.0341%" height="15" fill="rgb(216,154,8)" fg:x="1533" fg:w="42"/><text x="1.4942%" y="895.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="1.2677%" y="869" width="0.0106%" height="15" fill="rgb(244,35,45)" fg:x="1562" fg:w="13"/><text x="1.5177%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (17 samples, 0.01%)</title><rect x="1.2905%" y="869" width="0.0138%" height="15" fill="rgb(251,115,12)" fg:x="1590" fg:w="17"/><text x="1.5405%" y="879.50"></text></g><g><title>core::mem::replace (17 samples, 0.01%)</title><rect x="1.2905%" y="853" width="0.0138%" height="15" fill="rgb(240,54,50)" fg:x="1590" fg:w="17"/><text x="1.5405%" y="863.50"></text></g><g><title>core::ptr::read (17 samples, 0.01%)</title><rect x="1.2905%" y="837" width="0.0138%" height="15" fill="rgb(233,84,52)" fg:x="1590" fg:w="17"/><text x="1.5405%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="1.3043%" y="869" width="0.0106%" height="15" fill="rgb(207,117,47)" fg:x="1607" fg:w="13"/><text x="1.5543%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (13 samples, 0.01%)</title><rect x="1.3043%" y="853" width="0.0106%" height="15" fill="rgb(249,43,39)" fg:x="1607" fg:w="13"/><text x="1.5543%" y="863.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="1.2783%" y="885" width="0.0398%" height="15" fill="rgb(209,38,44)" fg:x="1575" fg:w="49"/><text x="1.5283%" y="895.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (19 samples, 0.02%)</title><rect x="1.3181%" y="885" width="0.0154%" height="15" fill="rgb(236,212,23)" fg:x="1624" fg:w="19"/><text x="1.5681%" y="895.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (34 samples, 0.03%)</title><rect x="1.3335%" y="885" width="0.0276%" height="15" fill="rgb(242,79,21)" fg:x="1643" fg:w="34"/><text x="1.5835%" y="895.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (188 samples, 0.15%)</title><rect x="1.3611%" y="885" width="0.1526%" height="15" fill="rgb(211,96,35)" fg:x="1677" fg:w="188"/><text x="1.6111%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (93 samples, 0.08%)</title><rect x="1.4382%" y="869" width="0.0755%" height="15" fill="rgb(253,215,40)" fg:x="1772" fg:w="93"/><text x="1.6882%" y="879.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (64 samples, 0.05%)</title><rect x="1.4617%" y="853" width="0.0519%" height="15" fill="rgb(211,81,21)" fg:x="1801" fg:w="64"/><text x="1.7117%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.02%)</title><rect x="1.4966%" y="837" width="0.0170%" height="15" fill="rgb(208,190,38)" fg:x="1844" fg:w="21"/><text x="1.7466%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15 samples, 0.01%)</title><rect x="1.5015%" y="821" width="0.0122%" height="15" fill="rgb(235,213,38)" fg:x="1850" fg:w="15"/><text x="1.7515%" y="831.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="1.5015%" y="805" width="0.0122%" height="15" fill="rgb(237,122,38)" fg:x="1850" fg:w="15"/><text x="1.7515%" y="815.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="1.5015%" y="789" width="0.0122%" height="15" fill="rgb(244,218,35)" fg:x="1850" fg:w="15"/><text x="1.7515%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="1.5015%" y="773" width="0.0122%" height="15" fill="rgb(240,68,47)" fg:x="1850" fg:w="15"/><text x="1.7515%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="1.5015%" y="757" width="0.0122%" height="15" fill="rgb(210,16,53)" fg:x="1850" fg:w="15"/><text x="1.7515%" y="767.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="1.5015%" y="741" width="0.0122%" height="15" fill="rgb(235,124,12)" fg:x="1850" fg:w="15"/><text x="1.7515%" y="751.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="1.5015%" y="725" width="0.0122%" height="15" fill="rgb(224,169,11)" fg:x="1850" fg:w="15"/><text x="1.7515%" y="735.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="1.5137%" y="885" width="0.0106%" height="15" fill="rgb(250,166,2)" fg:x="1865" fg:w="13"/><text x="1.7637%" y="895.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="1.5242%" y="885" width="0.0195%" height="15" fill="rgb(242,216,29)" fg:x="1878" fg:w="24"/><text x="1.7742%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="1.5315%" y="869" width="0.0122%" height="15" fill="rgb(230,116,27)" fg:x="1887" fg:w="15"/><text x="1.7815%" y="879.50"></text></g><g><title>[[vdso]] (25 samples, 0.02%)</title><rect x="1.5437%" y="885" width="0.0203%" height="15" fill="rgb(228,99,48)" fg:x="1902" fg:w="25"/><text x="1.7937%" y="895.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.05%)</title><rect x="1.5640%" y="885" width="0.0511%" height="15" fill="rgb(253,11,6)" fg:x="1927" fg:w="63"/><text x="1.8140%" y="895.50"></text></g><g><title>__clock_gettime (109 samples, 0.09%)</title><rect x="1.6151%" y="885" width="0.0885%" height="15" fill="rgb(247,143,39)" fg:x="1990" fg:w="109"/><text x="1.8651%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (14 samples, 0.01%)</title><rect x="1.7117%" y="885" width="0.0114%" height="15" fill="rgb(236,97,10)" fg:x="2109" fg:w="14"/><text x="1.9617%" y="895.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (26 samples, 0.02%)</title><rect x="1.7230%" y="885" width="0.0211%" height="15" fill="rgb(233,208,19)" fg:x="2123" fg:w="26"/><text x="1.9730%" y="895.50"></text></g><g><title>async_executor::State::notify (26 samples, 0.02%)</title><rect x="1.7441%" y="885" width="0.0211%" height="15" fill="rgb(216,164,2)" fg:x="2149" fg:w="26"/><text x="1.9941%" y="895.50"></text></g><g><title>async_executor::Ticker::sleep (20 samples, 0.02%)</title><rect x="1.7653%" y="885" width="0.0162%" height="15" fill="rgb(220,129,5)" fg:x="2175" fg:w="20"/><text x="2.0153%" y="895.50"></text></g><g><title>async_executor::Ticker::wake (30 samples, 0.02%)</title><rect x="1.7815%" y="885" width="0.0243%" height="15" fill="rgb(242,17,10)" fg:x="2195" fg:w="30"/><text x="2.0315%" y="895.50"></text></g><g><title>async_executor::steal (218 samples, 0.18%)</title><rect x="1.8058%" y="885" width="0.1769%" height="15" fill="rgb(242,107,0)" fg:x="2225" fg:w="218"/><text x="2.0558%" y="895.50"></text></g><g><title>async_io::driver::block_on (13 samples, 0.01%)</title><rect x="1.9828%" y="885" width="0.0106%" height="15" fill="rgb(251,28,31)" fg:x="2443" fg:w="13"/><text x="2.2328%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (454 samples, 0.37%)</title><rect x="2.0168%" y="885" width="0.3685%" height="15" fill="rgb(233,223,10)" fg:x="2485" fg:w="454"/><text x="2.2668%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (13 samples, 0.01%)</title><rect x="2.3748%" y="869" width="0.0106%" height="15" fill="rgb(215,21,27)" fg:x="2926" fg:w="13"/><text x="2.6248%" y="879.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="2.3748%" y="853" width="0.0106%" height="15" fill="rgb(232,23,21)" fg:x="2926" fg:w="13"/><text x="2.6248%" y="863.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (51 samples, 0.04%)</title><rect x="2.3853%" y="885" width="0.0414%" height="15" fill="rgb(244,5,23)" fg:x="2939" fg:w="51"/><text x="2.6353%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (69 samples, 0.06%)</title><rect x="2.4267%" y="885" width="0.0560%" height="15" fill="rgb(226,81,46)" fg:x="2990" fg:w="69"/><text x="2.6767%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (23 samples, 0.02%)</title><rect x="2.4827%" y="885" width="0.0187%" height="15" fill="rgb(247,70,30)" fg:x="3059" fg:w="23"/><text x="2.7327%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="2.5054%" y="885" width="0.0252%" height="15" fill="rgb(212,68,19)" fg:x="3087" fg:w="31"/><text x="2.7554%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt; (16 samples, 0.01%)</title><rect x="2.5176%" y="869" width="0.0130%" height="15" fill="rgb(240,187,13)" fg:x="3102" fg:w="16"/><text x="2.7676%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (28 samples, 0.02%)</title><rect x="2.5355%" y="885" width="0.0227%" height="15" fill="rgb(223,113,26)" fg:x="3124" fg:w="28"/><text x="2.7855%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (23 samples, 0.02%)</title><rect x="2.5395%" y="869" width="0.0187%" height="15" fill="rgb(206,192,2)" fg:x="3129" fg:w="23"/><text x="2.7895%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="2.5582%" y="885" width="0.0154%" height="15" fill="rgb(241,108,4)" fg:x="3152" fg:w="19"/><text x="2.8082%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="2.5834%" y="885" width="0.0252%" height="15" fill="rgb(247,173,49)" fg:x="3183" fg:w="31"/><text x="2.8334%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (34 samples, 0.03%)</title><rect x="2.6085%" y="885" width="0.0276%" height="15" fill="rgb(224,114,35)" fg:x="3214" fg:w="34"/><text x="2.8585%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="2.6361%" y="885" width="0.0203%" height="15" fill="rgb(245,159,27)" fg:x="3248" fg:w="25"/><text x="2.8861%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (25 samples, 0.02%)</title><rect x="2.6361%" y="869" width="0.0203%" height="15" fill="rgb(245,172,44)" fg:x="3248" fg:w="25"/><text x="2.8861%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (93 samples, 0.08%)</title><rect x="2.6759%" y="885" width="0.0755%" height="15" fill="rgb(236,23,11)" fg:x="3297" fg:w="93"/><text x="2.9259%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (36 samples, 0.03%)</title><rect x="2.7879%" y="869" width="0.0292%" height="15" fill="rgb(205,117,38)" fg:x="3435" fg:w="36"/><text x="3.0379%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (36 samples, 0.03%)</title><rect x="2.7879%" y="853" width="0.0292%" height="15" fill="rgb(237,72,25)" fg:x="3435" fg:w="36"/><text x="3.0379%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (36 samples, 0.03%)</title><rect x="2.7879%" y="837" width="0.0292%" height="15" fill="rgb(244,70,9)" fg:x="3435" fg:w="36"/><text x="3.0379%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="2.7879%" y="821" width="0.0292%" height="15" fill="rgb(217,125,39)" fg:x="3435" fg:w="36"/><text x="3.0379%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.03%)</title><rect x="2.7879%" y="805" width="0.0292%" height="15" fill="rgb(235,36,10)" fg:x="3435" fg:w="36"/><text x="3.0379%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.03%)</title><rect x="2.7879%" y="789" width="0.0292%" height="15" fill="rgb(251,123,47)" fg:x="3435" fg:w="36"/><text x="3.0379%" y="799.50"></text></g><g><title>__rg_dealloc (36 samples, 0.03%)</title><rect x="2.7879%" y="773" width="0.0292%" height="15" fill="rgb(221,13,13)" fg:x="3435" fg:w="36"/><text x="3.0379%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (36 samples, 0.03%)</title><rect x="2.7879%" y="757" width="0.0292%" height="15" fill="rgb(238,131,9)" fg:x="3435" fg:w="36"/><text x="3.0379%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (91 samples, 0.07%)</title><rect x="2.7562%" y="885" width="0.0739%" height="15" fill="rgb(211,50,8)" fg:x="3396" fg:w="91"/><text x="3.0062%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (16 samples, 0.01%)</title><rect x="2.8171%" y="869" width="0.0130%" height="15" fill="rgb(245,182,24)" fg:x="3471" fg:w="16"/><text x="3.0671%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="2.8487%" y="853" width="0.0154%" height="15" fill="rgb(242,14,37)" fg:x="3510" fg:w="19"/><text x="3.0987%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (19 samples, 0.02%)</title><rect x="2.8487%" y="837" width="0.0154%" height="15" fill="rgb(246,228,12)" fg:x="3510" fg:w="19"/><text x="3.0987%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="2.8487%" y="821" width="0.0154%" height="15" fill="rgb(213,55,15)" fg:x="3510" fg:w="19"/><text x="3.0987%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="2.8487%" y="805" width="0.0154%" height="15" fill="rgb(209,9,3)" fg:x="3510" fg:w="19"/><text x="3.0987%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="2.8487%" y="869" width="0.0170%" height="15" fill="rgb(230,59,30)" fg:x="3510" fg:w="21"/><text x="3.0987%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (55 samples, 0.04%)</title><rect x="2.8301%" y="885" width="0.0446%" height="15" fill="rgb(209,121,21)" fg:x="3487" fg:w="55"/><text x="3.0801%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (47 samples, 0.04%)</title><rect x="2.8747%" y="885" width="0.0381%" height="15" fill="rgb(220,109,13)" fg:x="3542" fg:w="47"/><text x="3.1247%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="2.8958%" y="869" width="0.0170%" height="15" fill="rgb(232,18,1)" fg:x="3568" fg:w="21"/><text x="3.1458%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (21 samples, 0.02%)</title><rect x="2.8958%" y="853" width="0.0170%" height="15" fill="rgb(215,41,42)" fg:x="3568" fg:w="21"/><text x="3.1458%" y="863.50"></text></g><g><title>event_listener::Event::notify (192 samples, 0.16%)</title><rect x="2.9226%" y="885" width="0.1558%" height="15" fill="rgb(224,123,36)" fg:x="3601" fg:w="192"/><text x="3.1726%" y="895.50"></text></g><g><title>event_listener::full_fence (72 samples, 0.06%)</title><rect x="3.0200%" y="869" width="0.0584%" height="15" fill="rgb(240,125,3)" fg:x="3721" fg:w="72"/><text x="3.2700%" y="879.50"></text></g><g><title>event_listener::List::notify (17 samples, 0.01%)</title><rect x="3.0784%" y="885" width="0.0138%" height="15" fill="rgb(205,98,50)" fg:x="3793" fg:w="17"/><text x="3.3284%" y="895.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (72 samples, 0.06%)</title><rect x="3.0922%" y="885" width="0.0584%" height="15" fill="rgb(205,185,37)" fg:x="3810" fg:w="72"/><text x="3.3422%" y="895.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (16 samples, 0.01%)</title><rect x="3.1377%" y="869" width="0.0130%" height="15" fill="rgb(238,207,15)" fg:x="3866" fg:w="16"/><text x="3.3877%" y="879.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (16 samples, 0.01%)</title><rect x="3.1377%" y="853" width="0.0130%" height="15" fill="rgb(213,199,42)" fg:x="3866" fg:w="16"/><text x="3.3877%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="3.1377%" y="837" width="0.0130%" height="15" fill="rgb(235,201,11)" fg:x="3866" fg:w="16"/><text x="3.3877%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (16 samples, 0.01%)</title><rect x="3.1377%" y="821" width="0.0130%" height="15" fill="rgb(207,46,11)" fg:x="3866" fg:w="16"/><text x="3.3877%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="3.1377%" y="805" width="0.0130%" height="15" fill="rgb(241,35,35)" fg:x="3866" fg:w="16"/><text x="3.3877%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (16 samples, 0.01%)</title><rect x="3.1377%" y="789" width="0.0130%" height="15" fill="rgb(243,32,47)" fg:x="3866" fg:w="16"/><text x="3.3877%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (16 samples, 0.01%)</title><rect x="3.1377%" y="773" width="0.0130%" height="15" fill="rgb(247,202,23)" fg:x="3866" fg:w="16"/><text x="3.3877%" y="783.50"></text></g><g><title>parking::Unparker::unpark (31 samples, 0.03%)</title><rect x="3.1507%" y="885" width="0.0252%" height="15" fill="rgb(219,102,11)" fg:x="3882" fg:w="31"/><text x="3.4007%" y="895.50"></text></g><g><title>sn_rust_alloc (72 samples, 0.06%)</title><rect x="3.1791%" y="885" width="0.0584%" height="15" fill="rgb(243,110,44)" fg:x="3917" fg:w="72"/><text x="3.4291%" y="895.50"></text></g><g><title>sn_rust_dealloc (16 samples, 0.01%)</title><rect x="3.2375%" y="885" width="0.0130%" height="15" fill="rgb(222,74,54)" fg:x="3989" fg:w="16"/><text x="3.4875%" y="895.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (18 samples, 0.01%)</title><rect x="3.2554%" y="885" width="0.0146%" height="15" fill="rgb(216,99,12)" fg:x="4011" fg:w="18"/><text x="3.5054%" y="895.50"></text></g><g><title>std::sys::unix::futex::futex_wait (28 samples, 0.02%)</title><rect x="3.2700%" y="885" width="0.0227%" height="15" fill="rgb(226,22,26)" fg:x="4029" fg:w="28"/><text x="3.5200%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (17 samples, 0.01%)</title><rect x="3.2927%" y="885" width="0.0138%" height="15" fill="rgb(217,163,10)" fg:x="4057" fg:w="17"/><text x="3.5427%" y="895.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (74 samples, 0.06%)</title><rect x="3.3073%" y="885" width="0.0601%" height="15" fill="rgb(213,25,53)" fg:x="4075" fg:w="74"/><text x="3.5573%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (64 samples, 0.05%)</title><rect x="3.3674%" y="885" width="0.0519%" height="15" fill="rgb(252,105,26)" fg:x="4149" fg:w="64"/><text x="3.6174%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.02%)</title><rect x="3.3990%" y="869" width="0.0203%" height="15" fill="rgb(220,39,43)" fg:x="4188" fg:w="25"/><text x="3.6490%" y="879.50"></text></g><g><title>syscall (27 samples, 0.02%)</title><rect x="3.4193%" y="885" width="0.0219%" height="15" fill="rgb(229,68,48)" fg:x="4213" fg:w="27"/><text x="3.6693%" y="895.50"></text></g><g><title>tremor_common::time::nanotime (56 samples, 0.05%)</title><rect x="3.4412%" y="885" width="0.0455%" height="15" fill="rgb(252,8,32)" fg:x="4240" fg:w="56"/><text x="3.6912%" y="895.50"></text></g><g><title>std::time::SystemTime::now (31 samples, 0.03%)</title><rect x="3.4615%" y="869" width="0.0252%" height="15" fill="rgb(223,20,43)" fg:x="4265" fg:w="31"/><text x="3.7115%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (31 samples, 0.03%)</title><rect x="3.4615%" y="853" width="0.0252%" height="15" fill="rgb(229,81,49)" fg:x="4265" fg:w="31"/><text x="3.7115%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (31 samples, 0.03%)</title><rect x="3.4615%" y="837" width="0.0252%" height="15" fill="rgb(236,28,36)" fg:x="4265" fg:w="31"/><text x="3.7115%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (28 samples, 0.02%)</title><rect x="3.4972%" y="885" width="0.0227%" height="15" fill="rgb(249,185,26)" fg:x="4309" fg:w="28"/><text x="3.7472%" y="895.50"></text></g><g><title>tremor_runtime::pipeline::maybe_send (40 samples, 0.03%)</title><rect x="3.5273%" y="885" width="0.0325%" height="15" fill="rgb(249,174,33)" fg:x="4346" fg:w="40"/><text x="3.7773%" y="895.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (21 samples, 0.02%)</title><rect x="3.5622%" y="885" width="0.0170%" height="15" fill="rgb(233,201,37)" fg:x="4389" fg:w="21"/><text x="3.8122%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (41 samples, 0.03%)</title><rect x="3.5792%" y="885" width="0.0333%" height="15" fill="rgb(221,78,26)" fg:x="4410" fg:w="41"/><text x="3.8292%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (14 samples, 0.01%)</title><rect x="3.6011%" y="869" width="0.0114%" height="15" fill="rgb(250,127,30)" fg:x="4437" fg:w="14"/><text x="3.8511%" y="879.50"></text></g><g><title>[anon] (4,299 samples, 3.49%)</title><rect x="0.1534%" y="901" width="3.4891%" height="15" fill="rgb(230,49,44)" fg:x="189" fg:w="4299"/><text x="0.4034%" y="911.50">[an..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (21 samples, 0.02%)</title><rect x="3.6255%" y="885" width="0.0170%" height="15" fill="rgb(229,67,23)" fg:x="4467" fg:w="21"/><text x="3.8755%" y="895.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="3.6604%" y="885" width="0.0187%" height="15" fill="rgb(249,83,47)" fg:x="4510" fg:w="23"/><text x="3.9104%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.01%)</title><rect x="3.6806%" y="757" width="0.0146%" height="15" fill="rgb(215,43,3)" fg:x="4535" fg:w="18"/><text x="3.9306%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.01%)</title><rect x="3.6806%" y="741" width="0.0146%" height="15" fill="rgb(238,154,13)" fg:x="4535" fg:w="18"/><text x="3.9306%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.01%)</title><rect x="3.6806%" y="725" width="0.0146%" height="15" fill="rgb(219,56,2)" fg:x="4535" fg:w="18"/><text x="3.9306%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.01%)</title><rect x="3.6806%" y="709" width="0.0146%" height="15" fill="rgb(233,0,4)" fg:x="4535" fg:w="18"/><text x="3.9306%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.01%)</title><rect x="3.6806%" y="693" width="0.0146%" height="15" fill="rgb(235,30,7)" fg:x="4535" fg:w="18"/><text x="3.9306%" y="703.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.01%)</title><rect x="3.6806%" y="677" width="0.0146%" height="15" fill="rgb(250,79,13)" fg:x="4535" fg:w="18"/><text x="3.9306%" y="687.50"></text></g><g><title>__rg_alloc (18 samples, 0.01%)</title><rect x="3.6806%" y="661" width="0.0146%" height="15" fill="rgb(211,146,34)" fg:x="4535" fg:w="18"/><text x="3.9306%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.01%)</title><rect x="3.6806%" y="645" width="0.0146%" height="15" fill="rgb(228,22,38)" fg:x="4535" fg:w="18"/><text x="3.9306%" y="655.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (28 samples, 0.02%)</title><rect x="3.6806%" y="853" width="0.0227%" height="15" fill="rgb(235,168,5)" fg:x="4535" fg:w="28"/><text x="3.9306%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (28 samples, 0.02%)</title><rect x="3.6806%" y="837" width="0.0227%" height="15" fill="rgb(221,155,16)" fg:x="4535" fg:w="28"/><text x="3.9306%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.02%)</title><rect x="3.6806%" y="821" width="0.0227%" height="15" fill="rgb(215,215,53)" fg:x="4535" fg:w="28"/><text x="3.9306%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.02%)</title><rect x="3.6806%" y="805" width="0.0227%" height="15" fill="rgb(223,4,10)" fg:x="4535" fg:w="28"/><text x="3.9306%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.02%)</title><rect x="3.6806%" y="789" width="0.0227%" height="15" fill="rgb(234,103,6)" fg:x="4535" fg:w="28"/><text x="3.9306%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.02%)</title><rect x="3.6806%" y="773" width="0.0227%" height="15" fill="rgb(227,97,0)" fg:x="4535" fg:w="28"/><text x="3.9306%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (54 samples, 0.04%)</title><rect x="3.6790%" y="885" width="0.0438%" height="15" fill="rgb(234,150,53)" fg:x="4533" fg:w="54"/><text x="3.9290%" y="895.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (52 samples, 0.04%)</title><rect x="3.6806%" y="869" width="0.0422%" height="15" fill="rgb(228,201,54)" fg:x="4535" fg:w="52"/><text x="3.9306%" y="879.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (13 samples, 0.01%)</title><rect x="3.7123%" y="853" width="0.0106%" height="15" fill="rgb(222,22,37)" fg:x="4574" fg:w="13"/><text x="3.9623%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="3.7123%" y="837" width="0.0106%" height="15" fill="rgb(237,53,32)" fg:x="4574" fg:w="13"/><text x="3.9623%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="3.7123%" y="821" width="0.0106%" height="15" fill="rgb(233,25,53)" fg:x="4574" fg:w="13"/><text x="3.9623%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="3.7123%" y="805" width="0.0106%" height="15" fill="rgb(210,40,34)" fg:x="4574" fg:w="13"/><text x="3.9623%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="3.7123%" y="789" width="0.0106%" height="15" fill="rgb(241,220,44)" fg:x="4574" fg:w="13"/><text x="3.9623%" y="799.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="3.7229%" y="885" width="0.0162%" height="15" fill="rgb(235,28,35)" fg:x="4587" fg:w="20"/><text x="3.9729%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (33 samples, 0.03%)</title><rect x="3.7513%" y="885" width="0.0268%" height="15" fill="rgb(210,56,17)" fg:x="4622" fg:w="33"/><text x="4.0013%" y="895.50"></text></g><g><title>event_listener::Event::notify (16 samples, 0.01%)</title><rect x="3.7870%" y="885" width="0.0130%" height="15" fill="rgb(224,130,29)" fg:x="4666" fg:w="16"/><text x="4.0370%" y="895.50"></text></g><g><title>event_listener::full_fence (16 samples, 0.01%)</title><rect x="3.7870%" y="869" width="0.0130%" height="15" fill="rgb(235,212,8)" fg:x="4666" fg:w="16"/><text x="4.0370%" y="879.50"></text></g><g><title>[libc-2.31.so] (206 samples, 0.17%)</title><rect x="3.6425%" y="901" width="0.1672%" height="15" fill="rgb(223,33,50)" fg:x="4488" fg:w="206"/><text x="3.8925%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.03%)</title><rect x="3.8113%" y="885" width="0.0317%" height="15" fill="rgb(219,149,13)" fg:x="4696" fg:w="39"/><text x="4.0613%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="3.8430%" y="885" width="0.0179%" height="15" fill="rgb(250,156,29)" fg:x="4735" fg:w="22"/><text x="4.0930%" y="895.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="3.8649%" y="885" width="0.0130%" height="15" fill="rgb(216,193,19)" fg:x="4762" fg:w="16"/><text x="4.1149%" y="895.50"></text></g><g><title>[tremor-main] (108 samples, 0.09%)</title><rect x="3.8097%" y="901" width="0.0877%" height="15" fill="rgb(216,135,14)" fg:x="4694" fg:w="108"/><text x="4.0597%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="3.8973%" y="885" width="0.0106%" height="15" fill="rgb(241,47,5)" fg:x="4802" fg:w="13"/><text x="4.1473%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="3.9079%" y="885" width="0.0308%" height="15" fill="rgb(233,42,35)" fg:x="4815" fg:w="38"/><text x="4.1579%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="3.9923%" y="821" width="0.0219%" height="15" fill="rgb(231,13,6)" fg:x="4919" fg:w="27"/><text x="4.2423%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="3.9923%" y="805" width="0.0219%" height="15" fill="rgb(207,181,40)" fg:x="4919" fg:w="27"/><text x="4.2423%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="3.9923%" y="789" width="0.0219%" height="15" fill="rgb(254,173,49)" fg:x="4919" fg:w="27"/><text x="4.2423%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="3.9923%" y="773" width="0.0219%" height="15" fill="rgb(221,1,38)" fg:x="4919" fg:w="27"/><text x="4.2423%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="3.9923%" y="757" width="0.0219%" height="15" fill="rgb(206,124,46)" fg:x="4919" fg:w="27"/><text x="4.2423%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.01%)</title><rect x="4.0012%" y="741" width="0.0130%" height="15" fill="rgb(249,21,11)" fg:x="4930" fg:w="16"/><text x="4.2512%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="4.0012%" y="725" width="0.0130%" height="15" fill="rgb(222,201,40)" fg:x="4930" fg:w="16"/><text x="4.2512%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (95 samples, 0.08%)</title><rect x="3.9469%" y="885" width="0.0771%" height="15" fill="rgb(235,61,29)" fg:x="4863" fg:w="95"/><text x="4.1969%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.03%)</title><rect x="3.9923%" y="869" width="0.0317%" height="15" fill="rgb(219,207,3)" fg:x="4919" fg:w="39"/><text x="4.2423%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.03%)</title><rect x="3.9923%" y="853" width="0.0317%" height="15" fill="rgb(222,56,46)" fg:x="4919" fg:w="39"/><text x="4.2423%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.03%)</title><rect x="3.9923%" y="837" width="0.0317%" height="15" fill="rgb(239,76,54)" fg:x="4919" fg:w="39"/><text x="4.2423%" y="847.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.06%)</title><rect x="4.0329%" y="885" width="0.0576%" height="15" fill="rgb(231,124,27)" fg:x="4969" fg:w="71"/><text x="4.2829%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (382 samples, 0.31%)</title><rect x="4.2642%" y="405" width="0.3100%" height="15" fill="rgb(249,195,6)" fg:x="5254" fg:w="382"/><text x="4.5142%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (382 samples, 0.31%)</title><rect x="4.2642%" y="389" width="0.3100%" height="15" fill="rgb(237,174,47)" fg:x="5254" fg:w="382"/><text x="4.5142%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (509 samples, 0.41%)</title><rect x="4.5742%" y="405" width="0.4131%" height="15" fill="rgb(206,201,31)" fg:x="5636" fg:w="509"/><text x="4.8242%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (506 samples, 0.41%)</title><rect x="4.5767%" y="389" width="0.4107%" height="15" fill="rgb(231,57,52)" fg:x="5639" fg:w="506"/><text x="4.8267%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (972 samples, 0.79%)</title><rect x="4.2009%" y="437" width="0.7889%" height="15" fill="rgb(248,177,22)" fg:x="5176" fg:w="972"/><text x="4.4509%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (972 samples, 0.79%)</title><rect x="4.2009%" y="421" width="0.7889%" height="15" fill="rgb(215,211,37)" fg:x="5176" fg:w="972"/><text x="4.4509%" y="431.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="5.0036%" y="405" width="0.0122%" height="15" fill="rgb(241,128,51)" fg:x="6165" fg:w="15"/><text x="5.2536%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (109 samples, 0.09%)</title><rect x="5.0036%" y="421" width="0.0885%" height="15" fill="rgb(227,165,31)" fg:x="6165" fg:w="109"/><text x="5.2536%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (94 samples, 0.08%)</title><rect x="5.0157%" y="405" width="0.0763%" height="15" fill="rgb(228,167,24)" fg:x="6180" fg:w="94"/><text x="5.2657%" y="415.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.08%)</title><rect x="5.0157%" y="389" width="0.0763%" height="15" fill="rgb(228,143,12)" fg:x="6180" fg:w="94"/><text x="5.2657%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (92 samples, 0.07%)</title><rect x="5.0174%" y="373" width="0.0747%" height="15" fill="rgb(249,149,8)" fg:x="6182" fg:w="92"/><text x="5.2674%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (92 samples, 0.07%)</title><rect x="5.0174%" y="357" width="0.0747%" height="15" fill="rgb(243,35,44)" fg:x="6182" fg:w="92"/><text x="5.2674%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (92 samples, 0.07%)</title><rect x="5.0174%" y="341" width="0.0747%" height="15" fill="rgb(246,89,9)" fg:x="6182" fg:w="92"/><text x="5.2674%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (92 samples, 0.07%)</title><rect x="5.0174%" y="325" width="0.0747%" height="15" fill="rgb(233,213,13)" fg:x="6182" fg:w="92"/><text x="5.2674%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (64 samples, 0.05%)</title><rect x="5.0920%" y="421" width="0.0519%" height="15" fill="rgb(233,141,41)" fg:x="6274" fg:w="64"/><text x="5.3420%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (64 samples, 0.05%)</title><rect x="5.0920%" y="405" width="0.0519%" height="15" fill="rgb(239,167,4)" fg:x="6274" fg:w="64"/><text x="5.3420%" y="415.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 0.01%)</title><rect x="5.1537%" y="389" width="0.0138%" height="15" fill="rgb(209,217,16)" fg:x="6350" fg:w="17"/><text x="5.4037%" y="399.50"></text></g><g><title>std::sync::poison::Flag::borrow (17 samples, 0.01%)</title><rect x="5.1537%" y="373" width="0.0138%" height="15" fill="rgb(219,88,35)" fg:x="6350" fg:w="17"/><text x="5.4037%" y="383.50"></text></g><g><title>event_listener::Inner::lock (122 samples, 0.10%)</title><rect x="5.1448%" y="421" width="0.0990%" height="15" fill="rgb(220,193,23)" fg:x="6339" fg:w="122"/><text x="5.3948%" y="431.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (111 samples, 0.09%)</title><rect x="5.1537%" y="405" width="0.0901%" height="15" fill="rgb(230,90,52)" fg:x="6350" fg:w="111"/><text x="5.4037%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (94 samples, 0.08%)</title><rect x="5.1675%" y="389" width="0.0763%" height="15" fill="rgb(252,106,19)" fg:x="6367" fg:w="94"/><text x="5.4175%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (94 samples, 0.08%)</title><rect x="5.1675%" y="373" width="0.0763%" height="15" fill="rgb(206,74,20)" fg:x="6367" fg:w="94"/><text x="5.4175%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (93 samples, 0.08%)</title><rect x="5.1683%" y="357" width="0.0755%" height="15" fill="rgb(230,138,44)" fg:x="6368" fg:w="93"/><text x="5.4183%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (93 samples, 0.08%)</title><rect x="5.1683%" y="341" width="0.0755%" height="15" fill="rgb(235,182,43)" fg:x="6368" fg:w="93"/><text x="5.4183%" y="351.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,150 samples, 1.74%)</title><rect x="4.2009%" y="453" width="1.7450%" height="15" fill="rgb(242,16,51)" fg:x="5176" fg:w="2150"/><text x="4.4509%" y="463.50"></text></g><g><title>event_listener::Event::notify (1,178 samples, 0.96%)</title><rect x="4.9898%" y="437" width="0.9561%" height="15" fill="rgb(248,9,4)" fg:x="6148" fg:w="1178"/><text x="5.2398%" y="447.50"></text></g><g><title>event_listener::full_fence (865 samples, 0.70%)</title><rect x="5.2438%" y="421" width="0.7020%" height="15" fill="rgb(210,31,22)" fg:x="6461" fg:w="865"/><text x="5.4938%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (864 samples, 0.70%)</title><rect x="5.2446%" y="405" width="0.7012%" height="15" fill="rgb(239,54,39)" fg:x="6462" fg:w="864"/><text x="5.4946%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (864 samples, 0.70%)</title><rect x="5.2446%" y="389" width="0.7012%" height="15" fill="rgb(230,99,41)" fg:x="6462" fg:w="864"/><text x="5.4946%" y="399.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="869" width="1.8878%" height="15" fill="rgb(253,106,12)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="879.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="853" width="1.8878%" height="15" fill="rgb(213,46,41)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="863.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="837" width="1.8878%" height="15" fill="rgb(215,133,35)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="847.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="821" width="1.8878%" height="15" fill="rgb(213,28,5)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="831.50">a..</text></g><g><title>async_task::runnable::Runnable::run (2,326 samples, 1.89%)</title><rect x="4.2009%" y="805" width="1.8878%" height="15" fill="rgb(215,77,49)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="815.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,326 samples, 1.89%)</title><rect x="4.2009%" y="789" width="1.8878%" height="15" fill="rgb(248,100,22)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="799.50">a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="773" width="1.8878%" height="15" fill="rgb(208,67,9)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="783.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="757" width="1.8878%" height="15" fill="rgb(219,133,21)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="767.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="741" width="1.8878%" height="15" fill="rgb(246,46,29)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="751.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="725" width="1.8878%" height="15" fill="rgb(246,185,52)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="735.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,326 samples, 1.89%)</title><rect x="4.2009%" y="709" width="1.8878%" height="15" fill="rgb(252,136,11)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="719.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,326 samples, 1.89%)</title><rect x="4.2009%" y="693" width="1.8878%" height="15" fill="rgb(219,138,53)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="703.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,326 samples, 1.89%)</title><rect x="4.2009%" y="677" width="1.8878%" height="15" fill="rgb(211,51,23)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="687.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="661" width="1.8878%" height="15" fill="rgb(247,221,28)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="671.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="645" width="1.8878%" height="15" fill="rgb(251,222,45)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="655.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="629" width="1.8878%" height="15" fill="rgb(217,162,53)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="639.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="613" width="1.8878%" height="15" fill="rgb(229,93,14)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="623.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="597" width="1.8878%" height="15" fill="rgb(209,67,49)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="607.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="581" width="1.8878%" height="15" fill="rgb(213,87,29)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="591.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="565" width="1.8878%" height="15" fill="rgb(205,151,52)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="575.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="549" width="1.8878%" height="15" fill="rgb(253,215,39)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="559.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="533" width="1.8878%" height="15" fill="rgb(221,220,41)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="517" width="1.8878%" height="15" fill="rgb(218,133,21)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="527.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="501" width="1.8878%" height="15" fill="rgb(221,193,43)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="511.50">&lt;..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,326 samples, 1.89%)</title><rect x="4.2009%" y="485" width="1.8878%" height="15" fill="rgb(240,128,52)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="495.50">t..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,326 samples, 1.89%)</title><rect x="4.2009%" y="469" width="1.8878%" height="15" fill="rgb(253,114,12)" fg:x="5176" fg:w="2326"/><text x="4.4509%" y="479.50">&lt;..</text></g><g><title>event_listener::Event::notify (176 samples, 0.14%)</title><rect x="5.9458%" y="453" width="0.1428%" height="15" fill="rgb(215,223,47)" fg:x="7326" fg:w="176"/><text x="6.1958%" y="463.50"></text></g><g><title>event_listener::full_fence (172 samples, 0.14%)</title><rect x="5.9491%" y="437" width="0.1396%" height="15" fill="rgb(248,225,23)" fg:x="7330" fg:w="172"/><text x="6.1991%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (171 samples, 0.14%)</title><rect x="5.9499%" y="421" width="0.1388%" height="15" fill="rgb(250,108,0)" fg:x="7331" fg:w="171"/><text x="6.1999%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (171 samples, 0.14%)</title><rect x="5.9499%" y="405" width="0.1388%" height="15" fill="rgb(228,208,7)" fg:x="7331" fg:w="171"/><text x="6.1999%" y="415.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (139 samples, 0.11%)</title><rect x="6.5505%" y="613" width="0.1128%" height="15" fill="rgb(244,45,10)" fg:x="8071" fg:w="139"/><text x="6.8005%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (167 samples, 0.14%)</title><rect x="7.4757%" y="421" width="0.1355%" height="15" fill="rgb(207,125,25)" fg:x="9211" fg:w="167"/><text x="7.7257%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (796 samples, 0.65%)</title><rect x="6.9685%" y="549" width="0.6460%" height="15" fill="rgb(210,195,18)" fg:x="8586" fg:w="796"/><text x="7.2185%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (354 samples, 0.29%)</title><rect x="7.3272%" y="533" width="0.2873%" height="15" fill="rgb(249,80,12)" fg:x="9028" fg:w="354"/><text x="7.5772%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (354 samples, 0.29%)</title><rect x="7.3272%" y="517" width="0.2873%" height="15" fill="rgb(221,65,9)" fg:x="9028" fg:w="354"/><text x="7.5772%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (354 samples, 0.29%)</title><rect x="7.3272%" y="501" width="0.2873%" height="15" fill="rgb(235,49,36)" fg:x="9028" fg:w="354"/><text x="7.5772%" y="511.50"></text></g><g><title>alloc::alloc::alloc (351 samples, 0.28%)</title><rect x="7.3296%" y="485" width="0.2849%" height="15" fill="rgb(225,32,20)" fg:x="9031" fg:w="351"/><text x="7.5796%" y="495.50"></text></g><g><title>__rg_alloc (351 samples, 0.28%)</title><rect x="7.3296%" y="469" width="0.2849%" height="15" fill="rgb(215,141,46)" fg:x="9031" fg:w="351"/><text x="7.5796%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (351 samples, 0.28%)</title><rect x="7.3296%" y="453" width="0.2849%" height="15" fill="rgb(250,160,47)" fg:x="9031" fg:w="351"/><text x="7.5796%" y="463.50"></text></g><g><title>sn_rust_alloc (327 samples, 0.27%)</title><rect x="7.3491%" y="437" width="0.2654%" height="15" fill="rgb(216,222,40)" fg:x="9055" fg:w="327"/><text x="7.5991%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,370 samples, 1.11%)</title><rect x="6.5107%" y="629" width="1.1119%" height="15" fill="rgb(234,217,39)" fg:x="8022" fg:w="1370"/><text x="6.7607%" y="639.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,182 samples, 0.96%)</title><rect x="6.6633%" y="613" width="0.9593%" height="15" fill="rgb(207,178,40)" fg:x="8210" fg:w="1182"/><text x="6.9133%" y="623.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (826 samples, 0.67%)</title><rect x="6.9522%" y="597" width="0.6704%" height="15" fill="rgb(221,136,13)" fg:x="8566" fg:w="826"/><text x="7.2022%" y="607.50"></text></g><g><title>value_trait::Builder::object (806 samples, 0.65%)</title><rect x="6.9685%" y="581" width="0.6542%" height="15" fill="rgb(249,199,10)" fg:x="8586" fg:w="806"/><text x="7.2185%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (806 samples, 0.65%)</title><rect x="6.9685%" y="565" width="0.6542%" height="15" fill="rgb(249,222,13)" fg:x="8586" fg:w="806"/><text x="7.2185%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (14 samples, 0.01%)</title><rect x="7.6226%" y="629" width="0.0114%" height="15" fill="rgb(244,185,38)" fg:x="9392" fg:w="14"/><text x="7.8726%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="7.6226%" y="613" width="0.0114%" height="15" fill="rgb(236,202,9)" fg:x="9392" fg:w="14"/><text x="7.8726%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="7.6226%" y="597" width="0.0114%" height="15" fill="rgb(250,229,37)" fg:x="9392" fg:w="14"/><text x="7.8726%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="7.6226%" y="581" width="0.0114%" height="15" fill="rgb(206,174,23)" fg:x="9392" fg:w="14"/><text x="7.8726%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="7.6340%" y="613" width="0.0122%" height="15" fill="rgb(211,33,43)" fg:x="9406" fg:w="15"/><text x="7.8840%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="7.6738%" y="501" width="0.0130%" height="15" fill="rgb(245,58,50)" fg:x="9455" fg:w="16"/><text x="7.9238%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (16 samples, 0.01%)</title><rect x="7.6738%" y="485" width="0.0130%" height="15" fill="rgb(244,68,36)" fg:x="9455" fg:w="16"/><text x="7.9238%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (54 samples, 0.04%)</title><rect x="7.6462%" y="597" width="0.0438%" height="15" fill="rgb(232,229,15)" fg:x="9421" fg:w="54"/><text x="7.8962%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (36 samples, 0.03%)</title><rect x="7.6608%" y="581" width="0.0292%" height="15" fill="rgb(254,30,23)" fg:x="9439" fg:w="36"/><text x="7.9108%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="7.6640%" y="565" width="0.0260%" height="15" fill="rgb(235,160,14)" fg:x="9443" fg:w="32"/><text x="7.9140%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="7.6640%" y="549" width="0.0260%" height="15" fill="rgb(212,155,44)" fg:x="9443" fg:w="32"/><text x="7.9140%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (20 samples, 0.02%)</title><rect x="7.6738%" y="533" width="0.0162%" height="15" fill="rgb(226,2,50)" fg:x="9455" fg:w="20"/><text x="7.9238%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (20 samples, 0.02%)</title><rect x="7.6738%" y="517" width="0.0162%" height="15" fill="rgb(234,177,6)" fg:x="9455" fg:w="20"/><text x="7.9238%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (116 samples, 0.09%)</title><rect x="7.6340%" y="629" width="0.0941%" height="15" fill="rgb(217,24,9)" fg:x="9406" fg:w="116"/><text x="7.8840%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (101 samples, 0.08%)</title><rect x="7.6462%" y="613" width="0.0820%" height="15" fill="rgb(220,13,46)" fg:x="9421" fg:w="101"/><text x="7.8962%" y="623.50"></text></g><g><title>sn_rust_dealloc (47 samples, 0.04%)</title><rect x="7.6900%" y="597" width="0.0381%" height="15" fill="rgb(239,221,27)" fg:x="9475" fg:w="47"/><text x="7.9400%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="7.7492%" y="533" width="0.0138%" height="15" fill="rgb(222,198,25)" fg:x="9548" fg:w="17"/><text x="7.9992%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (17 samples, 0.01%)</title><rect x="7.7492%" y="517" width="0.0138%" height="15" fill="rgb(211,99,13)" fg:x="9548" fg:w="17"/><text x="7.9992%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (54 samples, 0.04%)</title><rect x="7.7281%" y="629" width="0.0438%" height="15" fill="rgb(232,111,31)" fg:x="9522" fg:w="54"/><text x="7.9781%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (46 samples, 0.04%)</title><rect x="7.7346%" y="613" width="0.0373%" height="15" fill="rgb(245,82,37)" fg:x="9530" fg:w="46"/><text x="7.9846%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="7.7460%" y="597" width="0.0260%" height="15" fill="rgb(227,149,46)" fg:x="9544" fg:w="32"/><text x="7.9960%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="7.7460%" y="581" width="0.0260%" height="15" fill="rgb(218,36,50)" fg:x="9544" fg:w="32"/><text x="7.9960%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (28 samples, 0.02%)</title><rect x="7.7492%" y="565" width="0.0227%" height="15" fill="rgb(226,80,48)" fg:x="9548" fg:w="28"/><text x="7.9992%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (28 samples, 0.02%)</title><rect x="7.7492%" y="549" width="0.0227%" height="15" fill="rgb(238,224,15)" fg:x="9548" fg:w="28"/><text x="7.9992%" y="559.50"></text></g><g><title>sn_rust_dealloc (41 samples, 0.03%)</title><rect x="7.7720%" y="629" width="0.0333%" height="15" fill="rgb(241,136,10)" fg:x="9576" fg:w="41"/><text x="8.0220%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (2,128 samples, 1.73%)</title><rect x="6.0887%" y="645" width="1.7271%" height="15" fill="rgb(208,32,45)" fg:x="7502" fg:w="2128"/><text x="6.3387%" y="655.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (13 samples, 0.01%)</title><rect x="7.8052%" y="629" width="0.0106%" height="15" fill="rgb(207,135,9)" fg:x="9617" fg:w="13"/><text x="8.0552%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (86 samples, 0.07%)</title><rect x="7.8523%" y="629" width="0.0698%" height="15" fill="rgb(206,86,44)" fg:x="9675" fg:w="86"/><text x="8.1023%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.07%)</title><rect x="7.8523%" y="613" width="0.0698%" height="15" fill="rgb(245,177,15)" fg:x="9675" fg:w="86"/><text x="8.1023%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.07%)</title><rect x="7.8523%" y="597" width="0.0698%" height="15" fill="rgb(206,64,50)" fg:x="9675" fg:w="86"/><text x="8.1023%" y="607.50"></text></g><g><title>alloc::alloc::alloc (86 samples, 0.07%)</title><rect x="7.8523%" y="581" width="0.0698%" height="15" fill="rgb(234,36,40)" fg:x="9675" fg:w="86"/><text x="8.1023%" y="591.50"></text></g><g><title>__rg_alloc (86 samples, 0.07%)</title><rect x="7.8523%" y="565" width="0.0698%" height="15" fill="rgb(213,64,8)" fg:x="9675" fg:w="86"/><text x="8.1023%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (86 samples, 0.07%)</title><rect x="7.8523%" y="549" width="0.0698%" height="15" fill="rgb(210,75,36)" fg:x="9675" fg:w="86"/><text x="8.1023%" y="559.50"></text></g><g><title>sn_rust_alloc (86 samples, 0.07%)</title><rect x="7.8523%" y="533" width="0.0698%" height="15" fill="rgb(229,88,21)" fg:x="9675" fg:w="86"/><text x="8.1023%" y="543.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (35 samples, 0.03%)</title><rect x="7.8937%" y="517" width="0.0284%" height="15" fill="rgb(252,204,47)" fg:x="9726" fg:w="35"/><text x="8.1437%" y="527.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (155 samples, 0.13%)</title><rect x="7.8158%" y="645" width="0.1258%" height="15" fill="rgb(208,77,27)" fg:x="9630" fg:w="155"/><text x="8.0658%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (181 samples, 0.15%)</title><rect x="8.2963%" y="629" width="0.1469%" height="15" fill="rgb(221,76,26)" fg:x="10222" fg:w="181"/><text x="8.5463%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (70 samples, 0.06%)</title><rect x="8.4432%" y="629" width="0.0568%" height="15" fill="rgb(225,139,18)" fg:x="10403" fg:w="70"/><text x="8.6932%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.06%)</title><rect x="8.4432%" y="613" width="0.0568%" height="15" fill="rgb(230,137,11)" fg:x="10403" fg:w="70"/><text x="8.6932%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.06%)</title><rect x="8.4432%" y="597" width="0.0568%" height="15" fill="rgb(212,28,1)" fg:x="10403" fg:w="70"/><text x="8.6932%" y="607.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.05%)</title><rect x="8.4464%" y="581" width="0.0536%" height="15" fill="rgb(248,164,17)" fg:x="10407" fg:w="66"/><text x="8.6964%" y="591.50"></text></g><g><title>__rg_alloc (66 samples, 0.05%)</title><rect x="8.4464%" y="565" width="0.0536%" height="15" fill="rgb(222,171,42)" fg:x="10407" fg:w="66"/><text x="8.6964%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (66 samples, 0.05%)</title><rect x="8.4464%" y="549" width="0.0536%" height="15" fill="rgb(243,84,45)" fg:x="10407" fg:w="66"/><text x="8.6964%" y="559.50"></text></g><g><title>sn_rust_alloc (59 samples, 0.05%)</title><rect x="8.4521%" y="533" width="0.0479%" height="15" fill="rgb(252,49,23)" fg:x="10414" fg:w="59"/><text x="8.7021%" y="543.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (26 samples, 0.02%)</title><rect x="8.4789%" y="517" width="0.0211%" height="15" fill="rgb(215,19,7)" fg:x="10447" fg:w="26"/><text x="8.7289%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (77 samples, 0.06%)</title><rect x="8.5544%" y="501" width="0.0625%" height="15" fill="rgb(238,81,41)" fg:x="10540" fg:w="77"/><text x="8.8044%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (145 samples, 0.12%)</title><rect x="8.5000%" y="629" width="0.1177%" height="15" fill="rgb(210,199,37)" fg:x="10473" fg:w="145"/><text x="8.7500%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (132 samples, 0.11%)</title><rect x="8.5105%" y="613" width="0.1071%" height="15" fill="rgb(244,192,49)" fg:x="10486" fg:w="132"/><text x="8.7605%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (132 samples, 0.11%)</title><rect x="8.5105%" y="597" width="0.1071%" height="15" fill="rgb(226,211,11)" fg:x="10486" fg:w="132"/><text x="8.7605%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (132 samples, 0.11%)</title><rect x="8.5105%" y="581" width="0.1071%" height="15" fill="rgb(236,162,54)" fg:x="10486" fg:w="132"/><text x="8.7605%" y="591.50"></text></g><g><title>alloc::alloc::alloc (132 samples, 0.11%)</title><rect x="8.5105%" y="565" width="0.1071%" height="15" fill="rgb(220,229,9)" fg:x="10486" fg:w="132"/><text x="8.7605%" y="575.50"></text></g><g><title>__rg_alloc (132 samples, 0.11%)</title><rect x="8.5105%" y="549" width="0.1071%" height="15" fill="rgb(250,87,22)" fg:x="10486" fg:w="132"/><text x="8.7605%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (132 samples, 0.11%)</title><rect x="8.5105%" y="533" width="0.1071%" height="15" fill="rgb(239,43,17)" fg:x="10486" fg:w="132"/><text x="8.7605%" y="543.50"></text></g><g><title>sn_rust_alloc (131 samples, 0.11%)</title><rect x="8.5113%" y="517" width="0.1063%" height="15" fill="rgb(231,177,25)" fg:x="10487" fg:w="131"/><text x="8.7613%" y="527.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (17 samples, 0.01%)</title><rect x="8.9269%" y="613" width="0.0138%" height="15" fill="rgb(219,179,1)" fg:x="10999" fg:w="17"/><text x="9.1769%" y="623.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (220 samples, 0.18%)</title><rect x="8.9626%" y="565" width="0.1786%" height="15" fill="rgb(238,219,53)" fg:x="11043" fg:w="220"/><text x="9.2126%" y="575.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (187 samples, 0.15%)</title><rect x="8.9894%" y="549" width="0.1518%" height="15" fill="rgb(232,167,36)" fg:x="11076" fg:w="187"/><text x="9.2394%" y="559.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (185 samples, 0.15%)</title><rect x="8.9910%" y="533" width="0.1501%" height="15" fill="rgb(244,19,51)" fg:x="11078" fg:w="185"/><text x="9.2410%" y="543.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (267 samples, 0.22%)</title><rect x="8.9626%" y="581" width="0.2167%" height="15" fill="rgb(224,6,22)" fg:x="11043" fg:w="267"/><text x="9.2126%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (47 samples, 0.04%)</title><rect x="9.1412%" y="565" width="0.0381%" height="15" fill="rgb(224,145,5)" fg:x="11263" fg:w="47"/><text x="9.3912%" y="575.50"></text></g><g><title>core::ptr::write (47 samples, 0.04%)</title><rect x="9.1412%" y="549" width="0.0381%" height="15" fill="rgb(234,130,49)" fg:x="11263" fg:w="47"/><text x="9.3912%" y="559.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (338 samples, 0.27%)</title><rect x="8.9407%" y="613" width="0.2743%" height="15" fill="rgb(254,6,2)" fg:x="11016" fg:w="338"/><text x="9.1907%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (318 samples, 0.26%)</title><rect x="8.9569%" y="597" width="0.2581%" height="15" fill="rgb(208,96,46)" fg:x="11036" fg:w="318"/><text x="9.2069%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (44 samples, 0.04%)</title><rect x="9.1793%" y="581" width="0.0357%" height="15" fill="rgb(239,3,39)" fg:x="11310" fg:w="44"/><text x="9.4293%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (44 samples, 0.04%)</title><rect x="9.1793%" y="565" width="0.0357%" height="15" fill="rgb(233,210,1)" fg:x="11310" fg:w="44"/><text x="9.4293%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.04%)</title><rect x="9.1793%" y="549" width="0.0357%" height="15" fill="rgb(244,137,37)" fg:x="11310" fg:w="44"/><text x="9.4293%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.04%)</title><rect x="9.1793%" y="533" width="0.0357%" height="15" fill="rgb(240,136,2)" fg:x="11310" fg:w="44"/><text x="9.4293%" y="543.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.03%)</title><rect x="9.1801%" y="517" width="0.0349%" height="15" fill="rgb(239,18,37)" fg:x="11311" fg:w="43"/><text x="9.4301%" y="527.50"></text></g><g><title>__rg_alloc (43 samples, 0.03%)</title><rect x="9.1801%" y="501" width="0.0349%" height="15" fill="rgb(218,185,22)" fg:x="11311" fg:w="43"/><text x="9.4301%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (43 samples, 0.03%)</title><rect x="9.1801%" y="485" width="0.0349%" height="15" fill="rgb(225,218,4)" fg:x="11311" fg:w="43"/><text x="9.4301%" y="495.50"></text></g><g><title>sn_rust_alloc (43 samples, 0.03%)</title><rect x="9.1801%" y="469" width="0.0349%" height="15" fill="rgb(230,182,32)" fg:x="11311" fg:w="43"/><text x="9.4301%" y="479.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (4,149 samples, 3.37%)</title><rect x="6.0887%" y="741" width="3.3674%" height="15" fill="rgb(242,56,43)" fg:x="7502" fg:w="4149"/><text x="6.3387%" y="751.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,149 samples, 3.37%)</title><rect x="6.0887%" y="725" width="3.3674%" height="15" fill="rgb(233,99,24)" fg:x="7502" fg:w="4149"/><text x="6.3387%" y="735.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (4,149 samples, 3.37%)</title><rect x="6.0887%" y="709" width="3.3674%" height="15" fill="rgb(234,209,42)" fg:x="7502" fg:w="4149"/><text x="6.3387%" y="719.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,149 samples, 3.37%)</title><rect x="6.0887%" y="693" width="3.3674%" height="15" fill="rgb(227,7,12)" fg:x="7502" fg:w="4149"/><text x="6.3387%" y="703.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (4,149 samples, 3.37%)</title><rect x="6.0887%" y="677" width="3.3674%" height="15" fill="rgb(245,203,43)" fg:x="7502" fg:w="4149"/><text x="6.3387%" y="687.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,149 samples, 3.37%)</title><rect x="6.0887%" y="661" width="3.3674%" height="15" fill="rgb(238,205,33)" fg:x="7502" fg:w="4149"/><text x="6.3387%" y="671.50">tre..</text></g><g><title>tremor_script::srs::EventPayload::try_new (1,866 samples, 1.51%)</title><rect x="7.9416%" y="645" width="1.5145%" height="15" fill="rgb(231,56,7)" fg:x="9785" fg:w="1866"/><text x="8.1916%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,026 samples, 0.83%)</title><rect x="8.6233%" y="629" width="0.8327%" height="15" fill="rgb(244,186,29)" fg:x="10625" fg:w="1026"/><text x="8.8733%" y="639.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (297 samples, 0.24%)</title><rect x="9.2150%" y="613" width="0.2410%" height="15" fill="rgb(234,111,31)" fg:x="11354" fg:w="297"/><text x="9.4650%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (51 samples, 0.04%)</title><rect x="9.6208%" y="565" width="0.0414%" height="15" fill="rgb(241,149,10)" fg:x="11854" fg:w="51"/><text x="9.8708%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (51 samples, 0.04%)</title><rect x="9.6208%" y="549" width="0.0414%" height="15" fill="rgb(249,206,44)" fg:x="11854" fg:w="51"/><text x="9.8708%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (57 samples, 0.05%)</title><rect x="9.6168%" y="597" width="0.0463%" height="15" fill="rgb(251,153,30)" fg:x="11849" fg:w="57"/><text x="9.8668%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (52 samples, 0.04%)</title><rect x="9.6208%" y="581" width="0.0422%" height="15" fill="rgb(239,152,38)" fg:x="11854" fg:w="52"/><text x="9.8708%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (20 samples, 0.02%)</title><rect x="9.6671%" y="597" width="0.0162%" height="15" fill="rgb(249,139,47)" fg:x="11911" fg:w="20"/><text x="9.9171%" y="607.50"></text></g><g><title>core::mem::drop (54 samples, 0.04%)</title><rect x="9.6833%" y="597" width="0.0438%" height="15" fill="rgb(244,64,35)" fg:x="11931" fg:w="54"/><text x="9.9333%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (54 samples, 0.04%)</title><rect x="9.6833%" y="581" width="0.0438%" height="15" fill="rgb(216,46,15)" fg:x="11931" fg:w="54"/><text x="9.9333%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (49 samples, 0.04%)</title><rect x="9.6874%" y="565" width="0.0398%" height="15" fill="rgb(250,74,19)" fg:x="11936" fg:w="49"/><text x="9.9374%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.04%)</title><rect x="9.6874%" y="549" width="0.0398%" height="15" fill="rgb(249,42,33)" fg:x="11936" fg:w="49"/><text x="9.9374%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (43 samples, 0.03%)</title><rect x="9.6922%" y="533" width="0.0349%" height="15" fill="rgb(242,149,17)" fg:x="11942" fg:w="43"/><text x="9.9422%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (43 samples, 0.03%)</title><rect x="9.6922%" y="517" width="0.0349%" height="15" fill="rgb(244,29,21)" fg:x="11942" fg:w="43"/><text x="9.9422%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (43 samples, 0.03%)</title><rect x="9.6922%" y="501" width="0.0349%" height="15" fill="rgb(220,130,37)" fg:x="11942" fg:w="43"/><text x="9.9422%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (43 samples, 0.03%)</title><rect x="9.6922%" y="485" width="0.0349%" height="15" fill="rgb(211,67,2)" fg:x="11942" fg:w="43"/><text x="9.9422%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (74 samples, 0.06%)</title><rect x="9.7271%" y="597" width="0.0601%" height="15" fill="rgb(235,68,52)" fg:x="11985" fg:w="74"/><text x="9.9771%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (65 samples, 0.05%)</title><rect x="9.7344%" y="581" width="0.0528%" height="15" fill="rgb(246,142,3)" fg:x="11994" fg:w="65"/><text x="9.9844%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.05%)</title><rect x="9.7344%" y="565" width="0.0528%" height="15" fill="rgb(241,25,7)" fg:x="11994" fg:w="65"/><text x="9.9844%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (64 samples, 0.05%)</title><rect x="9.7353%" y="549" width="0.0519%" height="15" fill="rgb(242,119,39)" fg:x="11995" fg:w="64"/><text x="9.9853%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (64 samples, 0.05%)</title><rect x="9.7353%" y="533" width="0.0519%" height="15" fill="rgb(241,98,45)" fg:x="11995" fg:w="64"/><text x="9.9853%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (64 samples, 0.05%)</title><rect x="9.7353%" y="517" width="0.0519%" height="15" fill="rgb(254,28,30)" fg:x="11995" fg:w="64"/><text x="9.9853%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (64 samples, 0.05%)</title><rect x="9.7353%" y="501" width="0.0519%" height="15" fill="rgb(241,142,54)" fg:x="11995" fg:w="64"/><text x="9.9853%" y="511.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="9.7937%" y="565" width="0.0162%" height="15" fill="rgb(222,85,15)" fg:x="12067" fg:w="20"/><text x="10.0437%" y="575.50"></text></g><g><title>std::sync::poison::Flag::borrow (20 samples, 0.02%)</title><rect x="9.7937%" y="549" width="0.0162%" height="15" fill="rgb(210,85,47)" fg:x="12067" fg:w="20"/><text x="10.0437%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (115 samples, 0.09%)</title><rect x="9.8124%" y="533" width="0.0933%" height="15" fill="rgb(224,206,25)" fg:x="12090" fg:w="115"/><text x="10.0624%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (115 samples, 0.09%)</title><rect x="9.8124%" y="517" width="0.0933%" height="15" fill="rgb(243,201,19)" fg:x="12090" fg:w="115"/><text x="10.0624%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (67 samples, 0.05%)</title><rect x="9.9154%" y="517" width="0.0544%" height="15" fill="rgb(236,59,4)" fg:x="12217" fg:w="67"/><text x="10.1654%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (67 samples, 0.05%)</title><rect x="9.9154%" y="501" width="0.0544%" height="15" fill="rgb(254,179,45)" fg:x="12217" fg:w="67"/><text x="10.1654%" y="511.50"></text></g><g><title>core::hint::spin_loop (1,610 samples, 1.31%)</title><rect x="9.9820%" y="501" width="1.3067%" height="15" fill="rgb(226,14,10)" fg:x="12299" fg:w="1610"/><text x="10.2320%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,610 samples, 1.31%)</title><rect x="9.9820%" y="485" width="1.3067%" height="15" fill="rgb(244,27,41)" fg:x="12299" fg:w="1610"/><text x="10.2320%" y="495.50"></text></g><g><title>event_listener::Inner::lock (1,945 samples, 1.58%)</title><rect x="9.7896%" y="597" width="1.5786%" height="15" fill="rgb(235,35,32)" fg:x="12062" fg:w="1945"/><text x="10.0396%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,940 samples, 1.57%)</title><rect x="9.7937%" y="581" width="1.5745%" height="15" fill="rgb(218,68,31)" fg:x="12067" fg:w="1940"/><text x="10.0437%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,920 samples, 1.56%)</title><rect x="9.8099%" y="565" width="1.5583%" height="15" fill="rgb(207,120,37)" fg:x="12087" fg:w="1920"/><text x="10.0599%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,920 samples, 1.56%)</title><rect x="9.8099%" y="549" width="1.5583%" height="15" fill="rgb(227,98,0)" fg:x="12087" fg:w="1920"/><text x="10.0599%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (1,802 samples, 1.46%)</title><rect x="9.9057%" y="533" width="1.4625%" height="15" fill="rgb(207,7,3)" fg:x="12205" fg:w="1802"/><text x="10.1557%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (1,722 samples, 1.40%)</title><rect x="9.9706%" y="517" width="1.3976%" height="15" fill="rgb(206,98,19)" fg:x="12285" fg:w="1722"/><text x="10.2206%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (98 samples, 0.08%)</title><rect x="11.2887%" y="501" width="0.0795%" height="15" fill="rgb(217,5,26)" fg:x="13909" fg:w="98"/><text x="11.5387%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (98 samples, 0.08%)</title><rect x="11.2887%" y="485" width="0.0795%" height="15" fill="rgb(235,190,38)" fg:x="13909" fg:w="98"/><text x="11.5387%" y="495.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,265 samples, 1.84%)</title><rect x="9.5973%" y="613" width="1.8383%" height="15" fill="rgb(247,86,24)" fg:x="11825" fg:w="2265"/><text x="9.8473%" y="623.50">&lt;..</text></g><g><title>event_listener::List::remove (83 samples, 0.07%)</title><rect x="11.3682%" y="597" width="0.0674%" height="15" fill="rgb(205,101,16)" fg:x="14007" fg:w="83"/><text x="11.6182%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (57 samples, 0.05%)</title><rect x="11.3893%" y="581" width="0.0463%" height="15" fill="rgb(246,168,33)" fg:x="14033" fg:w="57"/><text x="11.6393%" y="591.50"></text></g><g><title>core::mem::replace (57 samples, 0.05%)</title><rect x="11.3893%" y="565" width="0.0463%" height="15" fill="rgb(231,114,1)" fg:x="14033" fg:w="57"/><text x="11.6393%" y="575.50"></text></g><g><title>core::ptr::read (56 samples, 0.05%)</title><rect x="11.3901%" y="549" width="0.0455%" height="15" fill="rgb(207,184,53)" fg:x="14034" fg:w="56"/><text x="11.6401%" y="559.50"></text></g><g><title>concurrent_queue::full_fence (160 samples, 0.13%)</title><rect x="11.6636%" y="565" width="0.1299%" height="15" fill="rgb(224,95,51)" fg:x="14371" fg:w="160"/><text x="11.9136%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (153 samples, 0.12%)</title><rect x="11.6693%" y="549" width="0.1242%" height="15" fill="rgb(212,188,45)" fg:x="14378" fg:w="153"/><text x="11.9193%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (153 samples, 0.12%)</title><rect x="11.6693%" y="533" width="0.1242%" height="15" fill="rgb(223,154,38)" fg:x="14378" fg:w="153"/><text x="11.9193%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (153 samples, 0.12%)</title><rect x="11.6693%" y="517" width="0.1242%" height="15" fill="rgb(251,22,52)" fg:x="14378" fg:w="153"/><text x="11.9193%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (251 samples, 0.20%)</title><rect x="11.7959%" y="565" width="0.2037%" height="15" fill="rgb(229,209,22)" fg:x="14534" fg:w="251"/><text x="12.0459%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (251 samples, 0.20%)</title><rect x="11.7959%" y="549" width="0.2037%" height="15" fill="rgb(234,138,34)" fg:x="14534" fg:w="251"/><text x="12.0459%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,237 samples, 1.00%)</title><rect x="11.4745%" y="597" width="1.0040%" height="15" fill="rgb(212,95,11)" fg:x="14138" fg:w="1237"/><text x="11.7245%" y="607.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,185 samples, 0.96%)</title><rect x="11.5167%" y="581" width="0.9618%" height="15" fill="rgb(240,179,47)" fg:x="14190" fg:w="1185"/><text x="11.7667%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (590 samples, 0.48%)</title><rect x="11.9996%" y="565" width="0.4788%" height="15" fill="rgb(240,163,11)" fg:x="14785" fg:w="590"/><text x="12.2496%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (589 samples, 0.48%)</title><rect x="12.0005%" y="549" width="0.4780%" height="15" fill="rgb(236,37,12)" fg:x="14786" fg:w="589"/><text x="12.2505%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,562 samples, 2.08%)</title><rect x="11.4356%" y="613" width="2.0793%" height="15" fill="rgb(232,164,16)" fg:x="14090" fg:w="2562"/><text x="11.6856%" y="623.50">a..</text></g><g><title>event_listener::Event::notify (1,277 samples, 1.04%)</title><rect x="12.4785%" y="597" width="1.0364%" height="15" fill="rgb(244,205,15)" fg:x="15375" fg:w="1277"/><text x="12.7285%" y="607.50"></text></g><g><title>event_listener::full_fence (1,263 samples, 1.03%)</title><rect x="12.4899%" y="581" width="1.0251%" height="15" fill="rgb(223,117,47)" fg:x="15389" fg:w="1263"/><text x="12.7399%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,260 samples, 1.02%)</title><rect x="12.4923%" y="565" width="1.0226%" height="15" fill="rgb(244,107,35)" fg:x="15392" fg:w="1260"/><text x="12.7423%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,260 samples, 1.02%)</title><rect x="12.4923%" y="549" width="1.0226%" height="15" fill="rgb(205,140,8)" fg:x="15392" fg:w="1260"/><text x="12.7423%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.01%)</title><rect x="13.5149%" y="613" width="0.0130%" height="15" fill="rgb(228,84,46)" fg:x="16652" fg:w="16"/><text x="13.7649%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (37 samples, 0.03%)</title><rect x="13.5393%" y="565" width="0.0300%" height="15" fill="rgb(254,188,9)" fg:x="16682" fg:w="37"/><text x="13.7893%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (36 samples, 0.03%)</title><rect x="13.5401%" y="549" width="0.0292%" height="15" fill="rgb(206,112,54)" fg:x="16683" fg:w="36"/><text x="13.7901%" y="559.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="13.5401%" y="533" width="0.0292%" height="15" fill="rgb(216,84,49)" fg:x="16683" fg:w="36"/><text x="13.7901%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.03%)</title><rect x="13.5417%" y="517" width="0.0276%" height="15" fill="rgb(214,194,35)" fg:x="16685" fg:w="34"/><text x="13.7917%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (34 samples, 0.03%)</title><rect x="13.5417%" y="501" width="0.0276%" height="15" fill="rgb(249,28,3)" fg:x="16685" fg:w="34"/><text x="13.7917%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (34 samples, 0.03%)</title><rect x="13.5417%" y="485" width="0.0276%" height="15" fill="rgb(222,56,52)" fg:x="16685" fg:w="34"/><text x="13.7917%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (34 samples, 0.03%)</title><rect x="13.5417%" y="469" width="0.0276%" height="15" fill="rgb(245,217,50)" fg:x="16685" fg:w="34"/><text x="13.7917%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (62 samples, 0.05%)</title><rect x="13.5774%" y="501" width="0.0503%" height="15" fill="rgb(213,201,24)" fg:x="16729" fg:w="62"/><text x="13.8274%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (62 samples, 0.05%)</title><rect x="13.5774%" y="485" width="0.0503%" height="15" fill="rgb(248,116,28)" fg:x="16729" fg:w="62"/><text x="13.8274%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (35 samples, 0.03%)</title><rect x="13.6294%" y="485" width="0.0284%" height="15" fill="rgb(219,72,43)" fg:x="16793" fg:w="35"/><text x="13.8794%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="13.6294%" y="469" width="0.0284%" height="15" fill="rgb(209,138,14)" fg:x="16793" fg:w="35"/><text x="13.8794%" y="479.50"></text></g><g><title>core::hint::spin_loop (26 samples, 0.02%)</title><rect x="13.6586%" y="469" width="0.0211%" height="15" fill="rgb(222,18,33)" fg:x="16829" fg:w="26"/><text x="13.9086%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (26 samples, 0.02%)</title><rect x="13.6586%" y="453" width="0.0211%" height="15" fill="rgb(213,199,7)" fg:x="16829" fg:w="26"/><text x="13.9086%" y="463.50"></text></g><g><title>event_listener::Inner::lock (185 samples, 0.15%)</title><rect x="13.5709%" y="565" width="0.1501%" height="15" fill="rgb(250,110,10)" fg:x="16721" fg:w="185"/><text x="13.8209%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (184 samples, 0.15%)</title><rect x="13.5717%" y="549" width="0.1493%" height="15" fill="rgb(248,123,6)" fg:x="16722" fg:w="184"/><text x="13.8217%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (178 samples, 0.14%)</title><rect x="13.5766%" y="533" width="0.1445%" height="15" fill="rgb(206,91,31)" fg:x="16728" fg:w="178"/><text x="13.8266%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (178 samples, 0.14%)</title><rect x="13.5766%" y="517" width="0.1445%" height="15" fill="rgb(211,154,13)" fg:x="16728" fg:w="178"/><text x="13.8266%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (115 samples, 0.09%)</title><rect x="13.6277%" y="501" width="0.0933%" height="15" fill="rgb(225,148,7)" fg:x="16791" fg:w="115"/><text x="13.8777%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (78 samples, 0.06%)</title><rect x="13.6578%" y="485" width="0.0633%" height="15" fill="rgb(220,160,43)" fg:x="16828" fg:w="78"/><text x="13.9078%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (51 samples, 0.04%)</title><rect x="13.6797%" y="469" width="0.0414%" height="15" fill="rgb(213,52,39)" fg:x="16855" fg:w="51"/><text x="13.9297%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (51 samples, 0.04%)</title><rect x="13.6797%" y="453" width="0.0414%" height="15" fill="rgb(243,137,7)" fg:x="16855" fg:w="51"/><text x="13.9297%" y="463.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (248 samples, 0.20%)</title><rect x="13.5352%" y="581" width="0.2013%" height="15" fill="rgb(230,79,13)" fg:x="16677" fg:w="248"/><text x="13.7852%" y="591.50"></text></g><g><title>event_listener::List::remove (18 samples, 0.01%)</title><rect x="13.7219%" y="565" width="0.0146%" height="15" fill="rgb(247,105,23)" fg:x="16907" fg:w="18"/><text x="13.9719%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (380 samples, 0.31%)</title><rect x="13.5279%" y="613" width="0.3084%" height="15" fill="rgb(223,179,41)" fg:x="16668" fg:w="380"/><text x="13.7779%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (371 samples, 0.30%)</title><rect x="13.5352%" y="597" width="0.3011%" height="15" fill="rgb(218,9,34)" fg:x="16677" fg:w="371"/><text x="13.7852%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (123 samples, 0.10%)</title><rect x="13.7365%" y="581" width="0.0998%" height="15" fill="rgb(222,106,8)" fg:x="16925" fg:w="123"/><text x="13.9865%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.10%)</title><rect x="13.7365%" y="565" width="0.0998%" height="15" fill="rgb(211,220,0)" fg:x="16925" fg:w="123"/><text x="13.9865%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (122 samples, 0.10%)</title><rect x="13.7373%" y="549" width="0.0990%" height="15" fill="rgb(229,52,16)" fg:x="16926" fg:w="122"/><text x="13.9873%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (122 samples, 0.10%)</title><rect x="13.7373%" y="533" width="0.0990%" height="15" fill="rgb(212,155,18)" fg:x="16926" fg:w="122"/><text x="13.9873%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (102 samples, 0.08%)</title><rect x="13.8452%" y="597" width="0.0828%" height="15" fill="rgb(242,21,14)" fg:x="17059" fg:w="102"/><text x="14.0952%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (102 samples, 0.08%)</title><rect x="13.8452%" y="581" width="0.0828%" height="15" fill="rgb(222,19,48)" fg:x="17059" fg:w="102"/><text x="14.0952%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (102 samples, 0.08%)</title><rect x="13.8452%" y="565" width="0.0828%" height="15" fill="rgb(232,45,27)" fg:x="17059" fg:w="102"/><text x="14.0952%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (108 samples, 0.09%)</title><rect x="13.9280%" y="597" width="0.0877%" height="15" fill="rgb(249,103,42)" fg:x="17161" fg:w="108"/><text x="14.1780%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (102 samples, 0.08%)</title><rect x="13.9329%" y="581" width="0.0828%" height="15" fill="rgb(246,81,33)" fg:x="17167" fg:w="102"/><text x="14.1829%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.08%)</title><rect x="13.9329%" y="565" width="0.0828%" height="15" fill="rgb(252,33,42)" fg:x="17167" fg:w="102"/><text x="14.1829%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (102 samples, 0.08%)</title><rect x="13.9329%" y="549" width="0.0828%" height="15" fill="rgb(209,212,41)" fg:x="17167" fg:w="102"/><text x="14.1829%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (102 samples, 0.08%)</title><rect x="13.9329%" y="533" width="0.0828%" height="15" fill="rgb(207,154,6)" fg:x="17167" fg:w="102"/><text x="14.1829%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (102 samples, 0.08%)</title><rect x="13.9329%" y="517" width="0.0828%" height="15" fill="rgb(223,64,47)" fg:x="17167" fg:w="102"/><text x="14.1829%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (102 samples, 0.08%)</title><rect x="13.9329%" y="501" width="0.0828%" height="15" fill="rgb(211,161,38)" fg:x="17167" fg:w="102"/><text x="14.1829%" y="511.50"></text></g><g><title>event_listener::Inner::lock (57 samples, 0.05%)</title><rect x="14.0173%" y="597" width="0.0463%" height="15" fill="rgb(219,138,40)" fg:x="17271" fg:w="57"/><text x="14.2673%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (56 samples, 0.05%)</title><rect x="14.0181%" y="581" width="0.0455%" height="15" fill="rgb(241,228,46)" fg:x="17272" fg:w="56"/><text x="14.2681%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (50 samples, 0.04%)</title><rect x="14.0230%" y="565" width="0.0406%" height="15" fill="rgb(223,209,38)" fg:x="17278" fg:w="50"/><text x="14.2730%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (50 samples, 0.04%)</title><rect x="14.0230%" y="549" width="0.0406%" height="15" fill="rgb(236,164,45)" fg:x="17278" fg:w="50"/><text x="14.2730%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (50 samples, 0.04%)</title><rect x="14.0230%" y="533" width="0.0406%" height="15" fill="rgb(231,15,5)" fg:x="17278" fg:w="50"/><text x="14.2730%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50 samples, 0.04%)</title><rect x="14.0230%" y="517" width="0.0406%" height="15" fill="rgb(252,35,15)" fg:x="17278" fg:w="50"/><text x="14.2730%" y="527.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5,646 samples, 4.58%)</title><rect x="9.5486%" y="629" width="4.5823%" height="15" fill="rgb(248,181,18)" fg:x="11765" fg:w="5646"/><text x="9.7986%" y="639.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (363 samples, 0.29%)</title><rect x="13.8363%" y="613" width="0.2946%" height="15" fill="rgb(233,39,42)" fg:x="17048" fg:w="363"/><text x="14.0863%" y="623.50"></text></g><g><title>event_listener::full_fence (74 samples, 0.06%)</title><rect x="14.0709%" y="597" width="0.0601%" height="15" fill="rgb(238,110,33)" fg:x="17337" fg:w="74"/><text x="14.3209%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (71 samples, 0.06%)</title><rect x="14.0733%" y="581" width="0.0576%" height="15" fill="rgb(233,195,10)" fg:x="17340" fg:w="71"/><text x="14.3233%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (71 samples, 0.06%)</title><rect x="14.0733%" y="565" width="0.0576%" height="15" fill="rgb(254,105,3)" fg:x="17340" fg:w="71"/><text x="14.3233%" y="575.50"></text></g><g><title>[libc-2.31.so] (319 samples, 0.26%)</title><rect x="14.1431%" y="613" width="0.2589%" height="15" fill="rgb(221,225,9)" fg:x="17426" fg:w="319"/><text x="14.3931%" y="623.50"></text></g><g><title>[libc-2.31.so] (1,533 samples, 1.24%)</title><rect x="14.4101%" y="581" width="1.2442%" height="15" fill="rgb(224,227,45)" fg:x="17755" fg:w="1533"/><text x="14.6601%" y="591.50"></text></g><g><title>sn_rust_dealloc (140 samples, 0.11%)</title><rect x="15.6657%" y="501" width="0.1136%" height="15" fill="rgb(229,198,43)" fg:x="19302" fg:w="140"/><text x="15.9157%" y="511.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (8,069 samples, 6.55%)</title><rect x="9.5007%" y="661" width="6.5489%" height="15" fill="rgb(206,209,35)" fg:x="11706" fg:w="8069"/><text x="9.7507%" y="671.50">&lt;async_st..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (8,046 samples, 6.53%)</title><rect x="9.5194%" y="645" width="6.5302%" height="15" fill="rgb(245,195,53)" fg:x="11729" fg:w="8046"/><text x="9.7694%" y="655.50">&lt;async_st..</text></g><g><title>core::option::Option&lt;T&gt;::map (2,364 samples, 1.92%)</title><rect x="14.1309%" y="629" width="1.9186%" height="15" fill="rgb(240,92,26)" fg:x="17411" fg:w="2364"/><text x="14.3809%" y="639.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,030 samples, 1.65%)</title><rect x="14.4020%" y="613" width="1.6476%" height="15" fill="rgb(207,40,23)" fg:x="17745" fg:w="2030"/><text x="14.6520%" y="623.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (2,030 samples, 1.65%)</title><rect x="14.4020%" y="597" width="1.6476%" height="15" fill="rgb(223,111,35)" fg:x="17745" fg:w="2030"/><text x="14.6520%" y="607.50"></text></g><g><title>alloc::alloc::box_free (487 samples, 0.40%)</title><rect x="15.6543%" y="581" width="0.3953%" height="15" fill="rgb(229,147,28)" fg:x="19288" fg:w="487"/><text x="15.9043%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (487 samples, 0.40%)</title><rect x="15.6543%" y="565" width="0.3953%" height="15" fill="rgb(211,29,28)" fg:x="19288" fg:w="487"/><text x="15.9043%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (487 samples, 0.40%)</title><rect x="15.6543%" y="549" width="0.3953%" height="15" fill="rgb(228,72,33)" fg:x="19288" fg:w="487"/><text x="15.9043%" y="559.50"></text></g><g><title>__rg_dealloc (487 samples, 0.40%)</title><rect x="15.6543%" y="533" width="0.3953%" height="15" fill="rgb(205,214,31)" fg:x="19288" fg:w="487"/><text x="15.9043%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (487 samples, 0.40%)</title><rect x="15.6543%" y="517" width="0.3953%" height="15" fill="rgb(224,111,15)" fg:x="19288" fg:w="487"/><text x="15.9043%" y="527.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (333 samples, 0.27%)</title><rect x="15.7793%" y="501" width="0.2703%" height="15" fill="rgb(253,21,26)" fg:x="19442" fg:w="333"/><text x="16.0293%" y="511.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,671 samples, 7.85%)</title><rect x="9.4561%" y="725" width="7.8491%" height="15" fill="rgb(245,139,43)" fg:x="11651" fg:w="9671"/><text x="9.7061%" y="735.50">&lt;async_std:..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (9,671 samples, 7.85%)</title><rect x="9.4561%" y="709" width="7.8491%" height="15" fill="rgb(252,170,7)" fg:x="11651" fg:w="9671"/><text x="9.7061%" y="719.50">&lt;tremor_run..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (9,671 samples, 7.85%)</title><rect x="9.4561%" y="693" width="7.8491%" height="15" fill="rgb(231,118,14)" fg:x="11651" fg:w="9671"/><text x="9.7061%" y="703.50">&lt;async_std:..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (9,671 samples, 7.85%)</title><rect x="9.4561%" y="677" width="7.8491%" height="15" fill="rgb(238,83,0)" fg:x="11651" fg:w="9671"/><text x="9.7061%" y="687.50">&lt;tremor_run..</text></g><g><title>[libc-2.31.so] (1,547 samples, 1.26%)</title><rect x="16.0496%" y="661" width="1.2556%" height="15" fill="rgb(221,39,39)" fg:x="19775" fg:w="1547"/><text x="16.2996%" y="671.50"></text></g><g><title>[libc-2.31.so] (220 samples, 0.18%)</title><rect x="17.3059%" y="677" width="0.1786%" height="15" fill="rgb(222,119,46)" fg:x="21323" fg:w="220"/><text x="17.5559%" y="687.50"></text></g><g><title>[libc-2.31.so] (1,401 samples, 1.14%)</title><rect x="17.6265%" y="661" width="1.1371%" height="15" fill="rgb(222,165,49)" fg:x="21718" fg:w="1401"/><text x="17.8765%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (15,650 samples, 12.70%)</title><rect x="6.0887%" y="869" width="12.7017%" height="15" fill="rgb(219,113,52)" fg:x="7502" fg:w="15650"/><text x="6.3387%" y="879.50">async_executor::Exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (15,650 samples, 12.70%)</title><rect x="6.0887%" y="853" width="12.7017%" height="15" fill="rgb(214,7,15)" fg:x="7502" fg:w="15650"/><text x="6.3387%" y="863.50">&lt;async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (15,650 samples, 12.70%)</title><rect x="6.0887%" y="837" width="12.7017%" height="15" fill="rgb(235,32,4)" fg:x="7502" fg:w="15650"/><text x="6.3387%" y="847.50">async_std::task::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,650 samples, 12.70%)</title><rect x="6.0887%" y="821" width="12.7017%" height="15" fill="rgb(238,90,54)" fg:x="7502" fg:w="15650"/><text x="6.3387%" y="831.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,650 samples, 12.70%)</title><rect x="6.0887%" y="805" width="12.7017%" height="15" fill="rgb(213,208,19)" fg:x="7502" fg:w="15650"/><text x="6.3387%" y="815.50">std::thread::local:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (15,650 samples, 12.70%)</title><rect x="6.0887%" y="789" width="12.7017%" height="15" fill="rgb(233,156,4)" fg:x="7502" fg:w="15650"/><text x="6.3387%" y="799.50">async_std::task::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (15,650 samples, 12.70%)</title><rect x="6.0887%" y="773" width="12.7017%" height="15" fill="rgb(207,194,5)" fg:x="7502" fg:w="15650"/><text x="6.3387%" y="783.50">&lt;async_std::task::b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,650 samples, 12.70%)</title><rect x="6.0887%" y="757" width="12.7017%" height="15" fill="rgb(206,111,30)" fg:x="7502" fg:w="15650"/><text x="6.3387%" y="767.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11,501 samples, 9.33%)</title><rect x="9.4561%" y="741" width="9.3343%" height="15" fill="rgb(243,70,54)" fg:x="11651" fg:w="11501"/><text x="9.7061%" y="751.50">tremor_runtim..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,830 samples, 1.49%)</title><rect x="17.3051%" y="725" width="1.4852%" height="15" fill="rgb(242,28,8)" fg:x="21322" fg:w="1830"/><text x="17.5551%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,830 samples, 1.49%)</title><rect x="17.3051%" y="709" width="1.4852%" height="15" fill="rgb(219,106,18)" fg:x="21322" fg:w="1830"/><text x="17.5551%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,830 samples, 1.49%)</title><rect x="17.3051%" y="693" width="1.4852%" height="15" fill="rgb(244,222,10)" fg:x="21322" fg:w="1830"/><text x="17.5551%" y="703.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,609 samples, 1.31%)</title><rect x="17.4845%" y="677" width="1.3059%" height="15" fill="rgb(236,179,52)" fg:x="21543" fg:w="1609"/><text x="17.7345%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (33 samples, 0.03%)</title><rect x="18.7636%" y="661" width="0.0268%" height="15" fill="rgb(213,23,39)" fg:x="23119" fg:w="33"/><text x="19.0136%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (17 samples, 0.01%)</title><rect x="18.7766%" y="645" width="0.0138%" height="15" fill="rgb(238,48,10)" fg:x="23135" fg:w="17"/><text x="19.0266%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,108 samples, 14.70%)</title><rect x="4.0994%" y="885" width="14.6966%" height="15" fill="rgb(251,196,23)" fg:x="5051" fg:w="18108"/><text x="4.3494%" y="895.50">&lt;core::future::from_ge..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (47 samples, 0.04%)</title><rect x="18.7961%" y="885" width="0.0381%" height="15" fill="rgb(250,152,24)" fg:x="23159" fg:w="47"/><text x="19.0461%" y="895.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (49 samples, 0.04%)</title><rect x="18.8512%" y="885" width="0.0398%" height="15" fill="rgb(209,150,17)" fg:x="23227" fg:w="49"/><text x="19.1012%" y="895.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.02%)</title><rect x="18.8943%" y="885" width="0.0179%" height="15" fill="rgb(234,202,34)" fg:x="23280" fg:w="22"/><text x="19.1443%" y="895.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="18.9121%" y="885" width="0.0106%" height="15" fill="rgb(253,148,53)" fg:x="23302" fg:w="13"/><text x="19.1621%" y="895.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="18.9227%" y="885" width="0.0106%" height="15" fill="rgb(218,129,16)" fg:x="23315" fg:w="13"/><text x="19.1727%" y="895.50"></text></g><g><title>[libc-2.31.so] (196 samples, 0.16%)</title><rect x="18.9332%" y="885" width="0.1591%" height="15" fill="rgb(216,85,19)" fg:x="23328" fg:w="196"/><text x="19.1832%" y="895.50"></text></g><g><title>__clock_gettime (89 samples, 0.07%)</title><rect x="19.0923%" y="885" width="0.0722%" height="15" fill="rgb(235,228,7)" fg:x="23524" fg:w="89"/><text x="19.3423%" y="895.50"></text></g><g><title>__vdso_clock_gettime (44 samples, 0.04%)</title><rect x="19.1678%" y="885" width="0.0357%" height="15" fill="rgb(245,175,0)" fg:x="23617" fg:w="44"/><text x="19.4178%" y="895.50"></text></g><g><title>async_executor::Ticker::sleep (44 samples, 0.04%)</title><rect x="19.2132%" y="885" width="0.0357%" height="15" fill="rgb(208,168,36)" fg:x="23673" fg:w="44"/><text x="19.4632%" y="895.50"></text></g><g><title>async_executor::steal (152 samples, 0.12%)</title><rect x="19.2489%" y="885" width="0.1234%" height="15" fill="rgb(246,171,24)" fg:x="23717" fg:w="152"/><text x="19.4989%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.01%)</title><rect x="19.4259%" y="405" width="0.0130%" height="15" fill="rgb(215,142,24)" fg:x="23935" fg:w="16"/><text x="19.6759%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.01%)</title><rect x="19.4259%" y="389" width="0.0130%" height="15" fill="rgb(250,187,7)" fg:x="23935" fg:w="16"/><text x="19.6759%" y="399.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (18 samples, 0.01%)</title><rect x="19.4259%" y="437" width="0.0146%" height="15" fill="rgb(228,66,33)" fg:x="23935" fg:w="18"/><text x="19.6759%" y="447.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (18 samples, 0.01%)</title><rect x="19.4259%" y="421" width="0.0146%" height="15" fill="rgb(234,215,21)" fg:x="23935" fg:w="18"/><text x="19.6759%" y="431.50"></text></g><g><title>core::mem::drop (27 samples, 0.02%)</title><rect x="19.4494%" y="437" width="0.0219%" height="15" fill="rgb(222,191,20)" fg:x="23964" fg:w="27"/><text x="19.6994%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (27 samples, 0.02%)</title><rect x="19.4494%" y="421" width="0.0219%" height="15" fill="rgb(245,79,54)" fg:x="23964" fg:w="27"/><text x="19.6994%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.02%)</title><rect x="19.4527%" y="405" width="0.0187%" height="15" fill="rgb(240,10,37)" fg:x="23968" fg:w="23"/><text x="19.7027%" y="415.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="19.4527%" y="389" width="0.0187%" height="15" fill="rgb(214,192,32)" fg:x="23968" fg:w="23"/><text x="19.7027%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="19.4551%" y="373" width="0.0162%" height="15" fill="rgb(209,36,54)" fg:x="23971" fg:w="20"/><text x="19.7051%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (20 samples, 0.02%)</title><rect x="19.4551%" y="357" width="0.0162%" height="15" fill="rgb(220,10,11)" fg:x="23971" fg:w="20"/><text x="19.7051%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (20 samples, 0.02%)</title><rect x="19.4551%" y="341" width="0.0162%" height="15" fill="rgb(221,106,17)" fg:x="23971" fg:w="20"/><text x="19.7051%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (20 samples, 0.02%)</title><rect x="19.4551%" y="325" width="0.0162%" height="15" fill="rgb(251,142,44)" fg:x="23971" fg:w="20"/><text x="19.7051%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="19.4713%" y="437" width="0.0122%" height="15" fill="rgb(238,13,15)" fg:x="23991" fg:w="15"/><text x="19.7213%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (108 samples, 0.09%)</title><rect x="19.4892%" y="373" width="0.0877%" height="15" fill="rgb(208,107,27)" fg:x="24013" fg:w="108"/><text x="19.7392%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (108 samples, 0.09%)</title><rect x="19.4892%" y="357" width="0.0877%" height="15" fill="rgb(205,136,37)" fg:x="24013" fg:w="108"/><text x="19.7392%" y="367.50"></text></g><g><title>core::hint::spin_loop (52 samples, 0.04%)</title><rect x="19.5785%" y="341" width="0.0422%" height="15" fill="rgb(250,205,27)" fg:x="24123" fg:w="52"/><text x="19.8285%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (52 samples, 0.04%)</title><rect x="19.5785%" y="325" width="0.0422%" height="15" fill="rgb(210,80,43)" fg:x="24123" fg:w="52"/><text x="19.8285%" y="335.50"></text></g><g><title>event_listener::Inner::lock (165 samples, 0.13%)</title><rect x="19.4875%" y="437" width="0.1339%" height="15" fill="rgb(247,160,36)" fg:x="24011" fg:w="165"/><text x="19.7375%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (164 samples, 0.13%)</title><rect x="19.4884%" y="421" width="0.1331%" height="15" fill="rgb(234,13,49)" fg:x="24012" fg:w="164"/><text x="19.7384%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (163 samples, 0.13%)</title><rect x="19.4892%" y="405" width="0.1323%" height="15" fill="rgb(234,122,0)" fg:x="24013" fg:w="163"/><text x="19.7392%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (163 samples, 0.13%)</title><rect x="19.4892%" y="389" width="0.1323%" height="15" fill="rgb(207,146,38)" fg:x="24013" fg:w="163"/><text x="19.7392%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (55 samples, 0.04%)</title><rect x="19.5768%" y="373" width="0.0446%" height="15" fill="rgb(207,177,25)" fg:x="24121" fg:w="55"/><text x="19.8268%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (53 samples, 0.04%)</title><rect x="19.5785%" y="357" width="0.0430%" height="15" fill="rgb(211,178,42)" fg:x="24123" fg:w="53"/><text x="19.8285%" y="367.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (296 samples, 0.24%)</title><rect x="19.4169%" y="453" width="0.2402%" height="15" fill="rgb(230,69,54)" fg:x="23924" fg:w="296"/><text x="19.6669%" y="463.50"></text></g><g><title>event_listener::List::remove (44 samples, 0.04%)</title><rect x="19.6215%" y="437" width="0.0357%" height="15" fill="rgb(214,135,41)" fg:x="24176" fg:w="44"/><text x="19.8715%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (29 samples, 0.02%)</title><rect x="19.6336%" y="421" width="0.0235%" height="15" fill="rgb(237,67,25)" fg:x="24191" fg:w="29"/><text x="19.8836%" y="431.50"></text></g><g><title>core::mem::replace (29 samples, 0.02%)</title><rect x="19.6336%" y="405" width="0.0235%" height="15" fill="rgb(222,189,50)" fg:x="24191" fg:w="29"/><text x="19.8836%" y="415.50"></text></g><g><title>core::ptr::read (29 samples, 0.02%)</title><rect x="19.6336%" y="389" width="0.0235%" height="15" fill="rgb(245,148,34)" fg:x="24191" fg:w="29"/><text x="19.8836%" y="399.50"></text></g><g><title>[libc-2.31.so] (785 samples, 0.64%)</title><rect x="19.6572%" y="453" width="0.6371%" height="15" fill="rgb(222,29,6)" fg:x="24220" fg:w="785"/><text x="19.9072%" y="463.50"></text></g><g><title>[libc-2.31.so] (1,257 samples, 1.02%)</title><rect x="20.3414%" y="437" width="1.0202%" height="15" fill="rgb(221,189,43)" fg:x="25063" fg:w="1257"/><text x="20.5914%" y="447.50"></text></g><g><title>[libc-2.31.so] (283 samples, 0.23%)</title><rect x="21.5718%" y="405" width="0.2297%" height="15" fill="rgb(207,36,27)" fg:x="26579" fg:w="283"/><text x="21.8218%" y="415.50"></text></g><g><title>concurrent_queue::full_fence (105 samples, 0.09%)</title><rect x="21.8014%" y="405" width="0.0852%" height="15" fill="rgb(217,90,24)" fg:x="26862" fg:w="105"/><text x="22.0514%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (100 samples, 0.08%)</title><rect x="21.8055%" y="389" width="0.0812%" height="15" fill="rgb(224,66,35)" fg:x="26867" fg:w="100"/><text x="22.0555%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (100 samples, 0.08%)</title><rect x="21.8055%" y="373" width="0.0812%" height="15" fill="rgb(221,13,50)" fg:x="26867" fg:w="100"/><text x="22.0555%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (100 samples, 0.08%)</title><rect x="21.8055%" y="357" width="0.0812%" height="15" fill="rgb(236,68,49)" fg:x="26867" fg:w="100"/><text x="22.0555%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (553 samples, 0.45%)</title><rect x="21.8964%" y="405" width="0.4488%" height="15" fill="rgb(229,146,28)" fg:x="26979" fg:w="553"/><text x="22.1464%" y="415.50"></text></g><g><title>core::ptr::read (553 samples, 0.45%)</title><rect x="21.8964%" y="389" width="0.4488%" height="15" fill="rgb(225,31,38)" fg:x="26979" fg:w="553"/><text x="22.1464%" y="399.50"></text></g><g><title>[libc-2.31.so] (553 samples, 0.45%)</title><rect x="21.8964%" y="373" width="0.4488%" height="15" fill="rgb(250,208,3)" fg:x="26979" fg:w="553"/><text x="22.1464%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1,492 samples, 1.21%)</title><rect x="22.3452%" y="405" width="1.2109%" height="15" fill="rgb(246,54,23)" fg:x="27532" fg:w="1492"/><text x="22.5952%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,492 samples, 1.21%)</title><rect x="22.3452%" y="389" width="1.2109%" height="15" fill="rgb(243,76,11)" fg:x="27532" fg:w="1492"/><text x="22.5952%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (259 samples, 0.21%)</title><rect x="23.5561%" y="405" width="0.2102%" height="15" fill="rgb(245,21,50)" fg:x="29024" fg:w="259"/><text x="23.8061%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (256 samples, 0.21%)</title><rect x="23.5586%" y="389" width="0.2078%" height="15" fill="rgb(228,9,43)" fg:x="29027" fg:w="256"/><text x="23.8086%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,965 samples, 2.41%)</title><rect x="21.3616%" y="437" width="2.4064%" height="15" fill="rgb(208,100,47)" fg:x="26320" fg:w="2965"/><text x="21.6116%" y="447.50">co..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,945 samples, 2.39%)</title><rect x="21.3778%" y="421" width="2.3902%" height="15" fill="rgb(232,26,8)" fg:x="26340" fg:w="2945"/><text x="21.6278%" y="431.50">co..</text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (4,706 samples, 3.82%)</title><rect x="20.2943%" y="453" width="3.8194%" height="15" fill="rgb(216,166,38)" fg:x="25005" fg:w="4706"/><text x="20.5443%" y="463.50">asyn..</text></g><g><title>event_listener::Event::notify (426 samples, 0.35%)</title><rect x="23.7680%" y="437" width="0.3457%" height="15" fill="rgb(251,202,51)" fg:x="29285" fg:w="426"/><text x="24.0180%" y="447.50"></text></g><g><title>event_listener::full_fence (408 samples, 0.33%)</title><rect x="23.7826%" y="421" width="0.3311%" height="15" fill="rgb(254,216,34)" fg:x="29303" fg:w="408"/><text x="24.0326%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (398 samples, 0.32%)</title><rect x="23.7907%" y="405" width="0.3230%" height="15" fill="rgb(251,32,27)" fg:x="29313" fg:w="398"/><text x="24.0407%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (398 samples, 0.32%)</title><rect x="23.7907%" y="389" width="0.3230%" height="15" fill="rgb(208,127,28)" fg:x="29313" fg:w="398"/><text x="24.0407%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (78 samples, 0.06%)</title><rect x="24.1227%" y="453" width="0.0633%" height="15" fill="rgb(224,137,22)" fg:x="29722" fg:w="78"/><text x="24.3727%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (58 samples, 0.05%)</title><rect x="24.1389%" y="437" width="0.0471%" height="15" fill="rgb(254,70,32)" fg:x="29742" fg:w="58"/><text x="24.3889%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (52 samples, 0.04%)</title><rect x="24.1438%" y="421" width="0.0422%" height="15" fill="rgb(229,75,37)" fg:x="29748" fg:w="52"/><text x="24.3938%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.04%)</title><rect x="24.1438%" y="405" width="0.0422%" height="15" fill="rgb(252,64,23)" fg:x="29748" fg:w="52"/><text x="24.3938%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (52 samples, 0.04%)</title><rect x="24.1438%" y="389" width="0.0422%" height="15" fill="rgb(232,162,48)" fg:x="29748" fg:w="52"/><text x="24.3938%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (52 samples, 0.04%)</title><rect x="24.1438%" y="373" width="0.0422%" height="15" fill="rgb(246,160,12)" fg:x="29748" fg:w="52"/><text x="24.3938%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="24.1916%" y="437" width="0.0373%" height="15" fill="rgb(247,166,0)" fg:x="29807" fg:w="46"/><text x="24.4416%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (46 samples, 0.04%)</title><rect x="24.1916%" y="421" width="0.0373%" height="15" fill="rgb(249,219,21)" fg:x="29807" fg:w="46"/><text x="24.4416%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (46 samples, 0.04%)</title><rect x="24.1916%" y="405" width="0.0373%" height="15" fill="rgb(205,209,3)" fg:x="29807" fg:w="46"/><text x="24.4416%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (42 samples, 0.03%)</title><rect x="24.2290%" y="437" width="0.0341%" height="15" fill="rgb(243,44,1)" fg:x="29853" fg:w="42"/><text x="24.4790%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (41 samples, 0.03%)</title><rect x="24.2298%" y="421" width="0.0333%" height="15" fill="rgb(206,159,16)" fg:x="29854" fg:w="41"/><text x="24.4798%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.03%)</title><rect x="24.2298%" y="405" width="0.0333%" height="15" fill="rgb(244,77,30)" fg:x="29854" fg:w="41"/><text x="24.4798%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.03%)</title><rect x="24.2298%" y="389" width="0.0333%" height="15" fill="rgb(218,69,12)" fg:x="29854" fg:w="41"/><text x="24.4798%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (41 samples, 0.03%)</title><rect x="24.2298%" y="373" width="0.0333%" height="15" fill="rgb(212,87,7)" fg:x="29854" fg:w="41"/><text x="24.4798%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (41 samples, 0.03%)</title><rect x="24.2298%" y="357" width="0.0333%" height="15" fill="rgb(245,114,25)" fg:x="29854" fg:w="41"/><text x="24.4798%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (41 samples, 0.03%)</title><rect x="24.2298%" y="341" width="0.0333%" height="15" fill="rgb(210,61,42)" fg:x="29854" fg:w="41"/><text x="24.4798%" y="351.50"></text></g><g><title>event_listener::Inner::lock (31 samples, 0.03%)</title><rect x="24.2704%" y="437" width="0.0252%" height="15" fill="rgb(211,52,33)" fg:x="29904" fg:w="31"/><text x="24.5204%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.02%)</title><rect x="24.2728%" y="421" width="0.0227%" height="15" fill="rgb(234,58,33)" fg:x="29907" fg:w="28"/><text x="24.5228%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="24.2777%" y="405" width="0.0179%" height="15" fill="rgb(220,115,36)" fg:x="29913" fg:w="22"/><text x="24.5277%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (22 samples, 0.02%)</title><rect x="24.2777%" y="389" width="0.0179%" height="15" fill="rgb(243,153,54)" fg:x="29913" fg:w="22"/><text x="24.5277%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (22 samples, 0.02%)</title><rect x="24.2777%" y="373" width="0.0179%" height="15" fill="rgb(251,47,18)" fg:x="29913" fg:w="22"/><text x="24.5277%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="24.2777%" y="357" width="0.0179%" height="15" fill="rgb(242,102,42)" fg:x="29913" fg:w="22"/><text x="24.5277%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,084 samples, 4.94%)</title><rect x="19.3723%" y="533" width="4.9378%" height="15" fill="rgb(234,31,38)" fg:x="23869" fg:w="6084"/><text x="19.6223%" y="543.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,084 samples, 4.94%)</title><rect x="19.3723%" y="517" width="4.9378%" height="15" fill="rgb(221,117,51)" fg:x="23869" fg:w="6084"/><text x="19.6223%" y="527.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,084 samples, 4.94%)</title><rect x="19.3723%" y="501" width="4.9378%" height="15" fill="rgb(212,20,18)" fg:x="23869" fg:w="6084"/><text x="19.6223%" y="511.50">&lt;async..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,084 samples, 4.94%)</title><rect x="19.3723%" y="485" width="4.9378%" height="15" fill="rgb(245,133,36)" fg:x="23869" fg:w="6084"/><text x="19.6223%" y="495.50">&lt;async..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (6,084 samples, 4.94%)</title><rect x="19.3723%" y="469" width="4.9378%" height="15" fill="rgb(212,6,19)" fg:x="23869" fg:w="6084"/><text x="19.6223%" y="479.50">&lt;async..</text></g><g><title>event_listener::Event::listen (153 samples, 0.12%)</title><rect x="24.1860%" y="453" width="0.1242%" height="15" fill="rgb(218,1,36)" fg:x="29800" fg:w="153"/><text x="24.4360%" y="463.50"></text></g><g><title>event_listener::full_fence (14 samples, 0.01%)</title><rect x="24.2988%" y="437" width="0.0114%" height="15" fill="rgb(246,84,54)" fg:x="29939" fg:w="14"/><text x="24.5488%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.01%)</title><rect x="24.2996%" y="421" width="0.0106%" height="15" fill="rgb(242,110,6)" fg:x="29940" fg:w="13"/><text x="24.5496%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="24.2996%" y="405" width="0.0106%" height="15" fill="rgb(214,47,5)" fg:x="29940" fg:w="13"/><text x="24.5496%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (19 samples, 0.02%)</title><rect x="24.3726%" y="437" width="0.0154%" height="15" fill="rgb(218,159,25)" fg:x="30030" fg:w="19"/><text x="24.6226%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (18 samples, 0.01%)</title><rect x="24.3734%" y="421" width="0.0146%" height="15" fill="rgb(215,211,28)" fg:x="30031" fg:w="18"/><text x="24.6234%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (875 samples, 0.71%)</title><rect x="24.3880%" y="437" width="0.7102%" height="15" fill="rgb(238,59,32)" fg:x="30049" fg:w="875"/><text x="24.6380%" y="447.50"></text></g><g><title>[libc-2.31.so] (2,040 samples, 1.66%)</title><rect x="25.1339%" y="421" width="1.6557%" height="15" fill="rgb(226,82,3)" fg:x="30968" fg:w="2040"/><text x="25.3839%" y="431.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (279 samples, 0.23%)</title><rect x="26.9608%" y="405" width="0.2264%" height="15" fill="rgb(240,164,32)" fg:x="33219" fg:w="279"/><text x="27.2108%" y="415.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (9,669 samples, 7.85%)</title><rect x="19.3723%" y="549" width="7.8474%" height="15" fill="rgb(232,46,7)" fg:x="23869" fg:w="9669"/><text x="19.6223%" y="559.50">tremor_runt..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,585 samples, 2.91%)</title><rect x="24.3101%" y="533" width="2.9096%" height="15" fill="rgb(229,129,53)" fg:x="29953" fg:w="3585"/><text x="24.5601%" y="543.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,585 samples, 2.91%)</title><rect x="24.3101%" y="517" width="2.9096%" height="15" fill="rgb(234,188,29)" fg:x="29953" fg:w="3585"/><text x="24.5601%" y="527.50">&lt;c..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,585 samples, 2.91%)</title><rect x="24.3101%" y="501" width="2.9096%" height="15" fill="rgb(246,141,4)" fg:x="29953" fg:w="3585"/><text x="24.5601%" y="511.50">&lt;t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,585 samples, 2.91%)</title><rect x="24.3101%" y="485" width="2.9096%" height="15" fill="rgb(229,23,39)" fg:x="29953" fg:w="3585"/><text x="24.5601%" y="495.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,585 samples, 2.91%)</title><rect x="24.3101%" y="469" width="2.9096%" height="15" fill="rgb(206,12,3)" fg:x="29953" fg:w="3585"/><text x="24.5601%" y="479.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (3,585 samples, 2.91%)</title><rect x="24.3101%" y="453" width="2.9096%" height="15" fill="rgb(252,226,20)" fg:x="29953" fg:w="3585"/><text x="24.5601%" y="463.50">tr..</text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,614 samples, 2.12%)</title><rect x="25.0982%" y="437" width="2.1215%" height="15" fill="rgb(216,123,35)" fg:x="30924" fg:w="2614"/><text x="25.3482%" y="447.50">&lt;..</text></g><g><title>sn_rust_alloc (530 samples, 0.43%)</title><rect x="26.7896%" y="421" width="0.4302%" height="15" fill="rgb(212,68,40)" fg:x="33008" fg:w="530"/><text x="27.0396%" y="431.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.03%)</title><rect x="27.1873%" y="405" width="0.0325%" height="15" fill="rgb(254,125,32)" fg:x="33498" fg:w="40"/><text x="27.4373%" y="415.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (15 samples, 0.01%)</title><rect x="27.6004%" y="533" width="0.0122%" height="15" fill="rgb(253,97,22)" fg:x="34007" fg:w="15"/><text x="27.8504%" y="543.50"></text></g><g><title>[libc-2.31.so] (298 samples, 0.24%)</title><rect x="27.6134%" y="517" width="0.2419%" height="15" fill="rgb(241,101,14)" fg:x="34023" fg:w="298"/><text x="27.8634%" y="527.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (17 samples, 0.01%)</title><rect x="28.2351%" y="501" width="0.0138%" height="15" fill="rgb(238,103,29)" fg:x="34789" fg:w="17"/><text x="28.4851%" y="511.50"></text></g><g><title>[libc-2.31.so] (322 samples, 0.26%)</title><rect x="28.2578%" y="485" width="0.2613%" height="15" fill="rgb(233,195,47)" fg:x="34817" fg:w="322"/><text x="28.5078%" y="495.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (14 samples, 0.01%)</title><rect x="28.7732%" y="469" width="0.0114%" height="15" fill="rgb(246,218,30)" fg:x="35452" fg:w="14"/><text x="29.0232%" y="479.50"></text></g><g><title>[libc-2.31.so] (143 samples, 0.12%)</title><rect x="28.7927%" y="469" width="0.1161%" height="15" fill="rgb(219,145,47)" fg:x="35476" fg:w="143"/><text x="29.0427%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (228 samples, 0.19%)</title><rect x="28.9347%" y="405" width="0.1850%" height="15" fill="rgb(243,12,26)" fg:x="35651" fg:w="228"/><text x="29.1847%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (116 samples, 0.09%)</title><rect x="29.0256%" y="389" width="0.0941%" height="15" fill="rgb(214,87,16)" fg:x="35763" fg:w="116"/><text x="29.2756%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (116 samples, 0.09%)</title><rect x="29.0256%" y="373" width="0.0941%" height="15" fill="rgb(208,99,42)" fg:x="35763" fg:w="116"/><text x="29.2756%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (116 samples, 0.09%)</title><rect x="29.0256%" y="357" width="0.0941%" height="15" fill="rgb(253,99,2)" fg:x="35763" fg:w="116"/><text x="29.2756%" y="367.50"></text></g><g><title>alloc::alloc::alloc (116 samples, 0.09%)</title><rect x="29.0256%" y="341" width="0.0941%" height="15" fill="rgb(220,168,23)" fg:x="35763" fg:w="116"/><text x="29.2756%" y="351.50"></text></g><g><title>__rg_alloc (116 samples, 0.09%)</title><rect x="29.0256%" y="325" width="0.0941%" height="15" fill="rgb(242,38,24)" fg:x="35763" fg:w="116"/><text x="29.2756%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (116 samples, 0.09%)</title><rect x="29.0256%" y="309" width="0.0941%" height="15" fill="rgb(225,182,9)" fg:x="35763" fg:w="116"/><text x="29.2756%" y="319.50"></text></g><g><title>sn_rust_alloc (112 samples, 0.09%)</title><rect x="29.0288%" y="293" width="0.0909%" height="15" fill="rgb(243,178,37)" fg:x="35767" fg:w="112"/><text x="29.2788%" y="303.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (79 samples, 0.06%)</title><rect x="29.0556%" y="277" width="0.0641%" height="15" fill="rgb(232,139,19)" fg:x="35800" fg:w="79"/><text x="29.3056%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (260 samples, 0.21%)</title><rect x="28.9168%" y="469" width="0.2110%" height="15" fill="rgb(225,201,24)" fg:x="35629" fg:w="260"/><text x="29.1668%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (252 samples, 0.20%)</title><rect x="28.9233%" y="453" width="0.2045%" height="15" fill="rgb(221,47,46)" fg:x="35637" fg:w="252"/><text x="29.1733%" y="463.50"></text></g><g><title>value_trait::Builder::object (246 samples, 0.20%)</title><rect x="28.9282%" y="437" width="0.1997%" height="15" fill="rgb(249,23,13)" fg:x="35643" fg:w="246"/><text x="29.1782%" y="447.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (238 samples, 0.19%)</title><rect x="28.9347%" y="421" width="0.1932%" height="15" fill="rgb(219,9,5)" fg:x="35651" fg:w="238"/><text x="29.1847%" y="431.50"></text></g><g><title>sn_rust_dealloc (145 samples, 0.12%)</title><rect x="29.1579%" y="325" width="0.1177%" height="15" fill="rgb(254,171,16)" fg:x="35926" fg:w="145"/><text x="29.4079%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (146 samples, 0.12%)</title><rect x="29.1579%" y="389" width="0.1185%" height="15" fill="rgb(230,171,20)" fg:x="35926" fg:w="146"/><text x="29.4079%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (146 samples, 0.12%)</title><rect x="29.1579%" y="373" width="0.1185%" height="15" fill="rgb(210,71,41)" fg:x="35926" fg:w="146"/><text x="29.4079%" y="383.50"></text></g><g><title>__rg_dealloc (146 samples, 0.12%)</title><rect x="29.1579%" y="357" width="0.1185%" height="15" fill="rgb(206,173,20)" fg:x="35926" fg:w="146"/><text x="29.4079%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (146 samples, 0.12%)</title><rect x="29.1579%" y="341" width="0.1185%" height="15" fill="rgb(233,88,34)" fg:x="35926" fg:w="146"/><text x="29.4079%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (156 samples, 0.13%)</title><rect x="29.1522%" y="453" width="0.1266%" height="15" fill="rgb(223,209,46)" fg:x="35919" fg:w="156"/><text x="29.4022%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (156 samples, 0.13%)</title><rect x="29.1522%" y="437" width="0.1266%" height="15" fill="rgb(250,43,18)" fg:x="35919" fg:w="156"/><text x="29.4022%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (156 samples, 0.13%)</title><rect x="29.1522%" y="421" width="0.1266%" height="15" fill="rgb(208,13,10)" fg:x="35919" fg:w="156"/><text x="29.4022%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (156 samples, 0.13%)</title><rect x="29.1522%" y="405" width="0.1266%" height="15" fill="rgb(212,200,36)" fg:x="35919" fg:w="156"/><text x="29.4022%" y="415.50"></text></g><g><title>sn_rust_dealloc (96 samples, 0.08%)</title><rect x="29.3072%" y="277" width="0.0779%" height="15" fill="rgb(225,90,30)" fg:x="36110" fg:w="96"/><text x="29.5572%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (116 samples, 0.09%)</title><rect x="29.2958%" y="341" width="0.0941%" height="15" fill="rgb(236,182,39)" fg:x="36096" fg:w="116"/><text x="29.5458%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (116 samples, 0.09%)</title><rect x="29.2958%" y="325" width="0.0941%" height="15" fill="rgb(212,144,35)" fg:x="36096" fg:w="116"/><text x="29.5458%" y="335.50"></text></g><g><title>__rg_dealloc (116 samples, 0.09%)</title><rect x="29.2958%" y="309" width="0.0941%" height="15" fill="rgb(228,63,44)" fg:x="36096" fg:w="116"/><text x="29.5458%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (116 samples, 0.09%)</title><rect x="29.2958%" y="293" width="0.0941%" height="15" fill="rgb(228,109,6)" fg:x="36096" fg:w="116"/><text x="29.5458%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150 samples, 0.12%)</title><rect x="29.2788%" y="437" width="0.1217%" height="15" fill="rgb(238,117,24)" fg:x="36075" fg:w="150"/><text x="29.5288%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (143 samples, 0.12%)</title><rect x="29.2845%" y="421" width="0.1161%" height="15" fill="rgb(242,26,26)" fg:x="36082" fg:w="143"/><text x="29.5345%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (136 samples, 0.11%)</title><rect x="29.2902%" y="405" width="0.1104%" height="15" fill="rgb(221,92,48)" fg:x="36089" fg:w="136"/><text x="29.5402%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (136 samples, 0.11%)</title><rect x="29.2902%" y="389" width="0.1104%" height="15" fill="rgb(209,209,32)" fg:x="36089" fg:w="136"/><text x="29.5402%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (136 samples, 0.11%)</title><rect x="29.2902%" y="373" width="0.1104%" height="15" fill="rgb(221,70,22)" fg:x="36089" fg:w="136"/><text x="29.5402%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (136 samples, 0.11%)</title><rect x="29.2902%" y="357" width="0.1104%" height="15" fill="rgb(248,145,5)" fg:x="36089" fg:w="136"/><text x="29.5402%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="29.3900%" y="341" width="0.0106%" height="15" fill="rgb(226,116,26)" fg:x="36212" fg:w="13"/><text x="29.6400%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (321 samples, 0.26%)</title><rect x="29.1522%" y="469" width="0.2605%" height="15" fill="rgb(244,5,17)" fg:x="35919" fg:w="321"/><text x="29.4022%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (165 samples, 0.13%)</title><rect x="29.2788%" y="453" width="0.1339%" height="15" fill="rgb(252,159,33)" fg:x="36075" fg:w="165"/><text x="29.5288%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (15 samples, 0.01%)</title><rect x="29.4005%" y="437" width="0.0122%" height="15" fill="rgb(206,71,0)" fg:x="36225" fg:w="15"/><text x="29.6505%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="29.4005%" y="421" width="0.0122%" height="15" fill="rgb(233,118,54)" fg:x="36225" fg:w="15"/><text x="29.6505%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="29.4582%" y="373" width="0.0170%" height="15" fill="rgb(234,83,48)" fg:x="36296" fg:w="21"/><text x="29.7082%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (20 samples, 0.02%)</title><rect x="29.4590%" y="357" width="0.0162%" height="15" fill="rgb(228,3,54)" fg:x="36297" fg:w="20"/><text x="29.7090%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (86 samples, 0.07%)</title><rect x="29.4127%" y="469" width="0.0698%" height="15" fill="rgb(226,155,13)" fg:x="36240" fg:w="86"/><text x="29.6627%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (62 samples, 0.05%)</title><rect x="29.4322%" y="453" width="0.0503%" height="15" fill="rgb(241,28,37)" fg:x="36264" fg:w="62"/><text x="29.6822%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (53 samples, 0.04%)</title><rect x="29.4395%" y="437" width="0.0430%" height="15" fill="rgb(233,93,10)" fg:x="36273" fg:w="53"/><text x="29.6895%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (53 samples, 0.04%)</title><rect x="29.4395%" y="421" width="0.0430%" height="15" fill="rgb(225,113,19)" fg:x="36273" fg:w="53"/><text x="29.6895%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (30 samples, 0.02%)</title><rect x="29.4582%" y="405" width="0.0243%" height="15" fill="rgb(241,2,18)" fg:x="36296" fg:w="30"/><text x="29.7082%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (30 samples, 0.02%)</title><rect x="29.4582%" y="389" width="0.0243%" height="15" fill="rgb(228,207,21)" fg:x="36296" fg:w="30"/><text x="29.7082%" y="399.50"></text></g><g><title>sn_rust_dealloc (122 samples, 0.10%)</title><rect x="29.4825%" y="469" width="0.0990%" height="15" fill="rgb(213,211,35)" fg:x="36326" fg:w="122"/><text x="29.7325%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (30 samples, 0.02%)</title><rect x="29.6010%" y="453" width="0.0243%" height="15" fill="rgb(209,83,10)" fg:x="36472" fg:w="30"/><text x="29.8510%" y="463.50"></text></g><g><title>core::time::Duration::as_nanos (38 samples, 0.03%)</title><rect x="29.6254%" y="453" width="0.0308%" height="15" fill="rgb(209,164,1)" fg:x="36502" fg:w="38"/><text x="29.8754%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (109 samples, 0.09%)</title><rect x="29.6562%" y="437" width="0.0885%" height="15" fill="rgb(213,184,43)" fg:x="36540" fg:w="109"/><text x="29.9062%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (56 samples, 0.05%)</title><rect x="29.7909%" y="405" width="0.0455%" height="15" fill="rgb(231,61,34)" fg:x="36706" fg:w="56"/><text x="30.0409%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (56 samples, 0.05%)</title><rect x="29.7909%" y="389" width="0.0455%" height="15" fill="rgb(235,75,3)" fg:x="36706" fg:w="56"/><text x="30.0409%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (55 samples, 0.04%)</title><rect x="29.7917%" y="373" width="0.0446%" height="15" fill="rgb(220,106,47)" fg:x="36707" fg:w="55"/><text x="30.0417%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (30 samples, 0.02%)</title><rect x="29.8120%" y="357" width="0.0243%" height="15" fill="rgb(210,196,33)" fg:x="36732" fg:w="30"/><text x="30.0620%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (30 samples, 0.02%)</title><rect x="29.8120%" y="341" width="0.0243%" height="15" fill="rgb(229,154,42)" fg:x="36732" fg:w="30"/><text x="30.0620%" y="351.50"></text></g><g><title>std::time::SystemTime::duration_since (258 samples, 0.21%)</title><rect x="29.6562%" y="453" width="0.2094%" height="15" fill="rgb(228,114,26)" fg:x="36540" fg:w="258"/><text x="29.9062%" y="463.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (149 samples, 0.12%)</title><rect x="29.7447%" y="437" width="0.1209%" height="15" fill="rgb(208,144,1)" fg:x="36649" fg:w="149"/><text x="29.9947%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (145 samples, 0.12%)</title><rect x="29.7479%" y="421" width="0.1177%" height="15" fill="rgb(239,112,37)" fg:x="36653" fg:w="145"/><text x="29.9979%" y="431.50"></text></g><g><title>core::time::Duration::new (36 samples, 0.03%)</title><rect x="29.8364%" y="405" width="0.0292%" height="15" fill="rgb(210,96,50)" fg:x="36762" fg:w="36"/><text x="30.0864%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (837 samples, 0.68%)</title><rect x="29.5823%" y="469" width="0.6793%" height="15" fill="rgb(222,178,2)" fg:x="36449" fg:w="837"/><text x="29.8323%" y="479.50"></text></g><g><title>std::time::SystemTime::now (488 samples, 0.40%)</title><rect x="29.8656%" y="453" width="0.3961%" height="15" fill="rgb(226,74,18)" fg:x="36798" fg:w="488"/><text x="30.1156%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (488 samples, 0.40%)</title><rect x="29.8656%" y="437" width="0.3961%" height="15" fill="rgb(225,67,54)" fg:x="36798" fg:w="488"/><text x="30.1156%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (488 samples, 0.40%)</title><rect x="29.8656%" y="421" width="0.3961%" height="15" fill="rgb(251,92,32)" fg:x="36798" fg:w="488"/><text x="30.1156%" y="431.50"></text></g><g><title>__clock_gettime (396 samples, 0.32%)</title><rect x="29.9403%" y="405" width="0.3214%" height="15" fill="rgb(228,149,22)" fg:x="36890" fg:w="396"/><text x="30.1903%" y="415.50"></text></g><g><title>__vdso_clock_gettime (379 samples, 0.31%)</title><rect x="29.9541%" y="389" width="0.3076%" height="15" fill="rgb(243,54,13)" fg:x="36907" fg:w="379"/><text x="30.2041%" y="399.50"></text></g><g><title>[[vdso]] (347 samples, 0.28%)</title><rect x="29.9800%" y="373" width="0.2816%" height="15" fill="rgb(243,180,28)" fg:x="36939" fg:w="347"/><text x="30.2300%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,545 samples, 2.07%)</title><rect x="28.2489%" y="501" width="2.0655%" height="15" fill="rgb(208,167,24)" fg:x="34806" fg:w="2545"/><text x="28.4989%" y="511.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (2,212 samples, 1.80%)</title><rect x="28.5191%" y="485" width="1.7953%" height="15" fill="rgb(245,73,45)" fg:x="35139" fg:w="2212"/><text x="28.7691%" y="495.50">t..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (65 samples, 0.05%)</title><rect x="30.2617%" y="469" width="0.0528%" height="15" fill="rgb(237,203,48)" fg:x="37286" fg:w="65"/><text x="30.5117%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (51 samples, 0.04%)</title><rect x="30.2730%" y="453" width="0.0414%" height="15" fill="rgb(211,197,16)" fg:x="37300" fg:w="51"/><text x="30.5230%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (36 samples, 0.03%)</title><rect x="30.2852%" y="437" width="0.0292%" height="15" fill="rgb(243,99,51)" fg:x="37315" fg:w="36"/><text x="30.5352%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (36 samples, 0.03%)</title><rect x="30.2852%" y="421" width="0.0292%" height="15" fill="rgb(215,123,29)" fg:x="37315" fg:w="36"/><text x="30.5352%" y="431.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (36 samples, 0.03%)</title><rect x="30.2852%" y="405" width="0.0292%" height="15" fill="rgb(239,186,37)" fg:x="37315" fg:w="36"/><text x="30.5352%" y="415.50"></text></g><g><title>[libc-2.31.so] (336 samples, 0.27%)</title><rect x="30.3233%" y="501" width="0.2727%" height="15" fill="rgb(252,136,39)" fg:x="37362" fg:w="336"/><text x="30.5733%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,698 samples, 3.00%)</title><rect x="27.6126%" y="533" width="3.0013%" height="15" fill="rgb(223,213,32)" fg:x="34022" fg:w="3698"/><text x="27.8626%" y="543.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (3,399 samples, 2.76%)</title><rect x="27.8552%" y="517" width="2.7587%" height="15" fill="rgb(233,115,5)" fg:x="34321" fg:w="3399"/><text x="28.1052%" y="527.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="30.5960%" y="501" width="0.0179%" height="15" fill="rgb(207,226,44)" fg:x="37698" fg:w="22"/><text x="30.8460%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (22 samples, 0.02%)</title><rect x="30.5960%" y="485" width="0.0179%" height="15" fill="rgb(208,126,0)" fg:x="37698" fg:w="22"/><text x="30.8460%" y="495.50"></text></g><g><title>[libc-2.31.so] (567 samples, 0.46%)</title><rect x="30.8582%" y="517" width="0.4602%" height="15" fill="rgb(244,66,21)" fg:x="38021" fg:w="567"/><text x="31.1082%" y="527.50"></text></g><g><title>sn_rust_dealloc (51 samples, 0.04%)</title><rect x="31.3322%" y="405" width="0.0414%" height="15" fill="rgb(222,97,12)" fg:x="38605" fg:w="51"/><text x="31.5822%" y="415.50"></text></g><g><title>alloc::alloc::box_free (64 samples, 0.05%)</title><rect x="31.3249%" y="485" width="0.0519%" height="15" fill="rgb(219,213,19)" fg:x="38596" fg:w="64"/><text x="31.5749%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64 samples, 0.05%)</title><rect x="31.3249%" y="469" width="0.0519%" height="15" fill="rgb(252,169,30)" fg:x="38596" fg:w="64"/><text x="31.5749%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (64 samples, 0.05%)</title><rect x="31.3249%" y="453" width="0.0519%" height="15" fill="rgb(206,32,51)" fg:x="38596" fg:w="64"/><text x="31.5749%" y="463.50"></text></g><g><title>__rg_dealloc (64 samples, 0.05%)</title><rect x="31.3249%" y="437" width="0.0519%" height="15" fill="rgb(250,172,42)" fg:x="38596" fg:w="64"/><text x="31.5749%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (64 samples, 0.05%)</title><rect x="31.3249%" y="421" width="0.0519%" height="15" fill="rgb(209,34,43)" fg:x="38596" fg:w="64"/><text x="31.5749%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (65 samples, 0.05%)</title><rect x="31.3249%" y="517" width="0.0528%" height="15" fill="rgb(223,11,35)" fg:x="38596" fg:w="65"/><text x="31.5749%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (65 samples, 0.05%)</title><rect x="31.3249%" y="501" width="0.0528%" height="15" fill="rgb(251,219,26)" fg:x="38596" fg:w="65"/><text x="31.5749%" y="511.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (961 samples, 0.78%)</title><rect x="30.6139%" y="533" width="0.7800%" height="15" fill="rgb(231,119,3)" fg:x="37720" fg:w="961"/><text x="30.8639%" y="543.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (20 samples, 0.02%)</title><rect x="31.3776%" y="517" width="0.0162%" height="15" fill="rgb(216,97,11)" fg:x="38661" fg:w="20"/><text x="31.6276%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (186 samples, 0.15%)</title><rect x="31.6422%" y="389" width="0.1510%" height="15" fill="rgb(223,59,9)" fg:x="38987" fg:w="186"/><text x="31.8922%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (503 samples, 0.41%)</title><rect x="31.3939%" y="517" width="0.4082%" height="15" fill="rgb(233,93,31)" fg:x="38681" fg:w="503"/><text x="31.6439%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (277 samples, 0.22%)</title><rect x="31.5773%" y="501" width="0.2248%" height="15" fill="rgb(239,81,33)" fg:x="38907" fg:w="277"/><text x="31.8273%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (277 samples, 0.22%)</title><rect x="31.5773%" y="485" width="0.2248%" height="15" fill="rgb(213,120,34)" fg:x="38907" fg:w="277"/><text x="31.8273%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (277 samples, 0.22%)</title><rect x="31.5773%" y="469" width="0.2248%" height="15" fill="rgb(243,49,53)" fg:x="38907" fg:w="277"/><text x="31.8273%" y="479.50"></text></g><g><title>alloc::alloc::alloc (274 samples, 0.22%)</title><rect x="31.5797%" y="453" width="0.2224%" height="15" fill="rgb(247,216,33)" fg:x="38910" fg:w="274"/><text x="31.8297%" y="463.50"></text></g><g><title>__rg_alloc (274 samples, 0.22%)</title><rect x="31.5797%" y="437" width="0.2224%" height="15" fill="rgb(226,26,14)" fg:x="38910" fg:w="274"/><text x="31.8297%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (274 samples, 0.22%)</title><rect x="31.5797%" y="421" width="0.2224%" height="15" fill="rgb(215,49,53)" fg:x="38910" fg:w="274"/><text x="31.8297%" y="431.50"></text></g><g><title>sn_rust_alloc (251 samples, 0.20%)</title><rect x="31.5984%" y="405" width="0.2037%" height="15" fill="rgb(245,162,40)" fg:x="38933" fg:w="251"/><text x="31.8484%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (514 samples, 0.42%)</title><rect x="31.3939%" y="533" width="0.4172%" height="15" fill="rgb(229,68,17)" fg:x="38681" fg:w="514"/><text x="31.6439%" y="543.50"></text></g><g><title>[libc-2.31.so] (393 samples, 0.32%)</title><rect x="31.8110%" y="533" width="0.3190%" height="15" fill="rgb(213,182,10)" fg:x="39195" fg:w="393"/><text x="32.0610%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (6,085 samples, 4.94%)</title><rect x="27.2198%" y="549" width="4.9386%" height="15" fill="rgb(245,125,30)" fg:x="33538" fg:w="6085"/><text x="27.4698%" y="559.50">tremor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (14 samples, 0.01%)</title><rect x="32.1470%" y="533" width="0.0114%" height="15" fill="rgb(232,202,2)" fg:x="39609" fg:w="14"/><text x="32.3970%" y="543.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (40 samples, 0.03%)</title><rect x="32.8369%" y="533" width="0.0325%" height="15" fill="rgb(237,140,51)" fg:x="40459" fg:w="40"/><text x="33.0869%" y="543.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="32.8694%" y="533" width="0.0179%" height="15" fill="rgb(236,157,25)" fg:x="40499" fg:w="22"/><text x="33.1194%" y="543.50"></text></g><g><title>[libc-2.31.so] (536 samples, 0.44%)</title><rect x="32.9205%" y="517" width="0.4350%" height="15" fill="rgb(219,209,0)" fg:x="40562" fg:w="536"/><text x="33.1705%" y="527.50"></text></g><g><title>[libc-2.31.so] (982 samples, 0.80%)</title><rect x="33.5203%" y="501" width="0.7970%" height="15" fill="rgb(240,116,54)" fg:x="41301" fg:w="982"/><text x="33.7703%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.01%)</title><rect x="34.3311%" y="485" width="0.0138%" height="15" fill="rgb(216,10,36)" fg:x="42300" fg:w="17"/><text x="34.5811%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.01%)</title><rect x="34.3311%" y="469" width="0.0138%" height="15" fill="rgb(222,72,44)" fg:x="42300" fg:w="17"/><text x="34.5811%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (435 samples, 0.35%)</title><rect x="34.3173%" y="501" width="0.3531%" height="15" fill="rgb(232,159,9)" fg:x="42283" fg:w="435"/><text x="34.5673%" y="511.50"></text></g><g><title>core::ptr::write (401 samples, 0.33%)</title><rect x="34.3449%" y="485" width="0.3255%" height="15" fill="rgb(210,39,32)" fg:x="42317" fg:w="401"/><text x="34.5949%" y="495.50"></text></g><g><title>[libc-2.31.so] (401 samples, 0.33%)</title><rect x="34.3449%" y="469" width="0.3255%" height="15" fill="rgb(216,194,45)" fg:x="42317" fg:w="401"/><text x="34.5949%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (25 samples, 0.02%)</title><rect x="34.6703%" y="501" width="0.0203%" height="15" fill="rgb(218,18,35)" fg:x="42718" fg:w="25"/><text x="34.9203%" y="511.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (19 samples, 0.02%)</title><rect x="34.7150%" y="469" width="0.0154%" height="15" fill="rgb(207,83,51)" fg:x="42773" fg:w="19"/><text x="34.9650%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="34.7150%" y="453" width="0.0154%" height="15" fill="rgb(225,63,43)" fg:x="42773" fg:w="19"/><text x="34.9650%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (19 samples, 0.02%)</title><rect x="34.7150%" y="437" width="0.0154%" height="15" fill="rgb(207,57,36)" fg:x="42773" fg:w="19"/><text x="34.9650%" y="447.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (20 samples, 0.02%)</title><rect x="34.7304%" y="469" width="0.0162%" height="15" fill="rgb(216,99,33)" fg:x="42792" fg:w="20"/><text x="34.9804%" y="479.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (20 samples, 0.02%)</title><rect x="34.7304%" y="453" width="0.0162%" height="15" fill="rgb(225,42,16)" fg:x="42792" fg:w="20"/><text x="34.9804%" y="463.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,252 samples, 1.02%)</title><rect x="34.6979%" y="501" width="1.0161%" height="15" fill="rgb(220,201,45)" fg:x="42752" fg:w="1252"/><text x="34.9479%" y="511.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (1,231 samples, 1.00%)</title><rect x="34.7150%" y="485" width="0.9991%" height="15" fill="rgb(225,33,4)" fg:x="42773" fg:w="1231"/><text x="34.9650%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,181 samples, 0.96%)</title><rect x="34.7555%" y="469" width="0.9585%" height="15" fill="rgb(224,33,50)" fg:x="42823" fg:w="1181"/><text x="35.0055%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,181 samples, 0.96%)</title><rect x="34.7555%" y="453" width="0.9585%" height="15" fill="rgb(246,198,51)" fg:x="42823" fg:w="1181"/><text x="35.0055%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,181 samples, 0.96%)</title><rect x="34.7555%" y="437" width="0.9585%" height="15" fill="rgb(205,22,4)" fg:x="42823" fg:w="1181"/><text x="35.0055%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,181 samples, 0.96%)</title><rect x="34.7555%" y="421" width="0.9585%" height="15" fill="rgb(206,3,8)" fg:x="42823" fg:w="1181"/><text x="35.0055%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,181 samples, 0.96%)</title><rect x="34.7555%" y="405" width="0.9585%" height="15" fill="rgb(251,23,15)" fg:x="42823" fg:w="1181"/><text x="35.0055%" y="415.50"></text></g><g><title>[libc-2.31.so] (1,166 samples, 0.95%)</title><rect x="34.7677%" y="389" width="0.9463%" height="15" fill="rgb(252,88,28)" fg:x="42838" fg:w="1166"/><text x="35.0177%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (21 samples, 0.02%)</title><rect x="35.7352%" y="485" width="0.0170%" height="15" fill="rgb(212,127,14)" fg:x="44030" fg:w="21"/><text x="35.9852%" y="495.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (17 samples, 0.01%)</title><rect x="36.0866%" y="469" width="0.0138%" height="15" fill="rgb(247,145,37)" fg:x="44463" fg:w="17"/><text x="36.3366%" y="479.50"></text></g><g><title>[libc-2.31.so] (352 samples, 0.29%)</title><rect x="36.1004%" y="469" width="0.2857%" height="15" fill="rgb(209,117,53)" fg:x="44480" fg:w="352"/><text x="36.3504%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (852 samples, 0.69%)</title><rect x="36.3861%" y="469" width="0.6915%" height="15" fill="rgb(212,90,42)" fg:x="44832" fg:w="852"/><text x="36.6361%" y="479.50"></text></g><g><title>core::ptr::read (826 samples, 0.67%)</title><rect x="36.4072%" y="453" width="0.6704%" height="15" fill="rgb(218,164,37)" fg:x="44858" fg:w="826"/><text x="36.6572%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (442 samples, 0.36%)</title><rect x="37.0776%" y="469" width="0.3587%" height="15" fill="rgb(246,65,34)" fg:x="45684" fg:w="442"/><text x="37.3276%" y="479.50"></text></g><g><title>core::ptr::write (426 samples, 0.35%)</title><rect x="37.0905%" y="453" width="0.3457%" height="15" fill="rgb(231,100,33)" fg:x="45700" fg:w="426"/><text x="37.3405%" y="463.50"></text></g><g><title>[libc-2.31.so] (425 samples, 0.34%)</title><rect x="37.0914%" y="437" width="0.3449%" height="15" fill="rgb(228,126,14)" fg:x="45701" fg:w="425"/><text x="37.3414%" y="447.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (5,039 samples, 4.09%)</title><rect x="33.3555%" y="517" width="4.0897%" height="15" fill="rgb(215,173,21)" fg:x="41098" fg:w="5039"/><text x="33.6055%" y="527.50">trem..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (2,133 samples, 1.73%)</title><rect x="35.7141%" y="501" width="1.7312%" height="15" fill="rgb(210,6,40)" fg:x="44004" fg:w="2133"/><text x="35.9641%" y="511.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (2,086 samples, 1.69%)</title><rect x="35.7522%" y="485" width="1.6930%" height="15" fill="rgb(212,48,18)" fg:x="44051" fg:w="2086"/><text x="36.0022%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,683 samples, 4.61%)</title><rect x="32.8872%" y="533" width="4.6124%" height="15" fill="rgb(230,214,11)" fg:x="40521" fg:w="5683"/><text x="33.1372%" y="543.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (67 samples, 0.05%)</title><rect x="37.4452%" y="517" width="0.0544%" height="15" fill="rgb(254,105,39)" fg:x="46137" fg:w="67"/><text x="37.6952%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (15 samples, 0.01%)</title><rect x="37.4874%" y="501" width="0.0122%" height="15" fill="rgb(245,158,5)" fg:x="46189" fg:w="15"/><text x="37.7374%" y="511.50"></text></g><g><title>[libc-2.31.so] (1,958 samples, 1.59%)</title><rect x="37.4996%" y="533" width="1.5891%" height="15" fill="rgb(249,208,11)" fg:x="46204" fg:w="1958"/><text x="37.7496%" y="543.50"></text></g><g><title>sn_rust_dealloc (156 samples, 0.13%)</title><rect x="39.0985%" y="373" width="0.1266%" height="15" fill="rgb(210,39,28)" fg:x="48174" fg:w="156"/><text x="39.3485%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (180 samples, 0.15%)</title><rect x="39.0887%" y="533" width="0.1461%" height="15" fill="rgb(211,56,53)" fg:x="48162" fg:w="180"/><text x="39.3387%" y="543.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (180 samples, 0.15%)</title><rect x="39.0887%" y="517" width="0.1461%" height="15" fill="rgb(226,201,30)" fg:x="48162" fg:w="180"/><text x="39.3387%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (168 samples, 0.14%)</title><rect x="39.0985%" y="501" width="0.1364%" height="15" fill="rgb(239,101,34)" fg:x="48174" fg:w="168"/><text x="39.3485%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (168 samples, 0.14%)</title><rect x="39.0985%" y="485" width="0.1364%" height="15" fill="rgb(226,209,5)" fg:x="48174" fg:w="168"/><text x="39.3485%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (168 samples, 0.14%)</title><rect x="39.0985%" y="469" width="0.1364%" height="15" fill="rgb(250,105,47)" fg:x="48174" fg:w="168"/><text x="39.3485%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (168 samples, 0.14%)</title><rect x="39.0985%" y="453" width="0.1364%" height="15" fill="rgb(230,72,3)" fg:x="48174" fg:w="168"/><text x="39.3485%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (168 samples, 0.14%)</title><rect x="39.0985%" y="437" width="0.1364%" height="15" fill="rgb(232,218,39)" fg:x="48174" fg:w="168"/><text x="39.3485%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (168 samples, 0.14%)</title><rect x="39.0985%" y="421" width="0.1364%" height="15" fill="rgb(248,166,6)" fg:x="48174" fg:w="168"/><text x="39.3485%" y="431.50"></text></g><g><title>__rg_dealloc (168 samples, 0.14%)</title><rect x="39.0985%" y="405" width="0.1364%" height="15" fill="rgb(247,89,20)" fg:x="48174" fg:w="168"/><text x="39.3485%" y="415.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (168 samples, 0.14%)</title><rect x="39.0985%" y="389" width="0.1364%" height="15" fill="rgb(248,130,54)" fg:x="48174" fg:w="168"/><text x="39.3485%" y="399.50"></text></g><g><title>async_global_executor::reactor::block_on (24,492 samples, 19.88%)</title><rect x="19.3723%" y="885" width="19.8779%" height="15" fill="rgb(234,196,4)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="895.50">async_global_executor::reactor:..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (24,492 samples, 19.88%)</title><rect x="19.3723%" y="869" width="19.8779%" height="15" fill="rgb(250,143,31)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="879.50">async_global_executor::reactor:..</text></g><g><title>async_io::driver::block_on (24,492 samples, 19.88%)</title><rect x="19.3723%" y="853" width="19.8779%" height="15" fill="rgb(211,110,34)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="863.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24,492 samples, 19.88%)</title><rect x="19.3723%" y="837" width="19.8779%" height="15" fill="rgb(215,124,48)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="847.50">&lt;futures_lite::future::Or&lt;F1,F2..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,492 samples, 19.88%)</title><rect x="19.3723%" y="821" width="19.8779%" height="15" fill="rgb(216,46,13)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="831.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::run::{{closure}} (24,492 samples, 19.88%)</title><rect x="19.3723%" y="805" width="19.8779%" height="15" fill="rgb(205,184,25)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="815.50">async_executor::Executor::run::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24,492 samples, 19.88%)</title><rect x="19.3723%" y="789" width="19.8779%" height="15" fill="rgb(228,1,10)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="799.50">&lt;futures_lite::future::Or&lt;F1,F2..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,492 samples, 19.88%)</title><rect x="19.3723%" y="773" width="19.8779%" height="15" fill="rgb(213,116,27)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="783.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (24,492 samples, 19.88%)</title><rect x="19.3723%" y="757" width="19.8779%" height="15" fill="rgb(241,95,50)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="767.50">async_executor::Executor::run::..</text></g><g><title>async_task::runnable::Runnable::run (24,492 samples, 19.88%)</title><rect x="19.3723%" y="741" width="19.8779%" height="15" fill="rgb(238,48,32)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="751.50">async_task::runnable::Runnable:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (24,492 samples, 19.88%)</title><rect x="19.3723%" y="725" width="19.8779%" height="15" fill="rgb(235,113,49)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="735.50">async_task::raw::RawTask&lt;F,T,S&gt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24,492 samples, 19.88%)</title><rect x="19.3723%" y="709" width="19.8779%" height="15" fill="rgb(205,127,43)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="719.50">&lt;core::pin::Pin&lt;P&gt; as core::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,492 samples, 19.88%)</title><rect x="19.3723%" y="693" width="19.8779%" height="15" fill="rgb(250,162,2)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="703.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (24,492 samples, 19.88%)</title><rect x="19.3723%" y="677" width="19.8779%" height="15" fill="rgb(220,13,41)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="687.50">async_executor::Executor::spawn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (24,492 samples, 19.88%)</title><rect x="19.3723%" y="661" width="19.8779%" height="15" fill="rgb(249,221,25)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="671.50">&lt;async_std::task::builder::Supp..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (24,492 samples, 19.88%)</title><rect x="19.3723%" y="645" width="19.8779%" height="15" fill="rgb(215,208,19)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="655.50">async_std::task::task_locals_wr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24,492 samples, 19.88%)</title><rect x="19.3723%" y="629" width="19.8779%" height="15" fill="rgb(236,175,2)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="639.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,492 samples, 19.88%)</title><rect x="19.3723%" y="613" width="19.8779%" height="15" fill="rgb(241,52,2)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="623.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (24,492 samples, 19.88%)</title><rect x="19.3723%" y="597" width="19.8779%" height="15" fill="rgb(248,140,14)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="607.50">async_std::task::task_locals_wr..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (24,492 samples, 19.88%)</title><rect x="19.3723%" y="581" width="19.8779%" height="15" fill="rgb(253,22,42)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="591.50">&lt;async_std::task::builder::Supp..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,492 samples, 19.88%)</title><rect x="19.3723%" y="565" width="19.8779%" height="15" fill="rgb(234,61,47)" fg:x="23869" fg:w="24492"/><text x="19.6223%" y="575.50">&lt;core::future::from_generator::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (8,738 samples, 7.09%)</title><rect x="32.1584%" y="549" width="7.0918%" height="15" fill="rgb(208,226,15)" fg:x="39623" fg:w="8738"/><text x="32.4084%" y="559.50">tremor_run..</text></g><g><title>[libc-2.31.so] (784 samples, 0.64%)</title><rect x="39.4166%" y="341" width="0.6363%" height="15" fill="rgb(217,221,4)" fg:x="48566" fg:w="784"/><text x="39.6666%" y="351.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (847 samples, 0.69%)</title><rect x="39.3752%" y="357" width="0.6874%" height="15" fill="rgb(212,174,34)" fg:x="48515" fg:w="847"/><text x="39.6252%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,376 samples, 1.12%)</title><rect x="39.2762%" y="373" width="1.1168%" height="15" fill="rgb(253,83,4)" fg:x="48393" fg:w="1376"/><text x="39.5262%" y="383.50"></text></g><g><title>[libc-2.31.so] (407 samples, 0.33%)</title><rect x="40.0627%" y="357" width="0.3303%" height="15" fill="rgb(250,195,49)" fg:x="49362" fg:w="407"/><text x="40.3127%" y="367.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,422 samples, 1.15%)</title><rect x="39.2502%" y="405" width="1.1541%" height="15" fill="rgb(241,192,25)" fg:x="48361" fg:w="1422"/><text x="39.5002%" y="415.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,422 samples, 1.15%)</title><rect x="39.2502%" y="389" width="1.1541%" height="15" fill="rgb(208,124,10)" fg:x="48361" fg:w="1422"/><text x="39.5002%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (14 samples, 0.01%)</title><rect x="40.3930%" y="373" width="0.0114%" height="15" fill="rgb(222,33,0)" fg:x="49769" fg:w="14"/><text x="40.6430%" y="383.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.03%)</title><rect x="45.2156%" y="357" width="0.0300%" height="15" fill="rgb(234,209,28)" fg:x="55711" fg:w="37"/><text x="45.4656%" y="367.50"></text></g><g><title>[libc-2.31.so] (368 samples, 0.30%)</title><rect x="45.2456%" y="357" width="0.2987%" height="15" fill="rgb(224,11,23)" fg:x="55748" fg:w="368"/><text x="45.4956%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (54 samples, 0.04%)</title><rect x="45.5540%" y="357" width="0.0438%" height="15" fill="rgb(232,99,1)" fg:x="56128" fg:w="54"/><text x="45.8040%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (54 samples, 0.04%)</title><rect x="45.5540%" y="341" width="0.0438%" height="15" fill="rgb(237,95,45)" fg:x="56128" fg:w="54"/><text x="45.8040%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (17 samples, 0.01%)</title><rect x="45.5840%" y="325" width="0.0138%" height="15" fill="rgb(208,109,11)" fg:x="56165" fg:w="17"/><text x="45.8340%" y="335.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}::{{closure}} (17 samples, 0.01%)</title><rect x="45.5840%" y="309" width="0.0138%" height="15" fill="rgb(216,190,48)" fg:x="56165" fg:w="17"/><text x="45.8340%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="45.5995%" y="293" width="0.0195%" height="15" fill="rgb(251,171,36)" fg:x="56184" fg:w="24"/><text x="45.8495%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (36 samples, 0.03%)</title><rect x="45.5978%" y="357" width="0.0292%" height="15" fill="rgb(230,62,22)" fg:x="56182" fg:w="36"/><text x="45.8478%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (36 samples, 0.03%)</title><rect x="45.5978%" y="341" width="0.0292%" height="15" fill="rgb(225,114,35)" fg:x="56182" fg:w="36"/><text x="45.8478%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 0.03%)</title><rect x="45.5978%" y="325" width="0.0292%" height="15" fill="rgb(215,118,42)" fg:x="56182" fg:w="36"/><text x="45.8478%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (36 samples, 0.03%)</title><rect x="45.5978%" y="309" width="0.0292%" height="15" fill="rgb(243,119,21)" fg:x="56182" fg:w="36"/><text x="45.8478%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (21 samples, 0.02%)</title><rect x="45.6270%" y="357" width="0.0170%" height="15" fill="rgb(252,177,53)" fg:x="56218" fg:w="21"/><text x="45.8770%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (21 samples, 0.02%)</title><rect x="45.6270%" y="341" width="0.0170%" height="15" fill="rgb(237,209,29)" fg:x="56218" fg:w="21"/><text x="45.8770%" y="351.50"></text></g><g><title>sn_rust_dealloc (166 samples, 0.13%)</title><rect x="45.6839%" y="197" width="0.1347%" height="15" fill="rgb(212,65,23)" fg:x="56288" fg:w="166"/><text x="45.9339%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (283 samples, 0.23%)</title><rect x="45.6441%" y="341" width="0.2297%" height="15" fill="rgb(230,222,46)" fg:x="56239" fg:w="283"/><text x="45.8941%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (283 samples, 0.23%)</title><rect x="45.6441%" y="325" width="0.2297%" height="15" fill="rgb(215,135,32)" fg:x="56239" fg:w="283"/><text x="45.8941%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (267 samples, 0.22%)</title><rect x="45.6571%" y="309" width="0.2167%" height="15" fill="rgb(246,101,22)" fg:x="56255" fg:w="267"/><text x="45.9071%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (267 samples, 0.22%)</title><rect x="45.6571%" y="293" width="0.2167%" height="15" fill="rgb(206,107,13)" fg:x="56255" fg:w="267"/><text x="45.9071%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (267 samples, 0.22%)</title><rect x="45.6571%" y="277" width="0.2167%" height="15" fill="rgb(250,100,44)" fg:x="56255" fg:w="267"/><text x="45.9071%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (253 samples, 0.21%)</title><rect x="45.6684%" y="261" width="0.2053%" height="15" fill="rgb(231,147,38)" fg:x="56269" fg:w="253"/><text x="45.9184%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (253 samples, 0.21%)</title><rect x="45.6684%" y="245" width="0.2053%" height="15" fill="rgb(229,8,40)" fg:x="56269" fg:w="253"/><text x="45.9184%" y="255.50"></text></g><g><title>__rg_dealloc (253 samples, 0.21%)</title><rect x="45.6684%" y="229" width="0.2053%" height="15" fill="rgb(221,135,30)" fg:x="56269" fg:w="253"/><text x="45.9184%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (253 samples, 0.21%)</title><rect x="45.6684%" y="213" width="0.2053%" height="15" fill="rgb(249,193,18)" fg:x="56269" fg:w="253"/><text x="45.9184%" y="223.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (68 samples, 0.06%)</title><rect x="45.8186%" y="197" width="0.0552%" height="15" fill="rgb(209,133,39)" fg:x="56454" fg:w="68"/><text x="46.0686%" y="207.50"></text></g><g><title>sn_rust_dealloc (91 samples, 0.07%)</title><rect x="45.8892%" y="245" width="0.0739%" height="15" fill="rgb(232,100,14)" fg:x="56541" fg:w="91"/><text x="46.1392%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (111 samples, 0.09%)</title><rect x="45.8738%" y="309" width="0.0901%" height="15" fill="rgb(224,185,1)" fg:x="56522" fg:w="111"/><text x="46.1238%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (111 samples, 0.09%)</title><rect x="45.8738%" y="293" width="0.0901%" height="15" fill="rgb(223,139,8)" fg:x="56522" fg:w="111"/><text x="46.1238%" y="303.50"></text></g><g><title>__rg_dealloc (111 samples, 0.09%)</title><rect x="45.8738%" y="277" width="0.0901%" height="15" fill="rgb(232,213,38)" fg:x="56522" fg:w="111"/><text x="46.1238%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (111 samples, 0.09%)</title><rect x="45.8738%" y="261" width="0.0901%" height="15" fill="rgb(207,94,22)" fg:x="56522" fg:w="111"/><text x="46.1238%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (399 samples, 0.32%)</title><rect x="45.6441%" y="357" width="0.3238%" height="15" fill="rgb(219,183,54)" fg:x="56239" fg:w="399"/><text x="45.8941%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (116 samples, 0.09%)</title><rect x="45.8738%" y="341" width="0.0941%" height="15" fill="rgb(216,185,54)" fg:x="56522" fg:w="116"/><text x="46.1238%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.09%)</title><rect x="45.8738%" y="325" width="0.0941%" height="15" fill="rgb(254,217,39)" fg:x="56522" fg:w="116"/><text x="46.1238%" y="335.50"></text></g><g><title>sn_rust_dealloc (220 samples, 0.18%)</title><rect x="45.9988%" y="181" width="0.1786%" height="15" fill="rgb(240,178,23)" fg:x="56676" fg:w="220"/><text x="46.2488%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (248 samples, 0.20%)</title><rect x="45.9988%" y="245" width="0.2013%" height="15" fill="rgb(218,11,47)" fg:x="56676" fg:w="248"/><text x="46.2488%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (248 samples, 0.20%)</title><rect x="45.9988%" y="229" width="0.2013%" height="15" fill="rgb(218,51,51)" fg:x="56676" fg:w="248"/><text x="46.2488%" y="239.50"></text></g><g><title>__rg_dealloc (248 samples, 0.20%)</title><rect x="45.9988%" y="213" width="0.2013%" height="15" fill="rgb(238,126,27)" fg:x="56676" fg:w="248"/><text x="46.2488%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (248 samples, 0.20%)</title><rect x="45.9988%" y="197" width="0.2013%" height="15" fill="rgb(249,202,22)" fg:x="56676" fg:w="248"/><text x="46.2488%" y="207.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (28 samples, 0.02%)</title><rect x="46.1773%" y="181" width="0.0227%" height="15" fill="rgb(254,195,49)" fg:x="56896" fg:w="28"/><text x="46.4273%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (272 samples, 0.22%)</title><rect x="45.9801%" y="309" width="0.2208%" height="15" fill="rgb(208,123,14)" fg:x="56653" fg:w="272"/><text x="46.2301%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (272 samples, 0.22%)</title><rect x="45.9801%" y="293" width="0.2208%" height="15" fill="rgb(224,200,8)" fg:x="56653" fg:w="272"/><text x="46.2301%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (272 samples, 0.22%)</title><rect x="45.9801%" y="277" width="0.2208%" height="15" fill="rgb(217,61,36)" fg:x="56653" fg:w="272"/><text x="46.2301%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (272 samples, 0.22%)</title><rect x="45.9801%" y="261" width="0.2208%" height="15" fill="rgb(206,35,45)" fg:x="56653" fg:w="272"/><text x="46.2301%" y="271.50"></text></g><g><title>sn_rust_dealloc (394 samples, 0.32%)</title><rect x="47.0823%" y="133" width="0.3198%" height="15" fill="rgb(217,65,33)" fg:x="58011" fg:w="394"/><text x="47.3323%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (444 samples, 0.36%)</title><rect x="47.0693%" y="197" width="0.3604%" height="15" fill="rgb(222,158,48)" fg:x="57995" fg:w="444"/><text x="47.3193%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (444 samples, 0.36%)</title><rect x="47.0693%" y="181" width="0.3604%" height="15" fill="rgb(254,2,54)" fg:x="57995" fg:w="444"/><text x="47.3193%" y="191.50"></text></g><g><title>__rg_dealloc (444 samples, 0.36%)</title><rect x="47.0693%" y="165" width="0.3604%" height="15" fill="rgb(250,143,38)" fg:x="57995" fg:w="444"/><text x="47.3193%" y="175.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (444 samples, 0.36%)</title><rect x="47.0693%" y="149" width="0.3604%" height="15" fill="rgb(248,25,0)" fg:x="57995" fg:w="444"/><text x="47.3193%" y="159.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (34 samples, 0.03%)</title><rect x="47.4020%" y="133" width="0.0276%" height="15" fill="rgb(206,152,27)" fg:x="58405" fg:w="34"/><text x="47.6520%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,543 samples, 1.25%)</title><rect x="46.2009%" y="293" width="1.2523%" height="15" fill="rgb(240,77,30)" fg:x="56925" fg:w="1543"/><text x="46.4509%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1,523 samples, 1.24%)</title><rect x="46.2171%" y="277" width="1.2361%" height="15" fill="rgb(231,5,3)" fg:x="56945" fg:w="1523"/><text x="46.4671%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,512 samples, 1.23%)</title><rect x="46.2260%" y="261" width="1.2272%" height="15" fill="rgb(207,226,32)" fg:x="56956" fg:w="1512"/><text x="46.4760%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,512 samples, 1.23%)</title><rect x="46.2260%" y="245" width="1.2272%" height="15" fill="rgb(222,207,47)" fg:x="56956" fg:w="1512"/><text x="46.4760%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,512 samples, 1.23%)</title><rect x="46.2260%" y="229" width="1.2272%" height="15" fill="rgb(229,115,45)" fg:x="56956" fg:w="1512"/><text x="46.4760%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,512 samples, 1.23%)</title><rect x="46.2260%" y="213" width="1.2272%" height="15" fill="rgb(224,191,6)" fg:x="56956" fg:w="1512"/><text x="46.4760%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (29 samples, 0.02%)</title><rect x="47.4296%" y="197" width="0.0235%" height="15" fill="rgb(230,227,24)" fg:x="58439" fg:w="29"/><text x="47.6796%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="47.4637%" y="261" width="0.0130%" height="15" fill="rgb(228,80,19)" fg:x="58481" fg:w="16"/><text x="47.7137%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="47.4637%" y="245" width="0.0130%" height="15" fill="rgb(247,229,0)" fg:x="58481" fg:w="16"/><text x="47.7137%" y="255.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="47.4637%" y="229" width="0.0130%" height="15" fill="rgb(237,194,15)" fg:x="58481" fg:w="16"/><text x="47.7137%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="47.4637%" y="213" width="0.0130%" height="15" fill="rgb(219,203,20)" fg:x="58481" fg:w="16"/><text x="47.7137%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,845 samples, 1.50%)</title><rect x="45.9801%" y="325" width="1.4974%" height="15" fill="rgb(234,128,8)" fg:x="56653" fg:w="1845"/><text x="46.2301%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1,573 samples, 1.28%)</title><rect x="46.2009%" y="309" width="1.2767%" height="15" fill="rgb(248,202,8)" fg:x="56925" fg:w="1573"/><text x="46.4509%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (30 samples, 0.02%)</title><rect x="47.4532%" y="293" width="0.0243%" height="15" fill="rgb(206,104,37)" fg:x="58468" fg:w="30"/><text x="47.7032%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.02%)</title><rect x="47.4532%" y="277" width="0.0243%" height="15" fill="rgb(223,8,27)" fg:x="58468" fg:w="30"/><text x="47.7032%" y="287.50"></text></g><g><title>sn_rust_dealloc (155 samples, 0.13%)</title><rect x="47.4775%" y="325" width="0.1258%" height="15" fill="rgb(216,217,28)" fg:x="58498" fg:w="155"/><text x="47.7275%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (2,051 samples, 1.66%)</title><rect x="45.9687%" y="341" width="1.6646%" height="15" fill="rgb(249,199,1)" fg:x="56639" fg:w="2051"/><text x="46.2187%" y="351.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (37 samples, 0.03%)</title><rect x="47.6033%" y="325" width="0.0300%" height="15" fill="rgb(240,85,17)" fg:x="58653" fg:w="37"/><text x="47.8533%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (16 samples, 0.01%)</title><rect x="47.6333%" y="341" width="0.0130%" height="15" fill="rgb(206,108,45)" fg:x="58690" fg:w="16"/><text x="47.8833%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (16 samples, 0.01%)</title><rect x="47.6333%" y="325" width="0.0130%" height="15" fill="rgb(245,210,41)" fg:x="58690" fg:w="16"/><text x="47.8833%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (16 samples, 0.01%)</title><rect x="47.6333%" y="309" width="0.0130%" height="15" fill="rgb(206,13,37)" fg:x="58690" fg:w="16"/><text x="47.8833%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="47.6333%" y="293" width="0.0130%" height="15" fill="rgb(250,61,18)" fg:x="58690" fg:w="16"/><text x="47.8833%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="47.6342%" y="277" width="0.0122%" height="15" fill="rgb(235,172,48)" fg:x="58691" fg:w="15"/><text x="47.8842%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="48.3695%" y="181" width="0.0203%" height="15" fill="rgb(249,201,17)" fg:x="59597" fg:w="25"/><text x="48.6195%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="48.3695%" y="165" width="0.0203%" height="15" fill="rgb(219,208,6)" fg:x="59597" fg:w="25"/><text x="48.6195%" y="175.50"></text></g><g><title>__rg_dealloc (25 samples, 0.02%)</title><rect x="48.3695%" y="149" width="0.0203%" height="15" fill="rgb(248,31,23)" fg:x="59597" fg:w="25"/><text x="48.6195%" y="159.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (25 samples, 0.02%)</title><rect x="48.3695%" y="133" width="0.0203%" height="15" fill="rgb(245,15,42)" fg:x="59597" fg:w="25"/><text x="48.6195%" y="143.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (14 samples, 0.01%)</title><rect x="48.3898%" y="181" width="0.0114%" height="15" fill="rgb(222,217,39)" fg:x="59622" fg:w="14"/><text x="48.6398%" y="191.50"></text></g><g><title>core::mem::drop (1,567 samples, 1.27%)</title><rect x="48.3679%" y="229" width="1.2718%" height="15" fill="rgb(210,219,27)" fg:x="59595" fg:w="1567"/><text x="48.6179%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;alloc::string::String&gt;&gt; (1,567 samples, 1.27%)</title><rect x="48.3679%" y="213" width="1.2718%" height="15" fill="rgb(252,166,36)" fg:x="59595" fg:w="1567"/><text x="48.6179%" y="223.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,567 samples, 1.27%)</title><rect x="48.3679%" y="197" width="1.2718%" height="15" fill="rgb(245,132,34)" fg:x="59595" fg:w="1567"/><text x="48.6179%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,526 samples, 1.24%)</title><rect x="48.4011%" y="181" width="1.2385%" height="15" fill="rgb(236,54,3)" fg:x="59636" fg:w="1526"/><text x="48.6511%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,526 samples, 1.24%)</title><rect x="48.4011%" y="165" width="1.2385%" height="15" fill="rgb(241,173,43)" fg:x="59636" fg:w="1526"/><text x="48.6511%" y="175.50"></text></g><g><title>sn_rust_dealloc (229 samples, 0.19%)</title><rect x="49.6737%" y="101" width="0.1859%" height="15" fill="rgb(215,190,9)" fg:x="61204" fg:w="229"/><text x="49.9237%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (840 samples, 0.68%)</title><rect x="49.6737%" y="165" width="0.6818%" height="15" fill="rgb(242,101,16)" fg:x="61204" fg:w="840"/><text x="49.9237%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (840 samples, 0.68%)</title><rect x="49.6737%" y="149" width="0.6818%" height="15" fill="rgb(223,190,21)" fg:x="61204" fg:w="840"/><text x="49.9237%" y="159.50"></text></g><g><title>__rg_dealloc (840 samples, 0.68%)</title><rect x="49.6737%" y="133" width="0.6818%" height="15" fill="rgb(215,228,25)" fg:x="61204" fg:w="840"/><text x="49.9237%" y="143.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (840 samples, 0.68%)</title><rect x="49.6737%" y="117" width="0.6818%" height="15" fill="rgb(225,36,22)" fg:x="61204" fg:w="840"/><text x="49.9237%" y="127.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (611 samples, 0.50%)</title><rect x="49.8596%" y="101" width="0.4959%" height="15" fill="rgb(251,106,46)" fg:x="61433" fg:w="611"/><text x="50.1096%" y="111.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2,457 samples, 1.99%)</title><rect x="48.3622%" y="245" width="1.9941%" height="15" fill="rgb(208,90,1)" fg:x="59588" fg:w="2457"/><text x="48.6122%" y="255.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (883 samples, 0.72%)</title><rect x="49.6396%" y="229" width="0.7167%" height="15" fill="rgb(243,10,4)" fg:x="61162" fg:w="883"/><text x="49.8896%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (883 samples, 0.72%)</title><rect x="49.6396%" y="213" width="0.7167%" height="15" fill="rgb(212,137,27)" fg:x="61162" fg:w="883"/><text x="49.8896%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (883 samples, 0.72%)</title><rect x="49.6396%" y="197" width="0.7167%" height="15" fill="rgb(231,220,49)" fg:x="61162" fg:w="883"/><text x="49.8896%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (883 samples, 0.72%)</title><rect x="49.6396%" y="181" width="0.7167%" height="15" fill="rgb(237,96,20)" fg:x="61162" fg:w="883"/><text x="49.8896%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,802 samples, 1.46%)</title><rect x="50.3563%" y="245" width="1.4625%" height="15" fill="rgb(239,229,30)" fg:x="62045" fg:w="1802"/><text x="50.6063%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,802 samples, 1.46%)</title><rect x="50.3563%" y="229" width="1.4625%" height="15" fill="rgb(219,65,33)" fg:x="62045" fg:w="1802"/><text x="50.6063%" y="239.50"></text></g><g><title>sn_rust_dealloc (131 samples, 0.11%)</title><rect x="51.8188%" y="245" width="0.1063%" height="15" fill="rgb(243,134,7)" fg:x="63847" fg:w="131"/><text x="52.0688%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,319 samples, 4.32%)</title><rect x="47.6480%" y="309" width="4.3169%" height="15" fill="rgb(216,177,54)" fg:x="58708" fg:w="5319"/><text x="47.8980%" y="319.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (5,318 samples, 4.32%)</title><rect x="47.6488%" y="293" width="4.3161%" height="15" fill="rgb(211,160,20)" fg:x="58709" fg:w="5318"/><text x="47.8988%" y="303.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (5,293 samples, 4.30%)</title><rect x="47.6691%" y="277" width="4.2958%" height="15" fill="rgb(239,85,39)" fg:x="58734" fg:w="5293"/><text x="47.9191%" y="287.50">core:..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,293 samples, 4.30%)</title><rect x="47.6691%" y="261" width="4.2958%" height="15" fill="rgb(232,125,22)" fg:x="58734" fg:w="5293"/><text x="47.9191%" y="271.50">&lt;allo..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (49 samples, 0.04%)</title><rect x="51.9251%" y="245" width="0.0398%" height="15" fill="rgb(244,57,34)" fg:x="63978" fg:w="49"/><text x="52.1751%" y="255.50"></text></g><g><title>sn_rust_dealloc (92 samples, 0.07%)</title><rect x="51.9860%" y="213" width="0.0747%" height="15" fill="rgb(214,203,32)" fg:x="64053" fg:w="92"/><text x="52.2360%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (119 samples, 0.10%)</title><rect x="51.9730%" y="277" width="0.0966%" height="15" fill="rgb(207,58,43)" fg:x="64037" fg:w="119"/><text x="52.2230%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (119 samples, 0.10%)</title><rect x="51.9730%" y="261" width="0.0966%" height="15" fill="rgb(215,193,15)" fg:x="64037" fg:w="119"/><text x="52.2230%" y="271.50"></text></g><g><title>__rg_dealloc (119 samples, 0.10%)</title><rect x="51.9730%" y="245" width="0.0966%" height="15" fill="rgb(232,15,44)" fg:x="64037" fg:w="119"/><text x="52.2230%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (119 samples, 0.10%)</title><rect x="51.9730%" y="229" width="0.0966%" height="15" fill="rgb(212,3,48)" fg:x="64037" fg:w="119"/><text x="52.2230%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (5,450 samples, 4.42%)</title><rect x="47.6480%" y="325" width="4.4233%" height="15" fill="rgb(218,128,7)" fg:x="58708" fg:w="5450"/><text x="47.8980%" y="335.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (131 samples, 0.11%)</title><rect x="51.9649%" y="309" width="0.1063%" height="15" fill="rgb(226,216,39)" fg:x="64027" fg:w="131"/><text x="52.2149%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.11%)</title><rect x="51.9649%" y="293" width="0.1063%" height="15" fill="rgb(243,47,51)" fg:x="64027" fg:w="131"/><text x="52.2149%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (5,497 samples, 4.46%)</title><rect x="47.6480%" y="341" width="4.4614%" height="15" fill="rgb(241,183,40)" fg:x="58708" fg:w="5497"/><text x="47.8980%" y="351.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (47 samples, 0.04%)</title><rect x="52.0712%" y="325" width="0.0381%" height="15" fill="rgb(231,217,32)" fg:x="64158" fg:w="47"/><text x="52.3212%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (36 samples, 0.03%)</title><rect x="52.0802%" y="309" width="0.0292%" height="15" fill="rgb(229,61,38)" fg:x="64169" fg:w="36"/><text x="52.3302%" y="319.50"></text></g><g><title>alloc::alloc::box_free (25 samples, 0.02%)</title><rect x="52.1508%" y="309" width="0.0203%" height="15" fill="rgb(225,210,5)" fg:x="64256" fg:w="25"/><text x="52.4008%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="52.1508%" y="293" width="0.0203%" height="15" fill="rgb(231,79,45)" fg:x="64256" fg:w="25"/><text x="52.4008%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="52.1508%" y="277" width="0.0203%" height="15" fill="rgb(224,100,7)" fg:x="64256" fg:w="25"/><text x="52.4008%" y="287.50"></text></g><g><title>__rg_dealloc (25 samples, 0.02%)</title><rect x="52.1508%" y="261" width="0.0203%" height="15" fill="rgb(241,198,18)" fg:x="64256" fg:w="25"/><text x="52.4008%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (25 samples, 0.02%)</title><rect x="52.1508%" y="245" width="0.0203%" height="15" fill="rgb(252,97,53)" fg:x="64256" fg:w="25"/><text x="52.4008%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.02%)</title><rect x="52.2327%" y="245" width="0.0243%" height="15" fill="rgb(220,88,7)" fg:x="64357" fg:w="30"/><text x="52.4827%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (29 samples, 0.02%)</title><rect x="52.2335%" y="229" width="0.0235%" height="15" fill="rgb(213,176,14)" fg:x="64358" fg:w="29"/><text x="52.4835%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (199 samples, 0.16%)</title><rect x="52.1094%" y="341" width="0.1615%" height="15" fill="rgb(246,73,7)" fg:x="64205" fg:w="199"/><text x="52.3594%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (148 samples, 0.12%)</title><rect x="52.1508%" y="325" width="0.1201%" height="15" fill="rgb(245,64,36)" fg:x="64256" fg:w="148"/><text x="52.4008%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (123 samples, 0.10%)</title><rect x="52.1711%" y="309" width="0.0998%" height="15" fill="rgb(245,80,10)" fg:x="64281" fg:w="123"/><text x="52.4211%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (123 samples, 0.10%)</title><rect x="52.1711%" y="293" width="0.0998%" height="15" fill="rgb(232,107,50)" fg:x="64281" fg:w="123"/><text x="52.4211%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (47 samples, 0.04%)</title><rect x="52.2327%" y="277" width="0.0381%" height="15" fill="rgb(253,3,0)" fg:x="64357" fg:w="47"/><text x="52.4827%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (47 samples, 0.04%)</title><rect x="52.2327%" y="261" width="0.0381%" height="15" fill="rgb(212,99,53)" fg:x="64357" fg:w="47"/><text x="52.4827%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (17 samples, 0.01%)</title><rect x="52.2571%" y="245" width="0.0138%" height="15" fill="rgb(249,111,54)" fg:x="64387" fg:w="17"/><text x="52.5071%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="52.2571%" y="229" width="0.0138%" height="15" fill="rgb(249,55,30)" fg:x="64387" fg:w="17"/><text x="52.5071%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="52.2587%" y="213" width="0.0122%" height="15" fill="rgb(237,47,42)" fg:x="64389" fg:w="15"/><text x="52.5087%" y="223.50"></text></g><g><title>sn_rust_dealloc (114 samples, 0.09%)</title><rect x="52.2709%" y="341" width="0.0925%" height="15" fill="rgb(211,20,18)" fg:x="64404" fg:w="114"/><text x="52.5209%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (7,921 samples, 6.43%)</title><rect x="45.9679%" y="357" width="6.4288%" height="15" fill="rgb(231,203,46)" fg:x="56638" fg:w="7921"/><text x="46.2179%" y="367.50">core::pt..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (41 samples, 0.03%)</title><rect x="52.3634%" y="341" width="0.0333%" height="15" fill="rgb(237,142,3)" fg:x="64518" fg:w="41"/><text x="52.6134%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (16 samples, 0.01%)</title><rect x="52.3967%" y="357" width="0.0130%" height="15" fill="rgb(241,107,1)" fg:x="64559" fg:w="16"/><text x="52.6467%" y="367.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="52.3967%" y="341" width="0.0130%" height="15" fill="rgb(229,83,13)" fg:x="64559" fg:w="16"/><text x="52.6467%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (16 samples, 0.01%)</title><rect x="52.3967%" y="325" width="0.0130%" height="15" fill="rgb(241,91,40)" fg:x="64559" fg:w="16"/><text x="52.6467%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (16 samples, 0.01%)</title><rect x="52.3967%" y="309" width="0.0130%" height="15" fill="rgb(225,3,45)" fg:x="64559" fg:w="16"/><text x="52.6467%" y="319.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (16 samples, 0.01%)</title><rect x="52.4925%" y="309" width="0.0130%" height="15" fill="rgb(244,223,14)" fg:x="64677" fg:w="16"/><text x="52.7425%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (16 samples, 0.01%)</title><rect x="52.4925%" y="293" width="0.0130%" height="15" fill="rgb(224,124,37)" fg:x="64677" fg:w="16"/><text x="52.7425%" y="303.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (17 samples, 0.01%)</title><rect x="52.5566%" y="277" width="0.0138%" height="15" fill="rgb(251,171,30)" fg:x="64756" fg:w="17"/><text x="52.8066%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (16 samples, 0.01%)</title><rect x="52.5574%" y="261" width="0.0130%" height="15" fill="rgb(236,46,54)" fg:x="64757" fg:w="16"/><text x="52.8074%" y="271.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (82 samples, 0.07%)</title><rect x="52.5127%" y="309" width="0.0666%" height="15" fill="rgb(245,213,5)" fg:x="64702" fg:w="82"/><text x="52.7627%" y="319.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (70 samples, 0.06%)</title><rect x="52.5225%" y="293" width="0.0568%" height="15" fill="rgb(230,144,27)" fg:x="64714" fg:w="70"/><text x="52.7725%" y="303.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (226 samples, 0.18%)</title><rect x="52.4097%" y="357" width="0.1834%" height="15" fill="rgb(220,86,6)" fg:x="64575" fg:w="226"/><text x="52.6597%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (223 samples, 0.18%)</title><rect x="52.4121%" y="341" width="0.1810%" height="15" fill="rgb(240,20,13)" fg:x="64578" fg:w="223"/><text x="52.6621%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (223 samples, 0.18%)</title><rect x="52.4121%" y="325" width="0.1810%" height="15" fill="rgb(217,89,34)" fg:x="64578" fg:w="223"/><text x="52.6621%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::update_min_max (17 samples, 0.01%)</title><rect x="52.5793%" y="309" width="0.0138%" height="15" fill="rgb(229,13,5)" fg:x="64784" fg:w="17"/><text x="52.8293%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (45 samples, 0.04%)</title><rect x="52.6296%" y="341" width="0.0365%" height="15" fill="rgb(244,67,35)" fg:x="64846" fg:w="45"/><text x="52.8796%" y="351.50"></text></g><g><title>core::time::Duration::as_nanos (55 samples, 0.04%)</title><rect x="52.6661%" y="341" width="0.0446%" height="15" fill="rgb(221,40,2)" fg:x="64891" fg:w="55"/><text x="52.9161%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (198 samples, 0.16%)</title><rect x="52.7108%" y="325" width="0.1607%" height="15" fill="rgb(237,157,21)" fg:x="64946" fg:w="198"/><text x="52.9608%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (70 samples, 0.06%)</title><rect x="52.9332%" y="293" width="0.0568%" height="15" fill="rgb(222,94,11)" fg:x="65220" fg:w="70"/><text x="53.1832%" y="303.50"></text></g><g><title>core::cmp::PartialOrd::ge (70 samples, 0.06%)</title><rect x="52.9332%" y="277" width="0.0568%" height="15" fill="rgb(249,113,6)" fg:x="65220" fg:w="70"/><text x="53.1832%" y="287.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (69 samples, 0.06%)</title><rect x="52.9340%" y="261" width="0.0560%" height="15" fill="rgb(238,137,36)" fg:x="65221" fg:w="69"/><text x="53.1840%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (36 samples, 0.03%)</title><rect x="52.9608%" y="245" width="0.0292%" height="15" fill="rgb(210,102,26)" fg:x="65254" fg:w="36"/><text x="53.2108%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (36 samples, 0.03%)</title><rect x="52.9608%" y="229" width="0.0292%" height="15" fill="rgb(218,30,30)" fg:x="65254" fg:w="36"/><text x="53.2108%" y="239.50"></text></g><g><title>std::time::SystemTime::duration_since (388 samples, 0.31%)</title><rect x="52.7108%" y="341" width="0.3149%" height="15" fill="rgb(214,67,26)" fg:x="64946" fg:w="388"/><text x="52.9608%" y="351.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (190 samples, 0.15%)</title><rect x="52.8715%" y="325" width="0.1542%" height="15" fill="rgb(251,9,53)" fg:x="65144" fg:w="190"/><text x="53.1215%" y="335.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (190 samples, 0.15%)</title><rect x="52.8715%" y="309" width="0.1542%" height="15" fill="rgb(228,204,25)" fg:x="65144" fg:w="190"/><text x="53.1215%" y="319.50"></text></g><g><title>core::time::Duration::new (44 samples, 0.04%)</title><rect x="52.9900%" y="293" width="0.0357%" height="15" fill="rgb(207,153,8)" fg:x="65290" fg:w="44"/><text x="53.2400%" y="303.50"></text></g><g><title>tremor_common::time::nanotime (1,498 samples, 1.22%)</title><rect x="52.5931%" y="357" width="1.2158%" height="15" fill="rgb(242,9,16)" fg:x="64801" fg:w="1498"/><text x="52.8431%" y="367.50"></text></g><g><title>std::time::SystemTime::now (965 samples, 0.78%)</title><rect x="53.0257%" y="341" width="0.7832%" height="15" fill="rgb(217,211,10)" fg:x="65334" fg:w="965"/><text x="53.2757%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (965 samples, 0.78%)</title><rect x="53.0257%" y="325" width="0.7832%" height="15" fill="rgb(219,228,52)" fg:x="65334" fg:w="965"/><text x="53.2757%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (965 samples, 0.78%)</title><rect x="53.0257%" y="309" width="0.7832%" height="15" fill="rgb(231,92,29)" fg:x="65334" fg:w="965"/><text x="53.2757%" y="319.50"></text></g><g><title>__clock_gettime (758 samples, 0.62%)</title><rect x="53.1937%" y="293" width="0.6152%" height="15" fill="rgb(232,8,23)" fg:x="65541" fg:w="758"/><text x="53.4437%" y="303.50"></text></g><g><title>__vdso_clock_gettime (732 samples, 0.59%)</title><rect x="53.2148%" y="277" width="0.5941%" height="15" fill="rgb(216,211,34)" fg:x="65567" fg:w="732"/><text x="53.4648%" y="287.50"></text></g><g><title>[[vdso]] (648 samples, 0.53%)</title><rect x="53.2830%" y="261" width="0.5259%" height="15" fill="rgb(236,151,0)" fg:x="65651" fg:w="648"/><text x="53.5330%" y="271.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (17,963 samples, 14.58%)</title><rect x="39.2502%" y="421" width="14.5789%" height="15" fill="rgb(209,168,3)" fg:x="48361" fg:w="17963"/><text x="39.5002%" y="431.50">tremor_runtime::connec..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16,541 samples, 13.42%)</title><rect x="40.4043%" y="405" width="13.4248%" height="15" fill="rgb(208,129,28)" fg:x="49783" fg:w="16541"/><text x="40.6543%" y="415.50">&lt;core::pin::Pin&lt;P&gt; a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,541 samples, 13.42%)</title><rect x="40.4043%" y="389" width="13.4248%" height="15" fill="rgb(229,78,22)" fg:x="49783" fg:w="16541"/><text x="40.6543%" y="399.50">&lt;core::future::from_..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (11,070 samples, 8.98%)</title><rect x="44.8447%" y="373" width="8.9845%" height="15" fill="rgb(228,187,13)" fg:x="55254" fg:w="11070"/><text x="45.0947%" y="383.50">&lt;tremor_runti..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (25 samples, 0.02%)</title><rect x="53.8089%" y="357" width="0.0203%" height="15" fill="rgb(240,119,24)" fg:x="66299" fg:w="25"/><text x="54.0589%" y="367.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (25 samples, 0.02%)</title><rect x="53.8089%" y="341" width="0.0203%" height="15" fill="rgb(209,194,42)" fg:x="66299" fg:w="25"/><text x="54.0589%" y="351.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (17,976 samples, 14.59%)</title><rect x="39.2502%" y="885" width="14.5895%" height="15" fill="rgb(247,200,46)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="895.50">async_global_executor:..</text></g><g><title>std::panic::catch_unwind (17,976 samples, 14.59%)</title><rect x="39.2502%" y="869" width="14.5895%" height="15" fill="rgb(218,76,16)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="879.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (17,976 samples, 14.59%)</title><rect x="39.2502%" y="853" width="14.5895%" height="15" fill="rgb(225,21,48)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (17,976 samples, 14.59%)</title><rect x="39.2502%" y="837" width="14.5895%" height="15" fill="rgb(239,223,50)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="847.50">std::panicking::try::d..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (17,976 samples, 14.59%)</title><rect x="39.2502%" y="821" width="14.5895%" height="15" fill="rgb(244,45,21)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="831.50">async_global_executor:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,976 samples, 14.59%)</title><rect x="39.2502%" y="805" width="14.5895%" height="15" fill="rgb(232,33,43)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="815.50">std::thread::local::Lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,976 samples, 14.59%)</title><rect x="39.2502%" y="789" width="14.5895%" height="15" fill="rgb(209,8,3)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="799.50">std::thread::local::Lo..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (17,976 samples, 14.59%)</title><rect x="39.2502%" y="773" width="14.5895%" height="15" fill="rgb(214,25,53)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="783.50">async_global_executor:..</text></g><g><title>async_global_executor::reactor::block_on (17,976 samples, 14.59%)</title><rect x="39.2502%" y="757" width="14.5895%" height="15" fill="rgb(254,186,54)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="767.50">async_global_executor:..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (17,976 samples, 14.59%)</title><rect x="39.2502%" y="741" width="14.5895%" height="15" fill="rgb(208,174,49)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="751.50">async_global_executor:..</text></g><g><title>async_io::driver::block_on (17,976 samples, 14.59%)</title><rect x="39.2502%" y="725" width="14.5895%" height="15" fill="rgb(233,191,51)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="735.50">async_io::driver::bloc..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,976 samples, 14.59%)</title><rect x="39.2502%" y="709" width="14.5895%" height="15" fill="rgb(222,134,10)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="719.50">&lt;futures_lite::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,976 samples, 14.59%)</title><rect x="39.2502%" y="693" width="14.5895%" height="15" fill="rgb(230,226,20)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="703.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::run::{{closure}} (17,976 samples, 14.59%)</title><rect x="39.2502%" y="677" width="14.5895%" height="15" fill="rgb(251,111,25)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="687.50">async_executor::Execut..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17,976 samples, 14.59%)</title><rect x="39.2502%" y="661" width="14.5895%" height="15" fill="rgb(224,40,46)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="671.50">&lt;futures_lite::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,976 samples, 14.59%)</title><rect x="39.2502%" y="645" width="14.5895%" height="15" fill="rgb(236,108,47)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="655.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17,976 samples, 14.59%)</title><rect x="39.2502%" y="629" width="14.5895%" height="15" fill="rgb(234,93,0)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="639.50">async_executor::Execut..</text></g><g><title>async_task::runnable::Runnable::run (17,976 samples, 14.59%)</title><rect x="39.2502%" y="613" width="14.5895%" height="15" fill="rgb(224,213,32)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="623.50">async_task::runnable::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17,976 samples, 14.59%)</title><rect x="39.2502%" y="597" width="14.5895%" height="15" fill="rgb(251,11,48)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="607.50">async_task::raw::RawTa..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17,976 samples, 14.59%)</title><rect x="39.2502%" y="581" width="14.5895%" height="15" fill="rgb(236,173,5)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="591.50">&lt;core::pin::Pin&lt;P&gt; as ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,976 samples, 14.59%)</title><rect x="39.2502%" y="565" width="14.5895%" height="15" fill="rgb(230,95,12)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="575.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (17,976 samples, 14.59%)</title><rect x="39.2502%" y="549" width="14.5895%" height="15" fill="rgb(232,209,1)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="559.50">async_executor::Execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (17,976 samples, 14.59%)</title><rect x="39.2502%" y="533" width="14.5895%" height="15" fill="rgb(232,6,1)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="543.50">&lt;async_std::task::buil..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (17,976 samples, 14.59%)</title><rect x="39.2502%" y="517" width="14.5895%" height="15" fill="rgb(210,224,50)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="527.50">async_std::task::task_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17,976 samples, 14.59%)</title><rect x="39.2502%" y="501" width="14.5895%" height="15" fill="rgb(228,127,35)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="511.50">std::thread::local::Lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,976 samples, 14.59%)</title><rect x="39.2502%" y="485" width="14.5895%" height="15" fill="rgb(245,102,45)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="495.50">std::thread::local::Lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (17,976 samples, 14.59%)</title><rect x="39.2502%" y="469" width="14.5895%" height="15" fill="rgb(214,1,49)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="479.50">async_std::task::task_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (17,976 samples, 14.59%)</title><rect x="39.2502%" y="453" width="14.5895%" height="15" fill="rgb(226,163,40)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="463.50">&lt;async_std::task::buil..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,976 samples, 14.59%)</title><rect x="39.2502%" y="437" width="14.5895%" height="15" fill="rgb(239,212,28)" fg:x="48361" fg:w="17976"/><text x="39.5002%" y="447.50">&lt;core::future::from_ge..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (13 samples, 0.01%)</title><rect x="53.8292%" y="421" width="0.0106%" height="15" fill="rgb(220,20,13)" fg:x="66324" fg:w="13"/><text x="54.0792%" y="431.50"></text></g><g><title>__rust_probestack (13 samples, 0.01%)</title><rect x="53.8292%" y="405" width="0.0106%" height="15" fill="rgb(210,164,35)" fg:x="66324" fg:w="13"/><text x="54.0792%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (75 samples, 0.06%)</title><rect x="53.9038%" y="453" width="0.0609%" height="15" fill="rgb(248,109,41)" fg:x="66416" fg:w="75"/><text x="54.1538%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.06%)</title><rect x="53.9038%" y="437" width="0.0609%" height="15" fill="rgb(238,23,50)" fg:x="66416" fg:w="75"/><text x="54.1538%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.06%)</title><rect x="53.9038%" y="421" width="0.0609%" height="15" fill="rgb(211,48,49)" fg:x="66416" fg:w="75"/><text x="54.1538%" y="431.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.05%)</title><rect x="53.9120%" y="405" width="0.0528%" height="15" fill="rgb(223,36,21)" fg:x="66426" fg:w="65"/><text x="54.1620%" y="415.50"></text></g><g><title>__rg_alloc (65 samples, 0.05%)</title><rect x="53.9120%" y="389" width="0.0528%" height="15" fill="rgb(207,123,46)" fg:x="66426" fg:w="65"/><text x="54.1620%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (65 samples, 0.05%)</title><rect x="53.9120%" y="373" width="0.0528%" height="15" fill="rgb(240,218,32)" fg:x="66426" fg:w="65"/><text x="54.1620%" y="383.50"></text></g><g><title>sn_rust_alloc (65 samples, 0.05%)</title><rect x="53.9120%" y="357" width="0.0528%" height="15" fill="rgb(252,5,43)" fg:x="66426" fg:w="65"/><text x="54.1620%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (16 samples, 0.01%)</title><rect x="53.9647%" y="453" width="0.0130%" height="15" fill="rgb(252,84,19)" fg:x="66491" fg:w="16"/><text x="54.2147%" y="463.50"></text></g><g><title>alloc::slice::hack::into_vec (16 samples, 0.01%)</title><rect x="53.9647%" y="437" width="0.0130%" height="15" fill="rgb(243,152,39)" fg:x="66491" fg:w="16"/><text x="54.2147%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (16 samples, 0.01%)</title><rect x="53.9647%" y="421" width="0.0130%" height="15" fill="rgb(234,160,15)" fg:x="66491" fg:w="16"/><text x="54.2147%" y="431.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (13 samples, 0.01%)</title><rect x="53.9874%" y="453" width="0.0106%" height="15" fill="rgb(237,34,20)" fg:x="66519" fg:w="13"/><text x="54.2374%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (13 samples, 0.01%)</title><rect x="53.9874%" y="437" width="0.0106%" height="15" fill="rgb(229,97,13)" fg:x="66519" fg:w="13"/><text x="54.2374%" y="447.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="53.9874%" y="421" width="0.0106%" height="15" fill="rgb(234,71,50)" fg:x="66519" fg:w="13"/><text x="54.2374%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.01%)</title><rect x="53.9874%" y="405" width="0.0106%" height="15" fill="rgb(253,155,4)" fg:x="66519" fg:w="13"/><text x="54.2374%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="53.9874%" y="389" width="0.0106%" height="15" fill="rgb(222,185,37)" fg:x="66519" fg:w="13"/><text x="54.2374%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (48 samples, 0.04%)</title><rect x="54.0248%" y="437" width="0.0390%" height="15" fill="rgb(251,177,13)" fg:x="66565" fg:w="48"/><text x="54.2748%" y="447.50"></text></g><g><title>core::time::Duration::as_nanos (31 samples, 0.03%)</title><rect x="54.0637%" y="437" width="0.0252%" height="15" fill="rgb(250,179,40)" fg:x="66613" fg:w="31"/><text x="54.3137%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (170 samples, 0.14%)</title><rect x="54.0889%" y="421" width="0.1380%" height="15" fill="rgb(242,44,2)" fg:x="66644" fg:w="170"/><text x="54.3389%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (70 samples, 0.06%)</title><rect x="54.2950%" y="389" width="0.0568%" height="15" fill="rgb(216,177,13)" fg:x="66898" fg:w="70"/><text x="54.5450%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::ge (70 samples, 0.06%)</title><rect x="54.2950%" y="373" width="0.0568%" height="15" fill="rgb(216,106,43)" fg:x="66898" fg:w="70"/><text x="54.5450%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (70 samples, 0.06%)</title><rect x="54.2950%" y="357" width="0.0568%" height="15" fill="rgb(216,183,2)" fg:x="66898" fg:w="70"/><text x="54.5450%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (36 samples, 0.03%)</title><rect x="54.3226%" y="341" width="0.0292%" height="15" fill="rgb(249,75,3)" fg:x="66932" fg:w="36"/><text x="54.5726%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (36 samples, 0.03%)</title><rect x="54.3226%" y="325" width="0.0292%" height="15" fill="rgb(219,67,39)" fg:x="66932" fg:w="36"/><text x="54.5726%" y="335.50"></text></g><g><title>std::time::SystemTime::duration_since (372 samples, 0.30%)</title><rect x="54.0889%" y="437" width="0.3019%" height="15" fill="rgb(253,228,2)" fg:x="66644" fg:w="372"/><text x="54.3389%" y="447.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (202 samples, 0.16%)</title><rect x="54.2269%" y="421" width="0.1639%" height="15" fill="rgb(235,138,27)" fg:x="66814" fg:w="202"/><text x="54.4769%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (202 samples, 0.16%)</title><rect x="54.2269%" y="405" width="0.1639%" height="15" fill="rgb(236,97,51)" fg:x="66814" fg:w="202"/><text x="54.4769%" y="415.50"></text></g><g><title>core::time::Duration::new (48 samples, 0.04%)</title><rect x="54.3518%" y="389" width="0.0390%" height="15" fill="rgb(240,80,30)" fg:x="66968" fg:w="48"/><text x="54.6018%" y="399.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,513 samples, 1.23%)</title><rect x="53.8397%" y="581" width="1.2280%" height="15" fill="rgb(230,178,19)" fg:x="66337" fg:w="1513"/><text x="54.0897%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,513 samples, 1.23%)</title><rect x="53.8397%" y="565" width="1.2280%" height="15" fill="rgb(210,190,27)" fg:x="66337" fg:w="1513"/><text x="54.0897%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,513 samples, 1.23%)</title><rect x="53.8397%" y="549" width="1.2280%" height="15" fill="rgb(222,107,31)" fg:x="66337" fg:w="1513"/><text x="54.0897%" y="559.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,513 samples, 1.23%)</title><rect x="53.8397%" y="533" width="1.2280%" height="15" fill="rgb(216,127,34)" fg:x="66337" fg:w="1513"/><text x="54.0897%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (1,513 samples, 1.23%)</title><rect x="53.8397%" y="517" width="1.2280%" height="15" fill="rgb(234,116,52)" fg:x="66337" fg:w="1513"/><text x="54.0897%" y="527.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (1,513 samples, 1.23%)</title><rect x="53.8397%" y="501" width="1.2280%" height="15" fill="rgb(222,124,15)" fg:x="66337" fg:w="1513"/><text x="54.0897%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (1,513 samples, 1.23%)</title><rect x="53.8397%" y="485" width="1.2280%" height="15" fill="rgb(231,179,28)" fg:x="66337" fg:w="1513"/><text x="54.0897%" y="495.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,513 samples, 1.23%)</title><rect x="53.8397%" y="469" width="1.2280%" height="15" fill="rgb(226,93,45)" fg:x="66337" fg:w="1513"/><text x="54.0897%" y="479.50"></text></g><g><title>tremor_common::time::nanotime (1,318 samples, 1.07%)</title><rect x="53.9980%" y="453" width="1.0697%" height="15" fill="rgb(215,8,51)" fg:x="66532" fg:w="1318"/><text x="54.2480%" y="463.50"></text></g><g><title>std::time::SystemTime::now (834 samples, 0.68%)</title><rect x="54.3908%" y="437" width="0.6769%" height="15" fill="rgb(223,106,5)" fg:x="67016" fg:w="834"/><text x="54.6408%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (834 samples, 0.68%)</title><rect x="54.3908%" y="421" width="0.6769%" height="15" fill="rgb(250,191,5)" fg:x="67016" fg:w="834"/><text x="54.6408%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (834 samples, 0.68%)</title><rect x="54.3908%" y="405" width="0.6769%" height="15" fill="rgb(242,132,44)" fg:x="67016" fg:w="834"/><text x="54.6408%" y="415.50"></text></g><g><title>__clock_gettime (664 samples, 0.54%)</title><rect x="54.5288%" y="389" width="0.5389%" height="15" fill="rgb(251,152,29)" fg:x="67186" fg:w="664"/><text x="54.7788%" y="399.50"></text></g><g><title>__vdso_clock_gettime (624 samples, 0.51%)</title><rect x="54.5612%" y="373" width="0.5064%" height="15" fill="rgb(218,179,5)" fg:x="67226" fg:w="624"/><text x="54.8112%" y="383.50"></text></g><g><title>[[vdso]] (563 samples, 0.46%)</title><rect x="54.6108%" y="357" width="0.4569%" height="15" fill="rgb(227,67,19)" fg:x="67287" fg:w="563"/><text x="54.8608%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (400 samples, 0.32%)</title><rect x="55.2462%" y="469" width="0.3246%" height="15" fill="rgb(233,119,31)" fg:x="68070" fg:w="400"/><text x="55.4962%" y="479.50"></text></g><g><title>core::ptr::read (372 samples, 0.30%)</title><rect x="55.2690%" y="453" width="0.3019%" height="15" fill="rgb(241,120,22)" fg:x="68098" fg:w="372"/><text x="55.5190%" y="463.50"></text></g><g><title>[libc-2.31.so] (362 samples, 0.29%)</title><rect x="55.2771%" y="437" width="0.2938%" height="15" fill="rgb(224,102,30)" fg:x="68108" fg:w="362"/><text x="55.5271%" y="447.50"></text></g><g><title>[libc-2.31.so] (144 samples, 0.12%)</title><rect x="55.5871%" y="453" width="0.1169%" height="15" fill="rgb(210,164,37)" fg:x="68490" fg:w="144"/><text x="55.8371%" y="463.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (38 samples, 0.03%)</title><rect x="55.7681%" y="421" width="0.0308%" height="15" fill="rgb(226,191,16)" fg:x="68713" fg:w="38"/><text x="56.0181%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="55.7876%" y="405" width="0.0114%" height="15" fill="rgb(214,40,45)" fg:x="68737" fg:w="14"/><text x="56.0376%" y="415.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (23 samples, 0.02%)</title><rect x="55.7989%" y="421" width="0.0187%" height="15" fill="rgb(244,29,26)" fg:x="68751" fg:w="23"/><text x="56.0489%" y="431.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 0.08%)</title><rect x="55.7454%" y="437" width="0.0795%" height="15" fill="rgb(216,16,5)" fg:x="68685" fg:w="98"/><text x="55.9954%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (317 samples, 0.26%)</title><rect x="55.5717%" y="469" width="0.2573%" height="15" fill="rgb(249,76,35)" fg:x="68471" fg:w="317"/><text x="55.8217%" y="479.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (154 samples, 0.12%)</title><rect x="55.7040%" y="453" width="0.1250%" height="15" fill="rgb(207,11,44)" fg:x="68634" fg:w="154"/><text x="55.9540%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (182 samples, 0.15%)</title><rect x="55.8379%" y="341" width="0.1477%" height="15" fill="rgb(228,190,49)" fg:x="68799" fg:w="182"/><text x="56.0879%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (182 samples, 0.15%)</title><rect x="55.8379%" y="325" width="0.1477%" height="15" fill="rgb(214,173,12)" fg:x="68799" fg:w="182"/><text x="56.0879%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (182 samples, 0.15%)</title><rect x="55.8379%" y="309" width="0.1477%" height="15" fill="rgb(218,26,35)" fg:x="68799" fg:w="182"/><text x="56.0879%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (177 samples, 0.14%)</title><rect x="55.8420%" y="293" width="0.1437%" height="15" fill="rgb(220,200,19)" fg:x="68804" fg:w="177"/><text x="56.0920%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (177 samples, 0.14%)</title><rect x="55.8420%" y="277" width="0.1437%" height="15" fill="rgb(239,95,49)" fg:x="68804" fg:w="177"/><text x="56.0920%" y="287.50"></text></g><g><title>alloc::alloc::alloc (177 samples, 0.14%)</title><rect x="55.8420%" y="261" width="0.1437%" height="15" fill="rgb(235,85,53)" fg:x="68804" fg:w="177"/><text x="56.0920%" y="271.50"></text></g><g><title>__rg_alloc (177 samples, 0.14%)</title><rect x="55.8420%" y="245" width="0.1437%" height="15" fill="rgb(233,133,31)" fg:x="68804" fg:w="177"/><text x="56.0920%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (177 samples, 0.14%)</title><rect x="55.8420%" y="229" width="0.1437%" height="15" fill="rgb(218,25,20)" fg:x="68804" fg:w="177"/><text x="56.0920%" y="239.50"></text></g><g><title>sn_rust_alloc (171 samples, 0.14%)</title><rect x="55.8468%" y="213" width="0.1388%" height="15" fill="rgb(252,210,38)" fg:x="68810" fg:w="171"/><text x="56.0968%" y="223.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (18 samples, 0.01%)</title><rect x="55.9710%" y="197" width="0.0146%" height="15" fill="rgb(242,134,21)" fg:x="68963" fg:w="18"/><text x="56.2210%" y="207.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (224 samples, 0.18%)</title><rect x="55.8379%" y="469" width="0.1818%" height="15" fill="rgb(213,28,48)" fg:x="68799" fg:w="224"/><text x="56.0879%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (224 samples, 0.18%)</title><rect x="55.8379%" y="453" width="0.1818%" height="15" fill="rgb(250,196,2)" fg:x="68799" fg:w="224"/><text x="56.0879%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (224 samples, 0.18%)</title><rect x="55.8379%" y="437" width="0.1818%" height="15" fill="rgb(227,5,17)" fg:x="68799" fg:w="224"/><text x="56.0879%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (224 samples, 0.18%)</title><rect x="55.8379%" y="421" width="0.1818%" height="15" fill="rgb(221,226,24)" fg:x="68799" fg:w="224"/><text x="56.0879%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (224 samples, 0.18%)</title><rect x="55.8379%" y="405" width="0.1818%" height="15" fill="rgb(211,5,48)" fg:x="68799" fg:w="224"/><text x="56.0879%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (224 samples, 0.18%)</title><rect x="55.8379%" y="389" width="0.1818%" height="15" fill="rgb(219,150,6)" fg:x="68799" fg:w="224"/><text x="56.0879%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (224 samples, 0.18%)</title><rect x="55.8379%" y="373" width="0.1818%" height="15" fill="rgb(251,46,16)" fg:x="68799" fg:w="224"/><text x="56.0879%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (224 samples, 0.18%)</title><rect x="55.8379%" y="357" width="0.1818%" height="15" fill="rgb(220,204,40)" fg:x="68799" fg:w="224"/><text x="56.0879%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (42 samples, 0.03%)</title><rect x="55.9856%" y="341" width="0.0341%" height="15" fill="rgb(211,85,2)" fg:x="68981" fg:w="42"/><text x="56.2356%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.03%)</title><rect x="55.9856%" y="325" width="0.0341%" height="15" fill="rgb(229,17,7)" fg:x="68981" fg:w="42"/><text x="56.2356%" y="335.50"></text></g><g><title>[libc-2.31.so] (34 samples, 0.03%)</title><rect x="55.9921%" y="309" width="0.0276%" height="15" fill="rgb(239,72,28)" fg:x="68989" fg:w="34"/><text x="56.2421%" y="319.50"></text></g><g><title>[libc-2.31.so] (685 samples, 0.56%)</title><rect x="56.0197%" y="469" width="0.5560%" height="15" fill="rgb(230,47,54)" fg:x="69023" fg:w="685"/><text x="56.2697%" y="479.50"></text></g><g><title>[libc-2.31.so] (434 samples, 0.35%)</title><rect x="56.5878%" y="453" width="0.3522%" height="15" fill="rgb(214,50,8)" fg:x="69723" fg:w="434"/><text x="56.8378%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,080 samples, 0.88%)</title><rect x="57.0099%" y="341" width="0.8765%" height="15" fill="rgb(216,198,43)" fg:x="70243" fg:w="1080"/><text x="57.2599%" y="351.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="57.8864%" y="341" width="0.0138%" height="15" fill="rgb(234,20,35)" fg:x="71323" fg:w="17"/><text x="58.1364%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,633 samples, 1.33%)</title><rect x="56.5757%" y="469" width="1.3254%" height="15" fill="rgb(254,45,19)" fg:x="69708" fg:w="1633"/><text x="56.8257%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,184 samples, 0.96%)</title><rect x="56.9401%" y="453" width="0.9609%" height="15" fill="rgb(219,14,44)" fg:x="70157" fg:w="1184"/><text x="57.1901%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,184 samples, 0.96%)</title><rect x="56.9401%" y="437" width="0.9609%" height="15" fill="rgb(217,220,26)" fg:x="70157" fg:w="1184"/><text x="57.1901%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,184 samples, 0.96%)</title><rect x="56.9401%" y="421" width="0.9609%" height="15" fill="rgb(213,158,28)" fg:x="70157" fg:w="1184"/><text x="57.1901%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1,183 samples, 0.96%)</title><rect x="56.9409%" y="405" width="0.9601%" height="15" fill="rgb(252,51,52)" fg:x="70158" fg:w="1183"/><text x="57.1909%" y="415.50"></text></g><g><title>__rg_alloc (1,183 samples, 0.96%)</title><rect x="56.9409%" y="389" width="0.9601%" height="15" fill="rgb(246,89,16)" fg:x="70158" fg:w="1183"/><text x="57.1909%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,183 samples, 0.96%)</title><rect x="56.9409%" y="373" width="0.9601%" height="15" fill="rgb(216,158,49)" fg:x="70158" fg:w="1183"/><text x="57.1909%" y="383.50"></text></g><g><title>sn_rust_alloc (1,182 samples, 0.96%)</title><rect x="56.9417%" y="357" width="0.9593%" height="15" fill="rgb(236,107,19)" fg:x="70159" fg:w="1182"/><text x="57.1917%" y="367.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (14 samples, 0.01%)</title><rect x="57.9091%" y="437" width="0.0114%" height="15" fill="rgb(228,185,30)" fg:x="71351" fg:w="14"/><text x="58.1591%" y="447.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (14 samples, 0.01%)</title><rect x="57.9091%" y="421" width="0.0114%" height="15" fill="rgb(246,134,8)" fg:x="71351" fg:w="14"/><text x="58.1591%" y="431.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (14 samples, 0.01%)</title><rect x="57.9091%" y="405" width="0.0114%" height="15" fill="rgb(214,143,50)" fg:x="71351" fg:w="14"/><text x="58.1591%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (14 samples, 0.01%)</title><rect x="57.9091%" y="389" width="0.0114%" height="15" fill="rgb(228,75,8)" fg:x="71351" fg:w="14"/><text x="58.1591%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (14 samples, 0.01%)</title><rect x="57.9091%" y="373" width="0.0114%" height="15" fill="rgb(207,175,4)" fg:x="71351" fg:w="14"/><text x="58.1591%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="57.9254%" y="373" width="0.0154%" height="15" fill="rgb(205,108,24)" fg:x="71371" fg:w="19"/><text x="58.1754%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="57.9254%" y="357" width="0.0154%" height="15" fill="rgb(244,120,49)" fg:x="71371" fg:w="19"/><text x="58.1754%" y="367.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="57.9254%" y="341" width="0.0154%" height="15" fill="rgb(223,47,38)" fg:x="71371" fg:w="19"/><text x="58.1754%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="57.9254%" y="325" width="0.0154%" height="15" fill="rgb(229,179,11)" fg:x="71371" fg:w="19"/><text x="58.1754%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (26 samples, 0.02%)</title><rect x="57.9205%" y="437" width="0.0211%" height="15" fill="rgb(231,122,1)" fg:x="71365" fg:w="26"/><text x="58.1705%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="57.9205%" y="421" width="0.0211%" height="15" fill="rgb(245,119,9)" fg:x="71365" fg:w="26"/><text x="58.1705%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (20 samples, 0.02%)</title><rect x="57.9254%" y="405" width="0.0162%" height="15" fill="rgb(241,163,25)" fg:x="71371" fg:w="20"/><text x="58.1754%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="57.9254%" y="389" width="0.0162%" height="15" fill="rgb(217,214,3)" fg:x="71371" fg:w="20"/><text x="58.1754%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.05%)</title><rect x="57.9010%" y="453" width="0.0479%" height="15" fill="rgb(240,86,28)" fg:x="71341" fg:w="59"/><text x="58.1510%" y="463.50"></text></g><g><title>sn_rust_dealloc (65 samples, 0.05%)</title><rect x="57.9489%" y="453" width="0.0528%" height="15" fill="rgb(215,47,9)" fg:x="71400" fg:w="65"/><text x="58.1989%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (140 samples, 0.11%)</title><rect x="57.9010%" y="469" width="0.1136%" height="15" fill="rgb(252,25,45)" fg:x="71341" fg:w="140"/><text x="58.1510%" y="479.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (16 samples, 0.01%)</title><rect x="58.0017%" y="453" width="0.0130%" height="15" fill="rgb(251,164,9)" fg:x="71465" fg:w="16"/><text x="58.2517%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (57 samples, 0.05%)</title><rect x="58.0333%" y="469" width="0.0463%" height="15" fill="rgb(233,194,0)" fg:x="71504" fg:w="57"/><text x="58.2833%" y="479.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (57 samples, 0.05%)</title><rect x="58.0333%" y="453" width="0.0463%" height="15" fill="rgb(249,111,24)" fg:x="71504" fg:w="57"/><text x="58.2833%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (47 samples, 0.04%)</title><rect x="58.0414%" y="437" width="0.0381%" height="15" fill="rgb(250,223,3)" fg:x="71514" fg:w="47"/><text x="58.2914%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.04%)</title><rect x="58.0414%" y="421" width="0.0381%" height="15" fill="rgb(236,178,37)" fg:x="71514" fg:w="47"/><text x="58.2914%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (26 samples, 0.02%)</title><rect x="58.0585%" y="405" width="0.0211%" height="15" fill="rgb(241,158,50)" fg:x="71535" fg:w="26"/><text x="58.3085%" y="415.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (26 samples, 0.02%)</title><rect x="58.0585%" y="389" width="0.0211%" height="15" fill="rgb(213,121,41)" fg:x="71535" fg:w="26"/><text x="58.3085%" y="399.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (26 samples, 0.02%)</title><rect x="58.0585%" y="373" width="0.0211%" height="15" fill="rgb(240,92,3)" fg:x="71535" fg:w="26"/><text x="58.3085%" y="383.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (26 samples, 0.02%)</title><rect x="58.0585%" y="357" width="0.0211%" height="15" fill="rgb(205,123,3)" fg:x="71535" fg:w="26"/><text x="58.3085%" y="367.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (19 samples, 0.02%)</title><rect x="58.0641%" y="341" width="0.0154%" height="15" fill="rgb(205,97,47)" fg:x="71542" fg:w="19"/><text x="58.3141%" y="351.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (13 samples, 0.01%)</title><rect x="58.0804%" y="469" width="0.0106%" height="15" fill="rgb(247,152,14)" fg:x="71562" fg:w="13"/><text x="58.3304%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,750 samples, 3.04%)</title><rect x="55.0677%" y="565" width="3.0435%" height="15" fill="rgb(248,195,53)" fg:x="67850" fg:w="3750"/><text x="55.3177%" y="575.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (3,750 samples, 3.04%)</title><rect x="55.0677%" y="549" width="3.0435%" height="15" fill="rgb(226,201,16)" fg:x="67850" fg:w="3750"/><text x="55.3177%" y="559.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,750 samples, 3.04%)</title><rect x="55.0677%" y="533" width="3.0435%" height="15" fill="rgb(205,98,0)" fg:x="67850" fg:w="3750"/><text x="55.3177%" y="543.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,750 samples, 3.04%)</title><rect x="55.0677%" y="517" width="3.0435%" height="15" fill="rgb(214,191,48)" fg:x="67850" fg:w="3750"/><text x="55.3177%" y="527.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,750 samples, 3.04%)</title><rect x="55.0677%" y="501" width="3.0435%" height="15" fill="rgb(237,112,39)" fg:x="67850" fg:w="3750"/><text x="55.3177%" y="511.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (3,738 samples, 3.03%)</title><rect x="55.0774%" y="485" width="3.0338%" height="15" fill="rgb(247,203,27)" fg:x="67862" fg:w="3738"/><text x="55.3274%" y="495.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (25 samples, 0.02%)</title><rect x="58.0909%" y="469" width="0.0203%" height="15" fill="rgb(235,124,28)" fg:x="71575" fg:w="25"/><text x="58.3409%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="58.0909%" y="453" width="0.0203%" height="15" fill="rgb(208,207,46)" fg:x="71575" fg:w="25"/><text x="58.3409%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="58.0909%" y="437" width="0.0203%" height="15" fill="rgb(234,176,4)" fg:x="71575" fg:w="25"/><text x="58.3409%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (123 samples, 0.10%)</title><rect x="58.2313%" y="485" width="0.0998%" height="15" fill="rgb(230,133,28)" fg:x="71748" fg:w="123"/><text x="58.4813%" y="495.50"></text></g><g><title>core::mem::replace (123 samples, 0.10%)</title><rect x="58.2313%" y="469" width="0.0998%" height="15" fill="rgb(211,137,40)" fg:x="71748" fg:w="123"/><text x="58.4813%" y="479.50"></text></g><g><title>core::ptr::read (123 samples, 0.10%)</title><rect x="58.2313%" y="453" width="0.0998%" height="15" fill="rgb(254,35,13)" fg:x="71748" fg:w="123"/><text x="58.4813%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (193 samples, 0.16%)</title><rect x="58.2046%" y="501" width="0.1566%" height="15" fill="rgb(225,49,51)" fg:x="71715" fg:w="193"/><text x="58.4546%" y="511.50"></text></g><g><title>core::mem::drop (37 samples, 0.03%)</title><rect x="58.3312%" y="485" width="0.0300%" height="15" fill="rgb(251,10,15)" fg:x="71871" fg:w="37"/><text x="58.5812%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (37 samples, 0.03%)</title><rect x="58.3312%" y="469" width="0.0300%" height="15" fill="rgb(228,207,15)" fg:x="71871" fg:w="37"/><text x="58.5812%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (156 samples, 0.13%)</title><rect x="58.3612%" y="501" width="0.1266%" height="15" fill="rgb(241,99,19)" fg:x="71908" fg:w="156"/><text x="58.6112%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (147 samples, 0.12%)</title><rect x="58.3685%" y="485" width="0.1193%" height="15" fill="rgb(207,104,49)" fg:x="71917" fg:w="147"/><text x="58.6185%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.12%)</title><rect x="58.3685%" y="469" width="0.1193%" height="15" fill="rgb(234,99,18)" fg:x="71917" fg:w="147"/><text x="58.6185%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (136 samples, 0.11%)</title><rect x="58.3774%" y="453" width="0.1104%" height="15" fill="rgb(213,191,49)" fg:x="71928" fg:w="136"/><text x="58.6274%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (136 samples, 0.11%)</title><rect x="58.3774%" y="437" width="0.1104%" height="15" fill="rgb(210,226,19)" fg:x="71928" fg:w="136"/><text x="58.6274%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (136 samples, 0.11%)</title><rect x="58.3774%" y="421" width="0.1104%" height="15" fill="rgb(229,97,18)" fg:x="71928" fg:w="136"/><text x="58.6274%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (136 samples, 0.11%)</title><rect x="58.3774%" y="405" width="0.1104%" height="15" fill="rgb(211,167,15)" fg:x="71928" fg:w="136"/><text x="58.6274%" y="415.50"></text></g><g><title>core::task::wake::Waker::will_wake (21 samples, 0.02%)</title><rect x="58.4943%" y="501" width="0.0170%" height="15" fill="rgb(210,169,34)" fg:x="72072" fg:w="21"/><text x="58.7443%" y="511.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="58.4943%" y="485" width="0.0170%" height="15" fill="rgb(241,121,31)" fg:x="72072" fg:w="21"/><text x="58.7443%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.02%)</title><rect x="58.4959%" y="469" width="0.0154%" height="15" fill="rgb(232,40,11)" fg:x="72074" fg:w="19"/><text x="58.7459%" y="479.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="58.4959%" y="453" width="0.0154%" height="15" fill="rgb(205,86,26)" fg:x="72074" fg:w="19"/><text x="58.7459%" y="463.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="58.5170%" y="469" width="0.0130%" height="15" fill="rgb(231,126,28)" fg:x="72100" fg:w="16"/><text x="58.7670%" y="479.50"></text></g><g><title>std::sync::poison::Flag::borrow (16 samples, 0.01%)</title><rect x="58.5170%" y="453" width="0.0130%" height="15" fill="rgb(219,221,18)" fg:x="72100" fg:w="16"/><text x="58.7670%" y="463.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (658 samples, 0.53%)</title><rect x="58.1550%" y="517" width="0.5340%" height="15" fill="rgb(211,40,0)" fg:x="71654" fg:w="658"/><text x="58.4050%" y="527.50"></text></g><g><title>event_listener::Inner::lock (219 samples, 0.18%)</title><rect x="58.5113%" y="501" width="0.1777%" height="15" fill="rgb(239,85,43)" fg:x="72093" fg:w="219"/><text x="58.7613%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (212 samples, 0.17%)</title><rect x="58.5170%" y="485" width="0.1721%" height="15" fill="rgb(231,55,21)" fg:x="72100" fg:w="212"/><text x="58.7670%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (196 samples, 0.16%)</title><rect x="58.5300%" y="469" width="0.1591%" height="15" fill="rgb(225,184,43)" fg:x="72116" fg:w="196"/><text x="58.7800%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (196 samples, 0.16%)</title><rect x="58.5300%" y="453" width="0.1591%" height="15" fill="rgb(251,158,41)" fg:x="72116" fg:w="196"/><text x="58.7800%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (196 samples, 0.16%)</title><rect x="58.5300%" y="437" width="0.1591%" height="15" fill="rgb(234,159,37)" fg:x="72116" fg:w="196"/><text x="58.7800%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (196 samples, 0.16%)</title><rect x="58.5300%" y="421" width="0.1591%" height="15" fill="rgb(216,204,22)" fg:x="72116" fg:w="196"/><text x="58.7800%" y="431.50"></text></g><g><title>concurrent_queue::full_fence (245 samples, 0.20%)</title><rect x="58.7662%" y="469" width="0.1988%" height="15" fill="rgb(214,17,3)" fg:x="72407" fg:w="245"/><text x="59.0162%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (245 samples, 0.20%)</title><rect x="58.7662%" y="453" width="0.1988%" height="15" fill="rgb(212,111,17)" fg:x="72407" fg:w="245"/><text x="59.0162%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (245 samples, 0.20%)</title><rect x="58.7662%" y="437" width="0.1988%" height="15" fill="rgb(221,157,24)" fg:x="72407" fg:w="245"/><text x="59.0162%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (245 samples, 0.20%)</title><rect x="58.7662%" y="421" width="0.1988%" height="15" fill="rgb(252,16,13)" fg:x="72407" fg:w="245"/><text x="59.0162%" y="431.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1,063 samples, 0.86%)</title><rect x="58.1112%" y="533" width="0.8627%" height="15" fill="rgb(221,62,2)" fg:x="71600" fg:w="1063"/><text x="58.3612%" y="543.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (351 samples, 0.28%)</title><rect x="58.6891%" y="517" width="0.2849%" height="15" fill="rgb(247,87,22)" fg:x="72312" fg:w="351"/><text x="58.9391%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (336 samples, 0.27%)</title><rect x="58.7013%" y="501" width="0.2727%" height="15" fill="rgb(215,73,9)" fg:x="72327" fg:w="336"/><text x="58.9513%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (313 samples, 0.25%)</title><rect x="58.7199%" y="485" width="0.2540%" height="15" fill="rgb(207,175,33)" fg:x="72350" fg:w="313"/><text x="58.9699%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (530 samples, 0.43%)</title><rect x="59.8984%" y="389" width="0.4302%" height="15" fill="rgb(243,129,54)" fg:x="73802" fg:w="530"/><text x="60.1484%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (530 samples, 0.43%)</title><rect x="59.8984%" y="373" width="0.4302%" height="15" fill="rgb(227,119,45)" fg:x="73802" fg:w="530"/><text x="60.1484%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (530 samples, 0.43%)</title><rect x="59.8984%" y="357" width="0.4302%" height="15" fill="rgb(205,109,36)" fg:x="73802" fg:w="530"/><text x="60.1484%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (523 samples, 0.42%)</title><rect x="59.9041%" y="341" width="0.4245%" height="15" fill="rgb(205,6,39)" fg:x="73809" fg:w="523"/><text x="60.1541%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (523 samples, 0.42%)</title><rect x="59.9041%" y="325" width="0.4245%" height="15" fill="rgb(221,32,16)" fg:x="73809" fg:w="523"/><text x="60.1541%" y="335.50"></text></g><g><title>alloc::alloc::alloc (523 samples, 0.42%)</title><rect x="59.9041%" y="309" width="0.4245%" height="15" fill="rgb(228,144,50)" fg:x="73809" fg:w="523"/><text x="60.1541%" y="319.50"></text></g><g><title>__rg_alloc (523 samples, 0.42%)</title><rect x="59.9041%" y="293" width="0.4245%" height="15" fill="rgb(229,201,53)" fg:x="73809" fg:w="523"/><text x="60.1541%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (523 samples, 0.42%)</title><rect x="59.9041%" y="277" width="0.4245%" height="15" fill="rgb(249,153,27)" fg:x="73809" fg:w="523"/><text x="60.1541%" y="287.50"></text></g><g><title>sn_rust_alloc (509 samples, 0.41%)</title><rect x="59.9154%" y="261" width="0.4131%" height="15" fill="rgb(227,106,25)" fg:x="73823" fg:w="509"/><text x="60.1654%" y="271.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (43 samples, 0.03%)</title><rect x="60.2936%" y="245" width="0.0349%" height="15" fill="rgb(230,65,29)" fg:x="74289" fg:w="43"/><text x="60.5436%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (628 samples, 0.51%)</title><rect x="59.8748%" y="469" width="0.5097%" height="15" fill="rgb(221,57,46)" fg:x="73773" fg:w="628"/><text x="60.1248%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (606 samples, 0.49%)</title><rect x="59.8927%" y="453" width="0.4918%" height="15" fill="rgb(229,161,17)" fg:x="73795" fg:w="606"/><text x="60.1427%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (606 samples, 0.49%)</title><rect x="59.8927%" y="437" width="0.4918%" height="15" fill="rgb(222,213,11)" fg:x="73795" fg:w="606"/><text x="60.1427%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (606 samples, 0.49%)</title><rect x="59.8927%" y="421" width="0.4918%" height="15" fill="rgb(235,35,13)" fg:x="73795" fg:w="606"/><text x="60.1427%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (606 samples, 0.49%)</title><rect x="59.8927%" y="405" width="0.4918%" height="15" fill="rgb(233,158,34)" fg:x="73795" fg:w="606"/><text x="60.1427%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (69 samples, 0.06%)</title><rect x="60.3285%" y="389" width="0.0560%" height="15" fill="rgb(215,151,48)" fg:x="74332" fg:w="69"/><text x="60.5785%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.06%)</title><rect x="60.3285%" y="373" width="0.0560%" height="15" fill="rgb(229,84,14)" fg:x="74332" fg:w="69"/><text x="60.5785%" y="383.50"></text></g><g><title>[libc-2.31.so] (66 samples, 0.05%)</title><rect x="60.3310%" y="357" width="0.0536%" height="15" fill="rgb(229,68,14)" fg:x="74335" fg:w="66"/><text x="60.5810%" y="367.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (101 samples, 0.08%)</title><rect x="60.5201%" y="181" width="0.0820%" height="15" fill="rgb(243,106,26)" fg:x="74568" fg:w="101"/><text x="60.7701%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (229 samples, 0.19%)</title><rect x="60.4170%" y="325" width="0.1859%" height="15" fill="rgb(206,45,38)" fg:x="74441" fg:w="229"/><text x="60.6670%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (229 samples, 0.19%)</title><rect x="60.4170%" y="309" width="0.1859%" height="15" fill="rgb(226,6,15)" fg:x="74441" fg:w="229"/><text x="60.6670%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (229 samples, 0.19%)</title><rect x="60.4170%" y="293" width="0.1859%" height="15" fill="rgb(232,22,54)" fg:x="74441" fg:w="229"/><text x="60.6670%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (222 samples, 0.18%)</title><rect x="60.4227%" y="277" width="0.1802%" height="15" fill="rgb(229,222,32)" fg:x="74448" fg:w="222"/><text x="60.6727%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (222 samples, 0.18%)</title><rect x="60.4227%" y="261" width="0.1802%" height="15" fill="rgb(228,62,29)" fg:x="74448" fg:w="222"/><text x="60.6727%" y="271.50"></text></g><g><title>alloc::alloc::alloc (222 samples, 0.18%)</title><rect x="60.4227%" y="245" width="0.1802%" height="15" fill="rgb(251,103,34)" fg:x="74448" fg:w="222"/><text x="60.6727%" y="255.50"></text></g><g><title>__rg_alloc (222 samples, 0.18%)</title><rect x="60.4227%" y="229" width="0.1802%" height="15" fill="rgb(233,12,30)" fg:x="74448" fg:w="222"/><text x="60.6727%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (222 samples, 0.18%)</title><rect x="60.4227%" y="213" width="0.1802%" height="15" fill="rgb(238,52,0)" fg:x="74448" fg:w="222"/><text x="60.6727%" y="223.50"></text></g><g><title>sn_rust_alloc (215 samples, 0.17%)</title><rect x="60.4284%" y="197" width="0.1745%" height="15" fill="rgb(223,98,5)" fg:x="74455" fg:w="215"/><text x="60.6784%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (417 samples, 0.34%)</title><rect x="60.4056%" y="405" width="0.3384%" height="15" fill="rgb(228,75,37)" fg:x="74427" fg:w="417"/><text x="60.6556%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (403 samples, 0.33%)</title><rect x="60.4170%" y="389" width="0.3271%" height="15" fill="rgb(205,115,49)" fg:x="74441" fg:w="403"/><text x="60.6670%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (403 samples, 0.33%)</title><rect x="60.4170%" y="373" width="0.3271%" height="15" fill="rgb(250,154,43)" fg:x="74441" fg:w="403"/><text x="60.6670%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (403 samples, 0.33%)</title><rect x="60.4170%" y="357" width="0.3271%" height="15" fill="rgb(226,43,29)" fg:x="74441" fg:w="403"/><text x="60.6670%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (403 samples, 0.33%)</title><rect x="60.4170%" y="341" width="0.3271%" height="15" fill="rgb(249,228,39)" fg:x="74441" fg:w="403"/><text x="60.6670%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (174 samples, 0.14%)</title><rect x="60.6029%" y="325" width="0.1412%" height="15" fill="rgb(216,79,43)" fg:x="74670" fg:w="174"/><text x="60.8529%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (174 samples, 0.14%)</title><rect x="60.6029%" y="309" width="0.1412%" height="15" fill="rgb(228,95,12)" fg:x="74670" fg:w="174"/><text x="60.8529%" y="319.50"></text></g><g><title>[libc-2.31.so] (157 samples, 0.13%)</title><rect x="60.6167%" y="293" width="0.1274%" height="15" fill="rgb(249,221,15)" fg:x="74687" fg:w="157"/><text x="60.8667%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="60.7441%" y="405" width="0.0308%" height="15" fill="rgb(233,34,13)" fg:x="74844" fg:w="38"/><text x="60.9941%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.02%)</title><rect x="60.7506%" y="389" width="0.0243%" height="15" fill="rgb(214,103,39)" fg:x="74852" fg:w="30"/><text x="61.0006%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.02%)</title><rect x="60.7506%" y="373" width="0.0243%" height="15" fill="rgb(251,126,39)" fg:x="74852" fg:w="30"/><text x="61.0006%" y="383.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (36 samples, 0.03%)</title><rect x="60.8496%" y="261" width="0.0292%" height="15" fill="rgb(214,216,36)" fg:x="74974" fg:w="36"/><text x="61.0996%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.09%)</title><rect x="60.7879%" y="357" width="0.0925%" height="15" fill="rgb(220,221,8)" fg:x="74898" fg:w="114"/><text x="61.0379%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.09%)</title><rect x="60.7879%" y="341" width="0.0925%" height="15" fill="rgb(240,216,3)" fg:x="74898" fg:w="114"/><text x="61.0379%" y="351.50"></text></g><g><title>alloc::alloc::alloc (109 samples, 0.09%)</title><rect x="60.7920%" y="325" width="0.0885%" height="15" fill="rgb(232,218,17)" fg:x="74903" fg:w="109"/><text x="61.0420%" y="335.50"></text></g><g><title>__rg_alloc (109 samples, 0.09%)</title><rect x="60.7920%" y="309" width="0.0885%" height="15" fill="rgb(229,163,45)" fg:x="74903" fg:w="109"/><text x="61.0420%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (109 samples, 0.09%)</title><rect x="60.7920%" y="293" width="0.0885%" height="15" fill="rgb(231,110,42)" fg:x="74903" fg:w="109"/><text x="61.0420%" y="303.50"></text></g><g><title>sn_rust_alloc (109 samples, 0.09%)</title><rect x="60.7920%" y="277" width="0.0885%" height="15" fill="rgb(208,170,48)" fg:x="74903" fg:w="109"/><text x="61.0420%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (138 samples, 0.11%)</title><rect x="60.7749%" y="405" width="0.1120%" height="15" fill="rgb(239,116,25)" fg:x="74882" fg:w="138"/><text x="61.0249%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (122 samples, 0.10%)</title><rect x="60.7879%" y="389" width="0.0990%" height="15" fill="rgb(219,200,50)" fg:x="74898" fg:w="122"/><text x="61.0379%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (122 samples, 0.10%)</title><rect x="60.7879%" y="373" width="0.0990%" height="15" fill="rgb(245,200,0)" fg:x="74898" fg:w="122"/><text x="61.0379%" y="383.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,847 samples, 1.50%)</title><rect x="59.4009%" y="485" width="1.4990%" height="15" fill="rgb(245,119,33)" fg:x="73189" fg:w="1847"/><text x="59.6509%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (635 samples, 0.52%)</title><rect x="60.3845%" y="469" width="0.5154%" height="15" fill="rgb(231,125,12)" fg:x="74401" fg:w="635"/><text x="60.6345%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (618 samples, 0.50%)</title><rect x="60.3983%" y="453" width="0.5016%" height="15" fill="rgb(216,96,41)" fg:x="74418" fg:w="618"/><text x="60.6483%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (618 samples, 0.50%)</title><rect x="60.3983%" y="437" width="0.5016%" height="15" fill="rgb(248,43,45)" fg:x="74418" fg:w="618"/><text x="60.6483%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (618 samples, 0.50%)</title><rect x="60.3983%" y="421" width="0.5016%" height="15" fill="rgb(217,222,7)" fg:x="74418" fg:w="618"/><text x="60.6483%" y="431.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.01%)</title><rect x="60.8869%" y="405" width="0.0130%" height="15" fill="rgb(233,28,6)" fg:x="75020" fg:w="16"/><text x="61.1369%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (38 samples, 0.03%)</title><rect x="60.9446%" y="405" width="0.0308%" height="15" fill="rgb(231,218,15)" fg:x="75091" fg:w="38"/><text x="61.1946%" y="415.50"></text></g><g><title>core::time::Duration::as_nanos (27 samples, 0.02%)</title><rect x="60.9754%" y="405" width="0.0219%" height="15" fill="rgb(226,171,48)" fg:x="75129" fg:w="27"/><text x="61.2254%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (129 samples, 0.10%)</title><rect x="60.9973%" y="389" width="0.1047%" height="15" fill="rgb(235,201,9)" fg:x="75156" fg:w="129"/><text x="61.2473%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (49 samples, 0.04%)</title><rect x="61.1377%" y="357" width="0.0398%" height="15" fill="rgb(217,80,15)" fg:x="75329" fg:w="49"/><text x="61.3877%" y="367.50"></text></g><g><title>core::cmp::PartialOrd::ge (49 samples, 0.04%)</title><rect x="61.1377%" y="341" width="0.0398%" height="15" fill="rgb(219,152,8)" fg:x="75329" fg:w="49"/><text x="61.3877%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (48 samples, 0.04%)</title><rect x="61.1385%" y="325" width="0.0390%" height="15" fill="rgb(243,107,38)" fg:x="75330" fg:w="48"/><text x="61.3885%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (20 samples, 0.02%)</title><rect x="61.1613%" y="309" width="0.0162%" height="15" fill="rgb(231,17,5)" fg:x="75358" fg:w="20"/><text x="61.4113%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (20 samples, 0.02%)</title><rect x="61.1613%" y="293" width="0.0162%" height="15" fill="rgb(209,25,54)" fg:x="75358" fg:w="20"/><text x="61.4113%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (251 samples, 0.20%)</title><rect x="60.9973%" y="405" width="0.2037%" height="15" fill="rgb(219,0,2)" fg:x="75156" fg:w="251"/><text x="61.2473%" y="415.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (122 samples, 0.10%)</title><rect x="61.1020%" y="389" width="0.0990%" height="15" fill="rgb(246,9,5)" fg:x="75285" fg:w="122"/><text x="61.3520%" y="399.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (122 samples, 0.10%)</title><rect x="61.1020%" y="373" width="0.0990%" height="15" fill="rgb(226,159,4)" fg:x="75285" fg:w="122"/><text x="61.3520%" y="383.50"></text></g><g><title>core::time::Duration::new (29 samples, 0.02%)</title><rect x="61.1775%" y="357" width="0.0235%" height="15" fill="rgb(219,175,34)" fg:x="75378" fg:w="29"/><text x="61.4275%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (889 samples, 0.72%)</title><rect x="60.8999%" y="485" width="0.7215%" height="15" fill="rgb(236,10,46)" fg:x="75036" fg:w="889"/><text x="61.1499%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (889 samples, 0.72%)</title><rect x="60.8999%" y="469" width="0.7215%" height="15" fill="rgb(240,211,16)" fg:x="75036" fg:w="889"/><text x="61.1499%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (876 samples, 0.71%)</title><rect x="60.9105%" y="453" width="0.7110%" height="15" fill="rgb(205,3,43)" fg:x="75049" fg:w="876"/><text x="61.1605%" y="463.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}::{{closure}} (876 samples, 0.71%)</title><rect x="60.9105%" y="437" width="0.7110%" height="15" fill="rgb(245,7,22)" fg:x="75049" fg:w="876"/><text x="61.1605%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (865 samples, 0.70%)</title><rect x="60.9194%" y="421" width="0.7020%" height="15" fill="rgb(239,132,32)" fg:x="75060" fg:w="865"/><text x="61.1694%" y="431.50"></text></g><g><title>std::time::SystemTime::now (518 samples, 0.42%)</title><rect x="61.2010%" y="405" width="0.4204%" height="15" fill="rgb(228,202,34)" fg:x="75407" fg:w="518"/><text x="61.4510%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (518 samples, 0.42%)</title><rect x="61.2010%" y="389" width="0.4204%" height="15" fill="rgb(254,200,22)" fg:x="75407" fg:w="518"/><text x="61.4510%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (518 samples, 0.42%)</title><rect x="61.2010%" y="373" width="0.4204%" height="15" fill="rgb(219,10,39)" fg:x="75407" fg:w="518"/><text x="61.4510%" y="383.50"></text></g><g><title>__clock_gettime (430 samples, 0.35%)</title><rect x="61.2724%" y="357" width="0.3490%" height="15" fill="rgb(226,210,39)" fg:x="75495" fg:w="430"/><text x="61.5224%" y="367.50"></text></g><g><title>__vdso_clock_gettime (413 samples, 0.34%)</title><rect x="61.2862%" y="341" width="0.3352%" height="15" fill="rgb(208,219,16)" fg:x="75512" fg:w="413"/><text x="61.5362%" y="351.50"></text></g><g><title>[[vdso]] (373 samples, 0.30%)</title><rect x="61.3187%" y="325" width="0.3027%" height="15" fill="rgb(216,158,51)" fg:x="75552" fg:w="373"/><text x="61.5687%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (17 samples, 0.01%)</title><rect x="61.6214%" y="485" width="0.0138%" height="15" fill="rgb(233,14,44)" fg:x="75925" fg:w="17"/><text x="61.8714%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (17 samples, 0.01%)</title><rect x="61.6214%" y="469" width="0.0138%" height="15" fill="rgb(237,97,39)" fg:x="75925" fg:w="17"/><text x="61.8714%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (56 samples, 0.05%)</title><rect x="61.6758%" y="453" width="0.0455%" height="15" fill="rgb(218,198,43)" fg:x="75992" fg:w="56"/><text x="61.9258%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="61.7107%" y="437" width="0.0106%" height="15" fill="rgb(231,104,20)" fg:x="76035" fg:w="13"/><text x="61.9607%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,317 samples, 1.07%)</title><rect x="62.0954%" y="261" width="1.0689%" height="15" fill="rgb(254,36,13)" fg:x="76509" fg:w="1317"/><text x="62.3454%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,809 samples, 1.47%)</title><rect x="61.7237%" y="405" width="1.4682%" height="15" fill="rgb(248,14,50)" fg:x="76051" fg:w="1809"/><text x="61.9737%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,800 samples, 1.46%)</title><rect x="61.7310%" y="389" width="1.4609%" height="15" fill="rgb(217,107,29)" fg:x="76060" fg:w="1800"/><text x="61.9810%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,800 samples, 1.46%)</title><rect x="61.7310%" y="373" width="1.4609%" height="15" fill="rgb(251,169,33)" fg:x="76060" fg:w="1800"/><text x="61.9810%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,793 samples, 1.46%)</title><rect x="61.7367%" y="357" width="1.4552%" height="15" fill="rgb(217,108,32)" fg:x="76067" fg:w="1793"/><text x="61.9867%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,793 samples, 1.46%)</title><rect x="61.7367%" y="341" width="1.4552%" height="15" fill="rgb(219,66,42)" fg:x="76067" fg:w="1793"/><text x="61.9867%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1,793 samples, 1.46%)</title><rect x="61.7367%" y="325" width="1.4552%" height="15" fill="rgb(206,180,7)" fg:x="76067" fg:w="1793"/><text x="61.9867%" y="335.50"></text></g><g><title>__rg_alloc (1,793 samples, 1.46%)</title><rect x="61.7367%" y="309" width="1.4552%" height="15" fill="rgb(208,226,31)" fg:x="76067" fg:w="1793"/><text x="61.9867%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,793 samples, 1.46%)</title><rect x="61.7367%" y="293" width="1.4552%" height="15" fill="rgb(218,26,49)" fg:x="76067" fg:w="1793"/><text x="61.9867%" y="303.50"></text></g><g><title>sn_rust_alloc (1,785 samples, 1.45%)</title><rect x="61.7432%" y="277" width="1.4487%" height="15" fill="rgb(233,197,48)" fg:x="76075" fg:w="1785"/><text x="61.9932%" y="287.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="63.1643%" y="261" width="0.0276%" height="15" fill="rgb(252,181,51)" fg:x="77826" fg:w="34"/><text x="63.4143%" y="271.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,640 samples, 4.58%)</title><rect x="58.9740%" y="517" width="4.5775%" height="15" fill="rgb(253,90,19)" fg:x="72663" fg:w="5640"/><text x="59.2240%" y="527.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (5,598 samples, 4.54%)</title><rect x="59.0081%" y="501" width="4.5434%" height="15" fill="rgb(215,171,30)" fg:x="72705" fg:w="5598"/><text x="59.2581%" y="511.50">&lt;trem..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (2,361 samples, 1.92%)</title><rect x="61.6352%" y="485" width="1.9162%" height="15" fill="rgb(214,222,9)" fg:x="75942" fg:w="2361"/><text x="61.8852%" y="495.50">t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,311 samples, 1.88%)</title><rect x="61.6758%" y="469" width="1.8756%" height="15" fill="rgb(223,3,22)" fg:x="75992" fg:w="2311"/><text x="61.9258%" y="479.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,255 samples, 1.83%)</title><rect x="61.7213%" y="453" width="1.8302%" height="15" fill="rgb(225,196,46)" fg:x="76048" fg:w="2255"/><text x="61.9713%" y="463.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,255 samples, 1.83%)</title><rect x="61.7213%" y="437" width="1.8302%" height="15" fill="rgb(209,110,37)" fg:x="76048" fg:w="2255"/><text x="61.9713%" y="447.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,255 samples, 1.83%)</title><rect x="61.7213%" y="421" width="1.8302%" height="15" fill="rgb(249,89,12)" fg:x="76048" fg:w="2255"/><text x="61.9713%" y="431.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (443 samples, 0.36%)</title><rect x="63.1919%" y="405" width="0.3595%" height="15" fill="rgb(226,27,33)" fg:x="77860" fg:w="443"/><text x="63.4419%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (443 samples, 0.36%)</title><rect x="63.1919%" y="389" width="0.3595%" height="15" fill="rgb(213,82,22)" fg:x="77860" fg:w="443"/><text x="63.4419%" y="399.50"></text></g><g><title>[libc-2.31.so] (442 samples, 0.36%)</title><rect x="63.1927%" y="373" width="0.3587%" height="15" fill="rgb(248,140,0)" fg:x="77861" fg:w="442"/><text x="63.4427%" y="383.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,645 samples, 4.58%)</title><rect x="58.9740%" y="533" width="4.5815%" height="15" fill="rgb(228,106,3)" fg:x="72663" fg:w="5645"/><text x="59.2240%" y="543.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (10,460 samples, 8.49%)</title><rect x="55.0677%" y="581" width="8.4894%" height="15" fill="rgb(209,23,37)" fg:x="67850" fg:w="10460"/><text x="55.3177%" y="591.50">tremor_runti..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (6,710 samples, 5.45%)</title><rect x="58.1112%" y="565" width="5.4459%" height="15" fill="rgb(241,93,50)" fg:x="71600" fg:w="6710"/><text x="58.3612%" y="575.50">&lt;future..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (6,710 samples, 5.45%)</title><rect x="58.1112%" y="549" width="5.4459%" height="15" fill="rgb(253,46,43)" fg:x="71600" fg:w="6710"/><text x="58.3612%" y="559.50">futures..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (32 samples, 0.03%)</title><rect x="63.6821%" y="517" width="0.0260%" height="15" fill="rgb(226,206,43)" fg:x="78464" fg:w="32"/><text x="63.9321%" y="527.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (914 samples, 0.74%)</title><rect x="63.5961%" y="533" width="0.7418%" height="15" fill="rgb(217,54,7)" fg:x="78358" fg:w="914"/><text x="63.8461%" y="543.50"></text></g><g><title>[libc-2.31.so] (776 samples, 0.63%)</title><rect x="63.7081%" y="517" width="0.6298%" height="15" fill="rgb(223,5,52)" fg:x="78496" fg:w="776"/><text x="63.9581%" y="527.50"></text></g><g><title>[libc-2.31.so] (427 samples, 0.35%)</title><rect x="64.3379%" y="533" width="0.3466%" height="15" fill="rgb(206,52,46)" fg:x="79272" fg:w="427"/><text x="64.5879%" y="543.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,391 samples, 1.13%)</title><rect x="63.5571%" y="565" width="1.1289%" height="15" fill="rgb(253,136,11)" fg:x="78310" fg:w="1391"/><text x="63.8071%" y="575.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,391 samples, 1.13%)</title><rect x="63.5571%" y="549" width="1.1289%" height="15" fill="rgb(208,106,33)" fg:x="78310" fg:w="1391"/><text x="63.8071%" y="559.50"></text></g><g><title>[libc-2.31.so] (175 samples, 0.14%)</title><rect x="64.7218%" y="549" width="0.1420%" height="15" fill="rgb(206,54,4)" fg:x="79745" fg:w="175"/><text x="64.9718%" y="559.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (19 samples, 0.02%)</title><rect x="65.2250%" y="533" width="0.0154%" height="15" fill="rgb(213,3,15)" fg:x="80365" fg:w="19"/><text x="65.4750%" y="543.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (36 samples, 0.03%)</title><rect x="65.2404%" y="533" width="0.0292%" height="15" fill="rgb(252,211,39)" fg:x="80384" fg:w="36"/><text x="65.4904%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (20 samples, 0.02%)</title><rect x="65.2696%" y="533" width="0.0162%" height="15" fill="rgb(223,6,36)" fg:x="80420" fg:w="20"/><text x="65.5196%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.04%)</title><rect x="65.2858%" y="517" width="0.0422%" height="15" fill="rgb(252,169,45)" fg:x="80440" fg:w="52"/><text x="65.5358%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (15 samples, 0.01%)</title><rect x="65.3159%" y="501" width="0.0122%" height="15" fill="rgb(212,48,26)" fg:x="80477" fg:w="15"/><text x="65.5659%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.01%)</title><rect x="65.3167%" y="485" width="0.0114%" height="15" fill="rgb(251,102,48)" fg:x="80478" fg:w="14"/><text x="65.5667%" y="495.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (960 samples, 0.78%)</title><rect x="65.2858%" y="533" width="0.7791%" height="15" fill="rgb(243,208,16)" fg:x="80440" fg:w="960"/><text x="65.5358%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (908 samples, 0.74%)</title><rect x="65.3281%" y="517" width="0.7369%" height="15" fill="rgb(219,96,24)" fg:x="80492" fg:w="908"/><text x="65.5781%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (905 samples, 0.73%)</title><rect x="65.3305%" y="501" width="0.7345%" height="15" fill="rgb(219,33,29)" fg:x="80495" fg:w="905"/><text x="65.5805%" y="511.50"></text></g><g><title>core::ptr::read (905 samples, 0.73%)</title><rect x="65.3305%" y="485" width="0.7345%" height="15" fill="rgb(223,176,5)" fg:x="80495" fg:w="905"/><text x="65.5805%" y="495.50"></text></g><g><title>[libc-2.31.so] (903 samples, 0.73%)</title><rect x="65.3321%" y="469" width="0.7329%" height="15" fill="rgb(228,140,14)" fg:x="80497" fg:w="903"/><text x="65.5821%" y="479.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (16 samples, 0.01%)</title><rect x="66.2890%" y="261" width="0.0130%" height="15" fill="rgb(217,179,31)" fg:x="81676" fg:w="16"/><text x="66.5390%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (283 samples, 0.23%)</title><rect x="66.0731%" y="405" width="0.2297%" height="15" fill="rgb(230,9,30)" fg:x="81410" fg:w="283"/><text x="66.3231%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (283 samples, 0.23%)</title><rect x="66.0731%" y="389" width="0.2297%" height="15" fill="rgb(230,136,20)" fg:x="81410" fg:w="283"/><text x="66.3231%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (283 samples, 0.23%)</title><rect x="66.0731%" y="373" width="0.2297%" height="15" fill="rgb(215,210,22)" fg:x="81410" fg:w="283"/><text x="66.3231%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (282 samples, 0.23%)</title><rect x="66.0739%" y="357" width="0.2289%" height="15" fill="rgb(218,43,5)" fg:x="81411" fg:w="282"/><text x="66.3239%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (282 samples, 0.23%)</title><rect x="66.0739%" y="341" width="0.2289%" height="15" fill="rgb(216,11,5)" fg:x="81411" fg:w="282"/><text x="66.3239%" y="351.50"></text></g><g><title>alloc::alloc::alloc (282 samples, 0.23%)</title><rect x="66.0739%" y="325" width="0.2289%" height="15" fill="rgb(209,82,29)" fg:x="81411" fg:w="282"/><text x="66.3239%" y="335.50"></text></g><g><title>__rg_alloc (282 samples, 0.23%)</title><rect x="66.0739%" y="309" width="0.2289%" height="15" fill="rgb(244,115,12)" fg:x="81411" fg:w="282"/><text x="66.3239%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (282 samples, 0.23%)</title><rect x="66.0739%" y="293" width="0.2289%" height="15" fill="rgb(222,82,18)" fg:x="81411" fg:w="282"/><text x="66.3239%" y="303.50"></text></g><g><title>sn_rust_alloc (273 samples, 0.22%)</title><rect x="66.0812%" y="277" width="0.2216%" height="15" fill="rgb(249,227,8)" fg:x="81420" fg:w="273"/><text x="66.3312%" y="287.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (348 samples, 0.28%)</title><rect x="66.0731%" y="533" width="0.2824%" height="15" fill="rgb(253,141,45)" fg:x="81410" fg:w="348"/><text x="66.3231%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (348 samples, 0.28%)</title><rect x="66.0731%" y="517" width="0.2824%" height="15" fill="rgb(234,184,4)" fg:x="81410" fg:w="348"/><text x="66.3231%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (348 samples, 0.28%)</title><rect x="66.0731%" y="501" width="0.2824%" height="15" fill="rgb(218,194,23)" fg:x="81410" fg:w="348"/><text x="66.3231%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (348 samples, 0.28%)</title><rect x="66.0731%" y="485" width="0.2824%" height="15" fill="rgb(235,66,41)" fg:x="81410" fg:w="348"/><text x="66.3231%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (348 samples, 0.28%)</title><rect x="66.0731%" y="469" width="0.2824%" height="15" fill="rgb(245,217,1)" fg:x="81410" fg:w="348"/><text x="66.3231%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (348 samples, 0.28%)</title><rect x="66.0731%" y="453" width="0.2824%" height="15" fill="rgb(229,91,1)" fg:x="81410" fg:w="348"/><text x="66.3231%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (348 samples, 0.28%)</title><rect x="66.0731%" y="437" width="0.2824%" height="15" fill="rgb(207,101,30)" fg:x="81410" fg:w="348"/><text x="66.3231%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (348 samples, 0.28%)</title><rect x="66.0731%" y="421" width="0.2824%" height="15" fill="rgb(223,82,49)" fg:x="81410" fg:w="348"/><text x="66.3231%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (65 samples, 0.05%)</title><rect x="66.3028%" y="405" width="0.0528%" height="15" fill="rgb(218,167,17)" fg:x="81693" fg:w="65"/><text x="66.5528%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.05%)</title><rect x="66.3028%" y="389" width="0.0528%" height="15" fill="rgb(208,103,14)" fg:x="81693" fg:w="65"/><text x="66.5528%" y="399.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.04%)</title><rect x="66.3142%" y="373" width="0.0414%" height="15" fill="rgb(238,20,8)" fg:x="81707" fg:w="51"/><text x="66.5642%" y="383.50"></text></g><g><title>[libc-2.31.so] (831 samples, 0.67%)</title><rect x="66.3555%" y="533" width="0.6744%" height="15" fill="rgb(218,80,54)" fg:x="81758" fg:w="831"/><text x="66.6055%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (13 samples, 0.01%)</title><rect x="67.0300%" y="517" width="0.0106%" height="15" fill="rgb(240,144,17)" fg:x="82589" fg:w="13"/><text x="67.2800%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (15 samples, 0.01%)</title><rect x="67.0300%" y="533" width="0.0122%" height="15" fill="rgb(245,27,50)" fg:x="82589" fg:w="15"/><text x="67.2800%" y="543.50"></text></g><g><title>core::mem::replace (21 samples, 0.02%)</title><rect x="67.0616%" y="501" width="0.0170%" height="15" fill="rgb(251,51,7)" fg:x="82628" fg:w="21"/><text x="67.3116%" y="511.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="67.0616%" y="485" width="0.0170%" height="15" fill="rgb(245,217,29)" fg:x="82628" fg:w="21"/><text x="67.3116%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (57 samples, 0.05%)</title><rect x="67.0422%" y="533" width="0.0463%" height="15" fill="rgb(221,176,29)" fg:x="82604" fg:w="57"/><text x="67.2922%" y="543.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="67.0422%" y="517" width="0.0463%" height="15" fill="rgb(212,180,24)" fg:x="82604" fg:w="57"/><text x="67.2922%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (14 samples, 0.01%)</title><rect x="67.0884%" y="533" width="0.0114%" height="15" fill="rgb(254,24,2)" fg:x="82661" fg:w="14"/><text x="67.3384%" y="543.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="67.0884%" y="517" width="0.0114%" height="15" fill="rgb(230,100,2)" fg:x="82661" fg:w="14"/><text x="67.3384%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="67.0998%" y="533" width="0.0179%" height="15" fill="rgb(219,142,25)" fg:x="82675" fg:w="22"/><text x="67.3498%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt; (22 samples, 0.02%)</title><rect x="67.0998%" y="517" width="0.0179%" height="15" fill="rgb(240,73,43)" fg:x="82675" fg:w="22"/><text x="67.3498%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (16 samples, 0.01%)</title><rect x="67.1177%" y="533" width="0.0130%" height="15" fill="rgb(214,114,15)" fg:x="82697" fg:w="16"/><text x="67.3677%" y="543.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="67.1452%" y="501" width="0.0114%" height="15" fill="rgb(207,130,4)" fg:x="82731" fg:w="14"/><text x="67.3952%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (13 samples, 0.01%)</title><rect x="67.1461%" y="485" width="0.0106%" height="15" fill="rgb(221,25,40)" fg:x="82732" fg:w="13"/><text x="67.3961%" y="495.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="67.1461%" y="469" width="0.0106%" height="15" fill="rgb(241,184,7)" fg:x="82732" fg:w="13"/><text x="67.3961%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.01%)</title><rect x="67.1461%" y="453" width="0.0106%" height="15" fill="rgb(235,159,4)" fg:x="82732" fg:w="13"/><text x="67.3961%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="67.1461%" y="437" width="0.0106%" height="15" fill="rgb(214,87,48)" fg:x="82732" fg:w="13"/><text x="67.3961%" y="447.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (156 samples, 0.13%)</title><rect x="67.1566%" y="501" width="0.1266%" height="15" fill="rgb(246,198,24)" fg:x="82745" fg:w="156"/><text x="67.4066%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (154 samples, 0.12%)</title><rect x="67.1582%" y="485" width="0.1250%" height="15" fill="rgb(209,66,40)" fg:x="82747" fg:w="154"/><text x="67.4082%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (154 samples, 0.12%)</title><rect x="67.1582%" y="469" width="0.1250%" height="15" fill="rgb(233,147,39)" fg:x="82747" fg:w="154"/><text x="67.4082%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (154 samples, 0.12%)</title><rect x="67.1582%" y="453" width="0.1250%" height="15" fill="rgb(231,145,52)" fg:x="82747" fg:w="154"/><text x="67.4082%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (154 samples, 0.12%)</title><rect x="67.1582%" y="437" width="0.1250%" height="15" fill="rgb(206,20,26)" fg:x="82747" fg:w="154"/><text x="67.4082%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (154 samples, 0.12%)</title><rect x="67.1582%" y="421" width="0.1250%" height="15" fill="rgb(238,220,4)" fg:x="82747" fg:w="154"/><text x="67.4082%" y="431.50"></text></g><g><title>[libc-2.31.so] (115 samples, 0.09%)</title><rect x="67.1899%" y="405" width="0.0933%" height="15" fill="rgb(252,195,42)" fg:x="82786" fg:w="115"/><text x="67.4399%" y="415.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (190 samples, 0.15%)</title><rect x="67.1306%" y="533" width="0.1542%" height="15" fill="rgb(209,10,6)" fg:x="82713" fg:w="190"/><text x="67.3806%" y="543.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (175 samples, 0.14%)</title><rect x="67.1428%" y="517" width="0.1420%" height="15" fill="rgb(229,3,52)" fg:x="82728" fg:w="175"/><text x="67.3928%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,230 samples, 2.62%)</title><rect x="64.6861%" y="565" width="2.6215%" height="15" fill="rgb(253,49,37)" fg:x="79701" fg:w="3230"/><text x="64.9361%" y="575.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,011 samples, 2.44%)</title><rect x="64.8638%" y="549" width="2.4438%" height="15" fill="rgb(240,103,49)" fg:x="79920" fg:w="3011"/><text x="65.1138%" y="559.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (28 samples, 0.02%)</title><rect x="67.2848%" y="533" width="0.0227%" height="15" fill="rgb(250,182,30)" fg:x="82903" fg:w="28"/><text x="67.5348%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (28 samples, 0.02%)</title><rect x="67.2848%" y="517" width="0.0227%" height="15" fill="rgb(248,8,30)" fg:x="82903" fg:w="28"/><text x="67.5348%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.02%)</title><rect x="67.2848%" y="501" width="0.0227%" height="15" fill="rgb(237,120,30)" fg:x="82903" fg:w="28"/><text x="67.5348%" y="511.50"></text></g><g><title>async_io::driver::block_on (16,596 samples, 13.47%)</title><rect x="53.8397%" y="885" width="13.4695%" height="15" fill="rgb(221,146,34)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="895.50">async_io::driver::bl..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,596 samples, 13.47%)</title><rect x="53.8397%" y="869" width="13.4695%" height="15" fill="rgb(242,55,13)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="879.50">&lt;futures_lite::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,596 samples, 13.47%)</title><rect x="53.8397%" y="853" width="13.4695%" height="15" fill="rgb(242,112,31)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="863.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::run::{{closure}} (16,596 samples, 13.47%)</title><rect x="53.8397%" y="837" width="13.4695%" height="15" fill="rgb(249,192,27)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="847.50">async_executor::Exec..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,596 samples, 13.47%)</title><rect x="53.8397%" y="821" width="13.4695%" height="15" fill="rgb(208,204,44)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="831.50">&lt;futures_lite::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,596 samples, 13.47%)</title><rect x="53.8397%" y="805" width="13.4695%" height="15" fill="rgb(208,93,54)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="815.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (16,596 samples, 13.47%)</title><rect x="53.8397%" y="789" width="13.4695%" height="15" fill="rgb(242,1,31)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="799.50">async_executor::Exec..</text></g><g><title>async_task::runnable::Runnable::run (16,596 samples, 13.47%)</title><rect x="53.8397%" y="773" width="13.4695%" height="15" fill="rgb(241,83,25)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="783.50">async_task::runnable..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (16,596 samples, 13.47%)</title><rect x="53.8397%" y="757" width="13.4695%" height="15" fill="rgb(205,169,50)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="767.50">async_task::raw::Raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16,596 samples, 13.47%)</title><rect x="53.8397%" y="741" width="13.4695%" height="15" fill="rgb(239,186,37)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="751.50">&lt;core::pin::Pin&lt;P&gt; a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,596 samples, 13.47%)</title><rect x="53.8397%" y="725" width="13.4695%" height="15" fill="rgb(205,221,10)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="735.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (16,596 samples, 13.47%)</title><rect x="53.8397%" y="709" width="13.4695%" height="15" fill="rgb(218,196,15)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="719.50">async_executor::Exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (16,596 samples, 13.47%)</title><rect x="53.8397%" y="693" width="13.4695%" height="15" fill="rgb(218,196,35)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="703.50">&lt;async_std::task::bu..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (16,596 samples, 13.47%)</title><rect x="53.8397%" y="677" width="13.4695%" height="15" fill="rgb(233,63,24)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="687.50">async_std::task::tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16,596 samples, 13.47%)</title><rect x="53.8397%" y="661" width="13.4695%" height="15" fill="rgb(225,8,4)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="671.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,596 samples, 13.47%)</title><rect x="53.8397%" y="645" width="13.4695%" height="15" fill="rgb(234,105,35)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="655.50">std::thread::local::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (16,596 samples, 13.47%)</title><rect x="53.8397%" y="629" width="13.4695%" height="15" fill="rgb(236,21,32)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="639.50">async_std::task::tas..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (16,596 samples, 13.47%)</title><rect x="53.8397%" y="613" width="13.4695%" height="15" fill="rgb(228,109,6)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="623.50">&lt;async_std::task::bu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,596 samples, 13.47%)</title><rect x="53.8397%" y="597" width="13.4695%" height="15" fill="rgb(229,215,31)" fg:x="66337" fg:w="16596"/><text x="54.0897%" y="607.50">&lt;core::future::from_..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (4,623 samples, 3.75%)</title><rect x="63.5571%" y="581" width="3.7521%" height="15" fill="rgb(221,52,54)" fg:x="78310" fg:w="4623"/><text x="63.8071%" y="591.50">trem..</text></g><g><title>event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="67.3279%" y="517" width="0.0130%" height="15" fill="rgb(252,129,43)" fg:x="82956" fg:w="16"/><text x="67.5779%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="67.3279%" y="501" width="0.0130%" height="15" fill="rgb(248,183,27)" fg:x="82956" fg:w="16"/><text x="67.5779%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="67.3279%" y="485" width="0.0130%" height="15" fill="rgb(250,0,22)" fg:x="82956" fg:w="16"/><text x="67.5779%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (16 samples, 0.01%)</title><rect x="67.3279%" y="469" width="0.0130%" height="15" fill="rgb(213,166,10)" fg:x="82956" fg:w="16"/><text x="67.5779%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (16 samples, 0.01%)</title><rect x="67.3279%" y="453" width="0.0130%" height="15" fill="rgb(207,163,36)" fg:x="82956" fg:w="16"/><text x="67.5779%" y="463.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (31 samples, 0.03%)</title><rect x="67.3692%" y="469" width="0.0252%" height="15" fill="rgb(208,122,22)" fg:x="83007" fg:w="31"/><text x="67.6192%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.02%)</title><rect x="67.3709%" y="453" width="0.0235%" height="15" fill="rgb(207,104,49)" fg:x="83009" fg:w="29"/><text x="67.6209%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.02%)</title><rect x="67.3709%" y="437" width="0.0235%" height="15" fill="rgb(248,211,50)" fg:x="83009" fg:w="29"/><text x="67.6209%" y="447.50"></text></g><g><title>async_executor::Sleepers::notify (21 samples, 0.02%)</title><rect x="67.4025%" y="421" width="0.0170%" height="15" fill="rgb(217,13,45)" fg:x="83048" fg:w="21"/><text x="67.6525%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (18 samples, 0.01%)</title><rect x="67.4050%" y="405" width="0.0146%" height="15" fill="rgb(211,216,49)" fg:x="83051" fg:w="18"/><text x="67.6550%" y="415.50"></text></g><g><title>core::ptr::read (18 samples, 0.01%)</title><rect x="67.4050%" y="389" width="0.0146%" height="15" fill="rgb(221,58,53)" fg:x="83051" fg:w="18"/><text x="67.6550%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (53 samples, 0.04%)</title><rect x="67.4196%" y="421" width="0.0430%" height="15" fill="rgb(220,112,41)" fg:x="83069" fg:w="53"/><text x="67.6696%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.04%)</title><rect x="67.4196%" y="405" width="0.0430%" height="15" fill="rgb(236,38,28)" fg:x="83069" fg:w="53"/><text x="67.6696%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.04%)</title><rect x="67.4196%" y="389" width="0.0430%" height="15" fill="rgb(227,195,22)" fg:x="83069" fg:w="53"/><text x="67.6696%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (53 samples, 0.04%)</title><rect x="67.4196%" y="373" width="0.0430%" height="15" fill="rgb(214,55,33)" fg:x="83069" fg:w="53"/><text x="67.6696%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (53 samples, 0.04%)</title><rect x="67.4196%" y="357" width="0.0430%" height="15" fill="rgb(248,80,13)" fg:x="83069" fg:w="53"/><text x="67.6696%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (53 samples, 0.04%)</title><rect x="67.4196%" y="341" width="0.0430%" height="15" fill="rgb(238,52,6)" fg:x="83069" fg:w="53"/><text x="67.6696%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (42 samples, 0.03%)</title><rect x="67.4626%" y="421" width="0.0341%" height="15" fill="rgb(224,198,47)" fg:x="83122" fg:w="42"/><text x="67.7126%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.03%)</title><rect x="67.4626%" y="405" width="0.0341%" height="15" fill="rgb(233,171,20)" fg:x="83122" fg:w="42"/><text x="67.7126%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::get (13 samples, 0.01%)</title><rect x="67.4975%" y="373" width="0.0106%" height="15" fill="rgb(241,30,25)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="383.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="67.4975%" y="357" width="0.0106%" height="15" fill="rgb(207,171,38)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="367.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (13 samples, 0.01%)</title><rect x="67.4975%" y="341" width="0.0106%" height="15" fill="rgb(234,70,1)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="351.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (13 samples, 0.01%)</title><rect x="67.4975%" y="325" width="0.0106%" height="15" fill="rgb(232,178,18)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="335.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (13 samples, 0.01%)</title><rect x="67.4975%" y="309" width="0.0106%" height="15" fill="rgb(241,78,40)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="319.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="67.4975%" y="293" width="0.0106%" height="15" fill="rgb(222,35,25)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="303.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (13 samples, 0.01%)</title><rect x="67.4975%" y="277" width="0.0106%" height="15" fill="rgb(207,92,16)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="67.4975%" y="261" width="0.0106%" height="15" fill="rgb(216,59,51)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="67.4975%" y="245" width="0.0106%" height="15" fill="rgb(213,80,28)" fg:x="83165" fg:w="13"/><text x="67.7475%" y="255.50"></text></g><g><title>async_io::reactor::Reactor::notify (25 samples, 0.02%)</title><rect x="67.5080%" y="373" width="0.0203%" height="15" fill="rgb(220,93,7)" fg:x="83178" fg:w="25"/><text x="67.7580%" y="383.50"></text></g><g><title>polling::Poller::notify (21 samples, 0.02%)</title><rect x="67.5113%" y="357" width="0.0170%" height="15" fill="rgb(225,24,44)" fg:x="83182" fg:w="21"/><text x="67.7613%" y="367.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="67.5462%" y="341" width="0.0106%" height="15" fill="rgb(243,74,40)" fg:x="83225" fg:w="13"/><text x="67.7962%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (13 samples, 0.01%)</title><rect x="67.5462%" y="325" width="0.0106%" height="15" fill="rgb(228,39,7)" fg:x="83225" fg:w="13"/><text x="67.7962%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="67.5462%" y="309" width="0.0106%" height="15" fill="rgb(227,79,8)" fg:x="83225" fg:w="13"/><text x="67.7962%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="67.5462%" y="293" width="0.0106%" height="15" fill="rgb(236,58,11)" fg:x="83225" fg:w="13"/><text x="67.7962%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (13 samples, 0.01%)</title><rect x="67.5462%" y="277" width="0.0106%" height="15" fill="rgb(249,63,35)" fg:x="83225" fg:w="13"/><text x="67.7962%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (13 samples, 0.01%)</title><rect x="67.5462%" y="261" width="0.0106%" height="15" fill="rgb(252,114,16)" fg:x="83225" fg:w="13"/><text x="67.7962%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.01%)</title><rect x="67.5462%" y="245" width="0.0106%" height="15" fill="rgb(254,151,24)" fg:x="83225" fg:w="13"/><text x="67.7962%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (40 samples, 0.03%)</title><rect x="67.5567%" y="341" width="0.0325%" height="15" fill="rgb(253,54,39)" fg:x="83238" fg:w="40"/><text x="67.8067%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (40 samples, 0.03%)</title><rect x="67.5567%" y="325" width="0.0325%" height="15" fill="rgb(243,25,45)" fg:x="83238" fg:w="40"/><text x="67.8067%" y="335.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="67.5892%" y="341" width="0.0114%" height="15" fill="rgb(234,134,9)" fg:x="83278" fg:w="14"/><text x="67.8392%" y="351.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="67.5892%" y="325" width="0.0114%" height="15" fill="rgb(227,166,31)" fg:x="83278" fg:w="14"/><text x="67.8392%" y="335.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (14 samples, 0.01%)</title><rect x="67.5892%" y="309" width="0.0114%" height="15" fill="rgb(245,143,41)" fg:x="83278" fg:w="14"/><text x="67.8392%" y="319.50"></text></g><g><title>parking::Unparker::unpark (84 samples, 0.07%)</title><rect x="67.5373%" y="373" width="0.0682%" height="15" fill="rgb(238,181,32)" fg:x="83214" fg:w="84"/><text x="67.7873%" y="383.50"></text></g><g><title>parking::Inner::unpark (74 samples, 0.06%)</title><rect x="67.5454%" y="357" width="0.0601%" height="15" fill="rgb(224,113,18)" fg:x="83224" fg:w="74"/><text x="67.7954%" y="367.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (139 samples, 0.11%)</title><rect x="67.4967%" y="389" width="0.1128%" height="15" fill="rgb(240,229,28)" fg:x="83164" fg:w="139"/><text x="67.7467%" y="399.50"></text></g><g><title>core::task::wake::Waker::wake (205 samples, 0.17%)</title><rect x="67.4967%" y="421" width="0.1664%" height="15" fill="rgb(250,185,3)" fg:x="83164" fg:w="205"/><text x="67.7467%" y="431.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (205 samples, 0.17%)</title><rect x="67.4967%" y="405" width="0.1664%" height="15" fill="rgb(212,59,25)" fg:x="83164" fg:w="205"/><text x="67.7467%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (66 samples, 0.05%)</title><rect x="67.6095%" y="389" width="0.0536%" height="15" fill="rgb(221,87,20)" fg:x="83303" fg:w="66"/><text x="67.8595%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.05%)</title><rect x="67.6095%" y="373" width="0.0536%" height="15" fill="rgb(213,74,28)" fg:x="83303" fg:w="66"/><text x="67.8595%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (64 samples, 0.05%)</title><rect x="67.6111%" y="357" width="0.0519%" height="15" fill="rgb(224,132,34)" fg:x="83305" fg:w="64"/><text x="67.8611%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (64 samples, 0.05%)</title><rect x="67.6111%" y="341" width="0.0519%" height="15" fill="rgb(222,101,24)" fg:x="83305" fg:w="64"/><text x="67.8611%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (52 samples, 0.04%)</title><rect x="67.6695%" y="373" width="0.0422%" height="15" fill="rgb(254,142,4)" fg:x="83377" fg:w="52"/><text x="67.9195%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.04%)</title><rect x="67.6695%" y="357" width="0.0422%" height="15" fill="rgb(230,229,49)" fg:x="83377" fg:w="52"/><text x="67.9195%" y="367.50"></text></g><g><title>async_executor::State::notify (411 samples, 0.33%)</title><rect x="67.3960%" y="437" width="0.3336%" height="15" fill="rgb(238,70,47)" fg:x="83040" fg:w="411"/><text x="67.6460%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (82 samples, 0.07%)</title><rect x="67.6631%" y="421" width="0.0666%" height="15" fill="rgb(231,160,17)" fg:x="83369" fg:w="82"/><text x="67.9131%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (74 samples, 0.06%)</title><rect x="67.6695%" y="405" width="0.0601%" height="15" fill="rgb(218,68,53)" fg:x="83377" fg:w="74"/><text x="67.9195%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (74 samples, 0.06%)</title><rect x="67.6695%" y="389" width="0.0601%" height="15" fill="rgb(236,111,10)" fg:x="83377" fg:w="74"/><text x="67.9195%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (22 samples, 0.02%)</title><rect x="67.7117%" y="373" width="0.0179%" height="15" fill="rgb(224,34,41)" fg:x="83429" fg:w="22"/><text x="67.9617%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (14 samples, 0.01%)</title><rect x="67.7182%" y="357" width="0.0114%" height="15" fill="rgb(241,118,19)" fg:x="83437" fg:w="14"/><text x="67.9682%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (112 samples, 0.09%)</title><rect x="67.7402%" y="405" width="0.0909%" height="15" fill="rgb(238,129,25)" fg:x="83464" fg:w="112"/><text x="67.9902%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (112 samples, 0.09%)</title><rect x="67.7402%" y="389" width="0.0909%" height="15" fill="rgb(238,22,31)" fg:x="83464" fg:w="112"/><text x="67.9902%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (33 samples, 0.03%)</title><rect x="67.8311%" y="405" width="0.0268%" height="15" fill="rgb(222,174,48)" fg:x="83576" fg:w="33"/><text x="68.0811%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_or (33 samples, 0.03%)</title><rect x="67.8311%" y="389" width="0.0268%" height="15" fill="rgb(206,152,40)" fg:x="83576" fg:w="33"/><text x="68.0811%" y="399.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (571 samples, 0.46%)</title><rect x="67.3960%" y="453" width="0.4634%" height="15" fill="rgb(218,99,54)" fg:x="83040" fg:w="571"/><text x="67.6460%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (160 samples, 0.13%)</title><rect x="67.7296%" y="437" width="0.1299%" height="15" fill="rgb(220,174,26)" fg:x="83451" fg:w="160"/><text x="67.9796%" y="447.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (159 samples, 0.13%)</title><rect x="67.7304%" y="421" width="0.1290%" height="15" fill="rgb(245,116,9)" fg:x="83452" fg:w="159"/><text x="67.9804%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (153 samples, 0.12%)</title><rect x="67.8595%" y="453" width="0.1242%" height="15" fill="rgb(209,72,35)" fg:x="83611" fg:w="153"/><text x="68.1095%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (153 samples, 0.12%)</title><rect x="67.8595%" y="437" width="0.1242%" height="15" fill="rgb(226,126,21)" fg:x="83611" fg:w="153"/><text x="68.1095%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (839 samples, 0.68%)</title><rect x="67.3279%" y="629" width="0.6809%" height="15" fill="rgb(227,192,1)" fg:x="82956" fg:w="839"/><text x="67.5779%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (839 samples, 0.68%)</title><rect x="67.3279%" y="613" width="0.6809%" height="15" fill="rgb(237,180,29)" fg:x="82956" fg:w="839"/><text x="67.5779%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (839 samples, 0.68%)</title><rect x="67.3279%" y="597" width="0.6809%" height="15" fill="rgb(230,197,35)" fg:x="82956" fg:w="839"/><text x="67.5779%" y="607.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (839 samples, 0.68%)</title><rect x="67.3279%" y="581" width="0.6809%" height="15" fill="rgb(246,193,31)" fg:x="82956" fg:w="839"/><text x="67.5779%" y="591.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (839 samples, 0.68%)</title><rect x="67.3279%" y="565" width="0.6809%" height="15" fill="rgb(241,36,4)" fg:x="82956" fg:w="839"/><text x="67.5779%" y="575.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (839 samples, 0.68%)</title><rect x="67.3279%" y="549" width="0.6809%" height="15" fill="rgb(241,130,17)" fg:x="82956" fg:w="839"/><text x="67.5779%" y="559.50"></text></g><g><title>event_listener::Event::notify (839 samples, 0.68%)</title><rect x="67.3279%" y="533" width="0.6809%" height="15" fill="rgb(206,137,32)" fg:x="82956" fg:w="839"/><text x="67.5779%" y="543.50"></text></g><g><title>event_listener::List::notify (823 samples, 0.67%)</title><rect x="67.3408%" y="517" width="0.6680%" height="15" fill="rgb(237,228,51)" fg:x="82972" fg:w="823"/><text x="67.5908%" y="527.50"></text></g><g><title>core::task::wake::Waker::wake (789 samples, 0.64%)</title><rect x="67.3684%" y="501" width="0.6404%" height="15" fill="rgb(243,6,42)" fg:x="83006" fg:w="789"/><text x="67.6184%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (789 samples, 0.64%)</title><rect x="67.3684%" y="485" width="0.6404%" height="15" fill="rgb(251,74,28)" fg:x="83006" fg:w="789"/><text x="67.6184%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (757 samples, 0.61%)</title><rect x="67.3944%" y="469" width="0.6144%" height="15" fill="rgb(218,20,49)" fg:x="83038" fg:w="757"/><text x="67.6444%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.03%)</title><rect x="67.9836%" y="453" width="0.0252%" height="15" fill="rgb(238,28,14)" fg:x="83764" fg:w="31"/><text x="68.2336%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="67.9836%" y="437" width="0.0252%" height="15" fill="rgb(229,40,46)" fg:x="83764" fg:w="31"/><text x="68.2336%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="69.0874%" y="613" width="0.0106%" height="15" fill="rgb(244,195,20)" fg:x="85124" fg:w="13"/><text x="69.3374%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="69.0980%" y="613" width="0.0308%" height="15" fill="rgb(253,56,35)" fg:x="85137" fg:w="38"/><text x="69.3480%" y="623.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="69.1288%" y="613" width="0.0170%" height="15" fill="rgb(210,149,44)" fg:x="85175" fg:w="21"/><text x="69.3788%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (179 samples, 0.15%)</title><rect x="69.4859%" y="517" width="0.1453%" height="15" fill="rgb(240,135,12)" fg:x="85615" fg:w="179"/><text x="69.7359%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (179 samples, 0.15%)</title><rect x="69.4859%" y="501" width="0.1453%" height="15" fill="rgb(251,24,50)" fg:x="85615" fg:w="179"/><text x="69.7359%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (179 samples, 0.15%)</title><rect x="69.4859%" y="485" width="0.1453%" height="15" fill="rgb(243,200,47)" fg:x="85615" fg:w="179"/><text x="69.7359%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (171 samples, 0.14%)</title><rect x="69.4924%" y="469" width="0.1388%" height="15" fill="rgb(224,166,26)" fg:x="85623" fg:w="171"/><text x="69.7424%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (171 samples, 0.14%)</title><rect x="69.4924%" y="453" width="0.1388%" height="15" fill="rgb(233,0,47)" fg:x="85623" fg:w="171"/><text x="69.7424%" y="463.50"></text></g><g><title>alloc::alloc::alloc (171 samples, 0.14%)</title><rect x="69.4924%" y="437" width="0.1388%" height="15" fill="rgb(253,80,5)" fg:x="85623" fg:w="171"/><text x="69.7424%" y="447.50"></text></g><g><title>__rg_alloc (171 samples, 0.14%)</title><rect x="69.4924%" y="421" width="0.1388%" height="15" fill="rgb(214,133,25)" fg:x="85623" fg:w="171"/><text x="69.7424%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (171 samples, 0.14%)</title><rect x="69.4924%" y="405" width="0.1388%" height="15" fill="rgb(209,27,14)" fg:x="85623" fg:w="171"/><text x="69.7424%" y="415.50"></text></g><g><title>sn_rust_alloc (155 samples, 0.13%)</title><rect x="69.5054%" y="389" width="0.1258%" height="15" fill="rgb(219,102,51)" fg:x="85639" fg:w="155"/><text x="69.7554%" y="399.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (31 samples, 0.03%)</title><rect x="69.6060%" y="373" width="0.0252%" height="15" fill="rgb(237,18,16)" fg:x="85763" fg:w="31"/><text x="69.8560%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (291 samples, 0.24%)</title><rect x="69.4567%" y="597" width="0.2362%" height="15" fill="rgb(241,85,17)" fg:x="85579" fg:w="291"/><text x="69.7067%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (255 samples, 0.21%)</title><rect x="69.4859%" y="581" width="0.2070%" height="15" fill="rgb(236,90,42)" fg:x="85615" fg:w="255"/><text x="69.7359%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (255 samples, 0.21%)</title><rect x="69.4859%" y="565" width="0.2070%" height="15" fill="rgb(249,57,21)" fg:x="85615" fg:w="255"/><text x="69.7359%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (255 samples, 0.21%)</title><rect x="69.4859%" y="549" width="0.2070%" height="15" fill="rgb(243,12,36)" fg:x="85615" fg:w="255"/><text x="69.7359%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (255 samples, 0.21%)</title><rect x="69.4859%" y="533" width="0.2070%" height="15" fill="rgb(253,128,47)" fg:x="85615" fg:w="255"/><text x="69.7359%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (76 samples, 0.06%)</title><rect x="69.6312%" y="517" width="0.0617%" height="15" fill="rgb(207,33,20)" fg:x="85794" fg:w="76"/><text x="69.8812%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (76 samples, 0.06%)</title><rect x="69.6312%" y="501" width="0.0617%" height="15" fill="rgb(233,215,35)" fg:x="85794" fg:w="76"/><text x="69.8812%" y="511.50"></text></g><g><title>[libc-2.31.so] (56 samples, 0.05%)</title><rect x="69.6474%" y="485" width="0.0455%" height="15" fill="rgb(249,188,52)" fg:x="85814" fg:w="56"/><text x="69.8974%" y="495.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (85 samples, 0.07%)</title><rect x="69.7408%" y="309" width="0.0690%" height="15" fill="rgb(225,12,32)" fg:x="85929" fg:w="85"/><text x="69.9908%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (132 samples, 0.11%)</title><rect x="69.7042%" y="453" width="0.1071%" height="15" fill="rgb(247,98,14)" fg:x="85884" fg:w="132"/><text x="69.9542%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (132 samples, 0.11%)</title><rect x="69.7042%" y="437" width="0.1071%" height="15" fill="rgb(247,219,48)" fg:x="85884" fg:w="132"/><text x="69.9542%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (132 samples, 0.11%)</title><rect x="69.7042%" y="421" width="0.1071%" height="15" fill="rgb(253,60,48)" fg:x="85884" fg:w="132"/><text x="69.9542%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (127 samples, 0.10%)</title><rect x="69.7083%" y="405" width="0.1031%" height="15" fill="rgb(245,15,52)" fg:x="85889" fg:w="127"/><text x="69.9583%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (127 samples, 0.10%)</title><rect x="69.7083%" y="389" width="0.1031%" height="15" fill="rgb(220,133,28)" fg:x="85889" fg:w="127"/><text x="69.9583%" y="399.50"></text></g><g><title>alloc::alloc::alloc (127 samples, 0.10%)</title><rect x="69.7083%" y="373" width="0.1031%" height="15" fill="rgb(217,180,4)" fg:x="85889" fg:w="127"/><text x="69.9583%" y="383.50"></text></g><g><title>__rg_alloc (127 samples, 0.10%)</title><rect x="69.7083%" y="357" width="0.1031%" height="15" fill="rgb(251,24,1)" fg:x="85889" fg:w="127"/><text x="69.9583%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (127 samples, 0.10%)</title><rect x="69.7083%" y="341" width="0.1031%" height="15" fill="rgb(212,185,49)" fg:x="85889" fg:w="127"/><text x="69.9583%" y="351.50"></text></g><g><title>sn_rust_alloc (122 samples, 0.10%)</title><rect x="69.7124%" y="325" width="0.0990%" height="15" fill="rgb(215,175,22)" fg:x="85894" fg:w="122"/><text x="69.9624%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (172 samples, 0.14%)</title><rect x="69.7018%" y="533" width="0.1396%" height="15" fill="rgb(250,205,14)" fg:x="85881" fg:w="172"/><text x="69.9518%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (169 samples, 0.14%)</title><rect x="69.7042%" y="517" width="0.1372%" height="15" fill="rgb(225,211,22)" fg:x="85884" fg:w="169"/><text x="69.9542%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (169 samples, 0.14%)</title><rect x="69.7042%" y="501" width="0.1372%" height="15" fill="rgb(251,179,42)" fg:x="85884" fg:w="169"/><text x="69.9542%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (169 samples, 0.14%)</title><rect x="69.7042%" y="485" width="0.1372%" height="15" fill="rgb(208,216,51)" fg:x="85884" fg:w="169"/><text x="69.9542%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (169 samples, 0.14%)</title><rect x="69.7042%" y="469" width="0.1372%" height="15" fill="rgb(235,36,11)" fg:x="85884" fg:w="169"/><text x="69.9542%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (37 samples, 0.03%)</title><rect x="69.8114%" y="453" width="0.0300%" height="15" fill="rgb(213,189,28)" fg:x="86016" fg:w="37"/><text x="70.0614%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.03%)</title><rect x="69.8114%" y="437" width="0.0300%" height="15" fill="rgb(227,203,42)" fg:x="86016" fg:w="37"/><text x="70.0614%" y="447.50"></text></g><g><title>[libc-2.31.so] (33 samples, 0.03%)</title><rect x="69.8146%" y="421" width="0.0268%" height="15" fill="rgb(244,72,36)" fg:x="86020" fg:w="33"/><text x="70.0646%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="69.8414%" y="533" width="0.0390%" height="15" fill="rgb(213,53,17)" fg:x="86053" fg:w="48"/><text x="70.0914%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="69.8495%" y="517" width="0.0308%" height="15" fill="rgb(207,167,3)" fg:x="86063" fg:w="38"/><text x="70.0995%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="69.8495%" y="501" width="0.0308%" height="15" fill="rgb(216,98,30)" fg:x="86063" fg:w="38"/><text x="70.0995%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (34 samples, 0.03%)</title><rect x="69.9291%" y="389" width="0.0276%" height="15" fill="rgb(236,123,15)" fg:x="86161" fg:w="34"/><text x="70.1791%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.06%)</title><rect x="69.8942%" y="485" width="0.0633%" height="15" fill="rgb(248,81,50)" fg:x="86118" fg:w="78"/><text x="70.1442%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.06%)</title><rect x="69.8942%" y="469" width="0.0633%" height="15" fill="rgb(214,120,4)" fg:x="86118" fg:w="78"/><text x="70.1442%" y="479.50"></text></g><g><title>alloc::alloc::alloc (78 samples, 0.06%)</title><rect x="69.8942%" y="453" width="0.0633%" height="15" fill="rgb(208,179,34)" fg:x="86118" fg:w="78"/><text x="70.1442%" y="463.50"></text></g><g><title>__rg_alloc (78 samples, 0.06%)</title><rect x="69.8942%" y="437" width="0.0633%" height="15" fill="rgb(227,140,7)" fg:x="86118" fg:w="78"/><text x="70.1442%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (78 samples, 0.06%)</title><rect x="69.8942%" y="421" width="0.0633%" height="15" fill="rgb(214,22,6)" fg:x="86118" fg:w="78"/><text x="70.1442%" y="431.50"></text></g><g><title>sn_rust_alloc (69 samples, 0.06%)</title><rect x="69.9015%" y="405" width="0.0560%" height="15" fill="rgb(207,137,27)" fg:x="86127" fg:w="69"/><text x="70.1515%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (104 samples, 0.08%)</title><rect x="69.8812%" y="533" width="0.0844%" height="15" fill="rgb(210,8,46)" fg:x="86102" fg:w="104"/><text x="70.1312%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (91 samples, 0.07%)</title><rect x="69.8917%" y="517" width="0.0739%" height="15" fill="rgb(240,16,54)" fg:x="86115" fg:w="91"/><text x="70.1417%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (91 samples, 0.07%)</title><rect x="69.8917%" y="501" width="0.0739%" height="15" fill="rgb(211,209,29)" fg:x="86115" fg:w="91"/><text x="70.1417%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (345 samples, 0.28%)</title><rect x="69.6929%" y="597" width="0.2800%" height="15" fill="rgb(226,228,24)" fg:x="85870" fg:w="345"/><text x="69.9429%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (345 samples, 0.28%)</title><rect x="69.6929%" y="581" width="0.2800%" height="15" fill="rgb(222,84,9)" fg:x="85870" fg:w="345"/><text x="69.9429%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (345 samples, 0.28%)</title><rect x="69.6929%" y="565" width="0.2800%" height="15" fill="rgb(234,203,30)" fg:x="85870" fg:w="345"/><text x="69.9429%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (345 samples, 0.28%)</title><rect x="69.6929%" y="549" width="0.2800%" height="15" fill="rgb(238,109,14)" fg:x="85870" fg:w="345"/><text x="69.9429%" y="559.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,026 samples, 0.83%)</title><rect x="69.1459%" y="613" width="0.8327%" height="15" fill="rgb(233,206,34)" fg:x="85196" fg:w="1026"/><text x="69.3959%" y="623.50"></text></g><g><title>[libc-2.31.so] (126 samples, 0.10%)</title><rect x="69.9786%" y="613" width="0.1023%" height="15" fill="rgb(220,167,47)" fg:x="86222" fg:w="126"/><text x="70.2286%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (313 samples, 0.25%)</title><rect x="70.0898%" y="613" width="0.2540%" height="15" fill="rgb(238,105,10)" fg:x="86359" fg:w="313"/><text x="70.3398%" y="623.50"></text></g><g><title>core::ptr::write (294 samples, 0.24%)</title><rect x="70.1052%" y="597" width="0.2386%" height="15" fill="rgb(213,227,17)" fg:x="86378" fg:w="294"/><text x="70.3552%" y="607.50"></text></g><g><title>[libc-2.31.so] (293 samples, 0.24%)</title><rect x="70.1060%" y="581" width="0.2378%" height="15" fill="rgb(217,132,38)" fg:x="86379" fg:w="293"/><text x="70.3560%" y="591.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,070 samples, 0.87%)</title><rect x="70.4185%" y="453" width="0.8684%" height="15" fill="rgb(242,146,4)" fg:x="86764" fg:w="1070"/><text x="70.6685%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,151 samples, 0.93%)</title><rect x="70.3714%" y="549" width="0.9342%" height="15" fill="rgb(212,61,9)" fg:x="86706" fg:w="1151"/><text x="70.6214%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,151 samples, 0.93%)</title><rect x="70.3714%" y="533" width="0.9342%" height="15" fill="rgb(247,126,22)" fg:x="86706" fg:w="1151"/><text x="70.6214%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1,150 samples, 0.93%)</title><rect x="70.3722%" y="517" width="0.9334%" height="15" fill="rgb(220,196,2)" fg:x="86707" fg:w="1150"/><text x="70.6222%" y="527.50"></text></g><g><title>__rg_alloc (1,150 samples, 0.93%)</title><rect x="70.3722%" y="501" width="0.9334%" height="15" fill="rgb(208,46,4)" fg:x="86707" fg:w="1150"/><text x="70.6222%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,150 samples, 0.93%)</title><rect x="70.3722%" y="485" width="0.9334%" height="15" fill="rgb(252,104,46)" fg:x="86707" fg:w="1150"/><text x="70.6222%" y="495.50"></text></g><g><title>sn_rust_alloc (1,147 samples, 0.93%)</title><rect x="70.3746%" y="469" width="0.9309%" height="15" fill="rgb(237,152,48)" fg:x="86710" fg:w="1147"/><text x="70.6246%" y="479.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="71.2869%" y="453" width="0.0187%" height="15" fill="rgb(221,59,37)" fg:x="87834" fg:w="23"/><text x="71.5369%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,188 samples, 0.96%)</title><rect x="70.3438%" y="613" width="0.9642%" height="15" fill="rgb(209,202,51)" fg:x="86672" fg:w="1188"/><text x="70.5938%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,188 samples, 0.96%)</title><rect x="70.3438%" y="597" width="0.9642%" height="15" fill="rgb(228,81,30)" fg:x="86672" fg:w="1188"/><text x="70.5938%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,173 samples, 0.95%)</title><rect x="70.3560%" y="581" width="0.9520%" height="15" fill="rgb(227,42,39)" fg:x="86687" fg:w="1173"/><text x="70.6060%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,173 samples, 0.95%)</title><rect x="70.3560%" y="565" width="0.9520%" height="15" fill="rgb(221,26,2)" fg:x="86687" fg:w="1173"/><text x="70.6060%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64 samples, 0.05%)</title><rect x="71.3185%" y="517" width="0.0519%" height="15" fill="rgb(254,61,31)" fg:x="87873" fg:w="64"/><text x="71.5685%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (64 samples, 0.05%)</title><rect x="71.3185%" y="501" width="0.0519%" height="15" fill="rgb(222,173,38)" fg:x="87873" fg:w="64"/><text x="71.5685%" y="511.50"></text></g><g><title>__rg_dealloc (64 samples, 0.05%)</title><rect x="71.3185%" y="485" width="0.0519%" height="15" fill="rgb(218,50,12)" fg:x="87873" fg:w="64"/><text x="71.5685%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (64 samples, 0.05%)</title><rect x="71.3185%" y="469" width="0.0519%" height="15" fill="rgb(223,88,40)" fg:x="87873" fg:w="64"/><text x="71.5685%" y="479.50"></text></g><g><title>sn_rust_dealloc (57 samples, 0.05%)</title><rect x="71.3242%" y="453" width="0.0463%" height="15" fill="rgb(237,54,19)" fg:x="87880" fg:w="57"/><text x="71.5742%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (82 samples, 0.07%)</title><rect x="71.3080%" y="613" width="0.0666%" height="15" fill="rgb(251,129,25)" fg:x="87860" fg:w="82"/><text x="71.5580%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.07%)</title><rect x="71.3080%" y="597" width="0.0666%" height="15" fill="rgb(238,97,19)" fg:x="87860" fg:w="82"/><text x="71.5580%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (69 samples, 0.06%)</title><rect x="71.3185%" y="581" width="0.0560%" height="15" fill="rgb(240,169,18)" fg:x="87873" fg:w="69"/><text x="71.5685%" y="591.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.06%)</title><rect x="71.3185%" y="565" width="0.0560%" height="15" fill="rgb(230,187,49)" fg:x="87873" fg:w="69"/><text x="71.5685%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (69 samples, 0.06%)</title><rect x="71.3185%" y="549" width="0.0560%" height="15" fill="rgb(209,44,26)" fg:x="87873" fg:w="69"/><text x="71.5685%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.06%)</title><rect x="71.3185%" y="533" width="0.0560%" height="15" fill="rgb(244,0,6)" fg:x="87873" fg:w="69"/><text x="71.5685%" y="543.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (34 samples, 0.03%)</title><rect x="71.3745%" y="613" width="0.0276%" height="15" fill="rgb(248,18,21)" fg:x="87942" fg:w="34"/><text x="71.6245%" y="623.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,026 samples, 4.08%)</title><rect x="67.3279%" y="709" width="4.0791%" height="15" fill="rgb(245,180,19)" fg:x="82956" fg:w="5026"/><text x="67.5779%" y="719.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,026 samples, 4.08%)</title><rect x="67.3279%" y="693" width="4.0791%" height="15" fill="rgb(252,118,36)" fg:x="82956" fg:w="5026"/><text x="67.5779%" y="703.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (5,026 samples, 4.08%)</title><rect x="67.3279%" y="677" width="4.0791%" height="15" fill="rgb(210,224,19)" fg:x="82956" fg:w="5026"/><text x="67.5779%" y="687.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,026 samples, 4.08%)</title><rect x="67.3279%" y="661" width="4.0791%" height="15" fill="rgb(218,30,24)" fg:x="82956" fg:w="5026"/><text x="67.5779%" y="671.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (5,026 samples, 4.08%)</title><rect x="67.3279%" y="645" width="4.0791%" height="15" fill="rgb(219,75,50)" fg:x="82956" fg:w="5026"/><text x="67.5779%" y="655.50">trem..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,187 samples, 3.40%)</title><rect x="68.0088%" y="629" width="3.3982%" height="15" fill="rgb(234,72,50)" fg:x="83795" fg:w="4187"/><text x="68.2588%" y="639.50">tre..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.01%)</title><rect x="71.5393%" y="597" width="0.0146%" height="15" fill="rgb(219,100,48)" fg:x="88145" fg:w="18"/><text x="71.7893%" y="607.50"></text></g><g><title>core::mem::replace (18 samples, 0.01%)</title><rect x="71.5393%" y="581" width="0.0146%" height="15" fill="rgb(253,5,41)" fg:x="88145" fg:w="18"/><text x="71.7893%" y="591.50"></text></g><g><title>core::ptr::read (18 samples, 0.01%)</title><rect x="71.5393%" y="565" width="0.0146%" height="15" fill="rgb(247,181,11)" fg:x="88145" fg:w="18"/><text x="71.7893%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (261 samples, 0.21%)</title><rect x="71.6318%" y="581" width="0.2118%" height="15" fill="rgb(222,223,25)" fg:x="88259" fg:w="261"/><text x="71.8818%" y="591.50"></text></g><g><title>core::mem::replace (261 samples, 0.21%)</title><rect x="71.6318%" y="565" width="0.2118%" height="15" fill="rgb(214,198,28)" fg:x="88259" fg:w="261"/><text x="71.8818%" y="575.50"></text></g><g><title>core::ptr::read (261 samples, 0.21%)</title><rect x="71.6318%" y="549" width="0.2118%" height="15" fill="rgb(230,46,43)" fg:x="88259" fg:w="261"/><text x="71.8818%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (414 samples, 0.34%)</title><rect x="71.5539%" y="597" width="0.3360%" height="15" fill="rgb(233,65,53)" fg:x="88163" fg:w="414"/><text x="71.8039%" y="607.50"></text></g><g><title>core::mem::drop (57 samples, 0.05%)</title><rect x="71.8437%" y="581" width="0.0463%" height="15" fill="rgb(221,121,27)" fg:x="88520" fg:w="57"/><text x="72.0937%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (57 samples, 0.05%)</title><rect x="71.8437%" y="565" width="0.0463%" height="15" fill="rgb(247,70,47)" fg:x="88520" fg:w="57"/><text x="72.0937%" y="575.50"></text></g><g><title>std::sync::poison::Flag::done (13 samples, 0.01%)</title><rect x="71.9134%" y="549" width="0.0106%" height="15" fill="rgb(228,85,35)" fg:x="88606" fg:w="13"/><text x="72.1634%" y="559.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="71.9134%" y="533" width="0.0106%" height="15" fill="rgb(209,50,18)" fg:x="88606" fg:w="13"/><text x="72.1634%" y="543.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="71.9134%" y="517" width="0.0106%" height="15" fill="rgb(250,19,35)" fg:x="88606" fg:w="13"/><text x="72.1634%" y="527.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="71.9134%" y="501" width="0.0106%" height="15" fill="rgb(253,107,29)" fg:x="88606" fg:w="13"/><text x="72.1634%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (383 samples, 0.31%)</title><rect x="71.8899%" y="597" width="0.3108%" height="15" fill="rgb(252,179,29)" fg:x="88577" fg:w="383"/><text x="72.1399%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (372 samples, 0.30%)</title><rect x="71.8988%" y="581" width="0.3019%" height="15" fill="rgb(238,194,6)" fg:x="88588" fg:w="372"/><text x="72.1488%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (372 samples, 0.30%)</title><rect x="71.8988%" y="565" width="0.3019%" height="15" fill="rgb(238,164,29)" fg:x="88588" fg:w="372"/><text x="72.1488%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (341 samples, 0.28%)</title><rect x="71.9240%" y="549" width="0.2768%" height="15" fill="rgb(224,25,9)" fg:x="88619" fg:w="341"/><text x="72.1740%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (341 samples, 0.28%)</title><rect x="71.9240%" y="533" width="0.2768%" height="15" fill="rgb(244,153,23)" fg:x="88619" fg:w="341"/><text x="72.1740%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (341 samples, 0.28%)</title><rect x="71.9240%" y="517" width="0.2768%" height="15" fill="rgb(212,203,14)" fg:x="88619" fg:w="341"/><text x="72.1740%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (341 samples, 0.28%)</title><rect x="71.9240%" y="501" width="0.2768%" height="15" fill="rgb(220,164,20)" fg:x="88619" fg:w="341"/><text x="72.1740%" y="511.50"></text></g><g><title>core::task::wake::Context::waker (20 samples, 0.02%)</title><rect x="72.2008%" y="597" width="0.0162%" height="15" fill="rgb(222,203,48)" fg:x="88960" fg:w="20"/><text x="72.4508%" y="607.50"></text></g><g><title>core::task::wake::Waker::will_wake (50 samples, 0.04%)</title><rect x="72.2170%" y="597" width="0.0406%" height="15" fill="rgb(215,159,22)" fg:x="88980" fg:w="50"/><text x="72.4670%" y="607.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (50 samples, 0.04%)</title><rect x="72.2170%" y="581" width="0.0406%" height="15" fill="rgb(216,183,47)" fg:x="88980" fg:w="50"/><text x="72.4670%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (49 samples, 0.04%)</title><rect x="72.2178%" y="565" width="0.0398%" height="15" fill="rgb(229,195,25)" fg:x="88981" fg:w="49"/><text x="72.4678%" y="575.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (49 samples, 0.04%)</title><rect x="72.2178%" y="549" width="0.0398%" height="15" fill="rgb(224,132,51)" fg:x="88981" fg:w="49"/><text x="72.4678%" y="559.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (29 samples, 0.02%)</title><rect x="72.2730%" y="565" width="0.0235%" height="15" fill="rgb(240,63,7)" fg:x="89049" fg:w="29"/><text x="72.5230%" y="575.50"></text></g><g><title>std::sync::poison::Flag::borrow (29 samples, 0.02%)</title><rect x="72.2730%" y="549" width="0.0235%" height="15" fill="rgb(249,182,41)" fg:x="89049" fg:w="29"/><text x="72.5230%" y="559.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,863 samples, 2.32%)</title><rect x="71.4525%" y="613" width="2.3236%" height="15" fill="rgb(243,47,26)" fg:x="88038" fg:w="2863"/><text x="71.7025%" y="623.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,871 samples, 1.52%)</title><rect x="72.2576%" y="597" width="1.5185%" height="15" fill="rgb(233,48,2)" fg:x="89030" fg:w="1871"/><text x="72.5076%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,852 samples, 1.50%)</title><rect x="72.2730%" y="581" width="1.5031%" height="15" fill="rgb(244,165,34)" fg:x="89049" fg:w="1852"/><text x="72.5230%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,823 samples, 1.48%)</title><rect x="72.2965%" y="565" width="1.4796%" height="15" fill="rgb(207,89,7)" fg:x="89078" fg:w="1823"/><text x="72.5465%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,823 samples, 1.48%)</title><rect x="72.2965%" y="549" width="1.4796%" height="15" fill="rgb(244,117,36)" fg:x="89078" fg:w="1823"/><text x="72.5465%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1,821 samples, 1.48%)</title><rect x="72.2982%" y="533" width="1.4779%" height="15" fill="rgb(226,144,34)" fg:x="89080" fg:w="1821"/><text x="72.5482%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,821 samples, 1.48%)</title><rect x="72.2982%" y="517" width="1.4779%" height="15" fill="rgb(213,23,19)" fg:x="89080" fg:w="1821"/><text x="72.5482%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (7,958 samples, 6.46%)</title><rect x="67.3254%" y="885" width="6.4588%" height="15" fill="rgb(217,75,12)" fg:x="82953" fg:w="7958"/><text x="67.5754%" y="895.50">async_ta..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7,955 samples, 6.46%)</title><rect x="67.3279%" y="869" width="6.4564%" height="15" fill="rgb(224,159,17)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="879.50">&lt;core::p..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,955 samples, 6.46%)</title><rect x="67.3279%" y="853" width="6.4564%" height="15" fill="rgb(217,118,1)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="863.50">&lt;core::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (7,955 samples, 6.46%)</title><rect x="67.3279%" y="837" width="6.4564%" height="15" fill="rgb(232,180,48)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="847.50">async_ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7,955 samples, 6.46%)</title><rect x="67.3279%" y="821" width="6.4564%" height="15" fill="rgb(230,27,33)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="831.50">&lt;async_s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7,955 samples, 6.46%)</title><rect x="67.3279%" y="805" width="6.4564%" height="15" fill="rgb(205,31,21)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="815.50">async_st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,955 samples, 6.46%)</title><rect x="67.3279%" y="789" width="6.4564%" height="15" fill="rgb(253,59,4)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="799.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,955 samples, 6.46%)</title><rect x="67.3279%" y="773" width="6.4564%" height="15" fill="rgb(224,201,9)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="783.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,955 samples, 6.46%)</title><rect x="67.3279%" y="757" width="6.4564%" height="15" fill="rgb(229,206,30)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="767.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,955 samples, 6.46%)</title><rect x="67.3279%" y="741" width="6.4564%" height="15" fill="rgb(212,67,47)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="751.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,955 samples, 6.46%)</title><rect x="67.3279%" y="725" width="6.4564%" height="15" fill="rgb(211,96,50)" fg:x="82956" fg:w="7955"/><text x="67.5779%" y="735.50">&lt;core::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,929 samples, 2.38%)</title><rect x="71.4070%" y="709" width="2.3772%" height="15" fill="rgb(252,114,18)" fg:x="87982" fg:w="2929"/><text x="71.6570%" y="719.50">tr..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,929 samples, 2.38%)</title><rect x="71.4070%" y="693" width="2.3772%" height="15" fill="rgb(223,58,37)" fg:x="87982" fg:w="2929"/><text x="71.6570%" y="703.50">&lt;a..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,929 samples, 2.38%)</title><rect x="71.4070%" y="677" width="2.3772%" height="15" fill="rgb(237,70,4)" fg:x="87982" fg:w="2929"/><text x="71.6570%" y="687.50">&lt;t..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,929 samples, 2.38%)</title><rect x="71.4070%" y="661" width="2.3772%" height="15" fill="rgb(244,85,46)" fg:x="87982" fg:w="2929"/><text x="71.6570%" y="671.50">&lt;a..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,929 samples, 2.38%)</title><rect x="71.4070%" y="645" width="2.3772%" height="15" fill="rgb(223,39,52)" fg:x="87982" fg:w="2929"/><text x="71.6570%" y="655.50">&lt;a..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,929 samples, 2.38%)</title><rect x="71.4070%" y="629" width="2.3772%" height="15" fill="rgb(218,200,14)" fg:x="87982" fg:w="2929"/><text x="71.6570%" y="639.50">&lt;a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (15 samples, 0.01%)</title><rect x="73.7842%" y="885" width="0.0122%" height="15" fill="rgb(208,171,16)" fg:x="90911" fg:w="15"/><text x="74.0342%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="73.8021%" y="885" width="0.0106%" height="15" fill="rgb(234,200,18)" fg:x="90933" fg:w="13"/><text x="74.0521%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (29 samples, 0.02%)</title><rect x="73.8126%" y="885" width="0.0235%" height="15" fill="rgb(228,45,11)" fg:x="90946" fg:w="29"/><text x="74.0626%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (29 samples, 0.02%)</title><rect x="73.8362%" y="885" width="0.0235%" height="15" fill="rgb(237,182,11)" fg:x="90975" fg:w="29"/><text x="74.0862%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="73.8938%" y="885" width="0.0203%" height="15" fill="rgb(241,175,49)" fg:x="91046" fg:w="25"/><text x="74.1438%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (33 samples, 0.03%)</title><rect x="73.9141%" y="885" width="0.0268%" height="15" fill="rgb(247,38,35)" fg:x="91071" fg:w="33"/><text x="74.1641%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (13 samples, 0.01%)</title><rect x="73.9408%" y="885" width="0.0106%" height="15" fill="rgb(228,39,49)" fg:x="91104" fg:w="13"/><text x="74.1908%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (33 samples, 0.03%)</title><rect x="73.9514%" y="885" width="0.0268%" height="15" fill="rgb(226,101,26)" fg:x="91117" fg:w="33"/><text x="74.2014%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (36 samples, 0.03%)</title><rect x="73.9782%" y="885" width="0.0292%" height="15" fill="rgb(206,141,19)" fg:x="91150" fg:w="36"/><text x="74.2282%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (13 samples, 0.01%)</title><rect x="73.9969%" y="869" width="0.0106%" height="15" fill="rgb(211,200,13)" fg:x="91173" fg:w="13"/><text x="74.2469%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="73.9969%" y="853" width="0.0106%" height="15" fill="rgb(241,121,6)" fg:x="91173" fg:w="13"/><text x="74.2469%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (13 samples, 0.01%)</title><rect x="74.0074%" y="885" width="0.0106%" height="15" fill="rgb(234,221,29)" fg:x="91186" fg:w="13"/><text x="74.2574%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (13 samples, 0.01%)</title><rect x="74.0074%" y="869" width="0.0106%" height="15" fill="rgb(229,136,5)" fg:x="91186" fg:w="13"/><text x="74.2574%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (13 samples, 0.01%)</title><rect x="74.0074%" y="853" width="0.0106%" height="15" fill="rgb(238,36,11)" fg:x="91186" fg:w="13"/><text x="74.2574%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="74.0074%" y="837" width="0.0106%" height="15" fill="rgb(251,55,41)" fg:x="91186" fg:w="13"/><text x="74.2574%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="74.0074%" y="821" width="0.0106%" height="15" fill="rgb(242,34,40)" fg:x="91186" fg:w="13"/><text x="74.2574%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="74.0074%" y="805" width="0.0106%" height="15" fill="rgb(215,42,17)" fg:x="91186" fg:w="13"/><text x="74.2574%" y="815.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="74.0074%" y="789" width="0.0106%" height="15" fill="rgb(207,44,46)" fg:x="91186" fg:w="13"/><text x="74.2574%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="74.0074%" y="773" width="0.0106%" height="15" fill="rgb(211,206,28)" fg:x="91186" fg:w="13"/><text x="74.2574%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (47 samples, 0.04%)</title><rect x="74.0180%" y="885" width="0.0381%" height="15" fill="rgb(237,167,16)" fg:x="91199" fg:w="47"/><text x="74.2680%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (44 samples, 0.04%)</title><rect x="74.0204%" y="869" width="0.0357%" height="15" fill="rgb(233,66,6)" fg:x="91202" fg:w="44"/><text x="74.2704%" y="879.50"></text></g><g><title>event_listener::Event::notify (96 samples, 0.08%)</title><rect x="74.0666%" y="885" width="0.0779%" height="15" fill="rgb(246,123,29)" fg:x="91259" fg:w="96"/><text x="74.3166%" y="895.50"></text></g><g><title>event_listener::full_fence (44 samples, 0.04%)</title><rect x="74.1089%" y="869" width="0.0357%" height="15" fill="rgb(209,62,40)" fg:x="91311" fg:w="44"/><text x="74.3589%" y="879.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (57 samples, 0.05%)</title><rect x="74.1543%" y="885" width="0.0463%" height="15" fill="rgb(218,4,25)" fg:x="91367" fg:w="57"/><text x="74.4043%" y="895.50"></text></g><g><title>parking::Inner::park (22 samples, 0.02%)</title><rect x="74.2006%" y="885" width="0.0179%" height="15" fill="rgb(253,91,49)" fg:x="91424" fg:w="22"/><text x="74.4506%" y="895.50"></text></g><g><title>polling::epoll::Poller::wait (49 samples, 0.04%)</title><rect x="74.2241%" y="885" width="0.0398%" height="15" fill="rgb(228,155,29)" fg:x="91453" fg:w="49"/><text x="74.4741%" y="895.50"></text></g><g><title>sn_rust_alloc (99 samples, 0.08%)</title><rect x="74.2639%" y="885" width="0.0803%" height="15" fill="rgb(243,57,37)" fg:x="91502" fg:w="99"/><text x="74.5139%" y="895.50"></text></g><g><title>sn_rust_dealloc (38 samples, 0.03%)</title><rect x="74.3442%" y="885" width="0.0308%" height="15" fill="rgb(244,167,17)" fg:x="91601" fg:w="38"/><text x="74.5942%" y="895.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (14 samples, 0.01%)</title><rect x="74.3807%" y="885" width="0.0114%" height="15" fill="rgb(207,181,38)" fg:x="91646" fg:w="14"/><text x="74.6307%" y="895.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (85 samples, 0.07%)</title><rect x="74.3954%" y="885" width="0.0690%" height="15" fill="rgb(211,8,23)" fg:x="91664" fg:w="85"/><text x="74.6454%" y="895.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (15 samples, 0.01%)</title><rect x="74.4716%" y="645" width="0.0122%" height="15" fill="rgb(235,11,44)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="655.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="74.4716%" y="629" width="0.0122%" height="15" fill="rgb(248,18,52)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="639.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="74.4716%" y="613" width="0.0122%" height="15" fill="rgb(208,4,7)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="623.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="74.4716%" y="597" width="0.0122%" height="15" fill="rgb(240,17,39)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="74.4716%" y="581" width="0.0122%" height="15" fill="rgb(207,170,3)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="74.4716%" y="565" width="0.0122%" height="15" fill="rgb(236,100,52)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="74.4716%" y="549" width="0.0122%" height="15" fill="rgb(246,78,51)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="74.4716%" y="533" width="0.0122%" height="15" fill="rgb(211,17,15)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="74.4716%" y="517" width="0.0122%" height="15" fill="rgb(209,59,46)" fg:x="91758" fg:w="15"/><text x="74.7216%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.08%)</title><rect x="74.4684%" y="789" width="0.0820%" height="15" fill="rgb(210,92,25)" fg:x="91754" fg:w="101"/><text x="74.7184%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (101 samples, 0.08%)</title><rect x="74.4684%" y="773" width="0.0820%" height="15" fill="rgb(238,174,52)" fg:x="91754" fg:w="101"/><text x="74.7184%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.08%)</title><rect x="74.4684%" y="757" width="0.0820%" height="15" fill="rgb(230,73,7)" fg:x="91754" fg:w="101"/><text x="74.7184%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (101 samples, 0.08%)</title><rect x="74.4684%" y="741" width="0.0820%" height="15" fill="rgb(243,124,40)" fg:x="91754" fg:w="101"/><text x="74.7184%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (97 samples, 0.08%)</title><rect x="74.4716%" y="725" width="0.0787%" height="15" fill="rgb(244,170,11)" fg:x="91758" fg:w="97"/><text x="74.7216%" y="735.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (97 samples, 0.08%)</title><rect x="74.4716%" y="709" width="0.0787%" height="15" fill="rgb(207,114,54)" fg:x="91758" fg:w="97"/><text x="74.7216%" y="719.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (97 samples, 0.08%)</title><rect x="74.4716%" y="693" width="0.0787%" height="15" fill="rgb(205,42,20)" fg:x="91758" fg:w="97"/><text x="74.7216%" y="703.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (97 samples, 0.08%)</title><rect x="74.4716%" y="677" width="0.0787%" height="15" fill="rgb(230,30,28)" fg:x="91758" fg:w="97"/><text x="74.7216%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (97 samples, 0.08%)</title><rect x="74.4716%" y="661" width="0.0787%" height="15" fill="rgb(205,73,54)" fg:x="91758" fg:w="97"/><text x="74.7216%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (82 samples, 0.07%)</title><rect x="74.4838%" y="645" width="0.0666%" height="15" fill="rgb(254,227,23)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (82 samples, 0.07%)</title><rect x="74.4838%" y="629" width="0.0666%" height="15" fill="rgb(228,202,34)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (82 samples, 0.07%)</title><rect x="74.4838%" y="613" width="0.0666%" height="15" fill="rgb(222,225,37)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (82 samples, 0.07%)</title><rect x="74.4838%" y="597" width="0.0666%" height="15" fill="rgb(221,14,54)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="607.50"></text></g><g><title>alloc::alloc::alloc (82 samples, 0.07%)</title><rect x="74.4838%" y="581" width="0.0666%" height="15" fill="rgb(254,102,2)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="591.50"></text></g><g><title>__rg_alloc (82 samples, 0.07%)</title><rect x="74.4838%" y="565" width="0.0666%" height="15" fill="rgb(232,104,17)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (82 samples, 0.07%)</title><rect x="74.4838%" y="549" width="0.0666%" height="15" fill="rgb(250,220,14)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="559.50"></text></g><g><title>sn_rust_alloc (82 samples, 0.07%)</title><rect x="74.4838%" y="533" width="0.0666%" height="15" fill="rgb(241,158,9)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="543.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (82 samples, 0.07%)</title><rect x="74.4838%" y="517" width="0.0666%" height="15" fill="rgb(246,9,43)" fg:x="91773" fg:w="82"/><text x="74.7338%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (102 samples, 0.08%)</title><rect x="74.4684%" y="805" width="0.0828%" height="15" fill="rgb(206,73,33)" fg:x="91754" fg:w="102"/><text x="74.7184%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (177 samples, 0.14%)</title><rect x="74.4643%" y="885" width="0.1437%" height="15" fill="rgb(222,79,8)" fg:x="91749" fg:w="177"/><text x="74.7143%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (172 samples, 0.14%)</title><rect x="74.4684%" y="869" width="0.1396%" height="15" fill="rgb(234,8,54)" fg:x="91754" fg:w="172"/><text x="74.7184%" y="879.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (172 samples, 0.14%)</title><rect x="74.4684%" y="853" width="0.1396%" height="15" fill="rgb(209,134,38)" fg:x="91754" fg:w="172"/><text x="74.7184%" y="863.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (172 samples, 0.14%)</title><rect x="74.4684%" y="837" width="0.1396%" height="15" fill="rgb(230,127,29)" fg:x="91754" fg:w="172"/><text x="74.7184%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.14%)</title><rect x="74.4684%" y="821" width="0.1396%" height="15" fill="rgb(242,44,41)" fg:x="91754" fg:w="172"/><text x="74.7184%" y="831.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (70 samples, 0.06%)</title><rect x="74.5512%" y="805" width="0.0568%" height="15" fill="rgb(222,56,43)" fg:x="91856" fg:w="70"/><text x="74.8012%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.06%)</title><rect x="74.5512%" y="789" width="0.0568%" height="15" fill="rgb(238,39,47)" fg:x="91856" fg:w="70"/><text x="74.8012%" y="799.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.06%)</title><rect x="74.5512%" y="773" width="0.0568%" height="15" fill="rgb(226,79,43)" fg:x="91856" fg:w="70"/><text x="74.8012%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.06%)</title><rect x="74.5512%" y="757" width="0.0568%" height="15" fill="rgb(242,105,53)" fg:x="91856" fg:w="70"/><text x="74.8012%" y="767.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.06%)</title><rect x="74.5512%" y="741" width="0.0568%" height="15" fill="rgb(251,132,46)" fg:x="91856" fg:w="70"/><text x="74.8012%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.06%)</title><rect x="74.5512%" y="725" width="0.0568%" height="15" fill="rgb(231,77,14)" fg:x="91856" fg:w="70"/><text x="74.8012%" y="735.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.06%)</title><rect x="74.5512%" y="709" width="0.0568%" height="15" fill="rgb(240,135,9)" fg:x="91856" fg:w="70"/><text x="74.8012%" y="719.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.06%)</title><rect x="74.5512%" y="693" width="0.0568%" height="15" fill="rgb(248,109,14)" fg:x="91856" fg:w="70"/><text x="74.8012%" y="703.50"></text></g><g><title>tremor_common::time::nanotime (51 samples, 0.04%)</title><rect x="74.6080%" y="885" width="0.0414%" height="15" fill="rgb(227,146,52)" fg:x="91926" fg:w="51"/><text x="74.8580%" y="895.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (76 samples, 0.06%)</title><rect x="74.6494%" y="885" width="0.0617%" height="15" fill="rgb(232,54,3)" fg:x="91977" fg:w="76"/><text x="74.8994%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (24 samples, 0.02%)</title><rect x="74.7135%" y="885" width="0.0195%" height="15" fill="rgb(229,201,43)" fg:x="92056" fg:w="24"/><text x="74.9635%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.01%)</title><rect x="74.7784%" y="773" width="0.0138%" height="15" fill="rgb(252,161,33)" fg:x="92136" fg:w="17"/><text x="75.0284%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.01%)</title><rect x="74.7784%" y="757" width="0.0138%" height="15" fill="rgb(226,146,40)" fg:x="92136" fg:w="17"/><text x="75.0284%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.01%)</title><rect x="74.7784%" y="741" width="0.0138%" height="15" fill="rgb(219,47,25)" fg:x="92136" fg:w="17"/><text x="75.0284%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.01%)</title><rect x="74.7784%" y="725" width="0.0138%" height="15" fill="rgb(250,135,13)" fg:x="92136" fg:w="17"/><text x="75.0284%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.01%)</title><rect x="74.7784%" y="709" width="0.0138%" height="15" fill="rgb(219,229,18)" fg:x="92136" fg:w="17"/><text x="75.0284%" y="719.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.01%)</title><rect x="74.7784%" y="693" width="0.0138%" height="15" fill="rgb(217,152,27)" fg:x="92136" fg:w="17"/><text x="75.0284%" y="703.50"></text></g><g><title>__rg_alloc (17 samples, 0.01%)</title><rect x="74.7784%" y="677" width="0.0138%" height="15" fill="rgb(225,71,47)" fg:x="92136" fg:w="17"/><text x="75.0284%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.01%)</title><rect x="74.7784%" y="661" width="0.0138%" height="15" fill="rgb(220,139,14)" fg:x="92136" fg:w="17"/><text x="75.0284%" y="671.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (29 samples, 0.02%)</title><rect x="74.7736%" y="869" width="0.0235%" height="15" fill="rgb(247,54,32)" fg:x="92130" fg:w="29"/><text x="75.0236%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="74.7784%" y="853" width="0.0187%" height="15" fill="rgb(252,131,39)" fg:x="92136" fg:w="23"/><text x="75.0284%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="74.7784%" y="837" width="0.0187%" height="15" fill="rgb(210,108,39)" fg:x="92136" fg:w="23"/><text x="75.0284%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.02%)</title><rect x="74.7784%" y="821" width="0.0187%" height="15" fill="rgb(205,23,29)" fg:x="92136" fg:w="23"/><text x="75.0284%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.02%)</title><rect x="74.7784%" y="805" width="0.0187%" height="15" fill="rgb(246,139,46)" fg:x="92136" fg:w="23"/><text x="75.0284%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.02%)</title><rect x="74.7784%" y="789" width="0.0187%" height="15" fill="rgb(250,81,26)" fg:x="92136" fg:w="23"/><text x="75.0284%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (95 samples, 0.08%)</title><rect x="74.7330%" y="885" width="0.0771%" height="15" fill="rgb(214,104,7)" fg:x="92080" fg:w="95"/><text x="74.9830%" y="895.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (19 samples, 0.02%)</title><rect x="74.8101%" y="885" width="0.0154%" height="15" fill="rgb(233,189,8)" fg:x="92175" fg:w="19"/><text x="75.0601%" y="895.50"></text></g><g><title>tremor_runtime::pipeline::maybe_send (29 samples, 0.02%)</title><rect x="74.8255%" y="885" width="0.0235%" height="15" fill="rgb(228,141,17)" fg:x="92194" fg:w="29"/><text x="75.0755%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (22 samples, 0.02%)</title><rect x="74.9318%" y="741" width="0.0179%" height="15" fill="rgb(247,157,1)" fg:x="92325" fg:w="22"/><text x="75.1818%" y="751.50"></text></g><g><title>core::mem::replace (22 samples, 0.02%)</title><rect x="74.9318%" y="725" width="0.0179%" height="15" fill="rgb(249,225,5)" fg:x="92325" fg:w="22"/><text x="75.1818%" y="735.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="74.9318%" y="709" width="0.0179%" height="15" fill="rgb(242,55,13)" fg:x="92325" fg:w="22"/><text x="75.1818%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (241 samples, 0.20%)</title><rect x="74.9976%" y="725" width="0.1956%" height="15" fill="rgb(230,49,50)" fg:x="92406" fg:w="241"/><text x="75.2476%" y="735.50"></text></g><g><title>core::mem::replace (241 samples, 0.20%)</title><rect x="74.9976%" y="709" width="0.1956%" height="15" fill="rgb(241,111,38)" fg:x="92406" fg:w="241"/><text x="75.2476%" y="719.50"></text></g><g><title>core::ptr::read (241 samples, 0.20%)</title><rect x="74.9976%" y="693" width="0.1956%" height="15" fill="rgb(252,155,4)" fg:x="92406" fg:w="241"/><text x="75.2476%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (362 samples, 0.29%)</title><rect x="74.9497%" y="741" width="0.2938%" height="15" fill="rgb(212,69,32)" fg:x="92347" fg:w="362"/><text x="75.1997%" y="751.50"></text></g><g><title>core::mem::drop (62 samples, 0.05%)</title><rect x="75.1932%" y="725" width="0.0503%" height="15" fill="rgb(243,107,47)" fg:x="92647" fg:w="62"/><text x="75.4432%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (62 samples, 0.05%)</title><rect x="75.1932%" y="709" width="0.0503%" height="15" fill="rgb(247,130,12)" fg:x="92647" fg:w="62"/><text x="75.4432%" y="719.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="75.2435%" y="725" width="0.0130%" height="15" fill="rgb(233,74,16)" fg:x="92709" fg:w="16"/><text x="75.4935%" y="735.50"></text></g><g><title>std::sync::poison::Flag::done (17 samples, 0.01%)</title><rect x="75.2735%" y="693" width="0.0138%" height="15" fill="rgb(208,58,18)" fg:x="92746" fg:w="17"/><text x="75.5235%" y="703.50"></text></g><g><title>std::thread::panicking (17 samples, 0.01%)</title><rect x="75.2735%" y="677" width="0.0138%" height="15" fill="rgb(242,225,1)" fg:x="92746" fg:w="17"/><text x="75.5235%" y="687.50"></text></g><g><title>std::panicking::panicking (17 samples, 0.01%)</title><rect x="75.2735%" y="661" width="0.0138%" height="15" fill="rgb(249,39,40)" fg:x="92746" fg:w="17"/><text x="75.5235%" y="671.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (17 samples, 0.01%)</title><rect x="75.2735%" y="645" width="0.0138%" height="15" fill="rgb(207,72,44)" fg:x="92746" fg:w="17"/><text x="75.5235%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (416 samples, 0.34%)</title><rect x="75.2435%" y="741" width="0.3376%" height="15" fill="rgb(215,193,12)" fg:x="92709" fg:w="416"/><text x="75.4935%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (400 samples, 0.32%)</title><rect x="75.2565%" y="725" width="0.3246%" height="15" fill="rgb(248,41,39)" fg:x="92725" fg:w="400"/><text x="75.5065%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (400 samples, 0.32%)</title><rect x="75.2565%" y="709" width="0.3246%" height="15" fill="rgb(253,85,4)" fg:x="92725" fg:w="400"/><text x="75.5065%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (362 samples, 0.29%)</title><rect x="75.2873%" y="693" width="0.2938%" height="15" fill="rgb(243,70,31)" fg:x="92763" fg:w="362"/><text x="75.5373%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (362 samples, 0.29%)</title><rect x="75.2873%" y="677" width="0.2938%" height="15" fill="rgb(253,195,26)" fg:x="92763" fg:w="362"/><text x="75.5373%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (362 samples, 0.29%)</title><rect x="75.2873%" y="661" width="0.2938%" height="15" fill="rgb(243,42,11)" fg:x="92763" fg:w="362"/><text x="75.5373%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (362 samples, 0.29%)</title><rect x="75.2873%" y="645" width="0.2938%" height="15" fill="rgb(239,66,17)" fg:x="92763" fg:w="362"/><text x="75.5373%" y="655.50"></text></g><g><title>core::task::wake::Context::waker (15 samples, 0.01%)</title><rect x="75.5811%" y="741" width="0.0122%" height="15" fill="rgb(217,132,21)" fg:x="93125" fg:w="15"/><text x="75.8311%" y="751.50"></text></g><g><title>core::task::wake::Waker::will_wake (42 samples, 0.03%)</title><rect x="75.5933%" y="741" width="0.0341%" height="15" fill="rgb(252,202,21)" fg:x="93140" fg:w="42"/><text x="75.8433%" y="751.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (42 samples, 0.03%)</title><rect x="75.5933%" y="725" width="0.0341%" height="15" fill="rgb(233,98,36)" fg:x="93140" fg:w="42"/><text x="75.8433%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (42 samples, 0.03%)</title><rect x="75.5933%" y="709" width="0.0341%" height="15" fill="rgb(216,153,54)" fg:x="93140" fg:w="42"/><text x="75.8433%" y="719.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (42 samples, 0.03%)</title><rect x="75.5933%" y="693" width="0.0341%" height="15" fill="rgb(250,99,7)" fg:x="93140" fg:w="42"/><text x="75.8433%" y="703.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (30 samples, 0.02%)</title><rect x="75.6517%" y="709" width="0.0243%" height="15" fill="rgb(207,56,50)" fg:x="93212" fg:w="30"/><text x="75.9017%" y="719.50"></text></g><g><title>std::sync::poison::Flag::borrow (30 samples, 0.02%)</title><rect x="75.6517%" y="693" width="0.0243%" height="15" fill="rgb(244,61,34)" fg:x="93212" fg:w="30"/><text x="75.9017%" y="703.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="75.6655%" y="677" width="0.0106%" height="15" fill="rgb(241,50,38)" fg:x="93229" fg:w="13"/><text x="75.9155%" y="687.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="75.6655%" y="661" width="0.0106%" height="15" fill="rgb(212,166,30)" fg:x="93229" fg:w="13"/><text x="75.9155%" y="671.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="75.6655%" y="645" width="0.0106%" height="15" fill="rgb(249,127,32)" fg:x="93229" fg:w="13"/><text x="75.9155%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="75.6655%" y="629" width="0.0106%" height="15" fill="rgb(209,103,0)" fg:x="93229" fg:w="13"/><text x="75.9155%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="75.6655%" y="613" width="0.0106%" height="15" fill="rgb(238,209,51)" fg:x="93229" fg:w="13"/><text x="75.9155%" y="623.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,571 samples, 1.28%)</title><rect x="74.8531%" y="869" width="1.2750%" height="15" fill="rgb(237,56,23)" fg:x="92228" fg:w="1571"/><text x="75.1031%" y="879.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,571 samples, 1.28%)</title><rect x="74.8531%" y="853" width="1.2750%" height="15" fill="rgb(215,153,46)" fg:x="92228" fg:w="1571"/><text x="75.1031%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,571 samples, 1.28%)</title><rect x="74.8531%" y="837" width="1.2750%" height="15" fill="rgb(224,49,31)" fg:x="92228" fg:w="1571"/><text x="75.1031%" y="847.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,571 samples, 1.28%)</title><rect x="74.8531%" y="821" width="1.2750%" height="15" fill="rgb(250,18,42)" fg:x="92228" fg:w="1571"/><text x="75.1031%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,571 samples, 1.28%)</title><rect x="74.8531%" y="805" width="1.2750%" height="15" fill="rgb(215,176,39)" fg:x="92228" fg:w="1571"/><text x="75.1031%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,571 samples, 1.28%)</title><rect x="74.8531%" y="789" width="1.2750%" height="15" fill="rgb(223,77,29)" fg:x="92228" fg:w="1571"/><text x="75.1031%" y="799.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,571 samples, 1.28%)</title><rect x="74.8531%" y="773" width="1.2750%" height="15" fill="rgb(234,94,52)" fg:x="92228" fg:w="1571"/><text x="75.1031%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,571 samples, 1.28%)</title><rect x="74.8531%" y="757" width="1.2750%" height="15" fill="rgb(220,154,50)" fg:x="92228" fg:w="1571"/><text x="75.1031%" y="767.50"></text></g><g><title>event_listener::Inner::lock (617 samples, 0.50%)</title><rect x="75.6274%" y="741" width="0.5008%" height="15" fill="rgb(212,11,10)" fg:x="93182" fg:w="617"/><text x="75.8774%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (587 samples, 0.48%)</title><rect x="75.6517%" y="725" width="0.4764%" height="15" fill="rgb(205,166,19)" fg:x="93212" fg:w="587"/><text x="75.9017%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (557 samples, 0.45%)</title><rect x="75.6761%" y="709" width="0.4521%" height="15" fill="rgb(244,198,16)" fg:x="93242" fg:w="557"/><text x="75.9261%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (557 samples, 0.45%)</title><rect x="75.6761%" y="693" width="0.4521%" height="15" fill="rgb(219,69,12)" fg:x="93242" fg:w="557"/><text x="75.9261%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (556 samples, 0.45%)</title><rect x="75.6769%" y="677" width="0.4513%" height="15" fill="rgb(245,30,7)" fg:x="93243" fg:w="556"/><text x="75.9269%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (556 samples, 0.45%)</title><rect x="75.6769%" y="661" width="0.4513%" height="15" fill="rgb(218,221,48)" fg:x="93243" fg:w="556"/><text x="75.9269%" y="671.50"></text></g><g><title>[libc-2.31.so] (364 samples, 0.30%)</title><rect x="76.2775%" y="757" width="0.2954%" height="15" fill="rgb(216,66,15)" fg:x="93983" fg:w="364"/><text x="76.5275%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (292 samples, 0.24%)</title><rect x="76.6622%" y="741" width="0.2370%" height="15" fill="rgb(226,122,50)" fg:x="94457" fg:w="292"/><text x="76.9122%" y="751.50"></text></g><g><title>core::ptr::write (292 samples, 0.24%)</title><rect x="76.6622%" y="725" width="0.2370%" height="15" fill="rgb(239,156,16)" fg:x="94457" fg:w="292"/><text x="76.9122%" y="735.50"></text></g><g><title>[libc-2.31.so] (279 samples, 0.23%)</title><rect x="76.6727%" y="709" width="0.2264%" height="15" fill="rgb(224,27,38)" fg:x="94470" fg:w="279"/><text x="76.9227%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (457 samples, 0.37%)</title><rect x="76.8992%" y="741" width="0.3709%" height="15" fill="rgb(224,39,27)" fg:x="94749" fg:w="457"/><text x="77.1492%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (457 samples, 0.37%)</title><rect x="76.8992%" y="725" width="0.3709%" height="15" fill="rgb(215,92,29)" fg:x="94749" fg:w="457"/><text x="77.1492%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (161 samples, 0.13%)</title><rect x="77.2701%" y="741" width="0.1307%" height="15" fill="rgb(207,159,16)" fg:x="95206" fg:w="161"/><text x="77.5201%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (155 samples, 0.13%)</title><rect x="77.2749%" y="725" width="0.1258%" height="15" fill="rgb(238,163,47)" fg:x="95212" fg:w="155"/><text x="77.5249%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,453 samples, 1.18%)</title><rect x="76.2336%" y="773" width="1.1793%" height="15" fill="rgb(219,91,49)" fg:x="93929" fg:w="1453"/><text x="76.4836%" y="783.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,035 samples, 0.84%)</title><rect x="76.5729%" y="757" width="0.8400%" height="15" fill="rgb(227,167,31)" fg:x="94347" fg:w="1035"/><text x="76.8229%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (15 samples, 0.01%)</title><rect x="77.4007%" y="741" width="0.0122%" height="15" fill="rgb(234,80,54)" fg:x="95367" fg:w="15"/><text x="77.6507%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_store (15 samples, 0.01%)</title><rect x="77.4007%" y="725" width="0.0122%" height="15" fill="rgb(212,114,2)" fg:x="95367" fg:w="15"/><text x="77.6507%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (17 samples, 0.01%)</title><rect x="77.4446%" y="757" width="0.0138%" height="15" fill="rgb(234,50,24)" fg:x="95421" fg:w="17"/><text x="77.6946%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="77.4454%" y="741" width="0.0130%" height="15" fill="rgb(221,68,8)" fg:x="95422" fg:w="16"/><text x="77.6954%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="77.4454%" y="725" width="0.0130%" height="15" fill="rgb(254,180,31)" fg:x="95422" fg:w="16"/><text x="77.6954%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="77.4462%" y="709" width="0.0122%" height="15" fill="rgb(247,130,50)" fg:x="95423" fg:w="15"/><text x="77.6962%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (15 samples, 0.01%)</title><rect x="77.4462%" y="693" width="0.0122%" height="15" fill="rgb(211,109,4)" fg:x="95423" fg:w="15"/><text x="77.6962%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.01%)</title><rect x="77.4462%" y="677" width="0.0122%" height="15" fill="rgb(238,50,21)" fg:x="95423" fg:w="15"/><text x="77.6962%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="77.4462%" y="661" width="0.0122%" height="15" fill="rgb(225,57,45)" fg:x="95423" fg:w="15"/><text x="77.6962%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="77.4584%" y="757" width="0.0179%" height="15" fill="rgb(209,196,50)" fg:x="95438" fg:w="22"/><text x="77.7084%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="77.4584%" y="741" width="0.0179%" height="15" fill="rgb(242,140,13)" fg:x="95438" fg:w="22"/><text x="77.7084%" y="751.50"></text></g><g><title>event_listener::Inner::lock (34 samples, 0.03%)</title><rect x="77.4787%" y="757" width="0.0276%" height="15" fill="rgb(217,111,7)" fg:x="95463" fg:w="34"/><text x="77.7287%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="77.4811%" y="741" width="0.0252%" height="15" fill="rgb(253,193,51)" fg:x="95466" fg:w="31"/><text x="77.7311%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (26 samples, 0.02%)</title><rect x="77.4851%" y="725" width="0.0211%" height="15" fill="rgb(252,70,29)" fg:x="95471" fg:w="26"/><text x="77.7351%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (26 samples, 0.02%)</title><rect x="77.4851%" y="709" width="0.0211%" height="15" fill="rgb(232,127,12)" fg:x="95471" fg:w="26"/><text x="77.7351%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (26 samples, 0.02%)</title><rect x="77.4851%" y="693" width="0.0211%" height="15" fill="rgb(211,180,21)" fg:x="95471" fg:w="26"/><text x="77.7351%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.02%)</title><rect x="77.4851%" y="677" width="0.0211%" height="15" fill="rgb(229,72,13)" fg:x="95471" fg:w="26"/><text x="77.7351%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (21 samples, 0.02%)</title><rect x="77.5111%" y="709" width="0.0170%" height="15" fill="rgb(240,211,49)" fg:x="95503" fg:w="21"/><text x="77.7611%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.02%)</title><rect x="77.5111%" y="693" width="0.0170%" height="15" fill="rgb(219,149,40)" fg:x="95503" fg:w="21"/><text x="77.7611%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (21 samples, 0.02%)</title><rect x="77.5111%" y="677" width="0.0170%" height="15" fill="rgb(210,127,46)" fg:x="95503" fg:w="21"/><text x="77.7611%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (15 samples, 0.01%)</title><rect x="77.5428%" y="661" width="0.0122%" height="15" fill="rgb(220,106,7)" fg:x="95542" fg:w="15"/><text x="77.7928%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="77.5428%" y="645" width="0.0122%" height="15" fill="rgb(249,31,22)" fg:x="95542" fg:w="15"/><text x="77.7928%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (20 samples, 0.02%)</title><rect x="77.5671%" y="581" width="0.0162%" height="15" fill="rgb(253,1,49)" fg:x="95572" fg:w="20"/><text x="77.8171%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_swap (20 samples, 0.02%)</title><rect x="77.5671%" y="565" width="0.0162%" height="15" fill="rgb(227,144,33)" fg:x="95572" fg:w="20"/><text x="77.8171%" y="575.50"></text></g><g><title>parking::Unparker::unpark (33 samples, 0.03%)</title><rect x="77.5606%" y="613" width="0.0268%" height="15" fill="rgb(249,163,44)" fg:x="95564" fg:w="33"/><text x="77.8106%" y="623.50"></text></g><g><title>parking::Inner::unpark (26 samples, 0.02%)</title><rect x="77.5663%" y="597" width="0.0211%" height="15" fill="rgb(234,15,39)" fg:x="95571" fg:w="26"/><text x="77.8163%" y="607.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (42 samples, 0.03%)</title><rect x="77.5549%" y="629" width="0.0341%" height="15" fill="rgb(207,66,16)" fg:x="95557" fg:w="42"/><text x="77.8049%" y="639.50"></text></g><g><title>core::task::wake::Waker::wake (53 samples, 0.04%)</title><rect x="77.5549%" y="661" width="0.0430%" height="15" fill="rgb(233,112,24)" fg:x="95557" fg:w="53"/><text x="77.8049%" y="671.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (53 samples, 0.04%)</title><rect x="77.5549%" y="645" width="0.0430%" height="15" fill="rgb(230,90,22)" fg:x="95557" fg:w="53"/><text x="77.8049%" y="655.50"></text></g><g><title>async_executor::State::notify (105 samples, 0.09%)</title><rect x="77.5290%" y="677" width="0.0852%" height="15" fill="rgb(229,61,13)" fg:x="95525" fg:w="105"/><text x="77.7790%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="77.5980%" y="661" width="0.0162%" height="15" fill="rgb(225,57,24)" fg:x="95610" fg:w="20"/><text x="77.8480%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.01%)</title><rect x="77.5996%" y="645" width="0.0146%" height="15" fill="rgb(208,169,48)" fg:x="95612" fg:w="18"/><text x="77.8496%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (18 samples, 0.01%)</title><rect x="77.5996%" y="629" width="0.0146%" height="15" fill="rgb(244,218,51)" fg:x="95612" fg:w="18"/><text x="77.8496%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (47 samples, 0.04%)</title><rect x="77.6280%" y="645" width="0.0381%" height="15" fill="rgb(214,148,10)" fg:x="95647" fg:w="47"/><text x="77.8780%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (47 samples, 0.04%)</title><rect x="77.6280%" y="629" width="0.0381%" height="15" fill="rgb(225,174,27)" fg:x="95647" fg:w="47"/><text x="77.8780%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (15 samples, 0.01%)</title><rect x="77.6686%" y="645" width="0.0122%" height="15" fill="rgb(230,96,26)" fg:x="95697" fg:w="15"/><text x="77.9186%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_or (15 samples, 0.01%)</title><rect x="77.6686%" y="629" width="0.0122%" height="15" fill="rgb(232,10,30)" fg:x="95697" fg:w="15"/><text x="77.9186%" y="639.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (189 samples, 0.15%)</title><rect x="77.5290%" y="693" width="0.1534%" height="15" fill="rgb(222,8,50)" fg:x="95525" fg:w="189"/><text x="77.7790%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (84 samples, 0.07%)</title><rect x="77.6142%" y="677" width="0.0682%" height="15" fill="rgb(213,81,27)" fg:x="95630" fg:w="84"/><text x="77.8642%" y="687.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (79 samples, 0.06%)</title><rect x="77.6183%" y="661" width="0.0641%" height="15" fill="rgb(245,50,10)" fg:x="95635" fg:w="79"/><text x="77.8683%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (37 samples, 0.03%)</title><rect x="77.6824%" y="693" width="0.0300%" height="15" fill="rgb(216,100,18)" fg:x="95714" fg:w="37"/><text x="77.9324%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (37 samples, 0.03%)</title><rect x="77.6824%" y="677" width="0.0300%" height="15" fill="rgb(236,147,54)" fg:x="95714" fg:w="37"/><text x="77.9324%" y="687.50"></text></g><g><title>event_listener::List::notify (266 samples, 0.22%)</title><rect x="77.5062%" y="757" width="0.2159%" height="15" fill="rgb(205,143,26)" fg:x="95497" fg:w="266"/><text x="77.7562%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (261 samples, 0.21%)</title><rect x="77.5103%" y="741" width="0.2118%" height="15" fill="rgb(236,26,9)" fg:x="95502" fg:w="261"/><text x="77.7603%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (260 samples, 0.21%)</title><rect x="77.5111%" y="725" width="0.2110%" height="15" fill="rgb(221,165,53)" fg:x="95503" fg:w="260"/><text x="77.7611%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (239 samples, 0.19%)</title><rect x="77.5282%" y="709" width="0.1940%" height="15" fill="rgb(214,110,17)" fg:x="95524" fg:w="239"/><text x="77.7782%" y="719.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,411 samples, 2.77%)</title><rect x="76.2077%" y="789" width="2.7684%" height="15" fill="rgb(237,197,12)" fg:x="93897" fg:w="3411"/><text x="76.4577%" y="799.50">as..</text></g><g><title>event_listener::Event::notify (1,926 samples, 1.56%)</title><rect x="77.4129%" y="773" width="1.5632%" height="15" fill="rgb(205,84,17)" fg:x="95382" fg:w="1926"/><text x="77.6629%" y="783.50"></text></g><g><title>event_listener::full_fence (1,545 samples, 1.25%)</title><rect x="77.7221%" y="757" width="1.2539%" height="15" fill="rgb(237,18,45)" fg:x="95763" fg:w="1545"/><text x="77.9721%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,528 samples, 1.24%)</title><rect x="77.7359%" y="741" width="1.2401%" height="15" fill="rgb(221,87,14)" fg:x="95780" fg:w="1528"/><text x="77.9859%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,528 samples, 1.24%)</title><rect x="77.7359%" y="725" width="1.2401%" height="15" fill="rgb(238,186,15)" fg:x="95780" fg:w="1528"/><text x="77.9859%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (29 samples, 0.02%)</title><rect x="78.9761%" y="789" width="0.0235%" height="15" fill="rgb(208,115,11)" fg:x="97308" fg:w="29"/><text x="79.2261%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,472 samples, 4.44%)</title><rect x="74.8490%" y="885" width="4.4411%" height="15" fill="rgb(254,175,0)" fg:x="92223" fg:w="5472"/><text x="75.0990%" y="895.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,896 samples, 3.16%)</title><rect x="76.1281%" y="869" width="3.1620%" height="15" fill="rgb(227,24,42)" fg:x="93799" fg:w="3896"/><text x="76.3781%" y="879.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,895 samples, 3.16%)</title><rect x="76.1289%" y="853" width="3.1612%" height="15" fill="rgb(223,211,37)" fg:x="93800" fg:w="3895"/><text x="76.3789%" y="863.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,895 samples, 3.16%)</title><rect x="76.1289%" y="837" width="3.1612%" height="15" fill="rgb(235,49,27)" fg:x="93800" fg:w="3895"/><text x="76.3789%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (3,895 samples, 3.16%)</title><rect x="76.1289%" y="821" width="3.1612%" height="15" fill="rgb(254,97,51)" fg:x="93800" fg:w="3895"/><text x="76.3789%" y="831.50">tre..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,895 samples, 3.16%)</title><rect x="76.1289%" y="805" width="3.1612%" height="15" fill="rgb(249,51,40)" fg:x="93800" fg:w="3895"/><text x="76.3789%" y="815.50">&lt;as..</text></g><g><title>event_listener::Event::notify (357 samples, 0.29%)</title><rect x="79.0004%" y="789" width="0.2897%" height="15" fill="rgb(210,128,45)" fg:x="97338" fg:w="357"/><text x="79.2504%" y="799.50"></text></g><g><title>event_listener::full_fence (335 samples, 0.27%)</title><rect x="79.0183%" y="773" width="0.2719%" height="15" fill="rgb(224,137,50)" fg:x="97360" fg:w="335"/><text x="79.2683%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (315 samples, 0.26%)</title><rect x="79.0345%" y="757" width="0.2557%" height="15" fill="rgb(242,15,9)" fg:x="97380" fg:w="315"/><text x="79.2845%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (315 samples, 0.26%)</title><rect x="79.0345%" y="741" width="0.2557%" height="15" fill="rgb(233,187,41)" fg:x="97380" fg:w="315"/><text x="79.2845%" y="751.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (57 samples, 0.05%)</title><rect x="79.2902%" y="885" width="0.0463%" height="15" fill="rgb(227,2,29)" fg:x="97695" fg:w="57"/><text x="79.5402%" y="895.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (22 samples, 0.02%)</title><rect x="79.3364%" y="885" width="0.0179%" height="15" fill="rgb(222,70,3)" fg:x="97752" fg:w="22"/><text x="79.5864%" y="895.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (18 samples, 0.01%)</title><rect x="79.3551%" y="885" width="0.0146%" height="15" fill="rgb(213,11,42)" fg:x="97775" fg:w="18"/><text x="79.6051%" y="895.50"></text></g><g><title>[unknown] (92,994 samples, 75.47%)</title><rect x="3.8973%" y="901" width="75.4748%" height="15" fill="rgb(225,150,9)" fg:x="4802" fg:w="92994"/><text x="4.1473%" y="911.50">[unknown]</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (46 samples, 0.04%)</title><rect x="79.3721%" y="885" width="0.0373%" height="15" fill="rgb(230,162,45)" fg:x="97796" fg:w="46"/><text x="79.6221%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="79.4095%" y="885" width="0.0130%" height="15" fill="rgb(222,14,52)" fg:x="97842" fg:w="16"/><text x="79.6595%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="79.4225%" y="885" width="0.0179%" height="15" fill="rgb(254,198,14)" fg:x="97858" fg:w="22"/><text x="79.6725%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (40 samples, 0.03%)</title><rect x="79.4403%" y="885" width="0.0325%" height="15" fill="rgb(220,217,30)" fg:x="97880" fg:w="40"/><text x="79.6903%" y="895.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="79.4460%" y="869" width="0.0268%" height="15" fill="rgb(215,146,41)" fg:x="97887" fg:w="33"/><text x="79.6960%" y="879.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (31 samples, 0.03%)</title><rect x="79.4476%" y="853" width="0.0252%" height="15" fill="rgb(217,27,36)" fg:x="97889" fg:w="31"/><text x="79.6976%" y="863.50"></text></g><g><title>__rust_probestack (14 samples, 0.01%)</title><rect x="79.4728%" y="885" width="0.0114%" height="15" fill="rgb(219,218,39)" fg:x="97920" fg:w="14"/><text x="79.7228%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (44 samples, 0.04%)</title><rect x="79.4850%" y="885" width="0.0357%" height="15" fill="rgb(219,4,42)" fg:x="97935" fg:w="44"/><text x="79.7350%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (81 samples, 0.07%)</title><rect x="79.5328%" y="885" width="0.0657%" height="15" fill="rgb(249,119,36)" fg:x="97994" fg:w="81"/><text x="79.7828%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.05%)</title><rect x="79.5466%" y="869" width="0.0519%" height="15" fill="rgb(209,23,33)" fg:x="98011" fg:w="64"/><text x="79.7966%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (55 samples, 0.04%)</title><rect x="79.5539%" y="853" width="0.0446%" height="15" fill="rgb(211,10,0)" fg:x="98020" fg:w="55"/><text x="79.8039%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.04%)</title><rect x="79.5621%" y="837" width="0.0365%" height="15" fill="rgb(208,99,37)" fg:x="98030" fg:w="45"/><text x="79.8121%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (41 samples, 0.03%)</title><rect x="79.5653%" y="821" width="0.0333%" height="15" fill="rgb(213,132,31)" fg:x="98034" fg:w="41"/><text x="79.8153%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="79.7154%" y="869" width="0.0106%" height="15" fill="rgb(243,129,40)" fg:x="98219" fg:w="13"/><text x="79.9654%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.02%)</title><rect x="79.7479%" y="837" width="0.0162%" height="15" fill="rgb(210,66,33)" fg:x="98259" fg:w="20"/><text x="79.9979%" y="847.50"></text></g><g><title>core::ptr::write (20 samples, 0.02%)</title><rect x="79.7479%" y="821" width="0.0162%" height="15" fill="rgb(209,189,4)" fg:x="98259" fg:w="20"/><text x="79.9979%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 0.05%)</title><rect x="79.7260%" y="869" width="0.0479%" height="15" fill="rgb(214,107,37)" fg:x="98232" fg:w="59"/><text x="79.9760%" y="879.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (49 samples, 0.04%)</title><rect x="79.7341%" y="853" width="0.0398%" height="15" fill="rgb(245,88,54)" fg:x="98242" fg:w="49"/><text x="79.9841%" y="863.50"></text></g><g><title>__dso_handle (504 samples, 0.41%)</title><rect x="79.3721%" y="901" width="0.4091%" height="15" fill="rgb(205,146,20)" fg:x="97796" fg:w="504"/><text x="79.6221%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (225 samples, 0.18%)</title><rect x="79.5986%" y="885" width="0.1826%" height="15" fill="rgb(220,161,25)" fg:x="98075" fg:w="225"/><text x="79.8486%" y="895.50"></text></g><g><title>__vdso_clock_gettime (20 samples, 0.02%)</title><rect x="79.7812%" y="901" width="0.0162%" height="15" fill="rgb(215,152,15)" fg:x="98300" fg:w="20"/><text x="80.0312%" y="911.50"></text></g><g><title>anon.7ffb122119e4c1435beee04d7a36cdb5.9.llvm.14803035141670572092 (21 samples, 0.02%)</title><rect x="79.8064%" y="901" width="0.0170%" height="15" fill="rgb(233,192,44)" fg:x="98331" fg:w="21"/><text x="80.0564%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="79.8477%" y="869" width="0.0268%" height="15" fill="rgb(240,170,46)" fg:x="98382" fg:w="33"/><text x="80.0977%" y="879.50"></text></g><g><title>async_task::runnable::Runnable::run (32 samples, 0.03%)</title><rect x="79.8486%" y="853" width="0.0260%" height="15" fill="rgb(207,104,33)" fg:x="98383" fg:w="32"/><text x="80.0986%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.04%)</title><rect x="79.8364%" y="885" width="0.0390%" height="15" fill="rgb(219,21,39)" fg:x="98368" fg:w="48"/><text x="80.0864%" y="895.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (37 samples, 0.03%)</title><rect x="79.8753%" y="885" width="0.0300%" height="15" fill="rgb(214,133,29)" fg:x="98416" fg:w="37"/><text x="80.1253%" y="895.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (36 samples, 0.03%)</title><rect x="79.8761%" y="869" width="0.0292%" height="15" fill="rgb(226,93,6)" fg:x="98417" fg:w="36"/><text x="80.1261%" y="879.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="79.8786%" y="853" width="0.0268%" height="15" fill="rgb(252,222,34)" fg:x="98420" fg:w="33"/><text x="80.1286%" y="863.50"></text></g><g><title>polling::epoll::Poller::modify (25 samples, 0.02%)</title><rect x="79.9419%" y="885" width="0.0203%" height="15" fill="rgb(252,92,48)" fg:x="98498" fg:w="25"/><text x="80.1919%" y="895.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (162 samples, 0.13%)</title><rect x="79.8331%" y="901" width="0.1315%" height="15" fill="rgb(245,223,24)" fg:x="98364" fg:w="162"/><text x="80.0831%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (38 samples, 0.03%)</title><rect x="80.4548%" y="293" width="0.0308%" height="15" fill="rgb(205,176,3)" fg:x="99130" fg:w="38"/><text x="80.7048%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::nth (14 samples, 0.01%)</title><rect x="80.5441%" y="229" width="0.0114%" height="15" fill="rgb(235,151,15)" fg:x="99240" fg:w="14"/><text x="80.7941%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (54 samples, 0.04%)</title><rect x="80.6756%" y="197" width="0.0438%" height="15" fill="rgb(237,209,11)" fg:x="99402" fg:w="54"/><text x="80.9256%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (54 samples, 0.04%)</title><rect x="80.6756%" y="181" width="0.0438%" height="15" fill="rgb(243,227,24)" fg:x="99402" fg:w="54"/><text x="80.9256%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (48 samples, 0.04%)</title><rect x="80.6805%" y="165" width="0.0390%" height="15" fill="rgb(239,193,16)" fg:x="99408" fg:w="48"/><text x="80.9305%" y="175.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (45 samples, 0.04%)</title><rect x="80.6829%" y="149" width="0.0365%" height="15" fill="rgb(231,27,9)" fg:x="99411" fg:w="45"/><text x="80.9329%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (45 samples, 0.04%)</title><rect x="80.6829%" y="133" width="0.0365%" height="15" fill="rgb(219,169,10)" fg:x="99411" fg:w="45"/><text x="80.9329%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 samples, 0.08%)</title><rect x="80.7194%" y="197" width="0.0828%" height="15" fill="rgb(244,229,43)" fg:x="99456" fg:w="102"/><text x="80.9694%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (477 samples, 0.39%)</title><rect x="80.4946%" y="245" width="0.3871%" height="15" fill="rgb(254,38,20)" fg:x="99179" fg:w="477"/><text x="80.7446%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (402 samples, 0.33%)</title><rect x="80.5555%" y="229" width="0.3263%" height="15" fill="rgb(250,47,30)" fg:x="99254" fg:w="402"/><text x="80.8055%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (334 samples, 0.27%)</title><rect x="80.6107%" y="213" width="0.2711%" height="15" fill="rgb(224,124,36)" fg:x="99322" fg:w="334"/><text x="80.8607%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (98 samples, 0.08%)</title><rect x="80.8022%" y="197" width="0.0795%" height="15" fill="rgb(246,68,51)" fg:x="99558" fg:w="98"/><text x="81.0522%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (98 samples, 0.08%)</title><rect x="80.8022%" y="181" width="0.0795%" height="15" fill="rgb(253,43,49)" fg:x="99558" fg:w="98"/><text x="81.0522%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (45 samples, 0.04%)</title><rect x="80.8452%" y="165" width="0.0365%" height="15" fill="rgb(219,54,36)" fg:x="99611" fg:w="45"/><text x="81.0952%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (45 samples, 0.04%)</title><rect x="80.8452%" y="149" width="0.0365%" height="15" fill="rgb(227,133,34)" fg:x="99611" fg:w="45"/><text x="81.0952%" y="159.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (31 samples, 0.03%)</title><rect x="80.8566%" y="133" width="0.0252%" height="15" fill="rgb(247,227,15)" fg:x="99625" fg:w="31"/><text x="81.1066%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (31 samples, 0.03%)</title><rect x="80.8566%" y="117" width="0.0252%" height="15" fill="rgb(229,96,14)" fg:x="99625" fg:w="31"/><text x="81.1066%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (532 samples, 0.43%)</title><rect x="80.4857%" y="293" width="0.4318%" height="15" fill="rgb(220,79,17)" fg:x="99168" fg:w="532"/><text x="80.7357%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (532 samples, 0.43%)</title><rect x="80.4857%" y="277" width="0.4318%" height="15" fill="rgb(205,131,53)" fg:x="99168" fg:w="532"/><text x="80.7357%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (532 samples, 0.43%)</title><rect x="80.4857%" y="261" width="0.4318%" height="15" fill="rgb(209,50,29)" fg:x="99168" fg:w="532"/><text x="80.7357%" y="271.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (44 samples, 0.04%)</title><rect x="80.8817%" y="245" width="0.0357%" height="15" fill="rgb(245,86,46)" fg:x="99656" fg:w="44"/><text x="81.1317%" y="255.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1,386 samples, 1.12%)</title><rect x="81.3354%" y="261" width="1.1249%" height="15" fill="rgb(235,66,46)" fg:x="100215" fg:w="1386"/><text x="81.5854%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (979 samples, 0.79%)</title><rect x="81.6657%" y="245" width="0.7946%" height="15" fill="rgb(232,148,31)" fg:x="100622" fg:w="979"/><text x="81.9157%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (979 samples, 0.79%)</title><rect x="81.6657%" y="229" width="0.7946%" height="15" fill="rgb(217,149,8)" fg:x="100622" fg:w="979"/><text x="81.9157%" y="239.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1,758 samples, 1.43%)</title><rect x="81.0481%" y="277" width="1.4268%" height="15" fill="rgb(209,183,11)" fg:x="99861" fg:w="1758"/><text x="81.2981%" y="287.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (18 samples, 0.01%)</title><rect x="82.4603%" y="261" width="0.0146%" height="15" fill="rgb(208,55,20)" fg:x="101601" fg:w="18"/><text x="82.7103%" y="271.50"></text></g><g><title>async_executor::steal (1,925 samples, 1.56%)</title><rect x="80.9174%" y="293" width="1.5623%" height="15" fill="rgb(218,39,14)" fg:x="99700" fg:w="1925"/><text x="81.1674%" y="303.50"></text></g><g><title>concurrent_queue::full_fence (1,913 samples, 1.55%)</title><rect x="83.2849%" y="261" width="1.5526%" height="15" fill="rgb(216,169,33)" fg:x="102617" fg:w="1913"/><text x="83.5349%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,874 samples, 1.52%)</title><rect x="83.3166%" y="245" width="1.5210%" height="15" fill="rgb(233,80,24)" fg:x="102656" fg:w="1874"/><text x="83.5666%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,874 samples, 1.52%)</title><rect x="83.3166%" y="229" width="1.5210%" height="15" fill="rgb(213,179,31)" fg:x="102656" fg:w="1874"/><text x="83.5666%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,874 samples, 1.52%)</title><rect x="83.3166%" y="213" width="1.5210%" height="15" fill="rgb(209,19,5)" fg:x="102656" fg:w="1874"/><text x="83.5666%" y="223.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,750 samples, 2.23%)</title><rect x="82.7306%" y="277" width="2.2319%" height="15" fill="rgb(219,18,35)" fg:x="101934" fg:w="2750"/><text x="82.9806%" y="287.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::load (153 samples, 0.12%)</title><rect x="84.8383%" y="261" width="0.1242%" height="15" fill="rgb(209,169,16)" fg:x="104531" fg:w="153"/><text x="85.0883%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (96 samples, 0.08%)</title><rect x="84.8846%" y="245" width="0.0779%" height="15" fill="rgb(245,90,51)" fg:x="104588" fg:w="96"/><text x="85.1346%" y="255.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="85.0218%" y="261" width="0.0106%" height="15" fill="rgb(220,99,45)" fg:x="104757" fg:w="13"/><text x="85.2718%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="85.0218%" y="245" width="0.0106%" height="15" fill="rgb(249,89,25)" fg:x="104757" fg:w="13"/><text x="85.2718%" y="255.50"></text></g><g><title>concurrent_queue::full_fence (297 samples, 0.24%)</title><rect x="85.0323%" y="261" width="0.2410%" height="15" fill="rgb(239,193,0)" fg:x="104770" fg:w="297"/><text x="85.2823%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (297 samples, 0.24%)</title><rect x="85.0323%" y="245" width="0.2410%" height="15" fill="rgb(231,126,1)" fg:x="104770" fg:w="297"/><text x="85.2823%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (297 samples, 0.24%)</title><rect x="85.0323%" y="229" width="0.2410%" height="15" fill="rgb(243,166,3)" fg:x="104770" fg:w="297"/><text x="85.2823%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (297 samples, 0.24%)</title><rect x="85.0323%" y="213" width="0.2410%" height="15" fill="rgb(223,22,34)" fg:x="104770" fg:w="297"/><text x="85.2823%" y="223.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (49 samples, 0.04%)</title><rect x="85.2831%" y="261" width="0.0398%" height="15" fill="rgb(251,52,51)" fg:x="105079" fg:w="49"/><text x="85.5331%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (44 samples, 0.04%)</title><rect x="85.2871%" y="245" width="0.0357%" height="15" fill="rgb(221,165,28)" fg:x="105084" fg:w="44"/><text x="85.5371%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (44 samples, 0.04%)</title><rect x="85.2871%" y="229" width="0.0357%" height="15" fill="rgb(218,121,47)" fg:x="105084" fg:w="44"/><text x="85.5371%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (23 samples, 0.02%)</title><rect x="85.3375%" y="261" width="0.0187%" height="15" fill="rgb(209,120,9)" fg:x="105146" fg:w="23"/><text x="85.5875%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.02%)</title><rect x="85.3375%" y="245" width="0.0187%" height="15" fill="rgb(236,68,12)" fg:x="105146" fg:w="23"/><text x="85.5875%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (154 samples, 0.12%)</title><rect x="85.3561%" y="261" width="0.1250%" height="15" fill="rgb(225,194,26)" fg:x="105169" fg:w="154"/><text x="85.6061%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (154 samples, 0.12%)</title><rect x="85.3561%" y="245" width="0.1250%" height="15" fill="rgb(231,84,39)" fg:x="105169" fg:w="154"/><text x="85.6061%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (175 samples, 0.14%)</title><rect x="85.4811%" y="261" width="0.1420%" height="15" fill="rgb(210,11,45)" fg:x="105323" fg:w="175"/><text x="85.7311%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_or (175 samples, 0.14%)</title><rect x="85.4811%" y="245" width="0.1420%" height="15" fill="rgb(224,54,52)" fg:x="105323" fg:w="175"/><text x="85.7311%" y="255.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4,052 samples, 3.29%)</title><rect x="82.4798%" y="293" width="3.2886%" height="15" fill="rgb(238,102,14)" fg:x="101625" fg:w="4052"/><text x="82.7298%" y="303.50">con..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (993 samples, 0.81%)</title><rect x="84.9625%" y="277" width="0.8059%" height="15" fill="rgb(243,160,52)" fg:x="104684" fg:w="993"/><text x="85.2125%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (179 samples, 0.15%)</title><rect x="85.6232%" y="261" width="0.1453%" height="15" fill="rgb(216,114,19)" fg:x="105498" fg:w="179"/><text x="85.8732%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (179 samples, 0.15%)</title><rect x="85.6232%" y="245" width="0.1453%" height="15" fill="rgb(244,166,37)" fg:x="105498" fg:w="179"/><text x="85.8732%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (191 samples, 0.16%)</title><rect x="85.7684%" y="293" width="0.1550%" height="15" fill="rgb(246,29,44)" fg:x="105677" fg:w="191"/><text x="86.0184%" y="303.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (191 samples, 0.16%)</title><rect x="85.7684%" y="277" width="0.1550%" height="15" fill="rgb(215,56,53)" fg:x="105677" fg:w="191"/><text x="86.0184%" y="287.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (191 samples, 0.16%)</title><rect x="85.7684%" y="261" width="0.1550%" height="15" fill="rgb(217,60,2)" fg:x="105677" fg:w="191"/><text x="86.0184%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (191 samples, 0.16%)</title><rect x="85.7684%" y="245" width="0.1550%" height="15" fill="rgb(207,26,24)" fg:x="105677" fg:w="191"/><text x="86.0184%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (187 samples, 0.15%)</title><rect x="85.7717%" y="229" width="0.1518%" height="15" fill="rgb(252,210,15)" fg:x="105681" fg:w="187"/><text x="86.0217%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (187 samples, 0.15%)</title><rect x="85.7717%" y="213" width="0.1518%" height="15" fill="rgb(253,209,26)" fg:x="105681" fg:w="187"/><text x="86.0217%" y="223.50"></text></g><g><title>fastrand::usize (37 samples, 0.03%)</title><rect x="85.9234%" y="293" width="0.0300%" height="15" fill="rgb(238,170,14)" fg:x="105868" fg:w="37"/><text x="86.1734%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.03%)</title><rect x="85.9243%" y="277" width="0.0292%" height="15" fill="rgb(216,178,15)" fg:x="105869" fg:w="36"/><text x="86.1743%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.03%)</title><rect x="85.9251%" y="261" width="0.0284%" height="15" fill="rgb(250,197,2)" fg:x="105870" fg:w="35"/><text x="86.1751%" y="271.50"></text></g><g><title>fastrand::usize::{{closure}} (27 samples, 0.02%)</title><rect x="85.9316%" y="245" width="0.0219%" height="15" fill="rgb(212,70,42)" fg:x="105878" fg:w="27"/><text x="86.1816%" y="255.50"></text></g><g><title>fastrand::Rng::usize (27 samples, 0.02%)</title><rect x="85.9316%" y="229" width="0.0219%" height="15" fill="rgb(227,213,9)" fg:x="105878" fg:w="27"/><text x="86.1816%" y="239.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (19 samples, 0.02%)</title><rect x="85.9381%" y="213" width="0.0154%" height="15" fill="rgb(245,99,25)" fg:x="105886" fg:w="19"/><text x="86.1881%" y="223.50"></text></g><g><title>std::sync::poison::Flag::get (30 samples, 0.02%)</title><rect x="85.9535%" y="245" width="0.0243%" height="15" fill="rgb(250,82,29)" fg:x="105905" fg:w="30"/><text x="86.2035%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (30 samples, 0.02%)</title><rect x="85.9535%" y="229" width="0.0243%" height="15" fill="rgb(241,226,54)" fg:x="105905" fg:w="30"/><text x="86.2035%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.02%)</title><rect x="85.9535%" y="213" width="0.0243%" height="15" fill="rgb(221,99,41)" fg:x="105905" fg:w="30"/><text x="86.2035%" y="223.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (33 samples, 0.03%)</title><rect x="85.9535%" y="277" width="0.0268%" height="15" fill="rgb(213,90,21)" fg:x="105905" fg:w="33"/><text x="86.2035%" y="287.50"></text></g><g><title>std::sync::poison::Flag::borrow (33 samples, 0.03%)</title><rect x="85.9535%" y="261" width="0.0268%" height="15" fill="rgb(205,208,24)" fg:x="105905" fg:w="33"/><text x="86.2035%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (324 samples, 0.26%)</title><rect x="85.9843%" y="245" width="0.2630%" height="15" fill="rgb(246,31,12)" fg:x="105943" fg:w="324"/><text x="86.2343%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (324 samples, 0.26%)</title><rect x="85.9843%" y="229" width="0.2630%" height="15" fill="rgb(213,154,6)" fg:x="105943" fg:w="324"/><text x="86.2343%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (81 samples, 0.07%)</title><rect x="86.2473%" y="245" width="0.0657%" height="15" fill="rgb(222,163,29)" fg:x="106267" fg:w="81"/><text x="86.4973%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (81 samples, 0.07%)</title><rect x="86.2473%" y="229" width="0.0657%" height="15" fill="rgb(227,201,8)" fg:x="106267" fg:w="81"/><text x="86.4973%" y="239.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (7,491 samples, 6.08%)</title><rect x="80.2422%" y="309" width="6.0798%" height="15" fill="rgb(233,9,32)" fg:x="98868" fg:w="7491"/><text x="80.4922%" y="319.50">async_ex..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (454 samples, 0.37%)</title><rect x="85.9535%" y="293" width="0.3685%" height="15" fill="rgb(217,54,24)" fg:x="105905" fg:w="454"/><text x="86.2035%" y="303.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (421 samples, 0.34%)</title><rect x="85.9803%" y="277" width="0.3417%" height="15" fill="rgb(235,192,0)" fg:x="105938" fg:w="421"/><text x="86.2303%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (421 samples, 0.34%)</title><rect x="85.9803%" y="261" width="0.3417%" height="15" fill="rgb(235,45,9)" fg:x="105938" fg:w="421"/><text x="86.2303%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (31 samples, 0.03%)</title><rect x="86.3309%" y="293" width="0.0252%" height="15" fill="rgb(246,42,40)" fg:x="106370" fg:w="31"/><text x="86.5809%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="86.3309%" y="277" width="0.0252%" height="15" fill="rgb(248,111,24)" fg:x="106370" fg:w="31"/><text x="86.5809%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.02%)</title><rect x="86.3317%" y="261" width="0.0243%" height="15" fill="rgb(249,65,22)" fg:x="106371" fg:w="30"/><text x="86.5817%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (30 samples, 0.02%)</title><rect x="86.3317%" y="245" width="0.0243%" height="15" fill="rgb(238,111,51)" fg:x="106371" fg:w="30"/><text x="86.5817%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (30 samples, 0.02%)</title><rect x="86.3317%" y="229" width="0.0243%" height="15" fill="rgb(250,118,22)" fg:x="106371" fg:w="30"/><text x="86.5817%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.02%)</title><rect x="86.3317%" y="213" width="0.0243%" height="15" fill="rgb(234,84,26)" fg:x="106371" fg:w="30"/><text x="86.5817%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (69 samples, 0.06%)</title><rect x="86.3560%" y="293" width="0.0560%" height="15" fill="rgb(243,172,12)" fg:x="106401" fg:w="69"/><text x="86.6060%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (69 samples, 0.06%)</title><rect x="86.3560%" y="277" width="0.0560%" height="15" fill="rgb(236,150,49)" fg:x="106401" fg:w="69"/><text x="86.6060%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (22 samples, 0.02%)</title><rect x="86.4340%" y="213" width="0.0179%" height="15" fill="rgb(225,197,26)" fg:x="106497" fg:w="22"/><text x="86.6840%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="86.4340%" y="197" width="0.0179%" height="15" fill="rgb(214,17,42)" fg:x="106497" fg:w="22"/><text x="86.6840%" y="207.50"></text></g><g><title>__libc_write (47 samples, 0.04%)</title><rect x="86.4583%" y="197" width="0.0381%" height="15" fill="rgb(224,165,40)" fg:x="106527" fg:w="47"/><text x="86.7083%" y="207.50"></text></g><g><title>__pthread_enable_asynccancel (15 samples, 0.01%)</title><rect x="86.4843%" y="181" width="0.0122%" height="15" fill="rgb(246,100,4)" fg:x="106559" fg:w="15"/><text x="86.7343%" y="191.50"></text></g><g><title>async_io::reactor::Reactor::notify (86 samples, 0.07%)</title><rect x="86.4275%" y="245" width="0.0698%" height="15" fill="rgb(222,103,0)" fg:x="106489" fg:w="86"/><text x="86.6775%" y="255.50"></text></g><g><title>polling::Poller::notify (79 samples, 0.06%)</title><rect x="86.4331%" y="229" width="0.0641%" height="15" fill="rgb(227,189,26)" fg:x="106496" fg:w="79"/><text x="86.6831%" y="239.50"></text></g><g><title>polling::epoll::Poller::notify (55 samples, 0.04%)</title><rect x="86.4526%" y="213" width="0.0446%" height="15" fill="rgb(214,202,17)" fg:x="106520" fg:w="55"/><text x="86.7026%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (17 samples, 0.01%)</title><rect x="86.4973%" y="245" width="0.0138%" height="15" fill="rgb(229,111,3)" fg:x="106575" fg:w="17"/><text x="86.7473%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="86.4973%" y="229" width="0.0138%" height="15" fill="rgb(229,172,15)" fg:x="106575" fg:w="17"/><text x="86.7473%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (105 samples, 0.09%)</title><rect x="86.5492%" y="213" width="0.0852%" height="15" fill="rgb(230,224,35)" fg:x="106639" fg:w="105"/><text x="86.7992%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_swap (105 samples, 0.09%)</title><rect x="86.5492%" y="197" width="0.0852%" height="15" fill="rgb(251,141,6)" fg:x="106639" fg:w="105"/><text x="86.7992%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (14 samples, 0.01%)</title><rect x="86.6344%" y="165" width="0.0114%" height="15" fill="rgb(225,208,6)" fg:x="106744" fg:w="14"/><text x="86.8844%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.01%)</title><rect x="86.6344%" y="149" width="0.0114%" height="15" fill="rgb(246,181,16)" fg:x="106744" fg:w="14"/><text x="86.8844%" y="159.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (52 samples, 0.04%)</title><rect x="86.6344%" y="213" width="0.0422%" height="15" fill="rgb(227,129,36)" fg:x="106744" fg:w="52"/><text x="86.8844%" y="223.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (52 samples, 0.04%)</title><rect x="86.6344%" y="197" width="0.0422%" height="15" fill="rgb(248,117,24)" fg:x="106744" fg:w="52"/><text x="86.8844%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (52 samples, 0.04%)</title><rect x="86.6344%" y="181" width="0.0422%" height="15" fill="rgb(214,185,35)" fg:x="106744" fg:w="52"/><text x="86.8844%" y="191.50"></text></g><g><title>std::sys::unix::futex::futex_wake (38 samples, 0.03%)</title><rect x="86.6458%" y="165" width="0.0308%" height="15" fill="rgb(236,150,34)" fg:x="106758" fg:w="38"/><text x="86.8958%" y="175.50"></text></g><g><title>syscall (38 samples, 0.03%)</title><rect x="86.6458%" y="149" width="0.0308%" height="15" fill="rgb(243,228,27)" fg:x="106758" fg:w="38"/><text x="86.8958%" y="159.50"></text></g><g><title>parking::Unparker::unpark (215 samples, 0.17%)</title><rect x="86.5111%" y="245" width="0.1745%" height="15" fill="rgb(245,77,44)" fg:x="106592" fg:w="215"/><text x="86.7611%" y="255.50"></text></g><g><title>parking::Inner::unpark (173 samples, 0.14%)</title><rect x="86.5451%" y="229" width="0.1404%" height="15" fill="rgb(235,214,42)" fg:x="106634" fg:w="173"/><text x="86.7951%" y="239.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (22 samples, 0.02%)</title><rect x="86.6856%" y="213" width="0.0179%" height="15" fill="rgb(221,74,3)" fg:x="106807" fg:w="22"/><text x="86.9356%" y="223.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="86.6856%" y="197" width="0.0179%" height="15" fill="rgb(206,121,29)" fg:x="106807" fg:w="22"/><text x="86.9356%" y="207.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (21 samples, 0.02%)</title><rect x="86.6864%" y="181" width="0.0170%" height="15" fill="rgb(249,131,53)" fg:x="106808" fg:w="21"/><text x="86.9364%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (21 samples, 0.02%)</title><rect x="86.6864%" y="165" width="0.0170%" height="15" fill="rgb(236,170,29)" fg:x="106808" fg:w="21"/><text x="86.9364%" y="175.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (361 samples, 0.29%)</title><rect x="86.4120%" y="261" width="0.2930%" height="15" fill="rgb(247,96,15)" fg:x="106470" fg:w="361"/><text x="86.6620%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.02%)</title><rect x="86.6856%" y="245" width="0.0195%" height="15" fill="rgb(211,210,7)" fg:x="106807" fg:w="24"/><text x="86.9356%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.02%)</title><rect x="86.6856%" y="229" width="0.0195%" height="15" fill="rgb(240,88,50)" fg:x="106807" fg:w="24"/><text x="86.9356%" y="239.50"></text></g><g><title>core::task::wake::Waker::wake (449 samples, 0.36%)</title><rect x="86.4120%" y="293" width="0.3644%" height="15" fill="rgb(209,229,26)" fg:x="106470" fg:w="449"/><text x="86.6620%" y="303.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (449 samples, 0.36%)</title><rect x="86.4120%" y="277" width="0.3644%" height="15" fill="rgb(210,68,23)" fg:x="106470" fg:w="449"/><text x="86.6620%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (88 samples, 0.07%)</title><rect x="86.7050%" y="261" width="0.0714%" height="15" fill="rgb(229,180,13)" fg:x="106831" fg:w="88"/><text x="86.9550%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.07%)</title><rect x="86.7050%" y="245" width="0.0714%" height="15" fill="rgb(236,53,44)" fg:x="106831" fg:w="88"/><text x="86.9550%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (83 samples, 0.07%)</title><rect x="86.7091%" y="229" width="0.0674%" height="15" fill="rgb(244,214,29)" fg:x="106836" fg:w="83"/><text x="86.9591%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (83 samples, 0.07%)</title><rect x="86.7091%" y="213" width="0.0674%" height="15" fill="rgb(220,75,29)" fg:x="106836" fg:w="83"/><text x="86.9591%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (30 samples, 0.02%)</title><rect x="86.7797%" y="245" width="0.0243%" height="15" fill="rgb(214,183,37)" fg:x="106923" fg:w="30"/><text x="87.0297%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.02%)</title><rect x="86.7797%" y="229" width="0.0243%" height="15" fill="rgb(239,117,29)" fg:x="106923" fg:w="30"/><text x="87.0297%" y="239.50"></text></g><g><title>async_executor::State::notify (605 samples, 0.49%)</title><rect x="86.3219%" y="309" width="0.4910%" height="15" fill="rgb(237,171,35)" fg:x="106359" fg:w="605"/><text x="86.5719%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.04%)</title><rect x="86.7765%" y="293" width="0.0365%" height="15" fill="rgb(229,178,53)" fg:x="106919" fg:w="45"/><text x="87.0265%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (41 samples, 0.03%)</title><rect x="86.7797%" y="277" width="0.0333%" height="15" fill="rgb(210,102,19)" fg:x="106923" fg:w="41"/><text x="87.0297%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (41 samples, 0.03%)</title><rect x="86.7797%" y="261" width="0.0333%" height="15" fill="rgb(235,127,22)" fg:x="106923" fg:w="41"/><text x="87.0297%" y="271.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (121 samples, 0.10%)</title><rect x="86.8357%" y="277" width="0.0982%" height="15" fill="rgb(244,31,31)" fg:x="106992" fg:w="121"/><text x="87.0857%" y="287.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (121 samples, 0.10%)</title><rect x="86.8357%" y="261" width="0.0982%" height="15" fill="rgb(231,43,21)" fg:x="106992" fg:w="121"/><text x="87.0857%" y="271.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (121 samples, 0.10%)</title><rect x="86.8357%" y="245" width="0.0982%" height="15" fill="rgb(217,131,35)" fg:x="106992" fg:w="121"/><text x="87.0857%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (121 samples, 0.10%)</title><rect x="86.8357%" y="229" width="0.0982%" height="15" fill="rgb(221,149,4)" fg:x="106992" fg:w="121"/><text x="87.0857%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (121 samples, 0.10%)</title><rect x="86.8357%" y="213" width="0.0982%" height="15" fill="rgb(232,170,28)" fg:x="106992" fg:w="121"/><text x="87.0857%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_add (121 samples, 0.10%)</title><rect x="86.8357%" y="197" width="0.0982%" height="15" fill="rgb(238,56,10)" fg:x="106992" fg:w="121"/><text x="87.0857%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (41 samples, 0.03%)</title><rect x="86.9339%" y="277" width="0.0333%" height="15" fill="rgb(235,196,14)" fg:x="107113" fg:w="41"/><text x="87.1839%" y="287.50"></text></g><g><title>async_executor::Sleepers::insert (205 samples, 0.17%)</title><rect x="86.8325%" y="293" width="0.1664%" height="15" fill="rgb(216,45,48)" fg:x="106988" fg:w="205"/><text x="87.0825%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 0.03%)</title><rect x="86.9672%" y="277" width="0.0317%" height="15" fill="rgb(238,213,17)" fg:x="107154" fg:w="39"/><text x="87.2172%" y="287.50"></text></g><g><title>core::ptr::write (30 samples, 0.02%)</title><rect x="86.9745%" y="261" width="0.0243%" height="15" fill="rgb(212,13,2)" fg:x="107163" fg:w="30"/><text x="87.2245%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.02%)</title><rect x="87.0962%" y="277" width="0.0235%" height="15" fill="rgb(240,114,20)" fg:x="107313" fg:w="29"/><text x="87.3462%" y="287.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (110 samples, 0.09%)</title><rect x="87.1198%" y="277" width="0.0893%" height="15" fill="rgb(228,41,40)" fg:x="107342" fg:w="110"/><text x="87.3698%" y="287.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (108 samples, 0.09%)</title><rect x="87.1214%" y="261" width="0.0877%" height="15" fill="rgb(244,132,35)" fg:x="107344" fg:w="108"/><text x="87.3714%" y="271.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (106 samples, 0.09%)</title><rect x="87.1230%" y="245" width="0.0860%" height="15" fill="rgb(253,189,4)" fg:x="107346" fg:w="106"/><text x="87.3730%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (106 samples, 0.09%)</title><rect x="87.1230%" y="229" width="0.0860%" height="15" fill="rgb(224,37,19)" fg:x="107346" fg:w="106"/><text x="87.3730%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (106 samples, 0.09%)</title><rect x="87.1230%" y="213" width="0.0860%" height="15" fill="rgb(235,223,18)" fg:x="107346" fg:w="106"/><text x="87.3730%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_add (106 samples, 0.09%)</title><rect x="87.1230%" y="197" width="0.0860%" height="15" fill="rgb(235,163,25)" fg:x="107346" fg:w="106"/><text x="87.3730%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.02%)</title><rect x="87.2090%" y="277" width="0.0235%" height="15" fill="rgb(217,145,28)" fg:x="107452" fg:w="29"/><text x="87.4590%" y="287.50"></text></g><g><title>core::ptr::write (25 samples, 0.02%)</title><rect x="87.2123%" y="261" width="0.0203%" height="15" fill="rgb(223,223,32)" fg:x="107456" fg:w="25"/><text x="87.4623%" y="271.50"></text></g><g><title>async_executor::Sleepers::update (294 samples, 0.24%)</title><rect x="87.0069%" y="293" width="0.2386%" height="15" fill="rgb(227,189,39)" fg:x="107203" fg:w="294"/><text x="87.2569%" y="303.50"></text></g><g><title>core::task::wake::Waker::will_wake (16 samples, 0.01%)</title><rect x="87.2326%" y="277" width="0.0130%" height="15" fill="rgb(248,10,22)" fg:x="107481" fg:w="16"/><text x="87.4826%" y="287.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (16 samples, 0.01%)</title><rect x="87.2326%" y="261" width="0.0130%" height="15" fill="rgb(248,46,39)" fg:x="107481" fg:w="16"/><text x="87.4826%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (201 samples, 0.16%)</title><rect x="87.2553%" y="229" width="0.1631%" height="15" fill="rgb(248,113,48)" fg:x="107509" fg:w="201"/><text x="87.5053%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (201 samples, 0.16%)</title><rect x="87.2553%" y="213" width="0.1631%" height="15" fill="rgb(245,16,25)" fg:x="107509" fg:w="201"/><text x="87.5053%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (220 samples, 0.18%)</title><rect x="87.2456%" y="293" width="0.1786%" height="15" fill="rgb(249,152,16)" fg:x="107497" fg:w="220"/><text x="87.4956%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (220 samples, 0.18%)</title><rect x="87.2456%" y="277" width="0.1786%" height="15" fill="rgb(250,16,1)" fg:x="107497" fg:w="220"/><text x="87.4956%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (208 samples, 0.17%)</title><rect x="87.2553%" y="261" width="0.1688%" height="15" fill="rgb(249,138,3)" fg:x="107509" fg:w="208"/><text x="87.5053%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (208 samples, 0.17%)</title><rect x="87.2553%" y="245" width="0.1688%" height="15" fill="rgb(227,71,41)" fg:x="107509" fg:w="208"/><text x="87.5053%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (207 samples, 0.17%)</title><rect x="87.4241%" y="293" width="0.1680%" height="15" fill="rgb(209,184,23)" fg:x="107717" fg:w="207"/><text x="87.6741%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (207 samples, 0.17%)</title><rect x="87.4241%" y="277" width="0.1680%" height="15" fill="rgb(223,215,31)" fg:x="107717" fg:w="207"/><text x="87.6741%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (222 samples, 0.18%)</title><rect x="87.5921%" y="293" width="0.1802%" height="15" fill="rgb(210,146,28)" fg:x="107924" fg:w="222"/><text x="87.8421%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_store (222 samples, 0.18%)</title><rect x="87.5921%" y="277" width="0.1802%" height="15" fill="rgb(209,183,41)" fg:x="107924" fg:w="222"/><text x="87.8421%" y="287.50"></text></g><g><title>std::sync::poison::Flag::get (26 samples, 0.02%)</title><rect x="87.7780%" y="245" width="0.0211%" height="15" fill="rgb(209,224,45)" fg:x="108153" fg:w="26"/><text x="88.0280%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (26 samples, 0.02%)</title><rect x="87.7780%" y="229" width="0.0211%" height="15" fill="rgb(224,209,51)" fg:x="108153" fg:w="26"/><text x="88.0280%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.02%)</title><rect x="87.7780%" y="213" width="0.0211%" height="15" fill="rgb(223,17,39)" fg:x="108153" fg:w="26"/><text x="88.0280%" y="223.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (38 samples, 0.03%)</title><rect x="87.7723%" y="277" width="0.0308%" height="15" fill="rgb(234,204,37)" fg:x="108146" fg:w="38"/><text x="88.0223%" y="287.50"></text></g><g><title>std::sync::poison::Flag::borrow (38 samples, 0.03%)</title><rect x="87.7723%" y="261" width="0.0308%" height="15" fill="rgb(236,120,5)" fg:x="108146" fg:w="38"/><text x="88.0223%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (208 samples, 0.17%)</title><rect x="87.8031%" y="245" width="0.1688%" height="15" fill="rgb(248,97,27)" fg:x="108184" fg:w="208"/><text x="88.0531%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (208 samples, 0.17%)</title><rect x="87.8031%" y="229" width="0.1688%" height="15" fill="rgb(240,66,17)" fg:x="108184" fg:w="208"/><text x="88.0531%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (27 samples, 0.02%)</title><rect x="87.9744%" y="229" width="0.0219%" height="15" fill="rgb(210,79,3)" fg:x="108395" fg:w="27"/><text x="88.2244%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.02%)</title><rect x="87.9744%" y="213" width="0.0219%" height="15" fill="rgb(214,176,27)" fg:x="108395" fg:w="27"/><text x="88.2244%" y="223.50"></text></g><g><title>core::hint::spin_loop (36 samples, 0.03%)</title><rect x="88.0044%" y="213" width="0.0292%" height="15" fill="rgb(235,185,3)" fg:x="108432" fg:w="36"/><text x="88.2544%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (36 samples, 0.03%)</title><rect x="88.0044%" y="197" width="0.0292%" height="15" fill="rgb(227,24,12)" fg:x="108432" fg:w="36"/><text x="88.2544%" y="207.50"></text></g><g><title>async_executor::Ticker::sleep (1,531 samples, 1.24%)</title><rect x="86.8130%" y="309" width="1.2426%" height="15" fill="rgb(252,169,48)" fg:x="106964" fg:w="1531"/><text x="87.0630%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (349 samples, 0.28%)</title><rect x="87.7723%" y="293" width="0.2833%" height="15" fill="rgb(212,65,1)" fg:x="108146" fg:w="349"/><text x="88.0223%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (311 samples, 0.25%)</title><rect x="87.8031%" y="277" width="0.2524%" height="15" fill="rgb(242,39,24)" fg:x="108184" fg:w="311"/><text x="88.0531%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (311 samples, 0.25%)</title><rect x="87.8031%" y="261" width="0.2524%" height="15" fill="rgb(249,32,23)" fg:x="108184" fg:w="311"/><text x="88.0531%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (103 samples, 0.08%)</title><rect x="87.9720%" y="245" width="0.0836%" height="15" fill="rgb(251,195,23)" fg:x="108392" fg:w="103"/><text x="88.2220%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (64 samples, 0.05%)</title><rect x="88.0036%" y="229" width="0.0519%" height="15" fill="rgb(236,174,8)" fg:x="108431" fg:w="64"/><text x="88.2536%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (27 samples, 0.02%)</title><rect x="88.0336%" y="213" width="0.0219%" height="15" fill="rgb(220,197,8)" fg:x="108468" fg:w="27"/><text x="88.2836%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="88.0336%" y="197" width="0.0219%" height="15" fill="rgb(240,108,37)" fg:x="108468" fg:w="27"/><text x="88.2836%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="88.1213%" y="277" width="0.0138%" height="15" fill="rgb(232,176,24)" fg:x="108576" fg:w="17"/><text x="88.3713%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (17 samples, 0.01%)</title><rect x="88.1213%" y="261" width="0.0138%" height="15" fill="rgb(243,35,29)" fg:x="108576" fg:w="17"/><text x="88.3713%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (17 samples, 0.01%)</title><rect x="88.1213%" y="245" width="0.0138%" height="15" fill="rgb(210,37,18)" fg:x="108576" fg:w="17"/><text x="88.3713%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="88.1351%" y="277" width="0.0106%" height="15" fill="rgb(224,184,40)" fg:x="108593" fg:w="13"/><text x="88.3851%" y="287.50"></text></g><g><title>async_executor::Sleepers::remove (194 samples, 0.16%)</title><rect x="88.0791%" y="293" width="0.1575%" height="15" fill="rgb(236,39,29)" fg:x="108524" fg:w="194"/><text x="88.3291%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (101 samples, 0.08%)</title><rect x="88.1546%" y="277" width="0.0820%" height="15" fill="rgb(232,48,39)" fg:x="108617" fg:w="101"/><text x="88.4046%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (101 samples, 0.08%)</title><rect x="88.1546%" y="261" width="0.0820%" height="15" fill="rgb(236,34,42)" fg:x="108617" fg:w="101"/><text x="88.4046%" y="271.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (101 samples, 0.08%)</title><rect x="88.1546%" y="245" width="0.0820%" height="15" fill="rgb(243,106,37)" fg:x="108617" fg:w="101"/><text x="88.4046%" y="255.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (100 samples, 0.08%)</title><rect x="88.1554%" y="229" width="0.0812%" height="15" fill="rgb(218,96,6)" fg:x="108618" fg:w="100"/><text x="88.4054%" y="239.50"></text></g><g><title>core::mem::drop (97 samples, 0.08%)</title><rect x="88.1578%" y="213" width="0.0787%" height="15" fill="rgb(235,130,12)" fg:x="108621" fg:w="97"/><text x="88.4078%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (97 samples, 0.08%)</title><rect x="88.1578%" y="197" width="0.0787%" height="15" fill="rgb(231,95,0)" fg:x="108621" fg:w="97"/><text x="88.4078%" y="207.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.08%)</title><rect x="88.1578%" y="181" width="0.0787%" height="15" fill="rgb(228,12,23)" fg:x="108621" fg:w="97"/><text x="88.4078%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (97 samples, 0.08%)</title><rect x="88.1578%" y="165" width="0.0787%" height="15" fill="rgb(216,12,1)" fg:x="108621" fg:w="97"/><text x="88.4078%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_sub (97 samples, 0.08%)</title><rect x="88.1578%" y="149" width="0.0787%" height="15" fill="rgb(219,59,3)" fg:x="108621" fg:w="97"/><text x="88.4078%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (54 samples, 0.04%)</title><rect x="88.2390%" y="229" width="0.0438%" height="15" fill="rgb(215,208,46)" fg:x="108721" fg:w="54"/><text x="88.4890%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (54 samples, 0.04%)</title><rect x="88.2390%" y="213" width="0.0438%" height="15" fill="rgb(254,224,29)" fg:x="108721" fg:w="54"/><text x="88.4890%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (60 samples, 0.05%)</title><rect x="88.2365%" y="293" width="0.0487%" height="15" fill="rgb(232,14,29)" fg:x="108718" fg:w="60"/><text x="88.4865%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.05%)</title><rect x="88.2365%" y="277" width="0.0487%" height="15" fill="rgb(208,45,52)" fg:x="108718" fg:w="60"/><text x="88.4865%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (57 samples, 0.05%)</title><rect x="88.2390%" y="261" width="0.0463%" height="15" fill="rgb(234,191,28)" fg:x="108721" fg:w="57"/><text x="88.4890%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (57 samples, 0.05%)</title><rect x="88.2390%" y="245" width="0.0463%" height="15" fill="rgb(244,67,43)" fg:x="108721" fg:w="57"/><text x="88.4890%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (80 samples, 0.06%)</title><rect x="88.2852%" y="293" width="0.0649%" height="15" fill="rgb(236,189,24)" fg:x="108778" fg:w="80"/><text x="88.5352%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (80 samples, 0.06%)</title><rect x="88.2852%" y="277" width="0.0649%" height="15" fill="rgb(239,214,33)" fg:x="108778" fg:w="80"/><text x="88.5352%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (108 samples, 0.09%)</title><rect x="88.3502%" y="293" width="0.0877%" height="15" fill="rgb(226,176,41)" fg:x="108858" fg:w="108"/><text x="88.6002%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (108 samples, 0.09%)</title><rect x="88.3502%" y="277" width="0.0877%" height="15" fill="rgb(248,47,8)" fg:x="108858" fg:w="108"/><text x="88.6002%" y="287.50"></text></g><g><title>std::sync::poison::Flag::get (14 samples, 0.01%)</title><rect x="88.4394%" y="245" width="0.0114%" height="15" fill="rgb(218,81,44)" fg:x="108968" fg:w="14"/><text x="88.6894%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="88.4394%" y="229" width="0.0114%" height="15" fill="rgb(213,98,6)" fg:x="108968" fg:w="14"/><text x="88.6894%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="88.4402%" y="213" width="0.0106%" height="15" fill="rgb(222,85,22)" fg:x="108969" fg:w="13"/><text x="88.6902%" y="223.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="88.4378%" y="277" width="0.0170%" height="15" fill="rgb(239,46,39)" fg:x="108966" fg:w="21"/><text x="88.6878%" y="287.50"></text></g><g><title>std::sync::poison::Flag::borrow (21 samples, 0.02%)</title><rect x="88.4378%" y="261" width="0.0170%" height="15" fill="rgb(237,12,29)" fg:x="108966" fg:w="21"/><text x="88.6878%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (68 samples, 0.06%)</title><rect x="88.4557%" y="245" width="0.0552%" height="15" fill="rgb(214,77,8)" fg:x="108988" fg:w="68"/><text x="88.7057%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (68 samples, 0.06%)</title><rect x="88.4557%" y="229" width="0.0552%" height="15" fill="rgb(217,168,37)" fg:x="108988" fg:w="68"/><text x="88.7057%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (17 samples, 0.01%)</title><rect x="88.5125%" y="229" width="0.0138%" height="15" fill="rgb(221,217,23)" fg:x="109058" fg:w="17"/><text x="88.7625%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.01%)</title><rect x="88.5125%" y="213" width="0.0138%" height="15" fill="rgb(243,229,36)" fg:x="109058" fg:w="17"/><text x="88.7625%" y="223.50"></text></g><g><title>core::hint::spin_loop (17 samples, 0.01%)</title><rect x="88.5279%" y="213" width="0.0138%" height="15" fill="rgb(251,163,40)" fg:x="109077" fg:w="17"/><text x="88.7779%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (17 samples, 0.01%)</title><rect x="88.5279%" y="197" width="0.0138%" height="15" fill="rgb(237,222,12)" fg:x="109077" fg:w="17"/><text x="88.7779%" y="207.50"></text></g><g><title>async_executor::Ticker::wake (616 samples, 0.50%)</title><rect x="88.0555%" y="309" width="0.5000%" height="15" fill="rgb(248,132,6)" fg:x="108495" fg:w="616"/><text x="88.3055%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (145 samples, 0.12%)</title><rect x="88.4378%" y="293" width="0.1177%" height="15" fill="rgb(227,167,50)" fg:x="108966" fg:w="145"/><text x="88.6878%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (124 samples, 0.10%)</title><rect x="88.4549%" y="277" width="0.1006%" height="15" fill="rgb(242,84,37)" fg:x="108987" fg:w="124"/><text x="88.7049%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (124 samples, 0.10%)</title><rect x="88.4549%" y="261" width="0.1006%" height="15" fill="rgb(212,4,50)" fg:x="108987" fg:w="124"/><text x="88.7049%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (55 samples, 0.04%)</title><rect x="88.5109%" y="245" width="0.0446%" height="15" fill="rgb(230,228,32)" fg:x="109056" fg:w="55"/><text x="88.7609%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (34 samples, 0.03%)</title><rect x="88.5279%" y="229" width="0.0276%" height="15" fill="rgb(248,217,23)" fg:x="109077" fg:w="34"/><text x="88.7779%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (17 samples, 0.01%)</title><rect x="88.5417%" y="213" width="0.0138%" height="15" fill="rgb(238,197,32)" fg:x="109094" fg:w="17"/><text x="88.7917%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="88.5417%" y="197" width="0.0138%" height="15" fill="rgb(236,106,1)" fg:x="109094" fg:w="17"/><text x="88.7917%" y="207.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,306 samples, 8.36%)</title><rect x="80.1959%" y="373" width="8.3644%" height="15" fill="rgb(219,228,13)" fg:x="98811" fg:w="10306"/><text x="80.4459%" y="383.50">&lt;core::futur..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (10,306 samples, 8.36%)</title><rect x="80.1959%" y="357" width="8.3644%" height="15" fill="rgb(238,30,35)" fg:x="98811" fg:w="10306"/><text x="80.4459%" y="367.50">async_execut..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10,278 samples, 8.34%)</title><rect x="80.2186%" y="341" width="8.3417%" height="15" fill="rgb(236,70,23)" fg:x="98839" fg:w="10278"/><text x="80.4686%" y="351.50">&lt;futures_lit..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (10,268 samples, 8.33%)</title><rect x="80.2268%" y="325" width="8.3336%" height="15" fill="rgb(249,104,48)" fg:x="98849" fg:w="10268"/><text x="80.4768%" y="335.50">async_execut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,435 samples, 8.47%)</title><rect x="80.1545%" y="405" width="8.4691%" height="15" fill="rgb(254,117,50)" fg:x="98760" fg:w="10435"/><text x="80.4045%" y="415.50">&lt;core::futur..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (10,435 samples, 8.47%)</title><rect x="80.1545%" y="389" width="8.4691%" height="15" fill="rgb(223,152,4)" fg:x="98760" fg:w="10435"/><text x="80.4045%" y="399.50">async_execut..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (78 samples, 0.06%)</title><rect x="88.5604%" y="373" width="0.0633%" height="15" fill="rgb(245,6,2)" fg:x="109117" fg:w="78"/><text x="88.8104%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (78 samples, 0.06%)</title><rect x="88.5604%" y="357" width="0.0633%" height="15" fill="rgb(249,150,24)" fg:x="109117" fg:w="78"/><text x="88.8104%" y="367.50"></text></g><g><title>[libc-2.31.so] (61 samples, 0.05%)</title><rect x="88.8599%" y="261" width="0.0495%" height="15" fill="rgb(228,185,42)" fg:x="109486" fg:w="61"/><text x="89.1099%" y="271.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (33 samples, 0.03%)</title><rect x="88.9094%" y="261" width="0.0268%" height="15" fill="rgb(226,39,33)" fg:x="109547" fg:w="33"/><text x="89.1594%" y="271.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (30 samples, 0.02%)</title><rect x="88.9118%" y="245" width="0.0243%" height="15" fill="rgb(221,166,19)" fg:x="109550" fg:w="30"/><text x="89.1618%" y="255.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (30 samples, 0.02%)</title><rect x="88.9118%" y="229" width="0.0243%" height="15" fill="rgb(209,109,2)" fg:x="109550" fg:w="30"/><text x="89.1618%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (30 samples, 0.02%)</title><rect x="88.9118%" y="213" width="0.0243%" height="15" fill="rgb(252,216,26)" fg:x="109550" fg:w="30"/><text x="89.1618%" y="223.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="89.4085%" y="197" width="0.0154%" height="15" fill="rgb(227,173,36)" fg:x="110162" fg:w="19"/><text x="89.6585%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (13 samples, 0.01%)</title><rect x="89.6788%" y="149" width="0.0106%" height="15" fill="rgb(209,90,7)" fg:x="110495" fg:w="13"/><text x="89.9288%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="89.6788%" y="133" width="0.0106%" height="15" fill="rgb(250,194,11)" fg:x="110495" fg:w="13"/><text x="89.9288%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="89.6788%" y="117" width="0.0106%" height="15" fill="rgb(220,72,50)" fg:x="110495" fg:w="13"/><text x="89.9288%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="89.6788%" y="101" width="0.0106%" height="15" fill="rgb(222,106,48)" fg:x="110495" fg:w="13"/><text x="89.9288%" y="111.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (353 samples, 0.29%)</title><rect x="89.4239%" y="197" width="0.2865%" height="15" fill="rgb(216,220,45)" fg:x="110181" fg:w="353"/><text x="89.6739%" y="207.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (353 samples, 0.29%)</title><rect x="89.4239%" y="181" width="0.2865%" height="15" fill="rgb(234,112,18)" fg:x="110181" fg:w="353"/><text x="89.6739%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (39 samples, 0.03%)</title><rect x="89.6788%" y="165" width="0.0317%" height="15" fill="rgb(206,179,9)" fg:x="110495" fg:w="39"/><text x="89.9288%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (26 samples, 0.02%)</title><rect x="89.6893%" y="149" width="0.0211%" height="15" fill="rgb(215,115,40)" fg:x="110508" fg:w="26"/><text x="89.9393%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (24 samples, 0.02%)</title><rect x="89.6909%" y="133" width="0.0195%" height="15" fill="rgb(222,69,34)" fg:x="110510" fg:w="24"/><text x="89.9409%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="89.6999%" y="117" width="0.0106%" height="15" fill="rgb(209,161,10)" fg:x="110521" fg:w="13"/><text x="89.9499%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="89.6999%" y="101" width="0.0106%" height="15" fill="rgb(217,6,38)" fg:x="110521" fg:w="13"/><text x="89.9499%" y="111.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="89.7104%" y="197" width="0.0227%" height="15" fill="rgb(229,229,48)" fg:x="110534" fg:w="28"/><text x="89.9604%" y="207.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (279 samples, 0.23%)</title><rect x="89.7331%" y="197" width="0.2264%" height="15" fill="rgb(225,21,28)" fg:x="110562" fg:w="279"/><text x="89.9831%" y="207.50"></text></g><g><title>[libc-2.31.so] (169 samples, 0.14%)</title><rect x="89.9661%" y="181" width="0.1372%" height="15" fill="rgb(206,33,13)" fg:x="110849" fg:w="169"/><text x="90.2161%" y="191.50"></text></g><g><title>[libc-2.31.so] (470 samples, 0.38%)</title><rect x="90.1349%" y="165" width="0.3815%" height="15" fill="rgb(242,178,17)" fg:x="111057" fg:w="470"/><text x="90.3849%" y="175.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (312 samples, 0.25%)</title><rect x="90.6559%" y="53" width="0.2532%" height="15" fill="rgb(220,162,5)" fg:x="111699" fg:w="312"/><text x="90.9059%" y="63.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1,016 samples, 0.82%)</title><rect x="90.1032%" y="181" width="0.8246%" height="15" fill="rgb(210,33,43)" fg:x="111018" fg:w="1016"/><text x="90.3532%" y="191.50"></text></g><g><title>alloc::alloc::exchange_malloc (507 samples, 0.41%)</title><rect x="90.5163%" y="165" width="0.4115%" height="15" fill="rgb(216,116,54)" fg:x="111527" fg:w="507"/><text x="90.7663%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (507 samples, 0.41%)</title><rect x="90.5163%" y="149" width="0.4115%" height="15" fill="rgb(249,92,24)" fg:x="111527" fg:w="507"/><text x="90.7663%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (507 samples, 0.41%)</title><rect x="90.5163%" y="133" width="0.4115%" height="15" fill="rgb(231,189,14)" fg:x="111527" fg:w="507"/><text x="90.7663%" y="143.50"></text></g><g><title>alloc::alloc::alloc (506 samples, 0.41%)</title><rect x="90.5172%" y="117" width="0.4107%" height="15" fill="rgb(230,8,41)" fg:x="111528" fg:w="506"/><text x="90.7672%" y="127.50"></text></g><g><title>__rg_alloc (506 samples, 0.41%)</title><rect x="90.5172%" y="101" width="0.4107%" height="15" fill="rgb(249,7,27)" fg:x="111528" fg:w="506"/><text x="90.7672%" y="111.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (506 samples, 0.41%)</title><rect x="90.5172%" y="85" width="0.4107%" height="15" fill="rgb(232,86,5)" fg:x="111528" fg:w="506"/><text x="90.7672%" y="95.50"></text></g><g><title>sn_rust_alloc (465 samples, 0.38%)</title><rect x="90.5504%" y="69" width="0.3774%" height="15" fill="rgb(224,175,18)" fg:x="111569" fg:w="465"/><text x="90.8004%" y="79.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="90.9092%" y="53" width="0.0187%" height="15" fill="rgb(220,129,12)" fg:x="112011" fg:w="23"/><text x="91.1592%" y="63.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (1,215 samples, 0.99%)</title><rect x="89.9596%" y="197" width="0.9861%" height="15" fill="rgb(210,19,36)" fg:x="110841" fg:w="1215"/><text x="90.2096%" y="207.50"></text></g><g><title>core::future::from_generator (22 samples, 0.02%)</title><rect x="90.9278%" y="181" width="0.0179%" height="15" fill="rgb(219,96,14)" fg:x="112034" fg:w="22"/><text x="91.1778%" y="191.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (94 samples, 0.08%)</title><rect x="90.9790%" y="181" width="0.0763%" height="15" fill="rgb(249,106,1)" fg:x="112097" fg:w="94"/><text x="91.2290%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="91.0179%" y="165" width="0.0373%" height="15" fill="rgb(249,155,20)" fg:x="112145" fg:w="46"/><text x="91.2679%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="91.0447%" y="149" width="0.0106%" height="15" fill="rgb(244,168,9)" fg:x="112178" fg:w="13"/><text x="91.2947%" y="159.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="91.0447%" y="133" width="0.0106%" height="15" fill="rgb(216,23,50)" fg:x="112178" fg:w="13"/><text x="91.2947%" y="143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="91.0447%" y="117" width="0.0106%" height="15" fill="rgb(224,219,20)" fg:x="112178" fg:w="13"/><text x="91.2947%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="91.0447%" y="101" width="0.0106%" height="15" fill="rgb(222,156,15)" fg:x="112178" fg:w="13"/><text x="91.2947%" y="111.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (635 samples, 0.52%)</title><rect x="90.9457%" y="197" width="0.5154%" height="15" fill="rgb(231,97,17)" fg:x="112056" fg:w="635"/><text x="91.1957%" y="207.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (500 samples, 0.41%)</title><rect x="91.0553%" y="181" width="0.4058%" height="15" fill="rgb(218,70,48)" fg:x="112191" fg:w="500"/><text x="91.3053%" y="191.50"></text></g><g><title>[libc-2.31.so] (1,960 samples, 1.59%)</title><rect x="91.4611%" y="197" width="1.5908%" height="15" fill="rgb(212,196,52)" fg:x="112691" fg:w="1960"/><text x="91.7111%" y="207.50"></text></g><g><title>sn_rust_dealloc (133 samples, 0.11%)</title><rect x="93.0786%" y="37" width="0.1079%" height="15" fill="rgb(243,203,18)" fg:x="114684" fg:w="133"/><text x="93.3286%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (170 samples, 0.14%)</title><rect x="93.0518%" y="197" width="0.1380%" height="15" fill="rgb(252,125,41)" fg:x="114651" fg:w="170"/><text x="93.3018%" y="207.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (170 samples, 0.14%)</title><rect x="93.0518%" y="181" width="0.1380%" height="15" fill="rgb(223,180,33)" fg:x="114651" fg:w="170"/><text x="93.3018%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (149 samples, 0.12%)</title><rect x="93.0689%" y="165" width="0.1209%" height="15" fill="rgb(254,159,46)" fg:x="114672" fg:w="149"/><text x="93.3189%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (149 samples, 0.12%)</title><rect x="93.0689%" y="149" width="0.1209%" height="15" fill="rgb(254,38,10)" fg:x="114672" fg:w="149"/><text x="93.3189%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (149 samples, 0.12%)</title><rect x="93.0689%" y="133" width="0.1209%" height="15" fill="rgb(208,217,32)" fg:x="114672" fg:w="149"/><text x="93.3189%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (149 samples, 0.12%)</title><rect x="93.0689%" y="117" width="0.1209%" height="15" fill="rgb(221,120,13)" fg:x="114672" fg:w="149"/><text x="93.3189%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (149 samples, 0.12%)</title><rect x="93.0689%" y="101" width="0.1209%" height="15" fill="rgb(246,54,52)" fg:x="114672" fg:w="149"/><text x="93.3189%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (149 samples, 0.12%)</title><rect x="93.0689%" y="85" width="0.1209%" height="15" fill="rgb(242,34,25)" fg:x="114672" fg:w="149"/><text x="93.3189%" y="95.50"></text></g><g><title>__rg_dealloc (149 samples, 0.12%)</title><rect x="93.0689%" y="69" width="0.1209%" height="15" fill="rgb(247,209,9)" fg:x="114672" fg:w="149"/><text x="93.3189%" y="79.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (149 samples, 0.12%)</title><rect x="93.0689%" y="53" width="0.1209%" height="15" fill="rgb(228,71,26)" fg:x="114672" fg:w="149"/><text x="93.3189%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (52 samples, 0.04%)</title><rect x="93.1898%" y="197" width="0.0422%" height="15" fill="rgb(222,145,49)" fg:x="114821" fg:w="52"/><text x="93.4398%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (52 samples, 0.04%)</title><rect x="93.1898%" y="181" width="0.0422%" height="15" fill="rgb(218,121,17)" fg:x="114821" fg:w="52"/><text x="93.4398%" y="191.50"></text></g><g><title>sn_rust_dealloc (67 samples, 0.05%)</title><rect x="93.2709%" y="85" width="0.0544%" height="15" fill="rgb(244,50,7)" fg:x="114921" fg:w="67"/><text x="93.5209%" y="95.50"></text></g><g><title>alloc::alloc::box_free (105 samples, 0.09%)</title><rect x="93.2474%" y="165" width="0.0852%" height="15" fill="rgb(246,229,37)" fg:x="114892" fg:w="105"/><text x="93.4974%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (105 samples, 0.09%)</title><rect x="93.2474%" y="149" width="0.0852%" height="15" fill="rgb(225,18,5)" fg:x="114892" fg:w="105"/><text x="93.4974%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (88 samples, 0.07%)</title><rect x="93.2612%" y="133" width="0.0714%" height="15" fill="rgb(213,204,8)" fg:x="114909" fg:w="88"/><text x="93.5112%" y="143.50"></text></g><g><title>__rg_dealloc (88 samples, 0.07%)</title><rect x="93.2612%" y="117" width="0.0714%" height="15" fill="rgb(238,103,6)" fg:x="114909" fg:w="88"/><text x="93.5112%" y="127.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (88 samples, 0.07%)</title><rect x="93.2612%" y="101" width="0.0714%" height="15" fill="rgb(222,25,35)" fg:x="114909" fg:w="88"/><text x="93.5112%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (138 samples, 0.11%)</title><rect x="93.2320%" y="197" width="0.1120%" height="15" fill="rgb(213,203,35)" fg:x="114873" fg:w="138"/><text x="93.4820%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (138 samples, 0.11%)</title><rect x="93.2320%" y="181" width="0.1120%" height="15" fill="rgb(221,79,53)" fg:x="114873" fg:w="138"/><text x="93.4820%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::cb::CbSink as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="93.3326%" y="165" width="0.0114%" height="15" fill="rgb(243,200,35)" fg:x="114997" fg:w="14"/><text x="93.5826%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::cb::CbSink as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="93.3326%" y="149" width="0.0114%" height="15" fill="rgb(248,60,25)" fg:x="114997" fg:w="14"/><text x="93.5826%" y="159.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (98 samples, 0.08%)</title><rect x="93.4154%" y="181" width="0.0795%" height="15" fill="rgb(227,53,46)" fg:x="115099" fg:w="98"/><text x="93.6654%" y="191.50"></text></g><g><title>core::time::Duration::as_nanos (114 samples, 0.09%)</title><rect x="93.4950%" y="181" width="0.0925%" height="15" fill="rgb(216,120,32)" fg:x="115197" fg:w="114"/><text x="93.7450%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (442 samples, 0.36%)</title><rect x="93.5875%" y="165" width="0.3587%" height="15" fill="rgb(220,134,1)" fg:x="115311" fg:w="442"/><text x="93.8375%" y="175.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (214 samples, 0.17%)</title><rect x="94.0850%" y="133" width="0.1737%" height="15" fill="rgb(237,168,5)" fg:x="115924" fg:w="214"/><text x="94.3350%" y="143.50"></text></g><g><title>core::cmp::PartialOrd::ge (214 samples, 0.17%)</title><rect x="94.0850%" y="117" width="0.1737%" height="15" fill="rgb(231,100,33)" fg:x="115924" fg:w="214"/><text x="94.3350%" y="127.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (201 samples, 0.16%)</title><rect x="94.0955%" y="101" width="0.1631%" height="15" fill="rgb(236,177,47)" fg:x="115937" fg:w="201"/><text x="94.3455%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (78 samples, 0.06%)</title><rect x="94.1954%" y="85" width="0.0633%" height="15" fill="rgb(235,7,49)" fg:x="116060" fg:w="78"/><text x="94.4454%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (78 samples, 0.06%)</title><rect x="94.1954%" y="69" width="0.0633%" height="15" fill="rgb(232,119,22)" fg:x="116060" fg:w="78"/><text x="94.4454%" y="79.50"></text></g><g><title>std::time::SystemTime::duration_since (911 samples, 0.74%)</title><rect x="93.5875%" y="181" width="0.7394%" height="15" fill="rgb(254,73,53)" fg:x="115311" fg:w="911"/><text x="93.8375%" y="191.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (469 samples, 0.38%)</title><rect x="93.9462%" y="165" width="0.3806%" height="15" fill="rgb(251,35,20)" fg:x="115753" fg:w="469"/><text x="94.1962%" y="175.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (469 samples, 0.38%)</title><rect x="93.9462%" y="149" width="0.3806%" height="15" fill="rgb(241,119,20)" fg:x="115753" fg:w="469"/><text x="94.1962%" y="159.50"></text></g><g><title>core::time::Duration::new (84 samples, 0.07%)</title><rect x="94.2587%" y="133" width="0.0682%" height="15" fill="rgb(207,102,14)" fg:x="116138" fg:w="84"/><text x="94.5087%" y="143.50"></text></g><g><title>__clock_gettime (1,589 samples, 1.29%)</title><rect x="94.6271%" y="133" width="1.2896%" height="15" fill="rgb(248,201,50)" fg:x="116592" fg:w="1589"/><text x="94.8771%" y="143.50"></text></g><g><title>__vdso_clock_gettime (1,479 samples, 1.20%)</title><rect x="94.7164%" y="117" width="1.2004%" height="15" fill="rgb(222,185,44)" fg:x="116702" fg:w="1479"/><text x="94.9664%" y="127.50"></text></g><g><title>[[vdso]] (1,337 samples, 1.09%)</title><rect x="94.8317%" y="101" width="1.0851%" height="15" fill="rgb(218,107,18)" fg:x="116844" fg:w="1337"/><text x="95.0817%" y="111.50"></text></g><g><title>tremor_common::time::nanotime (3,171 samples, 2.57%)</title><rect x="93.3440%" y="197" width="2.5736%" height="15" fill="rgb(237,177,39)" fg:x="115011" fg:w="3171"/><text x="93.5940%" y="207.50">tr..</text></g><g><title>std::time::SystemTime::now (1,960 samples, 1.59%)</title><rect x="94.3269%" y="181" width="1.5908%" height="15" fill="rgb(246,69,6)" fg:x="116222" fg:w="1960"/><text x="94.5769%" y="191.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (1,960 samples, 1.59%)</title><rect x="94.3269%" y="165" width="1.5908%" height="15" fill="rgb(234,208,37)" fg:x="116222" fg:w="1960"/><text x="94.5769%" y="175.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1,960 samples, 1.59%)</title><rect x="94.3269%" y="149" width="1.5908%" height="15" fill="rgb(225,4,6)" fg:x="116222" fg:w="1960"/><text x="94.5769%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="95.9322%" y="133" width="0.0114%" height="15" fill="rgb(233,45,0)" fg:x="118200" fg:w="14"/><text x="96.1822%" y="143.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (14 samples, 0.01%)</title><rect x="95.9322%" y="117" width="0.0114%" height="15" fill="rgb(226,136,5)" fg:x="118200" fg:w="14"/><text x="96.1822%" y="127.50"></text></g><g><title>core::mem::drop (39 samples, 0.03%)</title><rect x="95.9436%" y="133" width="0.0317%" height="15" fill="rgb(211,91,47)" fg:x="118214" fg:w="39"/><text x="96.1936%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (39 samples, 0.03%)</title><rect x="95.9436%" y="117" width="0.0317%" height="15" fill="rgb(242,88,51)" fg:x="118214" fg:w="39"/><text x="96.1936%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="95.9533%" y="101" width="0.0219%" height="15" fill="rgb(230,91,28)" fg:x="118226" fg:w="27"/><text x="96.2033%" y="111.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (89 samples, 0.07%)</title><rect x="95.9176%" y="197" width="0.0722%" height="15" fill="rgb(254,186,29)" fg:x="118182" fg:w="89"/><text x="96.1676%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (71 samples, 0.06%)</title><rect x="95.9322%" y="181" width="0.0576%" height="15" fill="rgb(238,6,4)" fg:x="118200" fg:w="71"/><text x="96.1822%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (71 samples, 0.06%)</title><rect x="95.9322%" y="165" width="0.0576%" height="15" fill="rgb(221,151,16)" fg:x="118200" fg:w="71"/><text x="96.1822%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.06%)</title><rect x="95.9322%" y="149" width="0.0576%" height="15" fill="rgb(251,143,52)" fg:x="118200" fg:w="71"/><text x="96.1822%" y="159.50"></text></g><g><title>core::ptr::read (18 samples, 0.01%)</title><rect x="95.9752%" y="133" width="0.0146%" height="15" fill="rgb(206,90,15)" fg:x="118253" fg:w="18"/><text x="96.2252%" y="143.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (19 samples, 0.02%)</title><rect x="95.9898%" y="197" width="0.0154%" height="15" fill="rgb(218,35,8)" fg:x="118271" fg:w="19"/><text x="96.2398%" y="207.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,708 samples, 7.07%)</title><rect x="88.9483%" y="213" width="7.0675%" height="15" fill="rgb(239,215,6)" fg:x="109595" fg:w="8708"/><text x="89.1983%" y="223.50">tremor_ru..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::periodic_flush (13 samples, 0.01%)</title><rect x="96.0053%" y="197" width="0.0106%" height="15" fill="rgb(245,116,39)" fg:x="118290" fg:w="13"/><text x="96.2553%" y="207.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,722 samples, 7.08%)</title><rect x="88.9378%" y="245" width="7.0789%" height="15" fill="rgb(242,65,28)" fg:x="109582" fg:w="8722"/><text x="89.1878%" y="255.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,720 samples, 7.08%)</title><rect x="88.9394%" y="229" width="7.0772%" height="15" fill="rgb(252,132,53)" fg:x="109584" fg:w="8720"/><text x="89.1894%" y="239.50">&lt;core::fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,955 samples, 7.27%)</title><rect x="88.7608%" y="357" width="7.2680%" height="15" fill="rgb(224,159,50)" fg:x="109364" fg:w="8955"/><text x="89.0108%" y="367.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,946 samples, 7.26%)</title><rect x="88.7681%" y="341" width="7.2607%" height="15" fill="rgb(224,93,4)" fg:x="109373" fg:w="8946"/><text x="89.0181%" y="351.50">async_exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,841 samples, 7.18%)</title><rect x="88.8534%" y="325" width="7.1754%" height="15" fill="rgb(208,81,34)" fg:x="109478" fg:w="8841"/><text x="89.1034%" y="335.50">&lt;async_std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,841 samples, 7.18%)</title><rect x="88.8534%" y="309" width="7.1754%" height="15" fill="rgb(233,92,54)" fg:x="109478" fg:w="8841"/><text x="89.1034%" y="319.50">async_std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,838 samples, 7.17%)</title><rect x="88.8558%" y="293" width="7.1730%" height="15" fill="rgb(237,21,14)" fg:x="109481" fg:w="8838"/><text x="89.1058%" y="303.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,835 samples, 7.17%)</title><rect x="88.8582%" y="277" width="7.1706%" height="15" fill="rgb(249,128,51)" fg:x="109484" fg:w="8835"/><text x="89.1082%" y="287.50">std::threa..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,739 samples, 7.09%)</title><rect x="88.9361%" y="261" width="7.0927%" height="15" fill="rgb(223,129,24)" fg:x="109580" fg:w="8739"/><text x="89.1861%" y="271.50">async_std:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,957 samples, 7.27%)</title><rect x="88.7608%" y="373" width="7.2696%" height="15" fill="rgb(231,168,25)" fg:x="109364" fg:w="8957"/><text x="89.0108%" y="383.50">&lt;core::pin..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (53 samples, 0.04%)</title><rect x="96.0304%" y="373" width="0.0430%" height="15" fill="rgb(224,39,20)" fg:x="118321" fg:w="53"/><text x="96.2804%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (51 samples, 0.04%)</title><rect x="96.0320%" y="357" width="0.0414%" height="15" fill="rgb(225,152,53)" fg:x="118323" fg:w="51"/><text x="96.2820%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (51 samples, 0.04%)</title><rect x="96.0320%" y="341" width="0.0414%" height="15" fill="rgb(252,17,24)" fg:x="118323" fg:w="51"/><text x="96.2820%" y="351.50"></text></g><g><title>async_executor::State::notify (16 samples, 0.01%)</title><rect x="96.0734%" y="341" width="0.0130%" height="15" fill="rgb(250,114,30)" fg:x="118374" fg:w="16"/><text x="96.3234%" y="351.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (35 samples, 0.03%)</title><rect x="96.0734%" y="357" width="0.0284%" height="15" fill="rgb(229,5,4)" fg:x="118374" fg:w="35"/><text x="96.3234%" y="367.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (19 samples, 0.02%)</title><rect x="96.0864%" y="341" width="0.0154%" height="15" fill="rgb(225,176,49)" fg:x="118390" fg:w="19"/><text x="96.3364%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (18 samples, 0.01%)</title><rect x="96.0872%" y="325" width="0.0146%" height="15" fill="rgb(224,221,49)" fg:x="118391" fg:w="18"/><text x="96.3372%" y="335.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (37 samples, 0.03%)</title><rect x="96.0734%" y="373" width="0.0300%" height="15" fill="rgb(253,169,27)" fg:x="118374" fg:w="37"/><text x="96.3234%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (354 samples, 0.29%)</title><rect x="96.1035%" y="373" width="0.2873%" height="15" fill="rgb(211,206,16)" fg:x="118411" fg:w="354"/><text x="96.3535%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (354 samples, 0.29%)</title><rect x="96.1035%" y="357" width="0.2873%" height="15" fill="rgb(244,87,35)" fg:x="118411" fg:w="354"/><text x="96.3535%" y="367.50"></text></g><g><title>async_task::runnable::Runnable::run (9,580 samples, 7.78%)</title><rect x="88.6253%" y="405" width="7.7752%" height="15" fill="rgb(246,28,10)" fg:x="109197" fg:w="9580"/><text x="88.8753%" y="415.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,507 samples, 7.72%)</title><rect x="88.6845%" y="389" width="7.7160%" height="15" fill="rgb(229,12,44)" fg:x="109270" fg:w="9507"/><text x="88.9345%" y="399.50">async_task:..</text></g><g><title>async_executor::Executor::run::{{closure}} (20,098 samples, 16.31%)</title><rect x="80.1026%" y="469" width="16.3117%" height="15" fill="rgb(210,145,37)" fg:x="98696" fg:w="20098"/><text x="80.3526%" y="479.50">async_executor::Executor:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (20,054 samples, 16.28%)</title><rect x="80.1383%" y="453" width="16.2760%" height="15" fill="rgb(227,112,52)" fg:x="98740" fg:w="20054"/><text x="80.3883%" y="463.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,054 samples, 16.28%)</title><rect x="80.1383%" y="437" width="16.2760%" height="15" fill="rgb(238,155,34)" fg:x="98740" fg:w="20054"/><text x="80.3883%" y="447.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (20,053 samples, 16.28%)</title><rect x="80.1391%" y="421" width="16.2752%" height="15" fill="rgb(239,226,36)" fg:x="98741" fg:w="20053"/><text x="80.3891%" y="431.50">async_executor::Executor:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 0.01%)</title><rect x="96.4005%" y="405" width="0.0138%" height="15" fill="rgb(230,16,23)" fg:x="118777" fg:w="17"/><text x="96.6505%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 0.01%)</title><rect x="96.4005%" y="389" width="0.0138%" height="15" fill="rgb(236,171,36)" fg:x="118777" fg:w="17"/><text x="96.6505%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.05%)</title><rect x="96.5174%" y="261" width="0.0528%" height="15" fill="rgb(221,22,14)" fg:x="118921" fg:w="65"/><text x="96.7674%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (65 samples, 0.05%)</title><rect x="96.5174%" y="245" width="0.0528%" height="15" fill="rgb(242,43,11)" fg:x="118921" fg:w="65"/><text x="96.7674%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 0.05%)</title><rect x="96.5174%" y="229" width="0.0528%" height="15" fill="rgb(232,69,23)" fg:x="118921" fg:w="65"/><text x="96.7674%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 0.05%)</title><rect x="96.5182%" y="213" width="0.0519%" height="15" fill="rgb(216,180,54)" fg:x="118922" fg:w="64"/><text x="96.7682%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 0.05%)</title><rect x="96.5182%" y="197" width="0.0519%" height="15" fill="rgb(216,5,24)" fg:x="118922" fg:w="64"/><text x="96.7682%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (64 samples, 0.05%)</title><rect x="96.5182%" y="181" width="0.0519%" height="15" fill="rgb(225,89,9)" fg:x="118922" fg:w="64"/><text x="96.7682%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (55 samples, 0.04%)</title><rect x="96.5255%" y="165" width="0.0446%" height="15" fill="rgb(243,75,33)" fg:x="118931" fg:w="55"/><text x="96.7755%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (55 samples, 0.04%)</title><rect x="96.5255%" y="149" width="0.0446%" height="15" fill="rgb(247,141,45)" fg:x="118931" fg:w="55"/><text x="96.7755%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (53 samples, 0.04%)</title><rect x="96.5271%" y="133" width="0.0430%" height="15" fill="rgb(232,177,36)" fg:x="118933" fg:w="53"/><text x="96.7771%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (53 samples, 0.04%)</title><rect x="96.5271%" y="117" width="0.0430%" height="15" fill="rgb(219,125,36)" fg:x="118933" fg:w="53"/><text x="96.7771%" y="127.50"></text></g><g><title>concurrent_queue::full_fence (44 samples, 0.04%)</title><rect x="96.6091%" y="229" width="0.0357%" height="15" fill="rgb(227,94,9)" fg:x="119034" fg:w="44"/><text x="96.8591%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (43 samples, 0.03%)</title><rect x="96.6099%" y="213" width="0.0349%" height="15" fill="rgb(240,34,52)" fg:x="119035" fg:w="43"/><text x="96.8599%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (43 samples, 0.03%)</title><rect x="96.6099%" y="197" width="0.0349%" height="15" fill="rgb(216,45,12)" fg:x="119035" fg:w="43"/><text x="96.8599%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.03%)</title><rect x="96.6099%" y="181" width="0.0349%" height="15" fill="rgb(246,21,19)" fg:x="119035" fg:w="43"/><text x="96.8599%" y="191.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (127 samples, 0.10%)</title><rect x="96.5912%" y="245" width="0.1031%" height="15" fill="rgb(213,98,42)" fg:x="119012" fg:w="127"/><text x="96.8412%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (61 samples, 0.05%)</title><rect x="96.6448%" y="229" width="0.0495%" height="15" fill="rgb(250,136,47)" fg:x="119078" fg:w="61"/><text x="96.8948%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (61 samples, 0.05%)</title><rect x="96.6448%" y="213" width="0.0495%" height="15" fill="rgb(251,124,27)" fg:x="119078" fg:w="61"/><text x="96.8948%" y="223.50"></text></g><g><title>concurrent_queue::full_fence (50 samples, 0.04%)</title><rect x="96.7032%" y="229" width="0.0406%" height="15" fill="rgb(229,180,14)" fg:x="119150" fg:w="50"/><text x="96.9532%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (50 samples, 0.04%)</title><rect x="96.7032%" y="213" width="0.0406%" height="15" fill="rgb(245,216,25)" fg:x="119150" fg:w="50"/><text x="96.9532%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (50 samples, 0.04%)</title><rect x="96.7032%" y="197" width="0.0406%" height="15" fill="rgb(251,43,5)" fg:x="119150" fg:w="50"/><text x="96.9532%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50 samples, 0.04%)</title><rect x="96.7032%" y="181" width="0.0406%" height="15" fill="rgb(250,128,24)" fg:x="119150" fg:w="50"/><text x="96.9532%" y="191.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (247 samples, 0.20%)</title><rect x="96.5701%" y="261" width="0.2005%" height="15" fill="rgb(217,117,27)" fg:x="118986" fg:w="247"/><text x="96.8201%" y="271.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (94 samples, 0.08%)</title><rect x="96.6943%" y="245" width="0.0763%" height="15" fill="rgb(245,147,4)" fg:x="119139" fg:w="94"/><text x="96.9443%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.03%)</title><rect x="96.7454%" y="229" width="0.0252%" height="15" fill="rgb(242,201,35)" fg:x="119202" fg:w="31"/><text x="96.9954%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="96.7454%" y="213" width="0.0252%" height="15" fill="rgb(218,181,1)" fg:x="119202" fg:w="31"/><text x="96.9954%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (51 samples, 0.04%)</title><rect x="96.7706%" y="261" width="0.0414%" height="15" fill="rgb(222,6,29)" fg:x="119233" fg:w="51"/><text x="97.0206%" y="271.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.04%)</title><rect x="96.7706%" y="245" width="0.0414%" height="15" fill="rgb(208,186,3)" fg:x="119233" fg:w="51"/><text x="97.0206%" y="255.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (50 samples, 0.04%)</title><rect x="96.7714%" y="229" width="0.0406%" height="15" fill="rgb(216,36,26)" fg:x="119234" fg:w="50"/><text x="97.0214%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (50 samples, 0.04%)</title><rect x="96.7714%" y="213" width="0.0406%" height="15" fill="rgb(248,201,23)" fg:x="119234" fg:w="50"/><text x="97.0214%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (47 samples, 0.04%)</title><rect x="96.7739%" y="197" width="0.0381%" height="15" fill="rgb(251,170,31)" fg:x="119237" fg:w="47"/><text x="97.0239%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_sub (47 samples, 0.04%)</title><rect x="96.7739%" y="181" width="0.0381%" height="15" fill="rgb(207,110,25)" fg:x="119237" fg:w="47"/><text x="97.0239%" y="191.50"></text></g><g><title>fastrand::RNG::__getit (19 samples, 0.02%)</title><rect x="96.8136%" y="213" width="0.0154%" height="15" fill="rgb(250,54,15)" fg:x="119286" fg:w="19"/><text x="97.0636%" y="223.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="96.8136%" y="197" width="0.0154%" height="15" fill="rgb(227,68,33)" fg:x="119286" fg:w="19"/><text x="97.0636%" y="207.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="96.8136%" y="181" width="0.0154%" height="15" fill="rgb(238,34,41)" fg:x="119286" fg:w="19"/><text x="97.0636%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (19 samples, 0.02%)</title><rect x="96.8136%" y="165" width="0.0154%" height="15" fill="rgb(220,11,15)" fg:x="119286" fg:w="19"/><text x="97.0636%" y="175.50"></text></g><g><title>fastrand::usize (37 samples, 0.03%)</title><rect x="96.8120%" y="261" width="0.0300%" height="15" fill="rgb(246,111,35)" fg:x="119284" fg:w="37"/><text x="97.0620%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.03%)</title><rect x="96.8128%" y="245" width="0.0292%" height="15" fill="rgb(209,88,53)" fg:x="119285" fg:w="36"/><text x="97.0628%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.03%)</title><rect x="96.8128%" y="229" width="0.0292%" height="15" fill="rgb(231,185,47)" fg:x="119285" fg:w="36"/><text x="97.0628%" y="239.50"></text></g><g><title>fastrand::usize::{{closure}} (16 samples, 0.01%)</title><rect x="96.8290%" y="213" width="0.0130%" height="15" fill="rgb(233,154,1)" fg:x="119305" fg:w="16"/><text x="97.0790%" y="223.50"></text></g><g><title>fastrand::Rng::usize (16 samples, 0.01%)</title><rect x="96.8290%" y="197" width="0.0130%" height="15" fill="rgb(225,15,46)" fg:x="119305" fg:w="16"/><text x="97.0790%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (47 samples, 0.04%)</title><rect x="96.8461%" y="213" width="0.0381%" height="15" fill="rgb(211,135,41)" fg:x="119326" fg:w="47"/><text x="97.0961%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (47 samples, 0.04%)</title><rect x="96.8461%" y="197" width="0.0381%" height="15" fill="rgb(208,54,0)" fg:x="119326" fg:w="47"/><text x="97.0961%" y="207.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (465 samples, 0.38%)</title><rect x="96.5085%" y="277" width="0.3774%" height="15" fill="rgb(244,136,14)" fg:x="118910" fg:w="465"/><text x="96.7585%" y="287.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (54 samples, 0.04%)</title><rect x="96.8420%" y="261" width="0.0438%" height="15" fill="rgb(241,56,14)" fg:x="119321" fg:w="54"/><text x="97.0920%" y="271.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (52 samples, 0.04%)</title><rect x="96.8437%" y="245" width="0.0422%" height="15" fill="rgb(205,80,24)" fg:x="119323" fg:w="52"/><text x="97.0937%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (52 samples, 0.04%)</title><rect x="96.8437%" y="229" width="0.0422%" height="15" fill="rgb(220,57,4)" fg:x="119323" fg:w="52"/><text x="97.0937%" y="239.50"></text></g><g><title>async_executor::Sleepers::update (26 samples, 0.02%)</title><rect x="96.8915%" y="261" width="0.0211%" height="15" fill="rgb(226,193,50)" fg:x="119382" fg:w="26"/><text x="97.1415%" y="271.50"></text></g><g><title>core::task::wake::Waker::will_wake (18 samples, 0.01%)</title><rect x="96.8980%" y="245" width="0.0146%" height="15" fill="rgb(231,168,22)" fg:x="119390" fg:w="18"/><text x="97.1480%" y="255.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (18 samples, 0.01%)</title><rect x="96.8980%" y="229" width="0.0146%" height="15" fill="rgb(254,215,14)" fg:x="119390" fg:w="18"/><text x="97.1480%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (58 samples, 0.05%)</title><rect x="96.9126%" y="261" width="0.0471%" height="15" fill="rgb(211,115,16)" fg:x="119408" fg:w="58"/><text x="97.1626%" y="271.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="96.9126%" y="245" width="0.0471%" height="15" fill="rgb(236,210,16)" fg:x="119408" fg:w="58"/><text x="97.1626%" y="255.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (51 samples, 0.04%)</title><rect x="96.9183%" y="229" width="0.0414%" height="15" fill="rgb(221,94,12)" fg:x="119415" fg:w="51"/><text x="97.1683%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (51 samples, 0.04%)</title><rect x="96.9183%" y="213" width="0.0414%" height="15" fill="rgb(235,218,49)" fg:x="119415" fg:w="51"/><text x="97.1683%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (51 samples, 0.04%)</title><rect x="96.9183%" y="197" width="0.0414%" height="15" fill="rgb(217,114,14)" fg:x="119415" fg:w="51"/><text x="97.1683%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_swap (51 samples, 0.04%)</title><rect x="96.9183%" y="181" width="0.0414%" height="15" fill="rgb(216,145,22)" fg:x="119415" fg:w="51"/><text x="97.1683%" y="191.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (630 samples, 0.51%)</title><rect x="96.4809%" y="389" width="0.5113%" height="15" fill="rgb(217,112,39)" fg:x="118876" fg:w="630"/><text x="96.7309%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (620 samples, 0.50%)</title><rect x="96.4890%" y="373" width="0.5032%" height="15" fill="rgb(225,85,32)" fg:x="118886" fg:w="620"/><text x="96.7390%" y="383.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (618 samples, 0.50%)</title><rect x="96.4906%" y="357" width="0.5016%" height="15" fill="rgb(245,209,47)" fg:x="118888" fg:w="618"/><text x="96.7406%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (608 samples, 0.49%)</title><rect x="96.4987%" y="341" width="0.4935%" height="15" fill="rgb(218,220,15)" fg:x="118898" fg:w="608"/><text x="96.7487%" y="351.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (608 samples, 0.49%)</title><rect x="96.4987%" y="325" width="0.4935%" height="15" fill="rgb(222,202,31)" fg:x="118898" fg:w="608"/><text x="96.7487%" y="335.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (600 samples, 0.49%)</title><rect x="96.5052%" y="309" width="0.4870%" height="15" fill="rgb(243,203,4)" fg:x="118906" fg:w="600"/><text x="96.7552%" y="319.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (599 samples, 0.49%)</title><rect x="96.5060%" y="293" width="0.4862%" height="15" fill="rgb(237,92,17)" fg:x="118907" fg:w="599"/><text x="96.7560%" y="303.50"></text></g><g><title>async_executor::Ticker::sleep (131 samples, 0.11%)</title><rect x="96.8859%" y="277" width="0.1063%" height="15" fill="rgb(231,119,7)" fg:x="119375" fg:w="131"/><text x="97.1359%" y="287.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (40 samples, 0.03%)</title><rect x="96.9597%" y="261" width="0.0325%" height="15" fill="rgb(237,82,41)" fg:x="119466" fg:w="40"/><text x="97.2097%" y="271.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.03%)</title><rect x="96.9621%" y="245" width="0.0300%" height="15" fill="rgb(226,81,48)" fg:x="119469" fg:w="37"/><text x="97.2121%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (37 samples, 0.03%)</title><rect x="96.9621%" y="229" width="0.0300%" height="15" fill="rgb(234,70,51)" fg:x="119469" fg:w="37"/><text x="97.2121%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (37 samples, 0.03%)</title><rect x="96.9621%" y="213" width="0.0300%" height="15" fill="rgb(251,86,4)" fg:x="119469" fg:w="37"/><text x="97.2121%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.03%)</title><rect x="96.9621%" y="197" width="0.0300%" height="15" fill="rgb(244,144,28)" fg:x="119469" fg:w="37"/><text x="97.2121%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (39 samples, 0.03%)</title><rect x="97.0774%" y="325" width="0.0317%" height="15" fill="rgb(232,161,39)" fg:x="119611" fg:w="39"/><text x="97.3274%" y="335.50"></text></g><g><title>core::mem::replace (39 samples, 0.03%)</title><rect x="97.0774%" y="309" width="0.0317%" height="15" fill="rgb(247,34,51)" fg:x="119611" fg:w="39"/><text x="97.3274%" y="319.50"></text></g><g><title>core::ptr::read (39 samples, 0.03%)</title><rect x="97.0774%" y="293" width="0.0317%" height="15" fill="rgb(225,132,2)" fg:x="119611" fg:w="39"/><text x="97.3274%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (64 samples, 0.05%)</title><rect x="97.0620%" y="341" width="0.0519%" height="15" fill="rgb(209,159,44)" fg:x="119592" fg:w="64"/><text x="97.3120%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (55 samples, 0.04%)</title><rect x="97.1139%" y="341" width="0.0446%" height="15" fill="rgb(251,214,1)" fg:x="119656" fg:w="55"/><text x="97.3639%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (47 samples, 0.04%)</title><rect x="97.1204%" y="325" width="0.0381%" height="15" fill="rgb(247,84,47)" fg:x="119664" fg:w="47"/><text x="97.3704%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="97.1204%" y="309" width="0.0381%" height="15" fill="rgb(240,111,43)" fg:x="119664" fg:w="47"/><text x="97.3704%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (43 samples, 0.03%)</title><rect x="97.1237%" y="293" width="0.0349%" height="15" fill="rgb(215,214,35)" fg:x="119668" fg:w="43"/><text x="97.3737%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (43 samples, 0.03%)</title><rect x="97.1237%" y="277" width="0.0349%" height="15" fill="rgb(248,207,23)" fg:x="119668" fg:w="43"/><text x="97.3737%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (43 samples, 0.03%)</title><rect x="97.1237%" y="261" width="0.0349%" height="15" fill="rgb(214,186,4)" fg:x="119668" fg:w="43"/><text x="97.3737%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (43 samples, 0.03%)</title><rect x="97.1237%" y="245" width="0.0349%" height="15" fill="rgb(220,133,22)" fg:x="119668" fg:w="43"/><text x="97.3737%" y="255.50"></text></g><g><title>core::task::wake::Waker::will_wake (27 samples, 0.02%)</title><rect x="97.1618%" y="341" width="0.0219%" height="15" fill="rgb(239,134,19)" fg:x="119715" fg:w="27"/><text x="97.4118%" y="351.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (27 samples, 0.02%)</title><rect x="97.1618%" y="325" width="0.0219%" height="15" fill="rgb(250,140,9)" fg:x="119715" fg:w="27"/><text x="97.4118%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.02%)</title><rect x="97.1626%" y="309" width="0.0211%" height="15" fill="rgb(225,59,14)" fg:x="119716" fg:w="26"/><text x="97.4126%" y="319.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="97.1626%" y="293" width="0.0211%" height="15" fill="rgb(214,152,51)" fg:x="119716" fg:w="26"/><text x="97.4126%" y="303.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (260 samples, 0.21%)</title><rect x="97.0368%" y="357" width="0.2110%" height="15" fill="rgb(251,227,43)" fg:x="119561" fg:w="260"/><text x="97.2868%" y="367.50"></text></g><g><title>event_listener::Inner::lock (79 samples, 0.06%)</title><rect x="97.1837%" y="341" width="0.0641%" height="15" fill="rgb(241,96,17)" fg:x="119742" fg:w="79"/><text x="97.4337%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (73 samples, 0.06%)</title><rect x="97.1886%" y="325" width="0.0592%" height="15" fill="rgb(234,198,43)" fg:x="119748" fg:w="73"/><text x="97.4386%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (68 samples, 0.06%)</title><rect x="97.1926%" y="309" width="0.0552%" height="15" fill="rgb(220,108,29)" fg:x="119753" fg:w="68"/><text x="97.4426%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (68 samples, 0.06%)</title><rect x="97.1926%" y="293" width="0.0552%" height="15" fill="rgb(226,163,33)" fg:x="119753" fg:w="68"/><text x="97.4426%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (68 samples, 0.06%)</title><rect x="97.1926%" y="277" width="0.0552%" height="15" fill="rgb(205,194,45)" fg:x="119753" fg:w="68"/><text x="97.4426%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (68 samples, 0.06%)</title><rect x="97.1926%" y="261" width="0.0552%" height="15" fill="rgb(206,143,44)" fg:x="119753" fg:w="68"/><text x="97.4426%" y="271.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,061 samples, 0.86%)</title><rect x="96.4744%" y="421" width="0.8611%" height="15" fill="rgb(236,136,36)" fg:x="118868" fg:w="1061"/><text x="96.7244%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,057 samples, 0.86%)</title><rect x="96.4776%" y="405" width="0.8579%" height="15" fill="rgb(249,172,42)" fg:x="118872" fg:w="1057"/><text x="96.7276%" y="415.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (423 samples, 0.34%)</title><rect x="96.9922%" y="389" width="0.3433%" height="15" fill="rgb(216,139,23)" fg:x="119506" fg:w="423"/><text x="97.2422%" y="399.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (396 samples, 0.32%)</title><rect x="97.0141%" y="373" width="0.3214%" height="15" fill="rgb(207,166,20)" fg:x="119533" fg:w="396"/><text x="97.2641%" y="383.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (108 samples, 0.09%)</title><rect x="97.2478%" y="357" width="0.0877%" height="15" fill="rgb(210,209,22)" fg:x="119821" fg:w="108"/><text x="97.4978%" y="367.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (108 samples, 0.09%)</title><rect x="97.2478%" y="341" width="0.0877%" height="15" fill="rgb(232,118,20)" fg:x="119821" fg:w="108"/><text x="97.4978%" y="351.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (71 samples, 0.06%)</title><rect x="97.2779%" y="325" width="0.0576%" height="15" fill="rgb(238,113,42)" fg:x="119858" fg:w="71"/><text x="97.5279%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (64 samples, 0.05%)</title><rect x="97.2835%" y="309" width="0.0519%" height="15" fill="rgb(231,42,5)" fg:x="119865" fg:w="64"/><text x="97.5335%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (64 samples, 0.05%)</title><rect x="97.2835%" y="293" width="0.0519%" height="15" fill="rgb(243,166,24)" fg:x="119865" fg:w="64"/><text x="97.5335%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (64 samples, 0.05%)</title><rect x="97.2835%" y="277" width="0.0519%" height="15" fill="rgb(237,226,12)" fg:x="119865" fg:w="64"/><text x="97.5335%" y="287.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (21,303 samples, 17.29%)</title><rect x="80.0474%" y="501" width="17.2897%" height="15" fill="rgb(229,133,24)" fg:x="98628" fg:w="21303"/><text x="80.2974%" y="511.50">&lt;futures_lite::future::Or&lt;F..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21,237 samples, 17.24%)</title><rect x="80.1010%" y="485" width="17.2361%" height="15" fill="rgb(238,33,43)" fg:x="98694" fg:w="21237"/><text x="80.3510%" y="495.50">&lt;core::future::from_generat..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,137 samples, 0.92%)</title><rect x="96.4143%" y="469" width="0.9228%" height="15" fill="rgb(227,59,38)" fg:x="118794" fg:w="1137"/><text x="96.6643%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,079 samples, 0.88%)</title><rect x="96.4614%" y="453" width="0.8757%" height="15" fill="rgb(230,97,0)" fg:x="118852" fg:w="1079"/><text x="96.7114%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,079 samples, 0.88%)</title><rect x="96.4614%" y="437" width="0.8757%" height="15" fill="rgb(250,173,50)" fg:x="118852" fg:w="1079"/><text x="96.7114%" y="447.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (15 samples, 0.01%)</title><rect x="97.3395%" y="421" width="0.0122%" height="15" fill="rgb(240,15,50)" fg:x="119934" fg:w="15"/><text x="97.5895%" y="431.50"></text></g><g><title>once_cell::imp::initialize_or_wait (15 samples, 0.01%)</title><rect x="97.3395%" y="405" width="0.0122%" height="15" fill="rgb(221,93,22)" fg:x="119934" fg:w="15"/><text x="97.5895%" y="415.50"></text></g><g><title>once_cell::imp::wait (15 samples, 0.01%)</title><rect x="97.3395%" y="389" width="0.0122%" height="15" fill="rgb(245,180,53)" fg:x="119934" fg:w="15"/><text x="97.5895%" y="399.50"></text></g><g><title>std::thread::park (15 samples, 0.01%)</title><rect x="97.3395%" y="373" width="0.0122%" height="15" fill="rgb(231,88,51)" fg:x="119934" fg:w="15"/><text x="97.5895%" y="383.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (15 samples, 0.01%)</title><rect x="97.3395%" y="357" width="0.0122%" height="15" fill="rgb(240,58,21)" fg:x="119934" fg:w="15"/><text x="97.5895%" y="367.50"></text></g><g><title>std::sys::unix::futex::futex_wait (13 samples, 0.01%)</title><rect x="97.3412%" y="341" width="0.0106%" height="15" fill="rgb(237,21,10)" fg:x="119936" fg:w="13"/><text x="97.5912%" y="351.50"></text></g><g><title>async_io::reactor::Reactor::get (27 samples, 0.02%)</title><rect x="97.3395%" y="501" width="0.0219%" height="15" fill="rgb(218,43,11)" fg:x="119934" fg:w="27"/><text x="97.5895%" y="511.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.02%)</title><rect x="97.3395%" y="485" width="0.0219%" height="15" fill="rgb(218,221,29)" fg:x="119934" fg:w="27"/><text x="97.5895%" y="495.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (27 samples, 0.02%)</title><rect x="97.3395%" y="469" width="0.0219%" height="15" fill="rgb(214,118,42)" fg:x="119934" fg:w="27"/><text x="97.5895%" y="479.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (27 samples, 0.02%)</title><rect x="97.3395%" y="453" width="0.0219%" height="15" fill="rgb(251,200,26)" fg:x="119934" fg:w="27"/><text x="97.5895%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (27 samples, 0.02%)</title><rect x="97.3395%" y="437" width="0.0219%" height="15" fill="rgb(237,101,39)" fg:x="119934" fg:w="27"/><text x="97.5895%" y="447.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="97.3615%" y="469" width="0.0162%" height="15" fill="rgb(251,117,11)" fg:x="119961" fg:w="20"/><text x="97.6115%" y="479.50"></text></g><g><title>std::sync::poison::Flag::borrow (20 samples, 0.02%)</title><rect x="97.3615%" y="453" width="0.0162%" height="15" fill="rgb(216,223,23)" fg:x="119961" fg:w="20"/><text x="97.6115%" y="463.50"></text></g><g><title>std::thread::panicking (18 samples, 0.01%)</title><rect x="97.3631%" y="437" width="0.0146%" height="15" fill="rgb(251,54,12)" fg:x="119963" fg:w="18"/><text x="97.6131%" y="447.50"></text></g><g><title>std::panicking::panicking (18 samples, 0.01%)</title><rect x="97.3631%" y="421" width="0.0146%" height="15" fill="rgb(254,176,54)" fg:x="119963" fg:w="18"/><text x="97.6131%" y="431.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (18 samples, 0.01%)</title><rect x="97.3631%" y="405" width="0.0146%" height="15" fill="rgb(210,32,8)" fg:x="119963" fg:w="18"/><text x="97.6131%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.01%)</title><rect x="97.3631%" y="389" width="0.0146%" height="15" fill="rgb(235,52,38)" fg:x="119963" fg:w="18"/><text x="97.6131%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.01%)</title><rect x="97.3631%" y="373" width="0.0146%" height="15" fill="rgb(231,4,44)" fg:x="119963" fg:w="18"/><text x="97.6131%" y="383.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (82 samples, 0.07%)</title><rect x="97.3615%" y="501" width="0.0666%" height="15" fill="rgb(249,2,32)" fg:x="119961" fg:w="82"/><text x="97.6115%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (82 samples, 0.07%)</title><rect x="97.3615%" y="485" width="0.0666%" height="15" fill="rgb(224,65,26)" fg:x="119961" fg:w="82"/><text x="97.6115%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (62 samples, 0.05%)</title><rect x="97.3777%" y="469" width="0.0503%" height="15" fill="rgb(250,73,40)" fg:x="119981" fg:w="62"/><text x="97.6277%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (62 samples, 0.05%)</title><rect x="97.3777%" y="453" width="0.0503%" height="15" fill="rgb(253,177,16)" fg:x="119981" fg:w="62"/><text x="97.6277%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (62 samples, 0.05%)</title><rect x="97.3777%" y="437" width="0.0503%" height="15" fill="rgb(217,32,34)" fg:x="119981" fg:w="62"/><text x="97.6277%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (62 samples, 0.05%)</title><rect x="97.3777%" y="421" width="0.0503%" height="15" fill="rgb(212,7,10)" fg:x="119981" fg:w="62"/><text x="97.6277%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (26 samples, 0.02%)</title><rect x="97.4621%" y="485" width="0.0211%" height="15" fill="rgb(245,89,8)" fg:x="120085" fg:w="26"/><text x="97.7121%" y="495.50"></text></g><g><title>sn_rust_dealloc (80 samples, 0.06%)</title><rect x="97.5140%" y="325" width="0.0649%" height="15" fill="rgb(237,16,53)" fg:x="120149" fg:w="80"/><text x="97.7640%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.08%)</title><rect x="97.5124%" y="389" width="0.0771%" height="15" fill="rgb(250,204,30)" fg:x="120147" fg:w="95"/><text x="97.7624%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (93 samples, 0.08%)</title><rect x="97.5140%" y="373" width="0.0755%" height="15" fill="rgb(208,77,27)" fg:x="120149" fg:w="93"/><text x="97.7640%" y="383.50"></text></g><g><title>__rg_dealloc (93 samples, 0.08%)</title><rect x="97.5140%" y="357" width="0.0755%" height="15" fill="rgb(250,204,28)" fg:x="120149" fg:w="93"/><text x="97.7640%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (93 samples, 0.08%)</title><rect x="97.5140%" y="341" width="0.0755%" height="15" fill="rgb(244,63,21)" fg:x="120149" fg:w="93"/><text x="97.7640%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (98 samples, 0.08%)</title><rect x="97.5108%" y="421" width="0.0795%" height="15" fill="rgb(236,85,44)" fg:x="120145" fg:w="98"/><text x="97.7608%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (96 samples, 0.08%)</title><rect x="97.5124%" y="405" width="0.0779%" height="15" fill="rgb(215,98,4)" fg:x="120147" fg:w="96"/><text x="97.7624%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.09%)</title><rect x="97.5067%" y="469" width="0.0893%" height="15" fill="rgb(235,38,11)" fg:x="120140" fg:w="110"/><text x="97.7567%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (107 samples, 0.09%)</title><rect x="97.5092%" y="453" width="0.0868%" height="15" fill="rgb(254,186,25)" fg:x="120143" fg:w="107"/><text x="97.7592%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (105 samples, 0.09%)</title><rect x="97.5108%" y="437" width="0.0852%" height="15" fill="rgb(225,55,31)" fg:x="120145" fg:w="105"/><text x="97.7608%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (17 samples, 0.01%)</title><rect x="97.5960%" y="421" width="0.0138%" height="15" fill="rgb(211,15,21)" fg:x="120250" fg:w="17"/><text x="97.8460%" y="431.50"></text></g><g><title>alloc::collections::btree::mem::replace (17 samples, 0.01%)</title><rect x="97.5960%" y="405" width="0.0138%" height="15" fill="rgb(215,187,41)" fg:x="120250" fg:w="17"/><text x="97.8460%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="97.5960%" y="469" width="0.0195%" height="15" fill="rgb(248,69,32)" fg:x="120250" fg:w="24"/><text x="97.8460%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="97.5960%" y="453" width="0.0195%" height="15" fill="rgb(252,102,52)" fg:x="120250" fg:w="24"/><text x="97.8460%" y="463.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (24 samples, 0.02%)</title><rect x="97.5960%" y="437" width="0.0195%" height="15" fill="rgb(253,140,32)" fg:x="120250" fg:w="24"/><text x="97.8460%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (38 samples, 0.03%)</title><rect x="97.6333%" y="437" width="0.0308%" height="15" fill="rgb(216,56,42)" fg:x="120296" fg:w="38"/><text x="97.8833%" y="447.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (30 samples, 0.02%)</title><rect x="97.6398%" y="421" width="0.0243%" height="15" fill="rgb(216,184,14)" fg:x="120304" fg:w="30"/><text x="97.8898%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.02%)</title><rect x="97.6398%" y="405" width="0.0243%" height="15" fill="rgb(237,187,27)" fg:x="120304" fg:w="30"/><text x="97.8898%" y="415.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.02%)</title><rect x="97.6423%" y="389" width="0.0219%" height="15" fill="rgb(219,65,3)" fg:x="120307" fg:w="27"/><text x="97.8923%" y="399.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (31 samples, 0.03%)</title><rect x="97.6715%" y="405" width="0.0252%" height="15" fill="rgb(245,83,25)" fg:x="120343" fg:w="31"/><text x="97.9215%" y="415.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (53 samples, 0.04%)</title><rect x="97.6650%" y="437" width="0.0430%" height="15" fill="rgb(214,205,45)" fg:x="120335" fg:w="53"/><text x="97.9150%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (53 samples, 0.04%)</title><rect x="97.6650%" y="421" width="0.0430%" height="15" fill="rgb(241,20,18)" fg:x="120335" fg:w="53"/><text x="97.9150%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (14 samples, 0.01%)</title><rect x="97.6967%" y="405" width="0.0114%" height="15" fill="rgb(232,163,23)" fg:x="120374" fg:w="14"/><text x="97.9467%" y="415.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="97.6975%" y="389" width="0.0106%" height="15" fill="rgb(214,5,46)" fg:x="120375" fg:w="13"/><text x="97.9475%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="97.6975%" y="373" width="0.0106%" height="15" fill="rgb(229,78,17)" fg:x="120375" fg:w="13"/><text x="97.9475%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="97.6975%" y="357" width="0.0106%" height="15" fill="rgb(248,89,10)" fg:x="120375" fg:w="13"/><text x="97.9475%" y="367.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (63 samples, 0.05%)</title><rect x="97.7600%" y="229" width="0.0511%" height="15" fill="rgb(248,54,15)" fg:x="120452" fg:w="63"/><text x="98.0100%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (128 samples, 0.10%)</title><rect x="97.7080%" y="373" width="0.1039%" height="15" fill="rgb(223,116,6)" fg:x="120388" fg:w="128"/><text x="97.9580%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (128 samples, 0.10%)</title><rect x="97.7080%" y="357" width="0.1039%" height="15" fill="rgb(205,125,38)" fg:x="120388" fg:w="128"/><text x="97.9580%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (128 samples, 0.10%)</title><rect x="97.7080%" y="341" width="0.1039%" height="15" fill="rgb(251,78,38)" fg:x="120388" fg:w="128"/><text x="97.9580%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (128 samples, 0.10%)</title><rect x="97.7080%" y="325" width="0.1039%" height="15" fill="rgb(253,78,28)" fg:x="120388" fg:w="128"/><text x="97.9580%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (128 samples, 0.10%)</title><rect x="97.7080%" y="309" width="0.1039%" height="15" fill="rgb(209,120,3)" fg:x="120388" fg:w="128"/><text x="97.9580%" y="319.50"></text></g><g><title>alloc::alloc::alloc (127 samples, 0.10%)</title><rect x="97.7088%" y="293" width="0.1031%" height="15" fill="rgb(238,229,9)" fg:x="120389" fg:w="127"/><text x="97.9588%" y="303.50"></text></g><g><title>__rg_alloc (127 samples, 0.10%)</title><rect x="97.7088%" y="277" width="0.1031%" height="15" fill="rgb(253,159,18)" fg:x="120389" fg:w="127"/><text x="97.9588%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (127 samples, 0.10%)</title><rect x="97.7088%" y="261" width="0.1031%" height="15" fill="rgb(244,42,34)" fg:x="120389" fg:w="127"/><text x="97.9588%" y="271.50"></text></g><g><title>sn_rust_alloc (127 samples, 0.10%)</title><rect x="97.7088%" y="245" width="0.1031%" height="15" fill="rgb(224,8,7)" fg:x="120389" fg:w="127"/><text x="97.9588%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (239 samples, 0.19%)</title><rect x="97.6187%" y="469" width="0.1940%" height="15" fill="rgb(210,201,45)" fg:x="120278" fg:w="239"/><text x="97.8687%" y="479.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (227 samples, 0.18%)</title><rect x="97.6285%" y="453" width="0.1842%" height="15" fill="rgb(252,185,21)" fg:x="120290" fg:w="227"/><text x="97.8785%" y="463.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (129 samples, 0.10%)</title><rect x="97.7080%" y="437" width="0.1047%" height="15" fill="rgb(223,131,1)" fg:x="120388" fg:w="129"/><text x="97.9580%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (129 samples, 0.10%)</title><rect x="97.7080%" y="421" width="0.1047%" height="15" fill="rgb(245,141,16)" fg:x="120388" fg:w="129"/><text x="97.9580%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (129 samples, 0.10%)</title><rect x="97.7080%" y="405" width="0.1047%" height="15" fill="rgb(229,55,45)" fg:x="120388" fg:w="129"/><text x="97.9580%" y="415.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (129 samples, 0.10%)</title><rect x="97.7080%" y="389" width="0.1047%" height="15" fill="rgb(208,92,15)" fg:x="120388" fg:w="129"/><text x="97.9580%" y="399.50"></text></g><g><title>concurrent_queue::full_fence (37 samples, 0.03%)</title><rect x="97.8387%" y="421" width="0.0300%" height="15" fill="rgb(234,185,47)" fg:x="120549" fg:w="37"/><text x="98.0887%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (36 samples, 0.03%)</title><rect x="97.8395%" y="405" width="0.0292%" height="15" fill="rgb(253,104,50)" fg:x="120550" fg:w="36"/><text x="98.0895%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (36 samples, 0.03%)</title><rect x="97.8395%" y="389" width="0.0292%" height="15" fill="rgb(205,70,7)" fg:x="120550" fg:w="36"/><text x="98.0895%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (36 samples, 0.03%)</title><rect x="97.8395%" y="373" width="0.0292%" height="15" fill="rgb(240,178,43)" fg:x="120550" fg:w="36"/><text x="98.0895%" y="383.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (81 samples, 0.07%)</title><rect x="97.8127%" y="469" width="0.0657%" height="15" fill="rgb(214,112,2)" fg:x="120517" fg:w="81"/><text x="98.0627%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (69 samples, 0.06%)</title><rect x="97.8225%" y="453" width="0.0560%" height="15" fill="rgb(206,46,17)" fg:x="120529" fg:w="69"/><text x="98.0725%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (65 samples, 0.05%)</title><rect x="97.8257%" y="437" width="0.0528%" height="15" fill="rgb(225,220,16)" fg:x="120533" fg:w="65"/><text x="98.0757%" y="447.50"></text></g><g><title>core::mem::drop (88 samples, 0.07%)</title><rect x="97.8785%" y="469" width="0.0714%" height="15" fill="rgb(238,65,40)" fg:x="120598" fg:w="88"/><text x="98.1285%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (88 samples, 0.07%)</title><rect x="97.8785%" y="453" width="0.0714%" height="15" fill="rgb(230,151,21)" fg:x="120598" fg:w="88"/><text x="98.1285%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.07%)</title><rect x="97.8785%" y="437" width="0.0714%" height="15" fill="rgb(218,58,49)" fg:x="120598" fg:w="88"/><text x="98.1285%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (86 samples, 0.07%)</title><rect x="97.8801%" y="421" width="0.0698%" height="15" fill="rgb(219,179,14)" fg:x="120600" fg:w="86"/><text x="98.1301%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (86 samples, 0.07%)</title><rect x="97.8801%" y="405" width="0.0698%" height="15" fill="rgb(223,72,1)" fg:x="120600" fg:w="86"/><text x="98.1301%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (86 samples, 0.07%)</title><rect x="97.8801%" y="389" width="0.0698%" height="15" fill="rgb(238,126,10)" fg:x="120600" fg:w="86"/><text x="98.1301%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (86 samples, 0.07%)</title><rect x="97.8801%" y="373" width="0.0698%" height="15" fill="rgb(224,206,38)" fg:x="120600" fg:w="86"/><text x="98.1301%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.02%)</title><rect x="97.9523%" y="469" width="0.0235%" height="15" fill="rgb(212,201,54)" fg:x="120689" fg:w="29"/><text x="98.2023%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (21 samples, 0.02%)</title><rect x="97.9588%" y="453" width="0.0170%" height="15" fill="rgb(218,154,48)" fg:x="120697" fg:w="21"/><text x="98.2088%" y="463.50"></text></g><g><title>std::time::Instant::duration_since (21 samples, 0.02%)</title><rect x="97.9588%" y="437" width="0.0170%" height="15" fill="rgb(232,93,24)" fg:x="120697" fg:w="21"/><text x="98.2088%" y="447.50"></text></g><g><title>std::time::Instant::checked_duration_since (21 samples, 0.02%)</title><rect x="97.9588%" y="421" width="0.0170%" height="15" fill="rgb(245,30,21)" fg:x="120697" fg:w="21"/><text x="98.2088%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (21 samples, 0.02%)</title><rect x="97.9588%" y="405" width="0.0170%" height="15" fill="rgb(242,148,29)" fg:x="120697" fg:w="21"/><text x="98.2088%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (17 samples, 0.01%)</title><rect x="97.9620%" y="389" width="0.0138%" height="15" fill="rgb(244,153,54)" fg:x="120701" fg:w="17"/><text x="98.2120%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (89 samples, 0.07%)</title><rect x="97.9823%" y="469" width="0.0722%" height="15" fill="rgb(252,87,22)" fg:x="120726" fg:w="89"/><text x="98.2323%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (87 samples, 0.07%)</title><rect x="97.9840%" y="453" width="0.0706%" height="15" fill="rgb(210,51,29)" fg:x="120728" fg:w="87"/><text x="98.2340%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (87 samples, 0.07%)</title><rect x="97.9840%" y="437" width="0.0706%" height="15" fill="rgb(242,136,47)" fg:x="120728" fg:w="87"/><text x="98.2340%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (87 samples, 0.07%)</title><rect x="97.9840%" y="421" width="0.0706%" height="15" fill="rgb(238,68,4)" fg:x="120728" fg:w="87"/><text x="98.2340%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (87 samples, 0.07%)</title><rect x="97.9840%" y="405" width="0.0706%" height="15" fill="rgb(242,161,30)" fg:x="120728" fg:w="87"/><text x="98.2340%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (783 samples, 0.64%)</title><rect x="97.4840%" y="485" width="0.6355%" height="15" fill="rgb(218,58,44)" fg:x="120112" fg:w="783"/><text x="97.7340%" y="495.50"></text></g><g><title>std::time::Instant::now (80 samples, 0.06%)</title><rect x="98.0546%" y="469" width="0.0649%" height="15" fill="rgb(252,125,32)" fg:x="120815" fg:w="80"/><text x="98.3046%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (80 samples, 0.06%)</title><rect x="98.0546%" y="453" width="0.0649%" height="15" fill="rgb(219,178,0)" fg:x="120815" fg:w="80"/><text x="98.3046%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (80 samples, 0.06%)</title><rect x="98.0546%" y="437" width="0.0649%" height="15" fill="rgb(213,152,7)" fg:x="120815" fg:w="80"/><text x="98.3046%" y="447.50"></text></g><g><title>__clock_gettime (78 samples, 0.06%)</title><rect x="98.0562%" y="421" width="0.0633%" height="15" fill="rgb(249,109,34)" fg:x="120817" fg:w="78"/><text x="98.3062%" y="431.50"></text></g><g><title>__vdso_clock_gettime (66 samples, 0.05%)</title><rect x="98.0659%" y="405" width="0.0536%" height="15" fill="rgb(232,96,21)" fg:x="120829" fg:w="66"/><text x="98.3159%" y="415.50"></text></g><g><title>[[vdso]] (54 samples, 0.04%)</title><rect x="98.0757%" y="389" width="0.0438%" height="15" fill="rgb(228,27,39)" fg:x="120841" fg:w="54"/><text x="98.3257%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="98.1252%" y="485" width="0.0203%" height="15" fill="rgb(211,182,52)" fg:x="120902" fg:w="25"/><text x="98.3752%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="98.1252%" y="469" width="0.0203%" height="15" fill="rgb(234,178,38)" fg:x="120902" fg:w="25"/><text x="98.3752%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (18 samples, 0.01%)</title><rect x="98.1804%" y="469" width="0.0146%" height="15" fill="rgb(221,111,3)" fg:x="120970" fg:w="18"/><text x="98.4304%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.01%)</title><rect x="98.1804%" y="453" width="0.0146%" height="15" fill="rgb(228,175,21)" fg:x="120970" fg:w="18"/><text x="98.4304%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="98.1828%" y="437" width="0.0122%" height="15" fill="rgb(228,174,43)" fg:x="120973" fg:w="15"/><text x="98.4328%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (15 samples, 0.01%)</title><rect x="98.1828%" y="421" width="0.0122%" height="15" fill="rgb(211,191,0)" fg:x="120973" fg:w="15"/><text x="98.4328%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.01%)</title><rect x="98.1828%" y="405" width="0.0122%" height="15" fill="rgb(253,117,3)" fg:x="120973" fg:w="15"/><text x="98.4328%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="98.1828%" y="389" width="0.0122%" height="15" fill="rgb(241,127,19)" fg:x="120973" fg:w="15"/><text x="98.4328%" y="399.50"></text></g><g><title>__pthread_disable_asynccancel (24 samples, 0.02%)</title><rect x="98.3500%" y="437" width="0.0195%" height="15" fill="rgb(218,103,12)" fg:x="121179" fg:w="24"/><text x="98.6000%" y="447.50"></text></g><g><title>__libc_read (148 samples, 0.12%)</title><rect x="98.3037%" y="453" width="0.1201%" height="15" fill="rgb(236,214,43)" fg:x="121122" fg:w="148"/><text x="98.5537%" y="463.50"></text></g><g><title>__pthread_enable_asynccancel (67 samples, 0.05%)</title><rect x="98.3695%" y="437" width="0.0544%" height="15" fill="rgb(244,144,19)" fg:x="121203" fg:w="67"/><text x="98.6195%" y="447.50"></text></g><g><title>epoll_wait (186 samples, 0.15%)</title><rect x="98.4239%" y="453" width="0.1510%" height="15" fill="rgb(246,188,10)" fg:x="121270" fg:w="186"/><text x="98.6739%" y="463.50"></text></g><g><title>[libc-2.31.so] (64 samples, 0.05%)</title><rect x="98.5229%" y="437" width="0.0519%" height="15" fill="rgb(212,193,33)" fg:x="121392" fg:w="64"/><text x="98.7729%" y="447.50"></text></g><g><title>polling::epoll::Poller::modify (79 samples, 0.06%)</title><rect x="98.5764%" y="453" width="0.0641%" height="15" fill="rgb(241,51,29)" fg:x="121458" fg:w="79"/><text x="98.8264%" y="463.50"></text></g><g><title>polling::epoll::Poller::ctl (65 samples, 0.05%)</title><rect x="98.5878%" y="437" width="0.0528%" height="15" fill="rgb(211,58,19)" fg:x="121472" fg:w="65"/><text x="98.8378%" y="447.50"></text></g><g><title>epoll_ctl (60 samples, 0.05%)</title><rect x="98.5919%" y="421" width="0.0487%" height="15" fill="rgb(229,111,26)" fg:x="121477" fg:w="60"/><text x="98.8419%" y="431.50"></text></g><g><title>polling::epoll::Poller::wait (578 samples, 0.47%)</title><rect x="98.2039%" y="469" width="0.4691%" height="15" fill="rgb(213,115,40)" fg:x="120999" fg:w="578"/><text x="98.4539%" y="479.50"></text></g><g><title>syscall (38 samples, 0.03%)</title><rect x="98.6422%" y="453" width="0.0308%" height="15" fill="rgb(209,56,44)" fg:x="121539" fg:w="38"/><text x="98.8922%" y="463.50"></text></g><g><title>polling::Poller::wait (676 samples, 0.55%)</title><rect x="98.1471%" y="485" width="0.5486%" height="15" fill="rgb(230,108,32)" fg:x="120929" fg:w="676"/><text x="98.3971%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (28 samples, 0.02%)</title><rect x="98.6730%" y="469" width="0.0227%" height="15" fill="rgb(216,165,31)" fg:x="121577" fg:w="28"/><text x="98.9230%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (24 samples, 0.02%)</title><rect x="98.6763%" y="453" width="0.0195%" height="15" fill="rgb(218,122,21)" fg:x="121581" fg:w="24"/><text x="98.9263%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (24 samples, 0.02%)</title><rect x="98.6763%" y="437" width="0.0195%" height="15" fill="rgb(223,224,47)" fg:x="121581" fg:w="24"/><text x="98.9263%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (24 samples, 0.02%)</title><rect x="98.6763%" y="421" width="0.0195%" height="15" fill="rgb(238,102,44)" fg:x="121581" fg:w="24"/><text x="98.9263%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="98.6763%" y="405" width="0.0195%" height="15" fill="rgb(236,46,40)" fg:x="121581" fg:w="24"/><text x="98.9263%" y="415.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,563 samples, 1.27%)</title><rect x="97.4280%" y="501" width="1.2685%" height="15" fill="rgb(247,202,50)" fg:x="120043" fg:w="1563"/><text x="97.6780%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (33 samples, 0.03%)</title><rect x="98.6974%" y="453" width="0.0268%" height="15" fill="rgb(209,99,20)" fg:x="121607" fg:w="33"/><text x="98.9474%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_store (33 samples, 0.03%)</title><rect x="98.6974%" y="437" width="0.0268%" height="15" fill="rgb(252,27,34)" fg:x="121607" fg:w="33"/><text x="98.9474%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (40 samples, 0.03%)</title><rect x="98.6966%" y="501" width="0.0325%" height="15" fill="rgb(215,206,23)" fg:x="121606" fg:w="40"/><text x="98.9466%" y="511.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="98.6966%" y="485" width="0.0325%" height="15" fill="rgb(212,135,36)" fg:x="121606" fg:w="40"/><text x="98.9466%" y="495.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (40 samples, 0.03%)</title><rect x="98.6966%" y="469" width="0.0325%" height="15" fill="rgb(240,189,1)" fg:x="121606" fg:w="40"/><text x="98.9466%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (24 samples, 0.02%)</title><rect x="98.7306%" y="501" width="0.0195%" height="15" fill="rgb(242,56,20)" fg:x="121648" fg:w="24"/><text x="98.9806%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_store (24 samples, 0.02%)</title><rect x="98.7306%" y="485" width="0.0195%" height="15" fill="rgb(247,132,33)" fg:x="121648" fg:w="24"/><text x="98.9806%" y="495.50"></text></g><g><title>log::max_level (15 samples, 0.01%)</title><rect x="98.7501%" y="501" width="0.0122%" height="15" fill="rgb(208,149,11)" fg:x="121672" fg:w="15"/><text x="99.0001%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="98.7501%" y="485" width="0.0122%" height="15" fill="rgb(211,33,11)" fg:x="121672" fg:w="15"/><text x="99.0001%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="98.7501%" y="469" width="0.0122%" height="15" fill="rgb(221,29,38)" fg:x="121672" fg:w="15"/><text x="99.0001%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (35 samples, 0.03%)</title><rect x="98.7753%" y="469" width="0.0284%" height="15" fill="rgb(206,182,49)" fg:x="121703" fg:w="35"/><text x="99.0253%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="98.7753%" y="453" width="0.0284%" height="15" fill="rgb(216,140,1)" fg:x="121703" fg:w="35"/><text x="99.0253%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="98.7842%" y="437" width="0.0195%" height="15" fill="rgb(232,57,40)" fg:x="121714" fg:w="24"/><text x="99.0342%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (24 samples, 0.02%)</title><rect x="98.7842%" y="421" width="0.0195%" height="15" fill="rgb(224,186,18)" fg:x="121714" fg:w="24"/><text x="99.0342%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (24 samples, 0.02%)</title><rect x="98.7842%" y="405" width="0.0195%" height="15" fill="rgb(215,121,11)" fg:x="121714" fg:w="24"/><text x="99.0342%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (24 samples, 0.02%)</title><rect x="98.7842%" y="389" width="0.0195%" height="15" fill="rgb(245,147,10)" fg:x="121714" fg:w="24"/><text x="99.0342%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (73 samples, 0.06%)</title><rect x="98.8037%" y="469" width="0.0592%" height="15" fill="rgb(238,153,13)" fg:x="121738" fg:w="73"/><text x="99.0537%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (73 samples, 0.06%)</title><rect x="98.8037%" y="453" width="0.0592%" height="15" fill="rgb(233,108,0)" fg:x="121738" fg:w="73"/><text x="99.0537%" y="463.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (77 samples, 0.06%)</title><rect x="98.8784%" y="389" width="0.0625%" height="15" fill="rgb(212,157,17)" fg:x="121830" fg:w="77"/><text x="99.1284%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (15 samples, 0.01%)</title><rect x="98.9408%" y="389" width="0.0122%" height="15" fill="rgb(225,213,38)" fg:x="121907" fg:w="15"/><text x="99.1908%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wait (320 samples, 0.26%)</title><rect x="98.8727%" y="405" width="0.2597%" height="15" fill="rgb(248,16,11)" fg:x="121823" fg:w="320"/><text x="99.1227%" y="415.50"></text></g><g><title>syscall (221 samples, 0.18%)</title><rect x="98.9530%" y="389" width="0.1794%" height="15" fill="rgb(241,33,4)" fg:x="121922" fg:w="221"/><text x="99.2030%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (252 samples, 0.20%)</title><rect x="99.1324%" y="405" width="0.2045%" height="15" fill="rgb(222,26,43)" fg:x="122143" fg:w="252"/><text x="99.3824%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (252 samples, 0.20%)</title><rect x="99.1324%" y="389" width="0.2045%" height="15" fill="rgb(243,29,36)" fg:x="122143" fg:w="252"/><text x="99.3824%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (252 samples, 0.20%)</title><rect x="99.1324%" y="373" width="0.2045%" height="15" fill="rgb(241,9,27)" fg:x="122143" fg:w="252"/><text x="99.3824%" y="383.50"></text></g><g><title>std::sync::condvar::Condvar::wait (611 samples, 0.50%)</title><rect x="98.8629%" y="469" width="0.4959%" height="15" fill="rgb(205,117,26)" fg:x="121811" fg:w="611"/><text x="99.1129%" y="479.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (608 samples, 0.49%)</title><rect x="98.8654%" y="453" width="0.4935%" height="15" fill="rgb(209,80,39)" fg:x="121814" fg:w="608"/><text x="99.1154%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (608 samples, 0.49%)</title><rect x="98.8654%" y="437" width="0.4935%" height="15" fill="rgb(239,155,6)" fg:x="121814" fg:w="608"/><text x="99.1154%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (608 samples, 0.49%)</title><rect x="98.8654%" y="421" width="0.4935%" height="15" fill="rgb(212,104,12)" fg:x="121814" fg:w="608"/><text x="99.1154%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (27 samples, 0.02%)</title><rect x="99.3369%" y="405" width="0.0219%" height="15" fill="rgb(234,204,3)" fg:x="122395" fg:w="27"/><text x="99.5869%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (27 samples, 0.02%)</title><rect x="99.3369%" y="389" width="0.0219%" height="15" fill="rgb(251,218,7)" fg:x="122395" fg:w="27"/><text x="99.5869%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (27 samples, 0.02%)</title><rect x="99.3369%" y="373" width="0.0219%" height="15" fill="rgb(221,81,32)" fg:x="122395" fg:w="27"/><text x="99.5869%" y="383.50"></text></g><g><title>parking::Parker::park (760 samples, 0.62%)</title><rect x="98.7623%" y="501" width="0.6168%" height="15" fill="rgb(214,152,26)" fg:x="121687" fg:w="760"/><text x="99.0123%" y="511.50"></text></g><g><title>parking::Inner::park (750 samples, 0.61%)</title><rect x="98.7704%" y="485" width="0.6087%" height="15" fill="rgb(223,22,3)" fg:x="121697" fg:w="750"/><text x="99.0204%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.02%)</title><rect x="99.3588%" y="469" width="0.0203%" height="15" fill="rgb(207,174,7)" fg:x="122422" fg:w="25"/><text x="99.6088%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="99.3605%" y="453" width="0.0187%" height="15" fill="rgb(224,19,52)" fg:x="122424" fg:w="23"/><text x="99.6105%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (23 samples, 0.02%)</title><rect x="99.3605%" y="437" width="0.0187%" height="15" fill="rgb(228,24,14)" fg:x="122424" fg:w="23"/><text x="99.6105%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (23 samples, 0.02%)</title><rect x="99.3605%" y="421" width="0.0187%" height="15" fill="rgb(230,153,43)" fg:x="122424" fg:w="23"/><text x="99.6105%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.02%)</title><rect x="99.3605%" y="405" width="0.0187%" height="15" fill="rgb(231,106,12)" fg:x="122424" fg:w="23"/><text x="99.6105%" y="415.50"></text></g><g><title>parking::Parker::park_timeout (352 samples, 0.29%)</title><rect x="99.3791%" y="501" width="0.2857%" height="15" fill="rgb(215,92,2)" fg:x="122447" fg:w="352"/><text x="99.6291%" y="511.50"></text></g><g><title>parking::Inner::park (306 samples, 0.25%)</title><rect x="99.4165%" y="485" width="0.2484%" height="15" fill="rgb(249,143,25)" fg:x="122493" fg:w="306"/><text x="99.6665%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (294 samples, 0.24%)</title><rect x="99.4262%" y="469" width="0.2386%" height="15" fill="rgb(252,7,35)" fg:x="122505" fg:w="294"/><text x="99.6762%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (294 samples, 0.24%)</title><rect x="99.4262%" y="453" width="0.2386%" height="15" fill="rgb(216,69,40)" fg:x="122505" fg:w="294"/><text x="99.6762%" y="463.50"></text></g><g><title>clone (24,333 samples, 19.75%)</title><rect x="79.9679%" y="901" width="19.7489%" height="15" fill="rgb(240,36,33)" fg:x="98530" fg:w="24333"/><text x="80.2179%" y="911.50">clone</text></g><g><title>start_thread (24,329 samples, 19.75%)</title><rect x="79.9711%" y="885" width="19.7456%" height="15" fill="rgb(231,128,14)" fg:x="98534" fg:w="24329"/><text x="80.2211%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24,328 samples, 19.74%)</title><rect x="79.9719%" y="869" width="19.7448%" height="15" fill="rgb(245,143,14)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="879.50">std::sys::unix::thread::Thread:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,328 samples, 19.74%)</title><rect x="79.9719%" y="853" width="19.7448%" height="15" fill="rgb(222,130,28)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,328 samples, 19.74%)</title><rect x="79.9719%" y="837" width="19.7448%" height="15" fill="rgb(212,10,48)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (24,328 samples, 19.74%)</title><rect x="79.9719%" y="821" width="19.7448%" height="15" fill="rgb(254,118,45)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="831.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (24,328 samples, 19.74%)</title><rect x="79.9719%" y="805" width="19.7448%" height="15" fill="rgb(228,6,45)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="815.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::panic::catch_unwind (24,328 samples, 19.74%)</title><rect x="79.9719%" y="789" width="19.7448%" height="15" fill="rgb(241,18,35)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24,328 samples, 19.74%)</title><rect x="79.9719%" y="773" width="19.7448%" height="15" fill="rgb(227,214,53)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24,328 samples, 19.74%)</title><rect x="79.9719%" y="757" width="19.7448%" height="15" fill="rgb(224,107,51)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24,328 samples, 19.74%)</title><rect x="79.9719%" y="741" width="19.7448%" height="15" fill="rgb(248,60,28)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="751.50">&lt;core::panic::unwind_safe::Asse..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (24,328 samples, 19.74%)</title><rect x="79.9719%" y="725" width="19.7448%" height="15" fill="rgb(249,101,23)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="735.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24,328 samples, 19.74%)</title><rect x="79.9719%" y="709" width="19.7448%" height="15" fill="rgb(228,51,19)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="719.50">std::sys_common::backtrace::__r..</text></g><g><title>core::ops::function::FnOnce::call_once (24,328 samples, 19.74%)</title><rect x="79.9719%" y="693" width="19.7448%" height="15" fill="rgb(213,20,6)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="703.50">core::ops::function::FnOnce::ca..</text></g><g><title>async_global_executor::threading::thread_main_loop (24,328 samples, 19.74%)</title><rect x="79.9719%" y="677" width="19.7448%" height="15" fill="rgb(212,124,10)" fg:x="98535" fg:w="24328"/><text x="80.2219%" y="687.50">async_global_executor::threadin..</text></g><g><title>std::panic::catch_unwind (24,323 samples, 19.74%)</title><rect x="79.9760%" y="661" width="19.7408%" height="15" fill="rgb(248,3,40)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24,323 samples, 19.74%)</title><rect x="79.9760%" y="645" width="19.7408%" height="15" fill="rgb(223,178,23)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24,323 samples, 19.74%)</title><rect x="79.9760%" y="629" width="19.7408%" height="15" fill="rgb(240,132,45)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="639.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (24,323 samples, 19.74%)</title><rect x="79.9760%" y="613" width="19.7408%" height="15" fill="rgb(245,164,36)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="623.50">async_global_executor::threadin..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24,323 samples, 19.74%)</title><rect x="79.9760%" y="597" width="19.7408%" height="15" fill="rgb(231,188,53)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="607.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,323 samples, 19.74%)</title><rect x="79.9760%" y="581" width="19.7408%" height="15" fill="rgb(237,198,39)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="591.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (24,323 samples, 19.74%)</title><rect x="79.9760%" y="565" width="19.7408%" height="15" fill="rgb(223,120,35)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="575.50">async_global_executor::threadin..</text></g><g><title>async_global_executor::reactor::block_on (24,323 samples, 19.74%)</title><rect x="79.9760%" y="549" width="19.7408%" height="15" fill="rgb(253,107,49)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="559.50">async_global_executor::reactor:..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (24,323 samples, 19.74%)</title><rect x="79.9760%" y="533" width="19.7408%" height="15" fill="rgb(216,44,31)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="543.50">async_global_executor::reactor:..</text></g><g><title>async_io::driver::block_on (24,323 samples, 19.74%)</title><rect x="79.9760%" y="517" width="19.7408%" height="15" fill="rgb(253,87,21)" fg:x="98540" fg:w="24323"/><text x="80.2260%" y="527.50">async_io::driver::block_on</text></g><g><title>std::time::Instant::now (59 samples, 0.05%)</title><rect x="99.6689%" y="501" width="0.0479%" height="15" fill="rgb(226,18,2)" fg:x="122804" fg:w="59"/><text x="99.9189%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (59 samples, 0.05%)</title><rect x="99.6689%" y="485" width="0.0479%" height="15" fill="rgb(216,8,46)" fg:x="122804" fg:w="59"/><text x="99.9189%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (59 samples, 0.05%)</title><rect x="99.6689%" y="469" width="0.0479%" height="15" fill="rgb(226,140,39)" fg:x="122804" fg:w="59"/><text x="99.9189%" y="479.50"></text></g><g><title>__clock_gettime (53 samples, 0.04%)</title><rect x="99.6737%" y="453" width="0.0430%" height="15" fill="rgb(221,194,54)" fg:x="122810" fg:w="53"/><text x="99.9237%" y="463.50"></text></g><g><title>__vdso_clock_gettime (42 samples, 0.03%)</title><rect x="99.6827%" y="437" width="0.0341%" height="15" fill="rgb(213,92,11)" fg:x="122821" fg:w="42"/><text x="99.9327%" y="447.50"></text></g><g><title>[[vdso]] (36 samples, 0.03%)</title><rect x="99.6875%" y="421" width="0.0292%" height="15" fill="rgb(229,162,46)" fg:x="122827" fg:w="36"/><text x="99.9375%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (14 samples, 0.01%)</title><rect x="99.7167%" y="901" width="0.0114%" height="15" fill="rgb(214,111,36)" fg:x="122863" fg:w="14"/><text x="99.9667%" y="911.50"></text></g><g><title>tremor_common::time::nanotime (21 samples, 0.02%)</title><rect x="99.7581%" y="901" width="0.0170%" height="15" fill="rgb(207,6,21)" fg:x="122914" fg:w="21"/><text x="100.0081%" y="911.50"></text></g><g><title>async-std/runti (122,896 samples, 99.74%)</title><rect x="0.0536%" y="917" width="99.7435%" height="15" fill="rgb(213,127,38)" fg:x="66" fg:w="122896"/><text x="0.3036%" y="927.50">async-std/runti</text></g><g><title>tremor_runtime::postprocessor::postprocess (13 samples, 0.01%)</title><rect x="99.7865%" y="901" width="0.0106%" height="15" fill="rgb(238,118,32)" fg:x="122949" fg:w="13"/><text x="100.0365%" y="911.50"></text></g><g><title>std::sys::unix::futex::futex_wait (23 samples, 0.02%)</title><rect x="99.8182%" y="581" width="0.0187%" height="15" fill="rgb(240,139,39)" fg:x="122988" fg:w="23"/><text x="100.0682%" y="591.50"></text></g><g><title>syscall (22 samples, 0.02%)</title><rect x="99.8190%" y="565" width="0.0179%" height="15" fill="rgb(235,10,37)" fg:x="122989" fg:w="22"/><text x="100.0690%" y="575.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="99.8182%" y="661" width="0.0219%" height="15" fill="rgb(249,171,38)" fg:x="122988" fg:w="27"/><text x="100.0682%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="99.8182%" y="645" width="0.0219%" height="15" fill="rgb(242,144,32)" fg:x="122988" fg:w="27"/><text x="100.0682%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.02%)</title><rect x="99.8182%" y="629" width="0.0219%" height="15" fill="rgb(217,117,21)" fg:x="122988" fg:w="27"/><text x="100.0682%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (27 samples, 0.02%)</title><rect x="99.8182%" y="613" width="0.0219%" height="15" fill="rgb(249,87,1)" fg:x="122988" fg:w="27"/><text x="100.0682%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (27 samples, 0.02%)</title><rect x="99.8182%" y="597" width="0.0219%" height="15" fill="rgb(248,196,48)" fg:x="122988" fg:w="27"/><text x="100.0682%" y="607.50"></text></g><g><title>tokio-runtime-w (30 samples, 0.02%)</title><rect x="99.8166%" y="917" width="0.0243%" height="15" fill="rgb(251,206,33)" fg:x="122986" fg:w="30"/><text x="100.0666%" y="927.50"></text></g><g><title>clone (28 samples, 0.02%)</title><rect x="99.8182%" y="901" width="0.0227%" height="15" fill="rgb(232,141,28)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="911.50"></text></g><g><title>start_thread (28 samples, 0.02%)</title><rect x="99.8182%" y="885" width="0.0227%" height="15" fill="rgb(209,167,14)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="895.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (28 samples, 0.02%)</title><rect x="99.8182%" y="869" width="0.0227%" height="15" fill="rgb(225,11,50)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.02%)</title><rect x="99.8182%" y="853" width="0.0227%" height="15" fill="rgb(209,50,20)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.02%)</title><rect x="99.8182%" y="837" width="0.0227%" height="15" fill="rgb(212,17,46)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (28 samples, 0.02%)</title><rect x="99.8182%" y="821" width="0.0227%" height="15" fill="rgb(216,101,39)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (28 samples, 0.02%)</title><rect x="99.8182%" y="805" width="0.0227%" height="15" fill="rgb(212,228,48)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="815.50"></text></g><g><title>std::panic::catch_unwind (28 samples, 0.02%)</title><rect x="99.8182%" y="789" width="0.0227%" height="15" fill="rgb(250,6,50)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="799.50"></text></g><g><title>std::panicking::try (28 samples, 0.02%)</title><rect x="99.8182%" y="773" width="0.0227%" height="15" fill="rgb(250,160,48)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="783.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.02%)</title><rect x="99.8182%" y="757" width="0.0227%" height="15" fill="rgb(244,216,33)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 0.02%)</title><rect x="99.8182%" y="741" width="0.0227%" height="15" fill="rgb(207,157,5)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (28 samples, 0.02%)</title><rect x="99.8182%" y="725" width="0.0227%" height="15" fill="rgb(228,199,8)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 0.02%)</title><rect x="99.8182%" y="709" width="0.0227%" height="15" fill="rgb(227,80,20)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="719.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (28 samples, 0.02%)</title><rect x="99.8182%" y="693" width="0.0227%" height="15" fill="rgb(222,9,33)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="703.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (28 samples, 0.02%)</title><rect x="99.8182%" y="677" width="0.0227%" height="15" fill="rgb(239,44,28)" fg:x="122988" fg:w="28"/><text x="100.0682%" y="687.50"></text></g><g><title>[ld-2.31.so] (14 samples, 0.01%)</title><rect x="99.8417%" y="901" width="0.0114%" height="15" fill="rgb(249,187,43)" fg:x="123017" fg:w="14"/><text x="100.0917%" y="911.50"></text></g><g><title>all (123,212 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(216,141,28)" fg:x="0" fg:w="123212"/><text x="0.2500%" y="943.50"></text></g><g><title>tremor-main (196 samples, 0.16%)</title><rect x="99.8409%" y="917" width="0.1591%" height="15" fill="rgb(230,154,53)" fg:x="123016" fg:w="196"/><text x="100.0909%" y="927.50"></text></g><g><title>clone (175 samples, 0.14%)</title><rect x="99.8580%" y="901" width="0.1420%" height="15" fill="rgb(227,82,4)" fg:x="123037" fg:w="175"/><text x="100.1080%" y="911.50"></text></g><g><title>start_thread (26 samples, 0.02%)</title><rect x="99.9789%" y="885" width="0.0211%" height="15" fill="rgb(220,107,16)" fg:x="123186" fg:w="26"/><text x="100.2289%" y="895.50"></text></g></svg></svg>