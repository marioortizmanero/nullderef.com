<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="105147"><g><title>__perf_event_task_sched_in (17 samples, 0.02%)</title><rect x="0.0323%" y="677" width="0.0162%" height="15" fill="rgb(227,0,7)" fg:x="34" fg:w="17"/><text x="0.2823%" y="687.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (16 samples, 0.02%)</title><rect x="0.0333%" y="661" width="0.0152%" height="15" fill="rgb(217,0,24)" fg:x="35" fg:w="16"/><text x="0.2833%" y="671.50"></text></g><g><title>native_write_msr (16 samples, 0.02%)</title><rect x="0.0333%" y="645" width="0.0152%" height="15" fill="rgb(221,193,54)" fg:x="35" fg:w="16"/><text x="0.2833%" y="655.50"></text></g><g><title>finish_task_switch.isra.0 (18 samples, 0.02%)</title><rect x="0.0323%" y="693" width="0.0171%" height="15" fill="rgb(248,212,6)" fg:x="34" fg:w="18"/><text x="0.2823%" y="703.50"></text></g><g><title>__x64_sys_futex (35 samples, 0.03%)</title><rect x="0.0228%" y="789" width="0.0333%" height="15" fill="rgb(208,68,35)" fg:x="24" fg:w="35"/><text x="0.2728%" y="799.50"></text></g><g><title>do_futex (35 samples, 0.03%)</title><rect x="0.0228%" y="773" width="0.0333%" height="15" fill="rgb(232,128,0)" fg:x="24" fg:w="35"/><text x="0.2728%" y="783.50"></text></g><g><title>futex_wait (35 samples, 0.03%)</title><rect x="0.0228%" y="757" width="0.0333%" height="15" fill="rgb(207,160,47)" fg:x="24" fg:w="35"/><text x="0.2728%" y="767.50"></text></g><g><title>futex_wait_queue (31 samples, 0.03%)</title><rect x="0.0266%" y="741" width="0.0295%" height="15" fill="rgb(228,23,34)" fg:x="28" fg:w="31"/><text x="0.2766%" y="751.50"></text></g><g><title>schedule (28 samples, 0.03%)</title><rect x="0.0295%" y="725" width="0.0266%" height="15" fill="rgb(218,30,26)" fg:x="31" fg:w="28"/><text x="0.2795%" y="735.50"></text></g><g><title>__schedule (28 samples, 0.03%)</title><rect x="0.0295%" y="709" width="0.0266%" height="15" fill="rgb(220,122,19)" fg:x="31" fg:w="28"/><text x="0.2795%" y="719.50"></text></g><g><title>std::panic::catch_unwind (57 samples, 0.05%)</title><rect x="0.0057%" y="1061" width="0.0542%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="57"/><text x="0.2557%" y="1071.50"></text></g><g><title>std::panicking::try (57 samples, 0.05%)</title><rect x="0.0057%" y="1045" width="0.0542%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="57"/><text x="0.2557%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (57 samples, 0.05%)</title><rect x="0.0057%" y="1029" width="0.0542%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="57"/><text x="0.2557%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (57 samples, 0.05%)</title><rect x="0.0057%" y="1013" width="0.0542%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="57"/><text x="0.2557%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (57 samples, 0.05%)</title><rect x="0.0057%" y="997" width="0.0542%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="57"/><text x="0.2557%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (57 samples, 0.05%)</title><rect x="0.0057%" y="981" width="0.0542%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="57"/><text x="0.2557%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (57 samples, 0.05%)</title><rect x="0.0057%" y="965" width="0.0542%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="57"/><text x="0.2557%" y="975.50"></text></g><g><title>async_io::driver::main_loop (57 samples, 0.05%)</title><rect x="0.0057%" y="949" width="0.0542%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="57"/><text x="0.2557%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (43 samples, 0.04%)</title><rect x="0.0190%" y="933" width="0.0409%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="43"/><text x="0.2690%" y="943.50"></text></g><g><title>parking::Inner::park (43 samples, 0.04%)</title><rect x="0.0190%" y="917" width="0.0409%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="43"/><text x="0.2690%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (41 samples, 0.04%)</title><rect x="0.0209%" y="901" width="0.0390%" height="15" fill="rgb(249,33,26)" fg:x="22" fg:w="41"/><text x="0.2709%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (41 samples, 0.04%)</title><rect x="0.0209%" y="885" width="0.0390%" height="15" fill="rgb(235,183,28)" fg:x="22" fg:w="41"/><text x="0.2709%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (41 samples, 0.04%)</title><rect x="0.0209%" y="869" width="0.0390%" height="15" fill="rgb(221,5,38)" fg:x="22" fg:w="41"/><text x="0.2709%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (41 samples, 0.04%)</title><rect x="0.0209%" y="853" width="0.0390%" height="15" fill="rgb(247,18,42)" fg:x="22" fg:w="41"/><text x="0.2709%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (40 samples, 0.04%)</title><rect x="0.0219%" y="837" width="0.0380%" height="15" fill="rgb(241,131,45)" fg:x="23" fg:w="40"/><text x="0.2719%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (40 samples, 0.04%)</title><rect x="0.0219%" y="821" width="0.0380%" height="15" fill="rgb(249,31,29)" fg:x="23" fg:w="40"/><text x="0.2719%" y="831.50"></text></g><g><title>do_syscall_64 (39 samples, 0.04%)</title><rect x="0.0228%" y="805" width="0.0371%" height="15" fill="rgb(225,111,53)" fg:x="24" fg:w="39"/><text x="0.2728%" y="815.50"></text></g><g><title>async-io (68 samples, 0.06%)</title><rect x="0.0029%" y="1189" width="0.0647%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="68"/><text x="0.2529%" y="1199.50"></text></g><g><title>__GI___clone (65 samples, 0.06%)</title><rect x="0.0057%" y="1173" width="0.0618%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="65"/><text x="0.2557%" y="1183.50"></text></g><g><title>start_thread (65 samples, 0.06%)</title><rect x="0.0057%" y="1157" width="0.0618%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="65"/><text x="0.2557%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (65 samples, 0.06%)</title><rect x="0.0057%" y="1141" width="0.0618%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="65"/><text x="0.2557%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (65 samples, 0.06%)</title><rect x="0.0057%" y="1125" width="0.0618%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="65"/><text x="0.2557%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (65 samples, 0.06%)</title><rect x="0.0057%" y="1109" width="0.0618%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="65"/><text x="0.2557%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (65 samples, 0.06%)</title><rect x="0.0057%" y="1093" width="0.0618%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="65"/><text x="0.2557%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (65 samples, 0.06%)</title><rect x="0.0057%" y="1077" width="0.0618%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="65"/><text x="0.2557%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="0.4860%" y="1157" width="0.0257%" height="15" fill="rgb(233,36,39)" fg:x="511" fg:w="27"/><text x="0.7360%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (91 samples, 0.09%)</title><rect x="0.5117%" y="1157" width="0.0865%" height="15" fill="rgb(226,3,54)" fg:x="538" fg:w="91"/><text x="0.7617%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (42 samples, 0.04%)</title><rect x="0.5583%" y="1141" width="0.0399%" height="15" fill="rgb(245,192,40)" fg:x="587" fg:w="42"/><text x="0.8083%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="0.5982%" y="1157" width="0.0190%" height="15" fill="rgb(238,167,29)" fg:x="629" fg:w="20"/><text x="0.8482%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (31 samples, 0.03%)</title><rect x="0.7228%" y="1141" width="0.0295%" height="15" fill="rgb(232,182,51)" fg:x="760" fg:w="31"/><text x="0.9728%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (147 samples, 0.14%)</title><rect x="0.6172%" y="1157" width="0.1398%" height="15" fill="rgb(231,60,39)" fg:x="649" fg:w="147"/><text x="0.8672%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (40 samples, 0.04%)</title><rect x="0.8740%" y="1141" width="0.0380%" height="15" fill="rgb(208,69,12)" fg:x="919" fg:w="40"/><text x="1.1240%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.01%)</title><rect x="0.9121%" y="1141" width="0.0143%" height="15" fill="rgb(235,93,37)" fg:x="959" fg:w="15"/><text x="1.1621%" y="1151.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="0.9121%" y="1125" width="0.0143%" height="15" fill="rgb(213,116,39)" fg:x="959" fg:w="15"/><text x="1.1621%" y="1135.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="0.9121%" y="1109" width="0.0143%" height="15" fill="rgb(222,207,29)" fg:x="959" fg:w="15"/><text x="1.1621%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (182 samples, 0.17%)</title><rect x="0.7637%" y="1157" width="0.1731%" height="15" fill="rgb(206,96,30)" fg:x="803" fg:w="182"/><text x="1.0137%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (11 samples, 0.01%)</title><rect x="0.9263%" y="1141" width="0.0105%" height="15" fill="rgb(218,138,4)" fg:x="974" fg:w="11"/><text x="1.1763%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="1.2078%" y="1125" width="0.0105%" height="15" fill="rgb(250,191,14)" fg:x="1270" fg:w="11"/><text x="1.4578%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (111 samples, 0.11%)</title><rect x="1.1317%" y="1141" width="0.1056%" height="15" fill="rgb(239,60,40)" fg:x="1190" fg:w="111"/><text x="1.3817%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (20 samples, 0.02%)</title><rect x="1.2183%" y="1125" width="0.0190%" height="15" fill="rgb(206,27,48)" fg:x="1281" fg:w="20"/><text x="1.4683%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (15 samples, 0.01%)</title><rect x="1.2373%" y="1141" width="0.0143%" height="15" fill="rgb(225,35,8)" fg:x="1301" fg:w="15"/><text x="1.4873%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="1.2373%" y="1125" width="0.0143%" height="15" fill="rgb(250,213,24)" fg:x="1301" fg:w="15"/><text x="1.4873%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="1.2373%" y="1109" width="0.0143%" height="15" fill="rgb(247,123,22)" fg:x="1301" fg:w="15"/><text x="1.4873%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="1.2373%" y="1093" width="0.0143%" height="15" fill="rgb(231,138,38)" fg:x="1301" fg:w="15"/><text x="1.4873%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (14 samples, 0.01%)</title><rect x="1.2383%" y="1077" width="0.0133%" height="15" fill="rgb(231,145,46)" fg:x="1302" fg:w="14"/><text x="1.4883%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="1.3077%" y="1125" width="0.0162%" height="15" fill="rgb(251,118,11)" fg:x="1375" fg:w="17"/><text x="1.5577%" y="1135.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="1.3077%" y="1109" width="0.0162%" height="15" fill="rgb(217,147,25)" fg:x="1375" fg:w="17"/><text x="1.5577%" y="1119.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (14 samples, 0.01%)</title><rect x="1.3239%" y="1125" width="0.0133%" height="15" fill="rgb(247,81,37)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (14 samples, 0.01%)</title><rect x="1.3239%" y="1109" width="0.0133%" height="15" fill="rgb(209,12,38)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (14 samples, 0.01%)</title><rect x="1.3239%" y="1093" width="0.0133%" height="15" fill="rgb(227,1,9)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (14 samples, 0.01%)</title><rect x="1.3239%" y="1077" width="0.0133%" height="15" fill="rgb(248,47,43)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14 samples, 0.01%)</title><rect x="1.3239%" y="1061" width="0.0133%" height="15" fill="rgb(221,10,30)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="1.3239%" y="1045" width="0.0133%" height="15" fill="rgb(210,229,1)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="1.3239%" y="1029" width="0.0133%" height="15" fill="rgb(222,148,37)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="1.3239%" y="1013" width="0.0133%" height="15" fill="rgb(234,67,33)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="1.3239%" y="997" width="0.0133%" height="15" fill="rgb(247,98,35)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="1.3239%" y="981" width="0.0133%" height="15" fill="rgb(247,138,52)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="1.3239%" y="965" width="0.0133%" height="15" fill="rgb(213,79,30)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="1.3239%" y="949" width="0.0133%" height="15" fill="rgb(246,177,23)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="1.3239%" y="933" width="0.0133%" height="15" fill="rgb(230,62,27)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="943.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="1.3239%" y="917" width="0.0133%" height="15" fill="rgb(216,154,8)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="927.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="1.3239%" y="901" width="0.0133%" height="15" fill="rgb(244,35,45)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="1.3239%" y="885" width="0.0133%" height="15" fill="rgb(251,115,12)" fg:x="1392" fg:w="14"/><text x="1.5739%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="1.3372%" y="1125" width="0.0200%" height="15" fill="rgb(240,54,50)" fg:x="1406" fg:w="21"/><text x="1.5872%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (114 samples, 0.11%)</title><rect x="1.2573%" y="1141" width="0.1084%" height="15" fill="rgb(233,84,52)" fg:x="1322" fg:w="114"/><text x="1.5073%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (29 samples, 0.03%)</title><rect x="1.3657%" y="1141" width="0.0276%" height="15" fill="rgb(207,117,47)" fg:x="1436" fg:w="29"/><text x="1.6157%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (36 samples, 0.03%)</title><rect x="1.3933%" y="1141" width="0.0342%" height="15" fill="rgb(249,43,39)" fg:x="1465" fg:w="36"/><text x="1.6433%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (605 samples, 0.58%)</title><rect x="0.9368%" y="1157" width="0.5754%" height="15" fill="rgb(209,38,44)" fg:x="985" fg:w="605"/><text x="1.1868%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (89 samples, 0.08%)</title><rect x="1.4275%" y="1141" width="0.0846%" height="15" fill="rgb(236,212,23)" fg:x="1501" fg:w="89"/><text x="1.6775%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="1.4989%" y="1125" width="0.0133%" height="15" fill="rgb(242,79,21)" fg:x="1576" fg:w="14"/><text x="1.7489%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="1.4989%" y="1109" width="0.0133%" height="15" fill="rgb(211,96,35)" fg:x="1576" fg:w="14"/><text x="1.7489%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (40 samples, 0.04%)</title><rect x="1.6320%" y="1141" width="0.0380%" height="15" fill="rgb(253,215,40)" fg:x="1716" fg:w="40"/><text x="1.8820%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (40 samples, 0.04%)</title><rect x="1.6320%" y="1125" width="0.0380%" height="15" fill="rgb(211,81,21)" fg:x="1716" fg:w="40"/><text x="1.8820%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="1.6320%" y="1109" width="0.0380%" height="15" fill="rgb(208,190,38)" fg:x="1716" fg:w="40"/><text x="1.8820%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="1.6320%" y="1093" width="0.0380%" height="15" fill="rgb(235,213,38)" fg:x="1716" fg:w="40"/><text x="1.8820%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (40 samples, 0.04%)</title><rect x="1.6320%" y="1077" width="0.0380%" height="15" fill="rgb(237,122,38)" fg:x="1716" fg:w="40"/><text x="1.8820%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (193 samples, 0.18%)</title><rect x="1.5122%" y="1157" width="0.1836%" height="15" fill="rgb(244,218,35)" fg:x="1590" fg:w="193"/><text x="1.7622%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (27 samples, 0.03%)</title><rect x="1.6700%" y="1141" width="0.0257%" height="15" fill="rgb(240,68,47)" fg:x="1756" fg:w="27"/><text x="1.9200%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.03%)</title><rect x="1.6700%" y="1125" width="0.0257%" height="15" fill="rgb(210,16,53)" fg:x="1756" fg:w="27"/><text x="1.9200%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.03%)</title><rect x="1.6700%" y="1109" width="0.0257%" height="15" fill="rgb(235,124,12)" fg:x="1756" fg:w="27"/><text x="1.9200%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.03%)</title><rect x="1.6700%" y="1093" width="0.0257%" height="15" fill="rgb(224,169,11)" fg:x="1756" fg:w="27"/><text x="1.9200%" y="1103.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (25 samples, 0.02%)</title><rect x="1.7147%" y="1125" width="0.0238%" height="15" fill="rgb(250,166,2)" fg:x="1803" fg:w="25"/><text x="1.9647%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="1.7214%" y="1109" width="0.0171%" height="15" fill="rgb(242,216,29)" fg:x="1810" fg:w="18"/><text x="1.9714%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (41 samples, 0.04%)</title><rect x="1.7014%" y="1157" width="0.0390%" height="15" fill="rgb(230,116,27)" fg:x="1789" fg:w="41"/><text x="1.9514%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (31 samples, 0.03%)</title><rect x="1.7109%" y="1141" width="0.0295%" height="15" fill="rgb(228,99,48)" fg:x="1799" fg:w="31"/><text x="1.9609%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (53 samples, 0.05%)</title><rect x="1.7404%" y="1157" width="0.0504%" height="15" fill="rgb(253,11,6)" fg:x="1830" fg:w="53"/><text x="1.9904%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (159 samples, 0.15%)</title><rect x="1.7908%" y="1157" width="0.1512%" height="15" fill="rgb(247,143,39)" fg:x="1883" fg:w="159"/><text x="2.0408%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (89 samples, 0.08%)</title><rect x="1.8574%" y="1141" width="0.0846%" height="15" fill="rgb(236,97,10)" fg:x="1953" fg:w="89"/><text x="2.1074%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (61 samples, 0.06%)</title><rect x="1.8840%" y="1125" width="0.0580%" height="15" fill="rgb(233,208,19)" fg:x="1981" fg:w="61"/><text x="2.1340%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.03%)</title><rect x="1.9135%" y="1109" width="0.0285%" height="15" fill="rgb(216,164,2)" fg:x="2012" fg:w="30"/><text x="2.1635%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19 samples, 0.02%)</title><rect x="1.9240%" y="1093" width="0.0181%" height="15" fill="rgb(220,129,5)" fg:x="2023" fg:w="19"/><text x="2.1740%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="1.9240%" y="1077" width="0.0181%" height="15" fill="rgb(242,17,10)" fg:x="2023" fg:w="19"/><text x="2.1740%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.02%)</title><rect x="1.9249%" y="1061" width="0.0171%" height="15" fill="rgb(242,107,0)" fg:x="2024" fg:w="18"/><text x="2.1749%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="1.9249%" y="1045" width="0.0171%" height="15" fill="rgb(251,28,31)" fg:x="2024" fg:w="18"/><text x="2.1749%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="1.9249%" y="1029" width="0.0171%" height="15" fill="rgb(233,223,10)" fg:x="2024" fg:w="18"/><text x="2.1749%" y="1039.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="1.9249%" y="1013" width="0.0171%" height="15" fill="rgb(215,21,27)" fg:x="2024" fg:w="18"/><text x="2.1749%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="1.9249%" y="997" width="0.0171%" height="15" fill="rgb(232,23,21)" fg:x="2024" fg:w="18"/><text x="2.1749%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="1.9420%" y="1157" width="0.0295%" height="15" fill="rgb(244,5,23)" fg:x="2042" fg:w="31"/><text x="2.1920%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="1.9535%" y="1141" width="0.0181%" height="15" fill="rgb(226,81,46)" fg:x="2054" fg:w="19"/><text x="2.2035%" y="1151.50"></text></g><g><title>__GI___pthread_mutex_trylock (12 samples, 0.01%)</title><rect x="1.9877%" y="1157" width="0.0114%" height="15" fill="rgb(247,70,30)" fg:x="2090" fg:w="12"/><text x="2.2377%" y="1167.50"></text></g><g><title>___pthread_mutex_lock (28 samples, 0.03%)</title><rect x="2.0058%" y="1157" width="0.0266%" height="15" fill="rgb(212,68,19)" fg:x="2109" fg:w="28"/><text x="2.2558%" y="1167.50"></text></g><g><title>___pthread_rwlock_unlock (13 samples, 0.01%)</title><rect x="2.0324%" y="1157" width="0.0124%" height="15" fill="rgb(240,187,13)" fg:x="2137" fg:w="13"/><text x="2.2824%" y="1167.50"></text></g><g><title>__clock_gettime_2 (26 samples, 0.02%)</title><rect x="2.0448%" y="1157" width="0.0247%" height="15" fill="rgb(223,113,26)" fg:x="2150" fg:w="26"/><text x="2.2948%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24 samples, 0.02%)</title><rect x="2.0761%" y="1157" width="0.0228%" height="15" fill="rgb(206,192,2)" fg:x="2183" fg:w="24"/><text x="2.3261%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (12 samples, 0.01%)</title><rect x="2.1113%" y="1157" width="0.0114%" height="15" fill="rgb(241,108,4)" fg:x="2220" fg:w="12"/><text x="2.3613%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (14 samples, 0.01%)</title><rect x="2.1246%" y="1157" width="0.0133%" height="15" fill="rgb(247,173,49)" fg:x="2234" fg:w="14"/><text x="2.3746%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="2.1256%" y="1141" width="0.0124%" height="15" fill="rgb(224,114,35)" fg:x="2235" fg:w="13"/><text x="2.3756%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="2.1256%" y="1125" width="0.0124%" height="15" fill="rgb(245,159,27)" fg:x="2235" fg:w="13"/><text x="2.3756%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="2.1256%" y="1109" width="0.0124%" height="15" fill="rgb(245,172,44)" fg:x="2235" fg:w="13"/><text x="2.3756%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="2.1256%" y="1093" width="0.0124%" height="15" fill="rgb(236,23,11)" fg:x="2235" fg:w="13"/><text x="2.3756%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="2.1256%" y="1077" width="0.0124%" height="15" fill="rgb(205,117,38)" fg:x="2235" fg:w="13"/><text x="2.3756%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="2.1256%" y="1061" width="0.0124%" height="15" fill="rgb(237,72,25)" fg:x="2235" fg:w="13"/><text x="2.3756%" y="1071.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="2.1256%" y="1045" width="0.0124%" height="15" fill="rgb(244,70,9)" fg:x="2235" fg:w="13"/><text x="2.3756%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="2.1256%" y="1029" width="0.0124%" height="15" fill="rgb(217,125,39)" fg:x="2235" fg:w="13"/><text x="2.3756%" y="1039.50"></text></g><g><title>async_executor::Ticker::sleep (15 samples, 0.01%)</title><rect x="2.1456%" y="1157" width="0.0143%" height="15" fill="rgb(235,36,10)" fg:x="2256" fg:w="15"/><text x="2.3956%" y="1167.50"></text></g><g><title>async_executor::Ticker::wake (12 samples, 0.01%)</title><rect x="2.1598%" y="1157" width="0.0114%" height="15" fill="rgb(251,123,47)" fg:x="2271" fg:w="12"/><text x="2.4098%" y="1167.50"></text></g><g><title>async_executor::steal (39 samples, 0.04%)</title><rect x="2.1712%" y="1157" width="0.0371%" height="15" fill="rgb(221,13,13)" fg:x="2283" fg:w="39"/><text x="2.4212%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (128 samples, 0.12%)</title><rect x="2.2188%" y="1157" width="0.1217%" height="15" fill="rgb(238,131,9)" fg:x="2333" fg:w="128"/><text x="2.4688%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (63 samples, 0.06%)</title><rect x="2.3405%" y="1157" width="0.0599%" height="15" fill="rgb(211,50,8)" fg:x="2461" fg:w="63"/><text x="2.5905%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (136 samples, 0.13%)</title><rect x="2.4004%" y="1157" width="0.1293%" height="15" fill="rgb(245,182,24)" fg:x="2524" fg:w="136"/><text x="2.6504%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (13 samples, 0.01%)</title><rect x="2.5174%" y="1141" width="0.0124%" height="15" fill="rgb(242,14,37)" fg:x="2647" fg:w="13"/><text x="2.7674%" y="1151.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="2.5174%" y="1125" width="0.0124%" height="15" fill="rgb(246,228,12)" fg:x="2647" fg:w="13"/><text x="2.7674%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (90 samples, 0.09%)</title><rect x="2.5298%" y="1157" width="0.0856%" height="15" fill="rgb(213,55,15)" fg:x="2660" fg:w="90"/><text x="2.7798%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (63 samples, 0.06%)</title><rect x="2.6173%" y="1157" width="0.0599%" height="15" fill="rgb(209,9,3)" fg:x="2752" fg:w="63"/><text x="2.8673%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="2.6487%" y="1141" width="0.0285%" height="15" fill="rgb(230,59,30)" fg:x="2785" fg:w="30"/><text x="2.8987%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="2.6848%" y="1157" width="0.0124%" height="15" fill="rgb(209,121,21)" fg:x="2823" fg:w="13"/><text x="2.9348%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="2.6972%" y="1157" width="0.0228%" height="15" fill="rgb(220,109,13)" fg:x="2836" fg:w="24"/><text x="2.9472%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (24 samples, 0.02%)</title><rect x="2.6972%" y="1141" width="0.0228%" height="15" fill="rgb(232,18,1)" fg:x="2836" fg:w="24"/><text x="2.9472%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="2.7200%" y="1157" width="0.0152%" height="15" fill="rgb(215,41,42)" fg:x="2860" fg:w="16"/><text x="2.9700%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="2.7248%" y="1141" width="0.0105%" height="15" fill="rgb(224,123,36)" fg:x="2865" fg:w="11"/><text x="2.9748%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="2.7352%" y="1157" width="0.0133%" height="15" fill="rgb(240,125,3)" fg:x="2876" fg:w="14"/><text x="2.9852%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="2.7485%" y="1157" width="0.0124%" height="15" fill="rgb(205,98,50)" fg:x="2890" fg:w="13"/><text x="2.9985%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="2.7609%" y="1157" width="0.0295%" height="15" fill="rgb(205,185,37)" fg:x="2903" fg:w="31"/><text x="3.0109%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="2.7980%" y="1157" width="0.0285%" height="15" fill="rgb(238,207,15)" fg:x="2942" fg:w="30"/><text x="3.0480%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (106 samples, 0.10%)</title><rect x="2.8265%" y="1157" width="0.1008%" height="15" fill="rgb(213,199,42)" fg:x="2972" fg:w="106"/><text x="3.0765%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="2.9749%" y="1109" width="0.0105%" height="15" fill="rgb(235,201,11)" fg:x="3128" fg:w="11"/><text x="3.2249%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (11 samples, 0.01%)</title><rect x="2.9749%" y="1093" width="0.0105%" height="15" fill="rgb(207,46,11)" fg:x="3128" fg:w="11"/><text x="3.2249%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="2.9749%" y="1077" width="0.0105%" height="15" fill="rgb(241,35,35)" fg:x="3128" fg:w="11"/><text x="3.2249%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="2.9749%" y="1061" width="0.0105%" height="15" fill="rgb(243,32,47)" fg:x="3128" fg:w="11"/><text x="3.2249%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="2.9749%" y="1125" width="0.0190%" height="15" fill="rgb(247,202,23)" fg:x="3128" fg:w="20"/><text x="3.2249%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (89 samples, 0.08%)</title><rect x="2.9273%" y="1157" width="0.0846%" height="15" fill="rgb(219,102,11)" fg:x="3078" fg:w="89"/><text x="3.1773%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (39 samples, 0.04%)</title><rect x="2.9749%" y="1141" width="0.0371%" height="15" fill="rgb(243,110,44)" fg:x="3128" fg:w="39"/><text x="3.2249%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (19 samples, 0.02%)</title><rect x="2.9939%" y="1125" width="0.0181%" height="15" fill="rgb(222,74,54)" fg:x="3148" fg:w="19"/><text x="3.2439%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (26 samples, 0.02%)</title><rect x="3.0396%" y="1141" width="0.0247%" height="15" fill="rgb(216,99,12)" fg:x="3196" fg:w="26"/><text x="3.2896%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (26 samples, 0.02%)</title><rect x="3.0396%" y="1125" width="0.0247%" height="15" fill="rgb(226,22,26)" fg:x="3196" fg:w="26"/><text x="3.2896%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (26 samples, 0.02%)</title><rect x="3.0396%" y="1109" width="0.0247%" height="15" fill="rgb(217,163,10)" fg:x="3196" fg:w="26"/><text x="3.2896%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="3.0396%" y="1093" width="0.0247%" height="15" fill="rgb(213,25,53)" fg:x="3196" fg:w="26"/><text x="3.2896%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.02%)</title><rect x="3.0396%" y="1077" width="0.0247%" height="15" fill="rgb(252,105,26)" fg:x="3196" fg:w="26"/><text x="3.2896%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.02%)</title><rect x="3.0396%" y="1061" width="0.0247%" height="15" fill="rgb(220,39,43)" fg:x="3196" fg:w="26"/><text x="3.2896%" y="1071.50"></text></g><g><title>__rg_dealloc (26 samples, 0.02%)</title><rect x="3.0396%" y="1045" width="0.0247%" height="15" fill="rgb(229,68,48)" fg:x="3196" fg:w="26"/><text x="3.2896%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (26 samples, 0.02%)</title><rect x="3.0396%" y="1029" width="0.0247%" height="15" fill="rgb(252,8,32)" fg:x="3196" fg:w="26"/><text x="3.2896%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (59 samples, 0.06%)</title><rect x="3.0120%" y="1157" width="0.0561%" height="15" fill="rgb(223,20,43)" fg:x="3167" fg:w="59"/><text x="3.2620%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (68 samples, 0.06%)</title><rect x="3.0681%" y="1157" width="0.0647%" height="15" fill="rgb(229,81,49)" fg:x="3226" fg:w="68"/><text x="3.3181%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="3.1185%" y="1141" width="0.0143%" height="15" fill="rgb(236,28,36)" fg:x="3279" fg:w="15"/><text x="3.3685%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (15 samples, 0.01%)</title><rect x="3.1185%" y="1125" width="0.0143%" height="15" fill="rgb(249,185,26)" fg:x="3279" fg:w="15"/><text x="3.3685%" y="1135.50"></text></g><g><title>event_listener::Event::listen (11 samples, 0.01%)</title><rect x="3.1328%" y="1157" width="0.0105%" height="15" fill="rgb(249,174,33)" fg:x="3294" fg:w="11"/><text x="3.3828%" y="1167.50"></text></g><g><title>event_listener::Event::notify (264 samples, 0.25%)</title><rect x="3.1432%" y="1157" width="0.2511%" height="15" fill="rgb(233,201,37)" fg:x="3305" fg:w="264"/><text x="3.3932%" y="1167.50"></text></g><g><title>event_listener::full_fence (118 samples, 0.11%)</title><rect x="3.2821%" y="1141" width="0.1122%" height="15" fill="rgb(221,78,26)" fg:x="3451" fg:w="118"/><text x="3.5321%" y="1151.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (48 samples, 0.05%)</title><rect x="3.4010%" y="1157" width="0.0457%" height="15" fill="rgb(250,127,30)" fg:x="3576" fg:w="48"/><text x="3.6510%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (40 samples, 0.04%)</title><rect x="3.4466%" y="1157" width="0.0380%" height="15" fill="rgb(230,49,44)" fg:x="3624" fg:w="40"/><text x="3.6966%" y="1167.50"></text></g><g><title>parking::Inner::park (18 samples, 0.02%)</title><rect x="3.4846%" y="1157" width="0.0171%" height="15" fill="rgb(229,67,23)" fg:x="3664" fg:w="18"/><text x="3.7346%" y="1167.50"></text></g><g><title>polling::epoll::Poller::modify (11 samples, 0.01%)</title><rect x="3.5056%" y="1157" width="0.0105%" height="15" fill="rgb(249,83,47)" fg:x="3686" fg:w="11"/><text x="3.7556%" y="1167.50"></text></g><g><title>rust_alloc (65 samples, 0.06%)</title><rect x="3.5160%" y="1157" width="0.0618%" height="15" fill="rgb(215,43,3)" fg:x="3697" fg:w="65"/><text x="3.7660%" y="1167.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="3.5778%" y="1157" width="0.0143%" height="15" fill="rgb(238,154,13)" fg:x="3762" fg:w="15"/><text x="3.8278%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (11 samples, 0.01%)</title><rect x="3.5817%" y="1141" width="0.0105%" height="15" fill="rgb(219,56,2)" fg:x="3766" fg:w="11"/><text x="3.8317%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (11 samples, 0.01%)</title><rect x="3.5817%" y="1125" width="0.0105%" height="15" fill="rgb(233,0,4)" fg:x="3766" fg:w="11"/><text x="3.8317%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (11 samples, 0.01%)</title><rect x="3.5817%" y="1109" width="0.0105%" height="15" fill="rgb(235,30,7)" fg:x="3766" fg:w="11"/><text x="3.8317%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (11 samples, 0.01%)</title><rect x="3.5817%" y="1093" width="0.0105%" height="15" fill="rgb(250,79,13)" fg:x="3766" fg:w="11"/><text x="3.8317%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (11 samples, 0.01%)</title><rect x="3.5817%" y="1077" width="0.0105%" height="15" fill="rgb(211,146,34)" fg:x="3766" fg:w="11"/><text x="3.8317%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="3.5817%" y="1061" width="0.0105%" height="15" fill="rgb(228,22,38)" fg:x="3766" fg:w="11"/><text x="3.8317%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="3.5817%" y="1045" width="0.0105%" height="15" fill="rgb(235,168,5)" fg:x="3766" fg:w="11"/><text x="3.8317%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="3.5817%" y="1029" width="0.0105%" height="15" fill="rgb(221,155,16)" fg:x="3766" fg:w="11"/><text x="3.8317%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="3.6168%" y="1157" width="0.0171%" height="15" fill="rgb(215,215,53)" fg:x="3803" fg:w="18"/><text x="3.8668%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (42 samples, 0.04%)</title><rect x="3.6349%" y="1157" width="0.0399%" height="15" fill="rgb(223,4,10)" fg:x="3822" fg:w="42"/><text x="3.8849%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.01%)</title><rect x="3.6749%" y="1157" width="0.0143%" height="15" fill="rgb(234,103,6)" fg:x="3864" fg:w="15"/><text x="3.9249%" y="1167.50"></text></g><g><title>tremor_common::time::nanotime (92 samples, 0.09%)</title><rect x="3.6891%" y="1157" width="0.0875%" height="15" fill="rgb(227,97,0)" fg:x="3879" fg:w="92"/><text x="3.9391%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (91 samples, 0.09%)</title><rect x="3.6901%" y="1141" width="0.0865%" height="15" fill="rgb(234,150,53)" fg:x="3880" fg:w="91"/><text x="3.9401%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (91 samples, 0.09%)</title><rect x="3.6901%" y="1125" width="0.0865%" height="15" fill="rgb(228,201,54)" fg:x="3880" fg:w="91"/><text x="3.9401%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (91 samples, 0.09%)</title><rect x="3.6901%" y="1109" width="0.0865%" height="15" fill="rgb(222,22,37)" fg:x="3880" fg:w="91"/><text x="3.9401%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (18 samples, 0.02%)</title><rect x="3.7766%" y="1157" width="0.0171%" height="15" fill="rgb(237,53,32)" fg:x="3971" fg:w="18"/><text x="4.0266%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="3.8841%" y="1141" width="0.0200%" height="15" fill="rgb(233,25,53)" fg:x="4084" fg:w="21"/><text x="4.1341%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (31 samples, 0.03%)</title><rect x="3.9041%" y="1141" width="0.0295%" height="15" fill="rgb(210,40,34)" fg:x="4105" fg:w="31"/><text x="4.1541%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (31 samples, 0.03%)</title><rect x="3.9041%" y="1125" width="0.0295%" height="15" fill="rgb(241,220,44)" fg:x="4105" fg:w="31"/><text x="4.1541%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="3.9193%" y="1109" width="0.0143%" height="15" fill="rgb(235,28,35)" fg:x="4121" fg:w="15"/><text x="4.1693%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="3.9193%" y="1093" width="0.0143%" height="15" fill="rgb(210,56,17)" fg:x="4121" fg:w="15"/><text x="4.1693%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="3.9193%" y="1077" width="0.0143%" height="15" fill="rgb(224,130,29)" fg:x="4121" fg:w="15"/><text x="4.1693%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="3.9193%" y="1061" width="0.0143%" height="15" fill="rgb(235,212,8)" fg:x="4121" fg:w="15"/><text x="4.1693%" y="1071.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="3.9193%" y="1045" width="0.0143%" height="15" fill="rgb(223,33,50)" fg:x="4121" fg:w="15"/><text x="4.1693%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="3.9193%" y="1029" width="0.0143%" height="15" fill="rgb(219,149,13)" fg:x="4121" fg:w="15"/><text x="4.1693%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (13 samples, 0.01%)</title><rect x="3.9383%" y="1141" width="0.0124%" height="15" fill="rgb(250,156,29)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.9383%" y="1125" width="0.0124%" height="15" fill="rgb(216,193,19)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.01%)</title><rect x="3.9383%" y="1109" width="0.0124%" height="15" fill="rgb(216,135,14)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="3.9383%" y="1093" width="0.0124%" height="15" fill="rgb(241,47,5)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="3.9383%" y="1077" width="0.0124%" height="15" fill="rgb(233,42,35)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.9383%" y="1061" width="0.0124%" height="15" fill="rgb(231,13,6)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="3.9383%" y="1045" width="0.0124%" height="15" fill="rgb(207,181,40)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="3.9383%" y="1029" width="0.0124%" height="15" fill="rgb(254,173,49)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1039.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="3.9383%" y="1013" width="0.0124%" height="15" fill="rgb(221,1,38)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="3.9383%" y="997" width="0.0124%" height="15" fill="rgb(206,124,46)" fg:x="4141" fg:w="13"/><text x="4.1883%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="3.9507%" y="1141" width="0.0152%" height="15" fill="rgb(249,21,11)" fg:x="4154" fg:w="16"/><text x="4.2007%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (16 samples, 0.02%)</title><rect x="3.9507%" y="1125" width="0.0152%" height="15" fill="rgb(222,201,40)" fg:x="4154" fg:w="16"/><text x="4.2007%" y="1135.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="3.9526%" y="1109" width="0.0133%" height="15" fill="rgb(235,61,29)" fg:x="4156" fg:w="14"/><text x="4.2026%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="3.9526%" y="1093" width="0.0133%" height="15" fill="rgb(219,207,3)" fg:x="4156" fg:w="14"/><text x="4.2026%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="3.9526%" y="1077" width="0.0133%" height="15" fill="rgb(222,56,46)" fg:x="4156" fg:w="14"/><text x="4.2026%" y="1087.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="3.9526%" y="1061" width="0.0133%" height="15" fill="rgb(239,76,54)" fg:x="4156" fg:w="14"/><text x="4.2026%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="3.9526%" y="1045" width="0.0133%" height="15" fill="rgb(231,124,27)" fg:x="4156" fg:w="14"/><text x="4.2026%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (209 samples, 0.20%)</title><rect x="3.7937%" y="1157" width="0.1988%" height="15" fill="rgb(249,195,6)" fg:x="3989" fg:w="209"/><text x="4.0437%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (28 samples, 0.03%)</title><rect x="3.9659%" y="1141" width="0.0266%" height="15" fill="rgb(237,174,47)" fg:x="4170" fg:w="28"/><text x="4.2159%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (13 samples, 0.01%)</title><rect x="3.9801%" y="1125" width="0.0124%" height="15" fill="rgb(206,201,31)" fg:x="4185" fg:w="13"/><text x="4.2301%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="3.9801%" y="1109" width="0.0124%" height="15" fill="rgb(231,57,52)" fg:x="4185" fg:w="13"/><text x="4.2301%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.9801%" y="1093" width="0.0124%" height="15" fill="rgb(248,177,22)" fg:x="4185" fg:w="13"/><text x="4.2301%" y="1103.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="3.9801%" y="1077" width="0.0124%" height="15" fill="rgb(215,211,37)" fg:x="4185" fg:w="13"/><text x="4.2301%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="3.9801%" y="1061" width="0.0124%" height="15" fill="rgb(241,128,51)" fg:x="4185" fg:w="13"/><text x="4.2301%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (67 samples, 0.06%)</title><rect x="4.0115%" y="1141" width="0.0637%" height="15" fill="rgb(227,165,31)" fg:x="4218" fg:w="67"/><text x="4.2615%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (57 samples, 0.05%)</title><rect x="4.0210%" y="1125" width="0.0542%" height="15" fill="rgb(228,167,24)" fg:x="4228" fg:w="57"/><text x="4.2710%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="4.0752%" y="1141" width="0.0124%" height="15" fill="rgb(228,143,12)" fg:x="4285" fg:w="13"/><text x="4.3252%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (120 samples, 0.11%)</title><rect x="3.9925%" y="1157" width="0.1141%" height="15" fill="rgb(249,149,8)" fg:x="4198" fg:w="120"/><text x="4.2425%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="4.0924%" y="1141" width="0.0143%" height="15" fill="rgb(243,35,44)" fg:x="4303" fg:w="15"/><text x="4.3424%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (15 samples, 0.01%)</title><rect x="4.0924%" y="1125" width="0.0143%" height="15" fill="rgb(246,89,9)" fg:x="4303" fg:w="15"/><text x="4.3424%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (35 samples, 0.03%)</title><rect x="4.1066%" y="1157" width="0.0333%" height="15" fill="rgb(233,213,13)" fg:x="4318" fg:w="35"/><text x="4.3566%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (12 samples, 0.01%)</title><rect x="4.1437%" y="1157" width="0.0114%" height="15" fill="rgb(233,141,41)" fg:x="4357" fg:w="12"/><text x="4.3937%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (38 samples, 0.04%)</title><rect x="4.1551%" y="1157" width="0.0361%" height="15" fill="rgb(239,167,4)" fg:x="4369" fg:w="38"/><text x="4.4051%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (23 samples, 0.02%)</title><rect x="4.1913%" y="1157" width="0.0219%" height="15" fill="rgb(209,217,16)" fg:x="4407" fg:w="23"/><text x="4.4413%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="4.3006%" y="1141" width="0.0133%" height="15" fill="rgb(219,88,35)" fg:x="4522" fg:w="14"/><text x="4.5506%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="4.3330%" y="1109" width="0.0162%" height="15" fill="rgb(220,193,23)" fg:x="4556" fg:w="17"/><text x="4.5830%" y="1119.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="4.3330%" y="1093" width="0.0162%" height="15" fill="rgb(230,90,52)" fg:x="4556" fg:w="17"/><text x="4.5830%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (148 samples, 0.14%)</title><rect x="4.2131%" y="1157" width="0.1408%" height="15" fill="rgb(252,106,19)" fg:x="4430" fg:w="148"/><text x="4.4631%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.04%)</title><rect x="4.3140%" y="1141" width="0.0399%" height="15" fill="rgb(206,74,20)" fg:x="4536" fg:w="42"/><text x="4.5640%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (42 samples, 0.04%)</title><rect x="4.3140%" y="1125" width="0.0399%" height="15" fill="rgb(230,138,44)" fg:x="4536" fg:w="42"/><text x="4.5640%" y="1135.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (59 samples, 0.06%)</title><rect x="4.3539%" y="1157" width="0.0561%" height="15" fill="rgb(235,182,43)" fg:x="4578" fg:w="59"/><text x="4.6039%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="4.3996%" y="1141" width="0.0105%" height="15" fill="rgb(242,16,51)" fg:x="4626" fg:w="11"/><text x="4.6496%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="4.3996%" y="1125" width="0.0105%" height="15" fill="rgb(248,9,4)" fg:x="4626" fg:w="11"/><text x="4.6496%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="4.3996%" y="1109" width="0.0105%" height="15" fill="rgb(210,31,22)" fg:x="4626" fg:w="11"/><text x="4.6496%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="4.3996%" y="1093" width="0.0105%" height="15" fill="rgb(239,54,39)" fg:x="4626" fg:w="11"/><text x="4.6496%" y="1103.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="4.3996%" y="1077" width="0.0105%" height="15" fill="rgb(230,99,41)" fg:x="4626" fg:w="11"/><text x="4.6496%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="4.3996%" y="1061" width="0.0105%" height="15" fill="rgb(253,106,12)" fg:x="4626" fg:w="11"/><text x="4.6496%" y="1071.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (52 samples, 0.05%)</title><rect x="4.4100%" y="1157" width="0.0495%" height="15" fill="rgb(213,46,41)" fg:x="4637" fg:w="52"/><text x="4.6600%" y="1167.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (67 samples, 0.06%)</title><rect x="4.4595%" y="1157" width="0.0637%" height="15" fill="rgb(215,133,35)" fg:x="4689" fg:w="67"/><text x="4.7095%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (20 samples, 0.02%)</title><rect x="4.5042%" y="1141" width="0.0190%" height="15" fill="rgb(213,28,5)" fg:x="4736" fg:w="20"/><text x="4.7542%" y="1151.50"></text></g><g><title>[anon] (4,262 samples, 4.05%)</title><rect x="0.4831%" y="1173" width="4.0534%" height="15" fill="rgb(215,77,49)" fg:x="508" fg:w="4262"/><text x="0.7331%" y="1183.50">[ano..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (11 samples, 0.01%)</title><rect x="4.5260%" y="1157" width="0.0105%" height="15" fill="rgb(248,100,22)" fg:x="4759" fg:w="11"/><text x="4.7760%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (22 samples, 0.02%)</title><rect x="4.5441%" y="1157" width="0.0209%" height="15" fill="rgb(208,67,9)" fg:x="4778" fg:w="22"/><text x="4.7941%" y="1167.50"></text></g><g><title>[libc.so.6] (40 samples, 0.04%)</title><rect x="4.5365%" y="1173" width="0.0380%" height="15" fill="rgb(219,133,21)" fg:x="4770" fg:w="40"/><text x="4.7865%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (72 samples, 0.07%)</title><rect x="4.5850%" y="1157" width="0.0685%" height="15" fill="rgb(246,46,29)" fg:x="4821" fg:w="72"/><text x="4.8350%" y="1167.50"></text></g><g><title>[tremor-connectors-laptop] (84 samples, 0.08%)</title><rect x="4.5745%" y="1173" width="0.0799%" height="15" fill="rgb(246,185,52)" fg:x="4810" fg:w="84"/><text x="4.8245%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="4.6544%" y="1157" width="0.0285%" height="15" fill="rgb(252,136,11)" fg:x="4894" fg:w="30"/><text x="4.9044%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="4.7781%" y="1013" width="0.0181%" height="15" fill="rgb(219,138,53)" fg:x="5024" fg:w="19"/><text x="5.0281%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="4.7781%" y="997" width="0.0181%" height="15" fill="rgb(211,51,23)" fg:x="5024" fg:w="19"/><text x="5.0281%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="4.7781%" y="981" width="0.0181%" height="15" fill="rgb(247,221,28)" fg:x="5024" fg:w="19"/><text x="5.0281%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="4.7781%" y="965" width="0.0181%" height="15" fill="rgb(251,222,45)" fg:x="5024" fg:w="19"/><text x="5.0281%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="4.7781%" y="949" width="0.0181%" height="15" fill="rgb(217,162,53)" fg:x="5024" fg:w="19"/><text x="5.0281%" y="959.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="4.7781%" y="933" width="0.0181%" height="15" fill="rgb(229,93,14)" fg:x="5024" fg:w="19"/><text x="5.0281%" y="943.50"></text></g><g><title>__rg_alloc (19 samples, 0.02%)</title><rect x="4.7781%" y="917" width="0.0181%" height="15" fill="rgb(209,67,49)" fg:x="5024" fg:w="19"/><text x="5.0281%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (19 samples, 0.02%)</title><rect x="4.7781%" y="901" width="0.0181%" height="15" fill="rgb(213,87,29)" fg:x="5024" fg:w="19"/><text x="5.0281%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="4.7781%" y="1093" width="0.0342%" height="15" fill="rgb(205,151,52)" fg:x="5024" fg:w="36"/><text x="5.0281%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="4.7781%" y="1077" width="0.0342%" height="15" fill="rgb(253,215,39)" fg:x="5024" fg:w="36"/><text x="5.0281%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36 samples, 0.03%)</title><rect x="4.7781%" y="1061" width="0.0342%" height="15" fill="rgb(221,220,41)" fg:x="5024" fg:w="36"/><text x="5.0281%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (36 samples, 0.03%)</title><rect x="4.7781%" y="1045" width="0.0342%" height="15" fill="rgb(218,133,21)" fg:x="5024" fg:w="36"/><text x="5.0281%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36 samples, 0.03%)</title><rect x="4.7781%" y="1029" width="0.0342%" height="15" fill="rgb(221,193,43)" fg:x="5024" fg:w="36"/><text x="5.0281%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.02%)</title><rect x="4.7961%" y="1013" width="0.0162%" height="15" fill="rgb(240,128,52)" fg:x="5043" fg:w="17"/><text x="5.0461%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="4.7961%" y="997" width="0.0162%" height="15" fill="rgb(253,114,12)" fg:x="5043" fg:w="17"/><text x="5.0461%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (160 samples, 0.15%)</title><rect x="4.6830%" y="1157" width="0.1522%" height="15" fill="rgb(215,223,47)" fg:x="4924" fg:w="160"/><text x="4.9330%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (60 samples, 0.06%)</title><rect x="4.7781%" y="1141" width="0.0571%" height="15" fill="rgb(248,225,23)" fg:x="5024" fg:w="60"/><text x="5.0281%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (60 samples, 0.06%)</title><rect x="4.7781%" y="1125" width="0.0571%" height="15" fill="rgb(250,108,0)" fg:x="5024" fg:w="60"/><text x="5.0281%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (60 samples, 0.06%)</title><rect x="4.7781%" y="1109" width="0.0571%" height="15" fill="rgb(228,208,7)" fg:x="5024" fg:w="60"/><text x="5.0281%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="4.8123%" y="1093" width="0.0228%" height="15" fill="rgb(244,45,10)" fg:x="5060" fg:w="24"/><text x="5.0623%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="4.8123%" y="1077" width="0.0228%" height="15" fill="rgb(207,125,25)" fg:x="5060" fg:w="24"/><text x="5.0623%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.02%)</title><rect x="4.8123%" y="1061" width="0.0228%" height="15" fill="rgb(210,195,18)" fg:x="5060" fg:w="24"/><text x="5.0623%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="4.8123%" y="1045" width="0.0228%" height="15" fill="rgb(249,80,12)" fg:x="5060" fg:w="24"/><text x="5.0623%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="4.8123%" y="1029" width="0.0228%" height="15" fill="rgb(221,65,9)" fg:x="5060" fg:w="24"/><text x="5.0623%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="4.8123%" y="1013" width="0.0228%" height="15" fill="rgb(235,49,36)" fg:x="5060" fg:w="24"/><text x="5.0623%" y="1023.50"></text></g><g><title>__rg_alloc (24 samples, 0.02%)</title><rect x="4.8123%" y="997" width="0.0228%" height="15" fill="rgb(225,32,20)" fg:x="5060" fg:w="24"/><text x="5.0623%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (24 samples, 0.02%)</title><rect x="4.8123%" y="981" width="0.0228%" height="15" fill="rgb(215,141,46)" fg:x="5060" fg:w="24"/><text x="5.0623%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (206 samples, 0.20%)</title><rect x="4.8446%" y="1157" width="0.1959%" height="15" fill="rgb(250,160,47)" fg:x="5094" fg:w="206"/><text x="5.0946%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (29 samples, 0.03%)</title><rect x="5.0130%" y="1141" width="0.0276%" height="15" fill="rgb(216,222,40)" fg:x="5271" fg:w="29"/><text x="5.2630%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.0406%" y="1157" width="0.0228%" height="15" fill="rgb(234,217,39)" fg:x="5300" fg:w="24"/><text x="5.2906%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (16 samples, 0.02%)</title><rect x="5.2603%" y="1141" width="0.0152%" height="15" fill="rgb(207,178,40)" fg:x="5531" fg:w="16"/><text x="5.5103%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="5.2916%" y="1029" width="0.0181%" height="15" fill="rgb(221,136,13)" fg:x="5564" fg:w="19"/><text x="5.5416%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="5.2916%" y="1013" width="0.0181%" height="15" fill="rgb(249,199,10)" fg:x="5564" fg:w="19"/><text x="5.5416%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="5.2916%" y="997" width="0.0181%" height="15" fill="rgb(249,222,13)" fg:x="5564" fg:w="19"/><text x="5.5416%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="5.2916%" y="981" width="0.0181%" height="15" fill="rgb(244,185,38)" fg:x="5564" fg:w="19"/><text x="5.5416%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="5.2916%" y="965" width="0.0181%" height="15" fill="rgb(236,202,9)" fg:x="5564" fg:w="19"/><text x="5.5416%" y="975.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="5.2916%" y="949" width="0.0181%" height="15" fill="rgb(250,229,37)" fg:x="5564" fg:w="19"/><text x="5.5416%" y="959.50"></text></g><g><title>__rg_alloc (19 samples, 0.02%)</title><rect x="5.2916%" y="933" width="0.0181%" height="15" fill="rgb(206,174,23)" fg:x="5564" fg:w="19"/><text x="5.5416%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (19 samples, 0.02%)</title><rect x="5.2916%" y="917" width="0.0181%" height="15" fill="rgb(211,33,43)" fg:x="5564" fg:w="19"/><text x="5.5416%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="5.2755%" y="1125" width="0.0533%" height="15" fill="rgb(245,58,50)" fg:x="5547" fg:w="56"/><text x="5.5255%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="5.2916%" y="1109" width="0.0371%" height="15" fill="rgb(244,68,36)" fg:x="5564" fg:w="39"/><text x="5.5416%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="5.2916%" y="1093" width="0.0371%" height="15" fill="rgb(232,229,15)" fg:x="5564" fg:w="39"/><text x="5.5416%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.04%)</title><rect x="5.2916%" y="1077" width="0.0371%" height="15" fill="rgb(254,30,23)" fg:x="5564" fg:w="39"/><text x="5.5416%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.04%)</title><rect x="5.2916%" y="1061" width="0.0371%" height="15" fill="rgb(235,160,14)" fg:x="5564" fg:w="39"/><text x="5.5416%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.04%)</title><rect x="5.2916%" y="1045" width="0.0371%" height="15" fill="rgb(212,155,44)" fg:x="5564" fg:w="39"/><text x="5.5416%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20 samples, 0.02%)</title><rect x="5.3097%" y="1029" width="0.0190%" height="15" fill="rgb(226,2,50)" fg:x="5583" fg:w="20"/><text x="5.5597%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="5.3097%" y="1013" width="0.0190%" height="15" fill="rgb(234,177,6)" fg:x="5583" fg:w="20"/><text x="5.5597%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="5.3287%" y="1045" width="0.0105%" height="15" fill="rgb(217,24,9)" fg:x="5603" fg:w="11"/><text x="5.5787%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="5.3287%" y="1029" width="0.0105%" height="15" fill="rgb(220,13,46)" fg:x="5603" fg:w="11"/><text x="5.5787%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="5.3287%" y="1013" width="0.0105%" height="15" fill="rgb(239,221,27)" fg:x="5603" fg:w="11"/><text x="5.5787%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="5.3287%" y="997" width="0.0105%" height="15" fill="rgb(222,198,25)" fg:x="5603" fg:w="11"/><text x="5.5787%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="5.3287%" y="981" width="0.0105%" height="15" fill="rgb(211,99,13)" fg:x="5603" fg:w="11"/><text x="5.5787%" y="991.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="5.3287%" y="965" width="0.0105%" height="15" fill="rgb(232,111,31)" fg:x="5603" fg:w="11"/><text x="5.5787%" y="975.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="5.3287%" y="949" width="0.0105%" height="15" fill="rgb(245,82,37)" fg:x="5603" fg:w="11"/><text x="5.5787%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="5.3287%" y="933" width="0.0105%" height="15" fill="rgb(227,149,46)" fg:x="5603" fg:w="11"/><text x="5.5787%" y="943.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (71 samples, 0.07%)</title><rect x="5.2755%" y="1141" width="0.0675%" height="15" fill="rgb(218,36,50)" fg:x="5547" fg:w="71"/><text x="5.5255%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (15 samples, 0.01%)</title><rect x="5.3287%" y="1125" width="0.0143%" height="15" fill="rgb(226,80,48)" fg:x="5603" fg:w="15"/><text x="5.5787%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="5.3287%" y="1109" width="0.0143%" height="15" fill="rgb(238,224,15)" fg:x="5603" fg:w="15"/><text x="5.5787%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="5.3287%" y="1093" width="0.0143%" height="15" fill="rgb(241,136,10)" fg:x="5603" fg:w="15"/><text x="5.5787%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="5.3287%" y="1077" width="0.0143%" height="15" fill="rgb(208,32,45)" fg:x="5603" fg:w="15"/><text x="5.5787%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="5.3287%" y="1061" width="0.0143%" height="15" fill="rgb(207,135,9)" fg:x="5603" fg:w="15"/><text x="5.5787%" y="1071.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (33 samples, 0.03%)</title><rect x="5.3430%" y="1141" width="0.0314%" height="15" fill="rgb(206,86,44)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3430%" y="1125" width="0.0314%" height="15" fill="rgb(245,177,15)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3430%" y="1109" width="0.0314%" height="15" fill="rgb(206,64,50)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="5.3430%" y="1093" width="0.0314%" height="15" fill="rgb(234,36,40)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (33 samples, 0.03%)</title><rect x="5.3430%" y="1077" width="0.0314%" height="15" fill="rgb(213,64,8)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (33 samples, 0.03%)</title><rect x="5.3430%" y="1061" width="0.0314%" height="15" fill="rgb(210,75,36)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3430%" y="1045" width="0.0314%" height="15" fill="rgb(229,88,21)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3430%" y="1029" width="0.0314%" height="15" fill="rgb(252,204,47)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (33 samples, 0.03%)</title><rect x="5.3430%" y="1013" width="0.0314%" height="15" fill="rgb(208,77,27)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3430%" y="997" width="0.0314%" height="15" fill="rgb(221,76,26)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (33 samples, 0.03%)</title><rect x="5.3430%" y="981" width="0.0314%" height="15" fill="rgb(225,139,18)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="5.3430%" y="965" width="0.0314%" height="15" fill="rgb(230,137,11)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.03%)</title><rect x="5.3430%" y="949" width="0.0314%" height="15" fill="rgb(212,28,1)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (33 samples, 0.03%)</title><rect x="5.3430%" y="933" width="0.0314%" height="15" fill="rgb(248,164,17)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (33 samples, 0.03%)</title><rect x="5.3430%" y="917" width="0.0314%" height="15" fill="rgb(222,171,42)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3430%" y="901" width="0.0314%" height="15" fill="rgb(243,84,45)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (33 samples, 0.03%)</title><rect x="5.3430%" y="885" width="0.0314%" height="15" fill="rgb(252,49,23)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="5.3430%" y="869" width="0.0314%" height="15" fill="rgb(215,19,7)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (33 samples, 0.03%)</title><rect x="5.3430%" y="853" width="0.0314%" height="15" fill="rgb(238,81,41)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (33 samples, 0.03%)</title><rect x="5.3430%" y="837" width="0.0314%" height="15" fill="rgb(210,199,37)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="5.3430%" y="821" width="0.0314%" height="15" fill="rgb(244,192,49)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (33 samples, 0.03%)</title><rect x="5.3430%" y="805" width="0.0314%" height="15" fill="rgb(226,211,11)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="5.3430%" y="789" width="0.0314%" height="15" fill="rgb(236,162,54)" fg:x="5618" fg:w="33"/><text x="5.5930%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.4048%" y="949" width="0.0124%" height="15" fill="rgb(220,229,9)" fg:x="5683" fg:w="13"/><text x="5.6548%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (393 samples, 0.37%)</title><rect x="5.4172%" y="949" width="0.3738%" height="15" fill="rgb(250,87,22)" fg:x="5696" fg:w="393"/><text x="5.6672%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.02%)</title><rect x="5.9146%" y="933" width="0.0171%" height="15" fill="rgb(239,43,17)" fg:x="6219" fg:w="18"/><text x="6.1646%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (968 samples, 0.92%)</title><rect x="5.9317%" y="933" width="0.9206%" height="15" fill="rgb(231,177,25)" fg:x="6237" fg:w="968"/><text x="6.1817%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (22 samples, 0.02%)</title><rect x="6.8523%" y="917" width="0.0209%" height="15" fill="rgb(219,179,1)" fg:x="7205" fg:w="22"/><text x="7.1023%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1141" width="1.5055%" height="15" fill="rgb(238,219,53)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1125" width="1.5055%" height="15" fill="rgb(232,167,36)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1109" width="1.5055%" height="15" fill="rgb(244,19,51)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1093" width="1.5055%" height="15" fill="rgb(224,6,22)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1077" width="1.5055%" height="15" fill="rgb(224,145,5)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1061" width="1.5055%" height="15" fill="rgb(234,130,49)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1045" width="1.5055%" height="15" fill="rgb(254,6,2)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1029" width="1.5055%" height="15" fill="rgb(208,96,46)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,583 samples, 1.51%)</title><rect x="5.3744%" y="1013" width="1.5055%" height="15" fill="rgb(239,3,39)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,583 samples, 1.51%)</title><rect x="5.3744%" y="997" width="1.5055%" height="15" fill="rgb(233,210,1)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,583 samples, 1.51%)</title><rect x="5.3744%" y="981" width="1.5055%" height="15" fill="rgb(244,137,37)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,583 samples, 1.51%)</title><rect x="5.3744%" y="965" width="1.5055%" height="15" fill="rgb(240,136,2)" fg:x="5651" fg:w="1583"/><text x="5.6244%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,145 samples, 1.09%)</title><rect x="5.7909%" y="949" width="1.0890%" height="15" fill="rgb(239,18,37)" fg:x="6089" fg:w="1145"/><text x="6.0409%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (29 samples, 0.03%)</title><rect x="6.8523%" y="933" width="0.0276%" height="15" fill="rgb(218,185,22)" fg:x="7205" fg:w="29"/><text x="7.1023%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,912 samples, 1.82%)</title><rect x="5.0634%" y="1157" width="1.8184%" height="15" fill="rgb(225,218,4)" fg:x="5324" fg:w="1912"/><text x="5.3134%" y="1167.50">&lt;..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="6.8818%" y="1157" width="0.0152%" height="15" fill="rgb(230,182,32)" fg:x="7236" fg:w="16"/><text x="7.1318%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (16 samples, 0.02%)</title><rect x="6.9008%" y="1157" width="0.0152%" height="15" fill="rgb(242,56,43)" fg:x="7256" fg:w="16"/><text x="7.1508%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (75 samples, 0.07%)</title><rect x="6.9160%" y="1157" width="0.0713%" height="15" fill="rgb(233,99,24)" fg:x="7272" fg:w="75"/><text x="7.1660%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="6.9874%" y="1157" width="0.0171%" height="15" fill="rgb(234,209,42)" fg:x="7347" fg:w="18"/><text x="7.2374%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (26 samples, 0.02%)</title><rect x="7.0045%" y="1141" width="0.0247%" height="15" fill="rgb(227,7,12)" fg:x="7365" fg:w="26"/><text x="7.2545%" y="1151.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="7.0045%" y="1157" width="0.0257%" height="15" fill="rgb(245,203,43)" fg:x="7365" fg:w="27"/><text x="7.2545%" y="1167.50"></text></g><g><title>__GI___pthread_cond_signal (12 samples, 0.01%)</title><rect x="7.0349%" y="1157" width="0.0114%" height="15" fill="rgb(238,205,33)" fg:x="7397" fg:w="12"/><text x="7.2849%" y="1167.50"></text></g><g><title>__entry_text_start (11 samples, 0.01%)</title><rect x="7.0359%" y="1141" width="0.0105%" height="15" fill="rgb(231,56,7)" fg:x="7398" fg:w="11"/><text x="7.2859%" y="1151.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="7.0511%" y="1157" width="0.0285%" height="15" fill="rgb(244,186,29)" fg:x="7414" fg:w="30"/><text x="7.3011%" y="1167.50"></text></g><g><title>__clock_gettime_2 (122 samples, 0.12%)</title><rect x="7.0796%" y="1157" width="0.1160%" height="15" fill="rgb(234,111,31)" fg:x="7444" fg:w="122"/><text x="7.3296%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (87 samples, 0.08%)</title><rect x="7.1966%" y="1157" width="0.0827%" height="15" fill="rgb(241,149,10)" fg:x="7567" fg:w="87"/><text x="7.4466%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (33 samples, 0.03%)</title><rect x="7.2793%" y="1157" width="0.0314%" height="15" fill="rgb(249,206,44)" fg:x="7654" fg:w="33"/><text x="7.5293%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (21 samples, 0.02%)</title><rect x="7.2907%" y="1141" width="0.0200%" height="15" fill="rgb(251,153,30)" fg:x="7666" fg:w="21"/><text x="7.5407%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (34 samples, 0.03%)</title><rect x="7.3107%" y="1157" width="0.0323%" height="15" fill="rgb(239,152,38)" fg:x="7687" fg:w="34"/><text x="7.5607%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (111 samples, 0.11%)</title><rect x="7.3431%" y="1157" width="0.1056%" height="15" fill="rgb(249,139,47)" fg:x="7721" fg:w="111"/><text x="7.5931%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="7.4924%" y="725" width="0.0133%" height="15" fill="rgb(244,64,35)" fg:x="7878" fg:w="14"/><text x="7.7424%" y="735.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="7.5418%" y="549" width="0.0143%" height="15" fill="rgb(216,46,15)" fg:x="7930" fg:w="15"/><text x="7.7918%" y="559.50"></text></g><g><title>do_futex (13 samples, 0.01%)</title><rect x="7.5437%" y="533" width="0.0124%" height="15" fill="rgb(250,74,19)" fg:x="7932" fg:w="13"/><text x="7.7937%" y="543.50"></text></g><g><title>futex_wake (13 samples, 0.01%)</title><rect x="7.5437%" y="517" width="0.0124%" height="15" fill="rgb(249,42,33)" fg:x="7932" fg:w="13"/><text x="7.7937%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.02%)</title><rect x="7.5570%" y="549" width="0.0171%" height="15" fill="rgb(242,149,17)" fg:x="7946" fg:w="18"/><text x="7.8070%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (36 samples, 0.03%)</title><rect x="7.5418%" y="581" width="0.0342%" height="15" fill="rgb(244,29,21)" fg:x="7930" fg:w="36"/><text x="7.7918%" y="591.50"></text></g><g><title>do_syscall_64 (36 samples, 0.03%)</title><rect x="7.5418%" y="565" width="0.0342%" height="15" fill="rgb(220,130,37)" fg:x="7930" fg:w="36"/><text x="7.7918%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (56 samples, 0.05%)</title><rect x="7.5238%" y="613" width="0.0533%" height="15" fill="rgb(211,67,2)" fg:x="7911" fg:w="56"/><text x="7.7738%" y="623.50"></text></g><g><title>__GI___lll_lock_wake (39 samples, 0.04%)</title><rect x="7.5399%" y="597" width="0.0371%" height="15" fill="rgb(235,68,52)" fg:x="7928" fg:w="39"/><text x="7.7899%" y="607.50"></text></g><g><title>core::mem::drop (57 samples, 0.05%)</title><rect x="7.5238%" y="709" width="0.0542%" height="15" fill="rgb(246,142,3)" fg:x="7911" fg:w="57"/><text x="7.7738%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (57 samples, 0.05%)</title><rect x="7.5238%" y="693" width="0.0542%" height="15" fill="rgb(241,25,7)" fg:x="7911" fg:w="57"/><text x="7.7738%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (57 samples, 0.05%)</title><rect x="7.5238%" y="677" width="0.0542%" height="15" fill="rgb(242,119,39)" fg:x="7911" fg:w="57"/><text x="7.7738%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="7.5238%" y="661" width="0.0542%" height="15" fill="rgb(241,98,45)" fg:x="7911" fg:w="57"/><text x="7.7738%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (57 samples, 0.05%)</title><rect x="7.5238%" y="645" width="0.0542%" height="15" fill="rgb(254,28,30)" fg:x="7911" fg:w="57"/><text x="7.7738%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (57 samples, 0.05%)</title><rect x="7.5238%" y="629" width="0.0542%" height="15" fill="rgb(241,142,54)" fg:x="7911" fg:w="57"/><text x="7.7738%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="7.5818%" y="629" width="0.0114%" height="15" fill="rgb(222,85,15)" fg:x="7972" fg:w="12"/><text x="7.8318%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (17 samples, 0.02%)</title><rect x="7.5780%" y="709" width="0.0162%" height="15" fill="rgb(210,85,47)" fg:x="7968" fg:w="17"/><text x="7.8280%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (17 samples, 0.02%)</title><rect x="7.5780%" y="693" width="0.0162%" height="15" fill="rgb(224,206,25)" fg:x="7968" fg:w="17"/><text x="7.8280%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="7.5780%" y="677" width="0.0162%" height="15" fill="rgb(243,201,19)" fg:x="7968" fg:w="17"/><text x="7.8280%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="7.5799%" y="661" width="0.0143%" height="15" fill="rgb(236,59,4)" fg:x="7970" fg:w="15"/><text x="7.8299%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="7.5818%" y="645" width="0.0124%" height="15" fill="rgb(254,179,45)" fg:x="7972" fg:w="13"/><text x="7.8318%" y="655.50"></text></g><g><title>update_curr (15 samples, 0.01%)</title><rect x="7.7320%" y="453" width="0.0143%" height="15" fill="rgb(226,14,10)" fg:x="8130" fg:w="15"/><text x="7.9820%" y="463.50"></text></g><g><title>dequeue_task_fair (32 samples, 0.03%)</title><rect x="7.7206%" y="485" width="0.0304%" height="15" fill="rgb(244,27,41)" fg:x="8118" fg:w="32"/><text x="7.9706%" y="495.50"></text></g><g><title>dequeue_entity (31 samples, 0.03%)</title><rect x="7.7216%" y="469" width="0.0295%" height="15" fill="rgb(235,35,32)" fg:x="8119" fg:w="31"/><text x="7.9716%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (20 samples, 0.02%)</title><rect x="7.7511%" y="485" width="0.0190%" height="15" fill="rgb(218,68,31)" fg:x="8150" fg:w="20"/><text x="8.0011%" y="495.50"></text></g><g><title>psi_group_change (17 samples, 0.02%)</title><rect x="7.7834%" y="469" width="0.0162%" height="15" fill="rgb(207,120,37)" fg:x="8184" fg:w="17"/><text x="8.0334%" y="479.50"></text></g><g><title>psi_task_switch (24 samples, 0.02%)</title><rect x="7.7777%" y="485" width="0.0228%" height="15" fill="rgb(227,98,0)" fg:x="8178" fg:w="24"/><text x="8.0277%" y="495.50"></text></g><g><title>futex_wait_queue (115 samples, 0.11%)</title><rect x="7.7006%" y="533" width="0.1094%" height="15" fill="rgb(207,7,3)" fg:x="8097" fg:w="115"/><text x="7.9506%" y="543.50"></text></g><g><title>schedule (110 samples, 0.10%)</title><rect x="7.7054%" y="517" width="0.1046%" height="15" fill="rgb(206,98,19)" fg:x="8102" fg:w="110"/><text x="7.9554%" y="527.50"></text></g><g><title>__schedule (110 samples, 0.10%)</title><rect x="7.7054%" y="501" width="0.1046%" height="15" fill="rgb(217,5,26)" fg:x="8102" fg:w="110"/><text x="7.9554%" y="511.50"></text></g><g><title>__x64_sys_futex (137 samples, 0.13%)</title><rect x="7.6921%" y="581" width="0.1303%" height="15" fill="rgb(235,190,38)" fg:x="8088" fg:w="137"/><text x="7.9421%" y="591.50"></text></g><g><title>do_futex (136 samples, 0.13%)</title><rect x="7.6930%" y="565" width="0.1293%" height="15" fill="rgb(247,86,24)" fg:x="8089" fg:w="136"/><text x="7.9430%" y="575.50"></text></g><g><title>futex_wait (134 samples, 0.13%)</title><rect x="7.6949%" y="549" width="0.1274%" height="15" fill="rgb(205,101,16)" fg:x="8091" fg:w="134"/><text x="7.9449%" y="559.50"></text></g><g><title>futex_wait_setup (13 samples, 0.01%)</title><rect x="7.8100%" y="533" width="0.0124%" height="15" fill="rgb(246,168,33)" fg:x="8212" fg:w="13"/><text x="8.0600%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (15 samples, 0.01%)</title><rect x="7.8471%" y="565" width="0.0143%" height="15" fill="rgb(231,114,1)" fg:x="8251" fg:w="15"/><text x="8.0971%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (46 samples, 0.04%)</title><rect x="7.8233%" y="581" width="0.0437%" height="15" fill="rgb(207,184,53)" fg:x="8226" fg:w="46"/><text x="8.0733%" y="591.50"></text></g><g><title>event_listener::Inner::lock (288 samples, 0.27%)</title><rect x="7.5951%" y="709" width="0.2739%" height="15" fill="rgb(224,95,51)" fg:x="7986" fg:w="288"/><text x="7.8451%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (287 samples, 0.27%)</title><rect x="7.5960%" y="693" width="0.2730%" height="15" fill="rgb(212,188,45)" fg:x="7987" fg:w="287"/><text x="7.8460%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (286 samples, 0.27%)</title><rect x="7.5970%" y="677" width="0.2720%" height="15" fill="rgb(223,154,38)" fg:x="7988" fg:w="286"/><text x="7.8470%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (261 samples, 0.25%)</title><rect x="7.6208%" y="661" width="0.2482%" height="15" fill="rgb(251,22,52)" fg:x="8013" fg:w="261"/><text x="7.8708%" y="671.50"></text></g><g><title>___pthread_mutex_lock (261 samples, 0.25%)</title><rect x="7.6208%" y="645" width="0.2482%" height="15" fill="rgb(229,209,22)" fg:x="8013" fg:w="261"/><text x="7.8708%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (200 samples, 0.19%)</title><rect x="7.6788%" y="629" width="0.1902%" height="15" fill="rgb(234,138,34)" fg:x="8074" fg:w="200"/><text x="7.9288%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (190 samples, 0.18%)</title><rect x="7.6883%" y="613" width="0.1807%" height="15" fill="rgb(212,95,11)" fg:x="8084" fg:w="190"/><text x="7.9383%" y="623.50"></text></g><g><title>do_syscall_64 (189 samples, 0.18%)</title><rect x="7.6892%" y="597" width="0.1797%" height="15" fill="rgb(240,179,47)" fg:x="8085" fg:w="189"/><text x="7.9392%" y="607.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (399 samples, 0.38%)</title><rect x="7.5057%" y="725" width="0.3795%" height="15" fill="rgb(240,163,11)" fg:x="7892" fg:w="399"/><text x="7.7557%" y="735.50"></text></g><g><title>event_listener::List::remove (17 samples, 0.02%)</title><rect x="7.8690%" y="709" width="0.0162%" height="15" fill="rgb(236,37,12)" fg:x="8274" fg:w="17"/><text x="8.1190%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="7.8728%" y="693" width="0.0124%" height="15" fill="rgb(232,164,16)" fg:x="8278" fg:w="13"/><text x="8.1228%" y="703.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="7.8728%" y="677" width="0.0124%" height="15" fill="rgb(244,205,15)" fg:x="8278" fg:w="13"/><text x="8.1228%" y="687.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="7.8728%" y="661" width="0.0124%" height="15" fill="rgb(223,117,47)" fg:x="8278" fg:w="13"/><text x="8.1228%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (681 samples, 0.65%)</title><rect x="7.8852%" y="725" width="0.6477%" height="15" fill="rgb(244,107,35)" fg:x="8291" fg:w="681"/><text x="8.1352%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (736 samples, 0.70%)</title><rect x="8.5661%" y="709" width="0.7000%" height="15" fill="rgb(205,140,8)" fg:x="9007" fg:w="736"/><text x="8.8161%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (398 samples, 0.38%)</title><rect x="9.4858%" y="677" width="0.3785%" height="15" fill="rgb(228,84,46)" fg:x="9974" fg:w="398"/><text x="9.7358%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (49 samples, 0.05%)</title><rect x="9.8662%" y="677" width="0.0466%" height="15" fill="rgb(254,188,9)" fg:x="10374" fg:w="49"/><text x="10.1162%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (47 samples, 0.04%)</title><rect x="9.8681%" y="661" width="0.0447%" height="15" fill="rgb(206,112,54)" fg:x="10376" fg:w="47"/><text x="10.1181%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (47 samples, 0.04%)</title><rect x="9.8681%" y="645" width="0.0447%" height="15" fill="rgb(216,84,49)" fg:x="10376" fg:w="47"/><text x="10.1181%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (47 samples, 0.04%)</title><rect x="9.8681%" y="629" width="0.0447%" height="15" fill="rgb(214,194,35)" fg:x="10376" fg:w="47"/><text x="10.1181%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (449 samples, 0.43%)</title><rect x="9.9137%" y="677" width="0.4270%" height="15" fill="rgb(249,28,3)" fg:x="10424" fg:w="449"/><text x="10.1637%" y="687.50"></text></g><g><title>core::ptr::read (449 samples, 0.43%)</title><rect x="9.9137%" y="661" width="0.4270%" height="15" fill="rgb(222,56,52)" fg:x="10424" fg:w="449"/><text x="10.1637%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (449 samples, 0.43%)</title><rect x="9.9137%" y="645" width="0.4270%" height="15" fill="rgb(245,217,50)" fg:x="10424" fg:w="449"/><text x="10.1637%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (900 samples, 0.86%)</title><rect x="10.3408%" y="677" width="0.8559%" height="15" fill="rgb(213,201,24)" fg:x="10873" fg:w="900"/><text x="10.5908%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (900 samples, 0.86%)</title><rect x="10.3408%" y="661" width="0.8559%" height="15" fill="rgb(248,116,28)" fg:x="10873" fg:w="900"/><text x="10.5908%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (216 samples, 0.21%)</title><rect x="11.1967%" y="677" width="0.2054%" height="15" fill="rgb(219,72,43)" fg:x="11773" fg:w="216"/><text x="11.4467%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (213 samples, 0.20%)</title><rect x="11.1996%" y="661" width="0.2026%" height="15" fill="rgb(209,138,14)" fg:x="11776" fg:w="213"/><text x="11.4496%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,249 samples, 2.14%)</title><rect x="9.2661%" y="709" width="2.1389%" height="15" fill="rgb(222,18,33)" fg:x="9743" fg:w="2249"/><text x="9.5161%" y="719.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,191 samples, 2.08%)</title><rect x="9.3212%" y="693" width="2.0837%" height="15" fill="rgb(213,199,7)" fg:x="9801" fg:w="2191"/><text x="9.5712%" y="703.50">c..</text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="11.4173%" y="613" width="0.0171%" height="15" fill="rgb(250,110,10)" fg:x="12005" fg:w="18"/><text x="11.6673%" y="623.50"></text></g><g><title>__GI___lll_lock_wake (18 samples, 0.02%)</title><rect x="11.4173%" y="597" width="0.0171%" height="15" fill="rgb(248,123,6)" fg:x="12005" fg:w="18"/><text x="11.6673%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.02%)</title><rect x="11.4173%" y="581" width="0.0171%" height="15" fill="rgb(206,91,31)" fg:x="12005" fg:w="18"/><text x="11.6673%" y="591.50"></text></g><g><title>do_syscall_64 (17 samples, 0.02%)</title><rect x="11.4183%" y="565" width="0.0162%" height="15" fill="rgb(211,154,13)" fg:x="12006" fg:w="17"/><text x="11.6683%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (20 samples, 0.02%)</title><rect x="11.4164%" y="693" width="0.0190%" height="15" fill="rgb(225,148,7)" fg:x="12004" fg:w="20"/><text x="11.6664%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (20 samples, 0.02%)</title><rect x="11.4164%" y="677" width="0.0190%" height="15" fill="rgb(220,160,43)" fg:x="12004" fg:w="20"/><text x="11.6664%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="11.4164%" y="661" width="0.0190%" height="15" fill="rgb(213,52,39)" fg:x="12004" fg:w="20"/><text x="11.6664%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="11.4173%" y="645" width="0.0181%" height="15" fill="rgb(243,137,7)" fg:x="12005" fg:w="19"/><text x="11.6673%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="11.4173%" y="629" width="0.0181%" height="15" fill="rgb(230,79,13)" fg:x="12005" fg:w="19"/><text x="11.6673%" y="639.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="11.4449%" y="517" width="0.0171%" height="15" fill="rgb(247,105,23)" fg:x="12034" fg:w="18"/><text x="11.6949%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="11.4449%" y="501" width="0.0171%" height="15" fill="rgb(223,179,41)" fg:x="12034" fg:w="18"/><text x="11.6949%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="11.4449%" y="485" width="0.0171%" height="15" fill="rgb(218,9,34)" fg:x="12034" fg:w="18"/><text x="11.6949%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (18 samples, 0.02%)</title><rect x="11.4449%" y="469" width="0.0171%" height="15" fill="rgb(222,106,8)" fg:x="12034" fg:w="18"/><text x="11.6949%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.02%)</title><rect x="11.4468%" y="453" width="0.0152%" height="15" fill="rgb(211,220,0)" fg:x="12036" fg:w="16"/><text x="11.6968%" y="463.50"></text></g><g><title>do_syscall_64 (16 samples, 0.02%)</title><rect x="11.4468%" y="437" width="0.0152%" height="15" fill="rgb(229,52,16)" fg:x="12036" fg:w="16"/><text x="11.6968%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (26 samples, 0.02%)</title><rect x="11.4383%" y="565" width="0.0247%" height="15" fill="rgb(212,155,18)" fg:x="12027" fg:w="26"/><text x="11.6883%" y="575.50"></text></g><g><title>parking::Unparker::unpark (21 samples, 0.02%)</title><rect x="11.4430%" y="549" width="0.0200%" height="15" fill="rgb(242,21,14)" fg:x="12032" fg:w="21"/><text x="11.6930%" y="559.50"></text></g><g><title>parking::Inner::unpark (21 samples, 0.02%)</title><rect x="11.4430%" y="533" width="0.0200%" height="15" fill="rgb(222,19,48)" fg:x="12032" fg:w="21"/><text x="11.6930%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (27 samples, 0.03%)</title><rect x="11.4383%" y="597" width="0.0257%" height="15" fill="rgb(232,45,27)" fg:x="12027" fg:w="27"/><text x="11.6883%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (27 samples, 0.03%)</title><rect x="11.4383%" y="581" width="0.0257%" height="15" fill="rgb(249,103,42)" fg:x="12027" fg:w="27"/><text x="11.6883%" y="591.50"></text></g><g><title>async_executor::State::notify (30 samples, 0.03%)</title><rect x="11.4373%" y="613" width="0.0285%" height="15" fill="rgb(246,81,33)" fg:x="12026" fg:w="30"/><text x="11.6873%" y="623.50"></text></g><g><title>event_listener::List::notify (34 samples, 0.03%)</title><rect x="11.4364%" y="693" width="0.0323%" height="15" fill="rgb(252,33,42)" fg:x="12025" fg:w="34"/><text x="11.6864%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (33 samples, 0.03%)</title><rect x="11.4373%" y="677" width="0.0314%" height="15" fill="rgb(209,212,41)" fg:x="12026" fg:w="33"/><text x="11.6873%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (33 samples, 0.03%)</title><rect x="11.4373%" y="661" width="0.0314%" height="15" fill="rgb(207,154,6)" fg:x="12026" fg:w="33"/><text x="11.6873%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (33 samples, 0.03%)</title><rect x="11.4373%" y="645" width="0.0314%" height="15" fill="rgb(223,64,47)" fg:x="12026" fg:w="33"/><text x="11.6873%" y="655.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (33 samples, 0.03%)</title><rect x="11.4373%" y="629" width="0.0314%" height="15" fill="rgb(211,161,38)" fg:x="12026" fg:w="33"/><text x="11.6873%" y="639.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,425 samples, 3.26%)</title><rect x="8.5338%" y="725" width="3.2573%" height="15" fill="rgb(219,138,40)" fg:x="8973" fg:w="3425"/><text x="8.7838%" y="735.50">asy..</text></g><g><title>event_listener::Event::notify (406 samples, 0.39%)</title><rect x="11.4050%" y="709" width="0.3861%" height="15" fill="rgb(241,228,46)" fg:x="11992" fg:w="406"/><text x="11.6550%" y="719.50"></text></g><g><title>event_listener::full_fence (339 samples, 0.32%)</title><rect x="11.4687%" y="693" width="0.3224%" height="15" fill="rgb(223,209,38)" fg:x="12059" fg:w="339"/><text x="11.7187%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (328 samples, 0.31%)</title><rect x="11.4792%" y="677" width="0.3119%" height="15" fill="rgb(236,164,45)" fg:x="12070" fg:w="328"/><text x="11.7292%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (328 samples, 0.31%)</title><rect x="11.4792%" y="661" width="0.3119%" height="15" fill="rgb(231,15,5)" fg:x="12070" fg:w="328"/><text x="11.7292%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (328 samples, 0.31%)</title><rect x="11.4792%" y="645" width="0.3119%" height="15" fill="rgb(252,35,15)" fg:x="12070" fg:w="328"/><text x="11.7292%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (27 samples, 0.03%)</title><rect x="11.7911%" y="725" width="0.0257%" height="15" fill="rgb(248,181,18)" fg:x="12398" fg:w="27"/><text x="12.0411%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (11 samples, 0.01%)</title><rect x="11.8311%" y="677" width="0.0105%" height="15" fill="rgb(233,39,42)" fg:x="12440" fg:w="11"/><text x="12.0811%" y="687.50"></text></g><g><title>event_listener::Inner::lock (31 samples, 0.03%)</title><rect x="11.8415%" y="677" width="0.0295%" height="15" fill="rgb(238,110,33)" fg:x="12451" fg:w="31"/><text x="12.0915%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="11.8415%" y="661" width="0.0295%" height="15" fill="rgb(233,195,10)" fg:x="12451" fg:w="31"/><text x="12.0915%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="11.8425%" y="645" width="0.0285%" height="15" fill="rgb(254,105,3)" fg:x="12452" fg:w="30"/><text x="12.0925%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="11.8472%" y="629" width="0.0238%" height="15" fill="rgb(221,225,9)" fg:x="12457" fg:w="25"/><text x="12.0972%" y="639.50"></text></g><g><title>___pthread_mutex_lock (25 samples, 0.02%)</title><rect x="11.8472%" y="613" width="0.0238%" height="15" fill="rgb(224,227,45)" fg:x="12457" fg:w="25"/><text x="12.0972%" y="623.50"></text></g><g><title>__GI___lll_lock_wait (11 samples, 0.01%)</title><rect x="11.8605%" y="597" width="0.0105%" height="15" fill="rgb(229,198,43)" fg:x="12471" fg:w="11"/><text x="12.1105%" y="607.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="11.8301%" y="693" width="0.0437%" height="15" fill="rgb(206,209,35)" fg:x="12439" fg:w="46"/><text x="12.0801%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (74 samples, 0.07%)</title><rect x="11.8168%" y="725" width="0.0704%" height="15" fill="rgb(245,195,53)" fg:x="12425" fg:w="74"/><text x="12.0668%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (60 samples, 0.06%)</title><rect x="11.8301%" y="709" width="0.0571%" height="15" fill="rgb(240,92,26)" fg:x="12439" fg:w="60"/><text x="12.0801%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (14 samples, 0.01%)</title><rect x="11.8739%" y="693" width="0.0133%" height="15" fill="rgb(207,40,23)" fg:x="12485" fg:w="14"/><text x="12.1239%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="11.8739%" y="677" width="0.0133%" height="15" fill="rgb(223,111,35)" fg:x="12485" fg:w="14"/><text x="12.1239%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="11.8739%" y="661" width="0.0133%" height="15" fill="rgb(229,147,28)" fg:x="12485" fg:w="14"/><text x="12.1239%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="11.8739%" y="645" width="0.0133%" height="15" fill="rgb(211,29,28)" fg:x="12485" fg:w="14"/><text x="12.1239%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="11.8881%" y="709" width="0.0190%" height="15" fill="rgb(228,72,33)" fg:x="12500" fg:w="20"/><text x="12.1381%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="11.8881%" y="693" width="0.0190%" height="15" fill="rgb(205,214,31)" fg:x="12500" fg:w="20"/><text x="12.1381%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="11.8881%" y="677" width="0.0190%" height="15" fill="rgb(224,111,15)" fg:x="12500" fg:w="20"/><text x="12.1381%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="11.9071%" y="709" width="0.0124%" height="15" fill="rgb(253,21,26)" fg:x="12520" fg:w="13"/><text x="12.1571%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="11.9071%" y="693" width="0.0124%" height="15" fill="rgb(245,139,43)" fg:x="12520" fg:w="13"/><text x="12.1571%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="11.9071%" y="677" width="0.0124%" height="15" fill="rgb(252,170,7)" fg:x="12520" fg:w="13"/><text x="12.1571%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="11.9071%" y="661" width="0.0124%" height="15" fill="rgb(231,118,14)" fg:x="12520" fg:w="13"/><text x="12.1571%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="11.9071%" y="645" width="0.0124%" height="15" fill="rgb(238,83,0)" fg:x="12520" fg:w="13"/><text x="12.1571%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="11.9071%" y="629" width="0.0124%" height="15" fill="rgb(221,39,39)" fg:x="12520" fg:w="13"/><text x="12.1571%" y="639.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,714 samples, 4.48%)</title><rect x="7.4515%" y="805" width="4.4832%" height="15" fill="rgb(222,119,46)" fg:x="7835" fg:w="4714"/><text x="7.7015%" y="815.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,714 samples, 4.48%)</title><rect x="7.4515%" y="789" width="4.4832%" height="15" fill="rgb(222,165,49)" fg:x="7835" fg:w="4714"/><text x="7.7015%" y="799.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,714 samples, 4.48%)</title><rect x="7.4515%" y="773" width="4.4832%" height="15" fill="rgb(219,113,52)" fg:x="7835" fg:w="4714"/><text x="7.7015%" y="783.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,714 samples, 4.48%)</title><rect x="7.4515%" y="757" width="4.4832%" height="15" fill="rgb(214,7,15)" fg:x="7835" fg:w="4714"/><text x="7.7015%" y="767.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,714 samples, 4.48%)</title><rect x="7.4515%" y="741" width="4.4832%" height="15" fill="rgb(235,32,4)" fg:x="7835" fg:w="4714"/><text x="7.7015%" y="751.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (50 samples, 0.05%)</title><rect x="11.8872%" y="725" width="0.0476%" height="15" fill="rgb(238,90,54)" fg:x="12499" fg:w="50"/><text x="12.1372%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::ValueAccess&gt;::as_str (13 samples, 0.01%)</title><rect x="11.9652%" y="709" width="0.0124%" height="15" fill="rgb(213,208,19)" fg:x="12581" fg:w="13"/><text x="12.2152%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,144 samples, 1.09%)</title><rect x="11.9775%" y="709" width="1.0880%" height="15" fill="rgb(233,156,4)" fg:x="12594" fg:w="1144"/><text x="12.2275%" y="719.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="13.0798%" y="661" width="0.0124%" height="15" fill="rgb(207,194,5)" fg:x="13753" fg:w="13"/><text x="13.3298%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (25 samples, 0.02%)</title><rect x="13.1045%" y="645" width="0.0238%" height="15" fill="rgb(206,111,30)" fg:x="13779" fg:w="25"/><text x="13.3545%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (25 samples, 0.02%)</title><rect x="13.1045%" y="629" width="0.0238%" height="15" fill="rgb(243,70,54)" fg:x="13779" fg:w="25"/><text x="13.3545%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (25 samples, 0.02%)</title><rect x="13.1045%" y="613" width="0.0238%" height="15" fill="rgb(242,28,8)" fg:x="13779" fg:w="25"/><text x="13.3545%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="13.1045%" y="597" width="0.0238%" height="15" fill="rgb(219,106,18)" fg:x="13779" fg:w="25"/><text x="13.3545%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="13.1045%" y="581" width="0.0238%" height="15" fill="rgb(244,222,10)" fg:x="13779" fg:w="25"/><text x="13.3545%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (28 samples, 0.03%)</title><rect x="13.1330%" y="581" width="0.0266%" height="15" fill="rgb(236,179,52)" fg:x="13809" fg:w="28"/><text x="13.3830%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (28 samples, 0.03%)</title><rect x="13.1330%" y="565" width="0.0266%" height="15" fill="rgb(213,23,39)" fg:x="13809" fg:w="28"/><text x="13.3830%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (25 samples, 0.02%)</title><rect x="13.1359%" y="549" width="0.0238%" height="15" fill="rgb(238,48,10)" fg:x="13812" fg:w="25"/><text x="13.3859%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (37 samples, 0.04%)</title><rect x="13.1330%" y="597" width="0.0352%" height="15" fill="rgb(251,196,23)" fg:x="13809" fg:w="37"/><text x="13.3830%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (52 samples, 0.05%)</title><rect x="13.1283%" y="613" width="0.0495%" height="15" fill="rgb(250,152,24)" fg:x="13804" fg:w="52"/><text x="13.3783%" y="623.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (27 samples, 0.03%)</title><rect x="13.1949%" y="597" width="0.0257%" height="15" fill="rgb(209,150,17)" fg:x="13874" fg:w="27"/><text x="13.4449%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (314 samples, 0.30%)</title><rect x="13.1283%" y="645" width="0.2986%" height="15" fill="rgb(234,202,34)" fg:x="13804" fg:w="314"/><text x="13.3783%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (314 samples, 0.30%)</title><rect x="13.1283%" y="629" width="0.2986%" height="15" fill="rgb(253,148,53)" fg:x="13804" fg:w="314"/><text x="13.3783%" y="639.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (261 samples, 0.25%)</title><rect x="13.1787%" y="613" width="0.2482%" height="15" fill="rgb(218,129,16)" fg:x="13857" fg:w="261"/><text x="13.4287%" y="623.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (217 samples, 0.21%)</title><rect x="13.2205%" y="597" width="0.2064%" height="15" fill="rgb(216,85,19)" fg:x="13901" fg:w="217"/><text x="13.4705%" y="607.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (217 samples, 0.21%)</title><rect x="13.2205%" y="581" width="0.2064%" height="15" fill="rgb(235,228,7)" fg:x="13901" fg:w="217"/><text x="13.4705%" y="591.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (217 samples, 0.21%)</title><rect x="13.2205%" y="565" width="0.2064%" height="15" fill="rgb(245,175,0)" fg:x="13901" fg:w="217"/><text x="13.4705%" y="575.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (14 samples, 0.01%)</title><rect x="13.4288%" y="629" width="0.0133%" height="15" fill="rgb(208,168,36)" fg:x="14120" fg:w="14"/><text x="13.6788%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (24 samples, 0.02%)</title><rect x="13.4421%" y="613" width="0.0228%" height="15" fill="rgb(246,171,24)" fg:x="14134" fg:w="24"/><text x="13.6921%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (24 samples, 0.02%)</title><rect x="13.4421%" y="597" width="0.0228%" height="15" fill="rgb(215,142,24)" fg:x="14134" fg:w="24"/><text x="13.6921%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="13.4421%" y="581" width="0.0228%" height="15" fill="rgb(250,187,7)" fg:x="14134" fg:w="24"/><text x="13.6921%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (21 samples, 0.02%)</title><rect x="13.4650%" y="613" width="0.0200%" height="15" fill="rgb(228,66,33)" fg:x="14158" fg:w="21"/><text x="13.7150%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (21 samples, 0.02%)</title><rect x="13.4650%" y="597" width="0.0200%" height="15" fill="rgb(234,215,21)" fg:x="14158" fg:w="21"/><text x="13.7150%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.07%)</title><rect x="13.4269%" y="645" width="0.0685%" height="15" fill="rgb(222,191,20)" fg:x="14118" fg:w="72"/><text x="13.6769%" y="655.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (56 samples, 0.05%)</title><rect x="13.4421%" y="629" width="0.0533%" height="15" fill="rgb(245,79,54)" fg:x="14134" fg:w="56"/><text x="13.6921%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (18 samples, 0.02%)</title><rect x="13.5020%" y="597" width="0.0171%" height="15" fill="rgb(240,10,37)" fg:x="14197" fg:w="18"/><text x="13.7520%" y="607.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (15 samples, 0.01%)</title><rect x="13.5049%" y="581" width="0.0143%" height="15" fill="rgb(214,192,32)" fg:x="14200" fg:w="15"/><text x="13.7549%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="13.5192%" y="597" width="0.0124%" height="15" fill="rgb(209,36,54)" fg:x="14215" fg:w="13"/><text x="13.7692%" y="607.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (12 samples, 0.01%)</title><rect x="13.5201%" y="581" width="0.0114%" height="15" fill="rgb(220,10,11)" fg:x="14216" fg:w="12"/><text x="13.7701%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="13.4954%" y="645" width="0.0380%" height="15" fill="rgb(221,106,17)" fg:x="14190" fg:w="40"/><text x="13.7454%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (39 samples, 0.04%)</title><rect x="13.4963%" y="629" width="0.0371%" height="15" fill="rgb(251,142,44)" fg:x="14191" fg:w="39"/><text x="13.7463%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="13.5001%" y="613" width="0.0333%" height="15" fill="rgb(238,13,15)" fg:x="14195" fg:w="35"/><text x="13.7501%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::empty (15 samples, 0.01%)</title><rect x="13.5334%" y="645" width="0.0143%" height="15" fill="rgb(208,107,27)" fg:x="14230" fg:w="15"/><text x="13.7834%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (15 samples, 0.01%)</title><rect x="13.5334%" y="629" width="0.0143%" height="15" fill="rgb(205,136,37)" fg:x="14230" fg:w="15"/><text x="13.7834%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (695 samples, 0.66%)</title><rect x="13.0798%" y="693" width="0.6610%" height="15" fill="rgb(250,205,27)" fg:x="13753" fg:w="695"/><text x="13.3298%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (695 samples, 0.66%)</title><rect x="13.0798%" y="677" width="0.6610%" height="15" fill="rgb(210,80,43)" fg:x="13753" fg:w="695"/><text x="13.3298%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (673 samples, 0.64%)</title><rect x="13.1007%" y="661" width="0.6401%" height="15" fill="rgb(247,160,36)" fg:x="13775" fg:w="673"/><text x="13.3507%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (203 samples, 0.19%)</title><rect x="13.5477%" y="645" width="0.1931%" height="15" fill="rgb(234,13,49)" fg:x="14245" fg:w="203"/><text x="13.7977%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (203 samples, 0.19%)</title><rect x="13.5477%" y="629" width="0.1931%" height="15" fill="rgb(234,122,0)" fg:x="14245" fg:w="203"/><text x="13.7977%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (1,917 samples, 1.82%)</title><rect x="11.9347%" y="725" width="1.8232%" height="15" fill="rgb(207,146,38)" fg:x="12549" fg:w="1917"/><text x="12.1847%" y="735.50">&lt;..</text></g><g><title>rust_alloc (722 samples, 0.69%)</title><rect x="13.0712%" y="709" width="0.6867%" height="15" fill="rgb(207,177,25)" fg:x="13744" fg:w="722"/><text x="13.3212%" y="719.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (18 samples, 0.02%)</title><rect x="13.7408%" y="693" width="0.0171%" height="15" fill="rgb(211,178,42)" fg:x="14448" fg:w="18"/><text x="13.9908%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="13.9918%" y="549" width="0.0105%" height="15" fill="rgb(230,69,54)" fg:x="14712" fg:w="11"/><text x="14.2418%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (11 samples, 0.01%)</title><rect x="13.9918%" y="533" width="0.0105%" height="15" fill="rgb(214,135,41)" fg:x="14712" fg:w="11"/><text x="14.2418%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="14.0071%" y="549" width="0.0171%" height="15" fill="rgb(237,67,25)" fg:x="14728" fg:w="18"/><text x="14.2571%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="14.0071%" y="533" width="0.0171%" height="15" fill="rgb(222,189,50)" fg:x="14728" fg:w="18"/><text x="14.2571%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (383 samples, 0.36%)</title><rect x="13.9738%" y="597" width="0.3643%" height="15" fill="rgb(245,148,34)" fg:x="14693" fg:w="383"/><text x="14.2238%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (383 samples, 0.36%)</title><rect x="13.9738%" y="581" width="0.3643%" height="15" fill="rgb(222,29,6)" fg:x="14693" fg:w="383"/><text x="14.2238%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (371 samples, 0.35%)</title><rect x="13.9852%" y="565" width="0.3528%" height="15" fill="rgb(221,189,43)" fg:x="14705" fg:w="371"/><text x="14.2352%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (330 samples, 0.31%)</title><rect x="14.0242%" y="549" width="0.3138%" height="15" fill="rgb(207,36,27)" fg:x="14746" fg:w="330"/><text x="14.2742%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (330 samples, 0.31%)</title><rect x="14.0242%" y="533" width="0.3138%" height="15" fill="rgb(217,90,24)" fg:x="14746" fg:w="330"/><text x="14.2742%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (397 samples, 0.38%)</title><rect x="13.9652%" y="709" width="0.3776%" height="15" fill="rgb(224,66,35)" fg:x="14684" fg:w="397"/><text x="14.2152%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (397 samples, 0.38%)</title><rect x="13.9652%" y="693" width="0.3776%" height="15" fill="rgb(221,13,50)" fg:x="14684" fg:w="397"/><text x="14.2152%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (397 samples, 0.38%)</title><rect x="13.9652%" y="677" width="0.3776%" height="15" fill="rgb(236,68,49)" fg:x="14684" fg:w="397"/><text x="14.2152%" y="687.50"></text></g><g><title>alloc::alloc::alloc (397 samples, 0.38%)</title><rect x="13.9652%" y="661" width="0.3776%" height="15" fill="rgb(229,146,28)" fg:x="14684" fg:w="397"/><text x="14.2152%" y="671.50"></text></g><g><title>__rg_alloc (397 samples, 0.38%)</title><rect x="13.9652%" y="645" width="0.3776%" height="15" fill="rgb(225,31,38)" fg:x="14684" fg:w="397"/><text x="14.2152%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (397 samples, 0.38%)</title><rect x="13.9652%" y="629" width="0.3776%" height="15" fill="rgb(250,208,3)" fg:x="14684" fg:w="397"/><text x="14.2152%" y="639.50"></text></g><g><title>rust_alloc (397 samples, 0.38%)</title><rect x="13.9652%" y="613" width="0.3776%" height="15" fill="rgb(246,54,23)" fg:x="14684" fg:w="397"/><text x="14.2152%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="14.3570%" y="709" width="0.0114%" height="15" fill="rgb(243,76,11)" fg:x="15096" fg:w="12"/><text x="14.6070%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="14.3570%" y="693" width="0.0114%" height="15" fill="rgb(245,21,50)" fg:x="15096" fg:w="12"/><text x="14.6070%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="14.3570%" y="677" width="0.0114%" height="15" fill="rgb(228,9,43)" fg:x="15096" fg:w="12"/><text x="14.6070%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="14.3570%" y="661" width="0.0114%" height="15" fill="rgb(208,100,47)" fg:x="15096" fg:w="12"/><text x="14.6070%" y="671.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (14 samples, 0.01%)</title><rect x="14.3685%" y="709" width="0.0133%" height="15" fill="rgb(232,26,8)" fg:x="15108" fg:w="14"/><text x="14.6185%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (14 samples, 0.01%)</title><rect x="14.3685%" y="693" width="0.0133%" height="15" fill="rgb(216,166,38)" fg:x="15108" fg:w="14"/><text x="14.6185%" y="703.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="14.3685%" y="677" width="0.0133%" height="15" fill="rgb(251,202,51)" fg:x="15108" fg:w="14"/><text x="14.6185%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (14 samples, 0.01%)</title><rect x="14.3685%" y="661" width="0.0133%" height="15" fill="rgb(254,216,34)" fg:x="15108" fg:w="14"/><text x="14.6185%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.01%)</title><rect x="14.3685%" y="645" width="0.0133%" height="15" fill="rgb(251,32,27)" fg:x="15108" fg:w="14"/><text x="14.6185%" y="655.50"></text></g><g><title>core::time::Duration::as_nanos (13 samples, 0.01%)</title><rect x="14.4122%" y="693" width="0.0124%" height="15" fill="rgb(208,127,28)" fg:x="15154" fg:w="13"/><text x="14.6622%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (72 samples, 0.07%)</title><rect x="14.4921%" y="645" width="0.0685%" height="15" fill="rgb(224,137,22)" fg:x="15238" fg:w="72"/><text x="14.7421%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (72 samples, 0.07%)</title><rect x="14.4921%" y="629" width="0.0685%" height="15" fill="rgb(254,70,32)" fg:x="15238" fg:w="72"/><text x="14.7421%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (69 samples, 0.07%)</title><rect x="14.4949%" y="613" width="0.0656%" height="15" fill="rgb(229,75,37)" fg:x="15241" fg:w="69"/><text x="14.7449%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (69 samples, 0.07%)</title><rect x="14.4949%" y="597" width="0.0656%" height="15" fill="rgb(252,64,23)" fg:x="15241" fg:w="69"/><text x="14.7449%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (69 samples, 0.07%)</title><rect x="14.4949%" y="581" width="0.0656%" height="15" fill="rgb(232,162,48)" fg:x="15241" fg:w="69"/><text x="14.7449%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (38 samples, 0.04%)</title><rect x="14.5244%" y="565" width="0.0361%" height="15" fill="rgb(246,160,12)" fg:x="15272" fg:w="38"/><text x="14.7744%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (162 samples, 0.15%)</title><rect x="14.4246%" y="677" width="0.1541%" height="15" fill="rgb(247,166,0)" fg:x="15167" fg:w="162"/><text x="14.6746%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (162 samples, 0.15%)</title><rect x="14.4246%" y="661" width="0.1541%" height="15" fill="rgb(249,219,21)" fg:x="15167" fg:w="162"/><text x="14.6746%" y="671.50"></text></g><g><title>core::time::Duration::new (19 samples, 0.02%)</title><rect x="14.5606%" y="645" width="0.0181%" height="15" fill="rgb(205,209,3)" fg:x="15310" fg:w="19"/><text x="14.8106%" y="655.50"></text></g><g><title>std::time::SystemTime::duration_since (172 samples, 0.16%)</title><rect x="14.4246%" y="693" width="0.1636%" height="15" fill="rgb(243,44,1)" fg:x="15167" fg:w="172"/><text x="14.6746%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,193 samples, 7.79%)</title><rect x="7.4515%" y="821" width="7.7919%" height="15" fill="rgb(206,159,16)" fg:x="7835" fg:w="8193"/><text x="7.7015%" y="831.50">tremor_runt..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,479 samples, 3.31%)</title><rect x="11.9347%" y="805" width="3.3087%" height="15" fill="rgb(244,77,30)" fg:x="12549" fg:w="3479"/><text x="12.1847%" y="815.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,479 samples, 3.31%)</title><rect x="11.9347%" y="789" width="3.3087%" height="15" fill="rgb(218,69,12)" fg:x="12549" fg:w="3479"/><text x="12.1847%" y="799.50">&lt;co..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,479 samples, 3.31%)</title><rect x="11.9347%" y="773" width="3.3087%" height="15" fill="rgb(212,87,7)" fg:x="12549" fg:w="3479"/><text x="12.1847%" y="783.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,479 samples, 3.31%)</title><rect x="11.9347%" y="757" width="3.3087%" height="15" fill="rgb(245,114,25)" fg:x="12549" fg:w="3479"/><text x="12.1847%" y="767.50">tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,479 samples, 3.31%)</title><rect x="11.9347%" y="741" width="3.3087%" height="15" fill="rgb(210,61,42)" fg:x="12549" fg:w="3479"/><text x="12.1847%" y="751.50">tre..</text></g><g><title>tremor_runtime::postprocessor::postprocess (1,562 samples, 1.49%)</title><rect x="13.7579%" y="725" width="1.4855%" height="15" fill="rgb(211,52,33)" fg:x="14466" fg:w="1562"/><text x="14.0079%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (906 samples, 0.86%)</title><rect x="14.3818%" y="709" width="0.8617%" height="15" fill="rgb(234,58,33)" fg:x="15122" fg:w="906"/><text x="14.6318%" y="719.50"></text></g><g><title>std::time::SystemTime::now (689 samples, 0.66%)</title><rect x="14.5881%" y="693" width="0.6553%" height="15" fill="rgb(220,115,36)" fg:x="15339" fg:w="689"/><text x="14.8381%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (689 samples, 0.66%)</title><rect x="14.5881%" y="677" width="0.6553%" height="15" fill="rgb(243,153,54)" fg:x="15339" fg:w="689"/><text x="14.8381%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::now (689 samples, 0.66%)</title><rect x="14.5881%" y="661" width="0.6553%" height="15" fill="rgb(251,47,18)" fg:x="15339" fg:w="689"/><text x="14.8381%" y="671.50"></text></g><g><title>__clock_gettime_2 (553 samples, 0.53%)</title><rect x="14.7175%" y="645" width="0.5259%" height="15" fill="rgb(242,102,42)" fg:x="15475" fg:w="553"/><text x="14.9675%" y="655.50"></text></g><g><title>__vdso_clock_gettime (535 samples, 0.51%)</title><rect x="14.7346%" y="629" width="0.5088%" height="15" fill="rgb(234,31,38)" fg:x="15493" fg:w="535"/><text x="14.9846%" y="639.50"></text></g><g><title>[[vdso]] (363 samples, 0.35%)</title><rect x="14.8982%" y="613" width="0.3452%" height="15" fill="rgb(221,117,51)" fg:x="15665" fg:w="363"/><text x="15.1482%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="15.2463%" y="757" width="0.0105%" height="15" fill="rgb(212,20,18)" fg:x="16031" fg:w="11"/><text x="15.4963%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (366 samples, 0.35%)</title><rect x="15.5554%" y="741" width="0.3481%" height="15" fill="rgb(245,133,36)" fg:x="16356" fg:w="366"/><text x="15.8054%" y="751.50"></text></g><g><title>core::ptr::read (354 samples, 0.34%)</title><rect x="15.5668%" y="725" width="0.3367%" height="15" fill="rgb(212,6,19)" fg:x="16368" fg:w="354"/><text x="15.8168%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (334 samples, 0.32%)</title><rect x="15.5858%" y="709" width="0.3177%" height="15" fill="rgb(218,1,36)" fg:x="16388" fg:w="334"/><text x="15.8358%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (154 samples, 0.15%)</title><rect x="15.9700%" y="725" width="0.1465%" height="15" fill="rgb(246,84,54)" fg:x="16792" fg:w="154"/><text x="16.2200%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.04%)</title><rect x="16.2763%" y="677" width="0.0399%" height="15" fill="rgb(242,110,6)" fg:x="17114" fg:w="42"/><text x="16.5263%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (432 samples, 0.41%)</title><rect x="16.4170%" y="661" width="0.4109%" height="15" fill="rgb(214,47,5)" fg:x="17262" fg:w="432"/><text x="16.6670%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (432 samples, 0.41%)</title><rect x="16.4170%" y="645" width="0.4109%" height="15" fill="rgb(218,159,25)" fg:x="17262" fg:w="432"/><text x="16.6670%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (416 samples, 0.40%)</title><rect x="16.8279%" y="661" width="0.3956%" height="15" fill="rgb(215,211,28)" fg:x="17694" fg:w="416"/><text x="17.0779%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (415 samples, 0.39%)</title><rect x="16.8288%" y="645" width="0.3947%" height="15" fill="rgb(238,59,32)" fg:x="17695" fg:w="415"/><text x="17.0788%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (961 samples, 0.91%)</title><rect x="16.3162%" y="677" width="0.9140%" height="15" fill="rgb(226,82,3)" fg:x="17156" fg:w="961"/><text x="16.5662%" y="687.50"></text></g><g><title>__entry_text_start (11 samples, 0.01%)</title><rect x="17.3110%" y="549" width="0.0105%" height="15" fill="rgb(240,164,32)" fg:x="18202" fg:w="11"/><text x="17.5610%" y="559.50"></text></g><g><title>_raw_spin_lock (28 samples, 0.03%)</title><rect x="17.3757%" y="469" width="0.0266%" height="15" fill="rgb(232,46,7)" fg:x="18270" fg:w="28"/><text x="17.6257%" y="479.50"></text></g><g><title>futex_hash (13 samples, 0.01%)</title><rect x="17.4023%" y="469" width="0.0124%" height="15" fill="rgb(229,129,53)" fg:x="18298" fg:w="13"/><text x="17.6523%" y="479.50"></text></g><g><title>futex_wake_mark (44 samples, 0.04%)</title><rect x="17.4147%" y="469" width="0.0418%" height="15" fill="rgb(234,188,29)" fg:x="18311" fg:w="44"/><text x="17.6647%" y="479.50"></text></g><g><title>__futex_unqueue (15 samples, 0.01%)</title><rect x="17.4422%" y="453" width="0.0143%" height="15" fill="rgb(246,141,4)" fg:x="18340" fg:w="15"/><text x="17.6922%" y="463.50"></text></g><g><title>ttwu_do_activate (13 samples, 0.01%)</title><rect x="17.5012%" y="437" width="0.0124%" height="15" fill="rgb(229,23,39)" fg:x="18402" fg:w="13"/><text x="17.7512%" y="447.50"></text></g><g><title>enqueue_task (13 samples, 0.01%)</title><rect x="17.5012%" y="421" width="0.0124%" height="15" fill="rgb(206,12,3)" fg:x="18402" fg:w="13"/><text x="17.7512%" y="431.50"></text></g><g><title>__smp_call_single_queue (15 samples, 0.01%)</title><rect x="17.5278%" y="421" width="0.0143%" height="15" fill="rgb(252,226,20)" fg:x="18430" fg:w="15"/><text x="17.7778%" y="431.50"></text></g><g><title>llist_add_batch (12 samples, 0.01%)</title><rect x="17.5307%" y="405" width="0.0114%" height="15" fill="rgb(216,123,35)" fg:x="18433" fg:w="12"/><text x="17.7807%" y="415.50"></text></g><g><title>__x2apic_send_IPI_dest (22 samples, 0.02%)</title><rect x="17.5421%" y="421" width="0.0209%" height="15" fill="rgb(212,68,40)" fg:x="18445" fg:w="22"/><text x="17.7921%" y="431.50"></text></g><g><title>native_write_msr (19 samples, 0.02%)</title><rect x="17.5450%" y="405" width="0.0181%" height="15" fill="rgb(254,125,32)" fg:x="18448" fg:w="19"/><text x="17.7950%" y="415.50"></text></g><g><title>ttwu_queue_wakelist (62 samples, 0.06%)</title><rect x="17.5164%" y="437" width="0.0590%" height="15" fill="rgb(253,97,22)" fg:x="18418" fg:w="62"/><text x="17.7664%" y="447.50"></text></g><g><title>__x64_sys_futex (258 samples, 0.25%)</title><rect x="17.3310%" y="517" width="0.2454%" height="15" fill="rgb(241,101,14)" fg:x="18223" fg:w="258"/><text x="17.5810%" y="527.50"></text></g><g><title>do_futex (251 samples, 0.24%)</title><rect x="17.3376%" y="501" width="0.2387%" height="15" fill="rgb(238,103,29)" fg:x="18230" fg:w="251"/><text x="17.5876%" y="511.50"></text></g><g><title>futex_wake (248 samples, 0.24%)</title><rect x="17.3405%" y="485" width="0.2359%" height="15" fill="rgb(233,195,47)" fg:x="18233" fg:w="248"/><text x="17.5905%" y="495.50"></text></g><g><title>wake_up_q (114 samples, 0.11%)</title><rect x="17.4679%" y="469" width="0.1084%" height="15" fill="rgb(246,218,30)" fg:x="18367" fg:w="114"/><text x="17.7179%" y="479.50"></text></g><g><title>try_to_wake_up (101 samples, 0.10%)</title><rect x="17.4803%" y="453" width="0.0961%" height="15" fill="rgb(219,145,47)" fg:x="18380" fg:w="101"/><text x="17.7303%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (101 samples, 0.10%)</title><rect x="17.5792%" y="517" width="0.0961%" height="15" fill="rgb(243,12,26)" fg:x="18484" fg:w="101"/><text x="17.8292%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (381 samples, 0.36%)</title><rect x="17.3215%" y="549" width="0.3623%" height="15" fill="rgb(214,87,16)" fg:x="18213" fg:w="381"/><text x="17.5715%" y="559.50"></text></g><g><title>do_syscall_64 (376 samples, 0.36%)</title><rect x="17.3262%" y="533" width="0.3576%" height="15" fill="rgb(208,99,42)" fg:x="18218" fg:w="376"/><text x="17.5762%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (464 samples, 0.44%)</title><rect x="17.2492%" y="661" width="0.4413%" height="15" fill="rgb(253,99,2)" fg:x="18137" fg:w="464"/><text x="17.4992%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (462 samples, 0.44%)</title><rect x="17.2511%" y="645" width="0.4394%" height="15" fill="rgb(220,168,23)" fg:x="18139" fg:w="462"/><text x="17.5011%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (462 samples, 0.44%)</title><rect x="17.2511%" y="629" width="0.4394%" height="15" fill="rgb(242,38,24)" fg:x="18139" fg:w="462"/><text x="17.5011%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (462 samples, 0.44%)</title><rect x="17.2511%" y="613" width="0.4394%" height="15" fill="rgb(225,182,9)" fg:x="18139" fg:w="462"/><text x="17.5011%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (462 samples, 0.44%)</title><rect x="17.2511%" y="597" width="0.4394%" height="15" fill="rgb(243,178,37)" fg:x="18139" fg:w="462"/><text x="17.5011%" y="607.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (462 samples, 0.44%)</title><rect x="17.2511%" y="581" width="0.4394%" height="15" fill="rgb(232,139,19)" fg:x="18139" fg:w="462"/><text x="17.5011%" y="591.50"></text></g><g><title>__GI___lll_lock_wake (407 samples, 0.39%)</title><rect x="17.3034%" y="565" width="0.3871%" height="15" fill="rgb(225,201,24)" fg:x="18194" fg:w="407"/><text x="17.5534%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (53 samples, 0.05%)</title><rect x="17.6905%" y="661" width="0.0504%" height="15" fill="rgb(221,47,46)" fg:x="18601" fg:w="53"/><text x="17.9405%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (53 samples, 0.05%)</title><rect x="17.6905%" y="645" width="0.0504%" height="15" fill="rgb(249,23,13)" fg:x="18601" fg:w="53"/><text x="17.9405%" y="655.50"></text></g><g><title>__x64_sys_futex (30 samples, 0.03%)</title><rect x="17.8464%" y="533" width="0.0285%" height="15" fill="rgb(219,9,5)" fg:x="18765" fg:w="30"/><text x="18.0964%" y="543.50"></text></g><g><title>do_futex (27 samples, 0.03%)</title><rect x="17.8493%" y="517" width="0.0257%" height="15" fill="rgb(254,171,16)" fg:x="18768" fg:w="27"/><text x="18.0993%" y="527.50"></text></g><g><title>futex_wait (27 samples, 0.03%)</title><rect x="17.8493%" y="501" width="0.0257%" height="15" fill="rgb(230,171,20)" fg:x="18768" fg:w="27"/><text x="18.0993%" y="511.50"></text></g><g><title>futex_wait_setup (21 samples, 0.02%)</title><rect x="17.8550%" y="485" width="0.0200%" height="15" fill="rgb(210,71,41)" fg:x="18774" fg:w="21"/><text x="18.1050%" y="495.50"></text></g><g><title>syscall_exit_to_user_mode (30 samples, 0.03%)</title><rect x="17.8750%" y="533" width="0.0285%" height="15" fill="rgb(206,173,20)" fg:x="18795" fg:w="30"/><text x="18.1250%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (64 samples, 0.06%)</title><rect x="17.8445%" y="565" width="0.0609%" height="15" fill="rgb(233,88,34)" fg:x="18763" fg:w="64"/><text x="18.0945%" y="575.50"></text></g><g><title>do_syscall_64 (62 samples, 0.06%)</title><rect x="17.8464%" y="549" width="0.0590%" height="15" fill="rgb(223,209,46)" fg:x="18765" fg:w="62"/><text x="18.0964%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (80 samples, 0.08%)</title><rect x="17.8303%" y="581" width="0.0761%" height="15" fill="rgb(250,43,18)" fg:x="18748" fg:w="80"/><text x="18.0803%" y="591.50"></text></g><g><title>event_listener::Inner::lock (174 samples, 0.17%)</title><rect x="17.7418%" y="661" width="0.1655%" height="15" fill="rgb(208,13,10)" fg:x="18655" fg:w="174"/><text x="17.9918%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (172 samples, 0.16%)</title><rect x="17.7437%" y="645" width="0.1636%" height="15" fill="rgb(212,200,36)" fg:x="18657" fg:w="172"/><text x="17.9937%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (170 samples, 0.16%)</title><rect x="17.7456%" y="629" width="0.1617%" height="15" fill="rgb(225,90,30)" fg:x="18659" fg:w="170"/><text x="17.9956%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (166 samples, 0.16%)</title><rect x="17.7494%" y="613" width="0.1579%" height="15" fill="rgb(236,182,39)" fg:x="18663" fg:w="166"/><text x="17.9994%" y="623.50"></text></g><g><title>___pthread_mutex_lock (166 samples, 0.16%)</title><rect x="17.7494%" y="597" width="0.1579%" height="15" fill="rgb(212,144,35)" fg:x="18663" fg:w="166"/><text x="17.9994%" y="607.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,532 samples, 2.41%)</title><rect x="16.2420%" y="693" width="2.4081%" height="15" fill="rgb(228,63,44)" fg:x="17078" fg:w="2532"/><text x="16.4920%" y="703.50">as..</text></g><g><title>event_listener::Event::notify (1,493 samples, 1.42%)</title><rect x="17.2302%" y="677" width="1.4199%" height="15" fill="rgb(228,109,6)" fg:x="18117" fg:w="1493"/><text x="17.4802%" y="687.50"></text></g><g><title>event_listener::full_fence (781 samples, 0.74%)</title><rect x="17.9073%" y="661" width="0.7428%" height="15" fill="rgb(238,117,24)" fg:x="18829" fg:w="781"/><text x="18.1573%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (763 samples, 0.73%)</title><rect x="17.9244%" y="645" width="0.7257%" height="15" fill="rgb(242,26,26)" fg:x="18847" fg:w="763"/><text x="18.1744%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (763 samples, 0.73%)</title><rect x="17.9244%" y="629" width="0.7257%" height="15" fill="rgb(221,92,48)" fg:x="18847" fg:w="763"/><text x="18.1744%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (763 samples, 0.73%)</title><rect x="17.9244%" y="613" width="0.7257%" height="15" fill="rgb(209,209,32)" fg:x="18847" fg:w="763"/><text x="18.1744%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (27 samples, 0.03%)</title><rect x="18.6501%" y="693" width="0.0257%" height="15" fill="rgb(221,70,22)" fg:x="19610" fg:w="27"/><text x="18.9001%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="18.6929%" y="565" width="0.0143%" height="15" fill="rgb(248,145,5)" fg:x="19655" fg:w="15"/><text x="18.9429%" y="575.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="18.6938%" y="549" width="0.0133%" height="15" fill="rgb(226,116,26)" fg:x="19656" fg:w="14"/><text x="18.9438%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (19 samples, 0.02%)</title><rect x="18.6900%" y="677" width="0.0181%" height="15" fill="rgb(244,5,17)" fg:x="19652" fg:w="19"/><text x="18.9400%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (19 samples, 0.02%)</title><rect x="18.6900%" y="661" width="0.0181%" height="15" fill="rgb(252,159,33)" fg:x="19652" fg:w="19"/><text x="18.9400%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="18.6900%" y="645" width="0.0181%" height="15" fill="rgb(206,71,0)" fg:x="19652" fg:w="19"/><text x="18.9400%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="18.6900%" y="629" width="0.0181%" height="15" fill="rgb(233,118,54)" fg:x="19652" fg:w="19"/><text x="18.9400%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="18.6900%" y="613" width="0.0181%" height="15" fill="rgb(234,83,48)" fg:x="19652" fg:w="19"/><text x="18.9400%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="18.6900%" y="597" width="0.0181%" height="15" fill="rgb(228,3,54)" fg:x="19652" fg:w="19"/><text x="18.9400%" y="607.50"></text></g><g><title>__GI___lll_lock_wake (17 samples, 0.02%)</title><rect x="18.6919%" y="581" width="0.0162%" height="15" fill="rgb(226,155,13)" fg:x="19654" fg:w="17"/><text x="18.9419%" y="591.50"></text></g><g><title>futex_wait_queue (40 samples, 0.04%)</title><rect x="18.7338%" y="501" width="0.0380%" height="15" fill="rgb(241,28,37)" fg:x="19698" fg:w="40"/><text x="18.9838%" y="511.50"></text></g><g><title>schedule (40 samples, 0.04%)</title><rect x="18.7338%" y="485" width="0.0380%" height="15" fill="rgb(233,93,10)" fg:x="19698" fg:w="40"/><text x="18.9838%" y="495.50"></text></g><g><title>__schedule (39 samples, 0.04%)</title><rect x="18.7347%" y="469" width="0.0371%" height="15" fill="rgb(225,113,19)" fg:x="19699" fg:w="39"/><text x="18.9847%" y="479.50"></text></g><g><title>__x64_sys_futex (51 samples, 0.05%)</title><rect x="18.7262%" y="549" width="0.0485%" height="15" fill="rgb(241,2,18)" fg:x="19690" fg:w="51"/><text x="18.9762%" y="559.50"></text></g><g><title>do_futex (48 samples, 0.05%)</title><rect x="18.7290%" y="533" width="0.0457%" height="15" fill="rgb(228,207,21)" fg:x="19693" fg:w="48"/><text x="18.9790%" y="543.50"></text></g><g><title>futex_wait (48 samples, 0.05%)</title><rect x="18.7290%" y="517" width="0.0457%" height="15" fill="rgb(213,211,35)" fg:x="19693" fg:w="48"/><text x="18.9790%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (12 samples, 0.01%)</title><rect x="18.7766%" y="549" width="0.0114%" height="15" fill="rgb(209,83,10)" fg:x="19743" fg:w="12"/><text x="19.0266%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (72 samples, 0.07%)</title><rect x="18.7205%" y="597" width="0.0685%" height="15" fill="rgb(209,164,1)" fg:x="19684" fg:w="72"/><text x="18.9705%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (68 samples, 0.06%)</title><rect x="18.7243%" y="581" width="0.0647%" height="15" fill="rgb(213,184,43)" fg:x="19688" fg:w="68"/><text x="18.9743%" y="591.50"></text></g><g><title>do_syscall_64 (68 samples, 0.06%)</title><rect x="18.7243%" y="565" width="0.0647%" height="15" fill="rgb(231,61,34)" fg:x="19688" fg:w="68"/><text x="18.9743%" y="575.50"></text></g><g><title>event_listener::Inner::lock (77 samples, 0.07%)</title><rect x="18.7167%" y="677" width="0.0732%" height="15" fill="rgb(235,75,3)" fg:x="19680" fg:w="77"/><text x="18.9667%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (77 samples, 0.07%)</title><rect x="18.7167%" y="661" width="0.0732%" height="15" fill="rgb(220,106,47)" fg:x="19680" fg:w="77"/><text x="18.9667%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (74 samples, 0.07%)</title><rect x="18.7195%" y="645" width="0.0704%" height="15" fill="rgb(210,196,33)" fg:x="19683" fg:w="74"/><text x="18.9695%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (74 samples, 0.07%)</title><rect x="18.7195%" y="629" width="0.0704%" height="15" fill="rgb(229,154,42)" fg:x="19683" fg:w="74"/><text x="18.9695%" y="639.50"></text></g><g><title>___pthread_mutex_lock (74 samples, 0.07%)</title><rect x="18.7195%" y="613" width="0.0704%" height="15" fill="rgb(228,114,26)" fg:x="19683" fg:w="74"/><text x="18.9695%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,980 samples, 2.83%)</title><rect x="16.1821%" y="709" width="2.8341%" height="15" fill="rgb(208,144,1)" fg:x="17015" fg:w="2980"/><text x="16.4321%" y="719.50">&lt;a..</text></g><g><title>event_listener::Event::notify (351 samples, 0.33%)</title><rect x="18.6824%" y="693" width="0.3338%" height="15" fill="rgb(239,112,37)" fg:x="19644" fg:w="351"/><text x="18.9324%" y="703.50"></text></g><g><title>event_listener::full_fence (238 samples, 0.23%)</title><rect x="18.7899%" y="677" width="0.2263%" height="15" fill="rgb(210,96,50)" fg:x="19757" fg:w="238"/><text x="19.0399%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (233 samples, 0.22%)</title><rect x="18.7946%" y="661" width="0.2216%" height="15" fill="rgb(222,178,2)" fg:x="19762" fg:w="233"/><text x="19.0446%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (233 samples, 0.22%)</title><rect x="18.7946%" y="645" width="0.2216%" height="15" fill="rgb(226,74,18)" fg:x="19762" fg:w="233"/><text x="19.0446%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (233 samples, 0.22%)</title><rect x="18.7946%" y="629" width="0.2216%" height="15" fill="rgb(225,67,54)" fg:x="19762" fg:w="233"/><text x="19.0446%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,291 samples, 3.13%)</title><rect x="15.9082%" y="741" width="3.1299%" height="15" fill="rgb(251,92,32)" fg:x="16727" fg:w="3291"/><text x="16.1582%" y="751.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (3,072 samples, 2.92%)</title><rect x="16.1165%" y="725" width="2.9216%" height="15" fill="rgb(228,149,22)" fg:x="16946" fg:w="3072"/><text x="16.3665%" y="735.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="19.0162%" y="709" width="0.0219%" height="15" fill="rgb(243,54,13)" fg:x="19995" fg:w="23"/><text x="19.2662%" y="719.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="19.0638%" y="469" width="0.0114%" height="15" fill="rgb(243,180,28)" fg:x="20045" fg:w="12"/><text x="19.3138%" y="479.50"></text></g><g><title>rust_alloc (51 samples, 0.05%)</title><rect x="19.0752%" y="437" width="0.0485%" height="15" fill="rgb(208,167,24)" fg:x="20057" fg:w="51"/><text x="19.3252%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="19.1408%" y="421" width="0.0418%" height="15" fill="rgb(245,73,45)" fg:x="20126" fg:w="44"/><text x="19.3908%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="19.1408%" y="405" width="0.0418%" height="15" fill="rgb(237,203,48)" fg:x="20126" fg:w="44"/><text x="19.3908%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (37 samples, 0.04%)</title><rect x="19.1475%" y="389" width="0.0352%" height="15" fill="rgb(211,197,16)" fg:x="20133" fg:w="37"/><text x="19.3975%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (29 samples, 0.03%)</title><rect x="19.1551%" y="373" width="0.0276%" height="15" fill="rgb(243,99,51)" fg:x="20141" fg:w="29"/><text x="19.4051%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="19.1551%" y="357" width="0.0276%" height="15" fill="rgb(215,123,29)" fg:x="20141" fg:w="29"/><text x="19.4051%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="19.1551%" y="341" width="0.0276%" height="15" fill="rgb(239,186,37)" fg:x="20141" fg:w="29"/><text x="19.4051%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (87 samples, 0.08%)</title><rect x="19.1846%" y="421" width="0.0827%" height="15" fill="rgb(252,136,39)" fg:x="20172" fg:w="87"/><text x="19.4346%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (87 samples, 0.08%)</title><rect x="19.1846%" y="405" width="0.0827%" height="15" fill="rgb(223,213,32)" fg:x="20172" fg:w="87"/><text x="19.4346%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (536 samples, 0.51%)</title><rect x="19.0752%" y="469" width="0.5098%" height="15" fill="rgb(233,115,5)" fg:x="20057" fg:w="536"/><text x="19.3252%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (536 samples, 0.51%)</title><rect x="19.0752%" y="453" width="0.5098%" height="15" fill="rgb(207,226,44)" fg:x="20057" fg:w="536"/><text x="19.3252%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (476 samples, 0.45%)</title><rect x="19.1323%" y="437" width="0.4527%" height="15" fill="rgb(208,126,0)" fg:x="20117" fg:w="476"/><text x="19.3823%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (334 samples, 0.32%)</title><rect x="19.2673%" y="421" width="0.3177%" height="15" fill="rgb(244,66,21)" fg:x="20259" fg:w="334"/><text x="19.5173%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (334 samples, 0.32%)</title><rect x="19.2673%" y="405" width="0.3177%" height="15" fill="rgb(222,97,12)" fg:x="20259" fg:w="334"/><text x="19.5173%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (573 samples, 0.54%)</title><rect x="19.0457%" y="613" width="0.5450%" height="15" fill="rgb(219,213,19)" fg:x="20026" fg:w="573"/><text x="19.2957%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (573 samples, 0.54%)</title><rect x="19.0457%" y="597" width="0.5450%" height="15" fill="rgb(252,169,30)" fg:x="20026" fg:w="573"/><text x="19.2957%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (567 samples, 0.54%)</title><rect x="19.0514%" y="581" width="0.5392%" height="15" fill="rgb(206,32,51)" fg:x="20032" fg:w="567"/><text x="19.3014%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (567 samples, 0.54%)</title><rect x="19.0514%" y="565" width="0.5392%" height="15" fill="rgb(250,172,42)" fg:x="20032" fg:w="567"/><text x="19.3014%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (567 samples, 0.54%)</title><rect x="19.0514%" y="549" width="0.5392%" height="15" fill="rgb(209,34,43)" fg:x="20032" fg:w="567"/><text x="19.3014%" y="559.50"></text></g><g><title>alloc::alloc::alloc (555 samples, 0.53%)</title><rect x="19.0628%" y="533" width="0.5278%" height="15" fill="rgb(223,11,35)" fg:x="20044" fg:w="555"/><text x="19.3128%" y="543.50"></text></g><g><title>__rg_alloc (555 samples, 0.53%)</title><rect x="19.0628%" y="517" width="0.5278%" height="15" fill="rgb(251,219,26)" fg:x="20044" fg:w="555"/><text x="19.3128%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (555 samples, 0.53%)</title><rect x="19.0628%" y="501" width="0.5278%" height="15" fill="rgb(231,119,3)" fg:x="20044" fg:w="555"/><text x="19.3128%" y="511.50"></text></g><g><title>rust_alloc (554 samples, 0.53%)</title><rect x="19.0638%" y="485" width="0.5269%" height="15" fill="rgb(216,97,11)" fg:x="20045" fg:w="554"/><text x="19.3138%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (611 samples, 0.58%)</title><rect x="19.0457%" y="741" width="0.5811%" height="15" fill="rgb(223,59,9)" fg:x="20026" fg:w="611"/><text x="19.2957%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (611 samples, 0.58%)</title><rect x="19.0457%" y="725" width="0.5811%" height="15" fill="rgb(233,93,31)" fg:x="20026" fg:w="611"/><text x="19.2957%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (611 samples, 0.58%)</title><rect x="19.0457%" y="709" width="0.5811%" height="15" fill="rgb(239,81,33)" fg:x="20026" fg:w="611"/><text x="19.2957%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (611 samples, 0.58%)</title><rect x="19.0457%" y="693" width="0.5811%" height="15" fill="rgb(213,120,34)" fg:x="20026" fg:w="611"/><text x="19.2957%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (611 samples, 0.58%)</title><rect x="19.0457%" y="677" width="0.5811%" height="15" fill="rgb(243,49,53)" fg:x="20026" fg:w="611"/><text x="19.2957%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (611 samples, 0.58%)</title><rect x="19.0457%" y="661" width="0.5811%" height="15" fill="rgb(247,216,33)" fg:x="20026" fg:w="611"/><text x="19.2957%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (611 samples, 0.58%)</title><rect x="19.0457%" y="645" width="0.5811%" height="15" fill="rgb(226,26,14)" fg:x="20026" fg:w="611"/><text x="19.2957%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (611 samples, 0.58%)</title><rect x="19.0457%" y="629" width="0.5811%" height="15" fill="rgb(215,49,53)" fg:x="20026" fg:w="611"/><text x="19.2957%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (38 samples, 0.04%)</title><rect x="19.5907%" y="613" width="0.0361%" height="15" fill="rgb(245,162,40)" fg:x="20599" fg:w="38"/><text x="19.8407%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.04%)</title><rect x="19.5907%" y="597" width="0.0361%" height="15" fill="rgb(229,68,17)" fg:x="20599" fg:w="38"/><text x="19.8407%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (34 samples, 0.03%)</title><rect x="19.5945%" y="581" width="0.0323%" height="15" fill="rgb(213,182,10)" fg:x="20603" fg:w="34"/><text x="19.8445%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (861 samples, 0.82%)</title><rect x="19.6268%" y="741" width="0.8189%" height="15" fill="rgb(245,125,30)" fg:x="20637" fg:w="861"/><text x="19.8768%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (413 samples, 0.39%)</title><rect x="20.4713%" y="725" width="0.3928%" height="15" fill="rgb(232,202,2)" fg:x="21525" fg:w="413"/><text x="20.7213%" y="735.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="20.8765%" y="613" width="0.0209%" height="15" fill="rgb(237,140,51)" fg:x="21951" fg:w="22"/><text x="21.1265%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="20.9393%" y="453" width="0.0171%" height="15" fill="rgb(236,157,25)" fg:x="22017" fg:w="18"/><text x="21.1893%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="20.9402%" y="437" width="0.0162%" height="15" fill="rgb(219,209,0)" fg:x="22018" fg:w="17"/><text x="21.1902%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (38 samples, 0.04%)</title><rect x="20.9316%" y="501" width="0.0361%" height="15" fill="rgb(240,116,54)" fg:x="22009" fg:w="38"/><text x="21.1816%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (38 samples, 0.04%)</title><rect x="20.9316%" y="485" width="0.0361%" height="15" fill="rgb(216,10,36)" fg:x="22009" fg:w="38"/><text x="21.1816%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (35 samples, 0.03%)</title><rect x="20.9345%" y="469" width="0.0333%" height="15" fill="rgb(222,72,44)" fg:x="22012" fg:w="35"/><text x="21.1845%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="20.9564%" y="453" width="0.0114%" height="15" fill="rgb(232,159,9)" fg:x="22035" fg:w="12"/><text x="21.2064%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="20.9564%" y="437" width="0.0114%" height="15" fill="rgb(210,39,32)" fg:x="22035" fg:w="12"/><text x="21.2064%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (47 samples, 0.04%)</title><rect x="20.9316%" y="517" width="0.0447%" height="15" fill="rgb(216,194,45)" fg:x="22009" fg:w="47"/><text x="21.1816%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (75 samples, 0.07%)</title><rect x="20.9193%" y="533" width="0.0713%" height="15" fill="rgb(218,18,35)" fg:x="21996" fg:w="75"/><text x="21.1693%" y="543.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="20.9782%" y="517" width="0.0124%" height="15" fill="rgb(207,83,51)" fg:x="22058" fg:w="13"/><text x="21.2282%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="20.9782%" y="501" width="0.0124%" height="15" fill="rgb(225,63,43)" fg:x="22058" fg:w="13"/><text x="21.2282%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="20.9782%" y="485" width="0.0124%" height="15" fill="rgb(207,57,36)" fg:x="22058" fg:w="13"/><text x="21.2282%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="20.9782%" y="469" width="0.0124%" height="15" fill="rgb(216,99,33)" fg:x="22058" fg:w="13"/><text x="21.2282%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (46 samples, 0.04%)</title><rect x="21.0106%" y="517" width="0.0437%" height="15" fill="rgb(225,42,16)" fg:x="22092" fg:w="46"/><text x="21.2606%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (419 samples, 0.40%)</title><rect x="20.9193%" y="565" width="0.3985%" height="15" fill="rgb(220,201,45)" fg:x="21996" fg:w="419"/><text x="21.1693%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (419 samples, 0.40%)</title><rect x="20.9193%" y="549" width="0.3985%" height="15" fill="rgb(225,33,4)" fg:x="21996" fg:w="419"/><text x="21.1693%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (344 samples, 0.33%)</title><rect x="20.9906%" y="533" width="0.3272%" height="15" fill="rgb(224,33,50)" fg:x="22071" fg:w="344"/><text x="21.2406%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (277 samples, 0.26%)</title><rect x="21.0543%" y="517" width="0.2634%" height="15" fill="rgb(246,198,51)" fg:x="22138" fg:w="277"/><text x="21.3043%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (277 samples, 0.26%)</title><rect x="21.0543%" y="501" width="0.2634%" height="15" fill="rgb(205,22,4)" fg:x="22138" fg:w="277"/><text x="21.3043%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (277 samples, 0.26%)</title><rect x="21.0543%" y="485" width="0.2634%" height="15" fill="rgb(206,3,8)" fg:x="22138" fg:w="277"/><text x="21.3043%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (18 samples, 0.02%)</title><rect x="21.3292%" y="517" width="0.0171%" height="15" fill="rgb(251,23,15)" fg:x="22427" fg:w="18"/><text x="21.5792%" y="527.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (12 samples, 0.01%)</title><rect x="21.3349%" y="501" width="0.0114%" height="15" fill="rgb(252,88,28)" fg:x="22433" fg:w="12"/><text x="21.5849%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (16 samples, 0.02%)</title><rect x="21.3463%" y="501" width="0.0152%" height="15" fill="rgb(212,127,14)" fg:x="22445" fg:w="16"/><text x="21.5963%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (16 samples, 0.02%)</title><rect x="21.3463%" y="485" width="0.0152%" height="15" fill="rgb(247,145,37)" fg:x="22445" fg:w="16"/><text x="21.5963%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.02%)</title><rect x="21.3777%" y="485" width="0.0152%" height="15" fill="rgb(209,117,53)" fg:x="22478" fg:w="16"/><text x="21.6277%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="21.3777%" y="469" width="0.0152%" height="15" fill="rgb(212,90,42)" fg:x="22478" fg:w="16"/><text x="21.6277%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="21.3463%" y="517" width="0.0476%" height="15" fill="rgb(218,164,37)" fg:x="22445" fg:w="50"/><text x="21.5963%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (34 samples, 0.03%)</title><rect x="21.3615%" y="501" width="0.0323%" height="15" fill="rgb(246,65,34)" fg:x="22461" fg:w="34"/><text x="21.6115%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.07%)</title><rect x="21.3263%" y="565" width="0.0685%" height="15" fill="rgb(231,100,33)" fg:x="22424" fg:w="72"/><text x="21.5763%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.07%)</title><rect x="21.3263%" y="549" width="0.0685%" height="15" fill="rgb(228,126,14)" fg:x="22424" fg:w="72"/><text x="21.5763%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (70 samples, 0.07%)</title><rect x="21.3282%" y="533" width="0.0666%" height="15" fill="rgb(215,173,21)" fg:x="22426" fg:w="70"/><text x="21.5782%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="21.3948%" y="565" width="0.0124%" height="15" fill="rgb(210,6,40)" fg:x="22496" fg:w="13"/><text x="21.6448%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="21.3948%" y="549" width="0.0124%" height="15" fill="rgb(212,48,18)" fg:x="22496" fg:w="13"/><text x="21.6448%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (656 samples, 0.62%)</title><rect x="20.8984%" y="613" width="0.6239%" height="15" fill="rgb(230,214,11)" fg:x="21974" fg:w="656"/><text x="21.1484%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (655 samples, 0.62%)</title><rect x="20.8993%" y="597" width="0.6229%" height="15" fill="rgb(254,105,39)" fg:x="21975" fg:w="655"/><text x="21.1493%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (640 samples, 0.61%)</title><rect x="20.9136%" y="581" width="0.6087%" height="15" fill="rgb(245,158,5)" fg:x="21990" fg:w="640"/><text x="21.1636%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (121 samples, 0.12%)</title><rect x="21.4072%" y="565" width="0.1151%" height="15" fill="rgb(249,208,11)" fg:x="22509" fg:w="121"/><text x="21.6572%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (121 samples, 0.12%)</title><rect x="21.4072%" y="549" width="0.1151%" height="15" fill="rgb(210,39,28)" fg:x="22509" fg:w="121"/><text x="21.6572%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,135 samples, 1.08%)</title><rect x="20.4457%" y="741" width="1.0794%" height="15" fill="rgb(211,56,53)" fg:x="21498" fg:w="1135"/><text x="20.6957%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (695 samples, 0.66%)</title><rect x="20.8641%" y="725" width="0.6610%" height="15" fill="rgb(226,201,30)" fg:x="21938" fg:w="695"/><text x="21.1141%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (695 samples, 0.66%)</title><rect x="20.8641%" y="709" width="0.6610%" height="15" fill="rgb(239,101,34)" fg:x="21938" fg:w="695"/><text x="21.1141%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (695 samples, 0.66%)</title><rect x="20.8641%" y="693" width="0.6610%" height="15" fill="rgb(226,209,5)" fg:x="21938" fg:w="695"/><text x="21.1141%" y="703.50"></text></g><g><title>alloc::alloc::alloc (695 samples, 0.66%)</title><rect x="20.8641%" y="677" width="0.6610%" height="15" fill="rgb(250,105,47)" fg:x="21938" fg:w="695"/><text x="21.1141%" y="687.50"></text></g><g><title>__rg_alloc (695 samples, 0.66%)</title><rect x="20.8641%" y="661" width="0.6610%" height="15" fill="rgb(230,72,3)" fg:x="21938" fg:w="695"/><text x="21.1141%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (695 samples, 0.66%)</title><rect x="20.8641%" y="645" width="0.6610%" height="15" fill="rgb(232,218,39)" fg:x="21938" fg:w="695"/><text x="21.1141%" y="655.50"></text></g><g><title>rust_alloc (682 samples, 0.65%)</title><rect x="20.8765%" y="629" width="0.6486%" height="15" fill="rgb(248,166,6)" fg:x="21951" fg:w="682"/><text x="21.1265%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="21.5536%" y="645" width="0.0114%" height="15" fill="rgb(247,89,20)" fg:x="22663" fg:w="12"/><text x="21.8036%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="21.5546%" y="629" width="0.0105%" height="15" fill="rgb(248,130,54)" fg:x="22664" fg:w="11"/><text x="21.8046%" y="639.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="21.5546%" y="613" width="0.0105%" height="15" fill="rgb(234,196,4)" fg:x="22664" fg:w="11"/><text x="21.8046%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="21.5546%" y="597" width="0.0105%" height="15" fill="rgb(250,143,31)" fg:x="22664" fg:w="11"/><text x="21.8046%" y="607.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="21.5536%" y="693" width="0.0190%" height="15" fill="rgb(211,110,34)" fg:x="22663" fg:w="20"/><text x="21.8036%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (20 samples, 0.02%)</title><rect x="21.5536%" y="677" width="0.0190%" height="15" fill="rgb(215,124,48)" fg:x="22663" fg:w="20"/><text x="21.8036%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="21.5536%" y="661" width="0.0190%" height="15" fill="rgb(216,46,13)" fg:x="22663" fg:w="20"/><text x="21.8036%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (22 samples, 0.02%)</title><rect x="21.5536%" y="709" width="0.0209%" height="15" fill="rgb(205,184,25)" fg:x="22663" fg:w="22"/><text x="21.8036%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.06%)</title><rect x="21.5251%" y="725" width="0.0628%" height="15" fill="rgb(228,1,10)" fg:x="22633" fg:w="66"/><text x="21.7751%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (14 samples, 0.01%)</title><rect x="21.5746%" y="709" width="0.0133%" height="15" fill="rgb(213,116,27)" fg:x="22685" fg:w="14"/><text x="21.8246%" y="719.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="21.5917%" y="693" width="0.0124%" height="15" fill="rgb(241,95,50)" fg:x="22703" fg:w="13"/><text x="21.8417%" y="703.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="21.5936%" y="677" width="0.0105%" height="15" fill="rgb(238,48,32)" fg:x="22705" fg:w="11"/><text x="21.8436%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="21.6430%" y="581" width="0.0200%" height="15" fill="rgb(235,113,49)" fg:x="22757" fg:w="21"/><text x="21.8930%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="21.6430%" y="565" width="0.0200%" height="15" fill="rgb(205,127,43)" fg:x="22757" fg:w="21"/><text x="21.8930%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.05%)</title><rect x="21.6212%" y="629" width="0.0485%" height="15" fill="rgb(250,162,2)" fg:x="22734" fg:w="51"/><text x="21.8712%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.05%)</title><rect x="21.6212%" y="613" width="0.0485%" height="15" fill="rgb(220,13,41)" fg:x="22734" fg:w="51"/><text x="21.8712%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (45 samples, 0.04%)</title><rect x="21.6269%" y="597" width="0.0428%" height="15" fill="rgb(249,221,25)" fg:x="22740" fg:w="45"/><text x="21.8769%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (96 samples, 0.09%)</title><rect x="21.6040%" y="661" width="0.0913%" height="15" fill="rgb(215,208,19)" fg:x="22716" fg:w="96"/><text x="21.8540%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (96 samples, 0.09%)</title><rect x="21.6040%" y="645" width="0.0913%" height="15" fill="rgb(236,175,2)" fg:x="22716" fg:w="96"/><text x="21.8540%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (27 samples, 0.03%)</title><rect x="21.6697%" y="629" width="0.0257%" height="15" fill="rgb(241,52,2)" fg:x="22785" fg:w="27"/><text x="21.9197%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (97 samples, 0.09%)</title><rect x="21.6040%" y="693" width="0.0923%" height="15" fill="rgb(248,140,14)" fg:x="22716" fg:w="97"/><text x="21.8540%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (97 samples, 0.09%)</title><rect x="21.6040%" y="677" width="0.0923%" height="15" fill="rgb(253,22,42)" fg:x="22716" fg:w="97"/><text x="21.8540%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (122 samples, 0.12%)</title><rect x="21.5907%" y="709" width="0.1160%" height="15" fill="rgb(234,61,47)" fg:x="22702" fg:w="122"/><text x="21.8407%" y="719.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="21.6963%" y="693" width="0.0105%" height="15" fill="rgb(208,226,15)" fg:x="22813" fg:w="11"/><text x="21.9463%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="21.6963%" y="677" width="0.0105%" height="15" fill="rgb(217,221,4)" fg:x="22813" fg:w="11"/><text x="21.9463%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="21.6963%" y="661" width="0.0105%" height="15" fill="rgb(212,174,34)" fg:x="22813" fg:w="11"/><text x="21.9463%" y="671.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="21.6963%" y="645" width="0.0105%" height="15" fill="rgb(253,83,4)" fg:x="22813" fg:w="11"/><text x="21.9463%" y="655.50"></text></g><g><title>rust_dealloc (133 samples, 0.13%)</title><rect x="21.5879%" y="725" width="0.1265%" height="15" fill="rgb(250,195,49)" fg:x="22699" fg:w="133"/><text x="21.8379%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (217 samples, 0.21%)</title><rect x="21.5251%" y="741" width="0.2064%" height="15" fill="rgb(241,192,25)" fg:x="22633" fg:w="217"/><text x="21.7751%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="21.7144%" y="725" width="0.0171%" height="15" fill="rgb(208,124,10)" fg:x="22832" fg:w="18"/><text x="21.9644%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (13 samples, 0.01%)</title><rect x="21.7496%" y="741" width="0.0124%" height="15" fill="rgb(222,33,0)" fg:x="22869" fg:w="13"/><text x="21.9996%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (62 samples, 0.06%)</title><rect x="21.7619%" y="741" width="0.0590%" height="15" fill="rgb(234,209,28)" fg:x="22882" fg:w="62"/><text x="22.0119%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (62 samples, 0.06%)</title><rect x="21.7619%" y="725" width="0.0590%" height="15" fill="rgb(224,11,23)" fg:x="22882" fg:w="62"/><text x="22.0119%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (62 samples, 0.06%)</title><rect x="21.7619%" y="709" width="0.0590%" height="15" fill="rgb(232,99,1)" fg:x="22882" fg:w="62"/><text x="22.0119%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 0.06%)</title><rect x="21.7619%" y="693" width="0.0590%" height="15" fill="rgb(237,95,45)" fg:x="22882" fg:w="62"/><text x="22.0119%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (36 samples, 0.03%)</title><rect x="21.7866%" y="677" width="0.0342%" height="15" fill="rgb(208,109,11)" fg:x="22908" fg:w="36"/><text x="22.0366%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (36 samples, 0.03%)</title><rect x="21.7866%" y="661" width="0.0342%" height="15" fill="rgb(216,190,48)" fg:x="22908" fg:w="36"/><text x="22.0366%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (36 samples, 0.03%)</title><rect x="21.7866%" y="645" width="0.0342%" height="15" fill="rgb(251,171,36)" fg:x="22908" fg:w="36"/><text x="22.0366%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (33 samples, 0.03%)</title><rect x="21.7895%" y="629" width="0.0314%" height="15" fill="rgb(230,62,22)" fg:x="22911" fg:w="33"/><text x="22.0395%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (23 samples, 0.02%)</title><rect x="21.7990%" y="613" width="0.0219%" height="15" fill="rgb(225,114,35)" fg:x="22921" fg:w="23"/><text x="22.0490%" y="623.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (13 samples, 0.01%)</title><rect x="21.8256%" y="741" width="0.0124%" height="15" fill="rgb(215,118,42)" fg:x="22949" fg:w="13"/><text x="22.0756%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,040 samples, 6.70%)</title><rect x="15.2434%" y="773" width="6.6954%" height="15" fill="rgb(243,119,21)" fg:x="16028" fg:w="7040"/><text x="15.4934%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (7,026 samples, 6.68%)</title><rect x="15.2567%" y="757" width="6.6821%" height="15" fill="rgb(252,177,53)" fg:x="16042" fg:w="7026"/><text x="15.5067%" y="767.50">tremor_ru..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (106 samples, 0.10%)</title><rect x="21.8380%" y="741" width="0.1008%" height="15" fill="rgb(237,209,29)" fg:x="22962" fg:w="106"/><text x="22.0880%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (106 samples, 0.10%)</title><rect x="21.8380%" y="725" width="0.1008%" height="15" fill="rgb(212,65,23)" fg:x="22962" fg:w="106"/><text x="22.0880%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (106 samples, 0.10%)</title><rect x="21.8380%" y="709" width="0.1008%" height="15" fill="rgb(230,222,46)" fg:x="22962" fg:w="106"/><text x="22.0880%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (68 samples, 0.06%)</title><rect x="21.8741%" y="693" width="0.0647%" height="15" fill="rgb(215,135,32)" fg:x="23000" fg:w="68"/><text x="22.1241%" y="703.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="23.1010%" y="757" width="0.0257%" height="15" fill="rgb(246,101,22)" fg:x="24290" fg:w="27"/><text x="23.3510%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="23.1267%" y="757" width="0.0152%" height="15" fill="rgb(206,107,13)" fg:x="24317" fg:w="16"/><text x="23.3767%" y="767.50"></text></g><g><title>aligned_size (26 samples, 0.02%)</title><rect x="23.4833%" y="517" width="0.0247%" height="15" fill="rgb(250,100,44)" fg:x="24692" fg:w="26"/><text x="23.7333%" y="527.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="23.5080%" y="485" width="0.0124%" height="15" fill="rgb(231,147,38)" fg:x="24718" fg:w="13"/><text x="23.7580%" y="495.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="23.5204%" y="485" width="0.0105%" height="15" fill="rgb(229,8,40)" fg:x="24731" fg:w="11"/><text x="23.7704%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="23.5432%" y="469" width="0.0105%" height="15" fill="rgb(221,135,30)" fg:x="24755" fg:w="11"/><text x="23.7932%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="23.5432%" y="453" width="0.0105%" height="15" fill="rgb(249,193,18)" fg:x="24755" fg:w="11"/><text x="23.7932%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="23.5432%" y="437" width="0.0105%" height="15" fill="rgb(209,133,39)" fg:x="24755" fg:w="11"/><text x="23.7932%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="23.5432%" y="421" width="0.0105%" height="15" fill="rgb(232,100,14)" fg:x="24755" fg:w="11"/><text x="23.7932%" y="431.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (11 samples, 0.01%)</title><rect x="23.5432%" y="405" width="0.0105%" height="15" fill="rgb(224,185,1)" fg:x="24755" fg:w="11"/><text x="23.7932%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (226 samples, 0.21%)</title><rect x="23.4510%" y="661" width="0.2149%" height="15" fill="rgb(223,139,8)" fg:x="24658" fg:w="226"/><text x="23.7010%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (226 samples, 0.21%)</title><rect x="23.4510%" y="645" width="0.2149%" height="15" fill="rgb(232,213,38)" fg:x="24658" fg:w="226"/><text x="23.7010%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (226 samples, 0.21%)</title><rect x="23.4510%" y="629" width="0.2149%" height="15" fill="rgb(207,94,22)" fg:x="24658" fg:w="226"/><text x="23.7010%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (211 samples, 0.20%)</title><rect x="23.4652%" y="613" width="0.2007%" height="15" fill="rgb(219,183,54)" fg:x="24673" fg:w="211"/><text x="23.7152%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (211 samples, 0.20%)</title><rect x="23.4652%" y="597" width="0.2007%" height="15" fill="rgb(216,185,54)" fg:x="24673" fg:w="211"/><text x="23.7152%" y="607.50"></text></g><g><title>alloc::alloc::alloc (211 samples, 0.20%)</title><rect x="23.4652%" y="581" width="0.2007%" height="15" fill="rgb(254,217,39)" fg:x="24673" fg:w="211"/><text x="23.7152%" y="591.50"></text></g><g><title>__rg_alloc (211 samples, 0.20%)</title><rect x="23.4652%" y="565" width="0.2007%" height="15" fill="rgb(240,178,23)" fg:x="24673" fg:w="211"/><text x="23.7152%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (211 samples, 0.20%)</title><rect x="23.4652%" y="549" width="0.2007%" height="15" fill="rgb(218,11,47)" fg:x="24673" fg:w="211"/><text x="23.7152%" y="559.50"></text></g><g><title>rust_alloc (192 samples, 0.18%)</title><rect x="23.4833%" y="533" width="0.1826%" height="15" fill="rgb(218,51,51)" fg:x="24692" fg:w="192"/><text x="23.7333%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.16%)</title><rect x="23.5080%" y="517" width="0.1579%" height="15" fill="rgb(238,126,27)" fg:x="24718" fg:w="166"/><text x="23.7580%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.16%)</title><rect x="23.5080%" y="501" width="0.1579%" height="15" fill="rgb(249,202,22)" fg:x="24718" fg:w="166"/><text x="23.7580%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (142 samples, 0.14%)</title><rect x="23.5309%" y="485" width="0.1350%" height="15" fill="rgb(254,195,49)" fg:x="24742" fg:w="142"/><text x="23.7809%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (118 samples, 0.11%)</title><rect x="23.5537%" y="469" width="0.1122%" height="15" fill="rgb(208,123,14)" fg:x="24766" fg:w="118"/><text x="23.8037%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (118 samples, 0.11%)</title><rect x="23.5537%" y="453" width="0.1122%" height="15" fill="rgb(224,200,8)" fg:x="24766" fg:w="118"/><text x="23.8037%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (347 samples, 0.33%)</title><rect x="23.4120%" y="741" width="0.3300%" height="15" fill="rgb(217,61,36)" fg:x="24617" fg:w="347"/><text x="23.6620%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (306 samples, 0.29%)</title><rect x="23.4510%" y="725" width="0.2910%" height="15" fill="rgb(206,35,45)" fg:x="24658" fg:w="306"/><text x="23.7010%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (306 samples, 0.29%)</title><rect x="23.4510%" y="709" width="0.2910%" height="15" fill="rgb(217,65,33)" fg:x="24658" fg:w="306"/><text x="23.7010%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (306 samples, 0.29%)</title><rect x="23.4510%" y="693" width="0.2910%" height="15" fill="rgb(222,158,48)" fg:x="24658" fg:w="306"/><text x="23.7010%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (306 samples, 0.29%)</title><rect x="23.4510%" y="677" width="0.2910%" height="15" fill="rgb(254,2,54)" fg:x="24658" fg:w="306"/><text x="23.7010%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (80 samples, 0.08%)</title><rect x="23.6659%" y="661" width="0.0761%" height="15" fill="rgb(250,143,38)" fg:x="24884" fg:w="80"/><text x="23.9159%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (80 samples, 0.08%)</title><rect x="23.6659%" y="645" width="0.0761%" height="15" fill="rgb(248,25,0)" fg:x="24884" fg:w="80"/><text x="23.9159%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (64 samples, 0.06%)</title><rect x="23.6811%" y="629" width="0.0609%" height="15" fill="rgb(206,152,27)" fg:x="24900" fg:w="64"/><text x="23.9311%" y="639.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="23.8095%" y="421" width="0.0105%" height="15" fill="rgb(240,77,30)" fg:x="25035" fg:w="11"/><text x="24.0595%" y="431.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="23.8095%" y="405" width="0.0105%" height="15" fill="rgb(231,5,3)" fg:x="25035" fg:w="11"/><text x="24.0595%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (84 samples, 0.08%)</title><rect x="23.8048%" y="453" width="0.0799%" height="15" fill="rgb(207,226,32)" fg:x="25030" fg:w="84"/><text x="24.0548%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (84 samples, 0.08%)</title><rect x="23.8048%" y="437" width="0.0799%" height="15" fill="rgb(222,207,47)" fg:x="25030" fg:w="84"/><text x="24.0548%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (68 samples, 0.06%)</title><rect x="23.8200%" y="421" width="0.0647%" height="15" fill="rgb(229,115,45)" fg:x="25046" fg:w="68"/><text x="24.0700%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (57 samples, 0.05%)</title><rect x="23.8304%" y="405" width="0.0542%" height="15" fill="rgb(224,191,6)" fg:x="25057" fg:w="57"/><text x="24.0804%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (57 samples, 0.05%)</title><rect x="23.8304%" y="389" width="0.0542%" height="15" fill="rgb(230,227,24)" fg:x="25057" fg:w="57"/><text x="24.0804%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (117 samples, 0.11%)</title><rect x="23.7791%" y="597" width="0.1113%" height="15" fill="rgb(228,80,19)" fg:x="25003" fg:w="117"/><text x="24.0291%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (117 samples, 0.11%)</title><rect x="23.7791%" y="581" width="0.1113%" height="15" fill="rgb(247,229,0)" fg:x="25003" fg:w="117"/><text x="24.0291%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (117 samples, 0.11%)</title><rect x="23.7791%" y="565" width="0.1113%" height="15" fill="rgb(237,194,15)" fg:x="25003" fg:w="117"/><text x="24.0291%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113 samples, 0.11%)</title><rect x="23.7829%" y="549" width="0.1075%" height="15" fill="rgb(219,203,20)" fg:x="25007" fg:w="113"/><text x="24.0329%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113 samples, 0.11%)</title><rect x="23.7829%" y="533" width="0.1075%" height="15" fill="rgb(234,128,8)" fg:x="25007" fg:w="113"/><text x="24.0329%" y="543.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.10%)</title><rect x="23.7876%" y="517" width="0.1027%" height="15" fill="rgb(248,202,8)" fg:x="25012" fg:w="108"/><text x="24.0376%" y="527.50"></text></g><g><title>__rg_alloc (108 samples, 0.10%)</title><rect x="23.7876%" y="501" width="0.1027%" height="15" fill="rgb(206,104,37)" fg:x="25012" fg:w="108"/><text x="24.0376%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (108 samples, 0.10%)</title><rect x="23.7876%" y="485" width="0.1027%" height="15" fill="rgb(223,8,27)" fg:x="25012" fg:w="108"/><text x="24.0376%" y="495.50"></text></g><g><title>rust_alloc (104 samples, 0.10%)</title><rect x="23.7915%" y="469" width="0.0989%" height="15" fill="rgb(216,217,28)" fg:x="25016" fg:w="104"/><text x="24.0415%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (184 samples, 0.17%)</title><rect x="23.7734%" y="677" width="0.1750%" height="15" fill="rgb(249,199,1)" fg:x="24997" fg:w="184"/><text x="24.0234%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (178 samples, 0.17%)</title><rect x="23.7791%" y="661" width="0.1693%" height="15" fill="rgb(240,85,17)" fg:x="25003" fg:w="178"/><text x="24.0291%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (178 samples, 0.17%)</title><rect x="23.7791%" y="645" width="0.1693%" height="15" fill="rgb(206,108,45)" fg:x="25003" fg:w="178"/><text x="24.0291%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (178 samples, 0.17%)</title><rect x="23.7791%" y="629" width="0.1693%" height="15" fill="rgb(245,210,41)" fg:x="25003" fg:w="178"/><text x="24.0291%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (178 samples, 0.17%)</title><rect x="23.7791%" y="613" width="0.1693%" height="15" fill="rgb(206,13,37)" fg:x="25003" fg:w="178"/><text x="24.0291%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (61 samples, 0.06%)</title><rect x="23.8904%" y="597" width="0.0580%" height="15" fill="rgb(250,61,18)" fg:x="25120" fg:w="61"/><text x="24.1404%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61 samples, 0.06%)</title><rect x="23.8904%" y="581" width="0.0580%" height="15" fill="rgb(235,172,48)" fg:x="25120" fg:w="61"/><text x="24.1404%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (47 samples, 0.04%)</title><rect x="23.9037%" y="565" width="0.0447%" height="15" fill="rgb(249,201,17)" fg:x="25134" fg:w="47"/><text x="24.1537%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="23.9484%" y="677" width="0.0162%" height="15" fill="rgb(219,208,6)" fg:x="25181" fg:w="17"/><text x="24.1984%" y="687.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="24.0092%" y="533" width="0.0114%" height="15" fill="rgb(248,31,23)" fg:x="25245" fg:w="12"/><text x="24.2592%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="24.0340%" y="485" width="0.0105%" height="15" fill="rgb(245,15,42)" fg:x="25271" fg:w="11"/><text x="24.2840%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="24.0340%" y="469" width="0.0105%" height="15" fill="rgb(222,217,39)" fg:x="25271" fg:w="11"/><text x="24.2840%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (121 samples, 0.12%)</title><rect x="24.0207%" y="533" width="0.1151%" height="15" fill="rgb(210,219,27)" fg:x="25257" fg:w="121"/><text x="24.2707%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (121 samples, 0.12%)</title><rect x="24.0207%" y="517" width="0.1151%" height="15" fill="rgb(252,166,36)" fg:x="25257" fg:w="121"/><text x="24.2707%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (113 samples, 0.11%)</title><rect x="24.0283%" y="501" width="0.1075%" height="15" fill="rgb(245,132,34)" fg:x="25265" fg:w="113"/><text x="24.2783%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (96 samples, 0.09%)</title><rect x="24.0444%" y="485" width="0.0913%" height="15" fill="rgb(236,54,3)" fg:x="25282" fg:w="96"/><text x="24.2944%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (96 samples, 0.09%)</title><rect x="24.0444%" y="469" width="0.0913%" height="15" fill="rgb(241,173,43)" fg:x="25282" fg:w="96"/><text x="24.2944%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (173 samples, 0.16%)</title><rect x="23.9845%" y="629" width="0.1645%" height="15" fill="rgb(215,190,9)" fg:x="25219" fg:w="173"/><text x="24.2345%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (173 samples, 0.16%)</title><rect x="23.9845%" y="613" width="0.1645%" height="15" fill="rgb(242,101,16)" fg:x="25219" fg:w="173"/><text x="24.2345%" y="623.50"></text></g><g><title>alloc::alloc::alloc (158 samples, 0.15%)</title><rect x="23.9988%" y="597" width="0.1503%" height="15" fill="rgb(223,190,21)" fg:x="25234" fg:w="158"/><text x="24.2488%" y="607.50"></text></g><g><title>__rg_alloc (158 samples, 0.15%)</title><rect x="23.9988%" y="581" width="0.1503%" height="15" fill="rgb(215,228,25)" fg:x="25234" fg:w="158"/><text x="24.2488%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (158 samples, 0.15%)</title><rect x="23.9988%" y="565" width="0.1503%" height="15" fill="rgb(225,36,22)" fg:x="25234" fg:w="158"/><text x="24.2488%" y="575.50"></text></g><g><title>rust_alloc (148 samples, 0.14%)</title><rect x="24.0083%" y="549" width="0.1408%" height="15" fill="rgb(251,106,46)" fg:x="25244" fg:w="148"/><text x="24.2583%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="24.1357%" y="533" width="0.0133%" height="15" fill="rgb(208,90,1)" fg:x="25378" fg:w="14"/><text x="24.3857%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (12 samples, 0.01%)</title><rect x="24.1490%" y="629" width="0.0114%" height="15" fill="rgb(243,10,4)" fg:x="25392" fg:w="12"/><text x="24.3990%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (217 samples, 0.21%)</title><rect x="23.9664%" y="677" width="0.2064%" height="15" fill="rgb(212,137,27)" fg:x="25200" fg:w="217"/><text x="24.2164%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (200 samples, 0.19%)</title><rect x="23.9826%" y="661" width="0.1902%" height="15" fill="rgb(231,220,49)" fg:x="25217" fg:w="200"/><text x="24.2326%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (198 samples, 0.19%)</title><rect x="23.9845%" y="645" width="0.1883%" height="15" fill="rgb(237,96,20)" fg:x="25219" fg:w="198"/><text x="24.2345%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.01%)</title><rect x="24.1605%" y="629" width="0.0124%" height="15" fill="rgb(239,229,30)" fg:x="25404" fg:w="13"/><text x="24.4105%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (13 samples, 0.01%)</title><rect x="24.1605%" y="613" width="0.0124%" height="15" fill="rgb(219,65,33)" fg:x="25404" fg:w="13"/><text x="24.4105%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (13 samples, 0.01%)</title><rect x="24.1605%" y="597" width="0.0124%" height="15" fill="rgb(243,134,7)" fg:x="25404" fg:w="13"/><text x="24.4105%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (453 samples, 0.43%)</title><rect x="23.7686%" y="693" width="0.4308%" height="15" fill="rgb(216,177,54)" fg:x="24992" fg:w="453"/><text x="24.0186%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (28 samples, 0.03%)</title><rect x="24.1728%" y="677" width="0.0266%" height="15" fill="rgb(211,160,20)" fg:x="25417" fg:w="28"/><text x="24.4228%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (466 samples, 0.44%)</title><rect x="23.7686%" y="725" width="0.4432%" height="15" fill="rgb(239,85,39)" fg:x="24992" fg:w="466"/><text x="24.0186%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (466 samples, 0.44%)</title><rect x="23.7686%" y="709" width="0.4432%" height="15" fill="rgb(232,125,22)" fg:x="24992" fg:w="466"/><text x="24.0186%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="24.1995%" y="693" width="0.0124%" height="15" fill="rgb(244,57,34)" fg:x="25445" fg:w="13"/><text x="24.4495%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (495 samples, 0.47%)</title><rect x="23.7420%" y="741" width="0.4708%" height="15" fill="rgb(214,203,32)" fg:x="24964" fg:w="495"/><text x="23.9920%" y="751.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,135 samples, 1.08%)</title><rect x="23.1419%" y="757" width="1.0794%" height="15" fill="rgb(207,58,43)" fg:x="24333" fg:w="1135"/><text x="23.3919%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (232 samples, 0.22%)</title><rect x="24.2213%" y="757" width="0.2206%" height="15" fill="rgb(215,193,15)" fg:x="25468" fg:w="232"/><text x="24.4713%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (12 samples, 0.01%)</title><rect x="24.4420%" y="757" width="0.0114%" height="15" fill="rgb(232,15,44)" fg:x="25700" fg:w="12"/><text x="24.6920%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="24.4420%" y="741" width="0.0114%" height="15" fill="rgb(212,3,48)" fg:x="25700" fg:w="12"/><text x="24.6920%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (411 samples, 0.39%)</title><rect x="24.4534%" y="757" width="0.3909%" height="15" fill="rgb(218,128,7)" fg:x="25712" fg:w="411"/><text x="24.7034%" y="767.50"></text></g><g><title>core::ptr::write (388 samples, 0.37%)</title><rect x="24.4753%" y="741" width="0.3690%" height="15" fill="rgb(226,216,39)" fg:x="25735" fg:w="388"/><text x="24.7253%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (383 samples, 0.36%)</title><rect x="24.4800%" y="725" width="0.3643%" height="15" fill="rgb(243,47,51)" fg:x="25740" fg:w="383"/><text x="24.7300%" y="735.50"></text></g><g><title>aligned_size (19 samples, 0.02%)</title><rect x="24.8766%" y="597" width="0.0181%" height="15" fill="rgb(241,183,40)" fg:x="26157" fg:w="19"/><text x="25.1266%" y="607.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="24.8947%" y="565" width="0.0105%" height="15" fill="rgb(231,217,32)" fg:x="26176" fg:w="11"/><text x="25.1447%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="24.9127%" y="549" width="0.0228%" height="15" fill="rgb(229,61,38)" fg:x="26195" fg:w="24"/><text x="25.1627%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="24.9127%" y="533" width="0.0228%" height="15" fill="rgb(225,210,5)" fg:x="26195" fg:w="24"/><text x="25.1627%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="24.9137%" y="517" width="0.0219%" height="15" fill="rgb(231,79,45)" fg:x="26196" fg:w="23"/><text x="25.1637%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="24.9165%" y="501" width="0.0190%" height="15" fill="rgb(224,100,7)" fg:x="26199" fg:w="20"/><text x="25.1665%" y="511.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="24.9194%" y="485" width="0.0162%" height="15" fill="rgb(241,198,18)" fg:x="26202" fg:w="17"/><text x="25.1694%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (111 samples, 0.11%)</title><rect x="24.8566%" y="693" width="0.1056%" height="15" fill="rgb(252,97,53)" fg:x="26136" fg:w="111"/><text x="25.1066%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (111 samples, 0.11%)</title><rect x="24.8566%" y="677" width="0.1056%" height="15" fill="rgb(220,88,7)" fg:x="26136" fg:w="111"/><text x="25.1066%" y="687.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.10%)</title><rect x="24.8661%" y="661" width="0.0961%" height="15" fill="rgb(213,176,14)" fg:x="26146" fg:w="101"/><text x="25.1161%" y="671.50"></text></g><g><title>__rg_alloc (101 samples, 0.10%)</title><rect x="24.8661%" y="645" width="0.0961%" height="15" fill="rgb(246,73,7)" fg:x="26146" fg:w="101"/><text x="25.1161%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (101 samples, 0.10%)</title><rect x="24.8661%" y="629" width="0.0961%" height="15" fill="rgb(245,64,36)" fg:x="26146" fg:w="101"/><text x="25.1161%" y="639.50"></text></g><g><title>rust_alloc (90 samples, 0.09%)</title><rect x="24.8766%" y="613" width="0.0856%" height="15" fill="rgb(245,80,10)" fg:x="26157" fg:w="90"/><text x="25.1266%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.07%)</title><rect x="24.8947%" y="597" width="0.0675%" height="15" fill="rgb(232,107,50)" fg:x="26176" fg:w="71"/><text x="25.1447%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (71 samples, 0.07%)</title><rect x="24.8947%" y="581" width="0.0675%" height="15" fill="rgb(253,3,0)" fg:x="26176" fg:w="71"/><text x="25.1447%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="24.9051%" y="565" width="0.0571%" height="15" fill="rgb(212,99,53)" fg:x="26187" fg:w="60"/><text x="25.1551%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (26 samples, 0.02%)</title><rect x="24.9375%" y="549" width="0.0247%" height="15" fill="rgb(249,111,54)" fg:x="26221" fg:w="26"/><text x="25.1875%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (26 samples, 0.02%)</title><rect x="24.9375%" y="533" width="0.0247%" height="15" fill="rgb(249,55,30)" fg:x="26221" fg:w="26"/><text x="25.1875%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (12 samples, 0.01%)</title><rect x="24.9622%" y="693" width="0.0114%" height="15" fill="rgb(237,47,42)" fg:x="26247" fg:w="12"/><text x="25.2122%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (148 samples, 0.14%)</title><rect x="24.8443%" y="757" width="0.1408%" height="15" fill="rgb(211,20,18)" fg:x="26123" fg:w="148"/><text x="25.0943%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (148 samples, 0.14%)</title><rect x="24.8443%" y="741" width="0.1408%" height="15" fill="rgb(231,203,46)" fg:x="26123" fg:w="148"/><text x="25.0943%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (135 samples, 0.13%)</title><rect x="24.8566%" y="725" width="0.1284%" height="15" fill="rgb(237,142,3)" fg:x="26136" fg:w="135"/><text x="25.1066%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (135 samples, 0.13%)</title><rect x="24.8566%" y="709" width="0.1284%" height="15" fill="rgb(241,107,1)" fg:x="26136" fg:w="135"/><text x="25.1066%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.01%)</title><rect x="24.9736%" y="693" width="0.0114%" height="15" fill="rgb(229,83,13)" fg:x="26259" fg:w="12"/><text x="25.2236%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (12 samples, 0.01%)</title><rect x="24.9736%" y="677" width="0.0114%" height="15" fill="rgb(241,91,40)" fg:x="26259" fg:w="12"/><text x="25.2236%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (12 samples, 0.01%)</title><rect x="24.9736%" y="661" width="0.0114%" height="15" fill="rgb(225,3,45)" fg:x="26259" fg:w="12"/><text x="25.2236%" y="671.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="25.0059%" y="501" width="0.0114%" height="15" fill="rgb(244,223,14)" fg:x="26293" fg:w="12"/><text x="25.2559%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (35 samples, 0.03%)</title><rect x="25.0478%" y="453" width="0.0333%" height="15" fill="rgb(224,124,37)" fg:x="26337" fg:w="35"/><text x="25.2978%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="25.0516%" y="437" width="0.0295%" height="15" fill="rgb(251,171,30)" fg:x="26341" fg:w="31"/><text x="25.3016%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (82 samples, 0.08%)</title><rect x="25.0212%" y="501" width="0.0780%" height="15" fill="rgb(236,46,54)" fg:x="26309" fg:w="82"/><text x="25.2712%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (82 samples, 0.08%)</title><rect x="25.0212%" y="485" width="0.0780%" height="15" fill="rgb(245,213,5)" fg:x="26309" fg:w="82"/><text x="25.2712%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (82 samples, 0.08%)</title><rect x="25.0212%" y="469" width="0.0780%" height="15" fill="rgb(230,144,27)" fg:x="26309" fg:w="82"/><text x="25.2712%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="25.0811%" y="453" width="0.0181%" height="15" fill="rgb(220,86,6)" fg:x="26372" fg:w="19"/><text x="25.3311%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (19 samples, 0.02%)</title><rect x="25.0811%" y="437" width="0.0181%" height="15" fill="rgb(240,20,13)" fg:x="26372" fg:w="19"/><text x="25.3311%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (116 samples, 0.11%)</title><rect x="25.0059%" y="533" width="0.1103%" height="15" fill="rgb(217,89,34)" fg:x="26293" fg:w="116"/><text x="25.2559%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (116 samples, 0.11%)</title><rect x="25.0059%" y="517" width="0.1103%" height="15" fill="rgb(229,13,5)" fg:x="26293" fg:w="116"/><text x="25.2559%" y="527.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="25.0991%" y="501" width="0.0171%" height="15" fill="rgb(244,67,35)" fg:x="26391" fg:w="18"/><text x="25.3491%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (119 samples, 0.11%)</title><rect x="25.0059%" y="565" width="0.1132%" height="15" fill="rgb(221,40,2)" fg:x="26293" fg:w="119"/><text x="25.2559%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (119 samples, 0.11%)</title><rect x="25.0059%" y="549" width="0.1132%" height="15" fill="rgb(237,157,21)" fg:x="26293" fg:w="119"/><text x="25.2559%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (139 samples, 0.13%)</title><rect x="24.9964%" y="581" width="0.1322%" height="15" fill="rgb(222,94,11)" fg:x="26283" fg:w="139"/><text x="25.2464%" y="591.50"></text></g><g><title>rust_dealloc (153 samples, 0.15%)</title><rect x="24.9888%" y="597" width="0.1455%" height="15" fill="rgb(249,113,6)" fg:x="26275" fg:w="153"/><text x="25.2388%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (155 samples, 0.15%)</title><rect x="24.9879%" y="661" width="0.1474%" height="15" fill="rgb(238,137,36)" fg:x="26274" fg:w="155"/><text x="25.2379%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (155 samples, 0.15%)</title><rect x="24.9879%" y="645" width="0.1474%" height="15" fill="rgb(210,102,26)" fg:x="26274" fg:w="155"/><text x="25.2379%" y="655.50"></text></g><g><title>__rg_dealloc (155 samples, 0.15%)</title><rect x="24.9879%" y="629" width="0.1474%" height="15" fill="rgb(218,30,30)" fg:x="26274" fg:w="155"/><text x="25.2379%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (155 samples, 0.15%)</title><rect x="24.9879%" y="613" width="0.1474%" height="15" fill="rgb(214,67,26)" fg:x="26274" fg:w="155"/><text x="25.2379%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (167 samples, 0.16%)</title><rect x="24.9860%" y="725" width="0.1588%" height="15" fill="rgb(251,9,53)" fg:x="26272" fg:w="167"/><text x="25.2360%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.16%)</title><rect x="24.9860%" y="709" width="0.1588%" height="15" fill="rgb(228,204,25)" fg:x="26272" fg:w="167"/><text x="25.2360%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (165 samples, 0.16%)</title><rect x="24.9879%" y="693" width="0.1569%" height="15" fill="rgb(207,153,8)" fg:x="26274" fg:w="165"/><text x="25.2379%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.16%)</title><rect x="24.9879%" y="677" width="0.1569%" height="15" fill="rgb(242,9,16)" fg:x="26274" fg:w="165"/><text x="25.2379%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.16%)</title><rect x="24.9860%" y="741" width="0.1607%" height="15" fill="rgb(217,211,10)" fg:x="26272" fg:w="169"/><text x="25.2360%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (180 samples, 0.17%)</title><rect x="24.9860%" y="757" width="0.1712%" height="15" fill="rgb(219,228,52)" fg:x="26272" fg:w="180"/><text x="25.2360%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (11 samples, 0.01%)</title><rect x="25.1467%" y="741" width="0.0105%" height="15" fill="rgb(231,92,29)" fg:x="26441" fg:w="11"/><text x="25.3967%" y="751.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="25.2228%" y="581" width="0.0105%" height="15" fill="rgb(232,8,23)" fg:x="26521" fg:w="11"/><text x="25.4728%" y="591.50"></text></g><g><title>sizeclass_to_size (15 samples, 0.01%)</title><rect x="25.2466%" y="517" width="0.0143%" height="15" fill="rgb(216,211,34)" fg:x="26546" fg:w="15"/><text x="25.4966%" y="527.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (15 samples, 0.01%)</title><rect x="25.2466%" y="501" width="0.0143%" height="15" fill="rgb(236,151,0)" fg:x="26546" fg:w="15"/><text x="25.4966%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="25.3036%" y="469" width="0.0266%" height="15" fill="rgb(209,168,3)" fg:x="26606" fg:w="28"/><text x="25.5536%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (25 samples, 0.02%)</title><rect x="25.3065%" y="453" width="0.0238%" height="15" fill="rgb(208,129,28)" fg:x="26609" fg:w="25"/><text x="25.5565%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (98 samples, 0.09%)</title><rect x="25.2665%" y="517" width="0.0932%" height="15" fill="rgb(229,78,22)" fg:x="26567" fg:w="98"/><text x="25.5165%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (98 samples, 0.09%)</title><rect x="25.2665%" y="501" width="0.0932%" height="15" fill="rgb(228,187,13)" fg:x="26567" fg:w="98"/><text x="25.5165%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (96 samples, 0.09%)</title><rect x="25.2684%" y="485" width="0.0913%" height="15" fill="rgb(240,119,24)" fg:x="26569" fg:w="96"/><text x="25.5184%" y="495.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (31 samples, 0.03%)</title><rect x="25.3303%" y="469" width="0.0295%" height="15" fill="rgb(209,194,42)" fg:x="26634" fg:w="31"/><text x="25.5803%" y="479.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (31 samples, 0.03%)</title><rect x="25.3303%" y="453" width="0.0295%" height="15" fill="rgb(247,200,46)" fg:x="26634" fg:w="31"/><text x="25.5803%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (150 samples, 0.14%)</title><rect x="25.2332%" y="549" width="0.1427%" height="15" fill="rgb(218,76,16)" fg:x="26532" fg:w="150"/><text x="25.4832%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (150 samples, 0.14%)</title><rect x="25.2332%" y="533" width="0.1427%" height="15" fill="rgb(225,21,48)" fg:x="26532" fg:w="150"/><text x="25.4832%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="25.3597%" y="517" width="0.0162%" height="15" fill="rgb(239,223,50)" fg:x="26665" fg:w="17"/><text x="25.6097%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (166 samples, 0.16%)</title><rect x="25.2332%" y="581" width="0.1579%" height="15" fill="rgb(244,45,21)" fg:x="26532" fg:w="166"/><text x="25.4832%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (166 samples, 0.16%)</title><rect x="25.2332%" y="565" width="0.1579%" height="15" fill="rgb(232,33,43)" fg:x="26532" fg:w="166"/><text x="25.4832%" y="575.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="25.3759%" y="549" width="0.0152%" height="15" fill="rgb(209,8,3)" fg:x="26682" fg:w="16"/><text x="25.6259%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="25.3759%" y="533" width="0.0152%" height="15" fill="rgb(214,25,53)" fg:x="26682" fg:w="16"/><text x="25.6259%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.02%)</title><rect x="25.3759%" y="517" width="0.0152%" height="15" fill="rgb(254,186,54)" fg:x="26682" fg:w="16"/><text x="25.6259%" y="527.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.02%)</title><rect x="25.3759%" y="501" width="0.0152%" height="15" fill="rgb(208,174,49)" fg:x="26682" fg:w="16"/><text x="25.6259%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (196 samples, 0.19%)</title><rect x="25.2085%" y="597" width="0.1864%" height="15" fill="rgb(233,191,51)" fg:x="26506" fg:w="196"/><text x="25.4585%" y="607.50"></text></g><g><title>rust_dealloc (228 samples, 0.22%)</title><rect x="25.1857%" y="613" width="0.2168%" height="15" fill="rgb(222,134,10)" fg:x="26482" fg:w="228"/><text x="25.4357%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (233 samples, 0.22%)</title><rect x="25.1819%" y="677" width="0.2216%" height="15" fill="rgb(230,226,20)" fg:x="26478" fg:w="233"/><text x="25.4319%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (233 samples, 0.22%)</title><rect x="25.1819%" y="661" width="0.2216%" height="15" fill="rgb(251,111,25)" fg:x="26478" fg:w="233"/><text x="25.4319%" y="671.50"></text></g><g><title>__rg_dealloc (233 samples, 0.22%)</title><rect x="25.1819%" y="645" width="0.2216%" height="15" fill="rgb(224,40,46)" fg:x="26478" fg:w="233"/><text x="25.4319%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (233 samples, 0.22%)</title><rect x="25.1819%" y="629" width="0.2216%" height="15" fill="rgb(236,108,47)" fg:x="26478" fg:w="233"/><text x="25.4319%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (250 samples, 0.24%)</title><rect x="25.1695%" y="741" width="0.2378%" height="15" fill="rgb(234,93,0)" fg:x="26465" fg:w="250"/><text x="25.4195%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (250 samples, 0.24%)</title><rect x="25.1695%" y="725" width="0.2378%" height="15" fill="rgb(224,213,32)" fg:x="26465" fg:w="250"/><text x="25.4195%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (250 samples, 0.24%)</title><rect x="25.1695%" y="709" width="0.2378%" height="15" fill="rgb(251,11,48)" fg:x="26465" fg:w="250"/><text x="25.4195%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 samples, 0.24%)</title><rect x="25.1695%" y="693" width="0.2378%" height="15" fill="rgb(236,173,5)" fg:x="26465" fg:w="250"/><text x="25.4195%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.02%)</title><rect x="25.4720%" y="421" width="0.0152%" height="15" fill="rgb(230,95,12)" fg:x="26783" fg:w="16"/><text x="25.7220%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (37 samples, 0.04%)</title><rect x="25.4605%" y="469" width="0.0352%" height="15" fill="rgb(232,209,1)" fg:x="26771" fg:w="37"/><text x="25.7105%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (37 samples, 0.04%)</title><rect x="25.4605%" y="453" width="0.0352%" height="15" fill="rgb(232,6,1)" fg:x="26771" fg:w="37"/><text x="25.7105%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (37 samples, 0.04%)</title><rect x="25.4605%" y="437" width="0.0352%" height="15" fill="rgb(210,224,50)" fg:x="26771" fg:w="37"/><text x="25.7105%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (52 samples, 0.05%)</title><rect x="25.4491%" y="501" width="0.0495%" height="15" fill="rgb(228,127,35)" fg:x="26759" fg:w="52"/><text x="25.6991%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (52 samples, 0.05%)</title><rect x="25.4491%" y="485" width="0.0495%" height="15" fill="rgb(245,102,45)" fg:x="26759" fg:w="52"/><text x="25.6991%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (58 samples, 0.06%)</title><rect x="25.4491%" y="533" width="0.0552%" height="15" fill="rgb(214,1,49)" fg:x="26759" fg:w="58"/><text x="25.6991%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (58 samples, 0.06%)</title><rect x="25.4491%" y="517" width="0.0552%" height="15" fill="rgb(226,163,40)" fg:x="26759" fg:w="58"/><text x="25.6991%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (74 samples, 0.07%)</title><rect x="25.4377%" y="549" width="0.0704%" height="15" fill="rgb(239,212,28)" fg:x="26747" fg:w="74"/><text x="25.6877%" y="559.50"></text></g><g><title>rust_dealloc (92 samples, 0.09%)</title><rect x="25.4301%" y="565" width="0.0875%" height="15" fill="rgb(220,20,13)" fg:x="26739" fg:w="92"/><text x="25.6801%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (96 samples, 0.09%)</title><rect x="25.4273%" y="581" width="0.0913%" height="15" fill="rgb(210,164,35)" fg:x="26736" fg:w="96"/><text x="25.6773%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 0.11%)</title><rect x="25.4273%" y="629" width="0.1065%" height="15" fill="rgb(248,109,41)" fg:x="26736" fg:w="112"/><text x="25.6773%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (112 samples, 0.11%)</title><rect x="25.4273%" y="613" width="0.1065%" height="15" fill="rgb(238,23,50)" fg:x="26736" fg:w="112"/><text x="25.6773%" y="623.50"></text></g><g><title>__rg_dealloc (112 samples, 0.11%)</title><rect x="25.4273%" y="597" width="0.1065%" height="15" fill="rgb(211,48,49)" fg:x="26736" fg:w="112"/><text x="25.6773%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (16 samples, 0.02%)</title><rect x="25.5186%" y="581" width="0.0152%" height="15" fill="rgb(223,36,21)" fg:x="26832" fg:w="16"/><text x="25.7686%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.14%)</title><rect x="25.4073%" y="725" width="0.1398%" height="15" fill="rgb(207,123,46)" fg:x="26715" fg:w="147"/><text x="25.6573%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (146 samples, 0.14%)</title><rect x="25.4082%" y="709" width="0.1389%" height="15" fill="rgb(240,218,32)" fg:x="26716" fg:w="146"/><text x="25.6582%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (132 samples, 0.13%)</title><rect x="25.4216%" y="693" width="0.1255%" height="15" fill="rgb(252,5,43)" fg:x="26730" fg:w="132"/><text x="25.6716%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (132 samples, 0.13%)</title><rect x="25.4216%" y="677" width="0.1255%" height="15" fill="rgb(252,84,19)" fg:x="26730" fg:w="132"/><text x="25.6716%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (132 samples, 0.13%)</title><rect x="25.4216%" y="661" width="0.1255%" height="15" fill="rgb(243,152,39)" fg:x="26730" fg:w="132"/><text x="25.6716%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.13%)</title><rect x="25.4216%" y="645" width="0.1255%" height="15" fill="rgb(234,160,15)" fg:x="26730" fg:w="132"/><text x="25.6716%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="25.5338%" y="629" width="0.0133%" height="15" fill="rgb(237,34,20)" fg:x="26848" fg:w="14"/><text x="25.7838%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (12 samples, 0.01%)</title><rect x="25.5471%" y="725" width="0.0114%" height="15" fill="rgb(229,97,13)" fg:x="26862" fg:w="12"/><text x="25.7971%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="25.5471%" y="709" width="0.0114%" height="15" fill="rgb(234,71,50)" fg:x="26862" fg:w="12"/><text x="25.7971%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="25.5480%" y="693" width="0.0105%" height="15" fill="rgb(253,155,4)" fg:x="26863" fg:w="11"/><text x="25.7980%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (424 samples, 0.40%)</title><rect x="25.1572%" y="757" width="0.4032%" height="15" fill="rgb(222,185,37)" fg:x="26452" fg:w="424"/><text x="25.4072%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (161 samples, 0.15%)</title><rect x="25.4073%" y="741" width="0.1531%" height="15" fill="rgb(251,177,13)" fg:x="26715" fg:w="161"/><text x="25.6573%" y="751.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="25.5718%" y="661" width="0.0171%" height="15" fill="rgb(250,179,40)" fg:x="26888" fg:w="18"/><text x="25.8218%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="25.6061%" y="613" width="0.0209%" height="15" fill="rgb(242,44,2)" fg:x="26924" fg:w="22"/><text x="25.8561%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="25.6156%" y="597" width="0.0114%" height="15" fill="rgb(216,177,13)" fg:x="26934" fg:w="12"/><text x="25.8656%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (50 samples, 0.05%)</title><rect x="25.5889%" y="661" width="0.0476%" height="15" fill="rgb(216,106,43)" fg:x="26906" fg:w="50"/><text x="25.8389%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (50 samples, 0.05%)</title><rect x="25.5889%" y="645" width="0.0476%" height="15" fill="rgb(216,183,2)" fg:x="26906" fg:w="50"/><text x="25.8389%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (47 samples, 0.04%)</title><rect x="25.5918%" y="629" width="0.0447%" height="15" fill="rgb(249,75,3)" fg:x="26909" fg:w="47"/><text x="25.8418%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (69 samples, 0.07%)</title><rect x="25.5718%" y="693" width="0.0656%" height="15" fill="rgb(219,67,39)" fg:x="26888" fg:w="69"/><text x="25.8218%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (69 samples, 0.07%)</title><rect x="25.5718%" y="677" width="0.0656%" height="15" fill="rgb(253,228,2)" fg:x="26888" fg:w="69"/><text x="25.8218%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (89 samples, 0.08%)</title><rect x="25.5718%" y="725" width="0.0846%" height="15" fill="rgb(235,138,27)" fg:x="26888" fg:w="89"/><text x="25.8218%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (89 samples, 0.08%)</title><rect x="25.5718%" y="709" width="0.0846%" height="15" fill="rgb(236,97,51)" fg:x="26888" fg:w="89"/><text x="25.8218%" y="719.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (20 samples, 0.02%)</title><rect x="25.6374%" y="693" width="0.0190%" height="15" fill="rgb(240,80,30)" fg:x="26957" fg:w="20"/><text x="25.8874%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (20 samples, 0.02%)</title><rect x="25.6374%" y="677" width="0.0190%" height="15" fill="rgb(230,178,19)" fg:x="26957" fg:w="20"/><text x="25.8874%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (20 samples, 0.02%)</title><rect x="25.6374%" y="661" width="0.0190%" height="15" fill="rgb(210,190,27)" fg:x="26957" fg:w="20"/><text x="25.8874%" y="671.50"></text></g><g><title>snmalloc::bits::align_down (20 samples, 0.02%)</title><rect x="25.6374%" y="645" width="0.0190%" height="15" fill="rgb(222,107,31)" fg:x="26957" fg:w="20"/><text x="25.8874%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (99 samples, 0.09%)</title><rect x="25.5699%" y="741" width="0.0942%" height="15" fill="rgb(216,127,34)" fg:x="26886" fg:w="99"/><text x="25.8199%" y="751.50"></text></g><g><title>rust_dealloc (117 samples, 0.11%)</title><rect x="25.5614%" y="757" width="0.1113%" height="15" fill="rgb(234,116,52)" fg:x="26877" fg:w="117"/><text x="25.8114%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (43 samples, 0.04%)</title><rect x="25.6774%" y="757" width="0.0409%" height="15" fill="rgb(222,124,15)" fg:x="26999" fg:w="43"/><text x="25.9274%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,022 samples, 10.48%)</title><rect x="15.2434%" y="805" width="10.4825%" height="15" fill="rgb(231,179,28)" fg:x="16028" fg:w="11022"/><text x="15.4934%" y="815.50">&lt;core::future::..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (11,022 samples, 10.48%)</title><rect x="15.2434%" y="789" width="10.4825%" height="15" fill="rgb(226,93,45)" fg:x="16028" fg:w="11022"/><text x="15.4934%" y="799.50">tremor_runtime:..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,982 samples, 3.79%)</title><rect x="21.9388%" y="773" width="3.7871%" height="15" fill="rgb(215,8,51)" fg:x="23068" fg:w="3982"/><text x="22.1888%" y="783.50">trem..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="25.7287%" y="405" width="0.0133%" height="15" fill="rgb(223,106,5)" fg:x="27053" fg:w="14"/><text x="25.9787%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="25.7287%" y="389" width="0.0133%" height="15" fill="rgb(250,191,5)" fg:x="27053" fg:w="14"/><text x="25.9787%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="25.7297%" y="373" width="0.0124%" height="15" fill="rgb(242,132,44)" fg:x="27054" fg:w="13"/><text x="25.9797%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (17 samples, 0.02%)</title><rect x="25.7287%" y="421" width="0.0162%" height="15" fill="rgb(251,152,29)" fg:x="27053" fg:w="17"/><text x="25.9787%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (21 samples, 0.02%)</title><rect x="25.7259%" y="437" width="0.0200%" height="15" fill="rgb(218,179,5)" fg:x="27050" fg:w="21"/><text x="25.9759%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="25.7259%" y="469" width="0.0894%" height="15" fill="rgb(227,67,19)" fg:x="27050" fg:w="94"/><text x="25.9759%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (94 samples, 0.09%)</title><rect x="25.7259%" y="453" width="0.0894%" height="15" fill="rgb(233,119,31)" fg:x="27050" fg:w="94"/><text x="25.9759%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (73 samples, 0.07%)</title><rect x="25.7459%" y="437" width="0.0694%" height="15" fill="rgb(241,120,22)" fg:x="27071" fg:w="73"/><text x="25.9959%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (61 samples, 0.06%)</title><rect x="25.7573%" y="421" width="0.0580%" height="15" fill="rgb(224,102,30)" fg:x="27083" fg:w="61"/><text x="26.0073%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (61 samples, 0.06%)</title><rect x="25.7573%" y="405" width="0.0580%" height="15" fill="rgb(210,164,37)" fg:x="27083" fg:w="61"/><text x="26.0073%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (61 samples, 0.06%)</title><rect x="25.7573%" y="389" width="0.0580%" height="15" fill="rgb(226,191,16)" fg:x="27083" fg:w="61"/><text x="26.0073%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (100 samples, 0.10%)</title><rect x="25.7259%" y="741" width="0.0951%" height="15" fill="rgb(214,40,45)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (100 samples, 0.10%)</title><rect x="25.7259%" y="725" width="0.0951%" height="15" fill="rgb(244,29,26)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (100 samples, 0.10%)</title><rect x="25.7259%" y="709" width="0.0951%" height="15" fill="rgb(216,16,5)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (100 samples, 0.10%)</title><rect x="25.7259%" y="693" width="0.0951%" height="15" fill="rgb(249,76,35)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (100 samples, 0.10%)</title><rect x="25.7259%" y="677" width="0.0951%" height="15" fill="rgb(207,11,44)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (100 samples, 0.10%)</title><rect x="25.7259%" y="661" width="0.0951%" height="15" fill="rgb(228,190,49)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (100 samples, 0.10%)</title><rect x="25.7259%" y="645" width="0.0951%" height="15" fill="rgb(214,173,12)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (100 samples, 0.10%)</title><rect x="25.7259%" y="629" width="0.0951%" height="15" fill="rgb(218,26,35)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (100 samples, 0.10%)</title><rect x="25.7259%" y="613" width="0.0951%" height="15" fill="rgb(220,200,19)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (100 samples, 0.10%)</title><rect x="25.7259%" y="597" width="0.0951%" height="15" fill="rgb(239,95,49)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="607.50"></text></g><g><title>alloc::alloc::alloc (100 samples, 0.10%)</title><rect x="25.7259%" y="581" width="0.0951%" height="15" fill="rgb(235,85,53)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="591.50"></text></g><g><title>__rg_alloc (100 samples, 0.10%)</title><rect x="25.7259%" y="565" width="0.0951%" height="15" fill="rgb(233,133,31)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (100 samples, 0.10%)</title><rect x="25.7259%" y="549" width="0.0951%" height="15" fill="rgb(218,25,20)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="559.50"></text></g><g><title>rust_alloc (100 samples, 0.10%)</title><rect x="25.7259%" y="533" width="0.0951%" height="15" fill="rgb(252,210,38)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.10%)</title><rect x="25.7259%" y="517" width="0.0951%" height="15" fill="rgb(242,134,21)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.10%)</title><rect x="25.7259%" y="501" width="0.0951%" height="15" fill="rgb(213,28,48)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.10%)</title><rect x="25.7259%" y="485" width="0.0951%" height="15" fill="rgb(250,196,2)" fg:x="27050" fg:w="100"/><text x="25.9759%" y="495.50"></text></g><g><title>aligned_size (16 samples, 0.02%)</title><rect x="25.8980%" y="453" width="0.0152%" height="15" fill="rgb(227,5,17)" fg:x="27231" fg:w="16"/><text x="26.1480%" y="463.50"></text></g><g><title>rust_alloc (16 samples, 0.02%)</title><rect x="25.9180%" y="421" width="0.0152%" height="15" fill="rgb(221,226,24)" fg:x="27252" fg:w="16"/><text x="26.1680%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="25.9456%" y="341" width="0.0105%" height="15" fill="rgb(211,5,48)" fg:x="27281" fg:w="11"/><text x="26.1956%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="25.9456%" y="325" width="0.0105%" height="15" fill="rgb(219,150,6)" fg:x="27281" fg:w="11"/><text x="26.1956%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.02%)</title><rect x="25.9456%" y="357" width="0.0152%" height="15" fill="rgb(251,46,16)" fg:x="27281" fg:w="16"/><text x="26.1956%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (27 samples, 0.03%)</title><rect x="25.9418%" y="373" width="0.0257%" height="15" fill="rgb(220,204,40)" fg:x="27277" fg:w="27"/><text x="26.1918%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="25.9808%" y="357" width="0.0133%" height="15" fill="rgb(211,85,2)" fg:x="27318" fg:w="14"/><text x="26.2308%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (154 samples, 0.15%)</title><rect x="25.9418%" y="405" width="0.1465%" height="15" fill="rgb(229,17,7)" fg:x="27277" fg:w="154"/><text x="26.1918%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (154 samples, 0.15%)</title><rect x="25.9418%" y="389" width="0.1465%" height="15" fill="rgb(239,72,28)" fg:x="27277" fg:w="154"/><text x="26.1918%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (127 samples, 0.12%)</title><rect x="25.9675%" y="373" width="0.1208%" height="15" fill="rgb(230,47,54)" fg:x="27304" fg:w="127"/><text x="26.2175%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (99 samples, 0.09%)</title><rect x="25.9941%" y="357" width="0.0942%" height="15" fill="rgb(214,50,8)" fg:x="27332" fg:w="99"/><text x="26.2441%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (99 samples, 0.09%)</title><rect x="25.9941%" y="341" width="0.0942%" height="15" fill="rgb(216,198,43)" fg:x="27332" fg:w="99"/><text x="26.2441%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (99 samples, 0.09%)</title><rect x="25.9941%" y="325" width="0.0942%" height="15" fill="rgb(234,20,35)" fg:x="27332" fg:w="99"/><text x="26.2441%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="26.0958%" y="405" width="0.0124%" height="15" fill="rgb(254,45,19)" fg:x="27439" fg:w="13"/><text x="26.3458%" y="415.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="26.0958%" y="389" width="0.0124%" height="15" fill="rgb(219,14,44)" fg:x="27439" fg:w="13"/><text x="26.3458%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (304 samples, 0.29%)</title><rect x="25.9180%" y="453" width="0.2891%" height="15" fill="rgb(217,220,26)" fg:x="27252" fg:w="304"/><text x="26.1680%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (304 samples, 0.29%)</title><rect x="25.9180%" y="437" width="0.2891%" height="15" fill="rgb(213,158,28)" fg:x="27252" fg:w="304"/><text x="26.1680%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (283 samples, 0.27%)</title><rect x="25.9380%" y="421" width="0.2691%" height="15" fill="rgb(252,51,52)" fg:x="27273" fg:w="283"/><text x="26.1880%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (104 samples, 0.10%)</title><rect x="26.1082%" y="405" width="0.0989%" height="15" fill="rgb(246,89,16)" fg:x="27452" fg:w="104"/><text x="26.3582%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (104 samples, 0.10%)</title><rect x="26.1082%" y="389" width="0.0989%" height="15" fill="rgb(216,158,49)" fg:x="27452" fg:w="104"/><text x="26.3582%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (358 samples, 0.34%)</title><rect x="25.8771%" y="597" width="0.3405%" height="15" fill="rgb(236,107,19)" fg:x="27209" fg:w="358"/><text x="26.1271%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (358 samples, 0.34%)</title><rect x="25.8771%" y="581" width="0.3405%" height="15" fill="rgb(228,185,30)" fg:x="27209" fg:w="358"/><text x="26.1271%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (358 samples, 0.34%)</title><rect x="25.8771%" y="565" width="0.3405%" height="15" fill="rgb(246,134,8)" fg:x="27209" fg:w="358"/><text x="26.1271%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (349 samples, 0.33%)</title><rect x="25.8857%" y="549" width="0.3319%" height="15" fill="rgb(214,143,50)" fg:x="27218" fg:w="349"/><text x="26.1357%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (349 samples, 0.33%)</title><rect x="25.8857%" y="533" width="0.3319%" height="15" fill="rgb(228,75,8)" fg:x="27218" fg:w="349"/><text x="26.1357%" y="543.50"></text></g><g><title>alloc::alloc::alloc (343 samples, 0.33%)</title><rect x="25.8914%" y="517" width="0.3262%" height="15" fill="rgb(207,175,4)" fg:x="27224" fg:w="343"/><text x="26.1414%" y="527.50"></text></g><g><title>__rg_alloc (343 samples, 0.33%)</title><rect x="25.8914%" y="501" width="0.3262%" height="15" fill="rgb(205,108,24)" fg:x="27224" fg:w="343"/><text x="26.1414%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (343 samples, 0.33%)</title><rect x="25.8914%" y="485" width="0.3262%" height="15" fill="rgb(244,120,49)" fg:x="27224" fg:w="343"/><text x="26.1414%" y="495.50"></text></g><g><title>rust_alloc (336 samples, 0.32%)</title><rect x="25.8980%" y="469" width="0.3196%" height="15" fill="rgb(223,47,38)" fg:x="27231" fg:w="336"/><text x="26.1480%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="26.2071%" y="453" width="0.0105%" height="15" fill="rgb(229,179,11)" fg:x="27556" fg:w="11"/><text x="26.4571%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (428 samples, 0.41%)</title><rect x="25.8638%" y="677" width="0.4070%" height="15" fill="rgb(231,122,1)" fg:x="27195" fg:w="428"/><text x="26.1138%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (414 samples, 0.39%)</title><rect x="25.8771%" y="661" width="0.3937%" height="15" fill="rgb(245,119,9)" fg:x="27209" fg:w="414"/><text x="26.1271%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (414 samples, 0.39%)</title><rect x="25.8771%" y="645" width="0.3937%" height="15" fill="rgb(241,163,25)" fg:x="27209" fg:w="414"/><text x="26.1271%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (414 samples, 0.39%)</title><rect x="25.8771%" y="629" width="0.3937%" height="15" fill="rgb(217,214,3)" fg:x="27209" fg:w="414"/><text x="26.1271%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (414 samples, 0.39%)</title><rect x="25.8771%" y="613" width="0.3937%" height="15" fill="rgb(240,86,28)" fg:x="27209" fg:w="414"/><text x="26.1271%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (56 samples, 0.05%)</title><rect x="26.2176%" y="597" width="0.0533%" height="15" fill="rgb(215,47,9)" fg:x="27567" fg:w="56"/><text x="26.4676%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56 samples, 0.05%)</title><rect x="26.2176%" y="581" width="0.0533%" height="15" fill="rgb(252,25,45)" fg:x="27567" fg:w="56"/><text x="26.4676%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (39 samples, 0.04%)</title><rect x="26.2337%" y="565" width="0.0371%" height="15" fill="rgb(251,164,9)" fg:x="27584" fg:w="39"/><text x="26.4837%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="26.2708%" y="677" width="0.0200%" height="15" fill="rgb(233,194,0)" fg:x="27623" fg:w="21"/><text x="26.5208%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="26.3526%" y="437" width="0.0114%" height="15" fill="rgb(249,111,24)" fg:x="27709" fg:w="12"/><text x="26.6026%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="26.3498%" y="453" width="0.0190%" height="15" fill="rgb(250,223,3)" fg:x="27706" fg:w="20"/><text x="26.5998%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.08%)</title><rect x="26.3498%" y="485" width="0.0770%" height="15" fill="rgb(236,178,37)" fg:x="27706" fg:w="81"/><text x="26.5998%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (81 samples, 0.08%)</title><rect x="26.3498%" y="469" width="0.0770%" height="15" fill="rgb(241,158,50)" fg:x="27706" fg:w="81"/><text x="26.5998%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (61 samples, 0.06%)</title><rect x="26.3688%" y="453" width="0.0580%" height="15" fill="rgb(213,121,41)" fg:x="27726" fg:w="61"/><text x="26.6188%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (51 samples, 0.05%)</title><rect x="26.3783%" y="437" width="0.0485%" height="15" fill="rgb(240,92,3)" fg:x="27736" fg:w="51"/><text x="26.6283%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (51 samples, 0.05%)</title><rect x="26.3783%" y="421" width="0.0485%" height="15" fill="rgb(205,123,3)" fg:x="27736" fg:w="51"/><text x="26.6283%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (51 samples, 0.05%)</title><rect x="26.3783%" y="405" width="0.0485%" height="15" fill="rgb(205,97,47)" fg:x="27736" fg:w="51"/><text x="26.6283%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (251 samples, 0.24%)</title><rect x="26.3403%" y="533" width="0.2387%" height="15" fill="rgb(247,152,14)" fg:x="27696" fg:w="251"/><text x="26.5903%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (250 samples, 0.24%)</title><rect x="26.3412%" y="517" width="0.2378%" height="15" fill="rgb(248,195,53)" fg:x="27697" fg:w="250"/><text x="26.5912%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (245 samples, 0.23%)</title><rect x="26.3460%" y="501" width="0.2330%" height="15" fill="rgb(226,201,16)" fg:x="27702" fg:w="245"/><text x="26.5960%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (147 samples, 0.14%)</title><rect x="26.4392%" y="485" width="0.1398%" height="15" fill="rgb(205,98,0)" fg:x="27800" fg:w="147"/><text x="26.6892%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (147 samples, 0.14%)</title><rect x="26.4392%" y="469" width="0.1398%" height="15" fill="rgb(214,191,48)" fg:x="27800" fg:w="147"/><text x="26.6892%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (301 samples, 0.29%)</title><rect x="26.3079%" y="629" width="0.2863%" height="15" fill="rgb(237,112,39)" fg:x="27662" fg:w="301"/><text x="26.5579%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (301 samples, 0.29%)</title><rect x="26.3079%" y="613" width="0.2863%" height="15" fill="rgb(247,203,27)" fg:x="27662" fg:w="301"/><text x="26.5579%" y="623.50"></text></g><g><title>alloc::alloc::alloc (283 samples, 0.27%)</title><rect x="26.3250%" y="597" width="0.2691%" height="15" fill="rgb(235,124,28)" fg:x="27680" fg:w="283"/><text x="26.5750%" y="607.50"></text></g><g><title>__rg_alloc (283 samples, 0.27%)</title><rect x="26.3250%" y="581" width="0.2691%" height="15" fill="rgb(208,207,46)" fg:x="27680" fg:w="283"/><text x="26.5750%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (283 samples, 0.27%)</title><rect x="26.3250%" y="565" width="0.2691%" height="15" fill="rgb(234,176,4)" fg:x="27680" fg:w="283"/><text x="26.5750%" y="575.50"></text></g><g><title>rust_alloc (275 samples, 0.26%)</title><rect x="26.3327%" y="549" width="0.2615%" height="15" fill="rgb(230,133,28)" fg:x="27688" fg:w="275"/><text x="26.5827%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="26.5790%" y="533" width="0.0152%" height="15" fill="rgb(211,137,40)" fg:x="27947" fg:w="16"/><text x="26.8290%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (331 samples, 0.31%)</title><rect x="26.2927%" y="677" width="0.3148%" height="15" fill="rgb(254,35,13)" fg:x="27646" fg:w="331"/><text x="26.5427%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (317 samples, 0.30%)</title><rect x="26.3060%" y="661" width="0.3015%" height="15" fill="rgb(225,49,51)" fg:x="27660" fg:w="317"/><text x="26.5560%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (315 samples, 0.30%)</title><rect x="26.3079%" y="645" width="0.2996%" height="15" fill="rgb(251,10,15)" fg:x="27662" fg:w="315"/><text x="26.5579%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (804 samples, 0.76%)</title><rect x="25.8533%" y="693" width="0.7646%" height="15" fill="rgb(228,207,15)" fg:x="27184" fg:w="804"/><text x="26.1033%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (11 samples, 0.01%)</title><rect x="26.6075%" y="677" width="0.0105%" height="15" fill="rgb(241,99,19)" fg:x="27977" fg:w="11"/><text x="26.8575%" y="687.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (949 samples, 0.90%)</title><rect x="25.7259%" y="757" width="0.9025%" height="15" fill="rgb(207,104,49)" fg:x="27050" fg:w="949"/><text x="25.9759%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (849 samples, 0.81%)</title><rect x="25.8210%" y="741" width="0.8074%" height="15" fill="rgb(234,99,18)" fg:x="27150" fg:w="849"/><text x="26.0710%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (815 samples, 0.78%)</title><rect x="25.8533%" y="725" width="0.7751%" height="15" fill="rgb(213,191,49)" fg:x="27184" fg:w="815"/><text x="26.1033%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (815 samples, 0.78%)</title><rect x="25.8533%" y="709" width="0.7751%" height="15" fill="rgb(210,226,19)" fg:x="27184" fg:w="815"/><text x="26.1033%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="26.6180%" y="693" width="0.0105%" height="15" fill="rgb(229,97,18)" fg:x="27988" fg:w="11"/><text x="26.8680%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (30 samples, 0.03%)</title><rect x="26.6646%" y="373" width="0.0285%" height="15" fill="rgb(211,167,15)" fg:x="28037" fg:w="30"/><text x="26.9146%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="26.6655%" y="357" width="0.0276%" height="15" fill="rgb(210,169,34)" fg:x="28038" fg:w="29"/><text x="26.9155%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (74 samples, 0.07%)</title><rect x="26.6532%" y="421" width="0.0704%" height="15" fill="rgb(241,121,31)" fg:x="28025" fg:w="74"/><text x="26.9032%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (74 samples, 0.07%)</title><rect x="26.6532%" y="405" width="0.0704%" height="15" fill="rgb(232,40,11)" fg:x="28025" fg:w="74"/><text x="26.9032%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.07%)</title><rect x="26.6570%" y="389" width="0.0666%" height="15" fill="rgb(205,86,26)" fg:x="28029" fg:w="70"/><text x="26.9070%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (32 samples, 0.03%)</title><rect x="26.6931%" y="373" width="0.0304%" height="15" fill="rgb(231,126,28)" fg:x="28067" fg:w="32"/><text x="26.9431%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (32 samples, 0.03%)</title><rect x="26.6931%" y="357" width="0.0304%" height="15" fill="rgb(219,221,18)" fg:x="28067" fg:w="32"/><text x="26.9431%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (98 samples, 0.09%)</title><rect x="26.6532%" y="437" width="0.0932%" height="15" fill="rgb(211,40,0)" fg:x="28025" fg:w="98"/><text x="26.9032%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (24 samples, 0.02%)</title><rect x="26.7235%" y="421" width="0.0228%" height="15" fill="rgb(239,85,43)" fg:x="28099" fg:w="24"/><text x="26.9735%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (24 samples, 0.02%)</title><rect x="26.7235%" y="405" width="0.0228%" height="15" fill="rgb(231,55,21)" fg:x="28099" fg:w="24"/><text x="26.9735%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (24 samples, 0.02%)</title><rect x="26.7235%" y="389" width="0.0228%" height="15" fill="rgb(225,184,43)" fg:x="28099" fg:w="24"/><text x="26.9735%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (24 samples, 0.02%)</title><rect x="26.7235%" y="373" width="0.0228%" height="15" fill="rgb(251,158,41)" fg:x="28099" fg:w="24"/><text x="26.9735%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (159 samples, 0.15%)</title><rect x="26.6284%" y="453" width="0.1512%" height="15" fill="rgb(234,159,37)" fg:x="27999" fg:w="159"/><text x="26.8784%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (31 samples, 0.03%)</title><rect x="26.7502%" y="437" width="0.0295%" height="15" fill="rgb(216,204,22)" fg:x="28127" fg:w="31"/><text x="27.0002%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (31 samples, 0.03%)</title><rect x="26.7502%" y="421" width="0.0295%" height="15" fill="rgb(214,17,3)" fg:x="28127" fg:w="31"/><text x="27.0002%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (31 samples, 0.03%)</title><rect x="26.7502%" y="405" width="0.0295%" height="15" fill="rgb(212,111,17)" fg:x="28127" fg:w="31"/><text x="27.0002%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (31 samples, 0.03%)</title><rect x="26.7502%" y="389" width="0.0295%" height="15" fill="rgb(221,157,24)" fg:x="28127" fg:w="31"/><text x="27.0002%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (101 samples, 0.10%)</title><rect x="26.8367%" y="437" width="0.0961%" height="15" fill="rgb(252,16,13)" fg:x="28218" fg:w="101"/><text x="27.0867%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (882 samples, 0.84%)</title><rect x="26.6284%" y="485" width="0.8388%" height="15" fill="rgb(221,62,2)" fg:x="27999" fg:w="882"/><text x="26.8784%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (882 samples, 0.84%)</title><rect x="26.6284%" y="469" width="0.8388%" height="15" fill="rgb(247,87,22)" fg:x="27999" fg:w="882"/><text x="26.8784%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (722 samples, 0.69%)</title><rect x="26.7806%" y="453" width="0.6867%" height="15" fill="rgb(215,73,9)" fg:x="28159" fg:w="722"/><text x="27.0306%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (562 samples, 0.53%)</title><rect x="26.9328%" y="437" width="0.5345%" height="15" fill="rgb(207,175,33)" fg:x="28319" fg:w="562"/><text x="27.1828%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (562 samples, 0.53%)</title><rect x="26.9328%" y="421" width="0.5345%" height="15" fill="rgb(243,129,54)" fg:x="28319" fg:w="562"/><text x="27.1828%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (562 samples, 0.53%)</title><rect x="26.9328%" y="405" width="0.5345%" height="15" fill="rgb(227,119,45)" fg:x="28319" fg:w="562"/><text x="27.1828%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (17 samples, 0.02%)</title><rect x="27.4682%" y="437" width="0.0162%" height="15" fill="rgb(205,109,36)" fg:x="28882" fg:w="17"/><text x="27.7182%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (14 samples, 0.01%)</title><rect x="27.4711%" y="421" width="0.0133%" height="15" fill="rgb(205,6,39)" fg:x="28885" fg:w="14"/><text x="27.7211%" y="431.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (12,896 samples, 12.26%)</title><rect x="15.2434%" y="821" width="12.2647%" height="15" fill="rgb(221,32,16)" fg:x="16028" fg:w="12896"/><text x="15.4934%" y="831.50">tremor_runtime::co..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,874 samples, 1.78%)</title><rect x="25.7259%" y="805" width="1.7823%" height="15" fill="rgb(228,144,50)" fg:x="27050" fg:w="1874"/><text x="25.9759%" y="815.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,874 samples, 1.78%)</title><rect x="25.7259%" y="789" width="1.7823%" height="15" fill="rgb(229,201,53)" fg:x="27050" fg:w="1874"/><text x="25.9759%" y="799.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (1,874 samples, 1.78%)</title><rect x="25.7259%" y="773" width="1.7823%" height="15" fill="rgb(249,153,27)" fg:x="27050" fg:w="1874"/><text x="25.9759%" y="783.50">&lt;..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (925 samples, 0.88%)</title><rect x="26.6284%" y="757" width="0.8797%" height="15" fill="rgb(227,106,25)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (925 samples, 0.88%)</title><rect x="26.6284%" y="741" width="0.8797%" height="15" fill="rgb(230,65,29)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (925 samples, 0.88%)</title><rect x="26.6284%" y="725" width="0.8797%" height="15" fill="rgb(221,57,46)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (925 samples, 0.88%)</title><rect x="26.6284%" y="709" width="0.8797%" height="15" fill="rgb(229,161,17)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (925 samples, 0.88%)</title><rect x="26.6284%" y="693" width="0.8797%" height="15" fill="rgb(222,213,11)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (925 samples, 0.88%)</title><rect x="26.6284%" y="677" width="0.8797%" height="15" fill="rgb(235,35,13)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (925 samples, 0.88%)</title><rect x="26.6284%" y="661" width="0.8797%" height="15" fill="rgb(233,158,34)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (925 samples, 0.88%)</title><rect x="26.6284%" y="645" width="0.8797%" height="15" fill="rgb(215,151,48)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (925 samples, 0.88%)</title><rect x="26.6284%" y="629" width="0.8797%" height="15" fill="rgb(229,84,14)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (925 samples, 0.88%)</title><rect x="26.6284%" y="613" width="0.8797%" height="15" fill="rgb(229,68,14)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="623.50"></text></g><g><title>alloc::alloc::alloc (925 samples, 0.88%)</title><rect x="26.6284%" y="597" width="0.8797%" height="15" fill="rgb(243,106,26)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="607.50"></text></g><g><title>__rg_alloc (925 samples, 0.88%)</title><rect x="26.6284%" y="581" width="0.8797%" height="15" fill="rgb(206,45,38)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (925 samples, 0.88%)</title><rect x="26.6284%" y="565" width="0.8797%" height="15" fill="rgb(226,6,15)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="575.50"></text></g><g><title>rust_alloc (925 samples, 0.88%)</title><rect x="26.6284%" y="549" width="0.8797%" height="15" fill="rgb(232,22,54)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (925 samples, 0.88%)</title><rect x="26.6284%" y="533" width="0.8797%" height="15" fill="rgb(229,222,32)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (925 samples, 0.88%)</title><rect x="26.6284%" y="517" width="0.8797%" height="15" fill="rgb(228,62,29)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (925 samples, 0.88%)</title><rect x="26.6284%" y="501" width="0.8797%" height="15" fill="rgb(251,103,34)" fg:x="27999" fg:w="925"/><text x="26.8784%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="27.4673%" y="485" width="0.0409%" height="15" fill="rgb(233,12,30)" fg:x="28881" fg:w="43"/><text x="27.7173%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="27.4673%" y="469" width="0.0409%" height="15" fill="rgb(238,52,0)" fg:x="28881" fg:w="43"/><text x="27.7173%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="27.4673%" y="453" width="0.0409%" height="15" fill="rgb(223,98,5)" fg:x="28881" fg:w="43"/><text x="27.7173%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="27.4844%" y="437" width="0.0238%" height="15" fill="rgb(228,75,37)" fg:x="28899" fg:w="25"/><text x="27.7344%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (23 samples, 0.02%)</title><rect x="27.4863%" y="421" width="0.0219%" height="15" fill="rgb(205,115,49)" fg:x="28901" fg:w="23"/><text x="27.7363%" y="431.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="27.6375%" y="773" width="0.0124%" height="15" fill="rgb(250,154,43)" fg:x="29060" fg:w="13"/><text x="27.8875%" y="783.50"></text></g><g><title>rust_dealloc (22 samples, 0.02%)</title><rect x="27.6565%" y="709" width="0.0209%" height="15" fill="rgb(226,43,29)" fg:x="29080" fg:w="22"/><text x="27.9065%" y="719.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="27.6774%" y="709" width="0.0114%" height="15" fill="rgb(249,228,39)" fg:x="29102" fg:w="12"/><text x="27.9274%" y="719.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="27.6774%" y="693" width="0.0114%" height="15" fill="rgb(216,79,43)" fg:x="29102" fg:w="12"/><text x="27.9274%" y="703.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (34 samples, 0.03%)</title><rect x="27.7716%" y="677" width="0.0323%" height="15" fill="rgb(228,95,12)" fg:x="29201" fg:w="34"/><text x="28.0216%" y="687.50"></text></g><g><title> (34 samples, 0.03%)</title><rect x="27.7716%" y="661" width="0.0323%" height="15" fill="rgb(249,221,15)" fg:x="29201" fg:w="34"/><text x="28.0216%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (127 samples, 0.12%)</title><rect x="27.6927%" y="709" width="0.1208%" height="15" fill="rgb(233,34,13)" fg:x="29118" fg:w="127"/><text x="27.9427%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (110 samples, 0.10%)</title><rect x="27.7088%" y="693" width="0.1046%" height="15" fill="rgb(214,103,39)" fg:x="29135" fg:w="110"/><text x="27.9588%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (212 samples, 0.20%)</title><rect x="27.6499%" y="741" width="0.2016%" height="15" fill="rgb(251,126,39)" fg:x="29073" fg:w="212"/><text x="27.8999%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (212 samples, 0.20%)</title><rect x="27.6499%" y="725" width="0.2016%" height="15" fill="rgb(214,216,36)" fg:x="29073" fg:w="212"/><text x="27.8999%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (40 samples, 0.04%)</title><rect x="27.8134%" y="709" width="0.0380%" height="15" fill="rgb(220,221,8)" fg:x="29245" fg:w="40"/><text x="28.0634%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (213 samples, 0.20%)</title><rect x="27.6499%" y="773" width="0.2026%" height="15" fill="rgb(240,216,3)" fg:x="29073" fg:w="213"/><text x="27.8999%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (213 samples, 0.20%)</title><rect x="27.6499%" y="757" width="0.2026%" height="15" fill="rgb(232,218,17)" fg:x="29073" fg:w="213"/><text x="27.8999%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (232 samples, 0.22%)</title><rect x="27.6327%" y="789" width="0.2206%" height="15" fill="rgb(229,163,45)" fg:x="29055" fg:w="232"/><text x="27.8827%" y="799.50"></text></g><g><title>rust_dealloc (254 samples, 0.24%)</title><rect x="27.6204%" y="805" width="0.2416%" height="15" fill="rgb(231,110,42)" fg:x="29042" fg:w="254"/><text x="27.8704%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (28 samples, 0.03%)</title><rect x="27.8619%" y="789" width="0.0266%" height="15" fill="rgb(208,170,48)" fg:x="29296" fg:w="28"/><text x="28.1119%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (28 samples, 0.03%)</title><rect x="27.8619%" y="773" width="0.0266%" height="15" fill="rgb(239,116,25)" fg:x="29296" fg:w="28"/><text x="28.1119%" y="783.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (22 samples, 0.02%)</title><rect x="27.8677%" y="757" width="0.0209%" height="15" fill="rgb(219,200,50)" fg:x="29302" fg:w="22"/><text x="28.1177%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.02%)</title><rect x="27.8724%" y="741" width="0.0162%" height="15" fill="rgb(245,200,0)" fg:x="29307" fg:w="17"/><text x="28.1224%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="27.8724%" y="725" width="0.0162%" height="15" fill="rgb(245,119,33)" fg:x="29307" fg:w="17"/><text x="28.1224%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.02%)</title><rect x="27.8724%" y="709" width="0.0162%" height="15" fill="rgb(231,125,12)" fg:x="29307" fg:w="17"/><text x="28.1224%" y="719.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (402 samples, 0.38%)</title><rect x="27.5082%" y="821" width="0.3823%" height="15" fill="rgb(216,96,41)" fg:x="28924" fg:w="402"/><text x="27.7582%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (30 samples, 0.03%)</title><rect x="27.8619%" y="805" width="0.0285%" height="15" fill="rgb(248,43,45)" fg:x="29296" fg:w="30"/><text x="28.1119%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="28.5248%" y="805" width="0.0200%" height="15" fill="rgb(217,222,7)" fg:x="29993" fg:w="21"/><text x="28.7748%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.02%)</title><rect x="28.5296%" y="789" width="0.0152%" height="15" fill="rgb(233,28,6)" fg:x="29998" fg:w="16"/><text x="28.7796%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (540 samples, 0.51%)</title><rect x="28.9442%" y="773" width="0.5136%" height="15" fill="rgb(231,218,15)" fg:x="30434" fg:w="540"/><text x="29.1942%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (458 samples, 0.44%)</title><rect x="29.4578%" y="773" width="0.4356%" height="15" fill="rgb(226,171,48)" fg:x="30974" fg:w="458"/><text x="29.7078%" y="783.50"></text></g><g><title>core::ptr::write (411 samples, 0.39%)</title><rect x="29.5025%" y="757" width="0.3909%" height="15" fill="rgb(235,201,9)" fg:x="31021" fg:w="411"/><text x="29.7525%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (411 samples, 0.39%)</title><rect x="29.5025%" y="741" width="0.3909%" height="15" fill="rgb(217,80,15)" fg:x="31021" fg:w="411"/><text x="29.7525%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (40 samples, 0.04%)</title><rect x="29.8934%" y="773" width="0.0380%" height="15" fill="rgb(219,152,8)" fg:x="31432" fg:w="40"/><text x="30.1434%" y="783.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="29.9495%" y="741" width="0.0114%" height="15" fill="rgb(243,107,38)" fg:x="31491" fg:w="12"/><text x="30.1995%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="29.9495%" y="725" width="0.0114%" height="15" fill="rgb(231,17,5)" fg:x="31491" fg:w="12"/><text x="30.1995%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,003 samples, 0.95%)</title><rect x="29.9638%" y="677" width="0.9539%" height="15" fill="rgb(209,25,54)" fg:x="31506" fg:w="1003"/><text x="30.2138%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (939 samples, 0.89%)</title><rect x="30.0246%" y="661" width="0.8930%" height="15" fill="rgb(219,0,2)" fg:x="31570" fg:w="939"/><text x="30.2746%" y="671.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (1,019 samples, 0.97%)</title><rect x="29.9495%" y="757" width="0.9691%" height="15" fill="rgb(246,9,5)" fg:x="31491" fg:w="1019"/><text x="30.1995%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,004 samples, 0.95%)</title><rect x="29.9638%" y="741" width="0.9549%" height="15" fill="rgb(226,159,4)" fg:x="31506" fg:w="1004"/><text x="30.2138%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,004 samples, 0.95%)</title><rect x="29.9638%" y="725" width="0.9549%" height="15" fill="rgb(219,175,34)" fg:x="31506" fg:w="1004"/><text x="30.2138%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,004 samples, 0.95%)</title><rect x="29.9638%" y="709" width="0.9549%" height="15" fill="rgb(236,10,46)" fg:x="31506" fg:w="1004"/><text x="30.2138%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,004 samples, 0.95%)</title><rect x="29.9638%" y="693" width="0.9549%" height="15" fill="rgb(240,211,16)" fg:x="31506" fg:w="1004"/><text x="30.2138%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,052 samples, 1.00%)</title><rect x="29.9314%" y="773" width="1.0005%" height="15" fill="rgb(205,3,43)" fg:x="31472" fg:w="1052"/><text x="30.1814%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (14 samples, 0.01%)</title><rect x="30.9186%" y="757" width="0.0133%" height="15" fill="rgb(245,7,22)" fg:x="32510" fg:w="14"/><text x="31.1686%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="31.6233%" y="741" width="0.0200%" height="15" fill="rgb(239,132,32)" fg:x="33251" fg:w="21"/><text x="31.8733%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="31.6690%" y="725" width="0.0105%" height="15" fill="rgb(228,202,34)" fg:x="33299" fg:w="11"/><text x="31.9190%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (43 samples, 0.04%)</title><rect x="31.6528%" y="741" width="0.0409%" height="15" fill="rgb(254,200,22)" fg:x="33282" fg:w="43"/><text x="31.9028%" y="751.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="31.6795%" y="725" width="0.0143%" height="15" fill="rgb(219,10,39)" fg:x="33310" fg:w="15"/><text x="31.9295%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (457 samples, 0.43%)</title><rect x="31.6937%" y="741" width="0.4346%" height="15" fill="rgb(226,210,39)" fg:x="33325" fg:w="457"/><text x="31.9437%" y="751.50"></text></g><g><title>core::ptr::write (449 samples, 0.43%)</title><rect x="31.7013%" y="725" width="0.4270%" height="15" fill="rgb(208,219,16)" fg:x="33333" fg:w="449"/><text x="31.9513%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (428 samples, 0.41%)</title><rect x="31.7213%" y="709" width="0.4070%" height="15" fill="rgb(216,158,51)" fg:x="33354" fg:w="428"/><text x="31.9713%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,237 samples, 1.18%)</title><rect x="30.9529%" y="757" width="1.1764%" height="15" fill="rgb(233,14,44)" fg:x="32546" fg:w="1237"/><text x="31.2029%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,269 samples, 1.21%)</title><rect x="30.9319%" y="773" width="1.2069%" height="15" fill="rgb(237,97,39)" fg:x="32524" fg:w="1269"/><text x="31.1819%" y="783.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,613 samples, 3.44%)</title><rect x="28.7065%" y="789" width="3.4361%" height="15" fill="rgb(218,198,43)" fg:x="30184" fg:w="3613"/><text x="28.9565%" y="799.50">tre..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (72 samples, 0.07%)</title><rect x="32.1426%" y="789" width="0.0685%" height="15" fill="rgb(231,104,20)" fg:x="33797" fg:w="72"/><text x="32.3926%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,885 samples, 3.69%)</title><rect x="28.5467%" y="805" width="3.6948%" height="15" fill="rgb(254,36,13)" fg:x="30016" fg:w="3885"/><text x="28.7967%" y="815.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (32 samples, 0.03%)</title><rect x="32.2111%" y="789" width="0.0304%" height="15" fill="rgb(248,14,50)" fg:x="33869" fg:w="32"/><text x="32.4611%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,567 samples, 1.49%)</title><rect x="32.2415%" y="805" width="1.4903%" height="15" fill="rgb(217,107,29)" fg:x="33901" fg:w="1567"/><text x="32.4915%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="33.7375%" y="789" width="0.0114%" height="15" fill="rgb(251,169,33)" fg:x="35474" fg:w="12"/><text x="33.9875%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (23 samples, 0.02%)</title><rect x="33.7375%" y="805" width="0.0219%" height="15" fill="rgb(217,108,32)" fg:x="35474" fg:w="23"/><text x="33.9875%" y="815.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (11 samples, 0.01%)</title><rect x="33.7489%" y="789" width="0.0105%" height="15" fill="rgb(219,66,42)" fg:x="35486" fg:w="11"/><text x="33.9989%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="33.7594%" y="805" width="0.0114%" height="15" fill="rgb(206,180,7)" fg:x="35497" fg:w="12"/><text x="34.0094%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="33.7594%" y="789" width="0.0114%" height="15" fill="rgb(208,226,31)" fg:x="35497" fg:w="12"/><text x="34.0094%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="33.7708%" y="805" width="0.0124%" height="15" fill="rgb(218,26,49)" fg:x="35509" fg:w="13"/><text x="34.0208%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="33.7708%" y="789" width="0.0124%" height="15" fill="rgb(233,197,48)" fg:x="35509" fg:w="13"/><text x="34.0208%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1157" width="26.3460%" height="15" fill="rgb(252,181,51)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1167.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1141" width="26.3460%" height="15" fill="rgb(253,90,19)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1151.50">async_global_executor::reactor::block_on::..</text></g><g><title>async_io::driver::block_on (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1125" width="26.3460%" height="15" fill="rgb(215,171,30)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1135.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1109" width="26.3460%" height="15" fill="rgb(214,222,9)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1119.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1093" width="26.3460%" height="15" fill="rgb(223,3,22)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1103.50">&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>async_executor::Executor::run::{{closure}} (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1077" width="26.3460%" height="15" fill="rgb(225,196,46)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1087.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1061" width="26.3460%" height="15" fill="rgb(209,110,37)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1071.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1045" width="26.3460%" height="15" fill="rgb(249,89,12)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1055.50">&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (27,702 samples, 26.35%)</title><rect x="7.4505%" y="1029" width="26.3460%" height="15" fill="rgb(226,27,33)" fg:x="7834" fg:w="27702"/><text x="7.7005%" y="1039.50">async_executor::Executor::run::{{closure}}..</text></g><g><title>async_task::runnable::Runnable::run (27,701 samples, 26.35%)</title><rect x="7.4515%" y="1013" width="26.3450%" height="15" fill="rgb(213,82,22)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="1023.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (27,701 samples, 26.35%)</title><rect x="7.4515%" y="997" width="26.3450%" height="15" fill="rgb(248,140,0)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="1007.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,701 samples, 26.35%)</title><rect x="7.4515%" y="981" width="26.3450%" height="15" fill="rgb(228,106,3)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,701 samples, 26.35%)</title><rect x="7.4515%" y="965" width="26.3450%" height="15" fill="rgb(209,23,37)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="975.50">&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (27,701 samples, 26.35%)</title><rect x="7.4515%" y="949" width="26.3450%" height="15" fill="rgb(241,93,50)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="959.50">async_executor::Executor::spawn::{{closure..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (27,701 samples, 26.35%)</title><rect x="7.4515%" y="933" width="26.3450%" height="15" fill="rgb(253,46,43)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="943.50">&lt;async_std::task::builder::SupportTaskLoca..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (27,701 samples, 26.35%)</title><rect x="7.4515%" y="917" width="26.3450%" height="15" fill="rgb(226,206,43)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="927.50">async_std::task::task_locals_wrapper::Task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27,701 samples, 26.35%)</title><rect x="7.4515%" y="901" width="26.3450%" height="15" fill="rgb(217,54,7)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="911.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27,701 samples, 26.35%)</title><rect x="7.4515%" y="885" width="26.3450%" height="15" fill="rgb(223,5,52)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="895.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (27,701 samples, 26.35%)</title><rect x="7.4515%" y="869" width="26.3450%" height="15" fill="rgb(206,52,46)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="879.50">async_std::task::task_locals_wrapper::Task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (27,701 samples, 26.35%)</title><rect x="7.4515%" y="853" width="26.3450%" height="15" fill="rgb(253,136,11)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="863.50">&lt;async_std::task::builder::SupportTaskLoca..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,701 samples, 26.35%)</title><rect x="7.4515%" y="837" width="26.3450%" height="15" fill="rgb(208,106,33)" fg:x="7835" fg:w="27701"/><text x="7.7015%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,210 samples, 5.91%)</title><rect x="27.8905%" y="821" width="5.9060%" height="15" fill="rgb(206,54,4)" fg:x="29326" fg:w="6210"/><text x="28.1405%" y="831.50">tremor_r..</text></g><g><title>tremor_runtime::pipeline::maybe_send (14 samples, 0.01%)</title><rect x="33.7832%" y="805" width="0.0133%" height="15" fill="rgb(213,3,15)" fg:x="35522" fg:w="14"/><text x="34.0332%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (704 samples, 0.67%)</title><rect x="33.8440%" y="597" width="0.6695%" height="15" fill="rgb(252,211,39)" fg:x="35586" fg:w="704"/><text x="34.0940%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (757 samples, 0.72%)</title><rect x="33.7965%" y="693" width="0.7199%" height="15" fill="rgb(223,6,36)" fg:x="35536" fg:w="757"/><text x="34.0465%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (757 samples, 0.72%)</title><rect x="33.7965%" y="677" width="0.7199%" height="15" fill="rgb(252,169,45)" fg:x="35536" fg:w="757"/><text x="34.0465%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (757 samples, 0.72%)</title><rect x="33.7965%" y="661" width="0.7199%" height="15" fill="rgb(212,48,26)" fg:x="35536" fg:w="757"/><text x="34.0465%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (757 samples, 0.72%)</title><rect x="33.7965%" y="645" width="0.7199%" height="15" fill="rgb(251,102,48)" fg:x="35536" fg:w="757"/><text x="34.0465%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (747 samples, 0.71%)</title><rect x="33.8060%" y="629" width="0.7104%" height="15" fill="rgb(243,208,16)" fg:x="35546" fg:w="747"/><text x="34.0560%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (747 samples, 0.71%)</title><rect x="33.8060%" y="613" width="0.7104%" height="15" fill="rgb(219,96,24)" fg:x="35546" fg:w="747"/><text x="34.0560%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.02%)</title><rect x="34.5317%" y="341" width="0.0152%" height="15" fill="rgb(219,33,29)" fg:x="36309" fg:w="16"/><text x="34.7817%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.02%)</title><rect x="34.5317%" y="325" width="0.0152%" height="15" fill="rgb(223,176,5)" fg:x="36309" fg:w="16"/><text x="34.7817%" y="335.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (14 samples, 0.01%)</title><rect x="34.5336%" y="309" width="0.0133%" height="15" fill="rgb(228,140,14)" fg:x="36311" fg:w="14"/><text x="34.7836%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (18 samples, 0.02%)</title><rect x="34.5317%" y="357" width="0.0171%" height="15" fill="rgb(217,179,31)" fg:x="36309" fg:w="18"/><text x="34.7817%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (22 samples, 0.02%)</title><rect x="34.5307%" y="373" width="0.0209%" height="15" fill="rgb(230,9,30)" fg:x="36308" fg:w="22"/><text x="34.7807%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="34.5621%" y="357" width="0.0133%" height="15" fill="rgb(230,136,20)" fg:x="36341" fg:w="14"/><text x="34.8121%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (123 samples, 0.12%)</title><rect x="34.5307%" y="405" width="0.1170%" height="15" fill="rgb(215,210,22)" fg:x="36308" fg:w="123"/><text x="34.7807%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (123 samples, 0.12%)</title><rect x="34.5307%" y="389" width="0.1170%" height="15" fill="rgb(218,43,5)" fg:x="36308" fg:w="123"/><text x="34.7807%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (101 samples, 0.10%)</title><rect x="34.5516%" y="373" width="0.0961%" height="15" fill="rgb(216,11,5)" fg:x="36330" fg:w="101"/><text x="34.8016%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (76 samples, 0.07%)</title><rect x="34.5754%" y="357" width="0.0723%" height="15" fill="rgb(209,82,29)" fg:x="36355" fg:w="76"/><text x="34.8254%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (76 samples, 0.07%)</title><rect x="34.5754%" y="341" width="0.0723%" height="15" fill="rgb(244,115,12)" fg:x="36355" fg:w="76"/><text x="34.8254%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (76 samples, 0.07%)</title><rect x="34.5754%" y="325" width="0.0723%" height="15" fill="rgb(222,82,18)" fg:x="36355" fg:w="76"/><text x="34.8254%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (126 samples, 0.12%)</title><rect x="34.5307%" y="645" width="0.1198%" height="15" fill="rgb(249,227,8)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (126 samples, 0.12%)</title><rect x="34.5307%" y="629" width="0.1198%" height="15" fill="rgb(253,141,45)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="639.50"></text></g><g><title>value_trait::Builder::object (126 samples, 0.12%)</title><rect x="34.5307%" y="613" width="0.1198%" height="15" fill="rgb(234,184,4)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (126 samples, 0.12%)</title><rect x="34.5307%" y="597" width="0.1198%" height="15" fill="rgb(218,194,23)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (126 samples, 0.12%)</title><rect x="34.5307%" y="581" width="0.1198%" height="15" fill="rgb(235,66,41)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (126 samples, 0.12%)</title><rect x="34.5307%" y="565" width="0.1198%" height="15" fill="rgb(245,217,1)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (126 samples, 0.12%)</title><rect x="34.5307%" y="549" width="0.1198%" height="15" fill="rgb(229,91,1)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (126 samples, 0.12%)</title><rect x="34.5307%" y="533" width="0.1198%" height="15" fill="rgb(207,101,30)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="543.50"></text></g><g><title>alloc::alloc::alloc (126 samples, 0.12%)</title><rect x="34.5307%" y="517" width="0.1198%" height="15" fill="rgb(223,82,49)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="527.50"></text></g><g><title>__rg_alloc (126 samples, 0.12%)</title><rect x="34.5307%" y="501" width="0.1198%" height="15" fill="rgb(218,167,17)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (126 samples, 0.12%)</title><rect x="34.5307%" y="485" width="0.1198%" height="15" fill="rgb(208,103,14)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="495.50"></text></g><g><title>rust_alloc (126 samples, 0.12%)</title><rect x="34.5307%" y="469" width="0.1198%" height="15" fill="rgb(238,20,8)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (126 samples, 0.12%)</title><rect x="34.5307%" y="453" width="0.1198%" height="15" fill="rgb(218,80,54)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (126 samples, 0.12%)</title><rect x="34.5307%" y="437" width="0.1198%" height="15" fill="rgb(240,144,17)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (126 samples, 0.12%)</title><rect x="34.5307%" y="421" width="0.1198%" height="15" fill="rgb(245,27,50)" fg:x="36308" fg:w="126"/><text x="34.7807%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="34.6505%" y="645" width="0.0133%" height="15" fill="rgb(251,51,7)" fg:x="36434" fg:w="14"/><text x="34.9005%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="34.6515%" y="629" width="0.0124%" height="15" fill="rgb(245,217,29)" fg:x="36435" fg:w="13"/><text x="34.9015%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="34.7190%" y="549" width="0.0219%" height="15" fill="rgb(221,176,29)" fg:x="36506" fg:w="23"/><text x="34.9690%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (23 samples, 0.02%)</title><rect x="34.7190%" y="533" width="0.0219%" height="15" fill="rgb(212,180,24)" fg:x="36506" fg:w="23"/><text x="34.9690%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (47 samples, 0.04%)</title><rect x="34.7086%" y="597" width="0.0447%" height="15" fill="rgb(254,24,2)" fg:x="36495" fg:w="47"/><text x="34.9586%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (36 samples, 0.03%)</title><rect x="34.7190%" y="581" width="0.0342%" height="15" fill="rgb(230,100,2)" fg:x="36506" fg:w="36"/><text x="34.9690%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (36 samples, 0.03%)</title><rect x="34.7190%" y="565" width="0.0342%" height="15" fill="rgb(219,142,25)" fg:x="36506" fg:w="36"/><text x="34.9690%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="34.7409%" y="549" width="0.0124%" height="15" fill="rgb(240,73,43)" fg:x="36529" fg:w="13"/><text x="34.9909%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="34.7409%" y="533" width="0.0124%" height="15" fill="rgb(214,114,15)" fg:x="36529" fg:w="13"/><text x="34.9909%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="34.7418%" y="517" width="0.0114%" height="15" fill="rgb(207,130,4)" fg:x="36530" fg:w="12"/><text x="34.9918%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (95 samples, 0.09%)</title><rect x="34.6639%" y="645" width="0.0903%" height="15" fill="rgb(221,25,40)" fg:x="36448" fg:w="95"/><text x="34.9139%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (56 samples, 0.05%)</title><rect x="34.7009%" y="629" width="0.0533%" height="15" fill="rgb(241,184,7)" fg:x="36487" fg:w="56"/><text x="34.9509%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (48 samples, 0.05%)</title><rect x="34.7086%" y="613" width="0.0457%" height="15" fill="rgb(235,159,4)" fg:x="36495" fg:w="48"/><text x="34.9586%" y="623.50"></text></g><g><title>core::time::Duration::as_nanos (12 samples, 0.01%)</title><rect x="34.7970%" y="629" width="0.0114%" height="15" fill="rgb(214,87,48)" fg:x="36588" fg:w="12"/><text x="35.0470%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (64 samples, 0.06%)</title><rect x="34.8626%" y="581" width="0.0609%" height="15" fill="rgb(246,198,24)" fg:x="36657" fg:w="64"/><text x="35.1126%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (64 samples, 0.06%)</title><rect x="34.8626%" y="565" width="0.0609%" height="15" fill="rgb(209,66,40)" fg:x="36657" fg:w="64"/><text x="35.1126%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (64 samples, 0.06%)</title><rect x="34.8626%" y="549" width="0.0609%" height="15" fill="rgb(233,147,39)" fg:x="36657" fg:w="64"/><text x="35.1126%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (64 samples, 0.06%)</title><rect x="34.8626%" y="533" width="0.0609%" height="15" fill="rgb(231,145,52)" fg:x="36657" fg:w="64"/><text x="35.1126%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (64 samples, 0.06%)</title><rect x="34.8626%" y="517" width="0.0609%" height="15" fill="rgb(206,20,26)" fg:x="36657" fg:w="64"/><text x="35.1126%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (31 samples, 0.03%)</title><rect x="34.8940%" y="501" width="0.0295%" height="15" fill="rgb(238,220,4)" fg:x="36690" fg:w="31"/><text x="35.1440%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (143 samples, 0.14%)</title><rect x="34.8084%" y="613" width="0.1360%" height="15" fill="rgb(252,195,42)" fg:x="36600" fg:w="143"/><text x="35.0584%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (143 samples, 0.14%)</title><rect x="34.8084%" y="597" width="0.1360%" height="15" fill="rgb(209,10,6)" fg:x="36600" fg:w="143"/><text x="35.0584%" y="607.50"></text></g><g><title>core::time::Duration::new (22 samples, 0.02%)</title><rect x="34.9235%" y="581" width="0.0209%" height="15" fill="rgb(229,3,52)" fg:x="36721" fg:w="22"/><text x="35.1735%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (150 samples, 0.14%)</title><rect x="34.8084%" y="629" width="0.1427%" height="15" fill="rgb(253,49,37)" fg:x="36600" fg:w="150"/><text x="35.0584%" y="639.50"></text></g><g><title>__clock_gettime_2 (506 samples, 0.48%)</title><rect x="35.0804%" y="581" width="0.4812%" height="15" fill="rgb(240,103,49)" fg:x="36886" fg:w="506"/><text x="35.3304%" y="591.50"></text></g><g><title>__vdso_clock_gettime (489 samples, 0.47%)</title><rect x="35.0966%" y="565" width="0.4651%" height="15" fill="rgb(250,182,30)" fg:x="36903" fg:w="489"/><text x="35.3466%" y="575.50"></text></g><g><title>[[vdso]] (309 samples, 0.29%)</title><rect x="35.2678%" y="549" width="0.2939%" height="15" fill="rgb(248,8,30)" fg:x="37083" fg:w="309"/><text x="35.5178%" y="559.50"></text></g><g><title>tremor_common::time::nanotime (844 samples, 0.80%)</title><rect x="34.7599%" y="645" width="0.8027%" height="15" fill="rgb(237,120,30)" fg:x="36549" fg:w="844"/><text x="35.0099%" y="655.50"></text></g><g><title>std::time::SystemTime::now (643 samples, 0.61%)</title><rect x="34.9511%" y="629" width="0.6115%" height="15" fill="rgb(221,146,34)" fg:x="36750" fg:w="643"/><text x="35.2011%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (643 samples, 0.61%)</title><rect x="34.9511%" y="613" width="0.6115%" height="15" fill="rgb(242,55,13)" fg:x="36750" fg:w="643"/><text x="35.2011%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (643 samples, 0.61%)</title><rect x="34.9511%" y="597" width="0.6115%" height="15" fill="rgb(242,112,31)" fg:x="36750" fg:w="643"/><text x="35.2011%" y="607.50"></text></g><g><title>alloc::collections::btree::borrow::DormantMutRef&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="35.5959%" y="613" width="0.0114%" height="15" fill="rgb(249,192,27)" fg:x="37428" fg:w="12"/><text x="35.8459%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from (12 samples, 0.01%)</title><rect x="35.5959%" y="597" width="0.0114%" height="15" fill="rgb(208,204,44)" fg:x="37428" fg:w="12"/><text x="35.8459%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (16 samples, 0.02%)</title><rect x="35.6330%" y="565" width="0.0152%" height="15" fill="rgb(208,93,54)" fg:x="37467" fg:w="16"/><text x="35.8830%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,210 samples, 1.15%)</title><rect x="34.5164%" y="677" width="1.1508%" height="15" fill="rgb(242,1,31)" fg:x="36293" fg:w="1210"/><text x="34.7664%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,210 samples, 1.15%)</title><rect x="34.5164%" y="661" width="1.1508%" height="15" fill="rgb(241,83,25)" fg:x="36293" fg:w="1210"/><text x="34.7664%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (110 samples, 0.10%)</title><rect x="35.5626%" y="645" width="0.1046%" height="15" fill="rgb(205,169,50)" fg:x="37393" fg:w="110"/><text x="35.8126%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (81 samples, 0.08%)</title><rect x="35.5902%" y="629" width="0.0770%" height="15" fill="rgb(239,186,37)" fg:x="37422" fg:w="81"/><text x="35.8402%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (61 samples, 0.06%)</title><rect x="35.6092%" y="613" width="0.0580%" height="15" fill="rgb(205,221,10)" fg:x="37442" fg:w="61"/><text x="35.8592%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (61 samples, 0.06%)</title><rect x="35.6092%" y="597" width="0.0580%" height="15" fill="rgb(218,196,15)" fg:x="37442" fg:w="61"/><text x="35.8592%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (61 samples, 0.06%)</title><rect x="35.6092%" y="581" width="0.0580%" height="15" fill="rgb(218,196,35)" fg:x="37442" fg:w="61"/><text x="35.8592%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (20 samples, 0.02%)</title><rect x="35.6482%" y="565" width="0.0190%" height="15" fill="rgb(233,63,24)" fg:x="37483" fg:w="20"/><text x="35.8982%" y="575.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="37.4923%" y="389" width="0.0124%" height="15" fill="rgb(225,8,4)" fg:x="39422" fg:w="13"/><text x="37.7423%" y="399.50"></text></g><g><title>rust_alloc (18 samples, 0.02%)</title><rect x="37.5046%" y="389" width="0.0171%" height="15" fill="rgb(234,105,35)" fg:x="39435" fg:w="18"/><text x="37.7546%" y="399.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="37.5218%" y="357" width="0.0190%" height="15" fill="rgb(236,21,32)" fg:x="39453" fg:w="20"/><text x="37.7718%" y="367.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="37.5408%" y="357" width="0.0133%" height="15" fill="rgb(228,109,6)" fg:x="39473" fg:w="14"/><text x="37.7908%" y="367.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="37.5436%" y="341" width="0.0105%" height="15" fill="rgb(229,215,31)" fg:x="39476" fg:w="11"/><text x="37.7936%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (42 samples, 0.04%)</title><rect x="37.5731%" y="341" width="0.0399%" height="15" fill="rgb(221,52,54)" fg:x="39507" fg:w="42"/><text x="37.8231%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (42 samples, 0.04%)</title><rect x="37.5731%" y="325" width="0.0399%" height="15" fill="rgb(252,129,43)" fg:x="39507" fg:w="42"/><text x="37.8231%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (649 samples, 0.62%)</title><rect x="37.5218%" y="389" width="0.6172%" height="15" fill="rgb(248,183,27)" fg:x="39453" fg:w="649"/><text x="37.7718%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (649 samples, 0.62%)</title><rect x="37.5218%" y="373" width="0.6172%" height="15" fill="rgb(250,0,22)" fg:x="39453" fg:w="649"/><text x="37.7718%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (615 samples, 0.58%)</title><rect x="37.5541%" y="357" width="0.5849%" height="15" fill="rgb(213,166,10)" fg:x="39487" fg:w="615"/><text x="37.8041%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (553 samples, 0.53%)</title><rect x="37.6131%" y="341" width="0.5259%" height="15" fill="rgb(207,163,36)" fg:x="39549" fg:w="553"/><text x="37.8631%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (553 samples, 0.53%)</title><rect x="37.6131%" y="325" width="0.5259%" height="15" fill="rgb(208,122,22)" fg:x="39549" fg:w="553"/><text x="37.8631%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (724 samples, 0.69%)</title><rect x="37.4618%" y="533" width="0.6886%" height="15" fill="rgb(207,104,49)" fg:x="39390" fg:w="724"/><text x="37.7118%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (724 samples, 0.69%)</title><rect x="37.4618%" y="517" width="0.6886%" height="15" fill="rgb(248,211,50)" fg:x="39390" fg:w="724"/><text x="37.7118%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (724 samples, 0.69%)</title><rect x="37.4618%" y="501" width="0.6886%" height="15" fill="rgb(217,13,45)" fg:x="39390" fg:w="724"/><text x="37.7118%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (703 samples, 0.67%)</title><rect x="37.4818%" y="485" width="0.6686%" height="15" fill="rgb(211,216,49)" fg:x="39411" fg:w="703"/><text x="37.7318%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (703 samples, 0.67%)</title><rect x="37.4818%" y="469" width="0.6686%" height="15" fill="rgb(221,58,53)" fg:x="39411" fg:w="703"/><text x="37.7318%" y="479.50"></text></g><g><title>alloc::alloc::alloc (694 samples, 0.66%)</title><rect x="37.4904%" y="453" width="0.6600%" height="15" fill="rgb(220,112,41)" fg:x="39420" fg:w="694"/><text x="37.7404%" y="463.50"></text></g><g><title>__rg_alloc (694 samples, 0.66%)</title><rect x="37.4904%" y="437" width="0.6600%" height="15" fill="rgb(236,38,28)" fg:x="39420" fg:w="694"/><text x="37.7404%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (694 samples, 0.66%)</title><rect x="37.4904%" y="421" width="0.6600%" height="15" fill="rgb(227,195,22)" fg:x="39420" fg:w="694"/><text x="37.7404%" y="431.50"></text></g><g><title>rust_alloc (692 samples, 0.66%)</title><rect x="37.4923%" y="405" width="0.6581%" height="15" fill="rgb(214,55,33)" fg:x="39422" fg:w="692"/><text x="37.7423%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="38.1390%" y="389" width="0.0114%" height="15" fill="rgb(248,80,13)" fg:x="40102" fg:w="12"/><text x="38.3890%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (827 samples, 0.79%)</title><rect x="37.4257%" y="613" width="0.7865%" height="15" fill="rgb(238,52,6)" fg:x="39352" fg:w="827"/><text x="37.6757%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (789 samples, 0.75%)</title><rect x="37.4618%" y="597" width="0.7504%" height="15" fill="rgb(224,198,47)" fg:x="39390" fg:w="789"/><text x="37.7118%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (789 samples, 0.75%)</title><rect x="37.4618%" y="581" width="0.7504%" height="15" fill="rgb(233,171,20)" fg:x="39390" fg:w="789"/><text x="37.7118%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (789 samples, 0.75%)</title><rect x="37.4618%" y="565" width="0.7504%" height="15" fill="rgb(241,30,25)" fg:x="39390" fg:w="789"/><text x="37.7118%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (789 samples, 0.75%)</title><rect x="37.4618%" y="549" width="0.7504%" height="15" fill="rgb(207,171,38)" fg:x="39390" fg:w="789"/><text x="37.7118%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (65 samples, 0.06%)</title><rect x="38.1504%" y="533" width="0.0618%" height="15" fill="rgb(234,70,1)" fg:x="40114" fg:w="65"/><text x="38.4004%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.06%)</title><rect x="38.1504%" y="517" width="0.0618%" height="15" fill="rgb(232,178,18)" fg:x="40114" fg:w="65"/><text x="38.4004%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (63 samples, 0.06%)</title><rect x="38.1523%" y="501" width="0.0599%" height="15" fill="rgb(241,78,40)" fg:x="40116" fg:w="63"/><text x="38.4023%" y="511.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,172 samples, 1.11%)</title><rect x="37.1071%" y="629" width="1.1146%" height="15" fill="rgb(222,35,25)" fg:x="39017" fg:w="1172"/><text x="37.3571%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (102 samples, 0.10%)</title><rect x="38.3758%" y="597" width="0.0970%" height="15" fill="rgb(207,92,16)" fg:x="40351" fg:w="102"/><text x="38.6258%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (63 samples, 0.06%)</title><rect x="38.4129%" y="581" width="0.0599%" height="15" fill="rgb(216,59,51)" fg:x="40390" fg:w="63"/><text x="38.6629%" y="591.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="38.4842%" y="405" width="0.0124%" height="15" fill="rgb(213,80,28)" fg:x="40465" fg:w="13"/><text x="38.7342%" y="415.50"></text></g><g><title>rust_alloc (67 samples, 0.06%)</title><rect x="38.4994%" y="373" width="0.0637%" height="15" fill="rgb(220,93,7)" fg:x="40481" fg:w="67"/><text x="38.7494%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (12 samples, 0.01%)</title><rect x="38.5812%" y="357" width="0.0114%" height="15" fill="rgb(225,24,44)" fg:x="40567" fg:w="12"/><text x="38.8312%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (12 samples, 0.01%)</title><rect x="38.5812%" y="341" width="0.0114%" height="15" fill="rgb(243,74,40)" fg:x="40567" fg:w="12"/><text x="38.8312%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="38.5812%" y="325" width="0.0114%" height="15" fill="rgb(228,39,7)" fg:x="40567" fg:w="12"/><text x="38.8312%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="38.5812%" y="309" width="0.0114%" height="15" fill="rgb(227,79,8)" fg:x="40567" fg:w="12"/><text x="38.8312%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="38.5812%" y="293" width="0.0114%" height="15" fill="rgb(236,58,11)" fg:x="40567" fg:w="12"/><text x="38.8312%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (25 samples, 0.02%)</title><rect x="38.6002%" y="325" width="0.0238%" height="15" fill="rgb(249,63,35)" fg:x="40587" fg:w="25"/><text x="38.8502%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (23 samples, 0.02%)</title><rect x="38.6021%" y="309" width="0.0219%" height="15" fill="rgb(252,114,16)" fg:x="40589" fg:w="23"/><text x="38.8521%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="38.6021%" y="293" width="0.0219%" height="15" fill="rgb(254,151,24)" fg:x="40589" fg:w="23"/><text x="38.8521%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (19 samples, 0.02%)</title><rect x="38.6240%" y="325" width="0.0181%" height="15" fill="rgb(253,54,39)" fg:x="40612" fg:w="19"/><text x="38.8740%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (19 samples, 0.02%)</title><rect x="38.6240%" y="309" width="0.0181%" height="15" fill="rgb(243,25,45)" fg:x="40612" fg:w="19"/><text x="38.8740%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.06%)</title><rect x="38.5926%" y="357" width="0.0552%" height="15" fill="rgb(234,134,9)" fg:x="40579" fg:w="58"/><text x="38.8426%" y="367.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (51 samples, 0.05%)</title><rect x="38.5993%" y="341" width="0.0485%" height="15" fill="rgb(227,166,31)" fg:x="40586" fg:w="51"/><text x="38.8493%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (61 samples, 0.06%)</title><rect x="38.6526%" y="357" width="0.0580%" height="15" fill="rgb(245,143,41)" fg:x="40642" fg:w="61"/><text x="38.9026%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (61 samples, 0.06%)</title><rect x="38.6526%" y="341" width="0.0580%" height="15" fill="rgb(238,181,32)" fg:x="40642" fg:w="61"/><text x="38.9026%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (455 samples, 0.43%)</title><rect x="38.4966%" y="405" width="0.4327%" height="15" fill="rgb(224,113,18)" fg:x="40478" fg:w="455"/><text x="38.7466%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (452 samples, 0.43%)</title><rect x="38.4994%" y="389" width="0.4299%" height="15" fill="rgb(240,229,28)" fg:x="40481" fg:w="452"/><text x="38.7494%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (382 samples, 0.36%)</title><rect x="38.5660%" y="373" width="0.3633%" height="15" fill="rgb(250,185,3)" fg:x="40551" fg:w="382"/><text x="38.8160%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (230 samples, 0.22%)</title><rect x="38.7106%" y="357" width="0.2187%" height="15" fill="rgb(212,59,25)" fg:x="40703" fg:w="230"/><text x="38.9606%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (230 samples, 0.22%)</title><rect x="38.7106%" y="341" width="0.2187%" height="15" fill="rgb(221,87,20)" fg:x="40703" fg:w="230"/><text x="38.9606%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (481 samples, 0.46%)</title><rect x="38.4728%" y="549" width="0.4575%" height="15" fill="rgb(213,74,28)" fg:x="40453" fg:w="481"/><text x="38.7228%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (481 samples, 0.46%)</title><rect x="38.4728%" y="533" width="0.4575%" height="15" fill="rgb(224,132,34)" fg:x="40453" fg:w="481"/><text x="38.7228%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (476 samples, 0.45%)</title><rect x="38.4776%" y="517" width="0.4527%" height="15" fill="rgb(222,101,24)" fg:x="40458" fg:w="476"/><text x="38.7276%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (476 samples, 0.45%)</title><rect x="38.4776%" y="501" width="0.4527%" height="15" fill="rgb(254,142,4)" fg:x="40458" fg:w="476"/><text x="38.7276%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (476 samples, 0.45%)</title><rect x="38.4776%" y="485" width="0.4527%" height="15" fill="rgb(230,229,49)" fg:x="40458" fg:w="476"/><text x="38.7276%" y="495.50"></text></g><g><title>alloc::alloc::alloc (470 samples, 0.45%)</title><rect x="38.4833%" y="469" width="0.4470%" height="15" fill="rgb(238,70,47)" fg:x="40464" fg:w="470"/><text x="38.7333%" y="479.50"></text></g><g><title>__rg_alloc (470 samples, 0.45%)</title><rect x="38.4833%" y="453" width="0.4470%" height="15" fill="rgb(231,160,17)" fg:x="40464" fg:w="470"/><text x="38.7333%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (470 samples, 0.45%)</title><rect x="38.4833%" y="437" width="0.4470%" height="15" fill="rgb(218,68,53)" fg:x="40464" fg:w="470"/><text x="38.7333%" y="447.50"></text></g><g><title>rust_alloc (469 samples, 0.45%)</title><rect x="38.4842%" y="421" width="0.4460%" height="15" fill="rgb(236,111,10)" fg:x="40465" fg:w="469"/><text x="38.7342%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (930 samples, 0.88%)</title><rect x="38.4728%" y="565" width="0.8845%" height="15" fill="rgb(224,34,41)" fg:x="40453" fg:w="930"/><text x="38.7228%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (449 samples, 0.43%)</title><rect x="38.9303%" y="549" width="0.4270%" height="15" fill="rgb(241,118,19)" fg:x="40934" fg:w="449"/><text x="39.1803%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (449 samples, 0.43%)</title><rect x="38.9303%" y="533" width="0.4270%" height="15" fill="rgb(238,129,25)" fg:x="40934" fg:w="449"/><text x="39.1803%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (440 samples, 0.42%)</title><rect x="38.9388%" y="517" width="0.4185%" height="15" fill="rgb(238,22,31)" fg:x="40943" fg:w="440"/><text x="39.1888%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,034 samples, 0.98%)</title><rect x="38.3758%" y="613" width="0.9834%" height="15" fill="rgb(222,174,48)" fg:x="40351" fg:w="1034"/><text x="38.6258%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (932 samples, 0.89%)</title><rect x="38.4728%" y="597" width="0.8864%" height="15" fill="rgb(206,152,40)" fg:x="40453" fg:w="932"/><text x="38.7228%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (932 samples, 0.89%)</title><rect x="38.4728%" y="581" width="0.8864%" height="15" fill="rgb(218,99,54)" fg:x="40453" fg:w="932"/><text x="38.7228%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,886 samples, 3.70%)</title><rect x="35.6672%" y="677" width="3.6958%" height="15" fill="rgb(220,174,26)" fg:x="37503" fg:w="3886"/><text x="35.9172%" y="687.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,886 samples, 3.70%)</title><rect x="35.6672%" y="661" width="3.6958%" height="15" fill="rgb(245,116,9)" fg:x="37503" fg:w="3886"/><text x="35.9172%" y="671.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (3,651 samples, 3.47%)</title><rect x="35.8907%" y="645" width="3.4723%" height="15" fill="rgb(209,72,35)" fg:x="37738" fg:w="3651"/><text x="36.1407%" y="655.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,198 samples, 1.14%)</title><rect x="38.2236%" y="629" width="1.1394%" height="15" fill="rgb(226,126,21)" fg:x="40191" fg:w="1198"/><text x="38.4736%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="39.3658%" y="421" width="0.0105%" height="15" fill="rgb(227,192,1)" fg:x="41392" fg:w="11"/><text x="39.6158%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="39.3658%" y="405" width="0.0105%" height="15" fill="rgb(237,180,29)" fg:x="41392" fg:w="11"/><text x="39.6158%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.02%)</title><rect x="39.3658%" y="437" width="0.0152%" height="15" fill="rgb(230,197,35)" fg:x="41392" fg:w="16"/><text x="39.6158%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (22 samples, 0.02%)</title><rect x="39.3630%" y="453" width="0.0209%" height="15" fill="rgb(246,193,31)" fg:x="41389" fg:w="22"/><text x="39.6130%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="39.3963%" y="437" width="0.0133%" height="15" fill="rgb(241,36,4)" fg:x="41424" fg:w="14"/><text x="39.6463%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (160 samples, 0.15%)</title><rect x="39.3630%" y="485" width="0.1522%" height="15" fill="rgb(241,130,17)" fg:x="41389" fg:w="160"/><text x="39.6130%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (160 samples, 0.15%)</title><rect x="39.3630%" y="469" width="0.1522%" height="15" fill="rgb(206,137,32)" fg:x="41389" fg:w="160"/><text x="39.6130%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (138 samples, 0.13%)</title><rect x="39.3839%" y="453" width="0.1312%" height="15" fill="rgb(237,228,51)" fg:x="41411" fg:w="138"/><text x="39.6339%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (111 samples, 0.11%)</title><rect x="39.4096%" y="437" width="0.1056%" height="15" fill="rgb(243,6,42)" fg:x="41438" fg:w="111"/><text x="39.6596%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (111 samples, 0.11%)</title><rect x="39.4096%" y="421" width="0.1056%" height="15" fill="rgb(251,74,28)" fg:x="41438" fg:w="111"/><text x="39.6596%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (111 samples, 0.11%)</title><rect x="39.4096%" y="405" width="0.1056%" height="15" fill="rgb(218,20,49)" fg:x="41438" fg:w="111"/><text x="39.6596%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (12 samples, 0.01%)</title><rect x="39.5266%" y="405" width="0.0114%" height="15" fill="rgb(238,28,14)" fg:x="41561" fg:w="12"/><text x="39.7766%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="39.5266%" y="389" width="0.0114%" height="15" fill="rgb(229,40,46)" fg:x="41561" fg:w="12"/><text x="39.7766%" y="399.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (185 samples, 0.18%)</title><rect x="39.3630%" y="677" width="0.1759%" height="15" fill="rgb(244,195,20)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (185 samples, 0.18%)</title><rect x="39.3630%" y="661" width="0.1759%" height="15" fill="rgb(253,56,35)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (185 samples, 0.18%)</title><rect x="39.3630%" y="645" width="0.1759%" height="15" fill="rgb(210,149,44)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (185 samples, 0.18%)</title><rect x="39.3630%" y="629" width="0.1759%" height="15" fill="rgb(240,135,12)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (185 samples, 0.18%)</title><rect x="39.3630%" y="613" width="0.1759%" height="15" fill="rgb(251,24,50)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="623.50"></text></g><g><title>alloc::alloc::alloc (185 samples, 0.18%)</title><rect x="39.3630%" y="597" width="0.1759%" height="15" fill="rgb(243,200,47)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="607.50"></text></g><g><title>__rg_alloc (185 samples, 0.18%)</title><rect x="39.3630%" y="581" width="0.1759%" height="15" fill="rgb(224,166,26)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (185 samples, 0.18%)</title><rect x="39.3630%" y="565" width="0.1759%" height="15" fill="rgb(233,0,47)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="575.50"></text></g><g><title>rust_alloc (185 samples, 0.18%)</title><rect x="39.3630%" y="549" width="0.1759%" height="15" fill="rgb(253,80,5)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.18%)</title><rect x="39.3630%" y="533" width="0.1759%" height="15" fill="rgb(214,133,25)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.18%)</title><rect x="39.3630%" y="517" width="0.1759%" height="15" fill="rgb(209,27,14)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (185 samples, 0.18%)</title><rect x="39.3630%" y="501" width="0.1759%" height="15" fill="rgb(219,102,51)" fg:x="41389" fg:w="185"/><text x="39.6130%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="39.5152%" y="485" width="0.0238%" height="15" fill="rgb(237,18,16)" fg:x="41549" fg:w="25"/><text x="39.7652%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="39.5152%" y="469" width="0.0238%" height="15" fill="rgb(241,85,17)" fg:x="41549" fg:w="25"/><text x="39.7652%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="39.5152%" y="453" width="0.0238%" height="15" fill="rgb(236,90,42)" fg:x="41549" fg:w="25"/><text x="39.7652%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="39.5180%" y="437" width="0.0209%" height="15" fill="rgb(249,57,21)" fg:x="41552" fg:w="22"/><text x="39.7680%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (20 samples, 0.02%)</title><rect x="39.5199%" y="421" width="0.0190%" height="15" fill="rgb(243,12,36)" fg:x="41554" fg:w="20"/><text x="39.7699%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="39.5389%" y="677" width="0.0219%" height="15" fill="rgb(253,128,47)" fg:x="41574" fg:w="23"/><text x="39.7889%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="39.5389%" y="661" width="0.0219%" height="15" fill="rgb(207,33,20)" fg:x="41574" fg:w="23"/><text x="39.7889%" y="671.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="39.5608%" y="645" width="0.0114%" height="15" fill="rgb(233,215,35)" fg:x="41597" fg:w="12"/><text x="39.8108%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="39.5608%" y="629" width="0.0114%" height="15" fill="rgb(249,188,52)" fg:x="41597" fg:w="12"/><text x="39.8108%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="39.5608%" y="613" width="0.0114%" height="15" fill="rgb(225,12,32)" fg:x="41597" fg:w="12"/><text x="39.8108%" y="623.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="39.5608%" y="597" width="0.0114%" height="15" fill="rgb(247,98,14)" fg:x="41597" fg:w="12"/><text x="39.8108%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="39.5608%" y="581" width="0.0114%" height="15" fill="rgb(247,219,48)" fg:x="41597" fg:w="12"/><text x="39.8108%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (12 samples, 0.01%)</title><rect x="39.5608%" y="565" width="0.0114%" height="15" fill="rgb(253,60,48)" fg:x="41597" fg:w="12"/><text x="39.8108%" y="575.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1157" width="5.7795%" height="15" fill="rgb(245,15,52)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1167.50">async_g..</text></g><g><title>std::panic::catch_unwind (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1141" width="5.7795%" height="15" fill="rgb(220,133,28)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1151.50">std::pa..</text></g><g><title>std::panicking::try (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1125" width="5.7795%" height="15" fill="rgb(217,180,4)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1135.50">std::pa..</text></g><g><title>std::panicking::try::do_call (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1109" width="5.7795%" height="15" fill="rgb(251,24,1)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1119.50">std::pa..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1093" width="5.7795%" height="15" fill="rgb(212,185,49)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1103.50">async_g..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1077" width="5.7795%" height="15" fill="rgb(215,175,22)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1087.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1061" width="5.7795%" height="15" fill="rgb(250,205,14)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1071.50">std::th..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1045" width="5.7795%" height="15" fill="rgb(225,211,22)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1055.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1029" width="5.7795%" height="15" fill="rgb(251,179,42)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1039.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (6,077 samples, 5.78%)</title><rect x="33.7965%" y="1013" width="5.7795%" height="15" fill="rgb(208,216,51)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1023.50">async_g..</text></g><g><title>async_io::driver::block_on (6,077 samples, 5.78%)</title><rect x="33.7965%" y="997" width="5.7795%" height="15" fill="rgb(235,36,11)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="1007.50">async_i..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,077 samples, 5.78%)</title><rect x="33.7965%" y="981" width="5.7795%" height="15" fill="rgb(213,189,28)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="991.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,077 samples, 5.78%)</title><rect x="33.7965%" y="965" width="5.7795%" height="15" fill="rgb(227,203,42)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="975.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}} (6,077 samples, 5.78%)</title><rect x="33.7965%" y="949" width="5.7795%" height="15" fill="rgb(244,72,36)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="959.50">async_e..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,077 samples, 5.78%)</title><rect x="33.7965%" y="933" width="5.7795%" height="15" fill="rgb(213,53,17)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="943.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,077 samples, 5.78%)</title><rect x="33.7965%" y="917" width="5.7795%" height="15" fill="rgb(207,167,3)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="927.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6,077 samples, 5.78%)</title><rect x="33.7965%" y="901" width="5.7795%" height="15" fill="rgb(216,98,30)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="911.50">async_e..</text></g><g><title>async_task::runnable::Runnable::run (6,077 samples, 5.78%)</title><rect x="33.7965%" y="885" width="5.7795%" height="15" fill="rgb(236,123,15)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="895.50">async_t..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6,077 samples, 5.78%)</title><rect x="33.7965%" y="869" width="5.7795%" height="15" fill="rgb(248,81,50)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="879.50">async_t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,077 samples, 5.78%)</title><rect x="33.7965%" y="853" width="5.7795%" height="15" fill="rgb(214,120,4)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="863.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,077 samples, 5.78%)</title><rect x="33.7965%" y="837" width="5.7795%" height="15" fill="rgb(208,179,34)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="847.50">&lt;core::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,077 samples, 5.78%)</title><rect x="33.7965%" y="821" width="5.7795%" height="15" fill="rgb(227,140,7)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="831.50">async_e..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,077 samples, 5.78%)</title><rect x="33.7965%" y="805" width="5.7795%" height="15" fill="rgb(214,22,6)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="815.50">&lt;async_..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,077 samples, 5.78%)</title><rect x="33.7965%" y="789" width="5.7795%" height="15" fill="rgb(207,137,27)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="799.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,077 samples, 5.78%)</title><rect x="33.7965%" y="773" width="5.7795%" height="15" fill="rgb(210,8,46)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="783.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,077 samples, 5.78%)</title><rect x="33.7965%" y="757" width="5.7795%" height="15" fill="rgb(240,16,54)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="767.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,077 samples, 5.78%)</title><rect x="33.7965%" y="741" width="5.7795%" height="15" fill="rgb(211,209,29)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="751.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,077 samples, 5.78%)</title><rect x="33.7965%" y="725" width="5.7795%" height="15" fill="rgb(226,228,24)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="735.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,077 samples, 5.78%)</title><rect x="33.7965%" y="709" width="5.7795%" height="15" fill="rgb(222,84,9)" fg:x="35536" fg:w="6077"/><text x="34.0465%" y="719.50">&lt;core::..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,320 samples, 5.06%)</title><rect x="34.5164%" y="693" width="5.0596%" height="15" fill="rgb(234,203,30)" fg:x="36293" fg:w="5320"/><text x="34.7664%" y="703.50">tremor..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="39.5608%" y="677" width="0.0152%" height="15" fill="rgb(238,109,14)" fg:x="41597" fg:w="16"/><text x="39.8108%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (16 samples, 0.02%)</title><rect x="39.5608%" y="661" width="0.0152%" height="15" fill="rgb(233,206,34)" fg:x="41597" fg:w="16"/><text x="39.8108%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.02%)</title><rect x="39.6597%" y="469" width="0.0152%" height="15" fill="rgb(220,167,47)" fg:x="41701" fg:w="16"/><text x="39.9097%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.03%)</title><rect x="39.6493%" y="501" width="0.0285%" height="15" fill="rgb(238,105,10)" fg:x="41690" fg:w="30"/><text x="39.8993%" y="511.50"></text></g><g><title>do_syscall_64 (29 samples, 0.03%)</title><rect x="39.6502%" y="485" width="0.0276%" height="15" fill="rgb(213,227,17)" fg:x="41691" fg:w="29"/><text x="39.9002%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (74 samples, 0.07%)</title><rect x="39.6084%" y="597" width="0.0704%" height="15" fill="rgb(217,132,38)" fg:x="41647" fg:w="74"/><text x="39.8584%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.07%)</title><rect x="39.6084%" y="581" width="0.0704%" height="15" fill="rgb(242,146,4)" fg:x="41647" fg:w="74"/><text x="39.8584%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (74 samples, 0.07%)</title><rect x="39.6084%" y="565" width="0.0704%" height="15" fill="rgb(212,61,9)" fg:x="41647" fg:w="74"/><text x="39.8584%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (74 samples, 0.07%)</title><rect x="39.6084%" y="549" width="0.0704%" height="15" fill="rgb(247,126,22)" fg:x="41647" fg:w="74"/><text x="39.8584%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (74 samples, 0.07%)</title><rect x="39.6084%" y="533" width="0.0704%" height="15" fill="rgb(220,196,2)" fg:x="41647" fg:w="74"/><text x="39.8584%" y="543.50"></text></g><g><title>__GI___lll_lock_wake (34 samples, 0.03%)</title><rect x="39.6464%" y="517" width="0.0323%" height="15" fill="rgb(208,46,4)" fg:x="41687" fg:w="34"/><text x="39.8964%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (15 samples, 0.01%)</title><rect x="39.6787%" y="597" width="0.0143%" height="15" fill="rgb(252,104,46)" fg:x="41721" fg:w="15"/><text x="39.9287%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="39.6787%" y="581" width="0.0143%" height="15" fill="rgb(237,152,48)" fg:x="41721" fg:w="15"/><text x="39.9287%" y="591.50"></text></g><g><title>__fdget_pos (13 samples, 0.01%)</title><rect x="39.7073%" y="437" width="0.0124%" height="15" fill="rgb(221,59,37)" fg:x="41751" fg:w="13"/><text x="39.9573%" y="447.50"></text></g><g><title>__fget_light (13 samples, 0.01%)</title><rect x="39.7073%" y="421" width="0.0124%" height="15" fill="rgb(209,202,51)" fg:x="41751" fg:w="13"/><text x="39.9573%" y="431.50"></text></g><g><title>select_task_rq_fair (13 samples, 0.01%)</title><rect x="39.7596%" y="309" width="0.0124%" height="15" fill="rgb(228,81,30)" fg:x="41806" fg:w="13"/><text x="40.0096%" y="319.50"></text></g><g><title>enqueue_task_fair (37 samples, 0.04%)</title><rect x="39.7719%" y="277" width="0.0352%" height="15" fill="rgb(227,42,39)" fg:x="41819" fg:w="37"/><text x="40.0219%" y="287.50"></text></g><g><title>enqueue_entity (20 samples, 0.02%)</title><rect x="39.7881%" y="261" width="0.0190%" height="15" fill="rgb(221,26,2)" fg:x="41836" fg:w="20"/><text x="40.0381%" y="271.50"></text></g><g><title>psi_group_change (21 samples, 0.02%)</title><rect x="39.8138%" y="261" width="0.0200%" height="15" fill="rgb(254,61,31)" fg:x="41863" fg:w="21"/><text x="40.0638%" y="271.50"></text></g><g><title>ttwu_do_activate (67 samples, 0.06%)</title><rect x="39.7719%" y="309" width="0.0637%" height="15" fill="rgb(222,173,38)" fg:x="41819" fg:w="67"/><text x="40.0219%" y="319.50"></text></g><g><title>enqueue_task (67 samples, 0.06%)</title><rect x="39.7719%" y="293" width="0.0637%" height="15" fill="rgb(218,50,12)" fg:x="41819" fg:w="67"/><text x="40.0219%" y="303.50"></text></g><g><title>psi_task_change (29 samples, 0.03%)</title><rect x="39.8081%" y="277" width="0.0276%" height="15" fill="rgb(223,88,40)" fg:x="41857" fg:w="29"/><text x="40.0581%" y="287.50"></text></g><g><title>__wake_up_common (115 samples, 0.11%)</title><rect x="39.7348%" y="357" width="0.1094%" height="15" fill="rgb(237,54,19)" fg:x="41780" fg:w="115"/><text x="39.9848%" y="367.50"></text></g><g><title>autoremove_wake_function (108 samples, 0.10%)</title><rect x="39.7415%" y="341" width="0.1027%" height="15" fill="rgb(251,129,25)" fg:x="41787" fg:w="108"/><text x="39.9915%" y="351.50"></text></g><g><title>try_to_wake_up (104 samples, 0.10%)</title><rect x="39.7453%" y="325" width="0.0989%" height="15" fill="rgb(238,97,19)" fg:x="41791" fg:w="104"/><text x="39.9953%" y="335.50"></text></g><g><title>__wake_up_common_lock (117 samples, 0.11%)</title><rect x="39.7339%" y="373" width="0.1113%" height="15" fill="rgb(240,169,18)" fg:x="41779" fg:w="117"/><text x="39.9839%" y="383.50"></text></g><g><title>__wake_up_common (137 samples, 0.13%)</title><rect x="39.7253%" y="405" width="0.1303%" height="15" fill="rgb(230,187,49)" fg:x="41770" fg:w="137"/><text x="39.9753%" y="415.50"></text></g><g><title>ep_poll_callback (137 samples, 0.13%)</title><rect x="39.7253%" y="389" width="0.1303%" height="15" fill="rgb(209,44,26)" fg:x="41770" fg:w="137"/><text x="39.9753%" y="399.50"></text></g><g><title>ksys_write (170 samples, 0.16%)</title><rect x="39.7054%" y="453" width="0.1617%" height="15" fill="rgb(244,0,6)" fg:x="41749" fg:w="170"/><text x="39.9554%" y="463.50"></text></g><g><title>vfs_write (153 samples, 0.15%)</title><rect x="39.7215%" y="437" width="0.1455%" height="15" fill="rgb(248,18,21)" fg:x="41766" fg:w="153"/><text x="39.9715%" y="447.50"></text></g><g><title>eventfd_write (151 samples, 0.14%)</title><rect x="39.7234%" y="421" width="0.1436%" height="15" fill="rgb(245,180,19)" fg:x="41768" fg:w="151"/><text x="39.9734%" y="431.50"></text></g><g><title>syscall_exit_to_user_mode (28 samples, 0.03%)</title><rect x="39.8670%" y="453" width="0.0266%" height="15" fill="rgb(252,118,36)" fg:x="41919" fg:w="28"/><text x="40.1170%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (203 samples, 0.19%)</title><rect x="39.7025%" y="485" width="0.1931%" height="15" fill="rgb(210,224,19)" fg:x="41746" fg:w="203"/><text x="39.9525%" y="495.50"></text></g><g><title>do_syscall_64 (202 samples, 0.19%)</title><rect x="39.7035%" y="469" width="0.1921%" height="15" fill="rgb(218,30,24)" fg:x="41747" fg:w="202"/><text x="39.9535%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (211 samples, 0.20%)</title><rect x="39.6959%" y="549" width="0.2007%" height="15" fill="rgb(219,75,50)" fg:x="41739" fg:w="211"/><text x="39.9459%" y="559.50"></text></g><g><title>polling::Poller::notify (211 samples, 0.20%)</title><rect x="39.6959%" y="533" width="0.2007%" height="15" fill="rgb(234,72,50)" fg:x="41739" fg:w="211"/><text x="39.9459%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (210 samples, 0.20%)</title><rect x="39.6968%" y="517" width="0.1997%" height="15" fill="rgb(219,100,48)" fg:x="41740" fg:w="210"/><text x="39.9468%" y="527.50"></text></g><g><title>__GI___write (209 samples, 0.20%)</title><rect x="39.6978%" y="501" width="0.1988%" height="15" fill="rgb(253,5,41)" fg:x="41741" fg:w="209"/><text x="39.9478%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (17 samples, 0.02%)</title><rect x="39.9051%" y="517" width="0.0162%" height="15" fill="rgb(247,181,11)" fg:x="41959" fg:w="17"/><text x="40.1551%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (17 samples, 0.02%)</title><rect x="39.9051%" y="501" width="0.0162%" height="15" fill="rgb(222,223,25)" fg:x="41959" fg:w="17"/><text x="40.1551%" y="511.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.01%)</title><rect x="39.9878%" y="373" width="0.0114%" height="15" fill="rgb(214,198,28)" fg:x="42046" fg:w="12"/><text x="40.2378%" y="383.50"></text></g><g><title>futex_wake_mark (23 samples, 0.02%)</title><rect x="40.0040%" y="373" width="0.0219%" height="15" fill="rgb(230,46,43)" fg:x="42063" fg:w="23"/><text x="40.2540%" y="383.50"></text></g><g><title>select_task_rq_fair (36 samples, 0.03%)</title><rect x="40.0658%" y="341" width="0.0342%" height="15" fill="rgb(233,65,53)" fg:x="42128" fg:w="36"/><text x="40.3158%" y="351.50"></text></g><g><title>enqueue_task_fair (98 samples, 0.09%)</title><rect x="40.1077%" y="309" width="0.0932%" height="15" fill="rgb(221,121,27)" fg:x="42172" fg:w="98"/><text x="40.3577%" y="319.50"></text></g><g><title>enqueue_entity (60 samples, 0.06%)</title><rect x="40.1438%" y="293" width="0.0571%" height="15" fill="rgb(247,70,47)" fg:x="42210" fg:w="60"/><text x="40.3938%" y="303.50"></text></g><g><title>update_load_avg (15 samples, 0.01%)</title><rect x="40.1866%" y="277" width="0.0143%" height="15" fill="rgb(228,85,35)" fg:x="42255" fg:w="15"/><text x="40.4366%" y="287.50"></text></g><g><title>psi_group_change (26 samples, 0.02%)</title><rect x="40.2009%" y="309" width="0.0247%" height="15" fill="rgb(209,50,18)" fg:x="42270" fg:w="26"/><text x="40.4509%" y="319.50"></text></g><g><title>psi_group_change (50 samples, 0.05%)</title><rect x="40.2427%" y="293" width="0.0476%" height="15" fill="rgb(250,19,35)" fg:x="42314" fg:w="50"/><text x="40.4927%" y="303.50"></text></g><g><title>ttwu_do_activate (202 samples, 0.19%)</title><rect x="40.1001%" y="341" width="0.1921%" height="15" fill="rgb(253,107,29)" fg:x="42164" fg:w="202"/><text x="40.3501%" y="351.50"></text></g><g><title>enqueue_task (195 samples, 0.19%)</title><rect x="40.1067%" y="325" width="0.1855%" height="15" fill="rgb(252,179,29)" fg:x="42171" fg:w="195"/><text x="40.3567%" y="335.50"></text></g><g><title>psi_task_change (70 samples, 0.07%)</title><rect x="40.2256%" y="309" width="0.0666%" height="15" fill="rgb(238,194,6)" fg:x="42296" fg:w="70"/><text x="40.4756%" y="319.50"></text></g><g><title>ttwu_do_wakeup (13 samples, 0.01%)</title><rect x="40.2922%" y="341" width="0.0124%" height="15" fill="rgb(238,164,29)" fg:x="42366" fg:w="13"/><text x="40.5422%" y="351.50"></text></g><g><title>check_preempt_curr (11 samples, 0.01%)</title><rect x="40.2941%" y="325" width="0.0105%" height="15" fill="rgb(224,25,9)" fg:x="42368" fg:w="11"/><text x="40.5441%" y="335.50"></text></g><g><title>ttwu_queue_wakelist (13 samples, 0.01%)</title><rect x="40.3045%" y="341" width="0.0124%" height="15" fill="rgb(244,153,23)" fg:x="42379" fg:w="13"/><text x="40.5545%" y="351.50"></text></g><g><title>__x64_sys_futex (396 samples, 0.38%)</title><rect x="39.9564%" y="421" width="0.3766%" height="15" fill="rgb(212,203,14)" fg:x="42013" fg:w="396"/><text x="40.2064%" y="431.50"></text></g><g><title>do_futex (388 samples, 0.37%)</title><rect x="39.9641%" y="405" width="0.3690%" height="15" fill="rgb(220,164,20)" fg:x="42021" fg:w="388"/><text x="40.2141%" y="415.50"></text></g><g><title>futex_wake (387 samples, 0.37%)</title><rect x="39.9650%" y="389" width="0.3681%" height="15" fill="rgb(222,203,48)" fg:x="42022" fg:w="387"/><text x="40.2150%" y="399.50"></text></g><g><title>wake_up_q (313 samples, 0.30%)</title><rect x="40.0354%" y="373" width="0.2977%" height="15" fill="rgb(215,159,22)" fg:x="42096" fg:w="313"/><text x="40.2854%" y="383.50"></text></g><g><title>try_to_wake_up (310 samples, 0.29%)</title><rect x="40.0382%" y="357" width="0.2948%" height="15" fill="rgb(216,183,47)" fg:x="42099" fg:w="310"/><text x="40.2882%" y="367.50"></text></g><g><title>update_rq_clock (17 samples, 0.02%)</title><rect x="40.3169%" y="341" width="0.0162%" height="15" fill="rgb(229,195,25)" fg:x="42392" fg:w="17"/><text x="40.5669%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (88 samples, 0.08%)</title><rect x="40.3350%" y="421" width="0.0837%" height="15" fill="rgb(224,132,51)" fg:x="42411" fg:w="88"/><text x="40.5850%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (501 samples, 0.48%)</title><rect x="39.9498%" y="453" width="0.4765%" height="15" fill="rgb(240,63,7)" fg:x="42006" fg:w="501"/><text x="40.1998%" y="463.50"></text></g><g><title>do_syscall_64 (497 samples, 0.47%)</title><rect x="39.9536%" y="437" width="0.4727%" height="15" fill="rgb(249,182,41)" fg:x="42010" fg:w="497"/><text x="40.2036%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (536 samples, 0.51%)</title><rect x="39.9213%" y="517" width="0.5098%" height="15" fill="rgb(243,47,26)" fg:x="41976" fg:w="536"/><text x="40.1713%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (536 samples, 0.51%)</title><rect x="39.9213%" y="501" width="0.5098%" height="15" fill="rgb(233,48,2)" fg:x="41976" fg:w="536"/><text x="40.1713%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (536 samples, 0.51%)</title><rect x="39.9213%" y="485" width="0.5098%" height="15" fill="rgb(244,165,34)" fg:x="41976" fg:w="536"/><text x="40.1713%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (536 samples, 0.51%)</title><rect x="39.9213%" y="469" width="0.5098%" height="15" fill="rgb(207,89,7)" fg:x="41976" fg:w="536"/><text x="40.1713%" y="479.50"></text></g><g><title>parking::Unparker::unpark (575 samples, 0.55%)</title><rect x="39.8965%" y="549" width="0.5469%" height="15" fill="rgb(244,117,36)" fg:x="41950" fg:w="575"/><text x="40.1465%" y="559.50"></text></g><g><title>parking::Inner::unpark (570 samples, 0.54%)</title><rect x="39.9013%" y="533" width="0.5421%" height="15" fill="rgb(226,144,34)" fg:x="41955" fg:w="570"/><text x="40.1513%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="40.4310%" y="517" width="0.0124%" height="15" fill="rgb(213,23,19)" fg:x="42512" fg:w="13"/><text x="40.6810%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="40.4310%" y="501" width="0.0124%" height="15" fill="rgb(217,75,12)" fg:x="42512" fg:w="13"/><text x="40.6810%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="40.4310%" y="485" width="0.0124%" height="15" fill="rgb(224,159,17)" fg:x="42512" fg:w="13"/><text x="40.6810%" y="495.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="40.4310%" y="469" width="0.0124%" height="15" fill="rgb(217,118,1)" fg:x="42512" fg:w="13"/><text x="40.6810%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (802 samples, 0.76%)</title><rect x="39.6930%" y="565" width="0.7627%" height="15" fill="rgb(232,180,48)" fg:x="41736" fg:w="802"/><text x="39.9430%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="40.4434%" y="549" width="0.0124%" height="15" fill="rgb(230,27,33)" fg:x="42525" fg:w="13"/><text x="40.6934%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="40.4434%" y="533" width="0.0124%" height="15" fill="rgb(205,31,21)" fg:x="42525" fg:w="13"/><text x="40.6934%" y="543.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (13 samples, 0.01%)</title><rect x="40.4434%" y="517" width="0.0124%" height="15" fill="rgb(253,59,4)" fg:x="42525" fg:w="13"/><text x="40.6934%" y="527.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="40.4434%" y="501" width="0.0124%" height="15" fill="rgb(224,201,9)" fg:x="42525" fg:w="13"/><text x="40.6934%" y="511.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (11 samples, 0.01%)</title><rect x="40.4453%" y="485" width="0.0105%" height="15" fill="rgb(229,206,30)" fg:x="42527" fg:w="11"/><text x="40.6953%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="40.4453%" y="469" width="0.0105%" height="15" fill="rgb(212,67,47)" fg:x="42527" fg:w="11"/><text x="40.6953%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (824 samples, 0.78%)</title><rect x="39.6930%" y="597" width="0.7837%" height="15" fill="rgb(211,96,50)" fg:x="41736" fg:w="824"/><text x="39.9430%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (824 samples, 0.78%)</title><rect x="39.6930%" y="581" width="0.7837%" height="15" fill="rgb(252,114,18)" fg:x="41736" fg:w="824"/><text x="39.9430%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="40.4557%" y="565" width="0.0209%" height="15" fill="rgb(223,58,37)" fg:x="42538" fg:w="22"/><text x="40.7057%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="40.4557%" y="549" width="0.0209%" height="15" fill="rgb(237,70,4)" fg:x="42538" fg:w="22"/><text x="40.7057%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.02%)</title><rect x="40.4567%" y="533" width="0.0200%" height="15" fill="rgb(244,85,46)" fg:x="42539" fg:w="21"/><text x="40.7067%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (21 samples, 0.02%)</title><rect x="40.4567%" y="517" width="0.0200%" height="15" fill="rgb(223,39,52)" fg:x="42539" fg:w="21"/><text x="40.7067%" y="527.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="40.5100%" y="485" width="0.0143%" height="15" fill="rgb(218,200,14)" fg:x="42595" fg:w="15"/><text x="40.7600%" y="495.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="40.5109%" y="469" width="0.0133%" height="15" fill="rgb(208,171,16)" fg:x="42596" fg:w="14"/><text x="40.7609%" y="479.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="40.5109%" y="453" width="0.0133%" height="15" fill="rgb(234,200,18)" fg:x="42596" fg:w="14"/><text x="40.7609%" y="463.50"></text></g><g><title>futex_wait_setup (11 samples, 0.01%)</title><rect x="40.5138%" y="437" width="0.0105%" height="15" fill="rgb(228,45,11)" fg:x="42599" fg:w="11"/><text x="40.7638%" y="447.50"></text></g><g><title>async_executor::State::notify (978 samples, 0.93%)</title><rect x="39.6055%" y="613" width="0.9301%" height="15" fill="rgb(237,182,11)" fg:x="41644" fg:w="978"/><text x="39.8555%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="40.4767%" y="597" width="0.0590%" height="15" fill="rgb(241,175,49)" fg:x="42560" fg:w="62"/><text x="40.7267%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="40.4814%" y="581" width="0.0542%" height="15" fill="rgb(247,38,35)" fg:x="42565" fg:w="57"/><text x="40.7314%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (52 samples, 0.05%)</title><rect x="40.4862%" y="565" width="0.0495%" height="15" fill="rgb(228,39,49)" fg:x="42570" fg:w="52"/><text x="40.7362%" y="575.50"></text></g><g><title>___pthread_mutex_lock (52 samples, 0.05%)</title><rect x="40.4862%" y="549" width="0.0495%" height="15" fill="rgb(226,101,26)" fg:x="42570" fg:w="52"/><text x="40.7362%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (33 samples, 0.03%)</title><rect x="40.5042%" y="533" width="0.0314%" height="15" fill="rgb(206,141,19)" fg:x="42589" fg:w="33"/><text x="40.7542%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.03%)</title><rect x="40.5100%" y="517" width="0.0257%" height="15" fill="rgb(211,200,13)" fg:x="42595" fg:w="27"/><text x="40.7600%" y="527.50"></text></g><g><title>do_syscall_64 (27 samples, 0.03%)</title><rect x="40.5100%" y="501" width="0.0257%" height="15" fill="rgb(241,121,6)" fg:x="42595" fg:w="27"/><text x="40.7600%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.03%)</title><rect x="40.5470%" y="581" width="0.0295%" height="15" fill="rgb(234,221,29)" fg:x="42634" fg:w="31"/><text x="40.7970%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.03%)</title><rect x="40.5470%" y="565" width="0.0295%" height="15" fill="rgb(229,136,5)" fg:x="42634" fg:w="31"/><text x="40.7970%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (15 samples, 0.01%)</title><rect x="40.5775%" y="581" width="0.0143%" height="15" fill="rgb(238,36,11)" fg:x="42666" fg:w="15"/><text x="40.8275%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (15 samples, 0.01%)</title><rect x="40.5775%" y="565" width="0.0143%" height="15" fill="rgb(251,55,41)" fg:x="42666" fg:w="15"/><text x="40.8275%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1,041 samples, 0.99%)</title><rect x="39.6046%" y="629" width="0.9900%" height="15" fill="rgb(242,34,40)" fg:x="41643" fg:w="1041"/><text x="39.8546%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (62 samples, 0.06%)</title><rect x="40.5356%" y="613" width="0.0590%" height="15" fill="rgb(215,42,17)" fg:x="42622" fg:w="62"/><text x="40.7856%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (57 samples, 0.05%)</title><rect x="40.5404%" y="597" width="0.0542%" height="15" fill="rgb(207,44,46)" fg:x="42627" fg:w="57"/><text x="40.7904%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (34 samples, 0.03%)</title><rect x="40.5946%" y="629" width="0.0323%" height="15" fill="rgb(211,206,28)" fg:x="42684" fg:w="34"/><text x="40.8446%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.03%)</title><rect x="40.5946%" y="613" width="0.0323%" height="15" fill="rgb(237,167,16)" fg:x="42684" fg:w="34"/><text x="40.8446%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (1,101 samples, 1.05%)</title><rect x="39.5827%" y="725" width="1.0471%" height="15" fill="rgb(233,66,6)" fg:x="41620" fg:w="1101"/><text x="39.8327%" y="735.50"></text></g><g><title>event_listener::Event::notify (1,101 samples, 1.05%)</title><rect x="39.5827%" y="709" width="1.0471%" height="15" fill="rgb(246,123,29)" fg:x="41620" fg:w="1101"/><text x="39.8327%" y="719.50"></text></g><g><title>event_listener::List::notify (1,100 samples, 1.05%)</title><rect x="39.5836%" y="693" width="1.0462%" height="15" fill="rgb(209,62,40)" fg:x="41621" fg:w="1100"/><text x="39.8336%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (1,088 samples, 1.03%)</title><rect x="39.5950%" y="677" width="1.0347%" height="15" fill="rgb(218,4,25)" fg:x="41633" fg:w="1088"/><text x="39.8450%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (1,088 samples, 1.03%)</title><rect x="39.5950%" y="661" width="1.0347%" height="15" fill="rgb(253,91,49)" fg:x="41633" fg:w="1088"/><text x="39.8450%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1,081 samples, 1.03%)</title><rect x="39.6017%" y="645" width="1.0281%" height="15" fill="rgb(228,155,29)" fg:x="41640" fg:w="1081"/><text x="39.8517%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,111 samples, 1.06%)</title><rect x="39.5798%" y="805" width="1.0566%" height="15" fill="rgb(243,57,37)" fg:x="41617" fg:w="1111"/><text x="39.8298%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (1,111 samples, 1.06%)</title><rect x="39.5798%" y="789" width="1.0566%" height="15" fill="rgb(244,167,17)" fg:x="41617" fg:w="1111"/><text x="39.8298%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,111 samples, 1.06%)</title><rect x="39.5798%" y="773" width="1.0566%" height="15" fill="rgb(207,181,38)" fg:x="41617" fg:w="1111"/><text x="39.8298%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (1,111 samples, 1.06%)</title><rect x="39.5798%" y="757" width="1.0566%" height="15" fill="rgb(211,8,23)" fg:x="41617" fg:w="1111"/><text x="39.8298%" y="767.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (1,111 samples, 1.06%)</title><rect x="39.5798%" y="741" width="1.0566%" height="15" fill="rgb(235,11,44)" fg:x="41617" fg:w="1111"/><text x="39.8298%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="40.6374%" y="437" width="0.0133%" height="15" fill="rgb(248,18,52)" fg:x="42729" fg:w="14"/><text x="40.8874%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="40.6374%" y="421" width="0.0133%" height="15" fill="rgb(208,4,7)" fg:x="42729" fg:w="14"/><text x="40.8874%" y="431.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="40.6402%" y="405" width="0.0105%" height="15" fill="rgb(240,17,39)" fg:x="42732" fg:w="11"/><text x="40.8902%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="40.6374%" y="453" width="0.0143%" height="15" fill="rgb(207,170,3)" fg:x="42729" fg:w="15"/><text x="40.8874%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (18 samples, 0.02%)</title><rect x="40.6364%" y="469" width="0.0171%" height="15" fill="rgb(236,100,52)" fg:x="42728" fg:w="18"/><text x="40.8864%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (86 samples, 0.08%)</title><rect x="40.6364%" y="773" width="0.0818%" height="15" fill="rgb(246,78,51)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86 samples, 0.08%)</title><rect x="40.6364%" y="757" width="0.0818%" height="15" fill="rgb(211,17,15)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86 samples, 0.08%)</title><rect x="40.6364%" y="741" width="0.0818%" height="15" fill="rgb(209,59,46)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (86 samples, 0.08%)</title><rect x="40.6364%" y="725" width="0.0818%" height="15" fill="rgb(210,92,25)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86 samples, 0.08%)</title><rect x="40.6364%" y="709" width="0.0818%" height="15" fill="rgb(238,174,52)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (86 samples, 0.08%)</title><rect x="40.6364%" y="693" width="0.0818%" height="15" fill="rgb(230,73,7)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86 samples, 0.08%)</title><rect x="40.6364%" y="677" width="0.0818%" height="15" fill="rgb(243,124,40)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (86 samples, 0.08%)</title><rect x="40.6364%" y="661" width="0.0818%" height="15" fill="rgb(244,170,11)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.08%)</title><rect x="40.6364%" y="645" width="0.0818%" height="15" fill="rgb(207,114,54)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.08%)</title><rect x="40.6364%" y="629" width="0.0818%" height="15" fill="rgb(205,42,20)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="639.50"></text></g><g><title>alloc::alloc::alloc (86 samples, 0.08%)</title><rect x="40.6364%" y="613" width="0.0818%" height="15" fill="rgb(230,30,28)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="623.50"></text></g><g><title>__rg_alloc (86 samples, 0.08%)</title><rect x="40.6364%" y="597" width="0.0818%" height="15" fill="rgb(205,73,54)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (86 samples, 0.08%)</title><rect x="40.6364%" y="581" width="0.0818%" height="15" fill="rgb(254,227,23)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="591.50"></text></g><g><title>rust_alloc (86 samples, 0.08%)</title><rect x="40.6364%" y="565" width="0.0818%" height="15" fill="rgb(228,202,34)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="40.6364%" y="549" width="0.0818%" height="15" fill="rgb(222,225,37)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="40.6364%" y="533" width="0.0818%" height="15" fill="rgb(221,14,54)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="40.6364%" y="517" width="0.0818%" height="15" fill="rgb(254,102,2)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="40.6364%" y="501" width="0.0818%" height="15" fill="rgb(232,104,17)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (86 samples, 0.08%)</title><rect x="40.6364%" y="485" width="0.0818%" height="15" fill="rgb(250,220,14)" fg:x="42728" fg:w="86"/><text x="40.8864%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (68 samples, 0.06%)</title><rect x="40.6536%" y="469" width="0.0647%" height="15" fill="rgb(241,158,9)" fg:x="42746" fg:w="68"/><text x="40.9036%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (55 samples, 0.05%)</title><rect x="40.6659%" y="453" width="0.0523%" height="15" fill="rgb(246,9,43)" fg:x="42759" fg:w="55"/><text x="40.9159%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="40.6659%" y="437" width="0.0523%" height="15" fill="rgb(206,73,33)" fg:x="42759" fg:w="55"/><text x="40.9159%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="40.6659%" y="421" width="0.0523%" height="15" fill="rgb(222,79,8)" fg:x="42759" fg:w="55"/><text x="40.9159%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="40.7182%" y="389" width="0.0124%" height="15" fill="rgb(234,8,54)" fg:x="42814" fg:w="13"/><text x="40.9682%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.02%)</title><rect x="40.7182%" y="405" width="0.0152%" height="15" fill="rgb(209,134,38)" fg:x="42814" fg:w="16"/><text x="40.9682%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="40.7182%" y="437" width="0.0846%" height="15" fill="rgb(230,127,29)" fg:x="42814" fg:w="89"/><text x="40.9682%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (89 samples, 0.08%)</title><rect x="40.7182%" y="421" width="0.0846%" height="15" fill="rgb(242,44,41)" fg:x="42814" fg:w="89"/><text x="40.9682%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (73 samples, 0.07%)</title><rect x="40.7334%" y="405" width="0.0694%" height="15" fill="rgb(222,56,43)" fg:x="42830" fg:w="73"/><text x="40.9834%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (55 samples, 0.05%)</title><rect x="40.7506%" y="389" width="0.0523%" height="15" fill="rgb(238,39,47)" fg:x="42848" fg:w="55"/><text x="41.0006%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="40.7506%" y="373" width="0.0523%" height="15" fill="rgb(226,79,43)" fg:x="42848" fg:w="55"/><text x="41.0006%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="40.7506%" y="357" width="0.0523%" height="15" fill="rgb(242,105,53)" fg:x="42848" fg:w="55"/><text x="41.0006%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (120 samples, 0.11%)</title><rect x="40.7182%" y="709" width="0.1141%" height="15" fill="rgb(251,132,46)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (120 samples, 0.11%)</title><rect x="40.7182%" y="693" width="0.1141%" height="15" fill="rgb(231,77,14)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (120 samples, 0.11%)</title><rect x="40.7182%" y="677" width="0.1141%" height="15" fill="rgb(240,135,9)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (120 samples, 0.11%)</title><rect x="40.7182%" y="661" width="0.1141%" height="15" fill="rgb(248,109,14)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (120 samples, 0.11%)</title><rect x="40.7182%" y="645" width="0.1141%" height="15" fill="rgb(227,146,52)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (120 samples, 0.11%)</title><rect x="40.7182%" y="629" width="0.1141%" height="15" fill="rgb(232,54,3)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (120 samples, 0.11%)</title><rect x="40.7182%" y="613" width="0.1141%" height="15" fill="rgb(229,201,43)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (120 samples, 0.11%)</title><rect x="40.7182%" y="597" width="0.1141%" height="15" fill="rgb(252,161,33)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (120 samples, 0.11%)</title><rect x="40.7182%" y="581" width="0.1141%" height="15" fill="rgb(226,146,40)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (120 samples, 0.11%)</title><rect x="40.7182%" y="565" width="0.1141%" height="15" fill="rgb(219,47,25)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="575.50"></text></g><g><title>alloc::alloc::alloc (120 samples, 0.11%)</title><rect x="40.7182%" y="549" width="0.1141%" height="15" fill="rgb(250,135,13)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="559.50"></text></g><g><title>__rg_alloc (120 samples, 0.11%)</title><rect x="40.7182%" y="533" width="0.1141%" height="15" fill="rgb(219,229,18)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (120 samples, 0.11%)</title><rect x="40.7182%" y="517" width="0.1141%" height="15" fill="rgb(217,152,27)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="527.50"></text></g><g><title>rust_alloc (120 samples, 0.11%)</title><rect x="40.7182%" y="501" width="0.1141%" height="15" fill="rgb(225,71,47)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (120 samples, 0.11%)</title><rect x="40.7182%" y="485" width="0.1141%" height="15" fill="rgb(220,139,14)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (120 samples, 0.11%)</title><rect x="40.7182%" y="469" width="0.1141%" height="15" fill="rgb(247,54,32)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (120 samples, 0.11%)</title><rect x="40.7182%" y="453" width="0.1141%" height="15" fill="rgb(252,131,39)" fg:x="42814" fg:w="120"/><text x="40.9682%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="40.8029%" y="437" width="0.0295%" height="15" fill="rgb(210,108,39)" fg:x="42903" fg:w="31"/><text x="41.0529%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="40.8029%" y="421" width="0.0295%" height="15" fill="rgb(205,23,29)" fg:x="42903" fg:w="31"/><text x="41.0529%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="40.8029%" y="405" width="0.0295%" height="15" fill="rgb(246,139,46)" fg:x="42903" fg:w="31"/><text x="41.0529%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="40.8029%" y="389" width="0.0295%" height="15" fill="rgb(250,81,26)" fg:x="42903" fg:w="31"/><text x="41.0529%" y="399.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (31 samples, 0.03%)</title><rect x="40.8029%" y="373" width="0.0295%" height="15" fill="rgb(214,104,7)" fg:x="42903" fg:w="31"/><text x="41.0529%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="40.8190%" y="357" width="0.0133%" height="15" fill="rgb(233,189,8)" fg:x="42920" fg:w="14"/><text x="41.0690%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="40.8190%" y="341" width="0.0133%" height="15" fill="rgb(228,141,17)" fg:x="42920" fg:w="14"/><text x="41.0690%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="40.8343%" y="469" width="0.0114%" height="15" fill="rgb(247,157,1)" fg:x="42936" fg:w="12"/><text x="41.0843%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="40.8324%" y="485" width="0.0181%" height="15" fill="rgb(249,225,5)" fg:x="42934" fg:w="19"/><text x="41.0824%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="40.8552%" y="469" width="0.0105%" height="15" fill="rgb(242,55,13)" fg:x="42958" fg:w="11"/><text x="41.1052%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (88 samples, 0.08%)</title><rect x="40.8324%" y="517" width="0.0837%" height="15" fill="rgb(230,49,50)" fg:x="42934" fg:w="88"/><text x="41.0824%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (88 samples, 0.08%)</title><rect x="40.8324%" y="501" width="0.0837%" height="15" fill="rgb(241,111,38)" fg:x="42934" fg:w="88"/><text x="41.0824%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (69 samples, 0.07%)</title><rect x="40.8504%" y="485" width="0.0656%" height="15" fill="rgb(252,155,4)" fg:x="42953" fg:w="69"/><text x="41.1004%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (53 samples, 0.05%)</title><rect x="40.8656%" y="469" width="0.0504%" height="15" fill="rgb(212,69,32)" fg:x="42969" fg:w="53"/><text x="41.1156%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="40.8656%" y="453" width="0.0504%" height="15" fill="rgb(243,107,47)" fg:x="42969" fg:w="53"/><text x="41.1156%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="40.8656%" y="437" width="0.0504%" height="15" fill="rgb(247,130,12)" fg:x="42969" fg:w="53"/><text x="41.1156%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (295 samples, 0.28%)</title><rect x="40.6364%" y="789" width="0.2806%" height="15" fill="rgb(233,74,16)" fg:x="42728" fg:w="295"/><text x="40.8864%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (209 samples, 0.20%)</title><rect x="40.7182%" y="773" width="0.1988%" height="15" fill="rgb(208,58,18)" fg:x="42814" fg:w="209"/><text x="40.9682%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (209 samples, 0.20%)</title><rect x="40.7182%" y="757" width="0.1988%" height="15" fill="rgb(242,225,1)" fg:x="42814" fg:w="209"/><text x="40.9682%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (209 samples, 0.20%)</title><rect x="40.7182%" y="741" width="0.1988%" height="15" fill="rgb(249,39,40)" fg:x="42814" fg:w="209"/><text x="40.9682%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (209 samples, 0.20%)</title><rect x="40.7182%" y="725" width="0.1988%" height="15" fill="rgb(207,72,44)" fg:x="42814" fg:w="209"/><text x="40.9682%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (89 samples, 0.08%)</title><rect x="40.8324%" y="709" width="0.0846%" height="15" fill="rgb(215,193,12)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (89 samples, 0.08%)</title><rect x="40.8324%" y="693" width="0.0846%" height="15" fill="rgb(248,41,39)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (89 samples, 0.08%)</title><rect x="40.8324%" y="677" width="0.0846%" height="15" fill="rgb(253,85,4)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89 samples, 0.08%)</title><rect x="40.8324%" y="661" width="0.0846%" height="15" fill="rgb(243,70,31)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89 samples, 0.08%)</title><rect x="40.8324%" y="645" width="0.0846%" height="15" fill="rgb(253,195,26)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="655.50"></text></g><g><title>alloc::alloc::alloc (89 samples, 0.08%)</title><rect x="40.8324%" y="629" width="0.0846%" height="15" fill="rgb(243,42,11)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="639.50"></text></g><g><title>__rg_alloc (89 samples, 0.08%)</title><rect x="40.8324%" y="613" width="0.0846%" height="15" fill="rgb(239,66,17)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (89 samples, 0.08%)</title><rect x="40.8324%" y="597" width="0.0846%" height="15" fill="rgb(217,132,21)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="607.50"></text></g><g><title>rust_alloc (89 samples, 0.08%)</title><rect x="40.8324%" y="581" width="0.0846%" height="15" fill="rgb(252,202,21)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="40.8324%" y="565" width="0.0846%" height="15" fill="rgb(233,98,36)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="40.8324%" y="549" width="0.0846%" height="15" fill="rgb(216,153,54)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="40.8324%" y="533" width="0.0846%" height="15" fill="rgb(250,99,7)" fg:x="42934" fg:w="89"/><text x="41.0824%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (11 samples, 0.01%)</title><rect x="40.9265%" y="469" width="0.0105%" height="15" fill="rgb(207,56,50)" fg:x="43033" fg:w="11"/><text x="41.1765%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="40.9265%" y="453" width="0.0105%" height="15" fill="rgb(244,61,34)" fg:x="43033" fg:w="11"/><text x="41.1765%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="40.9227%" y="517" width="0.0228%" height="15" fill="rgb(241,50,38)" fg:x="43029" fg:w="24"/><text x="41.1727%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="40.9227%" y="501" width="0.0228%" height="15" fill="rgb(212,166,30)" fg:x="43029" fg:w="24"/><text x="41.1727%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="40.9256%" y="485" width="0.0200%" height="15" fill="rgb(249,127,32)" fg:x="43032" fg:w="21"/><text x="41.1756%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (34 samples, 0.03%)</title><rect x="40.9227%" y="533" width="0.0323%" height="15" fill="rgb(209,103,0)" fg:x="43029" fg:w="34"/><text x="41.1727%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (44 samples, 0.04%)</title><rect x="40.9170%" y="549" width="0.0418%" height="15" fill="rgb(238,209,51)" fg:x="43023" fg:w="44"/><text x="41.1670%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (32 samples, 0.03%)</title><rect x="40.9750%" y="533" width="0.0304%" height="15" fill="rgb(237,56,23)" fg:x="43084" fg:w="32"/><text x="41.2250%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (281 samples, 0.27%)</title><rect x="40.9170%" y="581" width="0.2672%" height="15" fill="rgb(215,153,46)" fg:x="43023" fg:w="281"/><text x="41.1670%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (281 samples, 0.27%)</title><rect x="40.9170%" y="565" width="0.2672%" height="15" fill="rgb(224,49,31)" fg:x="43023" fg:w="281"/><text x="41.1670%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (237 samples, 0.23%)</title><rect x="40.9588%" y="549" width="0.2254%" height="15" fill="rgb(250,18,42)" fg:x="43067" fg:w="237"/><text x="41.2088%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (188 samples, 0.18%)</title><rect x="41.0054%" y="533" width="0.1788%" height="15" fill="rgb(215,176,39)" fg:x="43116" fg:w="188"/><text x="41.2554%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (188 samples, 0.18%)</title><rect x="41.0054%" y="517" width="0.1788%" height="15" fill="rgb(223,77,29)" fg:x="43116" fg:w="188"/><text x="41.2554%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (188 samples, 0.18%)</title><rect x="41.0054%" y="501" width="0.1788%" height="15" fill="rgb(234,94,52)" fg:x="43116" fg:w="188"/><text x="41.2554%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (291 samples, 0.28%)</title><rect x="40.9170%" y="789" width="0.2768%" height="15" fill="rgb(220,154,50)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (291 samples, 0.28%)</title><rect x="40.9170%" y="773" width="0.2768%" height="15" fill="rgb(212,11,10)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (291 samples, 0.28%)</title><rect x="40.9170%" y="757" width="0.2768%" height="15" fill="rgb(205,166,19)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (291 samples, 0.28%)</title><rect x="40.9170%" y="741" width="0.2768%" height="15" fill="rgb(244,198,16)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (291 samples, 0.28%)</title><rect x="40.9170%" y="725" width="0.2768%" height="15" fill="rgb(219,69,12)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (291 samples, 0.28%)</title><rect x="40.9170%" y="709" width="0.2768%" height="15" fill="rgb(245,30,7)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="719.50"></text></g><g><title>alloc::alloc::alloc (291 samples, 0.28%)</title><rect x="40.9170%" y="693" width="0.2768%" height="15" fill="rgb(218,221,48)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="703.50"></text></g><g><title>__rg_alloc (291 samples, 0.28%)</title><rect x="40.9170%" y="677" width="0.2768%" height="15" fill="rgb(216,66,15)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (291 samples, 0.28%)</title><rect x="40.9170%" y="661" width="0.2768%" height="15" fill="rgb(226,122,50)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="671.50"></text></g><g><title>rust_alloc (291 samples, 0.28%)</title><rect x="40.9170%" y="645" width="0.2768%" height="15" fill="rgb(239,156,16)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (291 samples, 0.28%)</title><rect x="40.9170%" y="629" width="0.2768%" height="15" fill="rgb(224,27,38)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (291 samples, 0.28%)</title><rect x="40.9170%" y="613" width="0.2768%" height="15" fill="rgb(224,39,27)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (291 samples, 0.28%)</title><rect x="40.9170%" y="597" width="0.2768%" height="15" fill="rgb(215,92,29)" fg:x="43023" fg:w="291"/><text x="41.1670%" y="607.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (633 samples, 0.60%)</title><rect x="41.3726%" y="757" width="0.6020%" height="15" fill="rgb(207,159,16)" fg:x="43502" fg:w="633"/><text x="41.6226%" y="767.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="42.0459%" y="565" width="0.0105%" height="15" fill="rgb(238,163,47)" fg:x="44210" fg:w="11"/><text x="42.2959%" y="575.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="42.0564%" y="565" width="0.0105%" height="15" fill="rgb(219,91,49)" fg:x="44221" fg:w="11"/><text x="42.3064%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="42.0973%" y="453" width="0.0171%" height="15" fill="rgb(227,167,31)" fg:x="44264" fg:w="18"/><text x="42.3473%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="42.0973%" y="437" width="0.0171%" height="15" fill="rgb(234,80,54)" fg:x="44264" fg:w="18"/><text x="42.3473%" y="447.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (16 samples, 0.02%)</title><rect x="42.0992%" y="421" width="0.0152%" height="15" fill="rgb(212,114,2)" fg:x="44266" fg:w="16"/><text x="42.3492%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (23 samples, 0.02%)</title><rect x="42.0973%" y="469" width="0.0219%" height="15" fill="rgb(234,50,24)" fg:x="44264" fg:w="23"/><text x="42.3473%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (38 samples, 0.04%)</title><rect x="42.0906%" y="485" width="0.0361%" height="15" fill="rgb(221,68,8)" fg:x="44257" fg:w="38"/><text x="42.3406%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (24 samples, 0.02%)</title><rect x="42.1448%" y="469" width="0.0228%" height="15" fill="rgb(254,180,31)" fg:x="44314" fg:w="24"/><text x="42.3948%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (193 samples, 0.18%)</title><rect x="42.0906%" y="517" width="0.1836%" height="15" fill="rgb(247,130,50)" fg:x="44257" fg:w="193"/><text x="42.3406%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (193 samples, 0.18%)</title><rect x="42.0906%" y="501" width="0.1836%" height="15" fill="rgb(211,109,4)" fg:x="44257" fg:w="193"/><text x="42.3406%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (155 samples, 0.15%)</title><rect x="42.1267%" y="485" width="0.1474%" height="15" fill="rgb(238,50,21)" fg:x="44295" fg:w="155"/><text x="42.3767%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (112 samples, 0.11%)</title><rect x="42.1676%" y="469" width="0.1065%" height="15" fill="rgb(225,57,45)" fg:x="44338" fg:w="112"/><text x="42.4176%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (112 samples, 0.11%)</title><rect x="42.1676%" y="453" width="0.1065%" height="15" fill="rgb(209,196,50)" fg:x="44338" fg:w="112"/><text x="42.4176%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (112 samples, 0.11%)</title><rect x="42.1676%" y="437" width="0.1065%" height="15" fill="rgb(242,140,13)" fg:x="44338" fg:w="112"/><text x="42.4176%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (11 samples, 0.01%)</title><rect x="42.2808%" y="485" width="0.0105%" height="15" fill="rgb(217,111,7)" fg:x="44457" fg:w="11"/><text x="42.5308%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (11 samples, 0.01%)</title><rect x="42.2808%" y="469" width="0.0105%" height="15" fill="rgb(253,193,51)" fg:x="44457" fg:w="11"/><text x="42.5308%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="42.2741%" y="517" width="0.0181%" height="15" fill="rgb(252,70,29)" fg:x="44450" fg:w="19"/><text x="42.5241%" y="527.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (18 samples, 0.02%)</title><rect x="42.2751%" y="501" width="0.0171%" height="15" fill="rgb(232,127,12)" fg:x="44451" fg:w="18"/><text x="42.5251%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (27 samples, 0.03%)</title><rect x="42.2951%" y="517" width="0.0257%" height="15" fill="rgb(211,180,21)" fg:x="44472" fg:w="27"/><text x="42.5451%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (27 samples, 0.03%)</title><rect x="42.2951%" y="501" width="0.0257%" height="15" fill="rgb(229,72,13)" fg:x="44472" fg:w="27"/><text x="42.5451%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (543 samples, 0.52%)</title><rect x="42.0668%" y="565" width="0.5164%" height="15" fill="rgb(240,211,49)" fg:x="44232" fg:w="543"/><text x="42.3168%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (539 samples, 0.51%)</title><rect x="42.0706%" y="549" width="0.5126%" height="15" fill="rgb(219,149,40)" fg:x="44236" fg:w="539"/><text x="42.3206%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (522 samples, 0.50%)</title><rect x="42.0868%" y="533" width="0.4964%" height="15" fill="rgb(210,127,46)" fg:x="44253" fg:w="522"/><text x="42.3368%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (276 samples, 0.26%)</title><rect x="42.3208%" y="517" width="0.2625%" height="15" fill="rgb(220,106,7)" fg:x="44499" fg:w="276"/><text x="42.5708%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (276 samples, 0.26%)</title><rect x="42.3208%" y="501" width="0.2625%" height="15" fill="rgb(249,31,22)" fg:x="44499" fg:w="276"/><text x="42.5708%" y="511.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (649 samples, 0.62%)</title><rect x="41.9746%" y="757" width="0.6172%" height="15" fill="rgb(253,1,49)" fg:x="44135" fg:w="649"/><text x="42.2246%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (647 samples, 0.62%)</title><rect x="41.9765%" y="741" width="0.6153%" height="15" fill="rgb(227,144,33)" fg:x="44137" fg:w="647"/><text x="42.2265%" y="751.50"></text></g><g><title>value_trait::Builder::object (647 samples, 0.62%)</title><rect x="41.9765%" y="725" width="0.6153%" height="15" fill="rgb(249,163,44)" fg:x="44137" fg:w="647"/><text x="42.2265%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (647 samples, 0.62%)</title><rect x="41.9765%" y="709" width="0.6153%" height="15" fill="rgb(234,15,39)" fg:x="44137" fg:w="647"/><text x="42.2265%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (647 samples, 0.62%)</title><rect x="41.9765%" y="693" width="0.6153%" height="15" fill="rgb(207,66,16)" fg:x="44137" fg:w="647"/><text x="42.2265%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (613 samples, 0.58%)</title><rect x="42.0088%" y="677" width="0.5830%" height="15" fill="rgb(233,112,24)" fg:x="44171" fg:w="613"/><text x="42.2588%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (613 samples, 0.58%)</title><rect x="42.0088%" y="661" width="0.5830%" height="15" fill="rgb(230,90,22)" fg:x="44171" fg:w="613"/><text x="42.2588%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (613 samples, 0.58%)</title><rect x="42.0088%" y="645" width="0.5830%" height="15" fill="rgb(229,61,13)" fg:x="44171" fg:w="613"/><text x="42.2588%" y="655.50"></text></g><g><title>alloc::alloc::alloc (610 samples, 0.58%)</title><rect x="42.0117%" y="629" width="0.5801%" height="15" fill="rgb(225,57,24)" fg:x="44174" fg:w="610"/><text x="42.2617%" y="639.50"></text></g><g><title>__rg_alloc (610 samples, 0.58%)</title><rect x="42.0117%" y="613" width="0.5801%" height="15" fill="rgb(208,169,48)" fg:x="44174" fg:w="610"/><text x="42.2617%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (610 samples, 0.58%)</title><rect x="42.0117%" y="597" width="0.5801%" height="15" fill="rgb(244,218,51)" fg:x="44174" fg:w="610"/><text x="42.2617%" y="607.50"></text></g><g><title>rust_alloc (574 samples, 0.55%)</title><rect x="42.0459%" y="581" width="0.5459%" height="15" fill="rgb(214,148,10)" fg:x="44210" fg:w="574"/><text x="42.2959%" y="591.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,327 samples, 1.26%)</title><rect x="41.3307%" y="773" width="1.2620%" height="15" fill="rgb(225,174,27)" fg:x="43458" fg:w="1327"/><text x="41.5807%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (11 samples, 0.01%)</title><rect x="42.5928%" y="773" width="0.0105%" height="15" fill="rgb(230,96,26)" fg:x="44785" fg:w="11"/><text x="42.8428%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="42.6108%" y="757" width="0.0219%" height="15" fill="rgb(232,10,30)" fg:x="44804" fg:w="23"/><text x="42.8608%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="42.6203%" y="741" width="0.0124%" height="15" fill="rgb(222,8,50)" fg:x="44814" fg:w="13"/><text x="42.8703%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="42.6203%" y="725" width="0.0124%" height="15" fill="rgb(213,81,27)" fg:x="44814" fg:w="13"/><text x="42.8703%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="42.6203%" y="709" width="0.0124%" height="15" fill="rgb(245,50,10)" fg:x="44814" fg:w="13"/><text x="42.8703%" y="719.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.02%)</title><rect x="42.7221%" y="709" width="0.0152%" height="15" fill="rgb(216,100,18)" fg:x="44921" fg:w="16"/><text x="42.9721%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="42.7221%" y="693" width="0.0152%" height="15" fill="rgb(236,147,54)" fg:x="44921" fg:w="16"/><text x="42.9721%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="42.7221%" y="677" width="0.0152%" height="15" fill="rgb(205,143,26)" fg:x="44921" fg:w="16"/><text x="42.9721%" y="687.50"></text></g><g><title>__rg_dealloc (16 samples, 0.02%)</title><rect x="42.7221%" y="661" width="0.0152%" height="15" fill="rgb(236,26,9)" fg:x="44921" fg:w="16"/><text x="42.9721%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.02%)</title><rect x="42.7221%" y="645" width="0.0152%" height="15" fill="rgb(221,165,53)" fg:x="44921" fg:w="16"/><text x="42.9721%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="42.7582%" y="645" width="0.0371%" height="15" fill="rgb(214,110,17)" fg:x="44959" fg:w="39"/><text x="43.0082%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (38 samples, 0.04%)</title><rect x="42.7592%" y="629" width="0.0361%" height="15" fill="rgb(237,197,12)" fg:x="44960" fg:w="38"/><text x="43.0092%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (112 samples, 0.11%)</title><rect x="42.7126%" y="725" width="0.1065%" height="15" fill="rgb(205,84,17)" fg:x="44911" fg:w="112"/><text x="42.9626%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (86 samples, 0.08%)</title><rect x="42.7373%" y="709" width="0.0818%" height="15" fill="rgb(237,18,45)" fg:x="44937" fg:w="86"/><text x="42.9873%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (86 samples, 0.08%)</title><rect x="42.7373%" y="693" width="0.0818%" height="15" fill="rgb(221,87,14)" fg:x="44937" fg:w="86"/><text x="42.9873%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (64 samples, 0.06%)</title><rect x="42.7582%" y="677" width="0.0609%" height="15" fill="rgb(238,186,15)" fg:x="44959" fg:w="64"/><text x="43.0082%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (64 samples, 0.06%)</title><rect x="42.7582%" y="661" width="0.0609%" height="15" fill="rgb(208,115,11)" fg:x="44959" fg:w="64"/><text x="43.0082%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (25 samples, 0.02%)</title><rect x="42.7953%" y="645" width="0.0238%" height="15" fill="rgb(254,175,0)" fg:x="44998" fg:w="25"/><text x="43.0453%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="42.7953%" y="629" width="0.0238%" height="15" fill="rgb(227,24,42)" fg:x="44998" fg:w="25"/><text x="43.0453%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (23 samples, 0.02%)</title><rect x="42.7972%" y="613" width="0.0219%" height="15" fill="rgb(223,211,37)" fg:x="45000" fg:w="23"/><text x="43.0472%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (174 samples, 0.17%)</title><rect x="42.6546%" y="741" width="0.1655%" height="15" fill="rgb(235,49,27)" fg:x="44850" fg:w="174"/><text x="42.9046%" y="751.50"></text></g><g><title>rust_dealloc (29 samples, 0.03%)</title><rect x="42.8381%" y="709" width="0.0276%" height="15" fill="rgb(254,97,51)" fg:x="45043" fg:w="29"/><text x="43.0881%" y="719.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="42.8657%" y="709" width="0.0143%" height="15" fill="rgb(249,51,40)" fg:x="45072" fg:w="15"/><text x="43.1157%" y="719.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="42.8933%" y="645" width="0.0133%" height="15" fill="rgb(210,128,45)" fg:x="45101" fg:w="14"/><text x="43.1433%" y="655.50"></text></g><g><title>sizeclass_to_size (18 samples, 0.02%)</title><rect x="42.9066%" y="645" width="0.0171%" height="15" fill="rgb(224,137,50)" fg:x="45115" fg:w="18"/><text x="43.1566%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (18 samples, 0.02%)</title><rect x="42.9066%" y="629" width="0.0171%" height="15" fill="rgb(242,15,9)" fg:x="45115" fg:w="18"/><text x="43.1566%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (24 samples, 0.02%)</title><rect x="42.9522%" y="597" width="0.0228%" height="15" fill="rgb(233,187,41)" fg:x="45163" fg:w="24"/><text x="43.2022%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="42.9522%" y="581" width="0.0228%" height="15" fill="rgb(227,2,29)" fg:x="45163" fg:w="24"/><text x="43.2022%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (75 samples, 0.07%)</title><rect x="42.9237%" y="645" width="0.0713%" height="15" fill="rgb(222,70,3)" fg:x="45133" fg:w="75"/><text x="43.1737%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (75 samples, 0.07%)</title><rect x="42.9237%" y="629" width="0.0713%" height="15" fill="rgb(213,11,42)" fg:x="45133" fg:w="75"/><text x="43.1737%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.07%)</title><rect x="42.9285%" y="613" width="0.0666%" height="15" fill="rgb(225,150,9)" fg:x="45138" fg:w="70"/><text x="43.1785%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="42.9751%" y="597" width="0.0200%" height="15" fill="rgb(230,162,45)" fg:x="45187" fg:w="21"/><text x="43.2251%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (21 samples, 0.02%)</title><rect x="42.9751%" y="581" width="0.0200%" height="15" fill="rgb(222,14,52)" fg:x="45187" fg:w="21"/><text x="43.2251%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (142 samples, 0.14%)</title><rect x="42.8800%" y="709" width="0.1350%" height="15" fill="rgb(254,198,14)" fg:x="45087" fg:w="142"/><text x="43.1300%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (142 samples, 0.14%)</title><rect x="42.8800%" y="693" width="0.1350%" height="15" fill="rgb(220,217,30)" fg:x="45087" fg:w="142"/><text x="43.1300%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (142 samples, 0.14%)</title><rect x="42.8800%" y="677" width="0.1350%" height="15" fill="rgb(215,146,41)" fg:x="45087" fg:w="142"/><text x="43.1300%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (142 samples, 0.14%)</title><rect x="42.8800%" y="661" width="0.1350%" height="15" fill="rgb(217,27,36)" fg:x="45087" fg:w="142"/><text x="43.1300%" y="671.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (21 samples, 0.02%)</title><rect x="42.9950%" y="645" width="0.0200%" height="15" fill="rgb(219,218,39)" fg:x="45208" fg:w="21"/><text x="43.2450%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (187 samples, 0.18%)</title><rect x="42.8381%" y="725" width="0.1778%" height="15" fill="rgb(219,4,42)" fg:x="45043" fg:w="187"/><text x="43.0881%" y="735.50"></text></g><g><title>rust_dealloc (212 samples, 0.20%)</title><rect x="42.8201%" y="741" width="0.2016%" height="15" fill="rgb(249,119,36)" fg:x="45024" fg:w="212"/><text x="43.0701%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (440 samples, 0.42%)</title><rect x="42.6108%" y="773" width="0.4185%" height="15" fill="rgb(209,23,33)" fg:x="44804" fg:w="440"/><text x="42.8608%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (417 samples, 0.40%)</title><rect x="42.6327%" y="757" width="0.3966%" height="15" fill="rgb(211,10,0)" fg:x="44827" fg:w="417"/><text x="42.8827%" y="767.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (22 samples, 0.02%)</title><rect x="43.0293%" y="773" width="0.0209%" height="15" fill="rgb(208,99,37)" fg:x="45244" fg:w="22"/><text x="43.2793%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,669 samples, 3.49%)</title><rect x="39.5798%" y="853" width="3.4894%" height="15" fill="rgb(213,132,31)" fg:x="41617" fg:w="3669"/><text x="39.8298%" y="863.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,669 samples, 3.49%)</title><rect x="39.5798%" y="837" width="3.4894%" height="15" fill="rgb(243,129,40)" fg:x="41617" fg:w="3669"/><text x="39.8298%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,669 samples, 3.49%)</title><rect x="39.5798%" y="821" width="3.4894%" height="15" fill="rgb(210,66,33)" fg:x="41617" fg:w="3669"/><text x="39.8298%" y="831.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,558 samples, 2.43%)</title><rect x="40.6364%" y="805" width="2.4328%" height="15" fill="rgb(209,189,4)" fg:x="42728" fg:w="2558"/><text x="40.8864%" y="815.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_event (1,971 samples, 1.87%)</title><rect x="41.1947%" y="789" width="1.8745%" height="15" fill="rgb(214,107,37)" fg:x="43315" fg:w="1971"/><text x="41.4447%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (20 samples, 0.02%)</title><rect x="43.0502%" y="773" width="0.0190%" height="15" fill="rgb(245,88,54)" fg:x="45266" fg:w="20"/><text x="43.3002%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (31 samples, 0.03%)</title><rect x="43.1834%" y="789" width="0.0295%" height="15" fill="rgb(205,146,20)" fg:x="45406" fg:w="31"/><text x="43.4334%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (894 samples, 0.85%)</title><rect x="43.0921%" y="805" width="0.8502%" height="15" fill="rgb(220,161,25)" fg:x="45310" fg:w="894"/><text x="43.3421%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (759 samples, 0.72%)</title><rect x="43.2204%" y="789" width="0.7218%" height="15" fill="rgb(215,152,15)" fg:x="45445" fg:w="759"/><text x="43.4704%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (434 samples, 0.41%)</title><rect x="43.9423%" y="805" width="0.4128%" height="15" fill="rgb(233,192,44)" fg:x="46204" fg:w="434"/><text x="44.1923%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,354 samples, 1.29%)</title><rect x="43.0692%" y="837" width="1.2877%" height="15" fill="rgb(240,170,46)" fg:x="45286" fg:w="1354"/><text x="43.3192%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,354 samples, 1.29%)</title><rect x="43.0692%" y="821" width="1.2877%" height="15" fill="rgb(207,104,33)" fg:x="45286" fg:w="1354"/><text x="43.3192%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (361 samples, 0.34%)</title><rect x="44.3978%" y="821" width="0.3433%" height="15" fill="rgb(219,21,39)" fg:x="46683" fg:w="361"/><text x="44.6478%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (34 samples, 0.03%)</title><rect x="44.9475%" y="805" width="0.0323%" height="15" fill="rgb(214,133,29)" fg:x="47261" fg:w="34"/><text x="45.1975%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="44.9837%" y="789" width="0.0266%" height="15" fill="rgb(226,93,6)" fg:x="47299" fg:w="28"/><text x="45.2337%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (255 samples, 0.24%)</title><rect x="44.9837%" y="805" width="0.2425%" height="15" fill="rgb(252,222,34)" fg:x="47299" fg:w="255"/><text x="45.2337%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (227 samples, 0.22%)</title><rect x="45.0103%" y="789" width="0.2159%" height="15" fill="rgb(252,92,48)" fg:x="47327" fg:w="227"/><text x="45.2603%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (216 samples, 0.21%)</title><rect x="45.0208%" y="773" width="0.2054%" height="15" fill="rgb(245,223,24)" fg:x="47338" fg:w="216"/><text x="45.2708%" y="783.50"></text></g><g><title>core::ptr::read (216 samples, 0.21%)</title><rect x="45.0208%" y="757" width="0.2054%" height="15" fill="rgb(205,176,3)" fg:x="47338" fg:w="216"/><text x="45.2708%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (215 samples, 0.20%)</title><rect x="45.0217%" y="741" width="0.2045%" height="15" fill="rgb(235,151,15)" fg:x="47339" fg:w="215"/><text x="45.2717%" y="751.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="45.2652%" y="501" width="0.0143%" height="15" fill="rgb(237,209,11)" fg:x="47595" fg:w="15"/><text x="45.5152%" y="511.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="45.2795%" y="501" width="0.0124%" height="15" fill="rgb(243,227,24)" fg:x="47610" fg:w="13"/><text x="45.5295%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.02%)</title><rect x="45.2966%" y="421" width="0.0152%" height="15" fill="rgb(239,193,16)" fg:x="47628" fg:w="16"/><text x="45.5466%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.02%)</title><rect x="45.2966%" y="405" width="0.0152%" height="15" fill="rgb(231,27,9)" fg:x="47628" fg:w="16"/><text x="45.5466%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (16 samples, 0.02%)</title><rect x="45.2966%" y="389" width="0.0152%" height="15" fill="rgb(219,169,10)" fg:x="47628" fg:w="16"/><text x="45.5466%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (18 samples, 0.02%)</title><rect x="45.2966%" y="437" width="0.0171%" height="15" fill="rgb(244,229,43)" fg:x="47628" fg:w="18"/><text x="45.5466%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (25 samples, 0.02%)</title><rect x="45.2947%" y="453" width="0.0238%" height="15" fill="rgb(254,38,20)" fg:x="47626" fg:w="25"/><text x="45.5447%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (20 samples, 0.02%)</title><rect x="45.3289%" y="437" width="0.0190%" height="15" fill="rgb(250,47,30)" fg:x="47662" fg:w="20"/><text x="45.5789%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (184 samples, 0.17%)</title><rect x="45.2947%" y="485" width="0.1750%" height="15" fill="rgb(224,124,36)" fg:x="47626" fg:w="184"/><text x="45.5447%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (184 samples, 0.17%)</title><rect x="45.2947%" y="469" width="0.1750%" height="15" fill="rgb(246,68,51)" fg:x="47626" fg:w="184"/><text x="45.5447%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (159 samples, 0.15%)</title><rect x="45.3185%" y="453" width="0.1512%" height="15" fill="rgb(253,43,49)" fg:x="47651" fg:w="159"/><text x="45.5685%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (128 samples, 0.12%)</title><rect x="45.3479%" y="437" width="0.1217%" height="15" fill="rgb(219,54,36)" fg:x="47682" fg:w="128"/><text x="45.5979%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (128 samples, 0.12%)</title><rect x="45.3479%" y="421" width="0.1217%" height="15" fill="rgb(227,133,34)" fg:x="47682" fg:w="128"/><text x="45.5979%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (128 samples, 0.12%)</title><rect x="45.3479%" y="405" width="0.1217%" height="15" fill="rgb(247,227,15)" fg:x="47682" fg:w="128"/><text x="45.5979%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (61 samples, 0.06%)</title><rect x="45.4763%" y="485" width="0.0580%" height="15" fill="rgb(229,96,14)" fg:x="47817" fg:w="61"/><text x="45.7263%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (61 samples, 0.06%)</title><rect x="45.4763%" y="469" width="0.0580%" height="15" fill="rgb(220,79,17)" fg:x="47817" fg:w="61"/><text x="45.7263%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (769 samples, 0.73%)</title><rect x="45.2642%" y="533" width="0.7314%" height="15" fill="rgb(205,131,53)" fg:x="47594" fg:w="769"/><text x="45.5142%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (768 samples, 0.73%)</title><rect x="45.2652%" y="517" width="0.7304%" height="15" fill="rgb(209,50,29)" fg:x="47595" fg:w="768"/><text x="45.5152%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (740 samples, 0.70%)</title><rect x="45.2918%" y="501" width="0.7038%" height="15" fill="rgb(245,86,46)" fg:x="47623" fg:w="740"/><text x="45.5418%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (485 samples, 0.46%)</title><rect x="45.5343%" y="485" width="0.4613%" height="15" fill="rgb(235,66,46)" fg:x="47878" fg:w="485"/><text x="45.7843%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (485 samples, 0.46%)</title><rect x="45.5343%" y="469" width="0.4613%" height="15" fill="rgb(232,148,31)" fg:x="47878" fg:w="485"/><text x="45.7843%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (812 samples, 0.77%)</title><rect x="45.2338%" y="677" width="0.7723%" height="15" fill="rgb(217,149,8)" fg:x="47562" fg:w="812"/><text x="45.4838%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (812 samples, 0.77%)</title><rect x="45.2338%" y="661" width="0.7723%" height="15" fill="rgb(209,183,11)" fg:x="47562" fg:w="812"/><text x="45.4838%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (802 samples, 0.76%)</title><rect x="45.2433%" y="645" width="0.7627%" height="15" fill="rgb(208,55,20)" fg:x="47572" fg:w="802"/><text x="45.4933%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (802 samples, 0.76%)</title><rect x="45.2433%" y="629" width="0.7627%" height="15" fill="rgb(218,39,14)" fg:x="47572" fg:w="802"/><text x="45.4933%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (802 samples, 0.76%)</title><rect x="45.2433%" y="613" width="0.7627%" height="15" fill="rgb(216,169,33)" fg:x="47572" fg:w="802"/><text x="45.4933%" y="623.50"></text></g><g><title>alloc::alloc::alloc (787 samples, 0.75%)</title><rect x="45.2576%" y="597" width="0.7485%" height="15" fill="rgb(233,80,24)" fg:x="47587" fg:w="787"/><text x="45.5076%" y="607.50"></text></g><g><title>__rg_alloc (787 samples, 0.75%)</title><rect x="45.2576%" y="581" width="0.7485%" height="15" fill="rgb(213,179,31)" fg:x="47587" fg:w="787"/><text x="45.5076%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (787 samples, 0.75%)</title><rect x="45.2576%" y="565" width="0.7485%" height="15" fill="rgb(209,19,5)" fg:x="47587" fg:w="787"/><text x="45.5076%" y="575.50"></text></g><g><title>rust_alloc (786 samples, 0.75%)</title><rect x="45.2585%" y="549" width="0.7475%" height="15" fill="rgb(219,18,35)" fg:x="47588" fg:w="786"/><text x="45.5085%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="45.9956%" y="533" width="0.0105%" height="15" fill="rgb(209,169,16)" fg:x="48363" fg:w="11"/><text x="46.2456%" y="543.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (864 samples, 0.82%)</title><rect x="45.2338%" y="805" width="0.8217%" height="15" fill="rgb(245,90,51)" fg:x="47562" fg:w="864"/><text x="45.4838%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (864 samples, 0.82%)</title><rect x="45.2338%" y="789" width="0.8217%" height="15" fill="rgb(220,99,45)" fg:x="47562" fg:w="864"/><text x="45.4838%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (864 samples, 0.82%)</title><rect x="45.2338%" y="773" width="0.8217%" height="15" fill="rgb(249,89,25)" fg:x="47562" fg:w="864"/><text x="45.4838%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (864 samples, 0.82%)</title><rect x="45.2338%" y="757" width="0.8217%" height="15" fill="rgb(239,193,0)" fg:x="47562" fg:w="864"/><text x="45.4838%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (864 samples, 0.82%)</title><rect x="45.2338%" y="741" width="0.8217%" height="15" fill="rgb(231,126,1)" fg:x="47562" fg:w="864"/><text x="45.4838%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (864 samples, 0.82%)</title><rect x="45.2338%" y="725" width="0.8217%" height="15" fill="rgb(243,166,3)" fg:x="47562" fg:w="864"/><text x="45.4838%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (864 samples, 0.82%)</title><rect x="45.2338%" y="709" width="0.8217%" height="15" fill="rgb(223,22,34)" fg:x="47562" fg:w="864"/><text x="45.4838%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (864 samples, 0.82%)</title><rect x="45.2338%" y="693" width="0.8217%" height="15" fill="rgb(251,52,51)" fg:x="47562" fg:w="864"/><text x="45.4838%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (52 samples, 0.05%)</title><rect x="46.0061%" y="677" width="0.0495%" height="15" fill="rgb(221,165,28)" fg:x="48374" fg:w="52"/><text x="46.2561%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.05%)</title><rect x="46.0061%" y="661" width="0.0495%" height="15" fill="rgb(218,121,47)" fg:x="48374" fg:w="52"/><text x="46.2561%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="46.0222%" y="645" width="0.0333%" height="15" fill="rgb(209,120,9)" fg:x="48391" fg:w="35"/><text x="46.2722%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,453 samples, 1.38%)</title><rect x="46.0555%" y="805" width="1.3819%" height="15" fill="rgb(236,68,12)" fg:x="48426" fg:w="1453"/><text x="46.3055%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (24 samples, 0.02%)</title><rect x="47.4441%" y="789" width="0.0228%" height="15" fill="rgb(225,194,26)" fg:x="49886" fg:w="24"/><text x="47.6941%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (37 samples, 0.04%)</title><rect x="47.4374%" y="805" width="0.0352%" height="15" fill="rgb(231,84,39)" fg:x="49879" fg:w="37"/><text x="47.6874%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (18 samples, 0.02%)</title><rect x="47.4726%" y="805" width="0.0171%" height="15" fill="rgb(210,11,45)" fg:x="49916" fg:w="18"/><text x="47.7226%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="47.4726%" y="789" width="0.0171%" height="15" fill="rgb(224,54,52)" fg:x="49916" fg:w="18"/><text x="47.7226%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="47.4783%" y="773" width="0.0114%" height="15" fill="rgb(238,102,14)" fg:x="49922" fg:w="12"/><text x="47.7283%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="47.4783%" y="757" width="0.0114%" height="15" fill="rgb(243,160,52)" fg:x="49922" fg:w="12"/><text x="47.7283%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="47.4983%" y="805" width="0.0200%" height="15" fill="rgb(216,114,19)" fg:x="49943" fg:w="21"/><text x="47.7483%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt; (18 samples, 0.02%)</title><rect x="47.5011%" y="789" width="0.0171%" height="15" fill="rgb(244,166,37)" fg:x="49946" fg:w="18"/><text x="47.7511%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (15 samples, 0.01%)</title><rect x="47.5182%" y="805" width="0.0143%" height="15" fill="rgb(246,29,44)" fg:x="49964" fg:w="15"/><text x="47.7682%" y="815.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (16 samples, 0.02%)</title><rect x="47.5544%" y="789" width="0.0152%" height="15" fill="rgb(215,56,53)" fg:x="50002" fg:w="16"/><text x="47.8044%" y="799.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (24 samples, 0.02%)</title><rect x="47.5696%" y="757" width="0.0228%" height="15" fill="rgb(217,60,2)" fg:x="50018" fg:w="24"/><text x="47.8196%" y="767.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (274 samples, 0.26%)</title><rect x="47.5325%" y="805" width="0.2606%" height="15" fill="rgb(207,26,24)" fg:x="49979" fg:w="274"/><text x="47.7825%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (235 samples, 0.22%)</title><rect x="47.5696%" y="789" width="0.2235%" height="15" fill="rgb(252,210,15)" fg:x="50018" fg:w="235"/><text x="47.8196%" y="799.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (235 samples, 0.22%)</title><rect x="47.5696%" y="773" width="0.2235%" height="15" fill="rgb(253,209,26)" fg:x="50018" fg:w="235"/><text x="47.8196%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (211 samples, 0.20%)</title><rect x="47.5924%" y="757" width="0.2007%" height="15" fill="rgb(238,170,14)" fg:x="50042" fg:w="211"/><text x="47.8424%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (211 samples, 0.20%)</title><rect x="47.5924%" y="741" width="0.2007%" height="15" fill="rgb(216,178,15)" fg:x="50042" fg:w="211"/><text x="47.8424%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (211 samples, 0.20%)</title><rect x="47.5924%" y="725" width="0.2007%" height="15" fill="rgb(250,197,2)" fg:x="50042" fg:w="211"/><text x="47.8424%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (211 samples, 0.20%)</title><rect x="47.5924%" y="709" width="0.2007%" height="15" fill="rgb(212,70,42)" fg:x="50042" fg:w="211"/><text x="47.8424%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (211 samples, 0.20%)</title><rect x="47.5924%" y="693" width="0.2007%" height="15" fill="rgb(227,213,9)" fg:x="50042" fg:w="211"/><text x="47.8424%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (146 samples, 0.14%)</title><rect x="47.6542%" y="677" width="0.1389%" height="15" fill="rgb(245,99,25)" fg:x="50107" fg:w="146"/><text x="47.9042%" y="687.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,659 samples, 8.24%)</title><rect x="39.5770%" y="1141" width="8.2351%" height="15" fill="rgb(250,82,29)" fg:x="41614" fg:w="8659"/><text x="39.8270%" y="1151.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.23%)</title><rect x="39.5798%" y="1125" width="8.2323%" height="15" fill="rgb(241,226,54)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1135.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,656 samples, 8.23%)</title><rect x="39.5798%" y="1109" width="8.2323%" height="15" fill="rgb(221,99,41)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1119.50">async_execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.23%)</title><rect x="39.5798%" y="1093" width="8.2323%" height="15" fill="rgb(213,90,21)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1103.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.23%)</title><rect x="39.5798%" y="1077" width="8.2323%" height="15" fill="rgb(205,208,24)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1087.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,656 samples, 8.23%)</title><rect x="39.5798%" y="1061" width="8.2323%" height="15" fill="rgb(246,31,12)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1071.50">async_execu..</text></g><g><title>async_task::runnable::Runnable::run (8,656 samples, 8.23%)</title><rect x="39.5798%" y="1045" width="8.2323%" height="15" fill="rgb(213,154,6)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1055.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,656 samples, 8.23%)</title><rect x="39.5798%" y="1029" width="8.2323%" height="15" fill="rgb(222,163,29)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1039.50">async_task:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.23%)</title><rect x="39.5798%" y="1013" width="8.2323%" height="15" fill="rgb(227,201,8)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1023.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.23%)</title><rect x="39.5798%" y="997" width="8.2323%" height="15" fill="rgb(233,9,32)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="1007.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,656 samples, 8.23%)</title><rect x="39.5798%" y="981" width="8.2323%" height="15" fill="rgb(217,54,24)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="991.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.23%)</title><rect x="39.5798%" y="965" width="8.2323%" height="15" fill="rgb(235,192,0)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="975.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,656 samples, 8.23%)</title><rect x="39.5798%" y="949" width="8.2323%" height="15" fill="rgb(235,45,9)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="959.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,656 samples, 8.23%)</title><rect x="39.5798%" y="933" width="8.2323%" height="15" fill="rgb(246,42,40)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="943.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,656 samples, 8.23%)</title><rect x="39.5798%" y="917" width="8.2323%" height="15" fill="rgb(248,111,24)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="927.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,656 samples, 8.23%)</title><rect x="39.5798%" y="901" width="8.2323%" height="15" fill="rgb(249,65,22)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="911.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,656 samples, 8.23%)</title><rect x="39.5798%" y="885" width="8.2323%" height="15" fill="rgb(238,111,51)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="895.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.23%)</title><rect x="39.5798%" y="869" width="8.2323%" height="15" fill="rgb(250,118,22)" fg:x="41617" fg:w="8656"/><text x="39.8298%" y="879.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (4,987 samples, 4.74%)</title><rect x="43.0692%" y="853" width="4.7429%" height="15" fill="rgb(234,84,26)" fg:x="45286" fg:w="4987"/><text x="43.3192%" y="863.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,633 samples, 3.46%)</title><rect x="44.3569%" y="837" width="3.4552%" height="15" fill="rgb(243,172,12)" fg:x="46640" fg:w="3633"/><text x="44.6069%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,229 samples, 3.07%)</title><rect x="44.7412%" y="821" width="3.0709%" height="15" fill="rgb(236,150,49)" fg:x="47044" fg:w="3229"/><text x="44.9912%" y="831.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (20 samples, 0.02%)</title><rect x="47.7931%" y="805" width="0.0190%" height="15" fill="rgb(225,197,26)" fg:x="50253" fg:w="20"/><text x="48.0431%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="47.7931%" y="789" width="0.0190%" height="15" fill="rgb(214,17,42)" fg:x="50253" fg:w="20"/><text x="48.0431%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="47.7931%" y="773" width="0.0190%" height="15" fill="rgb(224,165,40)" fg:x="50253" fg:w="20"/><text x="48.0431%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.01%)</title><rect x="47.8007%" y="757" width="0.0114%" height="15" fill="rgb(246,100,4)" fg:x="50261" fg:w="12"/><text x="48.0507%" y="767.50"></text></g><g><title>async_io::driver::block_on (8,662 samples, 8.24%)</title><rect x="39.5760%" y="1157" width="8.2380%" height="15" fill="rgb(222,103,0)" fg:x="41613" fg:w="8662"/><text x="39.8260%" y="1167.50">async_io::d..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (13 samples, 0.01%)</title><rect x="48.4331%" y="709" width="0.0124%" height="15" fill="rgb(227,189,26)" fg:x="50926" fg:w="13"/><text x="48.6831%" y="719.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="48.4531%" y="693" width="0.0105%" height="15" fill="rgb(214,202,17)" fg:x="50947" fg:w="11"/><text x="48.7031%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (74 samples, 0.07%)</title><rect x="48.4331%" y="741" width="0.0704%" height="15" fill="rgb(229,111,3)" fg:x="50926" fg:w="74"/><text x="48.6831%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (74 samples, 0.07%)</title><rect x="48.4331%" y="725" width="0.0704%" height="15" fill="rgb(229,172,15)" fg:x="50926" fg:w="74"/><text x="48.6831%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (61 samples, 0.06%)</title><rect x="48.4455%" y="709" width="0.0580%" height="15" fill="rgb(230,224,35)" fg:x="50939" fg:w="61"/><text x="48.6955%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="48.4636%" y="693" width="0.0399%" height="15" fill="rgb(251,141,6)" fg:x="50958" fg:w="42"/><text x="48.7136%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="48.4636%" y="677" width="0.0399%" height="15" fill="rgb(225,208,6)" fg:x="50958" fg:w="42"/><text x="48.7136%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="48.4636%" y="661" width="0.0399%" height="15" fill="rgb(246,181,16)" fg:x="50958" fg:w="42"/><text x="48.7136%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (362 samples, 0.34%)</title><rect x="48.4198%" y="789" width="0.3443%" height="15" fill="rgb(227,129,36)" fg:x="50912" fg:w="362"/><text x="48.6698%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (362 samples, 0.34%)</title><rect x="48.4198%" y="773" width="0.3443%" height="15" fill="rgb(248,117,24)" fg:x="50912" fg:w="362"/><text x="48.6698%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (353 samples, 0.34%)</title><rect x="48.4284%" y="757" width="0.3357%" height="15" fill="rgb(214,185,35)" fg:x="50921" fg:w="353"/><text x="48.6784%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (260 samples, 0.25%)</title><rect x="48.5168%" y="741" width="0.2473%" height="15" fill="rgb(236,150,34)" fg:x="51014" fg:w="260"/><text x="48.7668%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (260 samples, 0.25%)</title><rect x="48.5168%" y="725" width="0.2473%" height="15" fill="rgb(243,228,27)" fg:x="51014" fg:w="260"/><text x="48.7668%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (381 samples, 0.36%)</title><rect x="48.4037%" y="901" width="0.3623%" height="15" fill="rgb(245,77,44)" fg:x="50895" fg:w="381"/><text x="48.6537%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (381 samples, 0.36%)</title><rect x="48.4037%" y="885" width="0.3623%" height="15" fill="rgb(235,214,42)" fg:x="50895" fg:w="381"/><text x="48.6537%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (381 samples, 0.36%)</title><rect x="48.4037%" y="869" width="0.3623%" height="15" fill="rgb(221,74,3)" fg:x="50895" fg:w="381"/><text x="48.6537%" y="879.50"></text></g><g><title>alloc::alloc::alloc (381 samples, 0.36%)</title><rect x="48.4037%" y="853" width="0.3623%" height="15" fill="rgb(206,121,29)" fg:x="50895" fg:w="381"/><text x="48.6537%" y="863.50"></text></g><g><title>__rg_alloc (381 samples, 0.36%)</title><rect x="48.4037%" y="837" width="0.3623%" height="15" fill="rgb(249,131,53)" fg:x="50895" fg:w="381"/><text x="48.6537%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (381 samples, 0.36%)</title><rect x="48.4037%" y="821" width="0.3623%" height="15" fill="rgb(236,170,29)" fg:x="50895" fg:w="381"/><text x="48.6537%" y="831.50"></text></g><g><title>rust_alloc (375 samples, 0.36%)</title><rect x="48.4094%" y="805" width="0.3566%" height="15" fill="rgb(247,96,15)" fg:x="50901" fg:w="375"/><text x="48.6594%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="48.7784%" y="901" width="0.0133%" height="15" fill="rgb(211,210,7)" fg:x="51289" fg:w="14"/><text x="49.0284%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="48.7784%" y="885" width="0.0133%" height="15" fill="rgb(240,88,50)" fg:x="51289" fg:w="14"/><text x="49.0284%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="48.7784%" y="869" width="0.0133%" height="15" fill="rgb(209,229,26)" fg:x="51289" fg:w="14"/><text x="49.0284%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="48.7784%" y="853" width="0.0133%" height="15" fill="rgb(210,68,23)" fg:x="51289" fg:w="14"/><text x="49.0284%" y="863.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (1,034 samples, 0.98%)</title><rect x="47.8159%" y="917" width="0.9834%" height="15" fill="rgb(229,180,13)" fg:x="50277" fg:w="1034"/><text x="48.0659%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (165 samples, 0.16%)</title><rect x="49.1978%" y="901" width="0.1569%" height="15" fill="rgb(236,53,44)" fg:x="51730" fg:w="165"/><text x="49.4478%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="49.3861%" y="741" width="0.0361%" height="15" fill="rgb(244,214,29)" fg:x="51928" fg:w="38"/><text x="49.6361%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (38 samples, 0.04%)</title><rect x="49.3861%" y="725" width="0.0361%" height="15" fill="rgb(220,75,29)" fg:x="51928" fg:w="38"/><text x="49.6361%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (33 samples, 0.03%)</title><rect x="49.3909%" y="709" width="0.0314%" height="15" fill="rgb(214,183,37)" fg:x="51933" fg:w="33"/><text x="49.6409%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="49.3975%" y="693" width="0.0247%" height="15" fill="rgb(239,117,29)" fg:x="51940" fg:w="26"/><text x="49.6475%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="49.3975%" y="677" width="0.0247%" height="15" fill="rgb(237,171,35)" fg:x="51940" fg:w="26"/><text x="49.6475%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="49.3975%" y="661" width="0.0247%" height="15" fill="rgb(229,178,53)" fg:x="51940" fg:w="26"/><text x="49.6475%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="49.4337%" y="741" width="0.0124%" height="15" fill="rgb(210,102,19)" fg:x="51978" fg:w="13"/><text x="49.6837%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="49.4337%" y="725" width="0.0124%" height="15" fill="rgb(235,127,22)" fg:x="51978" fg:w="13"/><text x="49.6837%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (212 samples, 0.20%)</title><rect x="49.3699%" y="789" width="0.2016%" height="15" fill="rgb(244,31,31)" fg:x="51911" fg:w="212"/><text x="49.6199%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (203 samples, 0.19%)</title><rect x="49.3785%" y="773" width="0.1931%" height="15" fill="rgb(231,43,21)" fg:x="51920" fg:w="203"/><text x="49.6285%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (196 samples, 0.19%)</title><rect x="49.3851%" y="757" width="0.1864%" height="15" fill="rgb(217,131,35)" fg:x="51927" fg:w="196"/><text x="49.6351%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (132 samples, 0.13%)</title><rect x="49.4460%" y="741" width="0.1255%" height="15" fill="rgb(221,149,4)" fg:x="51991" fg:w="132"/><text x="49.6960%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (132 samples, 0.13%)</title><rect x="49.4460%" y="725" width="0.1255%" height="15" fill="rgb(232,170,28)" fg:x="51991" fg:w="132"/><text x="49.6960%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (238 samples, 0.23%)</title><rect x="49.3547%" y="901" width="0.2263%" height="15" fill="rgb(238,56,10)" fg:x="51895" fg:w="238"/><text x="49.6047%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (238 samples, 0.23%)</title><rect x="49.3547%" y="885" width="0.2263%" height="15" fill="rgb(235,196,14)" fg:x="51895" fg:w="238"/><text x="49.6047%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (238 samples, 0.23%)</title><rect x="49.3547%" y="869" width="0.2263%" height="15" fill="rgb(216,45,48)" fg:x="51895" fg:w="238"/><text x="49.6047%" y="879.50"></text></g><g><title>alloc::alloc::alloc (238 samples, 0.23%)</title><rect x="49.3547%" y="853" width="0.2263%" height="15" fill="rgb(238,213,17)" fg:x="51895" fg:w="238"/><text x="49.6047%" y="863.50"></text></g><g><title>__rg_alloc (238 samples, 0.23%)</title><rect x="49.3547%" y="837" width="0.2263%" height="15" fill="rgb(212,13,2)" fg:x="51895" fg:w="238"/><text x="49.6047%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (238 samples, 0.23%)</title><rect x="49.3547%" y="821" width="0.2263%" height="15" fill="rgb(240,114,20)" fg:x="51895" fg:w="238"/><text x="49.6047%" y="831.50"></text></g><g><title>rust_alloc (223 samples, 0.21%)</title><rect x="49.3690%" y="805" width="0.2121%" height="15" fill="rgb(228,41,40)" fg:x="51910" fg:w="223"/><text x="49.6190%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="49.6229%" y="677" width="0.0114%" height="15" fill="rgb(244,132,35)" fg:x="52177" fg:w="12"/><text x="49.8729%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.02%)</title><rect x="49.6220%" y="693" width="0.0152%" height="15" fill="rgb(253,189,4)" fg:x="52176" fg:w="16"/><text x="49.8720%" y="703.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="49.6467%" y="677" width="0.0162%" height="15" fill="rgb(224,37,19)" fg:x="52202" fg:w="17"/><text x="49.8967%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="49.6220%" y="725" width="0.1027%" height="15" fill="rgb(235,223,18)" fg:x="52176" fg:w="108"/><text x="49.8720%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (108 samples, 0.10%)</title><rect x="49.6220%" y="709" width="0.1027%" height="15" fill="rgb(235,163,25)" fg:x="52176" fg:w="108"/><text x="49.8720%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (92 samples, 0.09%)</title><rect x="49.6372%" y="693" width="0.0875%" height="15" fill="rgb(217,145,28)" fg:x="52192" fg:w="92"/><text x="49.8872%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (65 samples, 0.06%)</title><rect x="49.6629%" y="677" width="0.0618%" height="15" fill="rgb(223,223,32)" fg:x="52219" fg:w="65"/><text x="49.9129%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (65 samples, 0.06%)</title><rect x="49.6629%" y="661" width="0.0618%" height="15" fill="rgb(227,189,39)" fg:x="52219" fg:w="65"/><text x="49.9129%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (65 samples, 0.06%)</title><rect x="49.6629%" y="645" width="0.0618%" height="15" fill="rgb(248,10,22)" fg:x="52219" fg:w="65"/><text x="49.9129%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="49.7275%" y="725" width="0.0276%" height="15" fill="rgb(248,46,39)" fg:x="52287" fg:w="29"/><text x="49.9775%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="49.7275%" y="709" width="0.0276%" height="15" fill="rgb(248,113,48)" fg:x="52287" fg:w="29"/><text x="49.9775%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="49.7275%" y="693" width="0.0276%" height="15" fill="rgb(245,16,25)" fg:x="52287" fg:w="29"/><text x="49.9775%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="49.7275%" y="677" width="0.0276%" height="15" fill="rgb(249,152,16)" fg:x="52287" fg:w="29"/><text x="49.9775%" y="687.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (29 samples, 0.03%)</title><rect x="49.7275%" y="661" width="0.0276%" height="15" fill="rgb(250,16,1)" fg:x="52287" fg:w="29"/><text x="49.9775%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="49.7427%" y="645" width="0.0124%" height="15" fill="rgb(249,138,3)" fg:x="52303" fg:w="13"/><text x="49.9927%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="49.7427%" y="629" width="0.0124%" height="15" fill="rgb(227,71,41)" fg:x="52303" fg:w="13"/><text x="49.9927%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (209 samples, 0.20%)</title><rect x="49.6105%" y="773" width="0.1988%" height="15" fill="rgb(209,184,23)" fg:x="52164" fg:w="209"/><text x="49.8605%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (202 samples, 0.19%)</title><rect x="49.6172%" y="757" width="0.1921%" height="15" fill="rgb(223,215,31)" fg:x="52171" fg:w="202"/><text x="49.8672%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (197 samples, 0.19%)</title><rect x="49.6220%" y="741" width="0.1874%" height="15" fill="rgb(210,146,28)" fg:x="52176" fg:w="197"/><text x="49.8720%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (53 samples, 0.05%)</title><rect x="49.7589%" y="725" width="0.0504%" height="15" fill="rgb(209,183,41)" fg:x="52320" fg:w="53"/><text x="50.0089%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (53 samples, 0.05%)</title><rect x="49.7589%" y="709" width="0.0504%" height="15" fill="rgb(209,224,45)" fg:x="52320" fg:w="53"/><text x="50.0089%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (244 samples, 0.23%)</title><rect x="49.5811%" y="901" width="0.2321%" height="15" fill="rgb(224,209,51)" fg:x="52133" fg:w="244"/><text x="49.8311%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (228 samples, 0.22%)</title><rect x="49.5963%" y="885" width="0.2168%" height="15" fill="rgb(223,17,39)" fg:x="52149" fg:w="228"/><text x="49.8463%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (228 samples, 0.22%)</title><rect x="49.5963%" y="869" width="0.2168%" height="15" fill="rgb(234,204,37)" fg:x="52149" fg:w="228"/><text x="49.8463%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (228 samples, 0.22%)</title><rect x="49.5963%" y="853" width="0.2168%" height="15" fill="rgb(236,120,5)" fg:x="52149" fg:w="228"/><text x="49.8463%" y="863.50"></text></g><g><title>alloc::alloc::alloc (227 samples, 0.22%)</title><rect x="49.5972%" y="837" width="0.2159%" height="15" fill="rgb(248,97,27)" fg:x="52150" fg:w="227"/><text x="49.8472%" y="847.50"></text></g><g><title>__rg_alloc (227 samples, 0.22%)</title><rect x="49.5972%" y="821" width="0.2159%" height="15" fill="rgb(240,66,17)" fg:x="52150" fg:w="227"/><text x="49.8472%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (227 samples, 0.22%)</title><rect x="49.5972%" y="805" width="0.2159%" height="15" fill="rgb(210,79,3)" fg:x="52150" fg:w="227"/><text x="49.8472%" y="815.50"></text></g><g><title>rust_alloc (223 samples, 0.21%)</title><rect x="49.6010%" y="789" width="0.2121%" height="15" fill="rgb(214,176,27)" fg:x="52154" fg:w="223"/><text x="49.8510%" y="799.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (20 samples, 0.02%)</title><rect x="49.8141%" y="901" width="0.0190%" height="15" fill="rgb(235,185,3)" fg:x="52378" fg:w="20"/><text x="50.0641%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (20 samples, 0.02%)</title><rect x="49.8141%" y="885" width="0.0190%" height="15" fill="rgb(227,24,12)" fg:x="52378" fg:w="20"/><text x="50.0641%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (20 samples, 0.02%)</title><rect x="49.8141%" y="869" width="0.0190%" height="15" fill="rgb(252,169,48)" fg:x="52378" fg:w="20"/><text x="50.0641%" y="879.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (28 samples, 0.03%)</title><rect x="50.1127%" y="885" width="0.0266%" height="15" fill="rgb(212,65,1)" fg:x="52692" fg:w="28"/><text x="50.3627%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="50.4189%" y="693" width="0.0124%" height="15" fill="rgb(242,39,24)" fg:x="53014" fg:w="13"/><text x="50.6689%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56 samples, 0.05%)</title><rect x="50.3942%" y="741" width="0.0533%" height="15" fill="rgb(249,32,23)" fg:x="52988" fg:w="56"/><text x="50.6442%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (41 samples, 0.04%)</title><rect x="50.4085%" y="725" width="0.0390%" height="15" fill="rgb(251,195,23)" fg:x="53003" fg:w="41"/><text x="50.6585%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.03%)</title><rect x="50.4189%" y="709" width="0.0285%" height="15" fill="rgb(236,174,8)" fg:x="53014" fg:w="30"/><text x="50.6689%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="50.4313%" y="693" width="0.0162%" height="15" fill="rgb(220,197,8)" fg:x="53027" fg:w="17"/><text x="50.6813%" y="703.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (309 samples, 0.29%)</title><rect x="50.1660%" y="837" width="0.2939%" height="15" fill="rgb(240,108,37)" fg:x="52748" fg:w="309"/><text x="50.4160%" y="847.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (268 samples, 0.25%)</title><rect x="50.2050%" y="821" width="0.2549%" height="15" fill="rgb(232,176,24)" fg:x="52789" fg:w="268"/><text x="50.4550%" y="831.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (254 samples, 0.24%)</title><rect x="50.2183%" y="805" width="0.2416%" height="15" fill="rgb(243,35,29)" fg:x="52803" fg:w="254"/><text x="50.4683%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="50.3685%" y="789" width="0.0913%" height="15" fill="rgb(210,37,18)" fg:x="52961" fg:w="96"/><text x="50.6185%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.07%)</title><rect x="50.3942%" y="773" width="0.0656%" height="15" fill="rgb(224,184,40)" fg:x="52988" fg:w="69"/><text x="50.6442%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.07%)</title><rect x="50.3942%" y="757" width="0.0656%" height="15" fill="rgb(236,39,29)" fg:x="52988" fg:w="69"/><text x="50.6442%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="50.4475%" y="741" width="0.0124%" height="15" fill="rgb(232,48,39)" fg:x="53044" fg:w="13"/><text x="50.6975%" y="751.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (374 samples, 0.36%)</title><rect x="50.1660%" y="853" width="0.3557%" height="15" fill="rgb(236,34,42)" fg:x="52748" fg:w="374"/><text x="50.4160%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (65 samples, 0.06%)</title><rect x="50.4598%" y="837" width="0.0618%" height="15" fill="rgb(243,106,37)" fg:x="53057" fg:w="65"/><text x="50.7098%" y="847.50"></text></g><g><title>core::ptr::write (65 samples, 0.06%)</title><rect x="50.4598%" y="821" width="0.0618%" height="15" fill="rgb(218,96,6)" fg:x="53057" fg:w="65"/><text x="50.7098%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.02%)</title><rect x="50.5559%" y="613" width="0.0152%" height="15" fill="rgb(235,130,12)" fg:x="53158" fg:w="16"/><text x="50.8059%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.02%)</title><rect x="50.5559%" y="597" width="0.0152%" height="15" fill="rgb(231,95,0)" fg:x="53158" fg:w="16"/><text x="50.8059%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (14 samples, 0.01%)</title><rect x="50.5578%" y="581" width="0.0133%" height="15" fill="rgb(228,12,23)" fg:x="53160" fg:w="14"/><text x="50.8078%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (24 samples, 0.02%)</title><rect x="50.5559%" y="629" width="0.0228%" height="15" fill="rgb(216,12,1)" fg:x="53158" fg:w="24"/><text x="50.8059%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (34 samples, 0.03%)</title><rect x="50.5483%" y="645" width="0.0323%" height="15" fill="rgb(219,59,3)" fg:x="53150" fg:w="34"/><text x="50.7983%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (20 samples, 0.02%)</title><rect x="50.5892%" y="629" width="0.0190%" height="15" fill="rgb(215,208,46)" fg:x="53193" fg:w="20"/><text x="50.8392%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (156 samples, 0.15%)</title><rect x="50.5483%" y="677" width="0.1484%" height="15" fill="rgb(254,224,29)" fg:x="53150" fg:w="156"/><text x="50.7983%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (156 samples, 0.15%)</title><rect x="50.5483%" y="661" width="0.1484%" height="15" fill="rgb(232,14,29)" fg:x="53150" fg:w="156"/><text x="50.7983%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (122 samples, 0.12%)</title><rect x="50.5806%" y="645" width="0.1160%" height="15" fill="rgb(208,45,52)" fg:x="53184" fg:w="122"/><text x="50.8306%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (93 samples, 0.09%)</title><rect x="50.6082%" y="629" width="0.0884%" height="15" fill="rgb(234,191,28)" fg:x="53213" fg:w="93"/><text x="50.8582%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (93 samples, 0.09%)</title><rect x="50.6082%" y="613" width="0.0884%" height="15" fill="rgb(244,67,43)" fg:x="53213" fg:w="93"/><text x="50.8582%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (93 samples, 0.09%)</title><rect x="50.6082%" y="597" width="0.0884%" height="15" fill="rgb(236,189,24)" fg:x="53213" fg:w="93"/><text x="50.8582%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="50.7004%" y="677" width="0.0228%" height="15" fill="rgb(239,214,33)" fg:x="53310" fg:w="24"/><text x="50.9504%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="50.7014%" y="661" width="0.0219%" height="15" fill="rgb(226,176,41)" fg:x="53311" fg:w="23"/><text x="50.9514%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="50.7014%" y="645" width="0.0219%" height="15" fill="rgb(248,47,8)" fg:x="53311" fg:w="23"/><text x="50.9514%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="50.7014%" y="629" width="0.0219%" height="15" fill="rgb(218,81,44)" fg:x="53311" fg:w="23"/><text x="50.9514%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (23 samples, 0.02%)</title><rect x="50.7014%" y="613" width="0.0219%" height="15" fill="rgb(213,98,6)" fg:x="53311" fg:w="23"/><text x="50.9514%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (655 samples, 0.62%)</title><rect x="50.1564%" y="869" width="0.6229%" height="15" fill="rgb(222,85,22)" fg:x="52738" fg:w="655"/><text x="50.4064%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (271 samples, 0.26%)</title><rect x="50.5217%" y="853" width="0.2577%" height="15" fill="rgb(239,46,39)" fg:x="53122" fg:w="271"/><text x="50.7717%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (271 samples, 0.26%)</title><rect x="50.5217%" y="837" width="0.2577%" height="15" fill="rgb(237,12,29)" fg:x="53122" fg:w="271"/><text x="50.7717%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (271 samples, 0.26%)</title><rect x="50.5217%" y="821" width="0.2577%" height="15" fill="rgb(214,77,8)" fg:x="53122" fg:w="271"/><text x="50.7717%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (271 samples, 0.26%)</title><rect x="50.5217%" y="805" width="0.2577%" height="15" fill="rgb(217,168,37)" fg:x="53122" fg:w="271"/><text x="50.7717%" y="815.50"></text></g><g><title>alloc::alloc::alloc (271 samples, 0.26%)</title><rect x="50.5217%" y="789" width="0.2577%" height="15" fill="rgb(221,217,23)" fg:x="53122" fg:w="271"/><text x="50.7717%" y="799.50"></text></g><g><title>__rg_alloc (271 samples, 0.26%)</title><rect x="50.5217%" y="773" width="0.2577%" height="15" fill="rgb(243,229,36)" fg:x="53122" fg:w="271"/><text x="50.7717%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (271 samples, 0.26%)</title><rect x="50.5217%" y="757" width="0.2577%" height="15" fill="rgb(251,163,40)" fg:x="53122" fg:w="271"/><text x="50.7717%" y="767.50"></text></g><g><title>rust_alloc (271 samples, 0.26%)</title><rect x="50.5217%" y="741" width="0.2577%" height="15" fill="rgb(237,222,12)" fg:x="53122" fg:w="271"/><text x="50.7717%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (263 samples, 0.25%)</title><rect x="50.5293%" y="725" width="0.2501%" height="15" fill="rgb(248,132,6)" fg:x="53130" fg:w="263"/><text x="50.7793%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (263 samples, 0.25%)</title><rect x="50.5293%" y="709" width="0.2501%" height="15" fill="rgb(227,167,50)" fg:x="53130" fg:w="263"/><text x="50.7793%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (255 samples, 0.24%)</title><rect x="50.5369%" y="693" width="0.2425%" height="15" fill="rgb(242,84,37)" fg:x="53138" fg:w="255"/><text x="50.7869%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (58 samples, 0.06%)</title><rect x="50.7242%" y="677" width="0.0552%" height="15" fill="rgb(212,4,50)" fg:x="53335" fg:w="58"/><text x="50.9742%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (58 samples, 0.06%)</title><rect x="50.7242%" y="661" width="0.0552%" height="15" fill="rgb(230,228,32)" fg:x="53335" fg:w="58"/><text x="50.9742%" y="671.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (675 samples, 0.64%)</title><rect x="50.1393%" y="885" width="0.6420%" height="15" fill="rgb(248,217,23)" fg:x="52720" fg:w="675"/><text x="50.3893%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,448 samples, 3.28%)</title><rect x="47.8159%" y="981" width="3.2792%" height="15" fill="rgb(238,197,32)" fg:x="50277" fg:w="3448"/><text x="48.0659%" y="991.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,448 samples, 3.28%)</title><rect x="47.8159%" y="965" width="3.2792%" height="15" fill="rgb(236,106,1)" fg:x="50277" fg:w="3448"/><text x="48.0659%" y="975.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,448 samples, 3.28%)</title><rect x="47.8159%" y="949" width="3.2792%" height="15" fill="rgb(219,228,13)" fg:x="50277" fg:w="3448"/><text x="48.0659%" y="959.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,448 samples, 3.28%)</title><rect x="47.8159%" y="933" width="3.2792%" height="15" fill="rgb(238,30,35)" fg:x="50277" fg:w="3448"/><text x="48.0659%" y="943.50">tre..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,414 samples, 2.30%)</title><rect x="48.7993%" y="917" width="2.2958%" height="15" fill="rgb(236,70,23)" fg:x="51311" fg:w="2414"/><text x="49.0493%" y="927.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,327 samples, 1.26%)</title><rect x="49.8331%" y="901" width="1.2620%" height="15" fill="rgb(249,104,48)" fg:x="52398" fg:w="1327"/><text x="50.0831%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (329 samples, 0.31%)</title><rect x="50.7822%" y="885" width="0.3129%" height="15" fill="rgb(254,117,50)" fg:x="53396" fg:w="329"/><text x="51.0322%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="51.1997%" y="869" width="0.0200%" height="15" fill="rgb(223,152,4)" fg:x="53835" fg:w="21"/><text x="51.4497%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.02%)</title><rect x="51.2197%" y="869" width="0.0152%" height="15" fill="rgb(245,6,2)" fg:x="53856" fg:w="16"/><text x="51.4697%" y="879.50"></text></g><g><title>core::mem::replace (16 samples, 0.02%)</title><rect x="51.2197%" y="853" width="0.0152%" height="15" fill="rgb(249,150,24)" fg:x="53856" fg:w="16"/><text x="51.4697%" y="863.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="51.2197%" y="837" width="0.0152%" height="15" fill="rgb(228,185,42)" fg:x="53856" fg:w="16"/><text x="51.4697%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (169 samples, 0.16%)</title><rect x="51.3025%" y="853" width="0.1607%" height="15" fill="rgb(226,39,33)" fg:x="53943" fg:w="169"/><text x="51.5525%" y="863.50"></text></g><g><title>core::mem::replace (169 samples, 0.16%)</title><rect x="51.3025%" y="837" width="0.1607%" height="15" fill="rgb(221,166,19)" fg:x="53943" fg:w="169"/><text x="51.5525%" y="847.50"></text></g><g><title>core::ptr::read (167 samples, 0.16%)</title><rect x="51.3044%" y="821" width="0.1588%" height="15" fill="rgb(209,109,2)" fg:x="53945" fg:w="167"/><text x="51.5544%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (286 samples, 0.27%)</title><rect x="51.2349%" y="869" width="0.2720%" height="15" fill="rgb(252,216,26)" fg:x="53872" fg:w="286"/><text x="51.4849%" y="879.50"></text></g><g><title>core::mem::drop (46 samples, 0.04%)</title><rect x="51.4632%" y="853" width="0.0437%" height="15" fill="rgb(227,173,36)" fg:x="54112" fg:w="46"/><text x="51.7132%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (46 samples, 0.04%)</title><rect x="51.4632%" y="837" width="0.0437%" height="15" fill="rgb(209,90,7)" fg:x="54112" fg:w="46"/><text x="51.7132%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="51.5069%" y="853" width="0.0133%" height="15" fill="rgb(250,194,11)" fg:x="54158" fg:w="14"/><text x="51.7569%" y="863.50"></text></g><g><title>std::sync::poison::Flag::done (13 samples, 0.01%)</title><rect x="51.5279%" y="821" width="0.0124%" height="15" fill="rgb(220,72,50)" fg:x="54180" fg:w="13"/><text x="51.7779%" y="831.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="51.5279%" y="805" width="0.0124%" height="15" fill="rgb(222,106,48)" fg:x="54180" fg:w="13"/><text x="51.7779%" y="815.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="51.5279%" y="789" width="0.0124%" height="15" fill="rgb(216,220,45)" fg:x="54180" fg:w="13"/><text x="51.7779%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="51.5279%" y="773" width="0.0124%" height="15" fill="rgb(234,112,18)" fg:x="54180" fg:w="13"/><text x="51.7779%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="51.5402%" y="805" width="0.0133%" height="15" fill="rgb(206,179,9)" fg:x="54193" fg:w="14"/><text x="51.7902%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (308 samples, 0.29%)</title><rect x="51.5545%" y="789" width="0.2929%" height="15" fill="rgb(215,115,40)" fg:x="54208" fg:w="308"/><text x="51.8045%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (376 samples, 0.36%)</title><rect x="51.5069%" y="869" width="0.3576%" height="15" fill="rgb(222,69,34)" fg:x="54158" fg:w="376"/><text x="51.7569%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (362 samples, 0.34%)</title><rect x="51.5203%" y="853" width="0.3443%" height="15" fill="rgb(209,161,10)" fg:x="54172" fg:w="362"/><text x="51.7703%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (362 samples, 0.34%)</title><rect x="51.5203%" y="837" width="0.3443%" height="15" fill="rgb(217,6,38)" fg:x="54172" fg:w="362"/><text x="51.7703%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (341 samples, 0.32%)</title><rect x="51.5402%" y="821" width="0.3243%" height="15" fill="rgb(229,229,48)" fg:x="54193" fg:w="341"/><text x="51.7902%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (326 samples, 0.31%)</title><rect x="51.5545%" y="805" width="0.3100%" height="15" fill="rgb(225,21,28)" fg:x="54208" fg:w="326"/><text x="51.8045%" y="815.50"></text></g><g><title>___pthread_mutex_unlock (18 samples, 0.02%)</title><rect x="51.8474%" y="789" width="0.0171%" height="15" fill="rgb(206,33,13)" fg:x="54516" fg:w="18"/><text x="52.0974%" y="799.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="51.8807%" y="821" width="0.0162%" height="15" fill="rgb(242,178,17)" fg:x="54551" fg:w="17"/><text x="52.1307%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (45 samples, 0.04%)</title><rect x="51.8655%" y="869" width="0.0428%" height="15" fill="rgb(220,162,5)" fg:x="54535" fg:w="45"/><text x="52.1155%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (45 samples, 0.04%)</title><rect x="51.8655%" y="853" width="0.0428%" height="15" fill="rgb(210,33,43)" fg:x="54535" fg:w="45"/><text x="52.1155%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.03%)</title><rect x="51.8807%" y="837" width="0.0276%" height="15" fill="rgb(216,116,54)" fg:x="54551" fg:w="29"/><text x="52.1307%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="51.8969%" y="821" width="0.0114%" height="15" fill="rgb(249,92,24)" fg:x="54568" fg:w="12"/><text x="52.1469%" y="831.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="51.9178%" y="837" width="0.0181%" height="15" fill="rgb(231,189,14)" fg:x="54590" fg:w="19"/><text x="52.1678%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (19 samples, 0.02%)</title><rect x="51.9178%" y="821" width="0.0181%" height="15" fill="rgb(230,8,41)" fg:x="54590" fg:w="19"/><text x="52.1678%" y="831.50"></text></g><g><title>std::thread::panicking (19 samples, 0.02%)</title><rect x="51.9178%" y="805" width="0.0181%" height="15" fill="rgb(249,7,27)" fg:x="54590" fg:w="19"/><text x="52.1678%" y="815.50"></text></g><g><title>std::panicking::panicking (19 samples, 0.02%)</title><rect x="51.9178%" y="789" width="0.0181%" height="15" fill="rgb(232,86,5)" fg:x="54590" fg:w="19"/><text x="52.1678%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (19 samples, 0.02%)</title><rect x="51.9178%" y="773" width="0.0181%" height="15" fill="rgb(224,175,18)" fg:x="54590" fg:w="19"/><text x="52.1678%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.02%)</title><rect x="51.9178%" y="757" width="0.0181%" height="15" fill="rgb(220,129,12)" fg:x="54590" fg:w="19"/><text x="52.1678%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.02%)</title><rect x="51.9178%" y="741" width="0.0181%" height="15" fill="rgb(210,19,36)" fg:x="54590" fg:w="19"/><text x="52.1678%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,896 samples, 1.80%)</title><rect x="51.1180%" y="885" width="1.8032%" height="15" fill="rgb(219,96,14)" fg:x="53749" fg:w="1896"/><text x="51.3680%" y="895.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,065 samples, 1.01%)</title><rect x="51.9083%" y="869" width="1.0129%" height="15" fill="rgb(249,106,1)" fg:x="54580" fg:w="1065"/><text x="52.1583%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,055 samples, 1.00%)</title><rect x="51.9178%" y="853" width="1.0034%" height="15" fill="rgb(249,155,20)" fg:x="54590" fg:w="1055"/><text x="52.1678%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,036 samples, 0.99%)</title><rect x="51.9359%" y="837" width="0.9853%" height="15" fill="rgb(244,168,9)" fg:x="54609" fg:w="1036"/><text x="52.1859%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (999 samples, 0.95%)</title><rect x="51.9711%" y="821" width="0.9501%" height="15" fill="rgb(216,23,50)" fg:x="54646" fg:w="999"/><text x="52.2211%" y="831.50"></text></g><g><title>___pthread_mutex_lock (999 samples, 0.95%)</title><rect x="51.9711%" y="805" width="0.9501%" height="15" fill="rgb(224,219,20)" fg:x="54646" fg:w="999"/><text x="52.2211%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1157" width="5.1252%" height="15" fill="rgb(222,156,15)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1167.50">async_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1141" width="5.1252%" height="15" fill="rgb(231,97,17)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1151.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1125" width="5.1252%" height="15" fill="rgb(218,70,48)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1135.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1109" width="5.1252%" height="15" fill="rgb(212,196,52)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1119.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1093" width="5.1252%" height="15" fill="rgb(243,203,18)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1103.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1077" width="5.1252%" height="15" fill="rgb(252,125,41)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1087.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1061" width="5.1252%" height="15" fill="rgb(223,180,33)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1071.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1045" width="5.1252%" height="15" fill="rgb(254,159,46)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1055.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1029" width="5.1252%" height="15" fill="rgb(254,38,10)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1039.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,389 samples, 5.13%)</title><rect x="47.8159%" y="1013" width="5.1252%" height="15" fill="rgb(208,217,32)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1023.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,389 samples, 5.13%)</title><rect x="47.8159%" y="997" width="5.1252%" height="15" fill="rgb(221,120,13)" fg:x="50277" fg:w="5389"/><text x="48.0659%" y="1007.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,941 samples, 1.85%)</title><rect x="51.0951%" y="981" width="1.8460%" height="15" fill="rgb(246,54,52)" fg:x="53725" fg:w="1941"/><text x="51.3451%" y="991.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,941 samples, 1.85%)</title><rect x="51.0951%" y="965" width="1.8460%" height="15" fill="rgb(242,34,25)" fg:x="53725" fg:w="1941"/><text x="51.3451%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,941 samples, 1.85%)</title><rect x="51.0951%" y="949" width="1.8460%" height="15" fill="rgb(247,209,9)" fg:x="53725" fg:w="1941"/><text x="51.3451%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,941 samples, 1.85%)</title><rect x="51.0951%" y="933" width="1.8460%" height="15" fill="rgb(228,71,26)" fg:x="53725" fg:w="1941"/><text x="51.3451%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,941 samples, 1.85%)</title><rect x="51.0951%" y="917" width="1.8460%" height="15" fill="rgb(222,145,49)" fg:x="53725" fg:w="1941"/><text x="51.3451%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,941 samples, 1.85%)</title><rect x="51.0951%" y="901" width="1.8460%" height="15" fill="rgb(218,121,17)" fg:x="53725" fg:w="1941"/><text x="51.3451%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (21 samples, 0.02%)</title><rect x="52.9211%" y="885" width="0.0200%" height="15" fill="rgb(244,50,7)" fg:x="55645" fg:w="21"/><text x="53.1711%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (32 samples, 0.03%)</title><rect x="52.9459%" y="1157" width="0.0304%" height="15" fill="rgb(246,229,37)" fg:x="55671" fg:w="32"/><text x="53.1959%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (16 samples, 0.02%)</title><rect x="52.9763%" y="1157" width="0.0152%" height="15" fill="rgb(225,18,5)" fg:x="55703" fg:w="16"/><text x="53.2263%" y="1167.50"></text></g><g><title>aligned_size (16 samples, 0.02%)</title><rect x="53.0163%" y="293" width="0.0152%" height="15" fill="rgb(213,204,8)" fg:x="55745" fg:w="16"/><text x="53.2663%" y="303.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="53.0315%" y="293" width="0.0114%" height="15" fill="rgb(238,103,6)" fg:x="55761" fg:w="12"/><text x="53.2815%" y="303.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="53.0552%" y="277" width="0.0133%" height="15" fill="rgb(222,25,35)" fg:x="55786" fg:w="14"/><text x="53.3052%" y="287.50"></text></g><g><title>sizeclass_to_size (18 samples, 0.02%)</title><rect x="53.0724%" y="213" width="0.0171%" height="15" fill="rgb(213,203,35)" fg:x="55804" fg:w="18"/><text x="53.3224%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (18 samples, 0.02%)</title><rect x="53.0724%" y="197" width="0.0171%" height="15" fill="rgb(221,79,53)" fg:x="55804" fg:w="18"/><text x="53.3224%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.02%)</title><rect x="53.1665%" y="181" width="0.0152%" height="15" fill="rgb(243,200,35)" fg:x="55903" fg:w="16"/><text x="53.4165%" y="191.50"></text></g><g><title> (16 samples, 0.02%)</title><rect x="53.1665%" y="165" width="0.0152%" height="15" fill="rgb(248,60,25)" fg:x="55903" fg:w="16"/><text x="53.4165%" y="175.50"></text></g><g><title>snmalloc::Remote::set_info (26 samples, 0.02%)</title><rect x="53.1817%" y="181" width="0.0247%" height="15" fill="rgb(227,53,46)" fg:x="55919" fg:w="26"/><text x="53.4317%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (128 samples, 0.12%)</title><rect x="53.0990%" y="213" width="0.1217%" height="15" fill="rgb(216,120,32)" fg:x="55832" fg:w="128"/><text x="53.3490%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (103 samples, 0.10%)</title><rect x="53.1228%" y="197" width="0.0980%" height="15" fill="rgb(220,134,1)" fg:x="55857" fg:w="103"/><text x="53.3728%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (15 samples, 0.01%)</title><rect x="53.2065%" y="181" width="0.0143%" height="15" fill="rgb(237,168,5)" fg:x="55945" fg:w="15"/><text x="53.4565%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (170 samples, 0.16%)</title><rect x="53.0686%" y="245" width="0.1617%" height="15" fill="rgb(231,100,33)" fg:x="55800" fg:w="170"/><text x="53.3186%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (170 samples, 0.16%)</title><rect x="53.0686%" y="229" width="0.1617%" height="15" fill="rgb(236,177,47)" fg:x="55800" fg:w="170"/><text x="53.3186%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (182 samples, 0.17%)</title><rect x="53.0686%" y="277" width="0.1731%" height="15" fill="rgb(235,7,49)" fg:x="55800" fg:w="182"/><text x="53.3186%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (182 samples, 0.17%)</title><rect x="53.0686%" y="261" width="0.1731%" height="15" fill="rgb(232,119,22)" fg:x="55800" fg:w="182"/><text x="53.3186%" y="271.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="53.2302%" y="245" width="0.0114%" height="15" fill="rgb(254,73,53)" fg:x="55970" fg:w="12"/><text x="53.4802%" y="255.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="53.2302%" y="229" width="0.0114%" height="15" fill="rgb(251,35,20)" fg:x="55970" fg:w="12"/><text x="53.4802%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="53.2302%" y="213" width="0.0114%" height="15" fill="rgb(241,119,20)" fg:x="55970" fg:w="12"/><text x="53.4802%" y="223.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="53.2302%" y="197" width="0.0114%" height="15" fill="rgb(207,102,14)" fg:x="55970" fg:w="12"/><text x="53.4802%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (219 samples, 0.21%)</title><rect x="53.0429%" y="293" width="0.2083%" height="15" fill="rgb(248,201,50)" fg:x="55773" fg:w="219"/><text x="53.2929%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (270 samples, 0.26%)</title><rect x="53.0058%" y="373" width="0.2568%" height="15" fill="rgb(222,185,44)" fg:x="55734" fg:w="270"/><text x="53.2558%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (270 samples, 0.26%)</title><rect x="53.0058%" y="357" width="0.2568%" height="15" fill="rgb(218,107,18)" fg:x="55734" fg:w="270"/><text x="53.2558%" y="367.50"></text></g><g><title>__rg_dealloc (270 samples, 0.26%)</title><rect x="53.0058%" y="341" width="0.2568%" height="15" fill="rgb(237,177,39)" fg:x="55734" fg:w="270"/><text x="53.2558%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (270 samples, 0.26%)</title><rect x="53.0058%" y="325" width="0.2568%" height="15" fill="rgb(246,69,6)" fg:x="55734" fg:w="270"/><text x="53.2558%" y="335.50"></text></g><g><title>rust_dealloc (260 samples, 0.25%)</title><rect x="53.0153%" y="309" width="0.2473%" height="15" fill="rgb(234,208,37)" fg:x="55744" fg:w="260"/><text x="53.2653%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="53.2512%" y="293" width="0.0114%" height="15" fill="rgb(225,4,6)" fg:x="55992" fg:w="12"/><text x="53.5012%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (293 samples, 0.28%)</title><rect x="53.0010%" y="437" width="0.2787%" height="15" fill="rgb(233,45,0)" fg:x="55729" fg:w="293"/><text x="53.2510%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (293 samples, 0.28%)</title><rect x="53.0010%" y="421" width="0.2787%" height="15" fill="rgb(226,136,5)" fg:x="55729" fg:w="293"/><text x="53.2510%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (293 samples, 0.28%)</title><rect x="53.0010%" y="405" width="0.2787%" height="15" fill="rgb(211,91,47)" fg:x="55729" fg:w="293"/><text x="53.2510%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (293 samples, 0.28%)</title><rect x="53.0010%" y="389" width="0.2787%" height="15" fill="rgb(242,88,51)" fg:x="55729" fg:w="293"/><text x="53.2510%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.02%)</title><rect x="53.2626%" y="373" width="0.0171%" height="15" fill="rgb(230,91,28)" fg:x="56004" fg:w="18"/><text x="53.5126%" y="383.50"></text></g><g><title>size_to_sizeclass (38 samples, 0.04%)</title><rect x="53.9597%" y="229" width="0.0361%" height="15" fill="rgb(254,186,29)" fg:x="56737" fg:w="38"/><text x="54.2097%" y="239.50"></text></g><g><title>rust_dealloc (49 samples, 0.05%)</title><rect x="53.9958%" y="165" width="0.0466%" height="15" fill="rgb(238,6,4)" fg:x="56775" fg:w="49"/><text x="54.2458%" y="175.50"></text></g><g><title>sizeclass_to_size (13 samples, 0.01%)</title><rect x="54.0424%" y="165" width="0.0124%" height="15" fill="rgb(221,151,16)" fg:x="56824" fg:w="13"/><text x="54.2924%" y="175.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (13 samples, 0.01%)</title><rect x="54.0424%" y="149" width="0.0124%" height="15" fill="rgb(251,143,52)" fg:x="56824" fg:w="13"/><text x="54.2924%" y="159.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (23 samples, 0.02%)</title><rect x="54.1451%" y="133" width="0.0219%" height="15" fill="rgb(206,90,15)" fg:x="56932" fg:w="23"/><text x="54.3951%" y="143.50"></text></g><g><title> (23 samples, 0.02%)</title><rect x="54.1451%" y="117" width="0.0219%" height="15" fill="rgb(218,35,8)" fg:x="56932" fg:w="23"/><text x="54.3951%" y="127.50"></text></g><g><title>snmalloc::Remote::set_info (12 samples, 0.01%)</title><rect x="54.1670%" y="133" width="0.0114%" height="15" fill="rgb(239,215,6)" fg:x="56955" fg:w="12"/><text x="54.4170%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (136 samples, 0.13%)</title><rect x="54.0558%" y="165" width="0.1293%" height="15" fill="rgb(245,116,39)" fg:x="56838" fg:w="136"/><text x="54.3058%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (119 samples, 0.11%)</title><rect x="54.0719%" y="149" width="0.1132%" height="15" fill="rgb(242,65,28)" fg:x="56855" fg:w="119"/><text x="54.3219%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (212 samples, 0.20%)</title><rect x="53.9958%" y="197" width="0.2016%" height="15" fill="rgb(252,132,53)" fg:x="56775" fg:w="212"/><text x="54.2458%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (212 samples, 0.20%)</title><rect x="53.9958%" y="181" width="0.2016%" height="15" fill="rgb(224,159,50)" fg:x="56775" fg:w="212"/><text x="54.2458%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="54.1860%" y="165" width="0.0114%" height="15" fill="rgb(224,93,4)" fg:x="56975" fg:w="12"/><text x="54.4360%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (213 samples, 0.20%)</title><rect x="53.9958%" y="229" width="0.2026%" height="15" fill="rgb(208,81,34)" fg:x="56775" fg:w="213"/><text x="54.2458%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (213 samples, 0.20%)</title><rect x="53.9958%" y="213" width="0.2026%" height="15" fill="rgb(233,92,54)" fg:x="56775" fg:w="213"/><text x="54.2458%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (259 samples, 0.25%)</title><rect x="53.9530%" y="245" width="0.2463%" height="15" fill="rgb(237,21,14)" fg:x="56730" fg:w="259"/><text x="54.2030%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (283 samples, 0.27%)</title><rect x="53.9407%" y="277" width="0.2691%" height="15" fill="rgb(249,128,51)" fg:x="56717" fg:w="283"/><text x="54.1907%" y="287.50"></text></g><g><title>rust_dealloc (283 samples, 0.27%)</title><rect x="53.9407%" y="261" width="0.2691%" height="15" fill="rgb(223,129,24)" fg:x="56717" fg:w="283"/><text x="54.1907%" y="271.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="54.1994%" y="245" width="0.0105%" height="15" fill="rgb(231,168,25)" fg:x="56989" fg:w="11"/><text x="54.4494%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (297 samples, 0.28%)</title><rect x="53.9407%" y="325" width="0.2825%" height="15" fill="rgb(224,39,20)" fg:x="56717" fg:w="297"/><text x="54.1907%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (297 samples, 0.28%)</title><rect x="53.9407%" y="309" width="0.2825%" height="15" fill="rgb(225,152,53)" fg:x="56717" fg:w="297"/><text x="54.1907%" y="319.50"></text></g><g><title>__rg_dealloc (297 samples, 0.28%)</title><rect x="53.9407%" y="293" width="0.2825%" height="15" fill="rgb(252,17,24)" fg:x="56717" fg:w="297"/><text x="54.1907%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (14 samples, 0.01%)</title><rect x="54.2098%" y="277" width="0.0133%" height="15" fill="rgb(250,114,30)" fg:x="57000" fg:w="14"/><text x="54.4598%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,008 samples, 0.96%)</title><rect x="53.2797%" y="421" width="0.9587%" height="15" fill="rgb(229,5,4)" fg:x="56022" fg:w="1008"/><text x="53.5297%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1,008 samples, 0.96%)</title><rect x="53.2797%" y="405" width="0.9587%" height="15" fill="rgb(225,176,49)" fg:x="56022" fg:w="1008"/><text x="53.5297%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (994 samples, 0.95%)</title><rect x="53.2930%" y="389" width="0.9453%" height="15" fill="rgb(224,221,49)" fg:x="56036" fg:w="994"/><text x="53.5430%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (994 samples, 0.95%)</title><rect x="53.2930%" y="373" width="0.9453%" height="15" fill="rgb(253,169,27)" fg:x="56036" fg:w="994"/><text x="53.5430%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (994 samples, 0.95%)</title><rect x="53.2930%" y="357" width="0.9453%" height="15" fill="rgb(211,206,16)" fg:x="56036" fg:w="994"/><text x="53.5430%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (994 samples, 0.95%)</title><rect x="53.2930%" y="341" width="0.9453%" height="15" fill="rgb(244,87,35)" fg:x="56036" fg:w="994"/><text x="53.5430%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.02%)</title><rect x="54.2231%" y="325" width="0.0152%" height="15" fill="rgb(246,28,10)" fg:x="57014" fg:w="16"/><text x="54.4731%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,324 samples, 1.26%)</title><rect x="52.9915%" y="453" width="1.2592%" height="15" fill="rgb(229,12,44)" fg:x="55719" fg:w="1324"/><text x="53.2415%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1,021 samples, 0.97%)</title><rect x="53.2797%" y="437" width="0.9710%" height="15" fill="rgb(210,145,37)" fg:x="56022" fg:w="1021"/><text x="53.5297%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,325 samples, 1.26%)</title><rect x="52.9915%" y="469" width="1.2601%" height="15" fill="rgb(227,112,52)" fg:x="55719" fg:w="1325"/><text x="53.2415%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (41 samples, 0.04%)</title><rect x="54.2517%" y="469" width="0.0390%" height="15" fill="rgb(238,155,34)" fg:x="57044" fg:w="41"/><text x="54.5017%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (41 samples, 0.04%)</title><rect x="54.2517%" y="453" width="0.0390%" height="15" fill="rgb(239,226,36)" fg:x="57044" fg:w="41"/><text x="54.5017%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="54.2517%" y="437" width="0.0390%" height="15" fill="rgb(230,16,23)" fg:x="57044" fg:w="41"/><text x="54.5017%" y="447.50"></text></g><g><title>core::mem::drop (41 samples, 0.04%)</title><rect x="54.2517%" y="421" width="0.0390%" height="15" fill="rgb(236,171,36)" fg:x="57044" fg:w="41"/><text x="54.5017%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (41 samples, 0.04%)</title><rect x="54.2517%" y="405" width="0.0390%" height="15" fill="rgb(221,22,14)" fg:x="57044" fg:w="41"/><text x="54.5017%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="54.2517%" y="389" width="0.0390%" height="15" fill="rgb(242,43,11)" fg:x="57044" fg:w="41"/><text x="54.5017%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (41 samples, 0.04%)</title><rect x="54.2517%" y="373" width="0.0390%" height="15" fill="rgb(232,69,23)" fg:x="57044" fg:w="41"/><text x="54.5017%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (20 samples, 0.02%)</title><rect x="54.2716%" y="357" width="0.0190%" height="15" fill="rgb(216,180,54)" fg:x="57065" fg:w="20"/><text x="54.5216%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (20 samples, 0.02%)</title><rect x="54.2716%" y="341" width="0.0190%" height="15" fill="rgb(216,5,24)" fg:x="57065" fg:w="20"/><text x="54.5216%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (103 samples, 0.10%)</title><rect x="54.2926%" y="437" width="0.0980%" height="15" fill="rgb(225,89,9)" fg:x="57087" fg:w="103"/><text x="54.5426%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="54.3772%" y="421" width="0.0133%" height="15" fill="rgb(243,75,33)" fg:x="57176" fg:w="14"/><text x="54.6272%" y="431.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="54.3791%" y="405" width="0.0114%" height="15" fill="rgb(247,141,45)" fg:x="57178" fg:w="12"/><text x="54.6291%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="54.3791%" y="389" width="0.0114%" height="15" fill="rgb(232,177,36)" fg:x="57178" fg:w="12"/><text x="54.6291%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="54.3791%" y="373" width="0.0114%" height="15" fill="rgb(219,125,36)" fg:x="57178" fg:w="12"/><text x="54.6291%" y="383.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="54.3791%" y="357" width="0.0114%" height="15" fill="rgb(227,94,9)" fg:x="57178" fg:w="12"/><text x="54.6291%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="54.3791%" y="341" width="0.0114%" height="15" fill="rgb(240,34,52)" fg:x="57178" fg:w="12"/><text x="54.6291%" y="351.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,473 samples, 1.40%)</title><rect x="52.9915%" y="549" width="1.4009%" height="15" fill="rgb(216,45,12)" fg:x="55719" fg:w="1473"/><text x="53.2415%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,473 samples, 1.40%)</title><rect x="52.9915%" y="533" width="1.4009%" height="15" fill="rgb(246,21,19)" fg:x="55719" fg:w="1473"/><text x="53.2415%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,473 samples, 1.40%)</title><rect x="52.9915%" y="517" width="1.4009%" height="15" fill="rgb(213,98,42)" fg:x="55719" fg:w="1473"/><text x="53.2415%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,473 samples, 1.40%)</title><rect x="52.9915%" y="501" width="1.4009%" height="15" fill="rgb(250,136,47)" fg:x="55719" fg:w="1473"/><text x="53.2415%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (1,473 samples, 1.40%)</title><rect x="52.9915%" y="485" width="1.4009%" height="15" fill="rgb(251,124,27)" fg:x="55719" fg:w="1473"/><text x="53.2415%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (107 samples, 0.10%)</title><rect x="54.2907%" y="469" width="0.1018%" height="15" fill="rgb(229,180,14)" fg:x="57085" fg:w="107"/><text x="54.5407%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (105 samples, 0.10%)</title><rect x="54.2926%" y="453" width="0.0999%" height="15" fill="rgb(245,216,25)" fg:x="57087" fg:w="105"/><text x="54.5426%" y="463.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (33 samples, 0.03%)</title><rect x="54.3924%" y="549" width="0.0314%" height="15" fill="rgb(251,43,5)" fg:x="57192" fg:w="33"/><text x="54.6424%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (294 samples, 0.28%)</title><rect x="54.5046%" y="517" width="0.2796%" height="15" fill="rgb(250,128,24)" fg:x="57310" fg:w="294"/><text x="54.7546%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (150 samples, 0.14%)</title><rect x="54.8080%" y="501" width="0.1427%" height="15" fill="rgb(217,117,27)" fg:x="57629" fg:w="150"/><text x="55.0580%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::control_plane::{{closure}} (351 samples, 0.33%)</title><rect x="54.7843%" y="517" width="0.3338%" height="15" fill="rgb(245,147,4)" fg:x="57604" fg:w="351"/><text x="55.0343%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::needs_control_plane_msg (176 samples, 0.17%)</title><rect x="54.9507%" y="501" width="0.1674%" height="15" fill="rgb(242,201,35)" fg:x="57779" fg:w="176"/><text x="55.2007%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (162 samples, 0.15%)</title><rect x="54.9640%" y="485" width="0.1541%" height="15" fill="rgb(218,181,1)" fg:x="57793" fg:w="162"/><text x="55.2140%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (162 samples, 0.15%)</title><rect x="54.9640%" y="469" width="0.1541%" height="15" fill="rgb(222,6,29)" fg:x="57793" fg:w="162"/><text x="55.2140%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (107 samples, 0.10%)</title><rect x="55.0163%" y="453" width="0.1018%" height="15" fill="rgb(208,186,3)" fg:x="57848" fg:w="107"/><text x="55.2663%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (93 samples, 0.09%)</title><rect x="55.0296%" y="437" width="0.0884%" height="15" fill="rgb(216,36,26)" fg:x="57862" fg:w="93"/><text x="55.2796%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (93 samples, 0.09%)</title><rect x="55.0296%" y="421" width="0.0884%" height="15" fill="rgb(248,201,23)" fg:x="57862" fg:w="93"/><text x="55.2796%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="56.0653%" y="501" width="0.0124%" height="15" fill="rgb(251,170,31)" fg:x="58951" fg:w="13"/><text x="56.3153%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="56.0653%" y="485" width="0.0124%" height="15" fill="rgb(207,110,25)" fg:x="58951" fg:w="13"/><text x="56.3153%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="56.0672%" y="469" width="0.0105%" height="15" fill="rgb(250,54,15)" fg:x="58953" fg:w="11"/><text x="56.3172%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (453 samples, 0.43%)</title><rect x="56.0853%" y="501" width="0.4308%" height="15" fill="rgb(227,68,33)" fg:x="58972" fg:w="453"/><text x="56.3353%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (29 samples, 0.03%)</title><rect x="56.5304%" y="437" width="0.0276%" height="15" fill="rgb(238,34,41)" fg:x="59440" fg:w="29"/><text x="56.7804%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="56.5427%" y="421" width="0.0152%" height="15" fill="rgb(220,11,15)" fg:x="59453" fg:w="16"/><text x="56.7927%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="56.5427%" y="405" width="0.0152%" height="15" fill="rgb(246,111,35)" fg:x="59453" fg:w="16"/><text x="56.7927%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="56.5427%" y="389" width="0.0152%" height="15" fill="rgb(209,88,53)" fg:x="59453" fg:w="16"/><text x="56.7927%" y="399.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="56.5427%" y="373" width="0.0152%" height="15" fill="rgb(231,185,47)" fg:x="59453" fg:w="16"/><text x="56.7927%" y="383.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="56.5427%" y="357" width="0.0152%" height="15" fill="rgb(233,154,1)" fg:x="59453" fg:w="16"/><text x="56.7927%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="56.5427%" y="341" width="0.0152%" height="15" fill="rgb(225,15,46)" fg:x="59453" fg:w="16"/><text x="56.7927%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (45 samples, 0.04%)</title><rect x="56.5247%" y="501" width="0.0428%" height="15" fill="rgb(211,135,41)" fg:x="59434" fg:w="45"/><text x="56.7747%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (39 samples, 0.04%)</title><rect x="56.5304%" y="485" width="0.0371%" height="15" fill="rgb(208,54,0)" fg:x="59440" fg:w="39"/><text x="56.7804%" y="495.50"></text></g><g><title>value_trait::Builder::object (39 samples, 0.04%)</title><rect x="56.5304%" y="469" width="0.0371%" height="15" fill="rgb(244,136,14)" fg:x="59440" fg:w="39"/><text x="56.7804%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (39 samples, 0.04%)</title><rect x="56.5304%" y="453" width="0.0371%" height="15" fill="rgb(241,56,14)" fg:x="59440" fg:w="39"/><text x="56.7804%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (14 samples, 0.01%)</title><rect x="56.5760%" y="501" width="0.0133%" height="15" fill="rgb(205,80,24)" fg:x="59488" fg:w="14"/><text x="56.8260%" y="511.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="56.6008%" y="469" width="0.0105%" height="15" fill="rgb(220,57,4)" fg:x="59514" fg:w="11"/><text x="56.8508%" y="479.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="56.6264%" y="405" width="0.0114%" height="15" fill="rgb(226,193,50)" fg:x="59541" fg:w="12"/><text x="56.8764%" y="415.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="56.6264%" y="389" width="0.0114%" height="15" fill="rgb(231,168,22)" fg:x="59541" fg:w="12"/><text x="56.8764%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (38 samples, 0.04%)</title><rect x="56.6531%" y="357" width="0.0361%" height="15" fill="rgb(254,215,14)" fg:x="59569" fg:w="38"/><text x="56.9031%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (37 samples, 0.04%)</title><rect x="56.6540%" y="341" width="0.0352%" height="15" fill="rgb(211,115,16)" fg:x="59570" fg:w="37"/><text x="56.9040%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (64 samples, 0.06%)</title><rect x="56.6378%" y="405" width="0.0609%" height="15" fill="rgb(236,210,16)" fg:x="59553" fg:w="64"/><text x="56.8878%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (64 samples, 0.06%)</title><rect x="56.6378%" y="389" width="0.0609%" height="15" fill="rgb(221,94,12)" fg:x="59553" fg:w="64"/><text x="56.8878%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (60 samples, 0.06%)</title><rect x="56.6417%" y="373" width="0.0571%" height="15" fill="rgb(235,218,49)" fg:x="59557" fg:w="60"/><text x="56.8917%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (110 samples, 0.10%)</title><rect x="56.6008%" y="485" width="0.1046%" height="15" fill="rgb(217,114,14)" fg:x="59514" fg:w="110"/><text x="56.8508%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (95 samples, 0.09%)</title><rect x="56.6150%" y="469" width="0.0903%" height="15" fill="rgb(216,145,22)" fg:x="59529" fg:w="95"/><text x="56.8650%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (95 samples, 0.09%)</title><rect x="56.6150%" y="453" width="0.0903%" height="15" fill="rgb(217,112,39)" fg:x="59529" fg:w="95"/><text x="56.8650%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (95 samples, 0.09%)</title><rect x="56.6150%" y="437" width="0.0903%" height="15" fill="rgb(225,85,32)" fg:x="59529" fg:w="95"/><text x="56.8650%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (95 samples, 0.09%)</title><rect x="56.6150%" y="421" width="0.0903%" height="15" fill="rgb(245,209,47)" fg:x="59529" fg:w="95"/><text x="56.8650%" y="431.50"></text></g><g><title>rust_dealloc (124 samples, 0.12%)</title><rect x="56.5893%" y="501" width="0.1179%" height="15" fill="rgb(218,220,15)" fg:x="59502" fg:w="124"/><text x="56.8393%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,678 samples, 1.60%)</title><rect x="55.1181%" y="517" width="1.5959%" height="15" fill="rgb(222,202,31)" fg:x="57955" fg:w="1678"/><text x="55.3681%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,400 samples, 2.28%)</title><rect x="54.5027%" y="533" width="2.2825%" height="15" fill="rgb(243,203,4)" fg:x="57308" fg:w="2400"/><text x="54.7527%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (75 samples, 0.07%)</title><rect x="56.7139%" y="517" width="0.0713%" height="15" fill="rgb(237,92,17)" fg:x="59633" fg:w="75"/><text x="56.9639%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="56.7853%" y="533" width="0.0114%" height="15" fill="rgb(231,119,7)" fg:x="59708" fg:w="12"/><text x="57.0353%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="56.7853%" y="517" width="0.0114%" height="15" fill="rgb(237,82,41)" fg:x="59708" fg:w="12"/><text x="57.0353%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (16 samples, 0.02%)</title><rect x="56.8052%" y="533" width="0.0152%" height="15" fill="rgb(226,81,48)" fg:x="59729" fg:w="16"/><text x="57.0552%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (16 samples, 0.02%)</title><rect x="56.8052%" y="517" width="0.0152%" height="15" fill="rgb(234,70,51)" fg:x="59729" fg:w="16"/><text x="57.0552%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (536 samples, 0.51%)</title><rect x="56.8205%" y="533" width="0.5098%" height="15" fill="rgb(251,86,4)" fg:x="59745" fg:w="536"/><text x="57.0705%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (15 samples, 0.01%)</title><rect x="57.3302%" y="533" width="0.0143%" height="15" fill="rgb(244,144,28)" fg:x="60281" fg:w="15"/><text x="57.5802%" y="543.50"></text></g><g><title>rust_dealloc (34 samples, 0.03%)</title><rect x="57.3702%" y="325" width="0.0323%" height="15" fill="rgb(232,161,39)" fg:x="60323" fg:w="34"/><text x="57.6202%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (33 samples, 0.03%)</title><rect x="57.4034%" y="325" width="0.0314%" height="15" fill="rgb(247,34,51)" fg:x="60358" fg:w="33"/><text x="57.6534%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (33 samples, 0.03%)</title><rect x="57.4034%" y="309" width="0.0314%" height="15" fill="rgb(225,132,2)" fg:x="60358" fg:w="33"/><text x="57.6534%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (32 samples, 0.03%)</title><rect x="57.4044%" y="293" width="0.0304%" height="15" fill="rgb(209,159,44)" fg:x="60359" fg:w="32"/><text x="57.6544%" y="303.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="57.4215%" y="277" width="0.0133%" height="15" fill="rgb(251,214,1)" fg:x="60377" fg:w="14"/><text x="57.6715%" y="287.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="57.4215%" y="261" width="0.0133%" height="15" fill="rgb(247,84,47)" fg:x="60377" fg:w="14"/><text x="57.6715%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="57.3702%" y="357" width="0.0732%" height="15" fill="rgb(240,111,43)" fg:x="60323" fg:w="77"/><text x="57.6202%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="57.3702%" y="341" width="0.0732%" height="15" fill="rgb(215,214,35)" fg:x="60323" fg:w="77"/><text x="57.6202%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (84 samples, 0.08%)</title><rect x="57.3702%" y="389" width="0.0799%" height="15" fill="rgb(248,207,23)" fg:x="60323" fg:w="84"/><text x="57.6202%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (84 samples, 0.08%)</title><rect x="57.3702%" y="373" width="0.0799%" height="15" fill="rgb(214,186,4)" fg:x="60323" fg:w="84"/><text x="57.6202%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (96 samples, 0.09%)</title><rect x="57.3654%" y="405" width="0.0913%" height="15" fill="rgb(220,133,22)" fg:x="60318" fg:w="96"/><text x="57.6154%" y="415.50"></text></g><g><title>alloc::alloc::box_free (132 samples, 0.13%)</title><rect x="57.3445%" y="501" width="0.1255%" height="15" fill="rgb(239,134,19)" fg:x="60296" fg:w="132"/><text x="57.5945%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (121 samples, 0.12%)</title><rect x="57.3549%" y="485" width="0.1151%" height="15" fill="rgb(250,140,9)" fg:x="60307" fg:w="121"/><text x="57.6049%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (120 samples, 0.11%)</title><rect x="57.3559%" y="469" width="0.1141%" height="15" fill="rgb(225,59,14)" fg:x="60308" fg:w="120"/><text x="57.6059%" y="479.50"></text></g><g><title>__rg_dealloc (120 samples, 0.11%)</title><rect x="57.3559%" y="453" width="0.1141%" height="15" fill="rgb(214,152,51)" fg:x="60308" fg:w="120"/><text x="57.6059%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (120 samples, 0.11%)</title><rect x="57.3559%" y="437" width="0.1141%" height="15" fill="rgb(251,227,43)" fg:x="60308" fg:w="120"/><text x="57.6059%" y="447.50"></text></g><g><title>rust_dealloc (120 samples, 0.11%)</title><rect x="57.3559%" y="421" width="0.1141%" height="15" fill="rgb(241,96,17)" fg:x="60308" fg:w="120"/><text x="57.6059%" y="431.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="57.4567%" y="405" width="0.0133%" height="15" fill="rgb(234,198,43)" fg:x="60414" fg:w="14"/><text x="57.7067%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (133 samples, 0.13%)</title><rect x="57.3445%" y="517" width="0.1265%" height="15" fill="rgb(220,108,29)" fg:x="60296" fg:w="133"/><text x="57.5945%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (134 samples, 0.13%)</title><rect x="57.3445%" y="533" width="0.1274%" height="15" fill="rgb(226,163,33)" fg:x="60296" fg:w="134"/><text x="57.5945%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1157" width="4.5432%" height="15" fill="rgb(205,194,45)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1167.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1141" width="4.5432%" height="15" fill="rgb(206,143,44)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1151.50">std::..</text></g><g><title>std::panic::catch_unwind (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1125" width="4.5432%" height="15" fill="rgb(236,136,36)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1135.50">std::..</text></g><g><title>std::panicking::try (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1109" width="4.5432%" height="15" fill="rgb(249,172,42)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1119.50">std::..</text></g><g><title>std::panicking::try::do_call (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1093" width="4.5432%" height="15" fill="rgb(216,139,23)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1103.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1077" width="4.5432%" height="15" fill="rgb(207,166,20)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1087.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1061" width="4.5432%" height="15" fill="rgb(210,209,22)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1071.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1045" width="4.5432%" height="15" fill="rgb(232,118,20)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1055.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1029" width="4.5432%" height="15" fill="rgb(238,113,42)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1039.50">core:..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,777 samples, 4.54%)</title><rect x="52.9915%" y="1013" width="4.5432%" height="15" fill="rgb(231,42,5)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1023.50">async..</text></g><g><title>std::panic::catch_unwind (4,777 samples, 4.54%)</title><rect x="52.9915%" y="997" width="4.5432%" height="15" fill="rgb(243,166,24)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="1007.50">std::..</text></g><g><title>std::panicking::try (4,777 samples, 4.54%)</title><rect x="52.9915%" y="981" width="4.5432%" height="15" fill="rgb(237,226,12)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="991.50">std::..</text></g><g><title>std::panicking::try::do_call (4,777 samples, 4.54%)</title><rect x="52.9915%" y="965" width="4.5432%" height="15" fill="rgb(229,133,24)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="975.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="949" width="4.5432%" height="15" fill="rgb(238,33,43)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="959.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,777 samples, 4.54%)</title><rect x="52.9915%" y="933" width="4.5432%" height="15" fill="rgb(227,59,38)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="943.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,777 samples, 4.54%)</title><rect x="52.9915%" y="917" width="4.5432%" height="15" fill="rgb(230,97,0)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="927.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="901" width="4.5432%" height="15" fill="rgb(250,173,50)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="911.50">async..</text></g><g><title>async_global_executor::reactor::block_on (4,777 samples, 4.54%)</title><rect x="52.9915%" y="885" width="4.5432%" height="15" fill="rgb(240,15,50)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="895.50">async..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="869" width="4.5432%" height="15" fill="rgb(221,93,22)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="879.50">async..</text></g><g><title>async_io::driver::block_on (4,777 samples, 4.54%)</title><rect x="52.9915%" y="853" width="4.5432%" height="15" fill="rgb(245,180,53)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="863.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,777 samples, 4.54%)</title><rect x="52.9915%" y="837" width="4.5432%" height="15" fill="rgb(231,88,51)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="847.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,777 samples, 4.54%)</title><rect x="52.9915%" y="821" width="4.5432%" height="15" fill="rgb(240,58,21)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="831.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="805" width="4.5432%" height="15" fill="rgb(237,21,10)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="815.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,777 samples, 4.54%)</title><rect x="52.9915%" y="789" width="4.5432%" height="15" fill="rgb(218,43,11)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="799.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,777 samples, 4.54%)</title><rect x="52.9915%" y="773" width="4.5432%" height="15" fill="rgb(218,221,29)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="783.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="757" width="4.5432%" height="15" fill="rgb(214,118,42)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="767.50">async..</text></g><g><title>async_task::runnable::Runnable::run (4,777 samples, 4.54%)</title><rect x="52.9915%" y="741" width="4.5432%" height="15" fill="rgb(251,200,26)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="751.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,777 samples, 4.54%)</title><rect x="52.9915%" y="725" width="4.5432%" height="15" fill="rgb(237,101,39)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="735.50">async..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,777 samples, 4.54%)</title><rect x="52.9915%" y="709" width="4.5432%" height="15" fill="rgb(251,117,11)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="719.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,777 samples, 4.54%)</title><rect x="52.9915%" y="693" width="4.5432%" height="15" fill="rgb(216,223,23)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="703.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="677" width="4.5432%" height="15" fill="rgb(251,54,12)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="687.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,777 samples, 4.54%)</title><rect x="52.9915%" y="661" width="4.5432%" height="15" fill="rgb(254,176,54)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="671.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,777 samples, 4.54%)</title><rect x="52.9915%" y="645" width="4.5432%" height="15" fill="rgb(210,32,8)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="655.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,777 samples, 4.54%)</title><rect x="52.9915%" y="629" width="4.5432%" height="15" fill="rgb(235,52,38)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="639.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,777 samples, 4.54%)</title><rect x="52.9915%" y="613" width="4.5432%" height="15" fill="rgb(231,4,44)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="623.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="597" width="4.5432%" height="15" fill="rgb(249,2,32)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="607.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,777 samples, 4.54%)</title><rect x="52.9915%" y="581" width="4.5432%" height="15" fill="rgb(224,65,26)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="591.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,777 samples, 4.54%)</title><rect x="52.9915%" y="565" width="4.5432%" height="15" fill="rgb(250,73,40)" fg:x="55719" fg:w="4777"/><text x="53.2415%" y="575.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,271 samples, 3.11%)</title><rect x="54.4238%" y="549" width="3.1109%" height="15" fill="rgb(253,177,16)" fg:x="57225" fg:w="3271"/><text x="54.6738%" y="559.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (65 samples, 0.06%)</title><rect x="57.4729%" y="533" width="0.0618%" height="15" fill="rgb(217,32,34)" fg:x="60431" fg:w="65"/><text x="57.7229%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (14 samples, 0.01%)</title><rect x="57.5214%" y="517" width="0.0133%" height="15" fill="rgb(212,7,10)" fg:x="60482" fg:w="14"/><text x="57.7714%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="57.5452%" y="1157" width="0.0124%" height="15" fill="rgb(245,89,8)" fg:x="60507" fg:w="13"/><text x="57.7952%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="57.5575%" y="1157" width="0.0181%" height="15" fill="rgb(237,16,53)" fg:x="60520" fg:w="19"/><text x="57.8075%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (39 samples, 0.04%)</title><rect x="57.5756%" y="1157" width="0.0371%" height="15" fill="rgb(250,204,30)" fg:x="60539" fg:w="39"/><text x="57.8256%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (95 samples, 0.09%)</title><rect x="57.6127%" y="1157" width="0.0903%" height="15" fill="rgb(208,77,27)" fg:x="60578" fg:w="95"/><text x="57.8627%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (19 samples, 0.02%)</title><rect x="57.7030%" y="1157" width="0.0181%" height="15" fill="rgb(250,204,28)" fg:x="60673" fg:w="19"/><text x="57.9530%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (19 samples, 0.02%)</title><rect x="57.7030%" y="1141" width="0.0181%" height="15" fill="rgb(244,63,21)" fg:x="60673" fg:w="19"/><text x="57.9530%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (19 samples, 0.02%)</title><rect x="57.7030%" y="1125" width="0.0181%" height="15" fill="rgb(236,85,44)" fg:x="60673" fg:w="19"/><text x="57.9530%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="57.7030%" y="1109" width="0.0181%" height="15" fill="rgb(215,98,4)" fg:x="60673" fg:w="19"/><text x="57.9530%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="57.7030%" y="1093" width="0.0181%" height="15" fill="rgb(235,38,11)" fg:x="60673" fg:w="19"/><text x="57.9530%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="57.7030%" y="1077" width="0.0181%" height="15" fill="rgb(254,186,25)" fg:x="60673" fg:w="19"/><text x="57.9530%" y="1087.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="57.7030%" y="1061" width="0.0181%" height="15" fill="rgb(225,55,31)" fg:x="60673" fg:w="19"/><text x="57.9530%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="57.7030%" y="1045" width="0.0181%" height="15" fill="rgb(211,15,21)" fg:x="60673" fg:w="19"/><text x="57.9530%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (67 samples, 0.06%)</title><rect x="57.7211%" y="1157" width="0.0637%" height="15" fill="rgb(215,187,41)" fg:x="60692" fg:w="67"/><text x="57.9711%" y="1167.50"></text></g><g><title>event_listener::Event::notify (15 samples, 0.01%)</title><rect x="57.7858%" y="1157" width="0.0143%" height="15" fill="rgb(248,69,32)" fg:x="60760" fg:w="15"/><text x="58.0358%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (16 samples, 0.02%)</title><rect x="57.8124%" y="1157" width="0.0152%" height="15" fill="rgb(252,102,52)" fg:x="60788" fg:w="16"/><text x="58.0624%" y="1167.50"></text></g><g><title>rust_alloc (68 samples, 0.06%)</title><rect x="57.8400%" y="1157" width="0.0647%" height="15" fill="rgb(253,140,32)" fg:x="60817" fg:w="68"/><text x="58.0900%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (94 samples, 0.09%)</title><rect x="59.4653%" y="437" width="0.0894%" height="15" fill="rgb(216,56,42)" fg:x="62526" fg:w="94"/><text x="59.7153%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="59.7611%" y="421" width="0.0105%" height="15" fill="rgb(216,184,14)" fg:x="62837" fg:w="11"/><text x="60.0111%" y="431.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.03%)</title><rect x="59.7716%" y="421" width="0.0333%" height="15" fill="rgb(237,187,27)" fg:x="62848" fg:w="35"/><text x="60.0216%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (699 samples, 0.66%)</title><rect x="59.8048%" y="421" width="0.6648%" height="15" fill="rgb(219,65,3)" fg:x="62883" fg:w="699"/><text x="60.0548%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.05%)</title><rect x="60.4763%" y="357" width="0.0485%" height="15" fill="rgb(245,83,25)" fg:x="63589" fg:w="51"/><text x="60.7263%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (65 samples, 0.06%)</title><rect x="60.4763%" y="421" width="0.0618%" height="15" fill="rgb(214,205,45)" fg:x="63589" fg:w="65"/><text x="60.7263%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (65 samples, 0.06%)</title><rect x="60.4763%" y="405" width="0.0618%" height="15" fill="rgb(241,20,18)" fg:x="63589" fg:w="65"/><text x="60.7263%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 0.06%)</title><rect x="60.4763%" y="389" width="0.0618%" height="15" fill="rgb(232,163,23)" fg:x="63589" fg:w="65"/><text x="60.7263%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (65 samples, 0.06%)</title><rect x="60.4763%" y="373" width="0.0618%" height="15" fill="rgb(214,5,46)" fg:x="63589" fg:w="65"/><text x="60.7263%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.01%)</title><rect x="60.5248%" y="357" width="0.0133%" height="15" fill="rgb(229,78,17)" fg:x="63640" fg:w="14"/><text x="60.7748%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (14 samples, 0.01%)</title><rect x="60.5248%" y="341" width="0.0133%" height="15" fill="rgb(248,89,10)" fg:x="63640" fg:w="14"/><text x="60.7748%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="60.5609%" y="277" width="0.0124%" height="15" fill="rgb(248,54,15)" fg:x="63678" fg:w="13"/><text x="60.8109%" y="287.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="60.5771%" y="229" width="0.0114%" height="15" fill="rgb(223,116,6)" fg:x="63695" fg:w="12"/><text x="60.8271%" y="239.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="60.5885%" y="229" width="0.0143%" height="15" fill="rgb(205,125,38)" fg:x="63707" fg:w="15"/><text x="60.8385%" y="239.50"></text></g><g><title>rust_dealloc (77 samples, 0.07%)</title><rect x="60.6028%" y="165" width="0.0732%" height="15" fill="rgb(251,78,38)" fg:x="63722" fg:w="77"/><text x="60.8528%" y="175.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (42 samples, 0.04%)</title><rect x="60.7293%" y="117" width="0.0399%" height="15" fill="rgb(253,78,28)" fg:x="63855" fg:w="42"/><text x="60.9793%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (40 samples, 0.04%)</title><rect x="60.7312%" y="101" width="0.0380%" height="15" fill="rgb(209,120,3)" fg:x="63857" fg:w="40"/><text x="60.9812%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (110 samples, 0.10%)</title><rect x="60.6770%" y="165" width="0.1046%" height="15" fill="rgb(238,229,9)" fg:x="63800" fg:w="110"/><text x="60.9270%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (110 samples, 0.10%)</title><rect x="60.6770%" y="149" width="0.1046%" height="15" fill="rgb(253,159,18)" fg:x="63800" fg:w="110"/><text x="60.9270%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (92 samples, 0.09%)</title><rect x="60.6941%" y="133" width="0.0875%" height="15" fill="rgb(244,42,34)" fg:x="63818" fg:w="92"/><text x="60.9441%" y="143.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="60.7692%" y="117" width="0.0124%" height="15" fill="rgb(224,8,7)" fg:x="63897" fg:w="13"/><text x="61.0192%" y="127.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="60.7692%" y="101" width="0.0124%" height="15" fill="rgb(210,201,45)" fg:x="63897" fg:w="13"/><text x="61.0192%" y="111.50"></text></g><g><title>rust_dealloc (277 samples, 0.26%)</title><rect x="60.5733%" y="261" width="0.2634%" height="15" fill="rgb(252,185,21)" fg:x="63691" fg:w="277"/><text x="60.8233%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (273 samples, 0.26%)</title><rect x="60.5771%" y="245" width="0.2596%" height="15" fill="rgb(223,131,1)" fg:x="63695" fg:w="273"/><text x="60.8271%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (246 samples, 0.23%)</title><rect x="60.6028%" y="229" width="0.2340%" height="15" fill="rgb(245,141,16)" fg:x="63722" fg:w="246"/><text x="60.8528%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (246 samples, 0.23%)</title><rect x="60.6028%" y="213" width="0.2340%" height="15" fill="rgb(229,55,45)" fg:x="63722" fg:w="246"/><text x="60.8528%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (246 samples, 0.23%)</title><rect x="60.6028%" y="197" width="0.2340%" height="15" fill="rgb(208,92,15)" fg:x="63722" fg:w="246"/><text x="60.8528%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (246 samples, 0.23%)</title><rect x="60.6028%" y="181" width="0.2340%" height="15" fill="rgb(234,185,47)" fg:x="63722" fg:w="246"/><text x="60.8528%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (58 samples, 0.06%)</title><rect x="60.7816%" y="165" width="0.0552%" height="15" fill="rgb(253,104,50)" fg:x="63910" fg:w="58"/><text x="61.0316%" y="175.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (27 samples, 0.03%)</title><rect x="60.8443%" y="245" width="0.0257%" height="15" fill="rgb(205,70,7)" fg:x="63976" fg:w="27"/><text x="61.0943%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (354 samples, 0.34%)</title><rect x="60.5381%" y="405" width="0.3367%" height="15" fill="rgb(240,178,43)" fg:x="63654" fg:w="354"/><text x="60.7881%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (344 samples, 0.33%)</title><rect x="60.5476%" y="389" width="0.3272%" height="15" fill="rgb(214,112,2)" fg:x="63664" fg:w="344"/><text x="60.7976%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (337 samples, 0.32%)</title><rect x="60.5543%" y="373" width="0.3205%" height="15" fill="rgb(206,46,17)" fg:x="63671" fg:w="337"/><text x="60.8043%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (337 samples, 0.32%)</title><rect x="60.5543%" y="357" width="0.3205%" height="15" fill="rgb(225,220,16)" fg:x="63671" fg:w="337"/><text x="60.8043%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (337 samples, 0.32%)</title><rect x="60.5543%" y="341" width="0.3205%" height="15" fill="rgb(238,65,40)" fg:x="63671" fg:w="337"/><text x="60.8043%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (330 samples, 0.31%)</title><rect x="60.5609%" y="325" width="0.3138%" height="15" fill="rgb(230,151,21)" fg:x="63678" fg:w="330"/><text x="60.8109%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (330 samples, 0.31%)</title><rect x="60.5609%" y="309" width="0.3138%" height="15" fill="rgb(218,58,49)" fg:x="63678" fg:w="330"/><text x="60.8109%" y="319.50"></text></g><g><title>__rg_dealloc (330 samples, 0.31%)</title><rect x="60.5609%" y="293" width="0.3138%" height="15" fill="rgb(219,179,14)" fg:x="63678" fg:w="330"/><text x="60.8109%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (317 samples, 0.30%)</title><rect x="60.5733%" y="277" width="0.3015%" height="15" fill="rgb(223,72,1)" fg:x="63691" fg:w="317"/><text x="60.8233%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (40 samples, 0.04%)</title><rect x="60.8367%" y="261" width="0.0380%" height="15" fill="rgb(238,126,10)" fg:x="63968" fg:w="40"/><text x="61.0867%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="60.9043%" y="213" width="0.0114%" height="15" fill="rgb(224,206,38)" fg:x="64039" fg:w="12"/><text x="61.1543%" y="223.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="60.9328%" y="165" width="0.0190%" height="15" fill="rgb(212,201,54)" fg:x="64069" fg:w="20"/><text x="61.1828%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="60.9328%" y="149" width="0.0190%" height="15" fill="rgb(218,154,48)" fg:x="64069" fg:w="20"/><text x="61.1828%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (48 samples, 0.05%)</title><rect x="60.9157%" y="213" width="0.0457%" height="15" fill="rgb(232,93,24)" fg:x="64051" fg:w="48"/><text x="61.1657%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (48 samples, 0.05%)</title><rect x="60.9157%" y="197" width="0.0457%" height="15" fill="rgb(245,30,21)" fg:x="64051" fg:w="48"/><text x="61.1657%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (48 samples, 0.05%)</title><rect x="60.9157%" y="181" width="0.0457%" height="15" fill="rgb(242,148,29)" fg:x="64051" fg:w="48"/><text x="61.1657%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (78 samples, 0.07%)</title><rect x="60.9014%" y="245" width="0.0742%" height="15" fill="rgb(244,153,54)" fg:x="64036" fg:w="78"/><text x="61.1514%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (78 samples, 0.07%)</title><rect x="60.9014%" y="229" width="0.0742%" height="15" fill="rgb(252,87,22)" fg:x="64036" fg:w="78"/><text x="61.1514%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="60.9613%" y="213" width="0.0143%" height="15" fill="rgb(210,51,29)" fg:x="64099" fg:w="15"/><text x="61.2113%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (87 samples, 0.08%)</title><rect x="60.9014%" y="277" width="0.0827%" height="15" fill="rgb(242,136,47)" fg:x="64036" fg:w="87"/><text x="61.1514%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (87 samples, 0.08%)</title><rect x="60.9014%" y="261" width="0.0827%" height="15" fill="rgb(238,68,4)" fg:x="64036" fg:w="87"/><text x="61.1514%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (95 samples, 0.09%)</title><rect x="60.8947%" y="293" width="0.0903%" height="15" fill="rgb(242,161,30)" fg:x="64029" fg:w="95"/><text x="61.1447%" y="303.50"></text></g><g><title>rust_dealloc (109 samples, 0.10%)</title><rect x="60.8862%" y="309" width="0.1037%" height="15" fill="rgb(218,58,44)" fg:x="64020" fg:w="109"/><text x="61.1362%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (478 samples, 0.45%)</title><rect x="60.5381%" y="421" width="0.4546%" height="15" fill="rgb(252,125,32)" fg:x="63654" fg:w="478"/><text x="60.7881%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (124 samples, 0.12%)</title><rect x="60.8748%" y="405" width="0.1179%" height="15" fill="rgb(219,178,0)" fg:x="64008" fg:w="124"/><text x="61.1248%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.12%)</title><rect x="60.8748%" y="389" width="0.1179%" height="15" fill="rgb(213,152,7)" fg:x="64008" fg:w="124"/><text x="61.1248%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (124 samples, 0.12%)</title><rect x="60.8748%" y="373" width="0.1179%" height="15" fill="rgb(249,109,34)" fg:x="64008" fg:w="124"/><text x="61.1248%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (112 samples, 0.11%)</title><rect x="60.8862%" y="357" width="0.1065%" height="15" fill="rgb(232,96,21)" fg:x="64020" fg:w="112"/><text x="61.1362%" y="367.50"></text></g><g><title>__rg_dealloc (112 samples, 0.11%)</title><rect x="60.8862%" y="341" width="0.1065%" height="15" fill="rgb(228,27,39)" fg:x="64020" fg:w="112"/><text x="61.1362%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (112 samples, 0.11%)</title><rect x="60.8862%" y="325" width="0.1065%" height="15" fill="rgb(211,182,52)" fg:x="64020" fg:w="112"/><text x="61.1362%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (11 samples, 0.01%)</title><rect x="61.0612%" y="357" width="0.0105%" height="15" fill="rgb(234,178,38)" fg:x="64204" fg:w="11"/><text x="61.3112%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (16 samples, 0.02%)</title><rect x="61.1011%" y="341" width="0.0152%" height="15" fill="rgb(221,111,3)" fg:x="64246" fg:w="16"/><text x="61.3511%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (68 samples, 0.06%)</title><rect x="61.0716%" y="357" width="0.0647%" height="15" fill="rgb(228,175,21)" fg:x="64215" fg:w="68"/><text x="61.3216%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (21 samples, 0.02%)</title><rect x="61.1163%" y="341" width="0.0200%" height="15" fill="rgb(228,174,43)" fg:x="64262" fg:w="21"/><text x="61.3663%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (80 samples, 0.08%)</title><rect x="61.0612%" y="373" width="0.0761%" height="15" fill="rgb(211,191,0)" fg:x="64204" fg:w="80"/><text x="61.3112%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (14 samples, 0.01%)</title><rect x="61.1373%" y="373" width="0.0133%" height="15" fill="rgb(253,117,3)" fg:x="64284" fg:w="14"/><text x="61.3873%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (174 samples, 0.17%)</title><rect x="60.9927%" y="421" width="0.1655%" height="15" fill="rgb(241,127,19)" fg:x="64132" fg:w="174"/><text x="61.2427%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (163 samples, 0.16%)</title><rect x="61.0032%" y="405" width="0.1550%" height="15" fill="rgb(218,103,12)" fg:x="64143" fg:w="163"/><text x="61.2532%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (162 samples, 0.15%)</title><rect x="61.0041%" y="389" width="0.1541%" height="15" fill="rgb(236,214,43)" fg:x="64144" fg:w="162"/><text x="61.2541%" y="399.50"></text></g><g><title>core::time::Duration::as_nanos (17 samples, 0.02%)</title><rect x="61.1953%" y="405" width="0.0162%" height="15" fill="rgb(244,144,19)" fg:x="64345" fg:w="17"/><text x="61.4453%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (263 samples, 0.25%)</title><rect x="61.1582%" y="421" width="0.2501%" height="15" fill="rgb(246,188,10)" fg:x="64306" fg:w="263"/><text x="61.4082%" y="431.50"></text></g><g><title>std::time::SystemTime::now (197 samples, 0.19%)</title><rect x="61.2210%" y="405" width="0.1874%" height="15" fill="rgb(212,193,33)" fg:x="64372" fg:w="197"/><text x="61.4710%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (197 samples, 0.19%)</title><rect x="61.2210%" y="389" width="0.1874%" height="15" fill="rgb(241,51,29)" fg:x="64372" fg:w="197"/><text x="61.4710%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (197 samples, 0.19%)</title><rect x="61.2210%" y="373" width="0.1874%" height="15" fill="rgb(211,58,19)" fg:x="64372" fg:w="197"/><text x="61.4710%" y="383.50"></text></g><g><title>__clock_gettime_2 (52 samples, 0.05%)</title><rect x="61.3589%" y="357" width="0.0495%" height="15" fill="rgb(229,111,26)" fg:x="64517" fg:w="52"/><text x="61.6089%" y="367.50"></text></g><g><title>__vdso_clock_gettime (25 samples, 0.02%)</title><rect x="61.3845%" y="341" width="0.0238%" height="15" fill="rgb(213,115,40)" fg:x="64544" fg:w="25"/><text x="61.6345%" y="351.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,955 samples, 1.86%)</title><rect x="59.5547%" y="437" width="1.8593%" height="15" fill="rgb(209,56,44)" fg:x="62620" fg:w="1955"/><text x="59.8047%" y="447.50">&lt;..</text></g><g><title>start_thread (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1157" width="3.4865%" height="15" fill="rgb(230,108,32)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1167.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1141" width="3.4865%" height="15" fill="rgb(216,165,31)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1151.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1125" width="3.4865%" height="15" fill="rgb(218,122,21)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1135.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1109" width="3.4865%" height="15" fill="rgb(223,224,47)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1119.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1093" width="3.4865%" height="15" fill="rgb(238,102,44)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1103.50">cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1077" width="3.4865%" height="15" fill="rgb(236,46,40)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1087.50">std..</text></g><g><title>std::panic::catch_unwind (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1061" width="3.4865%" height="15" fill="rgb(247,202,50)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1071.50">std..</text></g><g><title>std::panicking::try (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1045" width="3.4865%" height="15" fill="rgb(209,99,20)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1055.50">std..</text></g><g><title>std::panicking::try::do_call (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1029" width="3.4865%" height="15" fill="rgb(252,27,34)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1039.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,666 samples, 3.49%)</title><rect x="57.9332%" y="1013" width="3.4865%" height="15" fill="rgb(215,206,23)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1023.50">&lt;co..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="997" width="3.4865%" height="15" fill="rgb(212,135,36)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="1007.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,666 samples, 3.49%)</title><rect x="57.9332%" y="981" width="3.4865%" height="15" fill="rgb(240,189,1)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="991.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (3,666 samples, 3.49%)</title><rect x="57.9332%" y="965" width="3.4865%" height="15" fill="rgb(242,56,20)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="975.50">cor..</text></g><g><title>async_global_executor::threading::thread_main_loop (3,666 samples, 3.49%)</title><rect x="57.9332%" y="949" width="3.4865%" height="15" fill="rgb(247,132,33)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="959.50">asy..</text></g><g><title>std::panic::catch_unwind (3,666 samples, 3.49%)</title><rect x="57.9332%" y="933" width="3.4865%" height="15" fill="rgb(208,149,11)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="943.50">std..</text></g><g><title>std::panicking::try (3,666 samples, 3.49%)</title><rect x="57.9332%" y="917" width="3.4865%" height="15" fill="rgb(211,33,11)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="927.50">std..</text></g><g><title>std::panicking::try::do_call (3,666 samples, 3.49%)</title><rect x="57.9332%" y="901" width="3.4865%" height="15" fill="rgb(221,29,38)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="911.50">std..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="885" width="3.4865%" height="15" fill="rgb(206,182,49)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="895.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,666 samples, 3.49%)</title><rect x="57.9332%" y="869" width="3.4865%" height="15" fill="rgb(216,140,1)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="879.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,666 samples, 3.49%)</title><rect x="57.9332%" y="853" width="3.4865%" height="15" fill="rgb(232,57,40)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="863.50">std..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="837" width="3.4865%" height="15" fill="rgb(224,186,18)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="847.50">asy..</text></g><g><title>async_global_executor::reactor::block_on (3,666 samples, 3.49%)</title><rect x="57.9332%" y="821" width="3.4865%" height="15" fill="rgb(215,121,11)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="831.50">asy..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="805" width="3.4865%" height="15" fill="rgb(245,147,10)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="815.50">asy..</text></g><g><title>async_io::driver::block_on (3,666 samples, 3.49%)</title><rect x="57.9332%" y="789" width="3.4865%" height="15" fill="rgb(238,153,13)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="799.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="773" width="3.4865%" height="15" fill="rgb(233,108,0)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="783.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="757" width="3.4865%" height="15" fill="rgb(212,157,17)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="767.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="741" width="3.4865%" height="15" fill="rgb(225,213,38)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="751.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="725" width="3.4865%" height="15" fill="rgb(248,16,11)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="735.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="709" width="3.4865%" height="15" fill="rgb(241,33,4)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="719.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="693" width="3.4865%" height="15" fill="rgb(222,26,43)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="703.50">asy..</text></g><g><title>async_task::runnable::Runnable::run (3,666 samples, 3.49%)</title><rect x="57.9332%" y="677" width="3.4865%" height="15" fill="rgb(243,29,36)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="687.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,666 samples, 3.49%)</title><rect x="57.9332%" y="661" width="3.4865%" height="15" fill="rgb(241,9,27)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="671.50">asy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="645" width="3.4865%" height="15" fill="rgb(205,117,26)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="655.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="629" width="3.4865%" height="15" fill="rgb(209,80,39)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="639.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="613" width="3.4865%" height="15" fill="rgb(239,155,6)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="623.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="597" width="3.4865%" height="15" fill="rgb(212,104,12)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="607.50">&lt;as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,666 samples, 3.49%)</title><rect x="57.9332%" y="581" width="3.4865%" height="15" fill="rgb(234,204,3)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="591.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,666 samples, 3.49%)</title><rect x="57.9332%" y="565" width="3.4865%" height="15" fill="rgb(251,218,7)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="575.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,666 samples, 3.49%)</title><rect x="57.9332%" y="549" width="3.4865%" height="15" fill="rgb(221,81,32)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="559.50">std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="533" width="3.4865%" height="15" fill="rgb(214,152,26)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="543.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="517" width="3.4865%" height="15" fill="rgb(223,22,3)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="527.50">&lt;as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="501" width="3.4865%" height="15" fill="rgb(207,174,7)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="511.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,666 samples, 3.49%)</title><rect x="57.9332%" y="485" width="3.4865%" height="15" fill="rgb(224,19,52)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="495.50">tre..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="469" width="3.4865%" height="15" fill="rgb(228,24,14)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="479.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,666 samples, 3.49%)</title><rect x="57.9332%" y="453" width="3.4865%" height="15" fill="rgb(230,153,43)" fg:x="60915" fg:w="3666"/><text x="58.1832%" y="463.50">&lt;co..</text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="61.4559%" y="389" width="0.0143%" height="15" fill="rgb(231,106,12)" fg:x="64619" fg:w="15"/><text x="61.7059%" y="399.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="61.4749%" y="309" width="0.0124%" height="15" fill="rgb(215,92,2)" fg:x="64639" fg:w="13"/><text x="61.7249%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="61.5167%" y="277" width="0.0171%" height="15" fill="rgb(249,143,25)" fg:x="64683" fg:w="18"/><text x="61.7667%" y="287.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="61.5167%" y="261" width="0.0171%" height="15" fill="rgb(252,7,35)" fg:x="64683" fg:w="18"/><text x="61.7667%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (63 samples, 0.06%)</title><rect x="61.4892%" y="309" width="0.0599%" height="15" fill="rgb(216,69,40)" fg:x="64654" fg:w="63"/><text x="61.7392%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (51 samples, 0.05%)</title><rect x="61.5006%" y="293" width="0.0485%" height="15" fill="rgb(240,36,33)" fg:x="64666" fg:w="51"/><text x="61.7506%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (13 samples, 0.01%)</title><rect x="61.5367%" y="277" width="0.0124%" height="15" fill="rgb(231,128,14)" fg:x="64704" fg:w="13"/><text x="61.7867%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (83 samples, 0.08%)</title><rect x="61.4749%" y="341" width="0.0789%" height="15" fill="rgb(245,143,14)" fg:x="64639" fg:w="83"/><text x="61.7249%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (83 samples, 0.08%)</title><rect x="61.4749%" y="325" width="0.0789%" height="15" fill="rgb(222,130,28)" fg:x="64639" fg:w="83"/><text x="61.7249%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (90 samples, 0.09%)</title><rect x="61.4749%" y="373" width="0.0856%" height="15" fill="rgb(212,10,48)" fg:x="64639" fg:w="90"/><text x="61.7249%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (90 samples, 0.09%)</title><rect x="61.4749%" y="357" width="0.0856%" height="15" fill="rgb(254,118,45)" fg:x="64639" fg:w="90"/><text x="61.7249%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (105 samples, 0.10%)</title><rect x="61.4701%" y="389" width="0.0999%" height="15" fill="rgb(228,6,45)" fg:x="64634" fg:w="105"/><text x="61.7201%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (133 samples, 0.13%)</title><rect x="61.4540%" y="421" width="0.1265%" height="15" fill="rgb(241,18,35)" fg:x="64617" fg:w="133"/><text x="61.7040%" y="431.50"></text></g><g><title>rust_dealloc (131 samples, 0.12%)</title><rect x="61.4559%" y="405" width="0.1246%" height="15" fill="rgb(227,214,53)" fg:x="64619" fg:w="131"/><text x="61.7059%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="61.5700%" y="389" width="0.0105%" height="15" fill="rgb(224,107,51)" fg:x="64739" fg:w="11"/><text x="61.8200%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (27 samples, 0.03%)</title><rect x="61.5814%" y="373" width="0.0257%" height="15" fill="rgb(248,60,28)" fg:x="64751" fg:w="27"/><text x="61.8314%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (16 samples, 0.02%)</title><rect x="61.5919%" y="357" width="0.0152%" height="15" fill="rgb(249,101,23)" fg:x="64762" fg:w="16"/><text x="61.8419%" y="367.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="61.6071%" y="373" width="0.0105%" height="15" fill="rgb(228,51,19)" fg:x="64778" fg:w="11"/><text x="61.8571%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (11 samples, 0.01%)</title><rect x="61.6071%" y="357" width="0.0105%" height="15" fill="rgb(213,20,6)" fg:x="64778" fg:w="11"/><text x="61.8571%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="61.6071%" y="341" width="0.0105%" height="15" fill="rgb(212,124,10)" fg:x="64778" fg:w="11"/><text x="61.8571%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (15 samples, 0.01%)</title><rect x="61.6175%" y="373" width="0.0143%" height="15" fill="rgb(248,3,40)" fg:x="64789" fg:w="15"/><text x="61.8675%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (54 samples, 0.05%)</title><rect x="61.5814%" y="421" width="0.0514%" height="15" fill="rgb(223,178,23)" fg:x="64751" fg:w="54"/><text x="61.8314%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (54 samples, 0.05%)</title><rect x="61.5814%" y="405" width="0.0514%" height="15" fill="rgb(240,132,45)" fg:x="64751" fg:w="54"/><text x="61.8314%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="61.5814%" y="389" width="0.0514%" height="15" fill="rgb(245,164,36)" fg:x="64751" fg:w="54"/><text x="61.8314%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="62.1416%" y="261" width="0.0181%" height="15" fill="rgb(231,188,53)" fg:x="65340" fg:w="19"/><text x="62.3916%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="62.1416%" y="245" width="0.0181%" height="15" fill="rgb(237,198,39)" fg:x="65340" fg:w="19"/><text x="62.3916%" y="255.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="62.1416%" y="229" width="0.0181%" height="15" fill="rgb(223,120,35)" fg:x="65340" fg:w="19"/><text x="62.3916%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="62.1416%" y="213" width="0.0181%" height="15" fill="rgb(253,107,49)" fg:x="65340" fg:w="19"/><text x="62.3916%" y="223.50"></text></g><g><title>core::mem::drop (739 samples, 0.70%)</title><rect x="62.1406%" y="309" width="0.7028%" height="15" fill="rgb(216,44,31)" fg:x="65339" fg:w="739"/><text x="62.3906%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (739 samples, 0.70%)</title><rect x="62.1406%" y="293" width="0.7028%" height="15" fill="rgb(253,87,21)" fg:x="65339" fg:w="739"/><text x="62.3906%" y="303.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (739 samples, 0.70%)</title><rect x="62.1406%" y="277" width="0.7028%" height="15" fill="rgb(226,18,2)" fg:x="65339" fg:w="739"/><text x="62.3906%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (714 samples, 0.68%)</title><rect x="62.1644%" y="261" width="0.6790%" height="15" fill="rgb(216,8,46)" fg:x="65364" fg:w="714"/><text x="62.4144%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (714 samples, 0.68%)</title><rect x="62.1644%" y="245" width="0.6790%" height="15" fill="rgb(226,140,39)" fg:x="65364" fg:w="714"/><text x="62.4144%" y="255.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="62.8900%" y="85" width="0.0124%" height="15" fill="rgb(221,194,54)" fg:x="66127" fg:w="13"/><text x="63.1400%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (31 samples, 0.03%)</title><rect x="62.9842%" y="53" width="0.0295%" height="15" fill="rgb(213,92,11)" fg:x="66226" fg:w="31"/><text x="63.2342%" y="63.50"></text></g><g><title> (31 samples, 0.03%)</title><rect x="62.9842%" y="37" width="0.0295%" height="15" fill="rgb(229,162,46)" fg:x="66226" fg:w="31"/><text x="63.2342%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (134 samples, 0.13%)</title><rect x="62.9062%" y="85" width="0.1274%" height="15" fill="rgb(214,111,36)" fg:x="66144" fg:w="134"/><text x="63.1562%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (116 samples, 0.11%)</title><rect x="62.9233%" y="69" width="0.1103%" height="15" fill="rgb(207,6,21)" fg:x="66162" fg:w="116"/><text x="63.1733%" y="79.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (17 samples, 0.02%)</title><rect x="63.0175%" y="53" width="0.0162%" height="15" fill="rgb(213,127,38)" fg:x="66261" fg:w="17"/><text x="63.2675%" y="63.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (186 samples, 0.18%)</title><rect x="62.8900%" y="117" width="0.1769%" height="15" fill="rgb(238,118,32)" fg:x="66127" fg:w="186"/><text x="63.1400%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (186 samples, 0.18%)</title><rect x="62.8900%" y="101" width="0.1769%" height="15" fill="rgb(240,139,39)" fg:x="66127" fg:w="186"/><text x="63.1400%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (34 samples, 0.03%)</title><rect x="63.0346%" y="85" width="0.0323%" height="15" fill="rgb(235,10,37)" fg:x="66279" fg:w="34"/><text x="63.2846%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (191 samples, 0.18%)</title><rect x="62.8900%" y="149" width="0.1817%" height="15" fill="rgb(249,171,38)" fg:x="66127" fg:w="191"/><text x="63.1400%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (191 samples, 0.18%)</title><rect x="62.8900%" y="133" width="0.1817%" height="15" fill="rgb(242,144,32)" fg:x="66127" fg:w="191"/><text x="63.1400%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (207 samples, 0.20%)</title><rect x="62.8834%" y="165" width="0.1969%" height="15" fill="rgb(217,117,21)" fg:x="66120" fg:w="207"/><text x="63.1334%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (226 samples, 0.21%)</title><rect x="62.8739%" y="245" width="0.2149%" height="15" fill="rgb(249,87,1)" fg:x="66110" fg:w="226"/><text x="63.1239%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (226 samples, 0.21%)</title><rect x="62.8739%" y="229" width="0.2149%" height="15" fill="rgb(248,196,48)" fg:x="66110" fg:w="226"/><text x="63.1239%" y="239.50"></text></g><g><title>__rg_dealloc (226 samples, 0.21%)</title><rect x="62.8739%" y="213" width="0.2149%" height="15" fill="rgb(251,206,33)" fg:x="66110" fg:w="226"/><text x="63.1239%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (226 samples, 0.21%)</title><rect x="62.8739%" y="197" width="0.2149%" height="15" fill="rgb(232,141,28)" fg:x="66110" fg:w="226"/><text x="63.1239%" y="207.50"></text></g><g><title>rust_dealloc (226 samples, 0.21%)</title><rect x="62.8739%" y="181" width="0.2149%" height="15" fill="rgb(209,167,14)" fg:x="66110" fg:w="226"/><text x="63.1239%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,005 samples, 0.96%)</title><rect x="62.1340%" y="325" width="0.9558%" height="15" fill="rgb(225,11,50)" fg:x="65332" fg:w="1005"/><text x="62.3840%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (259 samples, 0.25%)</title><rect x="62.8434%" y="309" width="0.2463%" height="15" fill="rgb(209,50,20)" fg:x="66078" fg:w="259"/><text x="63.0934%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (259 samples, 0.25%)</title><rect x="62.8434%" y="293" width="0.2463%" height="15" fill="rgb(212,17,46)" fg:x="66078" fg:w="259"/><text x="63.0934%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (259 samples, 0.25%)</title><rect x="62.8434%" y="277" width="0.2463%" height="15" fill="rgb(216,101,39)" fg:x="66078" fg:w="259"/><text x="63.0934%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (259 samples, 0.25%)</title><rect x="62.8434%" y="261" width="0.2463%" height="15" fill="rgb(212,228,48)" fg:x="66078" fg:w="259"/><text x="63.0934%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,216 samples, 1.16%)</title><rect x="63.0898%" y="325" width="1.1565%" height="15" fill="rgb(250,6,50)" fg:x="66337" fg:w="1216"/><text x="63.3398%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,216 samples, 1.16%)</title><rect x="63.0898%" y="309" width="1.1565%" height="15" fill="rgb(250,160,48)" fg:x="66337" fg:w="1216"/><text x="63.3398%" y="319.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="64.2691%" y="293" width="0.0133%" height="15" fill="rgb(244,216,33)" fg:x="67577" fg:w="14"/><text x="64.5191%" y="303.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="64.2928%" y="229" width="0.0105%" height="15" fill="rgb(207,157,5)" fg:x="67602" fg:w="11"/><text x="64.5428%" y="239.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="64.2928%" y="213" width="0.0105%" height="15" fill="rgb(228,199,8)" fg:x="67602" fg:w="11"/><text x="64.5428%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (32 samples, 0.03%)</title><rect x="64.3375%" y="197" width="0.0304%" height="15" fill="rgb(227,80,20)" fg:x="67649" fg:w="32"/><text x="64.5875%" y="207.50"></text></g><g><title> (32 samples, 0.03%)</title><rect x="64.3375%" y="181" width="0.0304%" height="15" fill="rgb(222,9,33)" fg:x="67649" fg:w="32"/><text x="64.5875%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (78 samples, 0.07%)</title><rect x="64.3033%" y="229" width="0.0742%" height="15" fill="rgb(239,44,28)" fg:x="67613" fg:w="78"/><text x="64.5533%" y="239.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (66 samples, 0.06%)</title><rect x="64.3147%" y="213" width="0.0628%" height="15" fill="rgb(249,187,43)" fg:x="67625" fg:w="66"/><text x="64.5647%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,891 samples, 2.75%)</title><rect x="61.6328%" y="389" width="2.7495%" height="15" fill="rgb(216,141,28)" fg:x="64805" fg:w="2891"/><text x="61.8828%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,880 samples, 2.74%)</title><rect x="61.6432%" y="373" width="2.7390%" height="15" fill="rgb(230,154,53)" fg:x="64816" fg:w="2880"/><text x="61.8932%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,871 samples, 2.73%)</title><rect x="61.6518%" y="357" width="2.7305%" height="15" fill="rgb(227,82,4)" fg:x="64825" fg:w="2871"/><text x="61.9018%" y="367.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,871 samples, 2.73%)</title><rect x="61.6518%" y="341" width="2.7305%" height="15" fill="rgb(220,107,16)" fg:x="64825" fg:w="2871"/><text x="61.9018%" y="351.50">&lt;a..</text></g><g><title>rust_dealloc (143 samples, 0.14%)</title><rect x="64.2462%" y="325" width="0.1360%" height="15" fill="rgb(207,187,2)" fg:x="67553" fg:w="143"/><text x="64.4962%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (129 samples, 0.12%)</title><rect x="64.2596%" y="309" width="0.1227%" height="15" fill="rgb(210,162,52)" fg:x="67567" fg:w="129"/><text x="64.5096%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (105 samples, 0.10%)</title><rect x="64.2824%" y="293" width="0.0999%" height="15" fill="rgb(217,216,49)" fg:x="67591" fg:w="105"/><text x="64.5324%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (105 samples, 0.10%)</title><rect x="64.2824%" y="277" width="0.0999%" height="15" fill="rgb(218,146,49)" fg:x="67591" fg:w="105"/><text x="64.5324%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (105 samples, 0.10%)</title><rect x="64.2824%" y="261" width="0.0999%" height="15" fill="rgb(216,55,40)" fg:x="67591" fg:w="105"/><text x="64.5324%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (105 samples, 0.10%)</title><rect x="64.2824%" y="245" width="0.0999%" height="15" fill="rgb(208,196,21)" fg:x="67591" fg:w="105"/><text x="64.5324%" y="255.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="64.3918%" y="277" width="0.0114%" height="15" fill="rgb(242,117,42)" fg:x="67706" fg:w="12"/><text x="64.6418%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="64.4593%" y="165" width="0.0200%" height="15" fill="rgb(210,11,23)" fg:x="67777" fg:w="21"/><text x="64.7093%" y="175.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="64.4593%" y="149" width="0.0200%" height="15" fill="rgb(217,110,2)" fg:x="67777" fg:w="21"/><text x="64.7093%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (65 samples, 0.06%)</title><rect x="64.4298%" y="197" width="0.0618%" height="15" fill="rgb(229,77,54)" fg:x="67746" fg:w="65"/><text x="64.6798%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (50 samples, 0.05%)</title><rect x="64.4441%" y="181" width="0.0476%" height="15" fill="rgb(218,53,16)" fg:x="67761" fg:w="50"/><text x="64.6941%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="64.4802%" y="165" width="0.0114%" height="15" fill="rgb(215,38,13)" fg:x="67799" fg:w="12"/><text x="64.7302%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (93 samples, 0.09%)</title><rect x="64.4165%" y="229" width="0.0884%" height="15" fill="rgb(235,42,18)" fg:x="67732" fg:w="93"/><text x="64.6665%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (93 samples, 0.09%)</title><rect x="64.4165%" y="213" width="0.0884%" height="15" fill="rgb(219,66,54)" fg:x="67732" fg:w="93"/><text x="64.6665%" y="223.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="64.4916%" y="197" width="0.0133%" height="15" fill="rgb(222,205,4)" fg:x="67811" fg:w="14"/><text x="64.7416%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (107 samples, 0.10%)</title><rect x="64.4165%" y="261" width="0.1018%" height="15" fill="rgb(227,213,46)" fg:x="67732" fg:w="107"/><text x="64.6665%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (107 samples, 0.10%)</title><rect x="64.4165%" y="245" width="0.1018%" height="15" fill="rgb(250,145,42)" fg:x="67732" fg:w="107"/><text x="64.6665%" y="255.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="64.5049%" y="229" width="0.0133%" height="15" fill="rgb(219,15,2)" fg:x="67825" fg:w="14"/><text x="64.7549%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="64.5049%" y="213" width="0.0133%" height="15" fill="rgb(231,181,52)" fg:x="67825" fg:w="14"/><text x="64.7549%" y="223.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="64.5049%" y="197" width="0.0133%" height="15" fill="rgb(235,1,42)" fg:x="67825" fg:w="14"/><text x="64.7549%" y="207.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="64.5049%" y="181" width="0.0133%" height="15" fill="rgb(249,88,27)" fg:x="67825" fg:w="14"/><text x="64.7549%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (122 samples, 0.12%)</title><rect x="64.4032%" y="277" width="0.1160%" height="15" fill="rgb(235,145,16)" fg:x="67718" fg:w="122"/><text x="64.6532%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (145 samples, 0.14%)</title><rect x="64.3822%" y="357" width="0.1379%" height="15" fill="rgb(237,114,19)" fg:x="67696" fg:w="145"/><text x="64.6322%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (136 samples, 0.13%)</title><rect x="64.3908%" y="341" width="0.1293%" height="15" fill="rgb(238,51,50)" fg:x="67705" fg:w="136"/><text x="64.6408%" y="351.50"></text></g><g><title>__rg_dealloc (136 samples, 0.13%)</title><rect x="64.3908%" y="325" width="0.1293%" height="15" fill="rgb(205,194,25)" fg:x="67705" fg:w="136"/><text x="64.6408%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (136 samples, 0.13%)</title><rect x="64.3908%" y="309" width="0.1293%" height="15" fill="rgb(215,203,17)" fg:x="67705" fg:w="136"/><text x="64.6408%" y="319.50"></text></g><g><title>rust_dealloc (136 samples, 0.13%)</title><rect x="64.3908%" y="293" width="0.1293%" height="15" fill="rgb(233,112,49)" fg:x="67705" fg:w="136"/><text x="64.6408%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (3,037 samples, 2.89%)</title><rect x="61.6328%" y="405" width="2.8883%" height="15" fill="rgb(241,130,26)" fg:x="64805" fg:w="3037"/><text x="61.8828%" y="415.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (146 samples, 0.14%)</title><rect x="64.3822%" y="389" width="0.1389%" height="15" fill="rgb(252,223,19)" fg:x="67696" fg:w="146"/><text x="64.6322%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.14%)</title><rect x="64.3822%" y="373" width="0.1389%" height="15" fill="rgb(211,95,25)" fg:x="67696" fg:w="146"/><text x="64.6322%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (14 samples, 0.01%)</title><rect x="64.5230%" y="389" width="0.0133%" height="15" fill="rgb(251,182,27)" fg:x="67844" fg:w="14"/><text x="64.7730%" y="399.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="64.5468%" y="357" width="0.0143%" height="15" fill="rgb(238,24,4)" fg:x="67869" fg:w="15"/><text x="64.7968%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="64.6200%" y="261" width="0.0171%" height="15" fill="rgb(224,220,25)" fg:x="67946" fg:w="18"/><text x="64.8700%" y="271.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="64.6200%" y="245" width="0.0171%" height="15" fill="rgb(239,133,26)" fg:x="67946" fg:w="18"/><text x="64.8700%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (64 samples, 0.06%)</title><rect x="64.5896%" y="293" width="0.0609%" height="15" fill="rgb(211,94,48)" fg:x="67914" fg:w="64"/><text x="64.8396%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (54 samples, 0.05%)</title><rect x="64.5991%" y="277" width="0.0514%" height="15" fill="rgb(239,87,6)" fg:x="67924" fg:w="54"/><text x="64.8491%" y="287.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="64.6390%" y="261" width="0.0114%" height="15" fill="rgb(227,62,0)" fg:x="67966" fg:w="12"/><text x="64.8890%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (113 samples, 0.11%)</title><rect x="64.5468%" y="373" width="0.1075%" height="15" fill="rgb(211,226,4)" fg:x="67869" fg:w="113"/><text x="64.7968%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (88 samples, 0.08%)</title><rect x="64.5706%" y="357" width="0.0837%" height="15" fill="rgb(253,38,52)" fg:x="67894" fg:w="88"/><text x="64.8206%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (88 samples, 0.08%)</title><rect x="64.5706%" y="341" width="0.0837%" height="15" fill="rgb(229,126,40)" fg:x="67894" fg:w="88"/><text x="64.8206%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (88 samples, 0.08%)</title><rect x="64.5706%" y="325" width="0.0837%" height="15" fill="rgb(229,165,44)" fg:x="67894" fg:w="88"/><text x="64.8206%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (88 samples, 0.08%)</title><rect x="64.5706%" y="309" width="0.0837%" height="15" fill="rgb(247,95,47)" fg:x="67894" fg:w="88"/><text x="64.8206%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (3,402 samples, 3.24%)</title><rect x="61.4197%" y="437" width="3.2355%" height="15" fill="rgb(216,140,30)" fg:x="64581" fg:w="3402"/><text x="61.6697%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,178 samples, 3.02%)</title><rect x="61.6328%" y="421" width="3.0224%" height="15" fill="rgb(246,214,8)" fg:x="64805" fg:w="3178"/><text x="61.8828%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (141 samples, 0.13%)</title><rect x="64.5211%" y="405" width="0.1341%" height="15" fill="rgb(227,224,15)" fg:x="67842" fg:w="141"/><text x="64.7711%" y="415.50"></text></g><g><title>rust_dealloc (125 samples, 0.12%)</title><rect x="64.5363%" y="389" width="0.1189%" height="15" fill="rgb(233,175,4)" fg:x="67858" fg:w="125"/><text x="64.7863%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (71 samples, 0.07%)</title><rect x="64.7180%" y="373" width="0.0675%" height="15" fill="rgb(221,66,45)" fg:x="68049" fg:w="71"/><text x="64.9680%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::ge (71 samples, 0.07%)</title><rect x="64.7180%" y="357" width="0.0675%" height="15" fill="rgb(221,178,18)" fg:x="68049" fg:w="71"/><text x="64.9680%" y="367.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (69 samples, 0.07%)</title><rect x="64.7199%" y="341" width="0.0656%" height="15" fill="rgb(213,81,29)" fg:x="68051" fg:w="69"/><text x="64.9699%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (69 samples, 0.07%)</title><rect x="64.7199%" y="325" width="0.0656%" height="15" fill="rgb(220,89,49)" fg:x="68051" fg:w="69"/><text x="64.9699%" y="335.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (69 samples, 0.07%)</title><rect x="64.7199%" y="309" width="0.0656%" height="15" fill="rgb(227,60,33)" fg:x="68051" fg:w="69"/><text x="64.9699%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (34 samples, 0.03%)</title><rect x="64.7532%" y="293" width="0.0323%" height="15" fill="rgb(205,113,12)" fg:x="68086" fg:w="34"/><text x="65.0032%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (160 samples, 0.15%)</title><rect x="64.6609%" y="421" width="0.1522%" height="15" fill="rgb(211,32,1)" fg:x="67989" fg:w="160"/><text x="64.9109%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (160 samples, 0.15%)</title><rect x="64.6609%" y="405" width="0.1522%" height="15" fill="rgb(246,2,12)" fg:x="67989" fg:w="160"/><text x="64.9109%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (160 samples, 0.15%)</title><rect x="64.6609%" y="389" width="0.1522%" height="15" fill="rgb(243,37,27)" fg:x="67989" fg:w="160"/><text x="64.9109%" y="399.50"></text></g><g><title>core::time::Duration::new (29 samples, 0.03%)</title><rect x="64.7855%" y="373" width="0.0276%" height="15" fill="rgb(248,211,31)" fg:x="68120" fg:w="29"/><text x="65.0355%" y="383.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1157" width="3.9925%" height="15" fill="rgb(242,146,47)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1167.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1141" width="3.9925%" height="15" fill="rgb(206,70,20)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1151.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1125" width="3.9925%" height="15" fill="rgb(215,10,51)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1135.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1109" width="3.9925%" height="15" fill="rgb(243,178,53)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1119.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1093" width="3.9925%" height="15" fill="rgb(233,221,20)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1103.50">std:..</text></g><g><title>std::panic::catch_unwind (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1077" width="3.9925%" height="15" fill="rgb(218,95,35)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1087.50">std:..</text></g><g><title>std::panicking::try (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1061" width="3.9925%" height="15" fill="rgb(229,13,5)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1071.50">std:..</text></g><g><title>std::panicking::try::do_call (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1045" width="3.9925%" height="15" fill="rgb(252,164,30)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1055.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1029" width="3.9925%" height="15" fill="rgb(232,68,36)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1039.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="1013" width="3.9925%" height="15" fill="rgb(219,59,54)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1023.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,198 samples, 3.99%)</title><rect x="61.4197%" y="997" width="3.9925%" height="15" fill="rgb(250,92,33)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="1007.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (4,198 samples, 3.99%)</title><rect x="61.4197%" y="981" width="3.9925%" height="15" fill="rgb(229,162,54)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="991.50">core..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,198 samples, 3.99%)</title><rect x="61.4197%" y="965" width="3.9925%" height="15" fill="rgb(244,114,52)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="975.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,198 samples, 3.99%)</title><rect x="61.4197%" y="949" width="3.9925%" height="15" fill="rgb(212,211,43)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="959.50">std:..</text></g><g><title>std::panicking::try (4,198 samples, 3.99%)</title><rect x="61.4197%" y="933" width="3.9925%" height="15" fill="rgb(226,147,8)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="943.50">std:..</text></g><g><title>std::panicking::try::do_call (4,198 samples, 3.99%)</title><rect x="61.4197%" y="917" width="3.9925%" height="15" fill="rgb(226,23,13)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="927.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="901" width="3.9925%" height="15" fill="rgb(240,63,4)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="911.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,198 samples, 3.99%)</title><rect x="61.4197%" y="885" width="3.9925%" height="15" fill="rgb(221,1,32)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="895.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,198 samples, 3.99%)</title><rect x="61.4197%" y="869" width="3.9925%" height="15" fill="rgb(242,117,10)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="879.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="853" width="3.9925%" height="15" fill="rgb(249,172,44)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="863.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (4,198 samples, 3.99%)</title><rect x="61.4197%" y="837" width="3.9925%" height="15" fill="rgb(244,46,45)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="847.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="821" width="3.9925%" height="15" fill="rgb(206,43,17)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="831.50">asyn..</text></g><g><title>async_io::driver::block_on (4,198 samples, 3.99%)</title><rect x="61.4197%" y="805" width="3.9925%" height="15" fill="rgb(239,218,39)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="815.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="789" width="3.9925%" height="15" fill="rgb(208,169,54)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="799.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="773" width="3.9925%" height="15" fill="rgb(247,25,42)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="783.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="757" width="3.9925%" height="15" fill="rgb(226,23,31)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="767.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="741" width="3.9925%" height="15" fill="rgb(247,16,28)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="751.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="725" width="3.9925%" height="15" fill="rgb(231,147,38)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="735.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="709" width="3.9925%" height="15" fill="rgb(253,81,48)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="719.50">asyn..</text></g><g><title>async_task::runnable::Runnable::run (4,198 samples, 3.99%)</title><rect x="61.4197%" y="693" width="3.9925%" height="15" fill="rgb(249,222,43)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="703.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,198 samples, 3.99%)</title><rect x="61.4197%" y="677" width="3.9925%" height="15" fill="rgb(221,3,27)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="687.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="661" width="3.9925%" height="15" fill="rgb(228,180,5)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="671.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="645" width="3.9925%" height="15" fill="rgb(227,131,42)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="655.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="629" width="3.9925%" height="15" fill="rgb(212,3,39)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="639.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="613" width="3.9925%" height="15" fill="rgb(226,45,5)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="623.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,198 samples, 3.99%)</title><rect x="61.4197%" y="597" width="3.9925%" height="15" fill="rgb(215,167,45)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="607.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,198 samples, 3.99%)</title><rect x="61.4197%" y="581" width="3.9925%" height="15" fill="rgb(250,218,53)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="591.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,198 samples, 3.99%)</title><rect x="61.4197%" y="565" width="3.9925%" height="15" fill="rgb(207,140,0)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="575.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="549" width="3.9925%" height="15" fill="rgb(238,133,51)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="559.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="533" width="3.9925%" height="15" fill="rgb(218,203,53)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="543.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="517" width="3.9925%" height="15" fill="rgb(226,184,25)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="527.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="501" width="3.9925%" height="15" fill="rgb(231,121,21)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="511.50">trem..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="485" width="3.9925%" height="15" fill="rgb(251,14,34)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="495.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,198 samples, 3.99%)</title><rect x="61.4197%" y="469" width="3.9925%" height="15" fill="rgb(249,193,11)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="479.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,198 samples, 3.99%)</title><rect x="61.4197%" y="453" width="3.9925%" height="15" fill="rgb(220,172,37)" fg:x="64581" fg:w="4198"/><text x="61.6697%" y="463.50">&lt;tre..</text></g><g><title>tremor_common::time::nanotime (790 samples, 0.75%)</title><rect x="64.6609%" y="437" width="0.7513%" height="15" fill="rgb(231,229,43)" fg:x="67989" fg:w="790"/><text x="64.9109%" y="447.50"></text></g><g><title>std::time::SystemTime::now (630 samples, 0.60%)</title><rect x="64.8131%" y="421" width="0.5992%" height="15" fill="rgb(250,161,5)" fg:x="68149" fg:w="630"/><text x="65.0631%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (630 samples, 0.60%)</title><rect x="64.8131%" y="405" width="0.5992%" height="15" fill="rgb(218,225,18)" fg:x="68149" fg:w="630"/><text x="65.0631%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::now (630 samples, 0.60%)</title><rect x="64.8131%" y="389" width="0.5992%" height="15" fill="rgb(245,45,42)" fg:x="68149" fg:w="630"/><text x="65.0631%" y="399.50"></text></g><g><title>__clock_gettime_2 (630 samples, 0.60%)</title><rect x="64.8131%" y="373" width="0.5992%" height="15" fill="rgb(211,115,1)" fg:x="68149" fg:w="630"/><text x="65.0631%" y="383.50"></text></g><g><title>__vdso_clock_gettime (630 samples, 0.60%)</title><rect x="64.8131%" y="357" width="0.5992%" height="15" fill="rgb(248,133,52)" fg:x="68149" fg:w="630"/><text x="65.0631%" y="367.50"></text></g><g><title>[[vdso]] (430 samples, 0.41%)</title><rect x="65.0033%" y="341" width="0.4090%" height="15" fill="rgb(238,100,21)" fg:x="68349" fg:w="430"/><text x="65.2533%" y="351.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (55 samples, 0.05%)</title><rect x="65.4122%" y="1157" width="0.0523%" height="15" fill="rgb(247,144,11)" fg:x="68779" fg:w="55"/><text x="65.6622%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (740 samples, 0.70%)</title><rect x="65.5625%" y="581" width="0.7038%" height="15" fill="rgb(206,164,16)" fg:x="68937" fg:w="740"/><text x="65.8125%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (783 samples, 0.74%)</title><rect x="65.5292%" y="597" width="0.7447%" height="15" fill="rgb(222,34,3)" fg:x="68902" fg:w="783"/><text x="65.7792%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,246 samples, 1.19%)</title><rect x="65.4826%" y="613" width="1.1850%" height="15" fill="rgb(248,82,4)" fg:x="68853" fg:w="1246"/><text x="65.7326%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (414 samples, 0.39%)</title><rect x="66.2739%" y="597" width="0.3937%" height="15" fill="rgb(228,81,46)" fg:x="69685" fg:w="414"/><text x="66.5239%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,274 samples, 1.21%)</title><rect x="65.4645%" y="645" width="1.2116%" height="15" fill="rgb(227,67,47)" fg:x="68834" fg:w="1274"/><text x="65.7145%" y="655.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,274 samples, 1.21%)</title><rect x="65.4645%" y="629" width="1.2116%" height="15" fill="rgb(215,93,53)" fg:x="68834" fg:w="1274"/><text x="65.7145%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="66.7836%" y="453" width="0.0361%" height="15" fill="rgb(248,194,39)" fg:x="70221" fg:w="38"/><text x="67.0336%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (37 samples, 0.04%)</title><rect x="66.7846%" y="437" width="0.0352%" height="15" fill="rgb(215,5,19)" fg:x="70222" fg:w="37"/><text x="67.0346%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (53 samples, 0.05%)</title><rect x="66.7836%" y="485" width="0.0504%" height="15" fill="rgb(226,215,51)" fg:x="70221" fg:w="53"/><text x="67.0336%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (53 samples, 0.05%)</title><rect x="66.7836%" y="469" width="0.0504%" height="15" fill="rgb(225,56,26)" fg:x="70221" fg:w="53"/><text x="67.0336%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (15 samples, 0.01%)</title><rect x="66.8198%" y="453" width="0.0143%" height="15" fill="rgb(222,75,29)" fg:x="70259" fg:w="15"/><text x="67.0698%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="66.8198%" y="437" width="0.0143%" height="15" fill="rgb(236,139,6)" fg:x="70259" fg:w="15"/><text x="67.0698%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="66.8198%" y="421" width="0.0143%" height="15" fill="rgb(223,137,36)" fg:x="70259" fg:w="15"/><text x="67.0698%" y="431.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,441 samples, 1.37%)</title><rect x="65.4645%" y="661" width="1.3705%" height="15" fill="rgb(226,99,2)" fg:x="68834" fg:w="1441"/><text x="65.7145%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (167 samples, 0.16%)</title><rect x="66.6762%" y="645" width="0.1588%" height="15" fill="rgb(206,133,23)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (167 samples, 0.16%)</title><rect x="66.6762%" y="629" width="0.1588%" height="15" fill="rgb(243,173,15)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (167 samples, 0.16%)</title><rect x="66.6762%" y="613" width="0.1588%" height="15" fill="rgb(228,69,28)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (167 samples, 0.16%)</title><rect x="66.6762%" y="597" width="0.1588%" height="15" fill="rgb(212,51,22)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (167 samples, 0.16%)</title><rect x="66.6762%" y="581" width="0.1588%" height="15" fill="rgb(227,113,0)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (167 samples, 0.16%)</title><rect x="66.6762%" y="565" width="0.1588%" height="15" fill="rgb(252,84,27)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (167 samples, 0.16%)</title><rect x="66.6762%" y="549" width="0.1588%" height="15" fill="rgb(223,145,39)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (167 samples, 0.16%)</title><rect x="66.6762%" y="533" width="0.1588%" height="15" fill="rgb(239,219,30)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (167 samples, 0.16%)</title><rect x="66.6762%" y="517" width="0.1588%" height="15" fill="rgb(224,196,39)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (167 samples, 0.16%)</title><rect x="66.6762%" y="501" width="0.1588%" height="15" fill="rgb(205,35,43)" fg:x="70108" fg:w="167"/><text x="66.9262%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (21 samples, 0.02%)</title><rect x="66.8807%" y="373" width="0.0200%" height="15" fill="rgb(228,201,21)" fg:x="70323" fg:w="21"/><text x="67.1307%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (21 samples, 0.02%)</title><rect x="66.8807%" y="357" width="0.0200%" height="15" fill="rgb(237,118,16)" fg:x="70323" fg:w="21"/><text x="67.1307%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.23%)</title><rect x="66.8445%" y="421" width="0.2283%" height="15" fill="rgb(241,17,19)" fg:x="70285" fg:w="240"/><text x="67.0945%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.23%)</title><rect x="66.8445%" y="405" width="0.2283%" height="15" fill="rgb(214,10,25)" fg:x="70285" fg:w="240"/><text x="67.0945%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (226 samples, 0.21%)</title><rect x="66.8578%" y="389" width="0.2149%" height="15" fill="rgb(238,37,29)" fg:x="70299" fg:w="226"/><text x="67.1078%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (181 samples, 0.17%)</title><rect x="66.9006%" y="373" width="0.1721%" height="15" fill="rgb(253,83,25)" fg:x="70344" fg:w="181"/><text x="67.1506%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (181 samples, 0.17%)</title><rect x="66.9006%" y="357" width="0.1721%" height="15" fill="rgb(234,192,12)" fg:x="70344" fg:w="181"/><text x="67.1506%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (255 samples, 0.24%)</title><rect x="66.8350%" y="645" width="0.2425%" height="15" fill="rgb(241,216,45)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (255 samples, 0.24%)</title><rect x="66.8350%" y="629" width="0.2425%" height="15" fill="rgb(242,22,33)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (255 samples, 0.24%)</title><rect x="66.8350%" y="613" width="0.2425%" height="15" fill="rgb(231,105,49)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (255 samples, 0.24%)</title><rect x="66.8350%" y="597" width="0.2425%" height="15" fill="rgb(218,204,15)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="607.50"></text></g><g><title>value_trait::Builder::object (255 samples, 0.24%)</title><rect x="66.8350%" y="581" width="0.2425%" height="15" fill="rgb(235,138,41)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (255 samples, 0.24%)</title><rect x="66.8350%" y="565" width="0.2425%" height="15" fill="rgb(246,0,9)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (255 samples, 0.24%)</title><rect x="66.8350%" y="549" width="0.2425%" height="15" fill="rgb(210,74,4)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (255 samples, 0.24%)</title><rect x="66.8350%" y="533" width="0.2425%" height="15" fill="rgb(250,60,41)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (255 samples, 0.24%)</title><rect x="66.8350%" y="517" width="0.2425%" height="15" fill="rgb(220,115,12)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (255 samples, 0.24%)</title><rect x="66.8350%" y="501" width="0.2425%" height="15" fill="rgb(237,100,13)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="511.50"></text></g><g><title>alloc::alloc::alloc (255 samples, 0.24%)</title><rect x="66.8350%" y="485" width="0.2425%" height="15" fill="rgb(213,55,26)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="495.50"></text></g><g><title>__rg_alloc (255 samples, 0.24%)</title><rect x="66.8350%" y="469" width="0.2425%" height="15" fill="rgb(216,17,4)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (255 samples, 0.24%)</title><rect x="66.8350%" y="453" width="0.2425%" height="15" fill="rgb(220,153,47)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="463.50"></text></g><g><title>rust_alloc (255 samples, 0.24%)</title><rect x="66.8350%" y="437" width="0.2425%" height="15" fill="rgb(215,131,9)" fg:x="70275" fg:w="255"/><text x="67.0850%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="67.0908%" y="501" width="0.0780%" height="15" fill="rgb(233,46,42)" fg:x="70544" fg:w="82"/><text x="67.3408%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="67.0908%" y="485" width="0.0780%" height="15" fill="rgb(226,86,7)" fg:x="70544" fg:w="82"/><text x="67.3408%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="67.0994%" y="469" width="0.0694%" height="15" fill="rgb(239,226,21)" fg:x="70553" fg:w="73"/><text x="67.3494%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (51 samples, 0.05%)</title><rect x="67.1203%" y="453" width="0.0485%" height="15" fill="rgb(244,137,22)" fg:x="70575" fg:w="51"/><text x="67.3703%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (51 samples, 0.05%)</title><rect x="67.1203%" y="437" width="0.0485%" height="15" fill="rgb(211,139,35)" fg:x="70575" fg:w="51"/><text x="67.3703%" y="447.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1157" width="1.7109%" height="15" fill="rgb(214,62,50)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1141" width="1.7109%" height="15" fill="rgb(212,113,44)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1151.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1125" width="1.7109%" height="15" fill="rgb(226,150,43)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1109" width="1.7109%" height="15" fill="rgb(250,71,37)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1119.50"></text></g><g><title>std::panicking::try (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1093" width="1.7109%" height="15" fill="rgb(219,76,19)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1077" width="1.7109%" height="15" fill="rgb(250,39,11)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1087.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1061" width="1.7109%" height="15" fill="rgb(230,64,31)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1045" width="1.7109%" height="15" fill="rgb(208,222,23)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1029" width="1.7109%" height="15" fill="rgb(227,125,18)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1039.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,799 samples, 1.71%)</title><rect x="65.4645%" y="1013" width="1.7109%" height="15" fill="rgb(234,210,9)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1023.50"></text></g><g><title>async_global_executor::reactor::block_on (1,799 samples, 1.71%)</title><rect x="65.4645%" y="997" width="1.7109%" height="15" fill="rgb(217,127,24)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="1007.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,799 samples, 1.71%)</title><rect x="65.4645%" y="981" width="1.7109%" height="15" fill="rgb(239,141,48)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="991.50"></text></g><g><title>async_io::driver::block_on (1,799 samples, 1.71%)</title><rect x="65.4645%" y="965" width="1.7109%" height="15" fill="rgb(227,109,8)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="975.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,799 samples, 1.71%)</title><rect x="65.4645%" y="949" width="1.7109%" height="15" fill="rgb(235,184,23)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,799 samples, 1.71%)</title><rect x="65.4645%" y="933" width="1.7109%" height="15" fill="rgb(227,226,48)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,799 samples, 1.71%)</title><rect x="65.4645%" y="917" width="1.7109%" height="15" fill="rgb(206,150,11)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="927.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,799 samples, 1.71%)</title><rect x="65.4645%" y="901" width="1.7109%" height="15" fill="rgb(254,2,33)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,799 samples, 1.71%)</title><rect x="65.4645%" y="885" width="1.7109%" height="15" fill="rgb(243,160,20)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,799 samples, 1.71%)</title><rect x="65.4645%" y="869" width="1.7109%" height="15" fill="rgb(218,208,30)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="879.50"></text></g><g><title>async_task::runnable::Runnable::run (1,799 samples, 1.71%)</title><rect x="65.4645%" y="853" width="1.7109%" height="15" fill="rgb(224,120,49)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,799 samples, 1.71%)</title><rect x="65.4645%" y="837" width="1.7109%" height="15" fill="rgb(246,12,2)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,799 samples, 1.71%)</title><rect x="65.4645%" y="821" width="1.7109%" height="15" fill="rgb(236,117,3)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,799 samples, 1.71%)</title><rect x="65.4645%" y="805" width="1.7109%" height="15" fill="rgb(216,128,52)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="815.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,799 samples, 1.71%)</title><rect x="65.4645%" y="789" width="1.7109%" height="15" fill="rgb(246,145,19)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="799.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,799 samples, 1.71%)</title><rect x="65.4645%" y="773" width="1.7109%" height="15" fill="rgb(222,11,46)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,799 samples, 1.71%)</title><rect x="65.4645%" y="757" width="1.7109%" height="15" fill="rgb(245,82,36)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,799 samples, 1.71%)</title><rect x="65.4645%" y="741" width="1.7109%" height="15" fill="rgb(250,73,51)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,799 samples, 1.71%)</title><rect x="65.4645%" y="725" width="1.7109%" height="15" fill="rgb(221,189,23)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,799 samples, 1.71%)</title><rect x="65.4645%" y="709" width="1.7109%" height="15" fill="rgb(210,33,7)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,799 samples, 1.71%)</title><rect x="65.4645%" y="693" width="1.7109%" height="15" fill="rgb(210,107,22)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,799 samples, 1.71%)</title><rect x="65.4645%" y="677" width="1.7109%" height="15" fill="rgb(222,116,37)" fg:x="68834" fg:w="1799"/><text x="65.7145%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (358 samples, 0.34%)</title><rect x="66.8350%" y="661" width="0.3405%" height="15" fill="rgb(254,17,48)" fg:x="70275" fg:w="358"/><text x="67.0850%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (103 samples, 0.10%)</title><rect x="67.0775%" y="645" width="0.0980%" height="15" fill="rgb(224,36,32)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (103 samples, 0.10%)</title><rect x="67.0775%" y="629" width="0.0980%" height="15" fill="rgb(232,90,46)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (103 samples, 0.10%)</title><rect x="67.0775%" y="613" width="0.0980%" height="15" fill="rgb(241,66,40)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103 samples, 0.10%)</title><rect x="67.0775%" y="597" width="0.0980%" height="15" fill="rgb(249,184,29)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.10%)</title><rect x="67.0775%" y="581" width="0.0980%" height="15" fill="rgb(231,181,1)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="591.50"></text></g><g><title>alloc::alloc::alloc (103 samples, 0.10%)</title><rect x="67.0775%" y="565" width="0.0980%" height="15" fill="rgb(224,94,2)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="575.50"></text></g><g><title>__rg_alloc (103 samples, 0.10%)</title><rect x="67.0775%" y="549" width="0.0980%" height="15" fill="rgb(229,170,15)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (103 samples, 0.10%)</title><rect x="67.0775%" y="533" width="0.0980%" height="15" fill="rgb(240,127,35)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="543.50"></text></g><g><title>rust_alloc (103 samples, 0.10%)</title><rect x="67.0775%" y="517" width="0.0980%" height="15" fill="rgb(248,196,34)" fg:x="70530" fg:w="103"/><text x="67.3275%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="67.3647%" y="901" width="0.0143%" height="15" fill="rgb(236,137,7)" fg:x="70832" fg:w="15"/><text x="67.6147%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="67.3647%" y="885" width="0.0143%" height="15" fill="rgb(235,127,16)" fg:x="70832" fg:w="15"/><text x="67.6147%" y="895.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="67.3647%" y="933" width="0.0152%" height="15" fill="rgb(250,192,54)" fg:x="70832" fg:w="16"/><text x="67.6147%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (16 samples, 0.02%)</title><rect x="67.3647%" y="917" width="0.0152%" height="15" fill="rgb(218,98,20)" fg:x="70832" fg:w="16"/><text x="67.6147%" y="927.50"></text></g><g><title>__x64_sys_futex (50 samples, 0.05%)</title><rect x="67.4199%" y="773" width="0.0476%" height="15" fill="rgb(230,176,47)" fg:x="70890" fg:w="50"/><text x="67.6699%" y="783.50"></text></g><g><title>do_futex (42 samples, 0.04%)</title><rect x="67.4275%" y="757" width="0.0399%" height="15" fill="rgb(244,2,33)" fg:x="70898" fg:w="42"/><text x="67.6775%" y="767.50"></text></g><g><title>futex_wake (36 samples, 0.03%)</title><rect x="67.4332%" y="741" width="0.0342%" height="15" fill="rgb(231,100,17)" fg:x="70904" fg:w="36"/><text x="67.6832%" y="751.50"></text></g><g><title>syscall_exit_to_user_mode (104 samples, 0.10%)</title><rect x="67.4694%" y="773" width="0.0989%" height="15" fill="rgb(245,23,12)" fg:x="70942" fg:w="104"/><text x="67.7194%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (169 samples, 0.16%)</title><rect x="67.4161%" y="805" width="0.1607%" height="15" fill="rgb(249,55,22)" fg:x="70886" fg:w="169"/><text x="67.6661%" y="815.50"></text></g><g><title>do_syscall_64 (168 samples, 0.16%)</title><rect x="67.4170%" y="789" width="0.1598%" height="15" fill="rgb(207,134,9)" fg:x="70887" fg:w="168"/><text x="67.6670%" y="799.50"></text></g><g><title>core::mem::drop (197 samples, 0.19%)</title><rect x="67.3914%" y="933" width="0.1874%" height="15" fill="rgb(218,134,0)" fg:x="70860" fg:w="197"/><text x="67.6414%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (197 samples, 0.19%)</title><rect x="67.3914%" y="917" width="0.1874%" height="15" fill="rgb(213,212,33)" fg:x="70860" fg:w="197"/><text x="67.6414%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (196 samples, 0.19%)</title><rect x="67.3923%" y="901" width="0.1864%" height="15" fill="rgb(252,106,18)" fg:x="70861" fg:w="196"/><text x="67.6423%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (196 samples, 0.19%)</title><rect x="67.3923%" y="885" width="0.1864%" height="15" fill="rgb(208,126,42)" fg:x="70861" fg:w="196"/><text x="67.6423%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (195 samples, 0.19%)</title><rect x="67.3933%" y="869" width="0.1855%" height="15" fill="rgb(246,175,29)" fg:x="70862" fg:w="195"/><text x="67.6433%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (195 samples, 0.19%)</title><rect x="67.3933%" y="853" width="0.1855%" height="15" fill="rgb(215,13,50)" fg:x="70862" fg:w="195"/><text x="67.6433%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (195 samples, 0.19%)</title><rect x="67.3933%" y="837" width="0.1855%" height="15" fill="rgb(216,172,15)" fg:x="70862" fg:w="195"/><text x="67.6433%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (182 samples, 0.17%)</title><rect x="67.4056%" y="821" width="0.1731%" height="15" fill="rgb(212,103,13)" fg:x="70875" fg:w="182"/><text x="67.6556%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (47 samples, 0.04%)</title><rect x="67.5787%" y="933" width="0.0447%" height="15" fill="rgb(231,171,36)" fg:x="71057" fg:w="47"/><text x="67.8287%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (46 samples, 0.04%)</title><rect x="67.5797%" y="917" width="0.0437%" height="15" fill="rgb(250,123,20)" fg:x="71058" fg:w="46"/><text x="67.8297%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="67.5797%" y="901" width="0.0437%" height="15" fill="rgb(212,53,50)" fg:x="71058" fg:w="46"/><text x="67.8297%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (45 samples, 0.04%)</title><rect x="67.5806%" y="885" width="0.0428%" height="15" fill="rgb(243,54,12)" fg:x="71059" fg:w="45"/><text x="67.8306%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (43 samples, 0.04%)</title><rect x="67.5825%" y="869" width="0.0409%" height="15" fill="rgb(234,101,34)" fg:x="71061" fg:w="43"/><text x="67.8325%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (43 samples, 0.04%)</title><rect x="67.5825%" y="853" width="0.0409%" height="15" fill="rgb(254,67,22)" fg:x="71061" fg:w="43"/><text x="67.8325%" y="863.50"></text></g><g><title>__GI___lll_lock_wake (13 samples, 0.01%)</title><rect x="67.6111%" y="837" width="0.0124%" height="15" fill="rgb(250,35,47)" fg:x="71091" fg:w="13"/><text x="67.8611%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="67.6120%" y="821" width="0.0114%" height="15" fill="rgb(226,126,38)" fg:x="71092" fg:w="12"/><text x="67.8620%" y="831.50"></text></g><g><title>do_syscall_64 (12 samples, 0.01%)</title><rect x="67.6120%" y="805" width="0.0114%" height="15" fill="rgb(216,138,53)" fg:x="71092" fg:w="12"/><text x="67.8620%" y="815.50"></text></g><g><title>__perf_event_task_sched_out (43 samples, 0.04%)</title><rect x="67.8669%" y="709" width="0.0409%" height="15" fill="rgb(246,199,43)" fg:x="71360" fg:w="43"/><text x="68.1169%" y="719.50"></text></g><g><title>update_cfs_group (12 samples, 0.01%)</title><rect x="67.9591%" y="677" width="0.0114%" height="15" fill="rgb(232,125,11)" fg:x="71457" fg:w="12"/><text x="68.2091%" y="687.50"></text></g><g><title>cpuacct_charge (22 samples, 0.02%)</title><rect x="68.0010%" y="661" width="0.0209%" height="15" fill="rgb(218,219,45)" fg:x="71501" fg:w="22"/><text x="68.2510%" y="671.50"></text></g><g><title>update_curr (60 samples, 0.06%)</title><rect x="67.9706%" y="677" width="0.0571%" height="15" fill="rgb(216,102,54)" fg:x="71469" fg:w="60"/><text x="68.2206%" y="687.50"></text></g><g><title>dequeue_entity (118 samples, 0.11%)</title><rect x="67.9411%" y="693" width="0.1122%" height="15" fill="rgb(250,228,7)" fg:x="71438" fg:w="118"/><text x="68.1911%" y="703.50"></text></g><g><title>update_load_avg (27 samples, 0.03%)</title><rect x="68.0276%" y="677" width="0.0257%" height="15" fill="rgb(226,125,25)" fg:x="71529" fg:w="27"/><text x="68.2776%" y="687.50"></text></g><g><title>__update_load_avg_se (12 samples, 0.01%)</title><rect x="68.0419%" y="661" width="0.0114%" height="15" fill="rgb(224,165,27)" fg:x="71544" fg:w="12"/><text x="68.2919%" y="671.50"></text></g><g><title>dequeue_task_fair (151 samples, 0.14%)</title><rect x="67.9125%" y="709" width="0.1436%" height="15" fill="rgb(233,86,3)" fg:x="71408" fg:w="151"/><text x="68.1625%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (43 samples, 0.04%)</title><rect x="68.0875%" y="677" width="0.0409%" height="15" fill="rgb(228,116,20)" fg:x="71592" fg:w="43"/><text x="68.3375%" y="687.50"></text></g><g><title>native_write_msr (41 samples, 0.04%)</title><rect x="68.0894%" y="661" width="0.0390%" height="15" fill="rgb(209,192,17)" fg:x="71594" fg:w="41"/><text x="68.3394%" y="671.50"></text></g><g><title>__perf_event_task_sched_in (48 samples, 0.05%)</title><rect x="68.0856%" y="693" width="0.0457%" height="15" fill="rgb(224,88,34)" fg:x="71590" fg:w="48"/><text x="68.3356%" y="703.50"></text></g><g><title>finish_task_switch.isra.0 (80 samples, 0.08%)</title><rect x="68.0561%" y="709" width="0.0761%" height="15" fill="rgb(233,38,6)" fg:x="71559" fg:w="80"/><text x="68.3061%" y="719.50"></text></g><g><title>pick_next_task_fair (17 samples, 0.02%)</title><rect x="68.1322%" y="709" width="0.0162%" height="15" fill="rgb(212,59,30)" fg:x="71639" fg:w="17"/><text x="68.3822%" y="719.50"></text></g><g><title>newidle_balance (13 samples, 0.01%)</title><rect x="68.1360%" y="693" width="0.0124%" height="15" fill="rgb(213,80,3)" fg:x="71643" fg:w="13"/><text x="68.3860%" y="703.50"></text></g><g><title>iterate_groups (12 samples, 0.01%)</title><rect x="68.1655%" y="693" width="0.0114%" height="15" fill="rgb(251,178,7)" fg:x="71674" fg:w="12"/><text x="68.4155%" y="703.50"></text></g><g><title>psi_group_change (60 samples, 0.06%)</title><rect x="68.1779%" y="693" width="0.0571%" height="15" fill="rgb(213,154,26)" fg:x="71687" fg:w="60"/><text x="68.4279%" y="703.50"></text></g><g><title>psi_task_switch (88 samples, 0.08%)</title><rect x="68.1560%" y="709" width="0.0837%" height="15" fill="rgb(238,165,49)" fg:x="71664" fg:w="88"/><text x="68.4060%" y="719.50"></text></g><g><title>put_prev_task_fair (20 samples, 0.02%)</title><rect x="68.2397%" y="709" width="0.0190%" height="15" fill="rgb(248,91,46)" fg:x="71752" fg:w="20"/><text x="68.4897%" y="719.50"></text></g><g><title>put_prev_entity (11 samples, 0.01%)</title><rect x="68.2483%" y="693" width="0.0105%" height="15" fill="rgb(244,21,52)" fg:x="71761" fg:w="11"/><text x="68.4983%" y="703.50"></text></g><g><title>futex_wait_queue (492 samples, 0.47%)</title><rect x="67.8222%" y="757" width="0.4679%" height="15" fill="rgb(247,122,20)" fg:x="71313" fg:w="492"/><text x="68.0722%" y="767.50"></text></g><g><title>schedule (481 samples, 0.46%)</title><rect x="67.8327%" y="741" width="0.4575%" height="15" fill="rgb(218,27,9)" fg:x="71324" fg:w="481"/><text x="68.0827%" y="751.50"></text></g><g><title>__schedule (474 samples, 0.45%)</title><rect x="67.8393%" y="725" width="0.4508%" height="15" fill="rgb(246,7,6)" fg:x="71331" fg:w="474"/><text x="68.0893%" y="735.50"></text></g><g><title>update_rq_clock (26 samples, 0.02%)</title><rect x="68.2654%" y="709" width="0.0247%" height="15" fill="rgb(227,135,54)" fg:x="71779" fg:w="26"/><text x="68.5154%" y="719.50"></text></g><g><title>futex_get_value_locked (14 samples, 0.01%)</title><rect x="68.2920%" y="741" width="0.0133%" height="15" fill="rgb(247,14,11)" fg:x="71807" fg:w="14"/><text x="68.5420%" y="751.50"></text></g><g><title>__get_user_nocheck_4 (11 samples, 0.01%)</title><rect x="68.2949%" y="725" width="0.0105%" height="15" fill="rgb(206,149,34)" fg:x="71810" fg:w="11"/><text x="68.5449%" y="735.50"></text></g><g><title>futex_q_lock (35 samples, 0.03%)</title><rect x="68.3053%" y="741" width="0.0333%" height="15" fill="rgb(227,228,4)" fg:x="71821" fg:w="35"/><text x="68.5553%" y="751.50"></text></g><g><title>futex_hash (11 samples, 0.01%)</title><rect x="68.3282%" y="725" width="0.0105%" height="15" fill="rgb(238,218,28)" fg:x="71845" fg:w="11"/><text x="68.5782%" y="735.50"></text></g><g><title>__x64_sys_futex (592 samples, 0.56%)</title><rect x="67.7784%" y="805" width="0.5630%" height="15" fill="rgb(252,86,40)" fg:x="71267" fg:w="592"/><text x="68.0284%" y="815.50"></text></g><g><title>do_futex (579 samples, 0.55%)</title><rect x="67.7908%" y="789" width="0.5507%" height="15" fill="rgb(251,225,11)" fg:x="71280" fg:w="579"/><text x="68.0408%" y="799.50"></text></g><g><title>futex_wait (568 samples, 0.54%)</title><rect x="67.8013%" y="773" width="0.5402%" height="15" fill="rgb(206,46,49)" fg:x="71291" fg:w="568"/><text x="68.0513%" y="783.50"></text></g><g><title>futex_wait_setup (54 samples, 0.05%)</title><rect x="68.2901%" y="757" width="0.0514%" height="15" fill="rgb(245,128,24)" fg:x="71805" fg:w="54"/><text x="68.5401%" y="767.50"></text></g><g><title>__rseq_handle_notify_resume (35 samples, 0.03%)</title><rect x="68.4527%" y="773" width="0.0333%" height="15" fill="rgb(219,177,34)" fg:x="71976" fg:w="35"/><text x="68.7027%" y="783.50"></text></g><g><title>exit_to_user_mode_prepare (76 samples, 0.07%)</title><rect x="68.4252%" y="789" width="0.0723%" height="15" fill="rgb(218,60,48)" fg:x="71947" fg:w="76"/><text x="68.6752%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (184 samples, 0.17%)</title><rect x="68.3434%" y="805" width="0.1750%" height="15" fill="rgb(221,11,5)" fg:x="71861" fg:w="184"/><text x="68.5934%" y="815.50"></text></g><g><title>syscall_exit_work (22 samples, 0.02%)</title><rect x="68.4974%" y="789" width="0.0209%" height="15" fill="rgb(220,148,13)" fg:x="72023" fg:w="22"/><text x="68.7474%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (805 samples, 0.77%)</title><rect x="67.7623%" y="837" width="0.7656%" height="15" fill="rgb(210,16,3)" fg:x="71250" fg:w="805"/><text x="68.0123%" y="847.50"></text></g><g><title>do_syscall_64 (802 samples, 0.76%)</title><rect x="67.7651%" y="821" width="0.7627%" height="15" fill="rgb(236,80,2)" fg:x="71253" fg:w="802"/><text x="68.0151%" y="831.50"></text></g><g><title>__GI___lll_lock_wait (869 samples, 0.83%)</title><rect x="67.7071%" y="853" width="0.8265%" height="15" fill="rgb(239,129,19)" fg:x="71192" fg:w="869"/><text x="67.9571%" y="863.50"></text></g><g><title>event_listener::Inner::lock (958 samples, 0.91%)</title><rect x="67.6244%" y="933" width="0.9111%" height="15" fill="rgb(220,106,35)" fg:x="71105" fg:w="958"/><text x="67.8744%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (957 samples, 0.91%)</title><rect x="67.6253%" y="917" width="0.9102%" height="15" fill="rgb(252,139,45)" fg:x="71106" fg:w="957"/><text x="67.8753%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (953 samples, 0.91%)</title><rect x="67.6291%" y="901" width="0.9064%" height="15" fill="rgb(229,8,36)" fg:x="71110" fg:w="953"/><text x="67.8791%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (944 samples, 0.90%)</title><rect x="67.6377%" y="885" width="0.8978%" height="15" fill="rgb(230,126,33)" fg:x="71119" fg:w="944"/><text x="67.8877%" y="895.50"></text></g><g><title>___pthread_mutex_lock (944 samples, 0.90%)</title><rect x="67.6377%" y="869" width="0.8978%" height="15" fill="rgb(239,140,21)" fg:x="71119" fg:w="944"/><text x="67.8877%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,255 samples, 1.19%)</title><rect x="67.3590%" y="949" width="1.1936%" height="15" fill="rgb(254,104,9)" fg:x="70826" fg:w="1255"/><text x="67.6090%" y="959.50"></text></g><g><title>event_listener::List::remove (18 samples, 0.02%)</title><rect x="68.5355%" y="933" width="0.0171%" height="15" fill="rgb(239,52,14)" fg:x="72063" fg:w="18"/><text x="68.7855%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="68.5383%" y="917" width="0.0143%" height="15" fill="rgb(208,227,44)" fg:x="72066" fg:w="15"/><text x="68.7883%" y="927.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="68.5383%" y="901" width="0.0143%" height="15" fill="rgb(246,18,19)" fg:x="72066" fg:w="15"/><text x="68.7883%" y="911.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="68.5383%" y="885" width="0.0143%" height="15" fill="rgb(235,228,25)" fg:x="72066" fg:w="15"/><text x="68.7883%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (45 samples, 0.04%)</title><rect x="68.5773%" y="933" width="0.0428%" height="15" fill="rgb(240,156,20)" fg:x="72107" fg:w="45"/><text x="68.8273%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (64 samples, 0.06%)</title><rect x="68.7390%" y="917" width="0.0609%" height="15" fill="rgb(224,8,20)" fg:x="72277" fg:w="64"/><text x="68.9890%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (61 samples, 0.06%)</title><rect x="68.7419%" y="901" width="0.0580%" height="15" fill="rgb(214,12,52)" fg:x="72280" fg:w="61"/><text x="68.9919%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (61 samples, 0.06%)</title><rect x="68.7419%" y="885" width="0.0580%" height="15" fill="rgb(211,220,47)" fg:x="72280" fg:w="61"/><text x="68.9919%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (61 samples, 0.06%)</title><rect x="68.7419%" y="869" width="0.0580%" height="15" fill="rgb(250,173,5)" fg:x="72280" fg:w="61"/><text x="68.9919%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (232 samples, 0.22%)</title><rect x="68.8075%" y="917" width="0.2206%" height="15" fill="rgb(250,125,52)" fg:x="72349" fg:w="232"/><text x="69.0575%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (232 samples, 0.22%)</title><rect x="68.8075%" y="901" width="0.2206%" height="15" fill="rgb(209,133,18)" fg:x="72349" fg:w="232"/><text x="69.0575%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (449 samples, 0.43%)</title><rect x="69.0281%" y="917" width="0.4270%" height="15" fill="rgb(216,173,22)" fg:x="72581" fg:w="449"/><text x="69.2781%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (448 samples, 0.43%)</title><rect x="69.0291%" y="901" width="0.4261%" height="15" fill="rgb(205,3,22)" fg:x="72582" fg:w="448"/><text x="69.2791%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (888 samples, 0.84%)</title><rect x="68.6201%" y="933" width="0.8445%" height="15" fill="rgb(248,22,20)" fg:x="72152" fg:w="888"/><text x="68.8701%" y="943.50"></text></g><g><title>ttwu_do_activate (11 samples, 0.01%)</title><rect x="69.4894%" y="693" width="0.0105%" height="15" fill="rgb(233,6,29)" fg:x="73066" fg:w="11"/><text x="69.7394%" y="703.50"></text></g><g><title>enqueue_task (11 samples, 0.01%)</title><rect x="69.4894%" y="677" width="0.0105%" height="15" fill="rgb(240,22,54)" fg:x="73066" fg:w="11"/><text x="69.7394%" y="687.50"></text></g><g><title>__x64_sys_futex (25 samples, 0.02%)</title><rect x="69.4808%" y="773" width="0.0238%" height="15" fill="rgb(231,133,32)" fg:x="73057" fg:w="25"/><text x="69.7308%" y="783.50"></text></g><g><title>do_futex (24 samples, 0.02%)</title><rect x="69.4818%" y="757" width="0.0228%" height="15" fill="rgb(248,193,4)" fg:x="73058" fg:w="24"/><text x="69.7318%" y="767.50"></text></g><g><title>futex_wake (24 samples, 0.02%)</title><rect x="69.4818%" y="741" width="0.0228%" height="15" fill="rgb(211,178,46)" fg:x="73058" fg:w="24"/><text x="69.7318%" y="751.50"></text></g><g><title>wake_up_q (17 samples, 0.02%)</title><rect x="69.4884%" y="725" width="0.0162%" height="15" fill="rgb(224,5,42)" fg:x="73065" fg:w="17"/><text x="69.7384%" y="735.50"></text></g><g><title>try_to_wake_up (17 samples, 0.02%)</title><rect x="69.4884%" y="709" width="0.0162%" height="15" fill="rgb(239,176,25)" fg:x="73065" fg:w="17"/><text x="69.7384%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (12 samples, 0.01%)</title><rect x="69.5046%" y="773" width="0.0114%" height="15" fill="rgb(245,187,50)" fg:x="73082" fg:w="12"/><text x="69.7546%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (47 samples, 0.04%)</title><rect x="69.4742%" y="917" width="0.0447%" height="15" fill="rgb(248,24,15)" fg:x="73050" fg:w="47"/><text x="69.7242%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (46 samples, 0.04%)</title><rect x="69.4751%" y="901" width="0.0437%" height="15" fill="rgb(205,166,13)" fg:x="73051" fg:w="46"/><text x="69.7251%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="69.4751%" y="885" width="0.0437%" height="15" fill="rgb(208,114,23)" fg:x="73051" fg:w="46"/><text x="69.7251%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (46 samples, 0.04%)</title><rect x="69.4751%" y="869" width="0.0437%" height="15" fill="rgb(239,127,18)" fg:x="73051" fg:w="46"/><text x="69.7251%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (46 samples, 0.04%)</title><rect x="69.4751%" y="853" width="0.0437%" height="15" fill="rgb(219,154,28)" fg:x="73051" fg:w="46"/><text x="69.7251%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (46 samples, 0.04%)</title><rect x="69.4751%" y="837" width="0.0437%" height="15" fill="rgb(225,157,23)" fg:x="73051" fg:w="46"/><text x="69.7251%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (44 samples, 0.04%)</title><rect x="69.4770%" y="821" width="0.0418%" height="15" fill="rgb(219,8,6)" fg:x="73053" fg:w="44"/><text x="69.7270%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (41 samples, 0.04%)</title><rect x="69.4799%" y="805" width="0.0390%" height="15" fill="rgb(212,47,6)" fg:x="73056" fg:w="41"/><text x="69.7299%" y="815.50"></text></g><g><title>do_syscall_64 (41 samples, 0.04%)</title><rect x="69.4799%" y="789" width="0.0390%" height="15" fill="rgb(224,190,4)" fg:x="73056" fg:w="41"/><text x="69.7299%" y="799.50"></text></g><g><title>event_listener::Inner::lock (11 samples, 0.01%)</title><rect x="69.5265%" y="917" width="0.0105%" height="15" fill="rgb(239,183,29)" fg:x="73105" fg:w="11"/><text x="69.7765%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="69.5265%" y="901" width="0.0105%" height="15" fill="rgb(213,57,7)" fg:x="73105" fg:w="11"/><text x="69.7765%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="69.5265%" y="885" width="0.0105%" height="15" fill="rgb(216,148,1)" fg:x="73105" fg:w="11"/><text x="69.7765%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="69.5265%" y="869" width="0.0105%" height="15" fill="rgb(236,182,29)" fg:x="73105" fg:w="11"/><text x="69.7765%" y="879.50"></text></g><g><title>___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="69.5265%" y="853" width="0.0105%" height="15" fill="rgb(244,120,48)" fg:x="73105" fg:w="11"/><text x="69.7765%" y="863.50"></text></g><g><title>ttwu_do_activate (14 samples, 0.01%)</title><rect x="69.5617%" y="565" width="0.0133%" height="15" fill="rgb(206,71,34)" fg:x="73142" fg:w="14"/><text x="69.8117%" y="575.50"></text></g><g><title>enqueue_task (14 samples, 0.01%)</title><rect x="69.5617%" y="549" width="0.0133%" height="15" fill="rgb(242,32,6)" fg:x="73142" fg:w="14"/><text x="69.8117%" y="559.50"></text></g><g><title>__x64_sys_futex (34 samples, 0.03%)</title><rect x="69.5474%" y="645" width="0.0323%" height="15" fill="rgb(241,35,3)" fg:x="73127" fg:w="34"/><text x="69.7974%" y="655.50"></text></g><g><title>do_futex (34 samples, 0.03%)</title><rect x="69.5474%" y="629" width="0.0323%" height="15" fill="rgb(222,62,19)" fg:x="73127" fg:w="34"/><text x="69.7974%" y="639.50"></text></g><g><title>futex_wake (34 samples, 0.03%)</title><rect x="69.5474%" y="613" width="0.0323%" height="15" fill="rgb(223,110,41)" fg:x="73127" fg:w="34"/><text x="69.7974%" y="623.50"></text></g><g><title>wake_up_q (24 samples, 0.02%)</title><rect x="69.5569%" y="597" width="0.0228%" height="15" fill="rgb(208,224,4)" fg:x="73137" fg:w="24"/><text x="69.8069%" y="607.50"></text></g><g><title>try_to_wake_up (24 samples, 0.02%)</title><rect x="69.5569%" y="581" width="0.0228%" height="15" fill="rgb(241,137,19)" fg:x="73137" fg:w="24"/><text x="69.8069%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (43 samples, 0.04%)</title><rect x="69.5436%" y="741" width="0.0409%" height="15" fill="rgb(244,24,17)" fg:x="73123" fg:w="43"/><text x="69.7936%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (43 samples, 0.04%)</title><rect x="69.5436%" y="725" width="0.0409%" height="15" fill="rgb(245,178,49)" fg:x="73123" fg:w="43"/><text x="69.7936%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (43 samples, 0.04%)</title><rect x="69.5436%" y="709" width="0.0409%" height="15" fill="rgb(219,160,38)" fg:x="73123" fg:w="43"/><text x="69.7936%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (43 samples, 0.04%)</title><rect x="69.5436%" y="693" width="0.0409%" height="15" fill="rgb(228,137,14)" fg:x="73123" fg:w="43"/><text x="69.7936%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (39 samples, 0.04%)</title><rect x="69.5474%" y="677" width="0.0371%" height="15" fill="rgb(237,134,11)" fg:x="73127" fg:w="39"/><text x="69.7974%" y="687.50"></text></g><g><title>do_syscall_64 (39 samples, 0.04%)</title><rect x="69.5474%" y="661" width="0.0371%" height="15" fill="rgb(211,126,44)" fg:x="73127" fg:w="39"/><text x="69.7974%" y="671.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (49 samples, 0.05%)</title><rect x="69.5398%" y="789" width="0.0466%" height="15" fill="rgb(226,171,33)" fg:x="73119" fg:w="49"/><text x="69.7898%" y="799.50"></text></g><g><title>parking::Unparker::unpark (48 samples, 0.05%)</title><rect x="69.5407%" y="773" width="0.0457%" height="15" fill="rgb(253,99,13)" fg:x="73120" fg:w="48"/><text x="69.7907%" y="783.50"></text></g><g><title>parking::Inner::unpark (48 samples, 0.05%)</title><rect x="69.5407%" y="757" width="0.0457%" height="15" fill="rgb(244,48,7)" fg:x="73120" fg:w="48"/><text x="69.7907%" y="767.50"></text></g><g><title>async_executor::State::notify (54 samples, 0.05%)</title><rect x="69.5379%" y="837" width="0.0514%" height="15" fill="rgb(244,217,54)" fg:x="73117" fg:w="54"/><text x="69.7879%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (52 samples, 0.05%)</title><rect x="69.5398%" y="821" width="0.0495%" height="15" fill="rgb(224,15,18)" fg:x="73119" fg:w="52"/><text x="69.7898%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (52 samples, 0.05%)</title><rect x="69.5398%" y="805" width="0.0495%" height="15" fill="rgb(244,99,12)" fg:x="73119" fg:w="52"/><text x="69.7898%" y="815.50"></text></g><g><title>event_listener::List::notify (64 samples, 0.06%)</title><rect x="69.5369%" y="917" width="0.0609%" height="15" fill="rgb(233,226,8)" fg:x="73116" fg:w="64"/><text x="69.7869%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (64 samples, 0.06%)</title><rect x="69.5369%" y="901" width="0.0609%" height="15" fill="rgb(229,211,3)" fg:x="73116" fg:w="64"/><text x="69.7869%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (64 samples, 0.06%)</title><rect x="69.5369%" y="885" width="0.0609%" height="15" fill="rgb(216,140,21)" fg:x="73116" fg:w="64"/><text x="69.7869%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (63 samples, 0.06%)</title><rect x="69.5379%" y="869" width="0.0599%" height="15" fill="rgb(234,122,30)" fg:x="73117" fg:w="63"/><text x="69.7879%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (63 samples, 0.06%)</title><rect x="69.5379%" y="853" width="0.0599%" height="15" fill="rgb(236,25,46)" fg:x="73117" fg:w="63"/><text x="69.7879%" y="863.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,990 samples, 1.89%)</title><rect x="68.5526%" y="949" width="1.8926%" height="15" fill="rgb(217,52,54)" fg:x="72081" fg:w="1990"/><text x="68.8026%" y="959.50">a..</text></g><g><title>event_listener::Event::notify (1,031 samples, 0.98%)</title><rect x="69.4647%" y="933" width="0.9805%" height="15" fill="rgb(222,29,26)" fg:x="73040" fg:w="1031"/><text x="69.7147%" y="943.50"></text></g><g><title>event_listener::full_fence (891 samples, 0.85%)</title><rect x="69.5978%" y="917" width="0.8474%" height="15" fill="rgb(216,177,29)" fg:x="73180" fg:w="891"/><text x="69.8478%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (891 samples, 0.85%)</title><rect x="69.5978%" y="901" width="0.8474%" height="15" fill="rgb(247,136,51)" fg:x="73180" fg:w="891"/><text x="69.8478%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (891 samples, 0.85%)</title><rect x="69.5978%" y="885" width="0.8474%" height="15" fill="rgb(231,47,47)" fg:x="73180" fg:w="891"/><text x="69.8478%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (891 samples, 0.85%)</title><rect x="69.5978%" y="869" width="0.8474%" height="15" fill="rgb(211,192,36)" fg:x="73180" fg:w="891"/><text x="69.8478%" y="879.50"></text></g><g><title>__x64_sys_futex (37 samples, 0.04%)</title><rect x="70.5298%" y="757" width="0.0352%" height="15" fill="rgb(229,156,32)" fg:x="74160" fg:w="37"/><text x="70.7798%" y="767.50"></text></g><g><title>do_futex (29 samples, 0.03%)</title><rect x="70.5374%" y="741" width="0.0276%" height="15" fill="rgb(248,213,20)" fg:x="74168" fg:w="29"/><text x="70.7874%" y="751.50"></text></g><g><title>futex_wake (27 samples, 0.03%)</title><rect x="70.5393%" y="725" width="0.0257%" height="15" fill="rgb(217,64,7)" fg:x="74170" fg:w="27"/><text x="70.7893%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (74 samples, 0.07%)</title><rect x="70.5660%" y="757" width="0.0704%" height="15" fill="rgb(232,142,8)" fg:x="74198" fg:w="74"/><text x="70.8160%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (126 samples, 0.12%)</title><rect x="70.5232%" y="789" width="0.1198%" height="15" fill="rgb(224,92,44)" fg:x="74153" fg:w="126"/><text x="70.7732%" y="799.50"></text></g><g><title>do_syscall_64 (122 samples, 0.12%)</title><rect x="70.5270%" y="773" width="0.1160%" height="15" fill="rgb(214,169,17)" fg:x="74157" fg:w="122"/><text x="70.7770%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (188 samples, 0.18%)</title><rect x="70.4680%" y="901" width="0.1788%" height="15" fill="rgb(210,59,37)" fg:x="74095" fg:w="188"/><text x="70.7180%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (188 samples, 0.18%)</title><rect x="70.4680%" y="885" width="0.1788%" height="15" fill="rgb(214,116,48)" fg:x="74095" fg:w="188"/><text x="70.7180%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (188 samples, 0.18%)</title><rect x="70.4680%" y="869" width="0.1788%" height="15" fill="rgb(244,191,6)" fg:x="74095" fg:w="188"/><text x="70.7180%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (186 samples, 0.18%)</title><rect x="70.4699%" y="853" width="0.1769%" height="15" fill="rgb(241,50,52)" fg:x="74097" fg:w="186"/><text x="70.7199%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (185 samples, 0.18%)</title><rect x="70.4709%" y="837" width="0.1759%" height="15" fill="rgb(236,75,39)" fg:x="74098" fg:w="185"/><text x="70.7209%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (185 samples, 0.18%)</title><rect x="70.4709%" y="821" width="0.1759%" height="15" fill="rgb(236,99,0)" fg:x="74098" fg:w="185"/><text x="70.7209%" y="831.50"></text></g><g><title>__GI___lll_lock_wake (145 samples, 0.14%)</title><rect x="70.5089%" y="805" width="0.1379%" height="15" fill="rgb(207,202,15)" fg:x="74138" fg:w="145"/><text x="70.7589%" y="815.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="70.6478%" y="869" width="0.0124%" height="15" fill="rgb(233,207,14)" fg:x="74284" fg:w="13"/><text x="70.8978%" y="879.50"></text></g><g><title>std::sync::poison::Flag::borrow (13 samples, 0.01%)</title><rect x="70.6478%" y="853" width="0.0124%" height="15" fill="rgb(226,27,51)" fg:x="74284" fg:w="13"/><text x="70.8978%" y="863.50"></text></g><g><title>std::sync::poison::Flag::get (13 samples, 0.01%)</title><rect x="70.6478%" y="837" width="0.0124%" height="15" fill="rgb(206,104,42)" fg:x="74284" fg:w="13"/><text x="70.8978%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (13 samples, 0.01%)</title><rect x="70.6478%" y="821" width="0.0124%" height="15" fill="rgb(212,225,4)" fg:x="74284" fg:w="13"/><text x="70.8978%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="70.6478%" y="805" width="0.0124%" height="15" fill="rgb(233,96,42)" fg:x="74284" fg:w="13"/><text x="70.8978%" y="815.50"></text></g><g><title>__x64_sys_futex (32 samples, 0.03%)</title><rect x="70.7353%" y="773" width="0.0304%" height="15" fill="rgb(229,21,32)" fg:x="74376" fg:w="32"/><text x="70.9853%" y="783.50"></text></g><g><title>do_futex (29 samples, 0.03%)</title><rect x="70.7381%" y="757" width="0.0276%" height="15" fill="rgb(226,216,24)" fg:x="74379" fg:w="29"/><text x="70.9881%" y="767.50"></text></g><g><title>futex_wait (28 samples, 0.03%)</title><rect x="70.7391%" y="741" width="0.0266%" height="15" fill="rgb(221,163,17)" fg:x="74380" fg:w="28"/><text x="70.9891%" y="751.50"></text></g><g><title>futex_wait_setup (24 samples, 0.02%)</title><rect x="70.7429%" y="725" width="0.0228%" height="15" fill="rgb(216,216,42)" fg:x="74384" fg:w="24"/><text x="70.9929%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.02%)</title><rect x="70.7657%" y="773" width="0.0219%" height="15" fill="rgb(240,118,7)" fg:x="74408" fg:w="23"/><text x="71.0157%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (59 samples, 0.06%)</title><rect x="70.7324%" y="805" width="0.0561%" height="15" fill="rgb(221,67,37)" fg:x="74373" fg:w="59"/><text x="70.9824%" y="815.50"></text></g><g><title>do_syscall_64 (58 samples, 0.06%)</title><rect x="70.7334%" y="789" width="0.0552%" height="15" fill="rgb(241,32,44)" fg:x="74374" fg:w="58"/><text x="70.9834%" y="799.50"></text></g><g><title>event_listener::Inner::lock (151 samples, 0.14%)</title><rect x="70.6468%" y="901" width="0.1436%" height="15" fill="rgb(235,204,43)" fg:x="74283" fg:w="151"/><text x="70.8968%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (150 samples, 0.14%)</title><rect x="70.6478%" y="885" width="0.1427%" height="15" fill="rgb(213,116,10)" fg:x="74284" fg:w="150"/><text x="70.8978%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (137 samples, 0.13%)</title><rect x="70.6601%" y="869" width="0.1303%" height="15" fill="rgb(239,15,48)" fg:x="74297" fg:w="137"/><text x="70.9101%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (134 samples, 0.13%)</title><rect x="70.6630%" y="853" width="0.1274%" height="15" fill="rgb(207,123,36)" fg:x="74300" fg:w="134"/><text x="70.9130%" y="863.50"></text></g><g><title>___pthread_mutex_lock (134 samples, 0.13%)</title><rect x="70.6630%" y="837" width="0.1274%" height="15" fill="rgb(209,103,30)" fg:x="74300" fg:w="134"/><text x="70.9130%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (82 samples, 0.08%)</title><rect x="70.7124%" y="821" width="0.0780%" height="15" fill="rgb(238,100,19)" fg:x="74352" fg:w="82"/><text x="70.9624%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (354 samples, 0.34%)</title><rect x="70.4652%" y="917" width="0.3367%" height="15" fill="rgb(244,30,14)" fg:x="74092" fg:w="354"/><text x="70.7152%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (391 samples, 0.37%)</title><rect x="70.4471%" y="949" width="0.3719%" height="15" fill="rgb(249,174,6)" fg:x="74073" fg:w="391"/><text x="70.6971%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (373 samples, 0.35%)</title><rect x="70.4642%" y="933" width="0.3547%" height="15" fill="rgb(235,213,41)" fg:x="74091" fg:w="373"/><text x="70.7142%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (18 samples, 0.02%)</title><rect x="70.8018%" y="917" width="0.0171%" height="15" fill="rgb(213,118,6)" fg:x="74446" fg:w="18"/><text x="71.0518%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="70.8018%" y="901" width="0.0171%" height="15" fill="rgb(235,44,51)" fg:x="74446" fg:w="18"/><text x="71.0518%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="70.8018%" y="885" width="0.0171%" height="15" fill="rgb(217,9,53)" fg:x="74446" fg:w="18"/><text x="71.0518%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="70.8018%" y="869" width="0.0171%" height="15" fill="rgb(237,172,34)" fg:x="74446" fg:w="18"/><text x="71.0518%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="70.8218%" y="933" width="0.0342%" height="15" fill="rgb(206,206,11)" fg:x="74467" fg:w="36"/><text x="71.0718%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (36 samples, 0.03%)</title><rect x="70.8218%" y="917" width="0.0342%" height="15" fill="rgb(214,149,29)" fg:x="74467" fg:w="36"/><text x="71.0718%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (36 samples, 0.03%)</title><rect x="70.8218%" y="901" width="0.0342%" height="15" fill="rgb(208,123,3)" fg:x="74467" fg:w="36"/><text x="71.0718%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (43 samples, 0.04%)</title><rect x="70.8560%" y="933" width="0.0409%" height="15" fill="rgb(229,126,4)" fg:x="74503" fg:w="43"/><text x="71.1060%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (42 samples, 0.04%)</title><rect x="70.8570%" y="917" width="0.0399%" height="15" fill="rgb(222,92,36)" fg:x="74504" fg:w="42"/><text x="71.1070%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="70.8570%" y="901" width="0.0399%" height="15" fill="rgb(216,39,41)" fg:x="74504" fg:w="42"/><text x="71.1070%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (42 samples, 0.04%)</title><rect x="70.8570%" y="885" width="0.0399%" height="15" fill="rgb(253,127,28)" fg:x="74504" fg:w="42"/><text x="71.1070%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (42 samples, 0.04%)</title><rect x="70.8570%" y="869" width="0.0399%" height="15" fill="rgb(249,152,51)" fg:x="74504" fg:w="42"/><text x="71.1070%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (42 samples, 0.04%)</title><rect x="70.8570%" y="853" width="0.0399%" height="15" fill="rgb(209,123,42)" fg:x="74504" fg:w="42"/><text x="71.1070%" y="863.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="70.8998%" y="933" width="0.0228%" height="15" fill="rgb(241,118,22)" fg:x="74549" fg:w="24"/><text x="71.1498%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="70.8998%" y="917" width="0.0228%" height="15" fill="rgb(208,25,7)" fg:x="74549" fg:w="24"/><text x="71.1498%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="70.8998%" y="901" width="0.0228%" height="15" fill="rgb(243,144,39)" fg:x="74549" fg:w="24"/><text x="71.1498%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="70.8998%" y="885" width="0.0228%" height="15" fill="rgb(250,50,5)" fg:x="74549" fg:w="24"/><text x="71.1498%" y="895.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="70.9007%" y="869" width="0.0219%" height="15" fill="rgb(207,67,11)" fg:x="74550" fg:w="23"/><text x="71.1507%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,821 samples, 3.63%)</title><rect x="67.3029%" y="965" width="3.6340%" height="15" fill="rgb(245,204,40)" fg:x="70767" fg:w="3821"/><text x="67.5529%" y="975.50">&lt;asy..</text></g><g><title>event_listener::Event::listen (124 samples, 0.12%)</title><rect x="70.8189%" y="949" width="0.1179%" height="15" fill="rgb(238,228,24)" fg:x="74464" fg:w="124"/><text x="71.0689%" y="959.50"></text></g><g><title>event_listener::full_fence (14 samples, 0.01%)</title><rect x="70.9236%" y="933" width="0.0133%" height="15" fill="rgb(217,116,22)" fg:x="74574" fg:w="14"/><text x="71.1736%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (14 samples, 0.01%)</title><rect x="70.9236%" y="917" width="0.0133%" height="15" fill="rgb(234,98,12)" fg:x="74574" fg:w="14"/><text x="71.1736%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.01%)</title><rect x="70.9236%" y="901" width="0.0133%" height="15" fill="rgb(242,170,50)" fg:x="74574" fg:w="14"/><text x="71.1736%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="70.9236%" y="885" width="0.0133%" height="15" fill="rgb(235,7,5)" fg:x="74574" fg:w="14"/><text x="71.1736%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (898 samples, 0.85%)</title><rect x="70.9464%" y="965" width="0.8540%" height="15" fill="rgb(241,114,28)" fg:x="74598" fg:w="898"/><text x="71.1964%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (232 samples, 0.22%)</title><rect x="71.8109%" y="949" width="0.2206%" height="15" fill="rgb(246,112,42)" fg:x="75507" fg:w="232"/><text x="72.0609%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (661 samples, 0.63%)</title><rect x="72.0468%" y="917" width="0.6286%" height="15" fill="rgb(248,228,14)" fg:x="75755" fg:w="661"/><text x="72.2968%" y="927.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="72.6887%" y="821" width="0.0143%" height="15" fill="rgb(208,133,18)" fg:x="76430" fg:w="15"/><text x="72.9387%" y="831.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="72.7191%" y="741" width="0.0143%" height="15" fill="rgb(207,35,49)" fg:x="76462" fg:w="15"/><text x="72.9691%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (24 samples, 0.02%)</title><rect x="72.7838%" y="709" width="0.0228%" height="15" fill="rgb(205,68,36)" fg:x="76530" fg:w="24"/><text x="73.0338%" y="719.50"></text></g><g><title> (24 samples, 0.02%)</title><rect x="72.7838%" y="693" width="0.0228%" height="15" fill="rgb(245,62,40)" fg:x="76530" fg:w="24"/><text x="73.0338%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (90 samples, 0.09%)</title><rect x="72.7420%" y="741" width="0.0856%" height="15" fill="rgb(228,27,24)" fg:x="76486" fg:w="90"/><text x="72.9920%" y="751.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (75 samples, 0.07%)</title><rect x="72.7562%" y="725" width="0.0713%" height="15" fill="rgb(253,19,12)" fg:x="76501" fg:w="75"/><text x="73.0062%" y="735.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (18 samples, 0.02%)</title><rect x="72.8104%" y="709" width="0.0171%" height="15" fill="rgb(232,28,20)" fg:x="76558" fg:w="18"/><text x="73.0604%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (148 samples, 0.14%)</title><rect x="72.7172%" y="773" width="0.1408%" height="15" fill="rgb(218,35,51)" fg:x="76460" fg:w="148"/><text x="72.9672%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (148 samples, 0.14%)</title><rect x="72.7172%" y="757" width="0.1408%" height="15" fill="rgb(212,90,40)" fg:x="76460" fg:w="148"/><text x="72.9672%" y="767.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (32 samples, 0.03%)</title><rect x="72.8276%" y="741" width="0.0304%" height="15" fill="rgb(220,172,12)" fg:x="76576" fg:w="32"/><text x="73.0776%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (156 samples, 0.15%)</title><rect x="72.7172%" y="805" width="0.1484%" height="15" fill="rgb(226,159,20)" fg:x="76460" fg:w="156"/><text x="72.9672%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (156 samples, 0.15%)</title><rect x="72.7172%" y="789" width="0.1484%" height="15" fill="rgb(234,205,16)" fg:x="76460" fg:w="156"/><text x="72.9672%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (171 samples, 0.16%)</title><rect x="72.7049%" y="821" width="0.1626%" height="15" fill="rgb(207,9,39)" fg:x="76447" fg:w="171"/><text x="72.9549%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,908 samples, 5.62%)</title><rect x="67.2544%" y="981" width="5.6188%" height="15" fill="rgb(249,143,15)" fg:x="70716" fg:w="5908"/><text x="67.5044%" y="991.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,128 samples, 1.07%)</title><rect x="71.8004%" y="965" width="1.0728%" height="15" fill="rgb(253,133,29)" fg:x="75496" fg:w="1128"/><text x="72.0504%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (885 samples, 0.84%)</title><rect x="72.0315%" y="949" width="0.8417%" height="15" fill="rgb(221,187,0)" fg:x="75739" fg:w="885"/><text x="72.2815%" y="959.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (885 samples, 0.84%)</title><rect x="72.0315%" y="933" width="0.8417%" height="15" fill="rgb(205,204,26)" fg:x="75739" fg:w="885"/><text x="72.2815%" y="943.50"></text></g><g><title>alloc::alloc::box_free (208 samples, 0.20%)</title><rect x="72.6754%" y="917" width="0.1978%" height="15" fill="rgb(224,68,54)" fg:x="76416" fg:w="208"/><text x="72.9254%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (208 samples, 0.20%)</title><rect x="72.6754%" y="901" width="0.1978%" height="15" fill="rgb(209,67,4)" fg:x="76416" fg:w="208"/><text x="72.9254%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (208 samples, 0.20%)</title><rect x="72.6754%" y="885" width="0.1978%" height="15" fill="rgb(228,229,18)" fg:x="76416" fg:w="208"/><text x="72.9254%" y="895.50"></text></g><g><title>__rg_dealloc (208 samples, 0.20%)</title><rect x="72.6754%" y="869" width="0.1978%" height="15" fill="rgb(231,89,13)" fg:x="76416" fg:w="208"/><text x="72.9254%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (208 samples, 0.20%)</title><rect x="72.6754%" y="853" width="0.1978%" height="15" fill="rgb(210,182,18)" fg:x="76416" fg:w="208"/><text x="72.9254%" y="863.50"></text></g><g><title>rust_dealloc (196 samples, 0.19%)</title><rect x="72.6868%" y="837" width="0.1864%" height="15" fill="rgb(240,105,2)" fg:x="76428" fg:w="196"/><text x="72.9368%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,366 samples, 6.05%)</title><rect x="67.2116%" y="997" width="6.0544%" height="15" fill="rgb(207,170,50)" fg:x="70671" fg:w="6366"/><text x="67.4616%" y="1007.50">&lt;async_s..</text></g><g><title>__memcpy_avx_unaligned_erms (413 samples, 0.39%)</title><rect x="72.8732%" y="981" width="0.3928%" height="15" fill="rgb(232,133,24)" fg:x="76624" fg:w="413"/><text x="73.1232%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (442 samples, 0.42%)</title><rect x="73.2660%" y="997" width="0.4204%" height="15" fill="rgb(235,166,27)" fg:x="77037" fg:w="442"/><text x="73.5160%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,848 samples, 6.51%)</title><rect x="67.1755%" y="1157" width="6.5128%" height="15" fill="rgb(209,19,13)" fg:x="70633" fg:w="6848"/><text x="67.4255%" y="1167.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1141" width="6.5109%" height="15" fill="rgb(226,79,39)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1151.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1125" width="6.5109%" height="15" fill="rgb(222,163,10)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1135.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1109" width="6.5109%" height="15" fill="rgb(214,44,19)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1119.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1093" width="6.5109%" height="15" fill="rgb(210,217,13)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1103.50">&lt;core::fu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1077" width="6.5109%" height="15" fill="rgb(237,61,54)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1087.50">tremor_ru..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1061" width="6.5109%" height="15" fill="rgb(226,184,24)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1071.50">&lt;async_st..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1045" width="6.5109%" height="15" fill="rgb(223,226,4)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1055.50">&lt;tremor_r..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1029" width="6.5109%" height="15" fill="rgb(210,26,41)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1039.50">&lt;async_st..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,846 samples, 6.51%)</title><rect x="67.1774%" y="1013" width="6.5109%" height="15" fill="rgb(220,221,6)" fg:x="70635" fg:w="6846"/><text x="67.4274%" y="1023.50">&lt;tremor_r..</text></g><g><title>tremor_common::time::nanotime (17 samples, 0.02%)</title><rect x="73.6883%" y="1157" width="0.0162%" height="15" fill="rgb(225,89,49)" fg:x="77481" fg:w="17"/><text x="73.9383%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (17 samples, 0.02%)</title><rect x="73.6883%" y="1141" width="0.0162%" height="15" fill="rgb(218,70,45)" fg:x="77481" fg:w="17"/><text x="73.9383%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (17 samples, 0.02%)</title><rect x="73.6883%" y="1125" width="0.0162%" height="15" fill="rgb(238,166,21)" fg:x="77481" fg:w="17"/><text x="73.9383%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (17 samples, 0.02%)</title><rect x="73.6883%" y="1109" width="0.0162%" height="15" fill="rgb(224,141,44)" fg:x="77481" fg:w="17"/><text x="73.9383%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (63 samples, 0.06%)</title><rect x="73.7044%" y="1157" width="0.0599%" height="15" fill="rgb(230,12,49)" fg:x="77498" fg:w="63"/><text x="73.9544%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (12 samples, 0.01%)</title><rect x="73.7643%" y="1157" width="0.0114%" height="15" fill="rgb(212,174,12)" fg:x="77561" fg:w="12"/><text x="74.0143%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="73.7643%" y="1141" width="0.0114%" height="15" fill="rgb(246,67,9)" fg:x="77561" fg:w="12"/><text x="74.0143%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (12 samples, 0.01%)</title><rect x="73.7643%" y="1125" width="0.0114%" height="15" fill="rgb(239,35,23)" fg:x="77561" fg:w="12"/><text x="74.0143%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.03%)</title><rect x="73.8414%" y="1045" width="0.0295%" height="15" fill="rgb(211,167,0)" fg:x="77642" fg:w="31"/><text x="74.0914%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.03%)</title><rect x="73.8414%" y="1029" width="0.0295%" height="15" fill="rgb(225,119,45)" fg:x="77642" fg:w="31"/><text x="74.0914%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.03%)</title><rect x="73.8414%" y="1013" width="0.0295%" height="15" fill="rgb(210,162,6)" fg:x="77642" fg:w="31"/><text x="74.0914%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.03%)</title><rect x="73.8414%" y="997" width="0.0295%" height="15" fill="rgb(208,118,35)" fg:x="77642" fg:w="31"/><text x="74.0914%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.03%)</title><rect x="73.8414%" y="981" width="0.0295%" height="15" fill="rgb(239,4,53)" fg:x="77642" fg:w="31"/><text x="74.0914%" y="991.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.03%)</title><rect x="73.8414%" y="965" width="0.0295%" height="15" fill="rgb(213,130,21)" fg:x="77642" fg:w="31"/><text x="74.0914%" y="975.50"></text></g><g><title>__rg_alloc (31 samples, 0.03%)</title><rect x="73.8414%" y="949" width="0.0295%" height="15" fill="rgb(235,148,0)" fg:x="77642" fg:w="31"/><text x="74.0914%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (31 samples, 0.03%)</title><rect x="73.8414%" y="933" width="0.0295%" height="15" fill="rgb(244,224,18)" fg:x="77642" fg:w="31"/><text x="74.0914%" y="943.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (62 samples, 0.06%)</title><rect x="73.8357%" y="1141" width="0.0590%" height="15" fill="rgb(211,214,4)" fg:x="77636" fg:w="62"/><text x="74.0857%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="73.8414%" y="1125" width="0.0533%" height="15" fill="rgb(206,119,25)" fg:x="77642" fg:w="56"/><text x="74.0914%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="73.8414%" y="1109" width="0.0533%" height="15" fill="rgb(243,93,47)" fg:x="77642" fg:w="56"/><text x="74.0914%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (56 samples, 0.05%)</title><rect x="73.8414%" y="1093" width="0.0533%" height="15" fill="rgb(224,194,6)" fg:x="77642" fg:w="56"/><text x="74.0914%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (56 samples, 0.05%)</title><rect x="73.8414%" y="1077" width="0.0533%" height="15" fill="rgb(243,229,6)" fg:x="77642" fg:w="56"/><text x="74.0914%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56 samples, 0.05%)</title><rect x="73.8414%" y="1061" width="0.0533%" height="15" fill="rgb(207,23,50)" fg:x="77642" fg:w="56"/><text x="74.0914%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (25 samples, 0.02%)</title><rect x="73.8709%" y="1045" width="0.0238%" height="15" fill="rgb(253,192,32)" fg:x="77673" fg:w="25"/><text x="74.1209%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="73.8709%" y="1029" width="0.0238%" height="15" fill="rgb(213,21,6)" fg:x="77673" fg:w="25"/><text x="74.1209%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.02%)</title><rect x="73.8946%" y="1141" width="0.0152%" height="15" fill="rgb(243,151,13)" fg:x="77698" fg:w="16"/><text x="74.1446%" y="1151.50"></text></g><g><title>core::ptr::write (16 samples, 0.02%)</title><rect x="73.8946%" y="1125" width="0.0152%" height="15" fill="rgb(233,165,41)" fg:x="77698" fg:w="16"/><text x="74.1446%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (146 samples, 0.14%)</title><rect x="73.7843%" y="1157" width="0.1389%" height="15" fill="rgb(246,176,45)" fg:x="77582" fg:w="146"/><text x="74.0343%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (27 samples, 0.03%)</title><rect x="73.9232%" y="1157" width="0.0257%" height="15" fill="rgb(217,170,52)" fg:x="77728" fg:w="27"/><text x="74.1732%" y="1167.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="74.1124%" y="1013" width="0.0114%" height="15" fill="rgb(214,203,54)" fg:x="77927" fg:w="12"/><text x="74.3624%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (24 samples, 0.02%)</title><rect x="74.1257%" y="1013" width="0.0228%" height="15" fill="rgb(248,215,49)" fg:x="77941" fg:w="24"/><text x="74.3757%" y="1023.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="74.1257%" y="997" width="0.0228%" height="15" fill="rgb(208,46,10)" fg:x="77941" fg:w="24"/><text x="74.3757%" y="1007.50"></text></g><g><title>core::ptr::read (24 samples, 0.02%)</title><rect x="74.1257%" y="981" width="0.0228%" height="15" fill="rgb(254,5,31)" fg:x="77941" fg:w="24"/><text x="74.3757%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (169 samples, 0.16%)</title><rect x="74.2066%" y="997" width="0.1607%" height="15" fill="rgb(222,104,33)" fg:x="78026" fg:w="169"/><text x="74.4566%" y="1007.50"></text></g><g><title>core::mem::replace (169 samples, 0.16%)</title><rect x="74.2066%" y="981" width="0.1607%" height="15" fill="rgb(248,49,16)" fg:x="78026" fg:w="169"/><text x="74.4566%" y="991.50"></text></g><g><title>core::ptr::read (169 samples, 0.16%)</title><rect x="74.2066%" y="965" width="0.1607%" height="15" fill="rgb(232,198,41)" fg:x="78026" fg:w="169"/><text x="74.4566%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (284 samples, 0.27%)</title><rect x="74.1486%" y="1013" width="0.2701%" height="15" fill="rgb(214,125,3)" fg:x="77965" fg:w="284"/><text x="74.3986%" y="1023.50"></text></g><g><title>core::mem::drop (54 samples, 0.05%)</title><rect x="74.3673%" y="997" width="0.0514%" height="15" fill="rgb(229,220,28)" fg:x="78195" fg:w="54"/><text x="74.6173%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (54 samples, 0.05%)</title><rect x="74.3673%" y="981" width="0.0514%" height="15" fill="rgb(222,64,37)" fg:x="78195" fg:w="54"/><text x="74.6173%" y="991.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="74.4187%" y="997" width="0.0171%" height="15" fill="rgb(249,184,13)" fg:x="78249" fg:w="18"/><text x="74.6687%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::done (12 samples, 0.01%)</title><rect x="74.4443%" y="965" width="0.0114%" height="15" fill="rgb(252,176,6)" fg:x="78276" fg:w="12"/><text x="74.6943%" y="975.50"></text></g><g><title>std::thread::panicking (12 samples, 0.01%)</title><rect x="74.4443%" y="949" width="0.0114%" height="15" fill="rgb(228,153,7)" fg:x="78276" fg:w="12"/><text x="74.6943%" y="959.50"></text></g><g><title>std::panicking::panicking (12 samples, 0.01%)</title><rect x="74.4443%" y="933" width="0.0114%" height="15" fill="rgb(242,193,5)" fg:x="78276" fg:w="12"/><text x="74.6943%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (12 samples, 0.01%)</title><rect x="74.4443%" y="917" width="0.0114%" height="15" fill="rgb(232,140,9)" fg:x="78276" fg:w="12"/><text x="74.6943%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="74.4558%" y="949" width="0.0124%" height="15" fill="rgb(213,222,16)" fg:x="78288" fg:w="13"/><text x="74.7058%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (328 samples, 0.31%)</title><rect x="74.4681%" y="933" width="0.3119%" height="15" fill="rgb(222,75,50)" fg:x="78301" fg:w="328"/><text x="74.7181%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (391 samples, 0.37%)</title><rect x="74.4187%" y="1013" width="0.3719%" height="15" fill="rgb(205,180,2)" fg:x="78249" fg:w="391"/><text x="74.6687%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (373 samples, 0.35%)</title><rect x="74.4358%" y="997" width="0.3547%" height="15" fill="rgb(216,34,7)" fg:x="78267" fg:w="373"/><text x="74.6858%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (373 samples, 0.35%)</title><rect x="74.4358%" y="981" width="0.3547%" height="15" fill="rgb(253,16,32)" fg:x="78267" fg:w="373"/><text x="74.6858%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (352 samples, 0.33%)</title><rect x="74.4558%" y="965" width="0.3348%" height="15" fill="rgb(208,97,28)" fg:x="78288" fg:w="352"/><text x="74.7058%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (339 samples, 0.32%)</title><rect x="74.4681%" y="949" width="0.3224%" height="15" fill="rgb(225,92,11)" fg:x="78301" fg:w="339"/><text x="74.7181%" y="959.50"></text></g><g><title>___pthread_mutex_unlock (11 samples, 0.01%)</title><rect x="74.7801%" y="933" width="0.0105%" height="15" fill="rgb(243,38,12)" fg:x="78629" fg:w="11"/><text x="75.0301%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (17 samples, 0.02%)</title><rect x="74.8057%" y="965" width="0.0162%" height="15" fill="rgb(208,139,16)" fg:x="78656" fg:w="17"/><text x="75.0557%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (42 samples, 0.04%)</title><rect x="74.7905%" y="1013" width="0.0399%" height="15" fill="rgb(227,24,9)" fg:x="78640" fg:w="42"/><text x="75.0405%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (42 samples, 0.04%)</title><rect x="74.7905%" y="997" width="0.0399%" height="15" fill="rgb(206,62,11)" fg:x="78640" fg:w="42"/><text x="75.0405%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.02%)</title><rect x="74.8057%" y="981" width="0.0247%" height="15" fill="rgb(228,134,27)" fg:x="78656" fg:w="26"/><text x="75.0557%" y="991.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,276 samples, 1.21%)</title><rect x="74.0202%" y="1029" width="1.2135%" height="15" fill="rgb(205,55,33)" fg:x="77830" fg:w="1276"/><text x="74.2702%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (424 samples, 0.40%)</title><rect x="74.8305%" y="1013" width="0.4032%" height="15" fill="rgb(243,75,43)" fg:x="78682" fg:w="424"/><text x="75.0805%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (413 samples, 0.39%)</title><rect x="74.8409%" y="997" width="0.3928%" height="15" fill="rgb(223,27,42)" fg:x="78693" fg:w="413"/><text x="75.0909%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (403 samples, 0.38%)</title><rect x="74.8504%" y="981" width="0.3833%" height="15" fill="rgb(232,189,33)" fg:x="78703" fg:w="403"/><text x="75.1004%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (402 samples, 0.38%)</title><rect x="74.8514%" y="965" width="0.3823%" height="15" fill="rgb(210,9,39)" fg:x="78704" fg:w="402"/><text x="75.1014%" y="975.50"></text></g><g><title>___pthread_mutex_lock (402 samples, 0.38%)</title><rect x="74.8514%" y="949" width="0.3823%" height="15" fill="rgb(242,85,26)" fg:x="78704" fg:w="402"/><text x="75.1014%" y="959.50"></text></g><g><title>__wake_up_common_lock (14 samples, 0.01%)</title><rect x="75.2394%" y="677" width="0.0133%" height="15" fill="rgb(248,44,4)" fg:x="79112" fg:w="14"/><text x="75.4894%" y="687.50"></text></g><g><title>__wake_up_common (13 samples, 0.01%)</title><rect x="75.2404%" y="661" width="0.0124%" height="15" fill="rgb(250,96,46)" fg:x="79113" fg:w="13"/><text x="75.4904%" y="671.50"></text></g><g><title>autoremove_wake_function (13 samples, 0.01%)</title><rect x="75.2404%" y="645" width="0.0124%" height="15" fill="rgb(229,116,26)" fg:x="79113" fg:w="13"/><text x="75.4904%" y="655.50"></text></g><g><title>try_to_wake_up (13 samples, 0.01%)</title><rect x="75.2404%" y="629" width="0.0124%" height="15" fill="rgb(246,94,34)" fg:x="79113" fg:w="13"/><text x="75.4904%" y="639.50"></text></g><g><title>ksys_write (21 samples, 0.02%)</title><rect x="75.2347%" y="757" width="0.0200%" height="15" fill="rgb(251,73,21)" fg:x="79107" fg:w="21"/><text x="75.4847%" y="767.50"></text></g><g><title>vfs_write (20 samples, 0.02%)</title><rect x="75.2356%" y="741" width="0.0190%" height="15" fill="rgb(254,121,25)" fg:x="79108" fg:w="20"/><text x="75.4856%" y="751.50"></text></g><g><title>eventfd_write (19 samples, 0.02%)</title><rect x="75.2366%" y="725" width="0.0181%" height="15" fill="rgb(215,161,49)" fg:x="79109" fg:w="19"/><text x="75.4866%" y="735.50"></text></g><g><title>__wake_up_common (18 samples, 0.02%)</title><rect x="75.2375%" y="709" width="0.0171%" height="15" fill="rgb(221,43,13)" fg:x="79110" fg:w="18"/><text x="75.4875%" y="719.50"></text></g><g><title>ep_poll_callback (17 samples, 0.02%)</title><rect x="75.2385%" y="693" width="0.0162%" height="15" fill="rgb(249,5,37)" fg:x="79111" fg:w="17"/><text x="75.4885%" y="703.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (23 samples, 0.02%)</title><rect x="75.2337%" y="1029" width="0.0219%" height="15" fill="rgb(226,25,44)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="1039.50"></text></g><g><title>event_listener::Event::notify (23 samples, 0.02%)</title><rect x="75.2337%" y="1013" width="0.0219%" height="15" fill="rgb(238,189,16)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="1023.50"></text></g><g><title>event_listener::List::notify (23 samples, 0.02%)</title><rect x="75.2337%" y="997" width="0.0219%" height="15" fill="rgb(251,186,8)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (23 samples, 0.02%)</title><rect x="75.2337%" y="981" width="0.0219%" height="15" fill="rgb(254,34,31)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (23 samples, 0.02%)</title><rect x="75.2337%" y="965" width="0.0219%" height="15" fill="rgb(225,215,27)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (23 samples, 0.02%)</title><rect x="75.2337%" y="949" width="0.0219%" height="15" fill="rgb(221,192,48)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (23 samples, 0.02%)</title><rect x="75.2337%" y="933" width="0.0219%" height="15" fill="rgb(219,137,20)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="943.50"></text></g><g><title>async_executor::State::notify (23 samples, 0.02%)</title><rect x="75.2337%" y="917" width="0.0219%" height="15" fill="rgb(219,84,11)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (23 samples, 0.02%)</title><rect x="75.2337%" y="901" width="0.0219%" height="15" fill="rgb(224,10,23)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (23 samples, 0.02%)</title><rect x="75.2337%" y="885" width="0.0219%" height="15" fill="rgb(248,22,39)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="895.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (23 samples, 0.02%)</title><rect x="75.2337%" y="869" width="0.0219%" height="15" fill="rgb(212,154,20)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="879.50"></text></g><g><title>async_io::reactor::Reactor::notify (23 samples, 0.02%)</title><rect x="75.2337%" y="853" width="0.0219%" height="15" fill="rgb(236,199,50)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="863.50"></text></g><g><title>polling::Poller::notify (23 samples, 0.02%)</title><rect x="75.2337%" y="837" width="0.0219%" height="15" fill="rgb(211,9,17)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="847.50"></text></g><g><title>polling::epoll::Poller::notify (23 samples, 0.02%)</title><rect x="75.2337%" y="821" width="0.0219%" height="15" fill="rgb(243,216,36)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="831.50"></text></g><g><title>__GI___write (23 samples, 0.02%)</title><rect x="75.2337%" y="805" width="0.0219%" height="15" fill="rgb(250,2,10)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23 samples, 0.02%)</title><rect x="75.2337%" y="789" width="0.0219%" height="15" fill="rgb(226,50,48)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="799.50"></text></g><g><title>do_syscall_64 (23 samples, 0.02%)</title><rect x="75.2337%" y="773" width="0.0219%" height="15" fill="rgb(243,81,16)" fg:x="79106" fg:w="23"/><text x="75.4837%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,380 samples, 1.31%)</title><rect x="73.9508%" y="1141" width="1.3124%" height="15" fill="rgb(250,14,2)" fg:x="77757" fg:w="1380"/><text x="74.2008%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,379 samples, 1.31%)</title><rect x="73.9517%" y="1125" width="1.3115%" height="15" fill="rgb(233,135,29)" fg:x="77758" fg:w="1379"/><text x="74.2017%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,379 samples, 1.31%)</title><rect x="73.9517%" y="1109" width="1.3115%" height="15" fill="rgb(224,64,43)" fg:x="77758" fg:w="1379"/><text x="74.2017%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,379 samples, 1.31%)</title><rect x="73.9517%" y="1093" width="1.3115%" height="15" fill="rgb(238,84,13)" fg:x="77758" fg:w="1379"/><text x="74.2017%" y="1103.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,379 samples, 1.31%)</title><rect x="73.9517%" y="1077" width="1.3115%" height="15" fill="rgb(253,48,26)" fg:x="77758" fg:w="1379"/><text x="74.2017%" y="1087.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,379 samples, 1.31%)</title><rect x="73.9517%" y="1061" width="1.3115%" height="15" fill="rgb(205,223,31)" fg:x="77758" fg:w="1379"/><text x="74.2017%" y="1071.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,379 samples, 1.31%)</title><rect x="73.9517%" y="1045" width="1.3115%" height="15" fill="rgb(221,41,32)" fg:x="77758" fg:w="1379"/><text x="74.2017%" y="1055.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="75.3250%" y="1061" width="0.0266%" height="15" fill="rgb(213,158,31)" fg:x="79202" fg:w="28"/><text x="75.5750%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (386 samples, 0.37%)</title><rect x="75.4173%" y="1045" width="0.3671%" height="15" fill="rgb(245,126,43)" fg:x="79299" fg:w="386"/><text x="75.6673%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (720 samples, 0.68%)</title><rect x="75.8291%" y="1029" width="0.6848%" height="15" fill="rgb(227,7,22)" fg:x="79732" fg:w="720"/><text x="76.0791%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (252 samples, 0.24%)</title><rect x="76.5956%" y="1013" width="0.2397%" height="15" fill="rgb(252,90,44)" fg:x="80538" fg:w="252"/><text x="76.8456%" y="1023.50"></text></g><g><title>core::ptr::write (252 samples, 0.24%)</title><rect x="76.5956%" y="997" width="0.2397%" height="15" fill="rgb(253,91,0)" fg:x="80538" fg:w="252"/><text x="76.8456%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (242 samples, 0.23%)</title><rect x="76.6051%" y="981" width="0.2302%" height="15" fill="rgb(252,175,49)" fg:x="80548" fg:w="242"/><text x="76.8551%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (316 samples, 0.30%)</title><rect x="76.8353%" y="1013" width="0.3005%" height="15" fill="rgb(246,150,1)" fg:x="80790" fg:w="316"/><text x="77.0853%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (316 samples, 0.30%)</title><rect x="76.8353%" y="997" width="0.3005%" height="15" fill="rgb(241,192,25)" fg:x="80790" fg:w="316"/><text x="77.0853%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (41 samples, 0.04%)</title><rect x="77.1358%" y="1013" width="0.0390%" height="15" fill="rgb(239,187,11)" fg:x="81106" fg:w="41"/><text x="77.3858%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.04%)</title><rect x="77.1368%" y="997" width="0.0380%" height="15" fill="rgb(218,202,51)" fg:x="81107" fg:w="40"/><text x="77.3868%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,471 samples, 1.40%)</title><rect x="75.7844%" y="1045" width="1.3990%" height="15" fill="rgb(225,176,8)" fg:x="79685" fg:w="1471"/><text x="76.0344%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (704 samples, 0.67%)</title><rect x="76.5138%" y="1029" width="0.6695%" height="15" fill="rgb(219,122,41)" fg:x="80452" fg:w="704"/><text x="76.7638%" y="1039.50"></text></g><g><title>futex_wake_mark (12 samples, 0.01%)</title><rect x="77.2452%" y="837" width="0.0114%" height="15" fill="rgb(248,140,20)" fg:x="81221" fg:w="12"/><text x="77.4952%" y="847.50"></text></g><g><title>enqueue_task_fair (20 samples, 0.02%)</title><rect x="77.2737%" y="773" width="0.0190%" height="15" fill="rgb(245,41,37)" fg:x="81251" fg:w="20"/><text x="77.5237%" y="783.50"></text></g><g><title>enqueue_entity (17 samples, 0.02%)</title><rect x="77.2766%" y="757" width="0.0162%" height="15" fill="rgb(235,82,39)" fg:x="81254" fg:w="17"/><text x="77.5266%" y="767.50"></text></g><g><title>ttwu_do_activate (37 samples, 0.04%)</title><rect x="77.2728%" y="805" width="0.0352%" height="15" fill="rgb(230,108,42)" fg:x="81250" fg:w="37"/><text x="77.5228%" y="815.50"></text></g><g><title>enqueue_task (37 samples, 0.04%)</title><rect x="77.2728%" y="789" width="0.0352%" height="15" fill="rgb(215,150,50)" fg:x="81250" fg:w="37"/><text x="77.5228%" y="799.50"></text></g><g><title>psi_task_change (13 samples, 0.01%)</title><rect x="77.2956%" y="773" width="0.0124%" height="15" fill="rgb(233,212,5)" fg:x="81274" fg:w="13"/><text x="77.5456%" y="783.50"></text></g><g><title>ttwu_queue_wakelist (16 samples, 0.02%)</title><rect x="77.3099%" y="805" width="0.0152%" height="15" fill="rgb(245,80,22)" fg:x="81289" fg:w="16"/><text x="77.5599%" y="815.50"></text></g><g><title>__x64_sys_futex (101 samples, 0.10%)</title><rect x="77.2319%" y="885" width="0.0961%" height="15" fill="rgb(238,129,16)" fg:x="81207" fg:w="101"/><text x="77.4819%" y="895.50"></text></g><g><title>do_futex (99 samples, 0.09%)</title><rect x="77.2338%" y="869" width="0.0942%" height="15" fill="rgb(240,19,0)" fg:x="81209" fg:w="99"/><text x="77.4838%" y="879.50"></text></g><g><title>futex_wake (97 samples, 0.09%)</title><rect x="77.2357%" y="853" width="0.0923%" height="15" fill="rgb(232,42,35)" fg:x="81211" fg:w="97"/><text x="77.4857%" y="863.50"></text></g><g><title>wake_up_q (73 samples, 0.07%)</title><rect x="77.2585%" y="837" width="0.0694%" height="15" fill="rgb(223,130,24)" fg:x="81235" fg:w="73"/><text x="77.5085%" y="847.50"></text></g><g><title>try_to_wake_up (72 samples, 0.07%)</title><rect x="77.2595%" y="821" width="0.0685%" height="15" fill="rgb(237,16,22)" fg:x="81236" fg:w="72"/><text x="77.5095%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (134 samples, 0.13%)</title><rect x="77.2319%" y="917" width="0.1274%" height="15" fill="rgb(248,192,20)" fg:x="81207" fg:w="134"/><text x="77.4819%" y="927.50"></text></g><g><title>do_syscall_64 (134 samples, 0.13%)</title><rect x="77.2319%" y="901" width="0.1274%" height="15" fill="rgb(233,167,2)" fg:x="81207" fg:w="134"/><text x="77.4819%" y="911.50"></text></g><g><title>syscall_exit_to_user_mode (33 samples, 0.03%)</title><rect x="77.3279%" y="885" width="0.0314%" height="15" fill="rgb(252,71,44)" fg:x="81308" fg:w="33"/><text x="77.5779%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (157 samples, 0.15%)</title><rect x="77.2110%" y="949" width="0.1493%" height="15" fill="rgb(238,37,47)" fg:x="81185" fg:w="157"/><text x="77.4610%" y="959.50"></text></g><g><title>__GI___lll_lock_wake (140 samples, 0.13%)</title><rect x="77.2271%" y="933" width="0.1331%" height="15" fill="rgb(214,202,54)" fg:x="81202" fg:w="140"/><text x="77.4771%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (164 samples, 0.16%)</title><rect x="77.2062%" y="1029" width="0.1560%" height="15" fill="rgb(254,165,40)" fg:x="81180" fg:w="164"/><text x="77.4562%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (160 samples, 0.15%)</title><rect x="77.2100%" y="1013" width="0.1522%" height="15" fill="rgb(246,173,38)" fg:x="81184" fg:w="160"/><text x="77.4600%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.15%)</title><rect x="77.2100%" y="997" width="0.1522%" height="15" fill="rgb(215,3,27)" fg:x="81184" fg:w="160"/><text x="77.4600%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (159 samples, 0.15%)</title><rect x="77.2110%" y="981" width="0.1512%" height="15" fill="rgb(239,169,51)" fg:x="81185" fg:w="159"/><text x="77.4610%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (159 samples, 0.15%)</title><rect x="77.2110%" y="965" width="0.1512%" height="15" fill="rgb(212,5,25)" fg:x="81185" fg:w="159"/><text x="77.4610%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="77.3622%" y="1029" width="0.0200%" height="15" fill="rgb(243,45,17)" fg:x="81344" fg:w="21"/><text x="77.6122%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="77.3622%" y="1013" width="0.0200%" height="15" fill="rgb(242,97,9)" fg:x="81344" fg:w="21"/><text x="77.6122%" y="1023.50"></text></g><g><title>___pthread_mutex_lock (55 samples, 0.05%)</title><rect x="77.3840%" y="965" width="0.0523%" height="15" fill="rgb(228,71,31)" fg:x="81367" fg:w="55"/><text x="77.6340%" y="975.50"></text></g><g><title>event_listener::Inner::lock (57 samples, 0.05%)</title><rect x="77.3831%" y="1029" width="0.0542%" height="15" fill="rgb(252,184,16)" fg:x="81366" fg:w="57"/><text x="77.6331%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (57 samples, 0.05%)</title><rect x="77.3831%" y="1013" width="0.0542%" height="15" fill="rgb(236,169,46)" fg:x="81366" fg:w="57"/><text x="77.6331%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="77.3831%" y="997" width="0.0542%" height="15" fill="rgb(207,17,47)" fg:x="81366" fg:w="57"/><text x="77.6331%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (56 samples, 0.05%)</title><rect x="77.3840%" y="981" width="0.0533%" height="15" fill="rgb(206,201,28)" fg:x="81367" fg:w="56"/><text x="77.6340%" y="991.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.01%)</title><rect x="77.4858%" y="805" width="0.0133%" height="15" fill="rgb(224,184,23)" fg:x="81474" fg:w="14"/><text x="77.7358%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="77.4753%" y="837" width="0.0247%" height="15" fill="rgb(208,139,48)" fg:x="81463" fg:w="26"/><text x="77.7253%" y="847.50"></text></g><g><title>do_syscall_64 (25 samples, 0.02%)</title><rect x="77.4763%" y="821" width="0.0238%" height="15" fill="rgb(208,130,10)" fg:x="81464" fg:w="25"/><text x="77.7263%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (45 samples, 0.04%)</title><rect x="77.4601%" y="933" width="0.0428%" height="15" fill="rgb(211,213,45)" fg:x="81447" fg:w="45"/><text x="77.7101%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="77.4601%" y="917" width="0.0428%" height="15" fill="rgb(235,100,30)" fg:x="81447" fg:w="45"/><text x="77.7101%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (43 samples, 0.04%)</title><rect x="77.4620%" y="901" width="0.0409%" height="15" fill="rgb(206,144,31)" fg:x="81449" fg:w="43"/><text x="77.7120%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (43 samples, 0.04%)</title><rect x="77.4620%" y="885" width="0.0409%" height="15" fill="rgb(224,200,26)" fg:x="81449" fg:w="43"/><text x="77.7120%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (43 samples, 0.04%)</title><rect x="77.4620%" y="869" width="0.0409%" height="15" fill="rgb(247,104,53)" fg:x="81449" fg:w="43"/><text x="77.7120%" y="879.50"></text></g><g><title>__GI___lll_lock_wake (30 samples, 0.03%)</title><rect x="77.4744%" y="853" width="0.0285%" height="15" fill="rgb(220,14,17)" fg:x="81462" fg:w="30"/><text x="77.7244%" y="863.50"></text></g><g><title>enqueue_task_fair (13 samples, 0.01%)</title><rect x="77.5590%" y="613" width="0.0124%" height="15" fill="rgb(230,140,40)" fg:x="81551" fg:w="13"/><text x="77.8090%" y="623.50"></text></g><g><title>ttwu_do_activate (25 samples, 0.02%)</title><rect x="77.5590%" y="645" width="0.0238%" height="15" fill="rgb(229,2,41)" fg:x="81551" fg:w="25"/><text x="77.8090%" y="655.50"></text></g><g><title>enqueue_task (25 samples, 0.02%)</title><rect x="77.5590%" y="629" width="0.0238%" height="15" fill="rgb(232,89,16)" fg:x="81551" fg:w="25"/><text x="77.8090%" y="639.50"></text></g><g><title>__wake_up_common_lock (48 samples, 0.05%)</title><rect x="77.5467%" y="709" width="0.0457%" height="15" fill="rgb(247,59,52)" fg:x="81538" fg:w="48"/><text x="77.7967%" y="719.50"></text></g><g><title>__wake_up_common (48 samples, 0.05%)</title><rect x="77.5467%" y="693" width="0.0457%" height="15" fill="rgb(226,110,21)" fg:x="81538" fg:w="48"/><text x="77.7967%" y="703.50"></text></g><g><title>autoremove_wake_function (48 samples, 0.05%)</title><rect x="77.5467%" y="677" width="0.0457%" height="15" fill="rgb(224,176,43)" fg:x="81538" fg:w="48"/><text x="77.7967%" y="687.50"></text></g><g><title>try_to_wake_up (47 samples, 0.04%)</title><rect x="77.5476%" y="661" width="0.0447%" height="15" fill="rgb(221,73,6)" fg:x="81539" fg:w="47"/><text x="77.7976%" y="671.50"></text></g><g><title>__wake_up_common (68 samples, 0.06%)</title><rect x="77.5362%" y="741" width="0.0647%" height="15" fill="rgb(232,78,19)" fg:x="81527" fg:w="68"/><text x="77.7862%" y="751.50"></text></g><g><title>ep_poll_callback (66 samples, 0.06%)</title><rect x="77.5381%" y="725" width="0.0628%" height="15" fill="rgb(233,112,48)" fg:x="81529" fg:w="66"/><text x="77.7881%" y="735.50"></text></g><g><title>eventfd_write (74 samples, 0.07%)</title><rect x="77.5353%" y="757" width="0.0704%" height="15" fill="rgb(243,131,47)" fg:x="81526" fg:w="74"/><text x="77.7853%" y="767.50"></text></g><g><title>ksys_write (94 samples, 0.09%)</title><rect x="77.5172%" y="789" width="0.0894%" height="15" fill="rgb(226,51,1)" fg:x="81507" fg:w="94"/><text x="77.7672%" y="799.50"></text></g><g><title>vfs_write (78 samples, 0.07%)</title><rect x="77.5324%" y="773" width="0.0742%" height="15" fill="rgb(247,58,7)" fg:x="81523" fg:w="78"/><text x="77.7824%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (114 samples, 0.11%)</title><rect x="77.5153%" y="821" width="0.1084%" height="15" fill="rgb(209,7,32)" fg:x="81505" fg:w="114"/><text x="77.7653%" y="831.50"></text></g><g><title>do_syscall_64 (114 samples, 0.11%)</title><rect x="77.5153%" y="805" width="0.1084%" height="15" fill="rgb(209,39,41)" fg:x="81505" fg:w="114"/><text x="77.7653%" y="815.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.02%)</title><rect x="77.6066%" y="789" width="0.0171%" height="15" fill="rgb(226,182,46)" fg:x="81601" fg:w="18"/><text x="77.8566%" y="799.50"></text></g><g><title>async_io::reactor::Reactor::notify (121 samples, 0.12%)</title><rect x="77.5096%" y="885" width="0.1151%" height="15" fill="rgb(230,219,10)" fg:x="81499" fg:w="121"/><text x="77.7596%" y="895.50"></text></g><g><title>polling::Poller::notify (121 samples, 0.12%)</title><rect x="77.5096%" y="869" width="0.1151%" height="15" fill="rgb(227,175,30)" fg:x="81499" fg:w="121"/><text x="77.7596%" y="879.50"></text></g><g><title>polling::epoll::Poller::notify (119 samples, 0.11%)</title><rect x="77.5115%" y="853" width="0.1132%" height="15" fill="rgb(217,2,50)" fg:x="81501" fg:w="119"/><text x="77.7615%" y="863.50"></text></g><g><title>__GI___write (119 samples, 0.11%)</title><rect x="77.5115%" y="837" width="0.1132%" height="15" fill="rgb(229,160,0)" fg:x="81501" fg:w="119"/><text x="77.7615%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (11 samples, 0.01%)</title><rect x="77.6313%" y="853" width="0.0105%" height="15" fill="rgb(207,78,37)" fg:x="81627" fg:w="11"/><text x="77.8813%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.01%)</title><rect x="77.6313%" y="837" width="0.0105%" height="15" fill="rgb(225,57,0)" fg:x="81627" fg:w="11"/><text x="77.8813%" y="847.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.01%)</title><rect x="77.6941%" y="709" width="0.0124%" height="15" fill="rgb(232,154,2)" fg:x="81693" fg:w="13"/><text x="77.9441%" y="719.50"></text></g><g><title>futex_wake_mark (25 samples, 0.02%)</title><rect x="77.7112%" y="709" width="0.0238%" height="15" fill="rgb(241,212,25)" fg:x="81711" fg:w="25"/><text x="77.9612%" y="719.50"></text></g><g><title>select_task_rq_fair (19 samples, 0.02%)</title><rect x="77.7521%" y="677" width="0.0181%" height="15" fill="rgb(226,69,20)" fg:x="81754" fg:w="19"/><text x="78.0021%" y="687.50"></text></g><g><title>enqueue_task_fair (53 samples, 0.05%)</title><rect x="77.7787%" y="645" width="0.0504%" height="15" fill="rgb(247,184,54)" fg:x="81782" fg:w="53"/><text x="78.0287%" y="655.50"></text></g><g><title>enqueue_entity (37 samples, 0.04%)</title><rect x="77.7939%" y="629" width="0.0352%" height="15" fill="rgb(210,145,0)" fg:x="81798" fg:w="37"/><text x="78.0439%" y="639.50"></text></g><g><title>update_load_avg (14 samples, 0.01%)</title><rect x="77.8158%" y="613" width="0.0133%" height="15" fill="rgb(253,82,12)" fg:x="81821" fg:w="14"/><text x="78.0658%" y="623.50"></text></g><g><title>psi_group_change (12 samples, 0.01%)</title><rect x="77.8291%" y="645" width="0.0114%" height="15" fill="rgb(245,42,11)" fg:x="81835" fg:w="12"/><text x="78.0791%" y="655.50"></text></g><g><title>psi_group_change (37 samples, 0.04%)</title><rect x="77.8539%" y="629" width="0.0352%" height="15" fill="rgb(219,147,32)" fg:x="81861" fg:w="37"/><text x="78.1039%" y="639.50"></text></g><g><title>ttwu_do_activate (126 samples, 0.12%)</title><rect x="77.7702%" y="677" width="0.1198%" height="15" fill="rgb(246,12,7)" fg:x="81773" fg:w="126"/><text x="78.0202%" y="687.50"></text></g><g><title>enqueue_task (121 samples, 0.12%)</title><rect x="77.7749%" y="661" width="0.1151%" height="15" fill="rgb(243,50,9)" fg:x="81778" fg:w="121"/><text x="78.0249%" y="671.50"></text></g><g><title>psi_task_change (52 samples, 0.05%)</title><rect x="77.8405%" y="645" width="0.0495%" height="15" fill="rgb(219,149,6)" fg:x="81847" fg:w="52"/><text x="78.0905%" y="655.50"></text></g><g><title>__smp_call_single_queue (13 samples, 0.01%)</title><rect x="77.9109%" y="661" width="0.0124%" height="15" fill="rgb(241,51,42)" fg:x="81921" fg:w="13"/><text x="78.1609%" y="671.50"></text></g><g><title>llist_add_batch (13 samples, 0.01%)</title><rect x="77.9109%" y="645" width="0.0124%" height="15" fill="rgb(226,128,27)" fg:x="81921" fg:w="13"/><text x="78.1609%" y="655.50"></text></g><g><title>ttwu_queue_wakelist (40 samples, 0.04%)</title><rect x="77.8957%" y="677" width="0.0380%" height="15" fill="rgb(244,144,4)" fg:x="81905" fg:w="40"/><text x="78.1457%" y="687.50"></text></g><g><title>__x64_sys_futex (291 samples, 0.28%)</title><rect x="77.6684%" y="757" width="0.2768%" height="15" fill="rgb(221,4,13)" fg:x="81666" fg:w="291"/><text x="77.9184%" y="767.50"></text></g><g><title>do_futex (287 samples, 0.27%)</title><rect x="77.6722%" y="741" width="0.2730%" height="15" fill="rgb(208,170,28)" fg:x="81670" fg:w="287"/><text x="77.9222%" y="751.50"></text></g><g><title>futex_wake (287 samples, 0.27%)</title><rect x="77.6722%" y="725" width="0.2730%" height="15" fill="rgb(226,131,13)" fg:x="81670" fg:w="287"/><text x="77.9222%" y="735.50"></text></g><g><title>wake_up_q (219 samples, 0.21%)</title><rect x="77.7369%" y="709" width="0.2083%" height="15" fill="rgb(215,72,41)" fg:x="81738" fg:w="219"/><text x="77.9869%" y="719.50"></text></g><g><title>try_to_wake_up (214 samples, 0.20%)</title><rect x="77.7416%" y="693" width="0.2035%" height="15" fill="rgb(243,108,20)" fg:x="81743" fg:w="214"/><text x="77.9916%" y="703.50"></text></g><g><title>update_rq_clock (12 samples, 0.01%)</title><rect x="77.9337%" y="677" width="0.0114%" height="15" fill="rgb(230,189,17)" fg:x="81945" fg:w="12"/><text x="78.1837%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (57 samples, 0.05%)</title><rect x="77.9480%" y="757" width="0.0542%" height="15" fill="rgb(220,50,17)" fg:x="81960" fg:w="57"/><text x="78.1980%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (357 samples, 0.34%)</title><rect x="77.6656%" y="789" width="0.3395%" height="15" fill="rgb(248,152,48)" fg:x="81663" fg:w="357"/><text x="77.9156%" y="799.50"></text></g><g><title>do_syscall_64 (355 samples, 0.34%)</title><rect x="77.6675%" y="773" width="0.3376%" height="15" fill="rgb(244,91,11)" fg:x="81665" fg:w="355"/><text x="77.9175%" y="783.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (384 samples, 0.37%)</title><rect x="77.6418%" y="853" width="0.3652%" height="15" fill="rgb(220,157,5)" fg:x="81638" fg:w="384"/><text x="77.8918%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (384 samples, 0.37%)</title><rect x="77.6418%" y="837" width="0.3652%" height="15" fill="rgb(253,137,8)" fg:x="81638" fg:w="384"/><text x="77.8918%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (384 samples, 0.37%)</title><rect x="77.6418%" y="821" width="0.3652%" height="15" fill="rgb(217,137,51)" fg:x="81638" fg:w="384"/><text x="77.8918%" y="831.50"></text></g><g><title>__GI___pthread_cond_signal (384 samples, 0.37%)</title><rect x="77.6418%" y="805" width="0.3652%" height="15" fill="rgb(218,209,53)" fg:x="81638" fg:w="384"/><text x="77.8918%" y="815.50"></text></g><g><title>parking::Unparker::unpark (428 samples, 0.41%)</title><rect x="77.6266%" y="885" width="0.4070%" height="15" fill="rgb(249,137,25)" fg:x="81622" fg:w="428"/><text x="77.8766%" y="895.50"></text></g><g><title>parking::Inner::unpark (427 samples, 0.41%)</title><rect x="77.6275%" y="869" width="0.4061%" height="15" fill="rgb(239,155,26)" fg:x="81623" fg:w="427"/><text x="77.8775%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.03%)</title><rect x="78.0070%" y="853" width="0.0266%" height="15" fill="rgb(227,85,46)" fg:x="82022" fg:w="28"/><text x="78.2570%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.03%)</title><rect x="78.0070%" y="837" width="0.0266%" height="15" fill="rgb(251,107,43)" fg:x="82022" fg:w="28"/><text x="78.2570%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.03%)</title><rect x="78.0079%" y="821" width="0.0257%" height="15" fill="rgb(234,170,33)" fg:x="82023" fg:w="27"/><text x="78.2579%" y="831.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="78.0079%" y="805" width="0.0257%" height="15" fill="rgb(206,29,35)" fg:x="82023" fg:w="27"/><text x="78.2579%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (555 samples, 0.53%)</title><rect x="77.5096%" y="901" width="0.5278%" height="15" fill="rgb(227,138,25)" fg:x="81499" fg:w="555"/><text x="77.7596%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (569 samples, 0.54%)</title><rect x="77.5096%" y="933" width="0.5411%" height="15" fill="rgb(249,131,35)" fg:x="81499" fg:w="569"/><text x="77.7596%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (569 samples, 0.54%)</title><rect x="77.5096%" y="917" width="0.5411%" height="15" fill="rgb(239,6,40)" fg:x="81499" fg:w="569"/><text x="77.7596%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="78.0374%" y="901" width="0.0133%" height="15" fill="rgb(246,136,47)" fg:x="82054" fg:w="14"/><text x="78.2874%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="78.0374%" y="885" width="0.0133%" height="15" fill="rgb(253,58,26)" fg:x="82054" fg:w="14"/><text x="78.2874%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="78.0384%" y="869" width="0.0124%" height="15" fill="rgb(237,141,10)" fg:x="82055" fg:w="13"/><text x="78.2884%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="78.0384%" y="853" width="0.0124%" height="15" fill="rgb(234,156,12)" fg:x="82055" fg:w="13"/><text x="78.2884%" y="863.50"></text></g><g><title>async_executor::State::notify (677 samples, 0.64%)</title><rect x="77.4544%" y="949" width="0.6439%" height="15" fill="rgb(243,224,36)" fg:x="81441" fg:w="677"/><text x="77.7044%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.05%)</title><rect x="78.0507%" y="933" width="0.0476%" height="15" fill="rgb(205,229,51)" fg:x="82068" fg:w="50"/><text x="78.3007%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (50 samples, 0.05%)</title><rect x="78.0507%" y="917" width="0.0476%" height="15" fill="rgb(223,189,4)" fg:x="82068" fg:w="50"/><text x="78.3007%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (46 samples, 0.04%)</title><rect x="78.0545%" y="901" width="0.0437%" height="15" fill="rgb(249,167,54)" fg:x="82072" fg:w="46"/><text x="78.3045%" y="911.50"></text></g><g><title>___pthread_mutex_lock (46 samples, 0.04%)</title><rect x="78.0545%" y="885" width="0.0437%" height="15" fill="rgb(218,34,28)" fg:x="82072" fg:w="46"/><text x="78.3045%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (26 samples, 0.02%)</title><rect x="78.0736%" y="869" width="0.0247%" height="15" fill="rgb(232,109,42)" fg:x="82092" fg:w="26"/><text x="78.3236%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="78.0783%" y="853" width="0.0200%" height="15" fill="rgb(248,214,46)" fg:x="82097" fg:w="21"/><text x="78.3283%" y="863.50"></text></g><g><title>do_syscall_64 (21 samples, 0.02%)</title><rect x="78.0783%" y="837" width="0.0200%" height="15" fill="rgb(244,216,40)" fg:x="82097" fg:w="21"/><text x="78.3283%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (23 samples, 0.02%)</title><rect x="78.1097%" y="917" width="0.0219%" height="15" fill="rgb(231,226,31)" fg:x="82130" fg:w="23"/><text x="78.3597%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23 samples, 0.02%)</title><rect x="78.1097%" y="901" width="0.0219%" height="15" fill="rgb(238,38,43)" fg:x="82130" fg:w="23"/><text x="78.3597%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.01%)</title><rect x="78.1316%" y="917" width="0.0114%" height="15" fill="rgb(208,88,43)" fg:x="82153" fg:w="12"/><text x="78.3816%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.01%)</title><rect x="78.1316%" y="901" width="0.0114%" height="15" fill="rgb(205,136,37)" fg:x="82153" fg:w="12"/><text x="78.3816%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (727 samples, 0.69%)</title><rect x="77.4535%" y="965" width="0.6914%" height="15" fill="rgb(237,34,14)" fg:x="81440" fg:w="727"/><text x="77.7035%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (49 samples, 0.05%)</title><rect x="78.0983%" y="949" width="0.0466%" height="15" fill="rgb(236,193,44)" fg:x="82118" fg:w="49"/><text x="78.3483%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (44 samples, 0.04%)</title><rect x="78.1030%" y="933" width="0.0418%" height="15" fill="rgb(231,48,10)" fg:x="82123" fg:w="44"/><text x="78.3530%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (28 samples, 0.03%)</title><rect x="78.1449%" y="965" width="0.0266%" height="15" fill="rgb(213,141,34)" fg:x="82167" fg:w="28"/><text x="78.3949%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.03%)</title><rect x="78.1449%" y="949" width="0.0266%" height="15" fill="rgb(249,130,34)" fg:x="82167" fg:w="28"/><text x="78.3949%" y="959.50"></text></g><g><title>event_listener::List::notify (777 samples, 0.74%)</title><rect x="77.4373%" y="1029" width="0.7390%" height="15" fill="rgb(219,42,41)" fg:x="81423" fg:w="777"/><text x="77.6873%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (770 samples, 0.73%)</title><rect x="77.4440%" y="1013" width="0.7323%" height="15" fill="rgb(224,100,54)" fg:x="81430" fg:w="770"/><text x="77.6940%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (770 samples, 0.73%)</title><rect x="77.4440%" y="997" width="0.7323%" height="15" fill="rgb(229,200,27)" fg:x="81430" fg:w="770"/><text x="77.6940%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (762 samples, 0.72%)</title><rect x="77.4516%" y="981" width="0.7247%" height="15" fill="rgb(217,118,10)" fg:x="81438" fg:w="762"/><text x="77.7016%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (4,115 samples, 3.91%)</title><rect x="75.3555%" y="1061" width="3.9136%" height="15" fill="rgb(206,22,3)" fg:x="79234" fg:w="4115"/><text x="75.6055%" y="1071.50">asyn..</text></g><g><title>event_listener::Event::notify (2,193 samples, 2.09%)</title><rect x="77.1834%" y="1045" width="2.0857%" height="15" fill="rgb(232,163,46)" fg:x="81156" fg:w="2193"/><text x="77.4334%" y="1055.50">e..</text></g><g><title>event_listener::full_fence (1,149 samples, 1.09%)</title><rect x="78.1763%" y="1029" width="1.0928%" height="15" fill="rgb(206,95,13)" fg:x="82200" fg:w="1149"/><text x="78.4263%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,124 samples, 1.07%)</title><rect x="78.2000%" y="1013" width="1.0690%" height="15" fill="rgb(253,154,18)" fg:x="82225" fg:w="1124"/><text x="78.4500%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,124 samples, 1.07%)</title><rect x="78.2000%" y="997" width="1.0690%" height="15" fill="rgb(219,32,23)" fg:x="82225" fg:w="1124"/><text x="78.4500%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,124 samples, 1.07%)</title><rect x="78.2000%" y="981" width="1.0690%" height="15" fill="rgb(230,191,45)" fg:x="82225" fg:w="1124"/><text x="78.4500%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (11 samples, 0.01%)</title><rect x="79.2690%" y="1061" width="0.0105%" height="15" fill="rgb(229,64,36)" fg:x="83349" fg:w="11"/><text x="79.5190%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (375 samples, 0.36%)</title><rect x="79.2795%" y="1061" width="0.3566%" height="15" fill="rgb(205,129,25)" fg:x="83360" fg:w="375"/><text x="79.5295%" y="1071.50"></text></g><g><title>core::mem::replace (375 samples, 0.36%)</title><rect x="79.2795%" y="1045" width="0.3566%" height="15" fill="rgb(254,112,7)" fg:x="83360" fg:w="375"/><text x="79.5295%" y="1055.50"></text></g><g><title>core::ptr::read (364 samples, 0.35%)</title><rect x="79.2899%" y="1029" width="0.3462%" height="15" fill="rgb(226,53,48)" fg:x="83371" fg:w="364"/><text x="79.5399%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (346 samples, 0.33%)</title><rect x="79.3071%" y="1013" width="0.3291%" height="15" fill="rgb(214,153,38)" fg:x="83389" fg:w="346"/><text x="79.5571%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (412 samples, 0.39%)</title><rect x="79.6361%" y="1061" width="0.3918%" height="15" fill="rgb(243,101,7)" fg:x="83735" fg:w="412"/><text x="79.8861%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (398 samples, 0.38%)</title><rect x="79.6494%" y="1045" width="0.3785%" height="15" fill="rgb(240,140,22)" fg:x="83749" fg:w="398"/><text x="79.8994%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (11 samples, 0.01%)</title><rect x="80.0413%" y="1045" width="0.0105%" height="15" fill="rgb(235,114,2)" fg:x="84161" fg:w="11"/><text x="80.2913%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (11 samples, 0.01%)</title><rect x="80.0413%" y="1029" width="0.0105%" height="15" fill="rgb(242,59,12)" fg:x="84161" fg:w="11"/><text x="80.2913%" y="1039.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="80.0413%" y="1013" width="0.0105%" height="15" fill="rgb(252,134,9)" fg:x="84161" fg:w="11"/><text x="80.2913%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="80.0413%" y="997" width="0.0105%" height="15" fill="rgb(236,4,44)" fg:x="84161" fg:w="11"/><text x="80.2913%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="80.0413%" y="981" width="0.0105%" height="15" fill="rgb(254,172,41)" fg:x="84161" fg:w="11"/><text x="80.2913%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="80.0413%" y="965" width="0.0105%" height="15" fill="rgb(244,63,20)" fg:x="84161" fg:w="11"/><text x="80.2913%" y="975.50"></text></g><g><title>event_listener::Inner::lock (17 samples, 0.02%)</title><rect x="80.0565%" y="1045" width="0.0162%" height="15" fill="rgb(250,73,31)" fg:x="84177" fg:w="17"/><text x="80.3065%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="80.0565%" y="1029" width="0.0162%" height="15" fill="rgb(241,38,36)" fg:x="84177" fg:w="17"/><text x="80.3065%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="80.0565%" y="1013" width="0.0162%" height="15" fill="rgb(245,211,2)" fg:x="84177" fg:w="17"/><text x="80.3065%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="80.0565%" y="997" width="0.0162%" height="15" fill="rgb(206,120,28)" fg:x="84177" fg:w="17"/><text x="80.3065%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="80.0565%" y="981" width="0.0162%" height="15" fill="rgb(211,59,34)" fg:x="84177" fg:w="17"/><text x="80.3065%" y="991.50"></text></g><g><title>__GI___lll_lock_wait (16 samples, 0.02%)</title><rect x="80.0574%" y="965" width="0.0152%" height="15" fill="rgb(233,168,5)" fg:x="84178" fg:w="16"/><text x="80.3074%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="80.0622%" y="949" width="0.0105%" height="15" fill="rgb(234,33,13)" fg:x="84183" fg:w="11"/><text x="80.3122%" y="959.50"></text></g><g><title>do_syscall_64 (11 samples, 0.01%)</title><rect x="80.0622%" y="933" width="0.0105%" height="15" fill="rgb(231,150,26)" fg:x="84183" fg:w="11"/><text x="80.3122%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,753 samples, 6.42%)</title><rect x="73.9508%" y="1157" width="6.4224%" height="15" fill="rgb(217,191,4)" fg:x="77757" fg:w="6753"/><text x="74.2008%" y="1167.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,373 samples, 5.11%)</title><rect x="75.2632%" y="1141" width="5.1100%" height="15" fill="rgb(246,198,38)" fg:x="79137" fg:w="5373"/><text x="75.5132%" y="1151.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (5,373 samples, 5.11%)</title><rect x="75.2632%" y="1125" width="5.1100%" height="15" fill="rgb(245,64,37)" fg:x="79137" fg:w="5373"/><text x="75.5132%" y="1135.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,373 samples, 5.11%)</title><rect x="75.2632%" y="1109" width="5.1100%" height="15" fill="rgb(250,30,36)" fg:x="79137" fg:w="5373"/><text x="75.5132%" y="1119.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (5,373 samples, 5.11%)</title><rect x="75.2632%" y="1093" width="5.1100%" height="15" fill="rgb(217,86,53)" fg:x="79137" fg:w="5373"/><text x="75.5132%" y="1103.50">tremor..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (5,373 samples, 5.11%)</title><rect x="75.2632%" y="1077" width="5.1100%" height="15" fill="rgb(228,157,16)" fg:x="79137" fg:w="5373"/><text x="75.5132%" y="1087.50">&lt;async..</text></g><g><title>event_listener::Event::notify (355 samples, 0.34%)</title><rect x="80.0356%" y="1061" width="0.3376%" height="15" fill="rgb(217,59,31)" fg:x="84155" fg:w="355"/><text x="80.2856%" y="1071.50"></text></g><g><title>event_listener::full_fence (316 samples, 0.30%)</title><rect x="80.0727%" y="1045" width="0.3005%" height="15" fill="rgb(237,138,41)" fg:x="84194" fg:w="316"/><text x="80.3227%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (302 samples, 0.29%)</title><rect x="80.0860%" y="1029" width="0.2872%" height="15" fill="rgb(227,91,49)" fg:x="84208" fg:w="302"/><text x="80.3360%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (302 samples, 0.29%)</title><rect x="80.0860%" y="1013" width="0.2872%" height="15" fill="rgb(247,21,44)" fg:x="84208" fg:w="302"/><text x="80.3360%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (302 samples, 0.29%)</title><rect x="80.0860%" y="997" width="0.2872%" height="15" fill="rgb(219,210,51)" fg:x="84208" fg:w="302"/><text x="80.3360%" y="1007.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (17 samples, 0.02%)</title><rect x="80.3741%" y="1157" width="0.0162%" height="15" fill="rgb(209,140,6)" fg:x="84511" fg:w="17"/><text x="80.6241%" y="1167.50"></text></g><g><title>[unknown] (79,659 samples, 75.76%)</title><rect x="4.6544%" y="1173" width="75.7597%" height="15" fill="rgb(221,188,24)" fg:x="4894" fg:w="79659"/><text x="4.9044%" y="1183.50">[unknown]</text></g><g><title>tremor_script::srs::EventPayload::try_new (24 samples, 0.02%)</title><rect x="80.3913%" y="1157" width="0.0228%" height="15" fill="rgb(232,154,20)" fg:x="84529" fg:w="24"/><text x="80.6413%" y="1167.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (18 samples, 0.02%)</title><rect x="80.4150%" y="1093" width="0.0171%" height="15" fill="rgb(244,137,50)" fg:x="84554" fg:w="18"/><text x="80.6650%" y="1103.50"></text></g><g><title>native_write_msr (18 samples, 0.02%)</title><rect x="80.4150%" y="1077" width="0.0171%" height="15" fill="rgb(225,185,43)" fg:x="84554" fg:w="18"/><text x="80.6650%" y="1087.50"></text></g><g><title>ret_from_fork (20 samples, 0.02%)</title><rect x="80.4141%" y="1157" width="0.0190%" height="15" fill="rgb(213,205,38)" fg:x="84553" fg:w="20"/><text x="80.6641%" y="1167.50"></text></g><g><title>schedule_tail (20 samples, 0.02%)</title><rect x="80.4141%" y="1141" width="0.0190%" height="15" fill="rgb(236,73,12)" fg:x="84553" fg:w="20"/><text x="80.6641%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (20 samples, 0.02%)</title><rect x="80.4141%" y="1125" width="0.0190%" height="15" fill="rgb(235,219,13)" fg:x="84553" fg:w="20"/><text x="80.6641%" y="1135.50"></text></g><g><title>__perf_event_task_sched_in (20 samples, 0.02%)</title><rect x="80.4141%" y="1109" width="0.0190%" height="15" fill="rgb(218,59,36)" fg:x="84553" fg:w="20"/><text x="80.6641%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::init_message_queue (11 samples, 0.01%)</title><rect x="80.4331%" y="629" width="0.0105%" height="15" fill="rgb(205,110,39)" fg:x="84573" fg:w="11"/><text x="80.6831%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)1&gt; (11 samples, 0.01%)</title><rect x="80.4331%" y="613" width="0.0105%" height="15" fill="rgb(218,206,42)" fg:x="84573" fg:w="11"/><text x="80.6831%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)1&gt; (11 samples, 0.01%)</title><rect x="80.4331%" y="597" width="0.0105%" height="15" fill="rgb(248,125,24)" fg:x="84573" fg:w="11"/><text x="80.6831%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)1&gt; (11 samples, 0.01%)</title><rect x="80.4331%" y="581" width="0.0105%" height="15" fill="rgb(242,28,27)" fg:x="84573" fg:w="11"/><text x="80.6831%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)1&gt; (11 samples, 0.01%)</title><rect x="80.4331%" y="565" width="0.0105%" height="15" fill="rgb(216,228,15)" fg:x="84573" fg:w="11"/><text x="80.6831%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)1&gt; (11 samples, 0.01%)</title><rect x="80.4331%" y="549" width="0.0105%" height="15" fill="rgb(235,116,46)" fg:x="84573" fg:w="11"/><text x="80.6831%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)1&gt; (11 samples, 0.01%)</title><rect x="80.4331%" y="533" width="0.0105%" height="15" fill="rgb(224,18,32)" fg:x="84573" fg:w="11"/><text x="80.6831%" y="543.50"></text></g><g><title>snmalloc::AllocPool&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt;::acquire (17 samples, 0.02%)</title><rect x="80.4331%" y="709" width="0.0162%" height="15" fill="rgb(252,5,12)" fg:x="84573" fg:w="17"/><text x="80.6831%" y="719.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="80.4331%" y="693" width="0.0162%" height="15" fill="rgb(251,36,5)" fg:x="84573" fg:w="17"/><text x="80.6831%" y="703.50"></text></g><g><title>snmalloc::Pool&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt; &gt;::acquire&lt;snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="80.4331%" y="677" width="0.0162%" height="15" fill="rgb(217,53,14)" fg:x="84573" fg:w="17"/><text x="80.6831%" y="687.50"></text></g><g><title>snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;::alloc_chunk&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;, 4096ul, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;&amp;&gt; (17 samples, 0.02%)</title><rect x="80.4331%" y="661" width="0.0162%" height="15" fill="rgb(215,86,45)" fg:x="84573" fg:w="17"/><text x="80.6831%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::Allocator (17 samples, 0.02%)</title><rect x="80.4331%" y="645" width="0.0162%" height="15" fill="rgb(242,169,11)" fg:x="84573" fg:w="17"/><text x="80.6831%" y="655.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.01%)</title><rect x="80.4493%" y="533" width="0.0114%" height="15" fill="rgb(211,213,45)" fg:x="84590" fg:w="12"/><text x="80.6993%" y="543.50"></text></g><g><title>exc_page_fault (12 samples, 0.01%)</title><rect x="80.4493%" y="517" width="0.0114%" height="15" fill="rgb(205,88,11)" fg:x="84590" fg:w="12"/><text x="80.6993%" y="527.50"></text></g><g><title>do_user_addr_fault (12 samples, 0.01%)</title><rect x="80.4493%" y="501" width="0.0114%" height="15" fill="rgb(252,69,26)" fg:x="84590" fg:w="12"/><text x="80.6993%" y="511.50"></text></g><g><title>async_channel::bounded (30 samples, 0.03%)</title><rect x="80.4331%" y="933" width="0.0285%" height="15" fill="rgb(246,123,37)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (30 samples, 0.03%)</title><rect x="80.4331%" y="917" width="0.0285%" height="15" fill="rgb(212,205,5)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (30 samples, 0.03%)</title><rect x="80.4331%" y="901" width="0.0285%" height="15" fill="rgb(253,148,0)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.03%)</title><rect x="80.4331%" y="885" width="0.0285%" height="15" fill="rgb(239,22,4)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.03%)</title><rect x="80.4331%" y="869" width="0.0285%" height="15" fill="rgb(226,26,53)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="879.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.03%)</title><rect x="80.4331%" y="853" width="0.0285%" height="15" fill="rgb(225,229,45)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="863.50"></text></g><g><title>__rg_alloc (30 samples, 0.03%)</title><rect x="80.4331%" y="837" width="0.0285%" height="15" fill="rgb(220,60,37)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (30 samples, 0.03%)</title><rect x="80.4331%" y="821" width="0.0285%" height="15" fill="rgb(217,180,35)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="831.50"></text></g><g><title>rust_alloc (30 samples, 0.03%)</title><rect x="80.4331%" y="805" width="0.0285%" height="15" fill="rgb(229,7,53)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="80.4331%" y="789" width="0.0285%" height="15" fill="rgb(254,137,3)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="80.4331%" y="773" width="0.0285%" height="15" fill="rgb(215,140,41)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="80.4331%" y="757" width="0.0285%" height="15" fill="rgb(250,80,15)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="80.4331%" y="741" width="0.0285%" height="15" fill="rgb(252,191,6)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="751.50"></text></g><g><title>snmalloc::init_thread_allocator (30 samples, 0.03%)</title><rect x="80.4331%" y="725" width="0.0285%" height="15" fill="rgb(246,217,18)" fg:x="84573" fg:w="30"/><text x="80.6831%" y="735.50"></text></g><g><title>snmalloc::function_ref&lt;void* (void*)&gt;::operator (13 samples, 0.01%)</title><rect x="80.4493%" y="709" width="0.0124%" height="15" fill="rgb(223,93,7)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="719.50"></text></g><g><title>snmalloc::function_ref&lt;void* (void*)&gt;::execute&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long, unsigned long)::{lambda(void*)#1}&gt; (13 samples, 0.01%)</title><rect x="80.4493%" y="693" width="0.0124%" height="15" fill="rgb(225,55,52)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_first_alloc&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.4493%" y="677" width="0.0124%" height="15" fill="rgb(240,31,24)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.4493%" y="661" width="0.0124%" height="15" fill="rgb(205,56,52)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.4493%" y="645" width="0.0124%" height="15" fill="rgb(246,146,12)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.4493%" y="629" width="0.0124%" height="15" fill="rgb(239,84,36)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.4493%" y="613" width="0.0124%" height="15" fill="rgb(207,41,40)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="80.4493%" y="597" width="0.0124%" height="15" fill="rgb(241,179,25)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="607.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="80.4493%" y="581" width="0.0124%" height="15" fill="rgb(210,0,34)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="80.4493%" y="565" width="0.0124%" height="15" fill="rgb(225,217,29)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="575.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="80.4493%" y="549" width="0.0124%" height="15" fill="rgb(216,191,38)" fg:x="84590" fg:w="13"/><text x="80.6993%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (20 samples, 0.02%)</title><rect x="80.5843%" y="469" width="0.0190%" height="15" fill="rgb(232,140,52)" fg:x="84732" fg:w="20"/><text x="80.8343%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (19 samples, 0.02%)</title><rect x="80.5853%" y="453" width="0.0181%" height="15" fill="rgb(223,158,51)" fg:x="84733" fg:w="19"/><text x="80.8353%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="80.5900%" y="437" width="0.0133%" height="15" fill="rgb(235,29,51)" fg:x="84738" fg:w="14"/><text x="80.8400%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="80.6033%" y="469" width="0.0133%" height="15" fill="rgb(215,181,18)" fg:x="84752" fg:w="14"/><text x="80.8533%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (98 samples, 0.09%)</title><rect x="80.5396%" y="533" width="0.0932%" height="15" fill="rgb(227,125,34)" fg:x="84685" fg:w="98"/><text x="80.7896%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (84 samples, 0.08%)</title><rect x="80.5529%" y="517" width="0.0799%" height="15" fill="rgb(230,197,49)" fg:x="84699" fg:w="84"/><text x="80.8029%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.07%)</title><rect x="80.5672%" y="501" width="0.0656%" height="15" fill="rgb(239,141,16)" fg:x="84714" fg:w="69"/><text x="80.8172%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (53 samples, 0.05%)</title><rect x="80.5824%" y="485" width="0.0504%" height="15" fill="rgb(225,105,43)" fg:x="84730" fg:w="53"/><text x="80.8324%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="80.6224%" y="469" width="0.0105%" height="15" fill="rgb(214,131,14)" fg:x="84772" fg:w="11"/><text x="80.8724%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (11 samples, 0.01%)</title><rect x="80.6224%" y="453" width="0.0105%" height="15" fill="rgb(229,177,11)" fg:x="84772" fg:w="11"/><text x="80.8724%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.10%)</title><rect x="80.5396%" y="565" width="0.0989%" height="15" fill="rgb(231,180,14)" fg:x="84685" fg:w="104"/><text x="80.7896%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (104 samples, 0.10%)</title><rect x="80.5396%" y="549" width="0.0989%" height="15" fill="rgb(232,88,2)" fg:x="84685" fg:w="104"/><text x="80.7896%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (222 samples, 0.21%)</title><rect x="80.7184%" y="533" width="0.2111%" height="15" fill="rgb(205,220,8)" fg:x="84873" fg:w="222"/><text x="80.9684%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (157 samples, 0.15%)</title><rect x="80.7802%" y="517" width="0.1493%" height="15" fill="rgb(225,23,53)" fg:x="84938" fg:w="157"/><text x="81.0302%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (157 samples, 0.15%)</title><rect x="80.7802%" y="501" width="0.1493%" height="15" fill="rgb(213,62,29)" fg:x="84938" fg:w="157"/><text x="81.0302%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (307 samples, 0.29%)</title><rect x="80.6433%" y="549" width="0.2920%" height="15" fill="rgb(227,75,7)" fg:x="84794" fg:w="307"/><text x="80.8933%" y="559.50"></text></g><g><title>async_executor::steal (313 samples, 0.30%)</title><rect x="80.6385%" y="565" width="0.2977%" height="15" fill="rgb(207,105,14)" fg:x="84789" fg:w="313"/><text x="80.8885%" y="575.50"></text></g><g><title>concurrent_queue::full_fence (439 samples, 0.42%)</title><rect x="81.1435%" y="533" width="0.4175%" height="15" fill="rgb(245,62,29)" fg:x="85320" fg:w="439"/><text x="81.3935%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (437 samples, 0.42%)</title><rect x="81.1454%" y="517" width="0.4156%" height="15" fill="rgb(236,202,4)" fg:x="85322" fg:w="437"/><text x="81.3954%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (437 samples, 0.42%)</title><rect x="81.1454%" y="501" width="0.4156%" height="15" fill="rgb(250,67,1)" fg:x="85322" fg:w="437"/><text x="81.3954%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (437 samples, 0.42%)</title><rect x="81.1454%" y="485" width="0.4156%" height="15" fill="rgb(253,115,44)" fg:x="85322" fg:w="437"/><text x="81.3954%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (629 samples, 0.60%)</title><rect x="80.9933%" y="549" width="0.5982%" height="15" fill="rgb(251,139,18)" fg:x="85162" fg:w="629"/><text x="81.2433%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32 samples, 0.03%)</title><rect x="81.5611%" y="533" width="0.0304%" height="15" fill="rgb(218,22,32)" fg:x="85759" fg:w="32"/><text x="81.8111%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="81.5620%" y="517" width="0.0295%" height="15" fill="rgb(243,53,5)" fg:x="85760" fg:w="31"/><text x="81.8120%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (143 samples, 0.14%)</title><rect x="81.6267%" y="533" width="0.1360%" height="15" fill="rgb(227,56,16)" fg:x="85828" fg:w="143"/><text x="81.8767%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (142 samples, 0.14%)</title><rect x="81.6276%" y="517" width="0.1350%" height="15" fill="rgb(245,53,0)" fg:x="85829" fg:w="142"/><text x="81.8776%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (142 samples, 0.14%)</title><rect x="81.6276%" y="501" width="0.1350%" height="15" fill="rgb(216,170,35)" fg:x="85829" fg:w="142"/><text x="81.8776%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (142 samples, 0.14%)</title><rect x="81.6276%" y="485" width="0.1350%" height="15" fill="rgb(211,200,8)" fg:x="85829" fg:w="142"/><text x="81.8776%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="81.7684%" y="517" width="0.0105%" height="15" fill="rgb(228,204,44)" fg:x="85977" fg:w="11"/><text x="82.0184%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="81.7684%" y="501" width="0.0105%" height="15" fill="rgb(214,121,17)" fg:x="85977" fg:w="11"/><text x="82.0184%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (16 samples, 0.02%)</title><rect x="81.7684%" y="533" width="0.0152%" height="15" fill="rgb(233,64,38)" fg:x="85977" fg:w="16"/><text x="82.0184%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (59 samples, 0.06%)</title><rect x="81.7922%" y="533" width="0.0561%" height="15" fill="rgb(253,54,19)" fg:x="86002" fg:w="59"/><text x="82.0422%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (59 samples, 0.06%)</title><rect x="81.7922%" y="517" width="0.0561%" height="15" fill="rgb(253,94,18)" fg:x="86002" fg:w="59"/><text x="82.0422%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (38 samples, 0.04%)</title><rect x="81.8483%" y="533" width="0.0361%" height="15" fill="rgb(227,57,52)" fg:x="86061" fg:w="38"/><text x="82.0983%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (38 samples, 0.04%)</title><rect x="81.8483%" y="517" width="0.0361%" height="15" fill="rgb(230,228,50)" fg:x="86061" fg:w="38"/><text x="82.0983%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,101 samples, 1.05%)</title><rect x="80.9362%" y="565" width="1.0471%" height="15" fill="rgb(217,205,27)" fg:x="85102" fg:w="1101"/><text x="81.1862%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (412 samples, 0.39%)</title><rect x="81.5915%" y="549" width="0.3918%" height="15" fill="rgb(252,71,50)" fg:x="85791" fg:w="412"/><text x="81.8415%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (104 samples, 0.10%)</title><rect x="81.8844%" y="533" width="0.0989%" height="15" fill="rgb(209,86,4)" fg:x="86099" fg:w="104"/><text x="82.1344%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (104 samples, 0.10%)</title><rect x="81.8844%" y="517" width="0.0989%" height="15" fill="rgb(229,94,0)" fg:x="86099" fg:w="104"/><text x="82.1344%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (100 samples, 0.10%)</title><rect x="81.9957%" y="501" width="0.0951%" height="15" fill="rgb(252,223,21)" fg:x="86216" fg:w="100"/><text x="82.2457%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (100 samples, 0.10%)</title><rect x="81.9957%" y="485" width="0.0951%" height="15" fill="rgb(230,210,4)" fg:x="86216" fg:w="100"/><text x="82.2457%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (206 samples, 0.20%)</title><rect x="81.9833%" y="565" width="0.1959%" height="15" fill="rgb(240,149,38)" fg:x="86203" fg:w="206"/><text x="82.2333%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 samples, 0.20%)</title><rect x="81.9833%" y="549" width="0.1959%" height="15" fill="rgb(254,105,20)" fg:x="86203" fg:w="206"/><text x="82.2333%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (203 samples, 0.19%)</title><rect x="81.9862%" y="533" width="0.1931%" height="15" fill="rgb(253,87,46)" fg:x="86206" fg:w="203"/><text x="82.2362%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (197 samples, 0.19%)</title><rect x="81.9919%" y="517" width="0.1874%" height="15" fill="rgb(253,116,33)" fg:x="86212" fg:w="197"/><text x="82.2419%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (93 samples, 0.09%)</title><rect x="82.0908%" y="501" width="0.0884%" height="15" fill="rgb(229,198,5)" fg:x="86316" fg:w="93"/><text x="82.3408%" y="511.50"></text></g><g><title>___pthread_rwlock_unlock (93 samples, 0.09%)</title><rect x="82.0908%" y="485" width="0.0884%" height="15" fill="rgb(242,38,37)" fg:x="86316" fg:w="93"/><text x="82.3408%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="82.1840%" y="533" width="0.0114%" height="15" fill="rgb(242,69,53)" fg:x="86414" fg:w="12"/><text x="82.4340%" y="543.50"></text></g><g><title>fastrand::usize (19 samples, 0.02%)</title><rect x="82.1802%" y="565" width="0.0181%" height="15" fill="rgb(249,80,16)" fg:x="86410" fg:w="19"/><text x="82.4302%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="82.1830%" y="549" width="0.0152%" height="15" fill="rgb(206,128,11)" fg:x="86413" fg:w="16"/><text x="82.4330%" y="559.50"></text></g><g><title>___pthread_rwlock_rdlock (100 samples, 0.10%)</title><rect x="82.2059%" y="517" width="0.0951%" height="15" fill="rgb(212,35,20)" fg:x="86437" fg:w="100"/><text x="82.4559%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,934 samples, 1.84%)</title><rect x="80.5044%" y="581" width="1.8393%" height="15" fill="rgb(236,79,13)" fg:x="84648" fg:w="1934"/><text x="80.7544%" y="591.50">a..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (153 samples, 0.15%)</title><rect x="82.1983%" y="565" width="0.1455%" height="15" fill="rgb(233,123,3)" fg:x="86429" fg:w="153"/><text x="82.4483%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (147 samples, 0.14%)</title><rect x="82.2040%" y="549" width="0.1398%" height="15" fill="rgb(214,93,52)" fg:x="86435" fg:w="147"/><text x="82.4540%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (146 samples, 0.14%)</title><rect x="82.2049%" y="533" width="0.1389%" height="15" fill="rgb(251,37,40)" fg:x="86436" fg:w="146"/><text x="82.4549%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (45 samples, 0.04%)</title><rect x="82.3010%" y="517" width="0.0428%" height="15" fill="rgb(227,80,54)" fg:x="86537" fg:w="45"/><text x="82.5510%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (45 samples, 0.04%)</title><rect x="82.3010%" y="501" width="0.0428%" height="15" fill="rgb(254,48,11)" fg:x="86537" fg:w="45"/><text x="82.5510%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (20 samples, 0.02%)</title><rect x="82.3457%" y="565" width="0.0190%" height="15" fill="rgb(235,193,26)" fg:x="86584" fg:w="20"/><text x="82.5957%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="82.3457%" y="549" width="0.0190%" height="15" fill="rgb(229,99,21)" fg:x="86584" fg:w="20"/><text x="82.5957%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="82.3466%" y="533" width="0.0181%" height="15" fill="rgb(211,140,41)" fg:x="86585" fg:w="19"/><text x="82.5966%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="82.3466%" y="517" width="0.0181%" height="15" fill="rgb(240,227,30)" fg:x="86585" fg:w="19"/><text x="82.5966%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="82.3466%" y="501" width="0.0181%" height="15" fill="rgb(215,224,45)" fg:x="86585" fg:w="19"/><text x="82.5966%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (27 samples, 0.03%)</title><rect x="82.3647%" y="565" width="0.0257%" height="15" fill="rgb(206,123,31)" fg:x="86604" fg:w="27"/><text x="82.6147%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.03%)</title><rect x="82.3647%" y="549" width="0.0257%" height="15" fill="rgb(210,138,16)" fg:x="86604" fg:w="27"/><text x="82.6147%" y="559.50"></text></g><g><title>__fdget_pos (22 samples, 0.02%)</title><rect x="82.4179%" y="405" width="0.0209%" height="15" fill="rgb(228,57,28)" fg:x="86660" fg:w="22"/><text x="82.6679%" y="415.50"></text></g><g><title>__fget_light (21 samples, 0.02%)</title><rect x="82.4189%" y="389" width="0.0200%" height="15" fill="rgb(242,170,10)" fg:x="86661" fg:w="21"/><text x="82.6689%" y="399.50"></text></g><g><title>select_task_rq_fair (16 samples, 0.02%)</title><rect x="82.4883%" y="277" width="0.0152%" height="15" fill="rgb(228,214,39)" fg:x="86734" fg:w="16"/><text x="82.7383%" y="287.50"></text></g><g><title>enqueue_task_fair (52 samples, 0.05%)</title><rect x="82.5045%" y="245" width="0.0495%" height="15" fill="rgb(218,179,33)" fg:x="86751" fg:w="52"/><text x="82.7545%" y="255.50"></text></g><g><title>enqueue_entity (26 samples, 0.02%)</title><rect x="82.5292%" y="229" width="0.0247%" height="15" fill="rgb(235,193,39)" fg:x="86777" fg:w="26"/><text x="82.7792%" y="239.50"></text></g><g><title>ttwu_do_activate (92 samples, 0.09%)</title><rect x="82.5035%" y="277" width="0.0875%" height="15" fill="rgb(219,221,36)" fg:x="86750" fg:w="92"/><text x="82.7535%" y="287.50"></text></g><g><title>enqueue_task (91 samples, 0.09%)</title><rect x="82.5045%" y="261" width="0.0865%" height="15" fill="rgb(248,218,19)" fg:x="86751" fg:w="91"/><text x="82.7545%" y="271.50"></text></g><g><title>psi_task_change (32 samples, 0.03%)</title><rect x="82.5606%" y="245" width="0.0304%" height="15" fill="rgb(205,50,9)" fg:x="86810" fg:w="32"/><text x="82.8106%" y="255.50"></text></g><g><title>psi_group_change (18 samples, 0.02%)</title><rect x="82.5739%" y="229" width="0.0171%" height="15" fill="rgb(238,81,28)" fg:x="86824" fg:w="18"/><text x="82.8239%" y="239.50"></text></g><g><title>__wake_up_common (161 samples, 0.15%)</title><rect x="82.4636%" y="325" width="0.1531%" height="15" fill="rgb(235,110,19)" fg:x="86708" fg:w="161"/><text x="82.7136%" y="335.50"></text></g><g><title>autoremove_wake_function (153 samples, 0.15%)</title><rect x="82.4712%" y="309" width="0.1455%" height="15" fill="rgb(214,7,14)" fg:x="86716" fg:w="153"/><text x="82.7212%" y="319.50"></text></g><g><title>try_to_wake_up (152 samples, 0.14%)</title><rect x="82.4722%" y="293" width="0.1446%" height="15" fill="rgb(211,77,3)" fg:x="86717" fg:w="152"/><text x="82.7222%" y="303.50"></text></g><g><title>update_rq_clock (11 samples, 0.01%)</title><rect x="82.6063%" y="277" width="0.0105%" height="15" fill="rgb(229,5,9)" fg:x="86858" fg:w="11"/><text x="82.8563%" y="287.50"></text></g><g><title>__wake_up_common_lock (164 samples, 0.16%)</title><rect x="82.4636%" y="341" width="0.1560%" height="15" fill="rgb(225,90,11)" fg:x="86708" fg:w="164"/><text x="82.7136%" y="351.50"></text></g><g><title>_raw_read_lock_irqsave (13 samples, 0.01%)</title><rect x="82.6196%" y="341" width="0.0124%" height="15" fill="rgb(242,56,8)" fg:x="86872" fg:w="13"/><text x="82.8696%" y="351.50"></text></g><g><title>__wake_up_common (197 samples, 0.19%)</title><rect x="82.4484%" y="373" width="0.1874%" height="15" fill="rgb(249,212,39)" fg:x="86692" fg:w="197"/><text x="82.6984%" y="383.50"></text></g><g><title>ep_poll_callback (192 samples, 0.18%)</title><rect x="82.4531%" y="357" width="0.1826%" height="15" fill="rgb(236,90,9)" fg:x="86697" fg:w="192"/><text x="82.7031%" y="367.50"></text></g><g><title>eventfd_write (217 samples, 0.21%)</title><rect x="82.4427%" y="389" width="0.2064%" height="15" fill="rgb(206,88,35)" fg:x="86686" fg:w="217"/><text x="82.6927%" y="399.50"></text></g><g><title>ksys_write (252 samples, 0.24%)</title><rect x="82.4132%" y="421" width="0.2397%" height="15" fill="rgb(205,126,30)" fg:x="86655" fg:w="252"/><text x="82.6632%" y="431.50"></text></g><g><title>vfs_write (224 samples, 0.21%)</title><rect x="82.4398%" y="405" width="0.2130%" height="15" fill="rgb(230,176,12)" fg:x="86683" fg:w="224"/><text x="82.6898%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (50 samples, 0.05%)</title><rect x="82.6529%" y="421" width="0.0476%" height="15" fill="rgb(243,19,9)" fg:x="86907" fg:w="50"/><text x="82.9029%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (306 samples, 0.29%)</title><rect x="82.4103%" y="453" width="0.2910%" height="15" fill="rgb(245,171,17)" fg:x="86652" fg:w="306"/><text x="82.6603%" y="463.50"></text></g><g><title>do_syscall_64 (306 samples, 0.29%)</title><rect x="82.4103%" y="437" width="0.2910%" height="15" fill="rgb(227,52,21)" fg:x="86652" fg:w="306"/><text x="82.6603%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::notify (325 samples, 0.31%)</title><rect x="82.3942%" y="517" width="0.3091%" height="15" fill="rgb(238,69,14)" fg:x="86635" fg:w="325"/><text x="82.6442%" y="527.50"></text></g><g><title>polling::Poller::notify (324 samples, 0.31%)</title><rect x="82.3951%" y="501" width="0.3081%" height="15" fill="rgb(241,156,39)" fg:x="86636" fg:w="324"/><text x="82.6451%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (318 samples, 0.30%)</title><rect x="82.4008%" y="485" width="0.3024%" height="15" fill="rgb(212,227,28)" fg:x="86642" fg:w="318"/><text x="82.6508%" y="495.50"></text></g><g><title>__GI___write (317 samples, 0.30%)</title><rect x="82.4018%" y="469" width="0.3015%" height="15" fill="rgb(209,118,27)" fg:x="86643" fg:w="317"/><text x="82.6518%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (29 samples, 0.03%)</title><rect x="82.7223%" y="485" width="0.0276%" height="15" fill="rgb(226,102,5)" fg:x="86980" fg:w="29"/><text x="82.9723%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.03%)</title><rect x="82.7223%" y="469" width="0.0276%" height="15" fill="rgb(223,34,3)" fg:x="86980" fg:w="29"/><text x="82.9723%" y="479.50"></text></g><g><title>__entry_text_start (18 samples, 0.02%)</title><rect x="82.8221%" y="421" width="0.0171%" height="15" fill="rgb(221,81,38)" fg:x="87085" fg:w="18"/><text x="83.0721%" y="431.50"></text></g><g><title>_raw_spin_lock (41 samples, 0.04%)</title><rect x="82.9334%" y="341" width="0.0390%" height="15" fill="rgb(236,219,28)" fg:x="87202" fg:w="41"/><text x="83.1834%" y="351.50"></text></g><g><title>futex_wake_mark (67 samples, 0.06%)</title><rect x="82.9810%" y="341" width="0.0637%" height="15" fill="rgb(213,200,14)" fg:x="87252" fg:w="67"/><text x="83.2310%" y="351.50"></text></g><g><title>__futex_unqueue (21 samples, 0.02%)</title><rect x="83.0247%" y="325" width="0.0200%" height="15" fill="rgb(240,33,19)" fg:x="87298" fg:w="21"/><text x="83.2747%" y="335.50"></text></g><g><title>raw_spin_rq_lock_nested (16 samples, 0.02%)</title><rect x="83.1113%" y="309" width="0.0152%" height="15" fill="rgb(233,113,27)" fg:x="87389" fg:w="16"/><text x="83.3613%" y="319.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.01%)</title><rect x="83.1132%" y="293" width="0.0133%" height="15" fill="rgb(220,221,18)" fg:x="87391" fg:w="14"/><text x="83.3632%" y="303.50"></text></g><g><title>select_task_rq_fair (94 samples, 0.09%)</title><rect x="83.1265%" y="309" width="0.0894%" height="15" fill="rgb(238,92,8)" fg:x="87405" fg:w="94"/><text x="83.3765%" y="319.50"></text></g><g><title>available_idle_cpu (29 samples, 0.03%)</title><rect x="83.1883%" y="293" width="0.0276%" height="15" fill="rgb(222,164,16)" fg:x="87470" fg:w="29"/><text x="83.4383%" y="303.50"></text></g><g><title>reweight_entity (16 samples, 0.02%)</title><rect x="83.3547%" y="245" width="0.0152%" height="15" fill="rgb(241,119,3)" fg:x="87645" fg:w="16"/><text x="83.6047%" y="255.50"></text></g><g><title>update_cfs_group (13 samples, 0.01%)</title><rect x="83.3699%" y="245" width="0.0124%" height="15" fill="rgb(241,44,8)" fg:x="87661" fg:w="13"/><text x="83.6199%" y="255.50"></text></g><g><title>enqueue_task_fair (207 samples, 0.20%)</title><rect x="83.2320%" y="277" width="0.1969%" height="15" fill="rgb(230,36,40)" fg:x="87516" fg:w="207"/><text x="83.4820%" y="287.50"></text></g><g><title>enqueue_entity (129 samples, 0.12%)</title><rect x="83.3062%" y="261" width="0.1227%" height="15" fill="rgb(243,16,36)" fg:x="87594" fg:w="129"/><text x="83.5562%" y="271.50"></text></g><g><title>update_load_avg (45 samples, 0.04%)</title><rect x="83.3861%" y="245" width="0.0428%" height="15" fill="rgb(231,4,26)" fg:x="87678" fg:w="45"/><text x="83.6361%" y="255.50"></text></g><g><title>__update_load_avg_se (18 samples, 0.02%)</title><rect x="83.4118%" y="229" width="0.0171%" height="15" fill="rgb(240,9,31)" fg:x="87705" fg:w="18"/><text x="83.6618%" y="239.50"></text></g><g><title>psi_group_change (32 samples, 0.03%)</title><rect x="83.4289%" y="277" width="0.0304%" height="15" fill="rgb(207,173,15)" fg:x="87723" fg:w="32"/><text x="83.6789%" y="287.50"></text></g><g><title>psi_group_change (110 samples, 0.10%)</title><rect x="83.5212%" y="261" width="0.1046%" height="15" fill="rgb(224,192,53)" fg:x="87820" fg:w="110"/><text x="83.7712%" y="271.50"></text></g><g><title>ttwu_do_activate (433 samples, 0.41%)</title><rect x="83.2168%" y="309" width="0.4118%" height="15" fill="rgb(223,67,28)" fg:x="87500" fg:w="433"/><text x="83.4668%" y="319.50"></text></g><g><title>enqueue_task (424 samples, 0.40%)</title><rect x="83.2254%" y="293" width="0.4032%" height="15" fill="rgb(211,20,47)" fg:x="87509" fg:w="424"/><text x="83.4754%" y="303.50"></text></g><g><title>psi_task_change (178 samples, 0.17%)</title><rect x="83.4593%" y="277" width="0.1693%" height="15" fill="rgb(240,228,2)" fg:x="87755" fg:w="178"/><text x="83.7093%" y="287.50"></text></g><g><title>ttwu_do_wakeup (45 samples, 0.04%)</title><rect x="83.6286%" y="309" width="0.0428%" height="15" fill="rgb(248,151,12)" fg:x="87933" fg:w="45"/><text x="83.8786%" y="319.50"></text></g><g><title>check_preempt_curr (39 samples, 0.04%)</title><rect x="83.6343%" y="293" width="0.0371%" height="15" fill="rgb(244,8,39)" fg:x="87939" fg:w="39"/><text x="83.8843%" y="303.50"></text></g><g><title>resched_curr (29 samples, 0.03%)</title><rect x="83.6439%" y="277" width="0.0276%" height="15" fill="rgb(222,26,8)" fg:x="87949" fg:w="29"/><text x="83.8939%" y="287.50"></text></g><g><title>ttwu_queue_wakelist (19 samples, 0.02%)</title><rect x="83.6714%" y="309" width="0.0181%" height="15" fill="rgb(213,106,44)" fg:x="87978" fg:w="19"/><text x="83.9214%" y="319.50"></text></g><g><title>__x64_sys_futex (924 samples, 0.88%)</title><rect x="82.8497%" y="389" width="0.8788%" height="15" fill="rgb(214,129,20)" fg:x="87114" fg:w="924"/><text x="83.0997%" y="399.50"></text></g><g><title>do_futex (906 samples, 0.86%)</title><rect x="82.8668%" y="373" width="0.8617%" height="15" fill="rgb(212,32,13)" fg:x="87132" fg:w="906"/><text x="83.1168%" y="383.50"></text></g><g><title>futex_wake (901 samples, 0.86%)</title><rect x="82.8716%" y="357" width="0.8569%" height="15" fill="rgb(208,168,33)" fg:x="87137" fg:w="901"/><text x="83.1216%" y="367.50"></text></g><g><title>wake_up_q (711 samples, 0.68%)</title><rect x="83.0523%" y="341" width="0.6762%" height="15" fill="rgb(231,207,8)" fg:x="87327" fg:w="711"/><text x="83.3023%" y="351.50"></text></g><g><title>try_to_wake_up (702 samples, 0.67%)</title><rect x="83.0609%" y="325" width="0.6676%" height="15" fill="rgb(235,219,23)" fg:x="87336" fg:w="702"/><text x="83.3109%" y="335.50"></text></g><g><title>update_rq_clock (41 samples, 0.04%)</title><rect x="83.6895%" y="309" width="0.0390%" height="15" fill="rgb(226,216,26)" fg:x="87997" fg:w="41"/><text x="83.9395%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode (187 samples, 0.18%)</title><rect x="83.7323%" y="389" width="0.1778%" height="15" fill="rgb(239,137,16)" fg:x="88042" fg:w="187"/><text x="83.9823%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,136 samples, 1.08%)</title><rect x="82.8393%" y="421" width="1.0804%" height="15" fill="rgb(207,12,36)" fg:x="87103" fg:w="1136"/><text x="83.0893%" y="431.50"></text></g><g><title>do_syscall_64 (1,128 samples, 1.07%)</title><rect x="82.8469%" y="405" width="1.0728%" height="15" fill="rgb(210,214,24)" fg:x="87111" fg:w="1128"/><text x="83.0969%" y="415.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1,235 samples, 1.17%)</title><rect x="82.7499%" y="485" width="1.1745%" height="15" fill="rgb(206,56,30)" fg:x="87009" fg:w="1235"/><text x="82.9999%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1,235 samples, 1.17%)</title><rect x="82.7499%" y="469" width="1.1745%" height="15" fill="rgb(228,143,26)" fg:x="87009" fg:w="1235"/><text x="82.9999%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1,235 samples, 1.17%)</title><rect x="82.7499%" y="453" width="1.1745%" height="15" fill="rgb(216,218,46)" fg:x="87009" fg:w="1235"/><text x="82.9999%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (1,235 samples, 1.17%)</title><rect x="82.7499%" y="437" width="1.1745%" height="15" fill="rgb(206,6,19)" fg:x="87009" fg:w="1235"/><text x="82.9999%" y="447.50"></text></g><g><title>parking::Unparker::unpark (1,333 samples, 1.27%)</title><rect x="82.7090%" y="517" width="1.2677%" height="15" fill="rgb(239,177,51)" fg:x="86966" fg:w="1333"/><text x="82.9590%" y="527.50"></text></g><g><title>parking::Inner::unpark (1,327 samples, 1.26%)</title><rect x="82.7147%" y="501" width="1.2620%" height="15" fill="rgb(216,55,25)" fg:x="86972" fg:w="1327"/><text x="82.9647%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.05%)</title><rect x="83.9244%" y="485" width="0.0523%" height="15" fill="rgb(231,163,29)" fg:x="88244" fg:w="55"/><text x="84.1744%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (54 samples, 0.05%)</title><rect x="83.9254%" y="469" width="0.0514%" height="15" fill="rgb(232,149,50)" fg:x="88245" fg:w="54"/><text x="84.1754%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="83.9254%" y="453" width="0.0514%" height="15" fill="rgb(223,142,48)" fg:x="88245" fg:w="54"/><text x="84.1754%" y="463.50"></text></g><g><title>___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="83.9254%" y="437" width="0.0514%" height="15" fill="rgb(245,83,23)" fg:x="88245" fg:w="54"/><text x="84.1754%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (1,678 samples, 1.60%)</title><rect x="82.3904%" y="533" width="1.5959%" height="15" fill="rgb(224,63,2)" fg:x="86631" fg:w="1678"/><text x="82.6404%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (1,701 samples, 1.62%)</title><rect x="82.3904%" y="565" width="1.6177%" height="15" fill="rgb(218,65,53)" fg:x="86631" fg:w="1701"/><text x="82.6404%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1,701 samples, 1.62%)</title><rect x="82.3904%" y="549" width="1.6177%" height="15" fill="rgb(221,84,29)" fg:x="86631" fg:w="1701"/><text x="82.6404%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="83.9862%" y="533" width="0.0219%" height="15" fill="rgb(234,0,32)" fg:x="88309" fg:w="23"/><text x="84.2362%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="83.9862%" y="517" width="0.0219%" height="15" fill="rgb(206,20,16)" fg:x="88309" fg:w="23"/><text x="84.2362%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="83.9862%" y="501" width="0.0219%" height="15" fill="rgb(244,172,18)" fg:x="88309" fg:w="23"/><text x="84.2362%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="83.9862%" y="485" width="0.0219%" height="15" fill="rgb(254,133,1)" fg:x="88309" fg:w="23"/><text x="84.2362%" y="495.50"></text></g><g><title>async_executor::State::notify (1,761 samples, 1.67%)</title><rect x="82.3438%" y="581" width="1.6748%" height="15" fill="rgb(222,206,41)" fg:x="86582" fg:w="1761"/><text x="82.5938%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="84.0081%" y="565" width="0.0105%" height="15" fill="rgb(212,3,42)" fg:x="88332" fg:w="11"/><text x="84.2581%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="84.0300%" y="549" width="0.0533%" height="15" fill="rgb(241,11,4)" fg:x="88355" fg:w="56"/><text x="84.2800%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (55 samples, 0.05%)</title><rect x="84.0309%" y="533" width="0.0523%" height="15" fill="rgb(205,19,26)" fg:x="88356" fg:w="55"/><text x="84.2809%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="84.0319%" y="517" width="0.0514%" height="15" fill="rgb(210,179,32)" fg:x="88357" fg:w="54"/><text x="84.2819%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="84.0319%" y="501" width="0.0514%" height="15" fill="rgb(227,116,49)" fg:x="88357" fg:w="54"/><text x="84.2819%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (54 samples, 0.05%)</title><rect x="84.0319%" y="485" width="0.0514%" height="15" fill="rgb(211,146,6)" fg:x="88357" fg:w="54"/><text x="84.2819%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (54 samples, 0.05%)</title><rect x="84.0319%" y="469" width="0.0514%" height="15" fill="rgb(219,44,39)" fg:x="88357" fg:w="54"/><text x="84.2819%" y="479.50"></text></g><g><title>async_executor::Sleepers::insert (85 samples, 0.08%)</title><rect x="84.0290%" y="565" width="0.0808%" height="15" fill="rgb(234,128,11)" fg:x="88354" fg:w="85"/><text x="84.2790%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="84.0918%" y="549" width="0.0181%" height="15" fill="rgb(220,183,53)" fg:x="88420" fg:w="19"/><text x="84.3418%" y="559.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="84.0956%" y="533" width="0.0143%" height="15" fill="rgb(213,219,32)" fg:x="88424" fg:w="15"/><text x="84.3456%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="84.1327%" y="549" width="0.0219%" height="15" fill="rgb(232,156,16)" fg:x="88463" fg:w="23"/><text x="84.3827%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (22 samples, 0.02%)</title><rect x="84.1336%" y="533" width="0.0209%" height="15" fill="rgb(246,135,34)" fg:x="88464" fg:w="22"/><text x="84.3836%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="84.1346%" y="517" width="0.0200%" height="15" fill="rgb(241,99,0)" fg:x="88465" fg:w="21"/><text x="84.3846%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="84.1346%" y="501" width="0.0200%" height="15" fill="rgb(222,103,45)" fg:x="88465" fg:w="21"/><text x="84.3846%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="84.1346%" y="485" width="0.0200%" height="15" fill="rgb(212,57,4)" fg:x="88465" fg:w="21"/><text x="84.3846%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="84.1346%" y="469" width="0.0200%" height="15" fill="rgb(215,68,47)" fg:x="88465" fg:w="21"/><text x="84.3846%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="84.1546%" y="549" width="0.0105%" height="15" fill="rgb(230,84,2)" fg:x="88486" fg:w="11"/><text x="84.4046%" y="559.50"></text></g><g><title>async_executor::Sleepers::update (63 samples, 0.06%)</title><rect x="84.1108%" y="565" width="0.0599%" height="15" fill="rgb(220,102,14)" fg:x="88440" fg:w="63"/><text x="84.3608%" y="575.50"></text></g><g><title>__x64_sys_futex (36 samples, 0.03%)</title><rect x="84.2639%" y="437" width="0.0342%" height="15" fill="rgb(240,10,32)" fg:x="88601" fg:w="36"/><text x="84.5139%" y="447.50"></text></g><g><title>do_futex (28 samples, 0.03%)</title><rect x="84.2715%" y="421" width="0.0266%" height="15" fill="rgb(215,47,27)" fg:x="88609" fg:w="28"/><text x="84.5215%" y="431.50"></text></g><g><title>futex_wake (26 samples, 0.02%)</title><rect x="84.2734%" y="405" width="0.0247%" height="15" fill="rgb(233,188,43)" fg:x="88611" fg:w="26"/><text x="84.5234%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (107 samples, 0.10%)</title><rect x="84.2630%" y="469" width="0.1018%" height="15" fill="rgb(253,190,1)" fg:x="88600" fg:w="107"/><text x="84.5130%" y="479.50"></text></g><g><title>do_syscall_64 (107 samples, 0.10%)</title><rect x="84.2630%" y="453" width="0.1018%" height="15" fill="rgb(206,114,52)" fg:x="88600" fg:w="107"/><text x="84.5130%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (69 samples, 0.07%)</title><rect x="84.2991%" y="437" width="0.0656%" height="15" fill="rgb(233,120,37)" fg:x="88638" fg:w="69"/><text x="84.5491%" y="447.50"></text></g><g><title>__GI___lll_lock_wake (119 samples, 0.11%)</title><rect x="84.2563%" y="485" width="0.1132%" height="15" fill="rgb(214,52,39)" fg:x="88593" fg:w="119"/><text x="84.5063%" y="495.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (203 samples, 0.19%)</title><rect x="84.1774%" y="501" width="0.1931%" height="15" fill="rgb(223,80,29)" fg:x="88510" fg:w="203"/><text x="84.4274%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (212 samples, 0.20%)</title><rect x="84.1707%" y="565" width="0.2016%" height="15" fill="rgb(230,101,40)" fg:x="88503" fg:w="212"/><text x="84.4207%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (212 samples, 0.20%)</title><rect x="84.1707%" y="549" width="0.2016%" height="15" fill="rgb(219,211,8)" fg:x="88503" fg:w="212"/><text x="84.4207%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (207 samples, 0.20%)</title><rect x="84.1755%" y="533" width="0.1969%" height="15" fill="rgb(252,126,28)" fg:x="88508" fg:w="207"/><text x="84.4255%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (205 samples, 0.19%)</title><rect x="84.1774%" y="517" width="0.1950%" height="15" fill="rgb(215,56,38)" fg:x="88510" fg:w="205"/><text x="84.4274%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (57 samples, 0.05%)</title><rect x="84.3724%" y="565" width="0.0542%" height="15" fill="rgb(249,55,44)" fg:x="88715" fg:w="57"/><text x="84.6224%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (57 samples, 0.05%)</title><rect x="84.3724%" y="549" width="0.0542%" height="15" fill="rgb(220,221,32)" fg:x="88715" fg:w="57"/><text x="84.6224%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (35 samples, 0.03%)</title><rect x="84.4266%" y="565" width="0.0333%" height="15" fill="rgb(212,216,41)" fg:x="88772" fg:w="35"/><text x="84.6766%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (35 samples, 0.03%)</title><rect x="84.4266%" y="549" width="0.0333%" height="15" fill="rgb(228,213,43)" fg:x="88772" fg:w="35"/><text x="84.6766%" y="559.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="84.4599%" y="549" width="0.0105%" height="15" fill="rgb(211,31,26)" fg:x="88807" fg:w="11"/><text x="84.7099%" y="559.50"></text></g><g><title>std::sync::poison::Flag::borrow (11 samples, 0.01%)</title><rect x="84.4599%" y="533" width="0.0105%" height="15" fill="rgb(229,202,19)" fg:x="88807" fg:w="11"/><text x="84.7099%" y="543.50"></text></g><g><title>__x64_sys_futex (27 samples, 0.03%)</title><rect x="84.6529%" y="453" width="0.0257%" height="15" fill="rgb(229,105,46)" fg:x="89010" fg:w="27"/><text x="84.9029%" y="463.50"></text></g><g><title>do_futex (27 samples, 0.03%)</title><rect x="84.6529%" y="437" width="0.0257%" height="15" fill="rgb(235,108,1)" fg:x="89010" fg:w="27"/><text x="84.9029%" y="447.50"></text></g><g><title>futex_wait (26 samples, 0.02%)</title><rect x="84.6539%" y="421" width="0.0247%" height="15" fill="rgb(245,111,35)" fg:x="89011" fg:w="26"/><text x="84.9039%" y="431.50"></text></g><g><title>futex_wait_setup (21 samples, 0.02%)</title><rect x="84.6586%" y="405" width="0.0200%" height="15" fill="rgb(219,185,31)" fg:x="89016" fg:w="21"/><text x="84.9086%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (50 samples, 0.05%)</title><rect x="84.6482%" y="485" width="0.0476%" height="15" fill="rgb(214,4,43)" fg:x="89005" fg:w="50"/><text x="84.8982%" y="495.50"></text></g><g><title>do_syscall_64 (49 samples, 0.05%)</title><rect x="84.6491%" y="469" width="0.0466%" height="15" fill="rgb(235,227,40)" fg:x="89006" fg:w="49"/><text x="84.8991%" y="479.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.02%)</title><rect x="84.6786%" y="453" width="0.0171%" height="15" fill="rgb(230,88,30)" fg:x="89037" fg:w="18"/><text x="84.9286%" y="463.50"></text></g><g><title>__GI___lll_lock_wait (61 samples, 0.06%)</title><rect x="84.6386%" y="501" width="0.0580%" height="15" fill="rgb(216,217,1)" fg:x="88995" fg:w="61"/><text x="84.8886%" y="511.50"></text></g><g><title>async_executor::Ticker::sleep (714 samples, 0.68%)</title><rect x="84.0186%" y="581" width="0.6790%" height="15" fill="rgb(248,139,50)" fg:x="88343" fg:w="714"/><text x="84.2686%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (250 samples, 0.24%)</title><rect x="84.4599%" y="565" width="0.2378%" height="15" fill="rgb(233,1,21)" fg:x="88807" fg:w="250"/><text x="84.7099%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (239 samples, 0.23%)</title><rect x="84.4703%" y="549" width="0.2273%" height="15" fill="rgb(215,183,12)" fg:x="88818" fg:w="239"/><text x="84.7203%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (232 samples, 0.22%)</title><rect x="84.4770%" y="533" width="0.2206%" height="15" fill="rgb(229,104,42)" fg:x="88825" fg:w="232"/><text x="84.7270%" y="543.50"></text></g><g><title>___pthread_mutex_lock (232 samples, 0.22%)</title><rect x="84.4770%" y="517" width="0.2206%" height="15" fill="rgb(243,34,48)" fg:x="88825" fg:w="232"/><text x="84.7270%" y="527.50"></text></g><g><title>async_executor::Sleepers::remove (24 samples, 0.02%)</title><rect x="84.7024%" y="565" width="0.0228%" height="15" fill="rgb(239,11,44)" fg:x="89062" fg:w="24"/><text x="84.9524%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (11 samples, 0.01%)</title><rect x="84.7147%" y="549" width="0.0105%" height="15" fill="rgb(231,98,35)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (11 samples, 0.01%)</title><rect x="84.7147%" y="533" width="0.0105%" height="15" fill="rgb(233,28,25)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="84.7147%" y="517" width="0.0105%" height="15" fill="rgb(234,123,11)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (11 samples, 0.01%)</title><rect x="84.7147%" y="501" width="0.0105%" height="15" fill="rgb(220,69,3)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="511.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="84.7147%" y="485" width="0.0105%" height="15" fill="rgb(214,64,36)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="84.7147%" y="469" width="0.0105%" height="15" fill="rgb(211,138,32)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="84.7147%" y="453" width="0.0105%" height="15" fill="rgb(213,118,47)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="84.7147%" y="437" width="0.0105%" height="15" fill="rgb(243,124,49)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="84.7147%" y="421" width="0.0105%" height="15" fill="rgb(221,30,28)" fg:x="89075" fg:w="11"/><text x="84.9647%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.02%)</title><rect x="84.7423%" y="469" width="0.0181%" height="15" fill="rgb(246,37,13)" fg:x="89104" fg:w="19"/><text x="84.9923%" y="479.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="84.7423%" y="453" width="0.0181%" height="15" fill="rgb(249,66,14)" fg:x="89104" fg:w="19"/><text x="84.9923%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (38 samples, 0.04%)</title><rect x="84.7252%" y="501" width="0.0361%" height="15" fill="rgb(213,166,5)" fg:x="89086" fg:w="38"/><text x="84.9752%" y="511.50"></text></g><g><title>__GI___lll_lock_wake (22 samples, 0.02%)</title><rect x="84.7404%" y="485" width="0.0209%" height="15" fill="rgb(221,66,24)" fg:x="89102" fg:w="22"/><text x="84.9904%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (41 samples, 0.04%)</title><rect x="84.7252%" y="565" width="0.0390%" height="15" fill="rgb(210,132,17)" fg:x="89086" fg:w="41"/><text x="84.9752%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="84.7252%" y="549" width="0.0390%" height="15" fill="rgb(243,202,5)" fg:x="89086" fg:w="41"/><text x="84.9752%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.04%)</title><rect x="84.7252%" y="533" width="0.0390%" height="15" fill="rgb(233,70,48)" fg:x="89086" fg:w="41"/><text x="84.9752%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="84.7252%" y="517" width="0.0390%" height="15" fill="rgb(238,41,26)" fg:x="89086" fg:w="41"/><text x="84.9752%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (31 samples, 0.03%)</title><rect x="84.7642%" y="565" width="0.0295%" height="15" fill="rgb(241,19,31)" fg:x="89127" fg:w="31"/><text x="85.0142%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (31 samples, 0.03%)</title><rect x="84.7642%" y="549" width="0.0295%" height="15" fill="rgb(214,76,10)" fg:x="89127" fg:w="31"/><text x="85.0142%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (30 samples, 0.03%)</title><rect x="84.7937%" y="565" width="0.0285%" height="15" fill="rgb(254,202,22)" fg:x="89158" fg:w="30"/><text x="85.0437%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.03%)</title><rect x="84.7937%" y="549" width="0.0285%" height="15" fill="rgb(214,72,24)" fg:x="89158" fg:w="30"/><text x="85.0437%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,618 samples, 4.39%)</title><rect x="80.4892%" y="645" width="4.3919%" height="15" fill="rgb(221,92,46)" fg:x="84632" fg:w="4618"/><text x="80.7392%" y="655.50">&lt;core..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (4,617 samples, 4.39%)</title><rect x="80.4902%" y="629" width="4.3910%" height="15" fill="rgb(246,13,50)" fg:x="84633" fg:w="4617"/><text x="80.7402%" y="639.50">async..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,612 samples, 4.39%)</title><rect x="80.4949%" y="613" width="4.3862%" height="15" fill="rgb(240,165,38)" fg:x="84638" fg:w="4612"/><text x="80.7449%" y="623.50">&lt;futu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (4,608 samples, 4.38%)</title><rect x="80.4987%" y="597" width="4.3824%" height="15" fill="rgb(241,24,51)" fg:x="84642" fg:w="4608"/><text x="80.7487%" y="607.50">async..</text></g><g><title>async_executor::Ticker::wake (193 samples, 0.18%)</title><rect x="84.6976%" y="581" width="0.1836%" height="15" fill="rgb(227,51,44)" fg:x="89057" fg:w="193"/><text x="84.9476%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.06%)</title><rect x="84.8222%" y="565" width="0.0590%" height="15" fill="rgb(231,121,3)" fg:x="89188" fg:w="62"/><text x="85.0722%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (59 samples, 0.06%)</title><rect x="84.8251%" y="549" width="0.0561%" height="15" fill="rgb(245,3,41)" fg:x="89191" fg:w="59"/><text x="85.0751%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (57 samples, 0.05%)</title><rect x="84.8270%" y="533" width="0.0542%" height="15" fill="rgb(214,13,26)" fg:x="89193" fg:w="57"/><text x="85.0770%" y="543.50"></text></g><g><title>___pthread_mutex_lock (57 samples, 0.05%)</title><rect x="84.8270%" y="517" width="0.0542%" height="15" fill="rgb(252,75,11)" fg:x="89193" fg:w="57"/><text x="85.0770%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (23 samples, 0.02%)</title><rect x="84.8593%" y="501" width="0.0219%" height="15" fill="rgb(218,226,17)" fg:x="89227" fg:w="23"/><text x="85.1093%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.02%)</title><rect x="84.8640%" y="485" width="0.0171%" height="15" fill="rgb(248,89,38)" fg:x="89232" fg:w="18"/><text x="85.1140%" y="495.50"></text></g><g><title>do_syscall_64 (18 samples, 0.02%)</title><rect x="84.8640%" y="469" width="0.0171%" height="15" fill="rgb(237,73,46)" fg:x="89232" fg:w="18"/><text x="85.1140%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,658 samples, 4.43%)</title><rect x="80.4807%" y="677" width="4.4300%" height="15" fill="rgb(242,78,33)" fg:x="84623" fg:w="4658"/><text x="80.7307%" y="687.50">&lt;core..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (4,657 samples, 4.43%)</title><rect x="80.4816%" y="661" width="4.4290%" height="15" fill="rgb(235,60,3)" fg:x="84624" fg:w="4657"/><text x="80.7316%" y="671.50">async..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (30 samples, 0.03%)</title><rect x="84.8821%" y="645" width="0.0285%" height="15" fill="rgb(216,172,19)" fg:x="89251" fg:w="30"/><text x="85.1321%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (30 samples, 0.03%)</title><rect x="84.8821%" y="629" width="0.0285%" height="15" fill="rgb(227,6,42)" fg:x="89251" fg:w="30"/><text x="85.1321%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (29 samples, 0.03%)</title><rect x="84.9782%" y="549" width="0.0276%" height="15" fill="rgb(223,207,42)" fg:x="89352" fg:w="29"/><text x="85.2282%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (28 samples, 0.03%)</title><rect x="84.9791%" y="533" width="0.0266%" height="15" fill="rgb(246,138,30)" fg:x="89353" fg:w="28"/><text x="85.2291%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16 samples, 0.02%)</title><rect x="85.0058%" y="533" width="0.0152%" height="15" fill="rgb(251,199,47)" fg:x="89381" fg:w="16"/><text x="85.2558%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (25 samples, 0.02%)</title><rect x="85.0286%" y="485" width="0.0238%" height="15" fill="rgb(228,218,44)" fg:x="89405" fg:w="25"/><text x="85.2786%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="85.6953%" y="469" width="0.0133%" height="15" fill="rgb(220,68,6)" fg:x="90106" fg:w="14"/><text x="85.9453%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="85.6953%" y="453" width="0.0133%" height="15" fill="rgb(240,60,26)" fg:x="90106" fg:w="14"/><text x="85.9453%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="85.7086%" y="469" width="0.0114%" height="15" fill="rgb(211,200,19)" fg:x="90120" fg:w="12"/><text x="85.9586%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="85.7095%" y="453" width="0.0105%" height="15" fill="rgb(242,145,30)" fg:x="90121" fg:w="11"/><text x="85.9595%" y="463.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.05%)</title><rect x="85.7200%" y="469" width="0.0523%" height="15" fill="rgb(225,64,13)" fg:x="90132" fg:w="55"/><text x="85.9700%" y="479.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.01%)</title><rect x="85.7618%" y="453" width="0.0105%" height="15" fill="rgb(218,103,35)" fg:x="90176" fg:w="11"/><text x="86.0118%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="85.8008%" y="453" width="0.0143%" height="15" fill="rgb(216,93,46)" fg:x="90217" fg:w="15"/><text x="86.0508%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (12 samples, 0.01%)</title><rect x="86.0548%" y="421" width="0.0114%" height="15" fill="rgb(225,159,27)" fg:x="90484" fg:w="12"/><text x="86.3048%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (12 samples, 0.01%)</title><rect x="86.0548%" y="405" width="0.0114%" height="15" fill="rgb(225,204,11)" fg:x="90484" fg:w="12"/><text x="86.3048%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (12 samples, 0.01%)</title><rect x="86.0548%" y="389" width="0.0114%" height="15" fill="rgb(205,56,4)" fg:x="90484" fg:w="12"/><text x="86.3048%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="86.0548%" y="373" width="0.0114%" height="15" fill="rgb(206,6,35)" fg:x="90484" fg:w="12"/><text x="86.3048%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="86.0548%" y="357" width="0.0114%" height="15" fill="rgb(247,73,52)" fg:x="90484" fg:w="12"/><text x="86.3048%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (22 samples, 0.02%)</title><rect x="86.0662%" y="373" width="0.0209%" height="15" fill="rgb(246,97,4)" fg:x="90496" fg:w="22"/><text x="86.3162%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (404 samples, 0.38%)</title><rect x="85.7733%" y="469" width="0.3842%" height="15" fill="rgb(212,37,15)" fg:x="90188" fg:w="404"/><text x="86.0233%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (360 samples, 0.34%)</title><rect x="85.8151%" y="453" width="0.3424%" height="15" fill="rgb(208,130,40)" fg:x="90232" fg:w="360"/><text x="86.0651%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (108 samples, 0.10%)</title><rect x="86.0548%" y="437" width="0.1027%" height="15" fill="rgb(236,55,29)" fg:x="90484" fg:w="108"/><text x="86.3048%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (96 samples, 0.09%)</title><rect x="86.0662%" y="421" width="0.0913%" height="15" fill="rgb(209,156,45)" fg:x="90496" fg:w="96"/><text x="86.3162%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (96 samples, 0.09%)</title><rect x="86.0662%" y="405" width="0.0913%" height="15" fill="rgb(249,107,4)" fg:x="90496" fg:w="96"/><text x="86.3162%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.09%)</title><rect x="86.0662%" y="389" width="0.0913%" height="15" fill="rgb(227,7,13)" fg:x="90496" fg:w="96"/><text x="86.3162%" y="399.50"></text></g><g><title>core::mem::drop (74 samples, 0.07%)</title><rect x="86.0871%" y="373" width="0.0704%" height="15" fill="rgb(250,129,14)" fg:x="90518" fg:w="74"/><text x="86.3371%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (74 samples, 0.07%)</title><rect x="86.0871%" y="357" width="0.0704%" height="15" fill="rgb(229,92,13)" fg:x="90518" fg:w="74"/><text x="86.3371%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.07%)</title><rect x="86.0871%" y="341" width="0.0704%" height="15" fill="rgb(245,98,39)" fg:x="90518" fg:w="74"/><text x="86.3371%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (39 samples, 0.04%)</title><rect x="86.1204%" y="325" width="0.0371%" height="15" fill="rgb(234,135,48)" fg:x="90553" fg:w="39"/><text x="86.3704%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="86.1394%" y="309" width="0.0181%" height="15" fill="rgb(230,98,28)" fg:x="90573" fg:w="19"/><text x="86.3894%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (19 samples, 0.02%)</title><rect x="86.1394%" y="293" width="0.0181%" height="15" fill="rgb(223,121,0)" fg:x="90573" fg:w="19"/><text x="86.3894%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (19 samples, 0.02%)</title><rect x="86.1394%" y="277" width="0.0181%" height="15" fill="rgb(234,173,33)" fg:x="90573" fg:w="19"/><text x="86.3894%" y="287.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="86.1394%" y="261" width="0.0181%" height="15" fill="rgb(245,47,8)" fg:x="90573" fg:w="19"/><text x="86.3894%" y="271.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="86.1413%" y="245" width="0.0162%" height="15" fill="rgb(205,17,20)" fg:x="90575" fg:w="17"/><text x="86.3913%" y="255.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (281 samples, 0.27%)</title><rect x="86.1651%" y="469" width="0.2672%" height="15" fill="rgb(232,151,16)" fg:x="90600" fg:w="281"/><text x="86.4151%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="86.4190%" y="453" width="0.0133%" height="15" fill="rgb(208,30,32)" fg:x="90867" fg:w="14"/><text x="86.6690%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (263 samples, 0.25%)</title><rect x="86.4732%" y="437" width="0.2501%" height="15" fill="rgb(254,26,3)" fg:x="90924" fg:w="263"/><text x="86.7232%" y="447.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="86.7272%" y="325" width="0.0133%" height="15" fill="rgb(240,177,30)" fg:x="91191" fg:w="14"/><text x="86.9772%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (12 samples, 0.01%)</title><rect x="86.7661%" y="277" width="0.0114%" height="15" fill="rgb(248,76,44)" fg:x="91232" fg:w="12"/><text x="87.0161%" y="287.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (12 samples, 0.01%)</title><rect x="86.7661%" y="261" width="0.0114%" height="15" fill="rgb(241,186,54)" fg:x="91232" fg:w="12"/><text x="87.0161%" y="271.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (12 samples, 0.01%)</title><rect x="86.7661%" y="245" width="0.0114%" height="15" fill="rgb(249,171,29)" fg:x="91232" fg:w="12"/><text x="87.0161%" y="255.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="86.7661%" y="229" width="0.0114%" height="15" fill="rgb(237,151,44)" fg:x="91232" fg:w="12"/><text x="87.0161%" y="239.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (12 samples, 0.01%)</title><rect x="86.7661%" y="213" width="0.0114%" height="15" fill="rgb(228,174,30)" fg:x="91232" fg:w="12"/><text x="87.0161%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="86.7814%" y="213" width="0.0209%" height="15" fill="rgb(252,14,37)" fg:x="91248" fg:w="22"/><text x="87.0314%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="86.7814%" y="197" width="0.0209%" height="15" fill="rgb(207,111,40)" fg:x="91248" fg:w="22"/><text x="87.0314%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (19 samples, 0.02%)</title><rect x="86.7842%" y="181" width="0.0181%" height="15" fill="rgb(248,171,54)" fg:x="91251" fg:w="19"/><text x="87.0342%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (28 samples, 0.03%)</title><rect x="86.7814%" y="229" width="0.0266%" height="15" fill="rgb(211,127,2)" fg:x="91248" fg:w="28"/><text x="87.0314%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (44 samples, 0.04%)</title><rect x="86.7785%" y="245" width="0.0418%" height="15" fill="rgb(236,87,47)" fg:x="91245" fg:w="44"/><text x="87.0285%" y="255.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (22 samples, 0.02%)</title><rect x="86.8375%" y="229" width="0.0209%" height="15" fill="rgb(223,190,45)" fg:x="91307" fg:w="22"/><text x="87.0875%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (317 samples, 0.30%)</title><rect x="86.7776%" y="277" width="0.3015%" height="15" fill="rgb(215,5,16)" fg:x="91244" fg:w="317"/><text x="87.0276%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (317 samples, 0.30%)</title><rect x="86.7776%" y="261" width="0.3015%" height="15" fill="rgb(252,82,33)" fg:x="91244" fg:w="317"/><text x="87.0276%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (272 samples, 0.26%)</title><rect x="86.8204%" y="245" width="0.2587%" height="15" fill="rgb(247,213,44)" fg:x="91289" fg:w="272"/><text x="87.0704%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (232 samples, 0.22%)</title><rect x="86.8584%" y="229" width="0.2206%" height="15" fill="rgb(205,196,44)" fg:x="91329" fg:w="232"/><text x="87.1084%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (232 samples, 0.22%)</title><rect x="86.8584%" y="213" width="0.2206%" height="15" fill="rgb(237,96,54)" fg:x="91329" fg:w="232"/><text x="87.1084%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (232 samples, 0.22%)</title><rect x="86.8584%" y="197" width="0.2206%" height="15" fill="rgb(230,113,34)" fg:x="91329" fg:w="232"/><text x="87.1084%" y="207.50"></text></g><g><title>snmalloc::FreeListIter::take (11 samples, 0.01%)</title><rect x="87.0952%" y="245" width="0.0105%" height="15" fill="rgb(221,224,12)" fg:x="91578" fg:w="11"/><text x="87.3452%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (11 samples, 0.01%)</title><rect x="87.0952%" y="229" width="0.0105%" height="15" fill="rgb(219,112,44)" fg:x="91578" fg:w="11"/><text x="87.3452%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="87.0790%" y="277" width="0.0361%" height="15" fill="rgb(210,31,13)" fg:x="91561" fg:w="38"/><text x="87.3290%" y="287.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (30 samples, 0.03%)</title><rect x="87.0867%" y="261" width="0.0285%" height="15" fill="rgb(230,25,16)" fg:x="91569" fg:w="30"/><text x="87.3367%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (26 samples, 0.02%)</title><rect x="87.1152%" y="277" width="0.0247%" height="15" fill="rgb(246,108,53)" fg:x="91599" fg:w="26"/><text x="87.3652%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (26 samples, 0.02%)</title><rect x="87.1152%" y="261" width="0.0247%" height="15" fill="rgb(241,172,50)" fg:x="91599" fg:w="26"/><text x="87.3652%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (549 samples, 0.52%)</title><rect x="86.7405%" y="325" width="0.5221%" height="15" fill="rgb(235,141,10)" fg:x="91205" fg:w="549"/><text x="86.9905%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (549 samples, 0.52%)</title><rect x="86.7405%" y="309" width="0.5221%" height="15" fill="rgb(220,174,43)" fg:x="91205" fg:w="549"/><text x="86.9905%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (534 samples, 0.51%)</title><rect x="86.7547%" y="293" width="0.5079%" height="15" fill="rgb(215,181,40)" fg:x="91220" fg:w="534"/><text x="87.0047%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (129 samples, 0.12%)</title><rect x="87.1399%" y="277" width="0.1227%" height="15" fill="rgb(230,97,2)" fg:x="91625" fg:w="129"/><text x="87.3899%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (129 samples, 0.12%)</title><rect x="87.1399%" y="261" width="0.1227%" height="15" fill="rgb(211,25,27)" fg:x="91625" fg:w="129"/><text x="87.3899%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (879 samples, 0.84%)</title><rect x="86.4323%" y="453" width="0.8360%" height="15" fill="rgb(230,87,26)" fg:x="90881" fg:w="879"/><text x="86.6823%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (573 samples, 0.54%)</title><rect x="86.7233%" y="437" width="0.5450%" height="15" fill="rgb(227,160,17)" fg:x="91187" fg:w="573"/><text x="86.9733%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (573 samples, 0.54%)</title><rect x="86.7233%" y="421" width="0.5450%" height="15" fill="rgb(244,85,34)" fg:x="91187" fg:w="573"/><text x="86.9733%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (573 samples, 0.54%)</title><rect x="86.7233%" y="405" width="0.5450%" height="15" fill="rgb(207,70,0)" fg:x="91187" fg:w="573"/><text x="86.9733%" y="415.50"></text></g><g><title>alloc::alloc::alloc (571 samples, 0.54%)</title><rect x="86.7253%" y="389" width="0.5430%" height="15" fill="rgb(223,129,7)" fg:x="91189" fg:w="571"/><text x="86.9753%" y="399.50"></text></g><g><title>__rg_alloc (571 samples, 0.54%)</title><rect x="86.7253%" y="373" width="0.5430%" height="15" fill="rgb(246,105,7)" fg:x="91189" fg:w="571"/><text x="86.9753%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (571 samples, 0.54%)</title><rect x="86.7253%" y="357" width="0.5430%" height="15" fill="rgb(215,154,42)" fg:x="91189" fg:w="571"/><text x="86.9753%" y="367.50"></text></g><g><title>rust_alloc (569 samples, 0.54%)</title><rect x="86.7272%" y="341" width="0.5411%" height="15" fill="rgb(220,215,30)" fg:x="91191" fg:w="569"/><text x="86.9772%" y="351.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (886 samples, 0.84%)</title><rect x="86.4323%" y="469" width="0.8426%" height="15" fill="rgb(228,81,51)" fg:x="90881" fg:w="886"/><text x="86.6823%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="87.3510%" y="373" width="0.0124%" height="15" fill="rgb(247,71,54)" fg:x="91847" fg:w="13"/><text x="87.6010%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (15 samples, 0.01%)</title><rect x="87.3691%" y="325" width="0.0143%" height="15" fill="rgb(234,176,34)" fg:x="91866" fg:w="15"/><text x="87.6191%" y="335.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (114 samples, 0.11%)</title><rect x="87.2883%" y="453" width="0.1084%" height="15" fill="rgb(241,103,54)" fg:x="91781" fg:w="114"/><text x="87.5383%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (76 samples, 0.07%)</title><rect x="87.3244%" y="437" width="0.0723%" height="15" fill="rgb(228,22,34)" fg:x="91819" fg:w="76"/><text x="87.5744%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (48 samples, 0.05%)</title><rect x="87.3510%" y="421" width="0.0457%" height="15" fill="rgb(241,179,48)" fg:x="91847" fg:w="48"/><text x="87.6010%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (48 samples, 0.05%)</title><rect x="87.3510%" y="405" width="0.0457%" height="15" fill="rgb(235,167,37)" fg:x="91847" fg:w="48"/><text x="87.6010%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (48 samples, 0.05%)</title><rect x="87.3510%" y="389" width="0.0457%" height="15" fill="rgb(213,109,30)" fg:x="91847" fg:w="48"/><text x="87.6010%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="87.3663%" y="373" width="0.0304%" height="15" fill="rgb(222,172,16)" fg:x="91863" fg:w="32"/><text x="87.6163%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.03%)</title><rect x="87.3682%" y="357" width="0.0285%" height="15" fill="rgb(233,192,5)" fg:x="91865" fg:w="30"/><text x="87.6182%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.03%)</title><rect x="87.3682%" y="341" width="0.0285%" height="15" fill="rgb(247,189,41)" fg:x="91865" fg:w="30"/><text x="87.6182%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.01%)</title><rect x="87.3834%" y="325" width="0.0133%" height="15" fill="rgb(218,134,47)" fg:x="91881" fg:w="14"/><text x="87.6334%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (13 samples, 0.01%)</title><rect x="87.3843%" y="309" width="0.0124%" height="15" fill="rgb(216,29,3)" fg:x="91882" fg:w="13"/><text x="87.6343%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (13 samples, 0.01%)</title><rect x="87.3843%" y="293" width="0.0124%" height="15" fill="rgb(246,140,12)" fg:x="91882" fg:w="13"/><text x="87.6343%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (11 samples, 0.01%)</title><rect x="87.7809%" y="421" width="0.0105%" height="15" fill="rgb(230,136,11)" fg:x="92299" fg:w="11"/><text x="88.0309%" y="431.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (437 samples, 0.42%)</title><rect x="87.3967%" y="453" width="0.4156%" height="15" fill="rgb(247,22,47)" fg:x="91895" fg:w="437"/><text x="87.6467%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="87.7714%" y="437" width="0.0409%" height="15" fill="rgb(218,84,22)" fg:x="92289" fg:w="43"/><text x="88.0214%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (22 samples, 0.02%)</title><rect x="87.7914%" y="421" width="0.0209%" height="15" fill="rgb(216,87,39)" fg:x="92310" fg:w="22"/><text x="88.0414%" y="431.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (573 samples, 0.54%)</title><rect x="87.2750%" y="469" width="0.5450%" height="15" fill="rgb(221,178,8)" fg:x="91767" fg:w="573"/><text x="87.5250%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2,255 samples, 2.14%)</title><rect x="87.8199%" y="469" width="2.1446%" height="15" fill="rgb(230,42,11)" fg:x="92340" fg:w="2255"/><text x="88.0699%" y="479.50">_..</text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="89.9950%" y="277" width="0.0124%" height="15" fill="rgb(237,229,4)" fg:x="94627" fg:w="13"/><text x="90.2450%" y="287.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="90.0073%" y="277" width="0.0133%" height="15" fill="rgb(222,31,33)" fg:x="94640" fg:w="14"/><text x="90.2573%" y="287.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="90.0273%" y="213" width="0.0114%" height="15" fill="rgb(210,17,39)" fg:x="94661" fg:w="12"/><text x="90.2773%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="90.0273%" y="197" width="0.0114%" height="15" fill="rgb(244,93,20)" fg:x="94661" fg:w="12"/><text x="90.2773%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (27 samples, 0.03%)</title><rect x="90.0939%" y="181" width="0.0257%" height="15" fill="rgb(210,40,47)" fg:x="94731" fg:w="27"/><text x="90.3439%" y="191.50"></text></g><g><title> (27 samples, 0.03%)</title><rect x="90.0939%" y="165" width="0.0257%" height="15" fill="rgb(239,211,47)" fg:x="94731" fg:w="27"/><text x="90.3439%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (96 samples, 0.09%)</title><rect x="90.0397%" y="213" width="0.0913%" height="15" fill="rgb(251,223,49)" fg:x="94674" fg:w="96"/><text x="90.2897%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (83 samples, 0.08%)</title><rect x="90.0520%" y="197" width="0.0789%" height="15" fill="rgb(221,149,5)" fg:x="94687" fg:w="83"/><text x="90.3020%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (162 samples, 0.15%)</title><rect x="90.0206%" y="277" width="0.1541%" height="15" fill="rgb(219,224,51)" fg:x="94654" fg:w="162"/><text x="90.2706%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (162 samples, 0.15%)</title><rect x="90.0206%" y="261" width="0.1541%" height="15" fill="rgb(223,7,8)" fg:x="94654" fg:w="162"/><text x="90.2706%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (162 samples, 0.15%)</title><rect x="90.0206%" y="245" width="0.1541%" height="15" fill="rgb(241,217,22)" fg:x="94654" fg:w="162"/><text x="90.2706%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (162 samples, 0.15%)</title><rect x="90.0206%" y="229" width="0.1541%" height="15" fill="rgb(248,209,0)" fg:x="94654" fg:w="162"/><text x="90.2706%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (42 samples, 0.04%)</title><rect x="90.1348%" y="213" width="0.0399%" height="15" fill="rgb(217,205,4)" fg:x="94774" fg:w="42"/><text x="90.3848%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (191 samples, 0.18%)</title><rect x="89.9950%" y="293" width="0.1817%" height="15" fill="rgb(228,124,39)" fg:x="94627" fg:w="191"/><text x="90.2450%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (258 samples, 0.25%)</title><rect x="89.9655%" y="469" width="0.2454%" height="15" fill="rgb(250,116,42)" fg:x="94596" fg:w="258"/><text x="90.2155%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (258 samples, 0.25%)</title><rect x="89.9655%" y="453" width="0.2454%" height="15" fill="rgb(223,202,9)" fg:x="94596" fg:w="258"/><text x="90.2155%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (243 samples, 0.23%)</title><rect x="89.9797%" y="437" width="0.2311%" height="15" fill="rgb(242,222,40)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (243 samples, 0.23%)</title><rect x="89.9797%" y="421" width="0.2311%" height="15" fill="rgb(229,99,46)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (243 samples, 0.23%)</title><rect x="89.9797%" y="405" width="0.2311%" height="15" fill="rgb(225,56,46)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (243 samples, 0.23%)</title><rect x="89.9797%" y="389" width="0.2311%" height="15" fill="rgb(227,94,5)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (243 samples, 0.23%)</title><rect x="89.9797%" y="373" width="0.2311%" height="15" fill="rgb(205,112,38)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (243 samples, 0.23%)</title><rect x="89.9797%" y="357" width="0.2311%" height="15" fill="rgb(231,133,46)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="367.50"></text></g><g><title>__rg_dealloc (243 samples, 0.23%)</title><rect x="89.9797%" y="341" width="0.2311%" height="15" fill="rgb(217,16,9)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (243 samples, 0.23%)</title><rect x="89.9797%" y="325" width="0.2311%" height="15" fill="rgb(249,173,9)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="335.50"></text></g><g><title>rust_dealloc (243 samples, 0.23%)</title><rect x="89.9797%" y="309" width="0.2311%" height="15" fill="rgb(205,163,53)" fg:x="94611" fg:w="243"/><text x="90.2297%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (36 samples, 0.03%)</title><rect x="90.1766%" y="293" width="0.0342%" height="15" fill="rgb(217,54,41)" fg:x="94818" fg:w="36"/><text x="90.4266%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (43 samples, 0.04%)</title><rect x="90.2108%" y="453" width="0.0409%" height="15" fill="rgb(228,216,12)" fg:x="94854" fg:w="43"/><text x="90.4608%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (47 samples, 0.04%)</title><rect x="90.2108%" y="469" width="0.0447%" height="15" fill="rgb(244,228,15)" fg:x="94854" fg:w="47"/><text x="90.4608%" y="479.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="90.2993%" y="325" width="0.0114%" height="15" fill="rgb(221,176,53)" fg:x="94947" fg:w="12"/><text x="90.5493%" y="335.50"></text></g><g><title>rust_dealloc (25 samples, 0.02%)</title><rect x="90.3107%" y="261" width="0.0238%" height="15" fill="rgb(205,94,34)" fg:x="94959" fg:w="25"/><text x="90.5607%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="90.3497%" y="213" width="0.0190%" height="15" fill="rgb(213,110,48)" fg:x="95000" fg:w="20"/><text x="90.5997%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="90.3583%" y="197" width="0.0105%" height="15" fill="rgb(236,142,28)" fg:x="95009" fg:w="11"/><text x="90.6083%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (48 samples, 0.05%)</title><rect x="90.3373%" y="261" width="0.0457%" height="15" fill="rgb(225,135,29)" fg:x="94987" fg:w="48"/><text x="90.5873%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (48 samples, 0.05%)</title><rect x="90.3373%" y="245" width="0.0457%" height="15" fill="rgb(252,45,31)" fg:x="94987" fg:w="48"/><text x="90.5873%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (48 samples, 0.05%)</title><rect x="90.3373%" y="229" width="0.0457%" height="15" fill="rgb(211,187,50)" fg:x="94987" fg:w="48"/><text x="90.5873%" y="239.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="90.3687%" y="213" width="0.0143%" height="15" fill="rgb(229,109,7)" fg:x="95020" fg:w="15"/><text x="90.6187%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="90.3687%" y="197" width="0.0143%" height="15" fill="rgb(251,131,51)" fg:x="95020" fg:w="15"/><text x="90.6187%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (82 samples, 0.08%)</title><rect x="90.3107%" y="293" width="0.0780%" height="15" fill="rgb(251,180,35)" fg:x="94959" fg:w="82"/><text x="90.5607%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (82 samples, 0.08%)</title><rect x="90.3107%" y="277" width="0.0780%" height="15" fill="rgb(211,46,32)" fg:x="94959" fg:w="82"/><text x="90.5607%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (97 samples, 0.09%)</title><rect x="90.3107%" y="325" width="0.0923%" height="15" fill="rgb(248,123,17)" fg:x="94959" fg:w="97"/><text x="90.5607%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (97 samples, 0.09%)</title><rect x="90.3107%" y="309" width="0.0923%" height="15" fill="rgb(227,141,18)" fg:x="94959" fg:w="97"/><text x="90.5607%" y="319.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="90.3887%" y="293" width="0.0143%" height="15" fill="rgb(216,102,9)" fg:x="95041" fg:w="15"/><text x="90.6387%" y="303.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="90.3887%" y="277" width="0.0143%" height="15" fill="rgb(253,47,13)" fg:x="95041" fg:w="15"/><text x="90.6387%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="90.3887%" y="261" width="0.0143%" height="15" fill="rgb(226,93,23)" fg:x="95041" fg:w="15"/><text x="90.6387%" y="271.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="90.3887%" y="245" width="0.0143%" height="15" fill="rgb(247,104,17)" fg:x="95041" fg:w="15"/><text x="90.6387%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (123 samples, 0.12%)</title><rect x="90.2993%" y="341" width="0.1170%" height="15" fill="rgb(233,203,26)" fg:x="94947" fg:w="123"/><text x="90.5493%" y="351.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="90.4030%" y="325" width="0.0133%" height="15" fill="rgb(244,98,49)" fg:x="95056" fg:w="14"/><text x="90.6530%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="90.4030%" y="309" width="0.0133%" height="15" fill="rgb(235,134,22)" fg:x="95056" fg:w="14"/><text x="90.6530%" y="319.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="90.4030%" y="293" width="0.0133%" height="15" fill="rgb(221,70,32)" fg:x="95056" fg:w="14"/><text x="90.6530%" y="303.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="90.4030%" y="277" width="0.0133%" height="15" fill="rgb(238,15,50)" fg:x="95056" fg:w="14"/><text x="90.6530%" y="287.50"></text></g><g><title>rust_dealloc (145 samples, 0.14%)</title><rect x="90.2879%" y="357" width="0.1379%" height="15" fill="rgb(215,221,48)" fg:x="94935" fg:w="145"/><text x="90.5379%" y="367.50"></text></g><g><title>alloc::alloc::box_free (177 samples, 0.17%)</title><rect x="90.2660%" y="437" width="0.1683%" height="15" fill="rgb(236,73,3)" fg:x="94912" fg:w="177"/><text x="90.5160%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (155 samples, 0.15%)</title><rect x="90.2869%" y="421" width="0.1474%" height="15" fill="rgb(250,107,11)" fg:x="94934" fg:w="155"/><text x="90.5369%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (154 samples, 0.15%)</title><rect x="90.2879%" y="405" width="0.1465%" height="15" fill="rgb(242,39,14)" fg:x="94935" fg:w="154"/><text x="90.5379%" y="415.50"></text></g><g><title>__rg_dealloc (154 samples, 0.15%)</title><rect x="90.2879%" y="389" width="0.1465%" height="15" fill="rgb(248,164,37)" fg:x="94935" fg:w="154"/><text x="90.5379%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (154 samples, 0.15%)</title><rect x="90.2879%" y="373" width="0.1465%" height="15" fill="rgb(217,60,12)" fg:x="94935" fg:w="154"/><text x="90.5379%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (209 samples, 0.20%)</title><rect x="90.2555%" y="469" width="0.1988%" height="15" fill="rgb(240,125,29)" fg:x="94901" fg:w="209"/><text x="90.5055%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (209 samples, 0.20%)</title><rect x="90.2555%" y="453" width="0.1988%" height="15" fill="rgb(208,207,28)" fg:x="94901" fg:w="209"/><text x="90.5055%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="90.4343%" y="437" width="0.0200%" height="15" fill="rgb(209,159,27)" fg:x="95089" fg:w="21"/><text x="90.6843%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt; (21 samples, 0.02%)</title><rect x="90.4343%" y="421" width="0.0200%" height="15" fill="rgb(251,176,53)" fg:x="95089" fg:w="21"/><text x="90.6843%" y="431.50"></text></g><g><title>core::time::Duration::as_nanos (33 samples, 0.03%)</title><rect x="90.5190%" y="453" width="0.0314%" height="15" fill="rgb(211,85,7)" fg:x="95178" fg:w="33"/><text x="90.7690%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (187 samples, 0.18%)</title><rect x="90.6883%" y="405" width="0.1778%" height="15" fill="rgb(216,64,54)" fg:x="95356" fg:w="187"/><text x="90.9383%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (187 samples, 0.18%)</title><rect x="90.6883%" y="389" width="0.1778%" height="15" fill="rgb(217,54,24)" fg:x="95356" fg:w="187"/><text x="90.9383%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (185 samples, 0.18%)</title><rect x="90.6902%" y="373" width="0.1759%" height="15" fill="rgb(208,206,53)" fg:x="95358" fg:w="185"/><text x="90.9402%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (185 samples, 0.18%)</title><rect x="90.6902%" y="357" width="0.1759%" height="15" fill="rgb(251,74,39)" fg:x="95358" fg:w="185"/><text x="90.9402%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (185 samples, 0.18%)</title><rect x="90.6902%" y="341" width="0.1759%" height="15" fill="rgb(226,47,5)" fg:x="95358" fg:w="185"/><text x="90.9402%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (82 samples, 0.08%)</title><rect x="90.7881%" y="325" width="0.0780%" height="15" fill="rgb(234,111,33)" fg:x="95461" fg:w="82"/><text x="91.0381%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (396 samples, 0.38%)</title><rect x="90.5504%" y="437" width="0.3766%" height="15" fill="rgb(251,14,10)" fg:x="95211" fg:w="396"/><text x="90.8004%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (396 samples, 0.38%)</title><rect x="90.5504%" y="421" width="0.3766%" height="15" fill="rgb(232,43,0)" fg:x="95211" fg:w="396"/><text x="90.8004%" y="431.50"></text></g><g><title>core::time::Duration::new (64 samples, 0.06%)</title><rect x="90.8661%" y="405" width="0.0609%" height="15" fill="rgb(222,68,43)" fg:x="95543" fg:w="64"/><text x="91.1161%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (418 samples, 0.40%)</title><rect x="90.5504%" y="453" width="0.3975%" height="15" fill="rgb(217,24,23)" fg:x="95211" fg:w="418"/><text x="90.8004%" y="463.50"></text></g><g><title>tremor_common::time::nanotime (22 samples, 0.02%)</title><rect x="90.9270%" y="437" width="0.0209%" height="15" fill="rgb(229,209,14)" fg:x="95607" fg:w="22"/><text x="91.1770%" y="447.50"></text></g><g><title>[[vdso]] (881 samples, 0.84%)</title><rect x="91.7801%" y="373" width="0.8379%" height="15" fill="rgb(250,149,48)" fg:x="96504" fg:w="881"/><text x="92.0301%" y="383.50"></text></g><g><title>__clock_gettime_2 (1,432 samples, 1.36%)</title><rect x="91.2570%" y="405" width="1.3619%" height="15" fill="rgb(210,120,37)" fg:x="95954" fg:w="1432"/><text x="91.5070%" y="415.50"></text></g><g><title>__vdso_clock_gettime (1,359 samples, 1.29%)</title><rect x="91.3264%" y="389" width="1.2925%" height="15" fill="rgb(210,21,8)" fg:x="96027" fg:w="1359"/><text x="91.5764%" y="399.50"></text></g><g><title>tremor_common::time::nanotime (2,277 samples, 2.17%)</title><rect x="90.4543%" y="469" width="2.1655%" height="15" fill="rgb(243,145,7)" fg:x="95110" fg:w="2277"/><text x="90.7043%" y="479.50">t..</text></g><g><title>std::time::SystemTime::now (1,758 samples, 1.67%)</title><rect x="90.9479%" y="453" width="1.6719%" height="15" fill="rgb(238,178,32)" fg:x="95629" fg:w="1758"/><text x="91.1979%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,758 samples, 1.67%)</title><rect x="90.9479%" y="437" width="1.6719%" height="15" fill="rgb(222,4,10)" fg:x="95629" fg:w="1758"/><text x="91.1979%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (1,758 samples, 1.67%)</title><rect x="90.9479%" y="421" width="1.6719%" height="15" fill="rgb(239,7,37)" fg:x="95629" fg:w="1758"/><text x="91.1979%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="92.6284%" y="405" width="0.0105%" height="15" fill="rgb(215,31,37)" fg:x="97396" fg:w="11"/><text x="92.8784%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.02%)</title><rect x="92.6389%" y="309" width="0.0181%" height="15" fill="rgb(224,83,33)" fg:x="97407" fg:w="19"/><text x="92.8889%" y="319.50"></text></g><g><title>core::mem::drop (35 samples, 0.03%)</title><rect x="92.6389%" y="405" width="0.0333%" height="15" fill="rgb(239,55,3)" fg:x="97407" fg:w="35"/><text x="92.8889%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (35 samples, 0.03%)</title><rect x="92.6389%" y="389" width="0.0333%" height="15" fill="rgb(247,92,11)" fg:x="97407" fg:w="35"/><text x="92.8889%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="92.6389%" y="373" width="0.0333%" height="15" fill="rgb(239,200,7)" fg:x="97407" fg:w="35"/><text x="92.8889%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (35 samples, 0.03%)</title><rect x="92.6389%" y="357" width="0.0333%" height="15" fill="rgb(227,115,8)" fg:x="97407" fg:w="35"/><text x="92.8889%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (35 samples, 0.03%)</title><rect x="92.6389%" y="341" width="0.0333%" height="15" fill="rgb(215,189,27)" fg:x="97407" fg:w="35"/><text x="92.8889%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (35 samples, 0.03%)</title><rect x="92.6389%" y="325" width="0.0333%" height="15" fill="rgb(251,216,39)" fg:x="97407" fg:w="35"/><text x="92.8889%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (16 samples, 0.02%)</title><rect x="92.6569%" y="309" width="0.0152%" height="15" fill="rgb(207,29,47)" fg:x="97426" fg:w="16"/><text x="92.9069%" y="319.50"></text></g><g><title>core::mem::replace (16 samples, 0.02%)</title><rect x="92.6569%" y="293" width="0.0152%" height="15" fill="rgb(210,71,34)" fg:x="97426" fg:w="16"/><text x="92.9069%" y="303.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="92.6579%" y="277" width="0.0143%" height="15" fill="rgb(253,217,51)" fg:x="97427" fg:w="15"/><text x="92.9079%" y="287.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="92.6722%" y="405" width="0.0133%" height="15" fill="rgb(222,117,46)" fg:x="97442" fg:w="14"/><text x="92.9222%" y="415.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (73 samples, 0.07%)</title><rect x="92.6199%" y="469" width="0.0694%" height="15" fill="rgb(226,132,6)" fg:x="97387" fg:w="73"/><text x="92.8699%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (64 samples, 0.06%)</title><rect x="92.6284%" y="453" width="0.0609%" height="15" fill="rgb(254,145,51)" fg:x="97396" fg:w="64"/><text x="92.8784%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (64 samples, 0.06%)</title><rect x="92.6284%" y="437" width="0.0609%" height="15" fill="rgb(231,199,27)" fg:x="97396" fg:w="64"/><text x="92.8784%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="92.6284%" y="421" width="0.0609%" height="15" fill="rgb(245,158,14)" fg:x="97396" fg:w="64"/><text x="92.8784%" y="431.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (24 samples, 0.02%)</title><rect x="92.6893%" y="469" width="0.0228%" height="15" fill="rgb(240,113,14)" fg:x="97460" fg:w="24"/><text x="92.9393%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,083 samples, 7.69%)</title><rect x="85.0257%" y="501" width="7.6873%" height="15" fill="rgb(210,20,13)" fg:x="89402" fg:w="8083"/><text x="85.2757%" y="511.50">&lt;core::futu..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,055 samples, 7.66%)</title><rect x="85.0524%" y="485" width="7.6607%" height="15" fill="rgb(241,144,13)" fg:x="89430" fg:w="8055"/><text x="85.3024%" y="495.50">tremor_run..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,084 samples, 7.69%)</title><rect x="85.0257%" y="517" width="7.6883%" height="15" fill="rgb(235,43,34)" fg:x="89402" fg:w="8084"/><text x="85.2757%" y="527.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,166 samples, 7.77%)</title><rect x="84.9506%" y="629" width="7.7663%" height="15" fill="rgb(208,36,20)" fg:x="89323" fg:w="8166"/><text x="85.2006%" y="639.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,165 samples, 7.77%)</title><rect x="84.9515%" y="613" width="7.7653%" height="15" fill="rgb(239,204,10)" fg:x="89324" fg:w="8165"/><text x="85.2015%" y="623.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,138 samples, 7.74%)</title><rect x="84.9772%" y="597" width="7.7396%" height="15" fill="rgb(217,84,43)" fg:x="89351" fg:w="8138"/><text x="85.2272%" y="607.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,138 samples, 7.74%)</title><rect x="84.9772%" y="581" width="7.7396%" height="15" fill="rgb(241,170,50)" fg:x="89351" fg:w="8138"/><text x="85.2272%" y="591.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,137 samples, 7.74%)</title><rect x="84.9782%" y="565" width="7.7387%" height="15" fill="rgb(226,205,29)" fg:x="89352" fg:w="8137"/><text x="85.2282%" y="575.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,108 samples, 7.71%)</title><rect x="85.0058%" y="549" width="7.7111%" height="15" fill="rgb(233,113,1)" fg:x="89381" fg:w="8108"/><text x="85.2558%" y="559.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,087 samples, 7.69%)</title><rect x="85.0257%" y="533" width="7.6911%" height="15" fill="rgb(253,98,13)" fg:x="89402" fg:w="8087"/><text x="85.2757%" y="543.50">async_std::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,168 samples, 7.77%)</title><rect x="84.9506%" y="645" width="7.7682%" height="15" fill="rgb(211,115,12)" fg:x="89323" fg:w="8168"/><text x="85.2006%" y="655.50">&lt;core::pin:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (22 samples, 0.02%)</title><rect x="92.7188%" y="645" width="0.0209%" height="15" fill="rgb(208,12,16)" fg:x="97491" fg:w="22"/><text x="92.9688%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="92.7188%" y="629" width="0.0209%" height="15" fill="rgb(237,193,54)" fg:x="97491" fg:w="22"/><text x="92.9688%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="92.7188%" y="613" width="0.0209%" height="15" fill="rgb(243,22,42)" fg:x="97491" fg:w="22"/><text x="92.9688%" y="623.50"></text></g><g><title>ttwu_do_activate (11 samples, 0.01%)</title><rect x="92.7692%" y="309" width="0.0105%" height="15" fill="rgb(233,151,36)" fg:x="97544" fg:w="11"/><text x="93.0192%" y="319.50"></text></g><g><title>enqueue_task (11 samples, 0.01%)</title><rect x="92.7692%" y="293" width="0.0105%" height="15" fill="rgb(237,57,45)" fg:x="97544" fg:w="11"/><text x="93.0192%" y="303.50"></text></g><g><title>__wake_up_common (22 samples, 0.02%)</title><rect x="92.7606%" y="357" width="0.0209%" height="15" fill="rgb(221,88,17)" fg:x="97535" fg:w="22"/><text x="93.0106%" y="367.50"></text></g><g><title>autoremove_wake_function (21 samples, 0.02%)</title><rect x="92.7616%" y="341" width="0.0200%" height="15" fill="rgb(230,79,15)" fg:x="97536" fg:w="21"/><text x="93.0116%" y="351.50"></text></g><g><title>try_to_wake_up (20 samples, 0.02%)</title><rect x="92.7625%" y="325" width="0.0190%" height="15" fill="rgb(213,57,13)" fg:x="97537" fg:w="20"/><text x="93.0125%" y="335.50"></text></g><g><title>__wake_up_common (26 samples, 0.02%)</title><rect x="92.7587%" y="405" width="0.0247%" height="15" fill="rgb(222,116,39)" fg:x="97533" fg:w="26"/><text x="93.0087%" y="415.50"></text></g><g><title>ep_poll_callback (26 samples, 0.02%)</title><rect x="92.7587%" y="389" width="0.0247%" height="15" fill="rgb(245,107,2)" fg:x="97533" fg:w="26"/><text x="93.0087%" y="399.50"></text></g><g><title>__wake_up_common_lock (24 samples, 0.02%)</title><rect x="92.7606%" y="373" width="0.0228%" height="15" fill="rgb(238,1,10)" fg:x="97535" fg:w="24"/><text x="93.0106%" y="383.50"></text></g><g><title>ksys_write (32 samples, 0.03%)</title><rect x="92.7540%" y="453" width="0.0304%" height="15" fill="rgb(249,4,48)" fg:x="97528" fg:w="32"/><text x="93.0040%" y="463.50"></text></g><g><title>vfs_write (28 samples, 0.03%)</title><rect x="92.7578%" y="437" width="0.0266%" height="15" fill="rgb(223,151,18)" fg:x="97532" fg:w="28"/><text x="93.0078%" y="447.50"></text></g><g><title>eventfd_write (28 samples, 0.03%)</title><rect x="92.7578%" y="421" width="0.0266%" height="15" fill="rgb(227,65,43)" fg:x="97532" fg:w="28"/><text x="93.0078%" y="431.50"></text></g><g><title>async_io::reactor::Reactor::notify (46 samples, 0.04%)</title><rect x="92.7444%" y="549" width="0.0437%" height="15" fill="rgb(218,40,45)" fg:x="97518" fg:w="46"/><text x="92.9944%" y="559.50"></text></g><g><title>polling::Poller::notify (46 samples, 0.04%)</title><rect x="92.7444%" y="533" width="0.0437%" height="15" fill="rgb(252,121,31)" fg:x="97518" fg:w="46"/><text x="92.9944%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (42 samples, 0.04%)</title><rect x="92.7482%" y="517" width="0.0399%" height="15" fill="rgb(219,158,43)" fg:x="97522" fg:w="42"/><text x="92.9982%" y="527.50"></text></g><g><title>__GI___write (42 samples, 0.04%)</title><rect x="92.7482%" y="501" width="0.0399%" height="15" fill="rgb(231,162,42)" fg:x="97522" fg:w="42"/><text x="92.9982%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (38 samples, 0.04%)</title><rect x="92.7521%" y="485" width="0.0361%" height="15" fill="rgb(217,179,25)" fg:x="97526" fg:w="38"/><text x="93.0021%" y="495.50"></text></g><g><title>do_syscall_64 (38 samples, 0.04%)</title><rect x="92.7521%" y="469" width="0.0361%" height="15" fill="rgb(206,212,31)" fg:x="97526" fg:w="38"/><text x="93.0021%" y="479.50"></text></g><g><title>ttwu_do_activate (35 samples, 0.03%)</title><rect x="92.8196%" y="341" width="0.0333%" height="15" fill="rgb(235,144,12)" fg:x="97597" fg:w="35"/><text x="93.0696%" y="351.50"></text></g><g><title>enqueue_task (35 samples, 0.03%)</title><rect x="92.8196%" y="325" width="0.0333%" height="15" fill="rgb(213,51,10)" fg:x="97597" fg:w="35"/><text x="93.0696%" y="335.50"></text></g><g><title>psi_task_change (22 samples, 0.02%)</title><rect x="92.8319%" y="309" width="0.0209%" height="15" fill="rgb(231,145,14)" fg:x="97610" fg:w="22"/><text x="93.0819%" y="319.50"></text></g><g><title>psi_group_change (17 samples, 0.02%)</title><rect x="92.8367%" y="293" width="0.0162%" height="15" fill="rgb(235,15,28)" fg:x="97615" fg:w="17"/><text x="93.0867%" y="303.50"></text></g><g><title>__x64_sys_futex (59 samples, 0.06%)</title><rect x="92.7987%" y="421" width="0.0561%" height="15" fill="rgb(237,206,10)" fg:x="97575" fg:w="59"/><text x="93.0487%" y="431.50"></text></g><g><title>do_futex (59 samples, 0.06%)</title><rect x="92.7987%" y="405" width="0.0561%" height="15" fill="rgb(236,227,27)" fg:x="97575" fg:w="59"/><text x="93.0487%" y="415.50"></text></g><g><title>futex_wake (59 samples, 0.06%)</title><rect x="92.7987%" y="389" width="0.0561%" height="15" fill="rgb(246,83,35)" fg:x="97575" fg:w="59"/><text x="93.0487%" y="399.50"></text></g><g><title>wake_up_q (49 samples, 0.05%)</title><rect x="92.8082%" y="373" width="0.0466%" height="15" fill="rgb(220,136,24)" fg:x="97585" fg:w="49"/><text x="93.0582%" y="383.50"></text></g><g><title>try_to_wake_up (48 samples, 0.05%)</title><rect x="92.8091%" y="357" width="0.0457%" height="15" fill="rgb(217,3,25)" fg:x="97586" fg:w="48"/><text x="93.0591%" y="367.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (76 samples, 0.07%)</title><rect x="92.7920%" y="517" width="0.0723%" height="15" fill="rgb(239,24,14)" fg:x="97568" fg:w="76"/><text x="93.0420%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (76 samples, 0.07%)</title><rect x="92.7920%" y="501" width="0.0723%" height="15" fill="rgb(244,16,53)" fg:x="97568" fg:w="76"/><text x="93.0420%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (76 samples, 0.07%)</title><rect x="92.7920%" y="485" width="0.0723%" height="15" fill="rgb(208,175,44)" fg:x="97568" fg:w="76"/><text x="93.0420%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (76 samples, 0.07%)</title><rect x="92.7920%" y="469" width="0.0723%" height="15" fill="rgb(252,18,48)" fg:x="97568" fg:w="76"/><text x="93.0420%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (70 samples, 0.07%)</title><rect x="92.7977%" y="453" width="0.0666%" height="15" fill="rgb(234,199,32)" fg:x="97574" fg:w="70"/><text x="93.0477%" y="463.50"></text></g><g><title>do_syscall_64 (69 samples, 0.07%)</title><rect x="92.7987%" y="437" width="0.0656%" height="15" fill="rgb(225,77,54)" fg:x="97575" fg:w="69"/><text x="93.0487%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (128 samples, 0.12%)</title><rect x="92.7444%" y="565" width="0.1217%" height="15" fill="rgb(225,42,25)" fg:x="97518" fg:w="128"/><text x="92.9944%" y="575.50"></text></g><g><title>parking::Unparker::unpark (82 samples, 0.08%)</title><rect x="92.7882%" y="549" width="0.0780%" height="15" fill="rgb(242,227,46)" fg:x="97564" fg:w="82"/><text x="93.0382%" y="559.50"></text></g><g><title>parking::Inner::unpark (81 samples, 0.08%)</title><rect x="92.7891%" y="533" width="0.0770%" height="15" fill="rgb(246,197,35)" fg:x="97565" fg:w="81"/><text x="93.0391%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (134 samples, 0.13%)</title><rect x="92.7444%" y="597" width="0.1274%" height="15" fill="rgb(215,159,26)" fg:x="97518" fg:w="134"/><text x="92.9944%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (134 samples, 0.13%)</title><rect x="92.7444%" y="581" width="0.1274%" height="15" fill="rgb(212,194,50)" fg:x="97518" fg:w="134"/><text x="92.9944%" y="591.50"></text></g><g><title>async_executor::State::notify (141 samples, 0.13%)</title><rect x="92.7397%" y="613" width="0.1341%" height="15" fill="rgb(246,132,1)" fg:x="97513" fg:w="141"/><text x="92.9897%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (148 samples, 0.14%)</title><rect x="92.7397%" y="629" width="0.1408%" height="15" fill="rgb(217,71,7)" fg:x="97513" fg:w="148"/><text x="92.9897%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (150 samples, 0.14%)</title><rect x="92.7397%" y="645" width="0.1427%" height="15" fill="rgb(252,59,32)" fg:x="97513" fg:w="150"/><text x="92.9897%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (8,467 samples, 8.05%)</title><rect x="84.9106%" y="677" width="8.0525%" height="15" fill="rgb(253,204,25)" fg:x="89281" fg:w="8467"/><text x="85.1606%" y="687.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,463 samples, 8.05%)</title><rect x="84.9145%" y="661" width="8.0487%" height="15" fill="rgb(232,21,16)" fg:x="89285" fg:w="8463"/><text x="85.1645%" y="671.50">async_task:..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (85 samples, 0.08%)</title><rect x="92.8823%" y="645" width="0.0808%" height="15" fill="rgb(248,90,29)" fg:x="97663" fg:w="85"/><text x="93.1323%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (85 samples, 0.08%)</title><rect x="92.8823%" y="629" width="0.0808%" height="15" fill="rgb(249,223,7)" fg:x="97663" fg:w="85"/><text x="93.1323%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,131 samples, 12.49%)</title><rect x="80.4788%" y="725" width="12.4882%" height="15" fill="rgb(231,119,42)" fg:x="84621" fg:w="13131"/><text x="80.7288%" y="735.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,131 samples, 12.49%)</title><rect x="80.4788%" y="709" width="12.4882%" height="15" fill="rgb(215,41,35)" fg:x="84621" fg:w="13131"/><text x="80.7288%" y="719.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13,130 samples, 12.49%)</title><rect x="80.4797%" y="693" width="12.4873%" height="15" fill="rgb(220,44,45)" fg:x="84622" fg:w="13130"/><text x="80.7297%" y="703.50">async_executor::Exe..</text></g><g><title>async_executor::Executor::run::{{closure}} (13,133 samples, 12.49%)</title><rect x="80.4778%" y="741" width="12.4901%" height="15" fill="rgb(253,197,36)" fg:x="84620" fg:w="13133"/><text x="80.7278%" y="751.50">async_executor::Exe..</text></g><g><title>concurrent_queue::full_fence (23 samples, 0.02%)</title><rect x="93.0355%" y="501" width="0.0219%" height="15" fill="rgb(245,225,54)" fg:x="97824" fg:w="23"/><text x="93.2855%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (23 samples, 0.02%)</title><rect x="93.0355%" y="485" width="0.0219%" height="15" fill="rgb(239,94,37)" fg:x="97824" fg:w="23"/><text x="93.2855%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (23 samples, 0.02%)</title><rect x="93.0355%" y="469" width="0.0219%" height="15" fill="rgb(242,217,10)" fg:x="97824" fg:w="23"/><text x="93.2855%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.02%)</title><rect x="93.0355%" y="453" width="0.0219%" height="15" fill="rgb(250,193,7)" fg:x="97824" fg:w="23"/><text x="93.2855%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (80 samples, 0.08%)</title><rect x="93.0221%" y="517" width="0.0761%" height="15" fill="rgb(230,104,19)" fg:x="97810" fg:w="80"/><text x="93.2721%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (43 samples, 0.04%)</title><rect x="93.0573%" y="501" width="0.0409%" height="15" fill="rgb(230,181,4)" fg:x="97847" fg:w="43"/><text x="93.3073%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (43 samples, 0.04%)</title><rect x="93.0573%" y="485" width="0.0409%" height="15" fill="rgb(216,219,49)" fg:x="97847" fg:w="43"/><text x="93.3073%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (18 samples, 0.02%)</title><rect x="93.1039%" y="501" width="0.0171%" height="15" fill="rgb(254,144,0)" fg:x="97896" fg:w="18"/><text x="93.3539%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (18 samples, 0.02%)</title><rect x="93.1039%" y="485" width="0.0171%" height="15" fill="rgb(205,209,38)" fg:x="97896" fg:w="18"/><text x="93.3539%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="93.1039%" y="469" width="0.0171%" height="15" fill="rgb(240,21,42)" fg:x="97896" fg:w="18"/><text x="93.3539%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="93.1039%" y="453" width="0.0171%" height="15" fill="rgb(241,132,3)" fg:x="97896" fg:w="18"/><text x="93.3539%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (119 samples, 0.11%)</title><rect x="93.0164%" y="533" width="0.1132%" height="15" fill="rgb(225,14,2)" fg:x="97804" fg:w="119"/><text x="93.2664%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (33 samples, 0.03%)</title><rect x="93.0982%" y="517" width="0.0314%" height="15" fill="rgb(210,141,35)" fg:x="97890" fg:w="33"/><text x="93.3482%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="93.1315%" y="469" width="0.0162%" height="15" fill="rgb(251,14,44)" fg:x="97925" fg:w="17"/><text x="93.3815%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="93.1315%" y="453" width="0.0162%" height="15" fill="rgb(247,48,18)" fg:x="97925" fg:w="17"/><text x="93.3815%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="93.1296%" y="533" width="0.0390%" height="15" fill="rgb(225,0,40)" fg:x="97923" fg:w="41"/><text x="93.3796%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="93.1296%" y="517" width="0.0390%" height="15" fill="rgb(221,31,33)" fg:x="97923" fg:w="41"/><text x="93.3796%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (41 samples, 0.04%)</title><rect x="93.1296%" y="501" width="0.0390%" height="15" fill="rgb(237,42,40)" fg:x="97923" fg:w="41"/><text x="93.3796%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (39 samples, 0.04%)</title><rect x="93.1315%" y="485" width="0.0371%" height="15" fill="rgb(233,51,29)" fg:x="97925" fg:w="39"/><text x="93.3815%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (22 samples, 0.02%)</title><rect x="93.1477%" y="469" width="0.0209%" height="15" fill="rgb(226,58,20)" fg:x="97942" fg:w="22"/><text x="93.3977%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (22 samples, 0.02%)</title><rect x="93.1477%" y="453" width="0.0209%" height="15" fill="rgb(208,98,7)" fg:x="97942" fg:w="22"/><text x="93.3977%" y="463.50"></text></g><g><title>___pthread_rwlock_rdlock (19 samples, 0.02%)</title><rect x="93.1762%" y="485" width="0.0181%" height="15" fill="rgb(228,143,44)" fg:x="97972" fg:w="19"/><text x="93.4262%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (222 samples, 0.21%)</title><rect x="93.0041%" y="549" width="0.2111%" height="15" fill="rgb(246,55,38)" fg:x="97791" fg:w="222"/><text x="93.2541%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (45 samples, 0.04%)</title><rect x="93.1724%" y="533" width="0.0428%" height="15" fill="rgb(247,87,16)" fg:x="97968" fg:w="45"/><text x="93.4224%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (43 samples, 0.04%)</title><rect x="93.1743%" y="517" width="0.0409%" height="15" fill="rgb(234,129,42)" fg:x="97970" fg:w="43"/><text x="93.4243%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (43 samples, 0.04%)</title><rect x="93.1743%" y="501" width="0.0409%" height="15" fill="rgb(220,82,16)" fg:x="97970" fg:w="43"/><text x="93.4243%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (22 samples, 0.02%)</title><rect x="93.1943%" y="485" width="0.0209%" height="15" fill="rgb(211,88,4)" fg:x="97991" fg:w="22"/><text x="93.4443%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (22 samples, 0.02%)</title><rect x="93.1943%" y="469" width="0.0209%" height="15" fill="rgb(248,151,21)" fg:x="97991" fg:w="22"/><text x="93.4443%" y="479.50"></text></g><g><title>async_executor::Sleepers::update (14 samples, 0.01%)</title><rect x="93.2181%" y="533" width="0.0133%" height="15" fill="rgb(238,163,6)" fg:x="98016" fg:w="14"/><text x="93.4681%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (23 samples, 0.02%)</title><rect x="93.2314%" y="469" width="0.0219%" height="15" fill="rgb(209,183,11)" fg:x="98030" fg:w="23"/><text x="93.4814%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (24 samples, 0.02%)</title><rect x="93.2314%" y="533" width="0.0228%" height="15" fill="rgb(219,37,20)" fg:x="98030" fg:w="24"/><text x="93.4814%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="93.2314%" y="517" width="0.0228%" height="15" fill="rgb(210,158,4)" fg:x="98030" fg:w="24"/><text x="93.4814%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="93.2314%" y="501" width="0.0228%" height="15" fill="rgb(221,167,53)" fg:x="98030" fg:w="24"/><text x="93.4814%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="93.2314%" y="485" width="0.0228%" height="15" fill="rgb(237,151,45)" fg:x="98030" fg:w="24"/><text x="93.4814%" y="495.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (313 samples, 0.30%)</title><rect x="92.9898%" y="661" width="0.2977%" height="15" fill="rgb(231,39,3)" fg:x="97776" fg:w="313"/><text x="93.2398%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (311 samples, 0.30%)</title><rect x="92.9917%" y="645" width="0.2958%" height="15" fill="rgb(212,167,28)" fg:x="97778" fg:w="311"/><text x="93.2417%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (311 samples, 0.30%)</title><rect x="92.9917%" y="629" width="0.2958%" height="15" fill="rgb(232,178,8)" fg:x="97778" fg:w="311"/><text x="93.2417%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (307 samples, 0.29%)</title><rect x="92.9955%" y="613" width="0.2920%" height="15" fill="rgb(225,151,20)" fg:x="97782" fg:w="307"/><text x="93.2455%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (306 samples, 0.29%)</title><rect x="92.9965%" y="597" width="0.2910%" height="15" fill="rgb(238,3,37)" fg:x="97783" fg:w="306"/><text x="93.2465%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (305 samples, 0.29%)</title><rect x="92.9974%" y="581" width="0.2901%" height="15" fill="rgb(251,147,42)" fg:x="97784" fg:w="305"/><text x="93.2474%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (299 samples, 0.28%)</title><rect x="93.0031%" y="565" width="0.2844%" height="15" fill="rgb(208,173,10)" fg:x="97790" fg:w="299"/><text x="93.2531%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (76 samples, 0.07%)</title><rect x="93.2152%" y="549" width="0.0723%" height="15" fill="rgb(246,225,4)" fg:x="98013" fg:w="76"/><text x="93.4652%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.03%)</title><rect x="93.2542%" y="533" width="0.0333%" height="15" fill="rgb(248,102,6)" fg:x="98054" fg:w="35"/><text x="93.5042%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="93.2590%" y="517" width="0.0285%" height="15" fill="rgb(232,6,21)" fg:x="98059" fg:w="30"/><text x="93.5090%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="93.2590%" y="501" width="0.0285%" height="15" fill="rgb(221,179,22)" fg:x="98059" fg:w="30"/><text x="93.5090%" y="511.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="93.2590%" y="485" width="0.0285%" height="15" fill="rgb(252,50,20)" fg:x="98059" fg:w="30"/><text x="93.5090%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (15 samples, 0.01%)</title><rect x="93.3236%" y="613" width="0.0143%" height="15" fill="rgb(222,56,38)" fg:x="98127" fg:w="15"/><text x="93.5736%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (25 samples, 0.02%)</title><rect x="93.3379%" y="613" width="0.0238%" height="15" fill="rgb(206,193,29)" fg:x="98142" fg:w="25"/><text x="93.5879%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (24 samples, 0.02%)</title><rect x="93.3388%" y="597" width="0.0228%" height="15" fill="rgb(239,192,45)" fg:x="98143" fg:w="24"/><text x="93.5888%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="93.3388%" y="581" width="0.0228%" height="15" fill="rgb(254,18,36)" fg:x="98143" fg:w="24"/><text x="93.5888%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="93.3388%" y="565" width="0.0228%" height="15" fill="rgb(221,127,11)" fg:x="98143" fg:w="24"/><text x="93.5888%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="93.3388%" y="549" width="0.0228%" height="15" fill="rgb(234,146,35)" fg:x="98143" fg:w="24"/><text x="93.5888%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="93.3388%" y="533" width="0.0228%" height="15" fill="rgb(254,201,37)" fg:x="98143" fg:w="24"/><text x="93.5888%" y="543.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (118 samples, 0.11%)</title><rect x="93.3094%" y="629" width="0.1122%" height="15" fill="rgb(211,202,23)" fg:x="98112" fg:w="118"/><text x="93.5594%" y="639.50"></text></g><g><title>event_listener::Inner::lock (60 samples, 0.06%)</title><rect x="93.3645%" y="613" width="0.0571%" height="15" fill="rgb(237,91,2)" fg:x="98170" fg:w="60"/><text x="93.6145%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.06%)</title><rect x="93.3655%" y="597" width="0.0561%" height="15" fill="rgb(226,228,36)" fg:x="98171" fg:w="59"/><text x="93.6155%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (58 samples, 0.06%)</title><rect x="93.3664%" y="581" width="0.0552%" height="15" fill="rgb(213,63,50)" fg:x="98172" fg:w="58"/><text x="93.6164%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (52 samples, 0.05%)</title><rect x="93.3721%" y="565" width="0.0495%" height="15" fill="rgb(235,194,19)" fg:x="98178" fg:w="52"/><text x="93.6221%" y="575.50"></text></g><g><title>___pthread_mutex_lock (52 samples, 0.05%)</title><rect x="93.3721%" y="549" width="0.0495%" height="15" fill="rgb(207,204,18)" fg:x="98178" fg:w="52"/><text x="93.6221%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (520 samples, 0.49%)</title><rect x="92.9860%" y="693" width="0.4945%" height="15" fill="rgb(248,8,7)" fg:x="97772" fg:w="520"/><text x="93.2360%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (518 samples, 0.49%)</title><rect x="92.9879%" y="677" width="0.4926%" height="15" fill="rgb(223,145,47)" fg:x="97774" fg:w="518"/><text x="93.2379%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (203 samples, 0.19%)</title><rect x="93.2875%" y="661" width="0.1931%" height="15" fill="rgb(228,84,11)" fg:x="98089" fg:w="203"/><text x="93.5375%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (195 samples, 0.19%)</title><rect x="93.2951%" y="645" width="0.1855%" height="15" fill="rgb(218,76,45)" fg:x="98097" fg:w="195"/><text x="93.5451%" y="655.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (62 samples, 0.06%)</title><rect x="93.4216%" y="629" width="0.0590%" height="15" fill="rgb(223,80,15)" fg:x="98230" fg:w="62"/><text x="93.6716%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (62 samples, 0.06%)</title><rect x="93.4216%" y="613" width="0.0590%" height="15" fill="rgb(219,218,33)" fg:x="98230" fg:w="62"/><text x="93.6716%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (30 samples, 0.03%)</title><rect x="93.4520%" y="597" width="0.0285%" height="15" fill="rgb(208,51,11)" fg:x="98262" fg:w="30"/><text x="93.7020%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (29 samples, 0.03%)</title><rect x="93.4530%" y="581" width="0.0276%" height="15" fill="rgb(229,165,39)" fg:x="98263" fg:w="29"/><text x="93.7030%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (29 samples, 0.03%)</title><rect x="93.4530%" y="565" width="0.0276%" height="15" fill="rgb(241,100,24)" fg:x="98263" fg:w="29"/><text x="93.7030%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.03%)</title><rect x="93.4530%" y="549" width="0.0276%" height="15" fill="rgb(228,14,23)" fg:x="98263" fg:w="29"/><text x="93.7030%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,686 samples, 13.02%)</title><rect x="80.4702%" y="773" width="13.0161%" height="15" fill="rgb(247,116,52)" fg:x="84612" fg:w="13686"/><text x="80.7202%" y="783.50">&lt;futures_lite::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,680 samples, 13.01%)</title><rect x="80.4759%" y="757" width="13.0104%" height="15" fill="rgb(216,149,33)" fg:x="84618" fg:w="13680"/><text x="80.7259%" y="767.50">&lt;core::future::from_..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (545 samples, 0.52%)</title><rect x="92.9679%" y="741" width="0.5183%" height="15" fill="rgb(238,142,29)" fg:x="97753" fg:w="545"/><text x="93.2179%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (529 samples, 0.50%)</title><rect x="92.9832%" y="725" width="0.5031%" height="15" fill="rgb(224,83,40)" fg:x="97769" fg:w="529"/><text x="93.2332%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (528 samples, 0.50%)</title><rect x="92.9841%" y="709" width="0.5022%" height="15" fill="rgb(234,165,11)" fg:x="97770" fg:w="528"/><text x="93.2341%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (128 samples, 0.12%)</title><rect x="93.4929%" y="773" width="0.1217%" height="15" fill="rgb(215,96,23)" fg:x="98305" fg:w="128"/><text x="93.7429%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (128 samples, 0.12%)</title><rect x="93.4929%" y="757" width="0.1217%" height="15" fill="rgb(233,179,26)" fg:x="98305" fg:w="128"/><text x="93.7429%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (128 samples, 0.12%)</title><rect x="93.4929%" y="741" width="0.1217%" height="15" fill="rgb(225,129,33)" fg:x="98305" fg:w="128"/><text x="93.7429%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (126 samples, 0.12%)</title><rect x="93.4948%" y="725" width="0.1198%" height="15" fill="rgb(237,49,13)" fg:x="98307" fg:w="126"/><text x="93.7448%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (126 samples, 0.12%)</title><rect x="93.4948%" y="709" width="0.1198%" height="15" fill="rgb(211,3,31)" fg:x="98307" fg:w="126"/><text x="93.7448%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (15 samples, 0.01%)</title><rect x="93.6384%" y="581" width="0.0143%" height="15" fill="rgb(216,152,19)" fg:x="98458" fg:w="15"/><text x="93.8884%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (15 samples, 0.01%)</title><rect x="93.6384%" y="565" width="0.0143%" height="15" fill="rgb(251,121,35)" fg:x="98458" fg:w="15"/><text x="93.8884%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (15 samples, 0.01%)</title><rect x="93.6384%" y="549" width="0.0143%" height="15" fill="rgb(210,217,47)" fg:x="98458" fg:w="15"/><text x="93.8884%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (15 samples, 0.01%)</title><rect x="93.6384%" y="533" width="0.0143%" height="15" fill="rgb(244,116,22)" fg:x="98458" fg:w="15"/><text x="93.8884%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (15 samples, 0.01%)</title><rect x="93.6384%" y="517" width="0.0143%" height="15" fill="rgb(228,17,21)" fg:x="98458" fg:w="15"/><text x="93.8884%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (28 samples, 0.03%)</title><rect x="93.6327%" y="725" width="0.0266%" height="15" fill="rgb(240,149,34)" fg:x="98452" fg:w="28"/><text x="93.8827%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (26 samples, 0.02%)</title><rect x="93.6346%" y="709" width="0.0247%" height="15" fill="rgb(208,125,47)" fg:x="98454" fg:w="26"/><text x="93.8846%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (26 samples, 0.02%)</title><rect x="93.6346%" y="693" width="0.0247%" height="15" fill="rgb(249,186,39)" fg:x="98454" fg:w="26"/><text x="93.8846%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (25 samples, 0.02%)</title><rect x="93.6356%" y="677" width="0.0238%" height="15" fill="rgb(240,220,33)" fg:x="98455" fg:w="25"/><text x="93.8856%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="93.6365%" y="661" width="0.0228%" height="15" fill="rgb(243,110,23)" fg:x="98456" fg:w="24"/><text x="93.8865%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="93.6365%" y="645" width="0.0228%" height="15" fill="rgb(219,163,46)" fg:x="98456" fg:w="24"/><text x="93.8865%" y="655.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="93.6365%" y="629" width="0.0228%" height="15" fill="rgb(216,126,30)" fg:x="98456" fg:w="24"/><text x="93.8865%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="93.6365%" y="613" width="0.0228%" height="15" fill="rgb(208,139,11)" fg:x="98456" fg:w="24"/><text x="93.8865%" y="623.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="93.6365%" y="597" width="0.0228%" height="15" fill="rgb(213,118,36)" fg:x="98456" fg:w="24"/><text x="93.8865%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="93.6299%" y="741" width="0.0304%" height="15" fill="rgb(226,43,17)" fg:x="98449" fg:w="32"/><text x="93.8799%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.06%)</title><rect x="93.6936%" y="453" width="0.0590%" height="15" fill="rgb(254,217,4)" fg:x="98516" fg:w="62"/><text x="93.9436%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (62 samples, 0.06%)</title><rect x="93.6936%" y="437" width="0.0590%" height="15" fill="rgb(210,134,47)" fg:x="98516" fg:w="62"/><text x="93.9436%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (54 samples, 0.05%)</title><rect x="93.7012%" y="421" width="0.0514%" height="15" fill="rgb(237,24,49)" fg:x="98524" fg:w="54"/><text x="93.9512%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (48 samples, 0.05%)</title><rect x="93.7069%" y="405" width="0.0457%" height="15" fill="rgb(251,39,46)" fg:x="98530" fg:w="48"/><text x="93.9569%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (48 samples, 0.05%)</title><rect x="93.7069%" y="389" width="0.0457%" height="15" fill="rgb(251,220,3)" fg:x="98530" fg:w="48"/><text x="93.9569%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (48 samples, 0.05%)</title><rect x="93.7069%" y="373" width="0.0457%" height="15" fill="rgb(228,105,12)" fg:x="98530" fg:w="48"/><text x="93.9569%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="93.6926%" y="501" width="0.0894%" height="15" fill="rgb(215,196,1)" fg:x="98515" fg:w="94"/><text x="93.9426%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="93.6926%" y="485" width="0.0894%" height="15" fill="rgb(214,33,39)" fg:x="98515" fg:w="94"/><text x="93.9426%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="93.6926%" y="469" width="0.0894%" height="15" fill="rgb(220,19,52)" fg:x="98515" fg:w="94"/><text x="93.9426%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (24 samples, 0.02%)</title><rect x="93.7592%" y="453" width="0.0228%" height="15" fill="rgb(221,78,38)" fg:x="98585" fg:w="24"/><text x="94.0092%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (24 samples, 0.02%)</title><rect x="93.7592%" y="437" width="0.0228%" height="15" fill="rgb(253,30,16)" fg:x="98585" fg:w="24"/><text x="94.0092%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (126 samples, 0.12%)</title><rect x="93.6632%" y="741" width="0.1198%" height="15" fill="rgb(242,65,0)" fg:x="98484" fg:w="126"/><text x="93.9132%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (121 samples, 0.12%)</title><rect x="93.6679%" y="725" width="0.1151%" height="15" fill="rgb(235,201,12)" fg:x="98489" fg:w="121"/><text x="93.9179%" y="735.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (95 samples, 0.09%)</title><rect x="93.6926%" y="709" width="0.0903%" height="15" fill="rgb(233,161,9)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (95 samples, 0.09%)</title><rect x="93.6926%" y="693" width="0.0903%" height="15" fill="rgb(241,207,41)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (95 samples, 0.09%)</title><rect x="93.6926%" y="677" width="0.0903%" height="15" fill="rgb(212,69,46)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (95 samples, 0.09%)</title><rect x="93.6926%" y="661" width="0.0903%" height="15" fill="rgb(239,69,45)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (95 samples, 0.09%)</title><rect x="93.6926%" y="645" width="0.0903%" height="15" fill="rgb(242,117,48)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (95 samples, 0.09%)</title><rect x="93.6926%" y="629" width="0.0903%" height="15" fill="rgb(228,41,36)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (95 samples, 0.09%)</title><rect x="93.6926%" y="613" width="0.0903%" height="15" fill="rgb(212,3,32)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.09%)</title><rect x="93.6926%" y="597" width="0.0903%" height="15" fill="rgb(233,41,49)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.09%)</title><rect x="93.6926%" y="581" width="0.0903%" height="15" fill="rgb(252,170,49)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="591.50"></text></g><g><title>alloc::alloc::alloc (95 samples, 0.09%)</title><rect x="93.6926%" y="565" width="0.0903%" height="15" fill="rgb(229,53,26)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="575.50"></text></g><g><title>__rg_alloc (95 samples, 0.09%)</title><rect x="93.6926%" y="549" width="0.0903%" height="15" fill="rgb(217,157,12)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (95 samples, 0.09%)</title><rect x="93.6926%" y="533" width="0.0903%" height="15" fill="rgb(227,17,9)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="543.50"></text></g><g><title>rust_alloc (95 samples, 0.09%)</title><rect x="93.6926%" y="517" width="0.0903%" height="15" fill="rgb(218,84,12)" fg:x="98515" fg:w="95"/><text x="93.9426%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (27 samples, 0.03%)</title><rect x="93.7830%" y="741" width="0.0257%" height="15" fill="rgb(212,79,24)" fg:x="98610" fg:w="27"/><text x="94.0330%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (24 samples, 0.02%)</title><rect x="93.7858%" y="725" width="0.0228%" height="15" fill="rgb(217,222,37)" fg:x="98613" fg:w="24"/><text x="94.0358%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (23 samples, 0.02%)</title><rect x="93.7868%" y="709" width="0.0219%" height="15" fill="rgb(246,208,8)" fg:x="98614" fg:w="23"/><text x="94.0368%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="93.7982%" y="693" width="0.0105%" height="15" fill="rgb(244,133,10)" fg:x="98626" fg:w="11"/><text x="94.0482%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="93.7982%" y="677" width="0.0105%" height="15" fill="rgb(209,219,41)" fg:x="98626" fg:w="11"/><text x="94.0482%" y="687.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="93.8087%" y="741" width="0.0114%" height="15" fill="rgb(253,175,45)" fg:x="98637" fg:w="12"/><text x="94.0587%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="93.8087%" y="725" width="0.0114%" height="15" fill="rgb(235,100,37)" fg:x="98637" fg:w="12"/><text x="94.0587%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="93.8087%" y="709" width="0.0114%" height="15" fill="rgb(225,87,19)" fg:x="98637" fg:w="12"/><text x="94.0587%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="93.8087%" y="693" width="0.0114%" height="15" fill="rgb(217,152,17)" fg:x="98637" fg:w="12"/><text x="94.0587%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="93.8087%" y="677" width="0.0114%" height="15" fill="rgb(235,72,13)" fg:x="98637" fg:w="12"/><text x="94.0587%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="93.8087%" y="661" width="0.0114%" height="15" fill="rgb(233,140,18)" fg:x="98637" fg:w="12"/><text x="94.0587%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="93.8324%" y="741" width="0.0171%" height="15" fill="rgb(207,212,28)" fg:x="98662" fg:w="18"/><text x="94.0824%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="93.8324%" y="725" width="0.0171%" height="15" fill="rgb(220,130,25)" fg:x="98662" fg:w="18"/><text x="94.0824%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (18 samples, 0.02%)</title><rect x="93.8324%" y="709" width="0.0171%" height="15" fill="rgb(205,55,34)" fg:x="98662" fg:w="18"/><text x="94.0824%" y="719.50"></text></g><g><title>___pthread_mutex_lock (18 samples, 0.02%)</title><rect x="93.8324%" y="693" width="0.0171%" height="15" fill="rgb(237,54,35)" fg:x="98662" fg:w="18"/><text x="94.0824%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (254 samples, 0.24%)</title><rect x="93.6261%" y="757" width="0.2416%" height="15" fill="rgb(208,67,23)" fg:x="98445" fg:w="254"/><text x="93.8761%" y="767.50"></text></g><g><title>std::time::Instant::now (19 samples, 0.02%)</title><rect x="93.8496%" y="741" width="0.0181%" height="15" fill="rgb(206,207,50)" fg:x="98680" fg:w="19"/><text x="94.0996%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (19 samples, 0.02%)</title><rect x="93.8496%" y="725" width="0.0181%" height="15" fill="rgb(213,211,42)" fg:x="98680" fg:w="19"/><text x="94.0996%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (19 samples, 0.02%)</title><rect x="93.8496%" y="709" width="0.0181%" height="15" fill="rgb(252,197,50)" fg:x="98680" fg:w="19"/><text x="94.0996%" y="719.50"></text></g><g><title>__clock_gettime_2 (17 samples, 0.02%)</title><rect x="93.8515%" y="693" width="0.0162%" height="15" fill="rgb(251,211,41)" fg:x="98682" fg:w="17"/><text x="94.1015%" y="703.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.01%)</title><rect x="93.8534%" y="677" width="0.0143%" height="15" fill="rgb(229,211,5)" fg:x="98684" fg:w="15"/><text x="94.1034%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="93.8695%" y="757" width="0.0105%" height="15" fill="rgb(239,36,31)" fg:x="98701" fg:w="11"/><text x="94.1195%" y="767.50"></text></g><g><title>__fdget_pos (35 samples, 0.03%)</title><rect x="93.9580%" y="661" width="0.0333%" height="15" fill="rgb(248,67,31)" fg:x="98794" fg:w="35"/><text x="94.2080%" y="671.50"></text></g><g><title>__fget_light (34 samples, 0.03%)</title><rect x="93.9589%" y="645" width="0.0323%" height="15" fill="rgb(249,55,44)" fg:x="98795" fg:w="34"/><text x="94.2089%" y="655.50"></text></g><g><title>fsnotify_perm.part.0 (14 samples, 0.01%)</title><rect x="94.0036%" y="645" width="0.0133%" height="15" fill="rgb(216,82,12)" fg:x="98842" fg:w="14"/><text x="94.2536%" y="655.50"></text></g><g><title>__wake_up_common (22 samples, 0.02%)</title><rect x="94.0379%" y="613" width="0.0209%" height="15" fill="rgb(242,174,1)" fg:x="98878" fg:w="22"/><text x="94.2879%" y="623.50"></text></g><g><title>ep_poll_callback (20 samples, 0.02%)</title><rect x="94.0398%" y="597" width="0.0190%" height="15" fill="rgb(208,120,29)" fg:x="98880" fg:w="20"/><text x="94.2898%" y="607.50"></text></g><g><title>_copy_to_iter (18 samples, 0.02%)</title><rect x="94.0588%" y="613" width="0.0171%" height="15" fill="rgb(221,105,43)" fg:x="98900" fg:w="18"/><text x="94.3088%" y="623.50"></text></g><g><title>new_sync_read (80 samples, 0.08%)</title><rect x="94.0169%" y="645" width="0.0761%" height="15" fill="rgb(234,124,22)" fg:x="98856" fg:w="80"/><text x="94.2669%" y="655.50"></text></g><g><title>eventfd_read (71 samples, 0.07%)</title><rect x="94.0255%" y="629" width="0.0675%" height="15" fill="rgb(212,23,30)" fg:x="98865" fg:w="71"/><text x="94.2755%" y="639.50"></text></g><g><title>_raw_spin_lock_irq (18 samples, 0.02%)</title><rect x="94.0759%" y="613" width="0.0171%" height="15" fill="rgb(219,122,53)" fg:x="98918" fg:w="18"/><text x="94.3259%" y="623.50"></text></g><g><title>ksys_read (149 samples, 0.14%)</title><rect x="93.9542%" y="677" width="0.1417%" height="15" fill="rgb(248,84,24)" fg:x="98790" fg:w="149"/><text x="94.2042%" y="687.50"></text></g><g><title>vfs_read (103 samples, 0.10%)</title><rect x="93.9979%" y="661" width="0.0980%" height="15" fill="rgb(245,115,18)" fg:x="98836" fg:w="103"/><text x="94.2479%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (100 samples, 0.10%)</title><rect x="94.0968%" y="677" width="0.0951%" height="15" fill="rgb(227,176,51)" fg:x="98940" fg:w="100"/><text x="94.3468%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (271 samples, 0.26%)</title><rect x="93.9418%" y="709" width="0.2577%" height="15" fill="rgb(229,63,42)" fg:x="98777" fg:w="271"/><text x="94.1918%" y="719.50"></text></g><g><title>do_syscall_64 (267 samples, 0.25%)</title><rect x="93.9456%" y="693" width="0.2539%" height="15" fill="rgb(247,202,24)" fg:x="98781" fg:w="267"/><text x="94.1956%" y="703.50"></text></g><g><title>__libc_read (294 samples, 0.28%)</title><rect x="93.9237%" y="725" width="0.2796%" height="15" fill="rgb(244,173,20)" fg:x="98758" fg:w="294"/><text x="94.1737%" y="735.50"></text></g><g><title>__entry_text_start (14 samples, 0.01%)</title><rect x="94.2243%" y="709" width="0.0133%" height="15" fill="rgb(242,81,47)" fg:x="99074" fg:w="14"/><text x="94.4743%" y="719.50"></text></g><g><title>ep_done_scan (14 samples, 0.01%)</title><rect x="94.3394%" y="645" width="0.0133%" height="15" fill="rgb(231,185,54)" fg:x="99195" fg:w="14"/><text x="94.5894%" y="655.50"></text></g><g><title>_raw_write_lock_irq (12 samples, 0.01%)</title><rect x="94.3413%" y="629" width="0.0114%" height="15" fill="rgb(243,55,32)" fg:x="99197" fg:w="12"/><text x="94.5913%" y="639.50"></text></g><g><title>ep_item_poll.isra.0 (51 samples, 0.05%)</title><rect x="94.3527%" y="645" width="0.0485%" height="15" fill="rgb(208,167,19)" fg:x="99209" fg:w="51"/><text x="94.6027%" y="655.50"></text></g><g><title>eventfd_poll (24 samples, 0.02%)</title><rect x="94.3783%" y="629" width="0.0228%" height="15" fill="rgb(231,72,35)" fg:x="99236" fg:w="24"/><text x="94.6283%" y="639.50"></text></g><g><title>mutex_lock (13 samples, 0.01%)</title><rect x="94.4059%" y="645" width="0.0124%" height="15" fill="rgb(250,173,51)" fg:x="99265" fg:w="13"/><text x="94.6559%" y="655.50"></text></g><g><title>__perf_event_task_sched_out (21 samples, 0.02%)</title><rect x="94.4668%" y="597" width="0.0200%" height="15" fill="rgb(209,5,22)" fg:x="99329" fg:w="21"/><text x="94.7168%" y="607.50"></text></g><g><title>update_cfs_group (14 samples, 0.01%)</title><rect x="94.5182%" y="565" width="0.0133%" height="15" fill="rgb(250,174,19)" fg:x="99383" fg:w="14"/><text x="94.7682%" y="575.50"></text></g><g><title>update_curr (40 samples, 0.04%)</title><rect x="94.5315%" y="565" width="0.0380%" height="15" fill="rgb(217,3,49)" fg:x="99397" fg:w="40"/><text x="94.7815%" y="575.50"></text></g><g><title>dequeue_entity (101 samples, 0.10%)</title><rect x="94.5020%" y="581" width="0.0961%" height="15" fill="rgb(218,225,5)" fg:x="99366" fg:w="101"/><text x="94.7520%" y="591.50"></text></g><g><title>update_load_avg (30 samples, 0.03%)</title><rect x="94.5695%" y="565" width="0.0285%" height="15" fill="rgb(236,89,11)" fg:x="99437" fg:w="30"/><text x="94.8195%" y="575.50"></text></g><g><title>__update_load_avg_se (15 samples, 0.01%)</title><rect x="94.5838%" y="549" width="0.0143%" height="15" fill="rgb(206,33,28)" fg:x="99452" fg:w="15"/><text x="94.8338%" y="559.50"></text></g><g><title>dequeue_task_fair (116 samples, 0.11%)</title><rect x="94.4906%" y="597" width="0.1103%" height="15" fill="rgb(241,56,42)" fg:x="99354" fg:w="116"/><text x="94.7406%" y="607.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (38 samples, 0.04%)</title><rect x="94.6190%" y="565" width="0.0361%" height="15" fill="rgb(222,44,11)" fg:x="99489" fg:w="38"/><text x="94.8690%" y="575.50"></text></g><g><title>native_write_msr (37 samples, 0.04%)</title><rect x="94.6199%" y="549" width="0.0352%" height="15" fill="rgb(234,111,20)" fg:x="99490" fg:w="37"/><text x="94.8699%" y="559.50"></text></g><g><title>__perf_event_task_sched_in (43 samples, 0.04%)</title><rect x="94.6171%" y="581" width="0.0409%" height="15" fill="rgb(237,77,6)" fg:x="99487" fg:w="43"/><text x="94.8671%" y="591.50"></text></g><g><title>finish_task_switch.isra.0 (64 samples, 0.06%)</title><rect x="94.6009%" y="597" width="0.0609%" height="15" fill="rgb(235,111,23)" fg:x="99470" fg:w="64"/><text x="94.8509%" y="607.50"></text></g><g><title>pick_next_task_fair (11 samples, 0.01%)</title><rect x="94.6618%" y="597" width="0.0105%" height="15" fill="rgb(251,135,29)" fg:x="99534" fg:w="11"/><text x="94.9118%" y="607.50"></text></g><g><title>psi_group_change (43 samples, 0.04%)</title><rect x="94.6941%" y="581" width="0.0409%" height="15" fill="rgb(217,57,1)" fg:x="99568" fg:w="43"/><text x="94.9441%" y="591.50"></text></g><g><title>psi_task_switch (62 samples, 0.06%)</title><rect x="94.6789%" y="597" width="0.0590%" height="15" fill="rgb(249,119,31)" fg:x="99552" fg:w="62"/><text x="94.9289%" y="607.50"></text></g><g><title>do_epoll_wait (519 samples, 0.49%)</title><rect x="94.2728%" y="661" width="0.4936%" height="15" fill="rgb(233,164,33)" fg:x="99125" fg:w="519"/><text x="94.5228%" y="671.50"></text></g><g><title>schedule_hrtimeout_range_clock (361 samples, 0.34%)</title><rect x="94.4230%" y="645" width="0.3433%" height="15" fill="rgb(250,217,43)" fg:x="99283" fg:w="361"/><text x="94.6730%" y="655.50"></text></g><g><title>schedule (352 samples, 0.33%)</title><rect x="94.4316%" y="629" width="0.3348%" height="15" fill="rgb(232,154,50)" fg:x="99292" fg:w="352"/><text x="94.6816%" y="639.50"></text></g><g><title>__schedule (347 samples, 0.33%)</title><rect x="94.4364%" y="613" width="0.3300%" height="15" fill="rgb(227,190,8)" fg:x="99297" fg:w="347"/><text x="94.6864%" y="623.50"></text></g><g><title>update_rq_clock (17 samples, 0.02%)</title><rect x="94.7502%" y="597" width="0.0162%" height="15" fill="rgb(209,217,32)" fg:x="99627" fg:w="17"/><text x="95.0002%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (536 samples, 0.51%)</title><rect x="94.2604%" y="677" width="0.5098%" height="15" fill="rgb(243,203,50)" fg:x="99112" fg:w="536"/><text x="94.5104%" y="687.50"></text></g><g><title>__rseq_handle_notify_resume (17 samples, 0.02%)</title><rect x="94.8729%" y="645" width="0.0162%" height="15" fill="rgb(232,152,27)" fg:x="99756" fg:w="17"/><text x="95.1229%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (30 samples, 0.03%)</title><rect x="94.8653%" y="661" width="0.0285%" height="15" fill="rgb(240,34,29)" fg:x="99748" fg:w="30"/><text x="95.1153%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (144 samples, 0.14%)</title><rect x="94.7702%" y="677" width="0.1370%" height="15" fill="rgb(215,185,52)" fg:x="99648" fg:w="144"/><text x="95.0202%" y="687.50"></text></g><g><title>syscall_exit_work (14 samples, 0.01%)</title><rect x="94.8938%" y="661" width="0.0133%" height="15" fill="rgb(240,89,49)" fg:x="99778" fg:w="14"/><text x="95.1438%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (707 samples, 0.67%)</title><rect x="94.2385%" y="709" width="0.6724%" height="15" fill="rgb(225,12,52)" fg:x="99089" fg:w="707"/><text x="94.4885%" y="719.50"></text></g><g><title>do_syscall_64 (688 samples, 0.65%)</title><rect x="94.2566%" y="693" width="0.6543%" height="15" fill="rgb(239,128,45)" fg:x="99108" fg:w="688"/><text x="94.5066%" y="703.50"></text></g><g><title>epoll_wait (751 samples, 0.71%)</title><rect x="94.2034%" y="725" width="0.7142%" height="15" fill="rgb(211,78,47)" fg:x="99052" fg:w="751"/><text x="94.4534%" y="735.50"></text></g><g><title>__entry_text_start (15 samples, 0.01%)</title><rect x="94.9423%" y="677" width="0.0143%" height="15" fill="rgb(232,31,21)" fg:x="99829" fg:w="15"/><text x="95.1923%" y="687.50"></text></g><g><title>_copy_from_user (16 samples, 0.02%)</title><rect x="94.9832%" y="629" width="0.0152%" height="15" fill="rgb(222,168,14)" fg:x="99872" fg:w="16"/><text x="95.2332%" y="639.50"></text></g><g><title>__fget_light (34 samples, 0.03%)</title><rect x="95.0260%" y="613" width="0.0323%" height="15" fill="rgb(209,128,24)" fg:x="99917" fg:w="34"/><text x="95.2760%" y="623.50"></text></g><g><title>ep_item_poll.isra.0 (19 samples, 0.02%)</title><rect x="95.0583%" y="613" width="0.0181%" height="15" fill="rgb(249,35,13)" fg:x="99951" fg:w="19"/><text x="95.3083%" y="623.50"></text></g><g><title>timerfd_poll (11 samples, 0.01%)</title><rect x="95.0660%" y="597" width="0.0105%" height="15" fill="rgb(218,7,2)" fg:x="99959" fg:w="11"/><text x="95.3160%" y="607.50"></text></g><g><title>mutex_lock (11 samples, 0.01%)</title><rect x="95.0840%" y="613" width="0.0105%" height="15" fill="rgb(238,107,27)" fg:x="99978" fg:w="11"/><text x="95.3340%" y="623.50"></text></g><g><title>__x64_sys_epoll_ctl (135 samples, 0.13%)</title><rect x="94.9689%" y="645" width="0.1284%" height="15" fill="rgb(217,88,38)" fg:x="99857" fg:w="135"/><text x="95.2189%" y="655.50"></text></g><g><title>do_epoll_ctl (104 samples, 0.10%)</title><rect x="94.9984%" y="629" width="0.0989%" height="15" fill="rgb(230,207,0)" fg:x="99888" fg:w="104"/><text x="95.2484%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (174 samples, 0.17%)</title><rect x="95.1002%" y="645" width="0.1655%" height="15" fill="rgb(249,64,54)" fg:x="99995" fg:w="174"/><text x="95.3502%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (333 samples, 0.32%)</title><rect x="94.9594%" y="677" width="0.3167%" height="15" fill="rgb(231,7,11)" fg:x="99847" fg:w="333"/><text x="95.2094%" y="687.50"></text></g><g><title>do_syscall_64 (329 samples, 0.31%)</title><rect x="94.9632%" y="661" width="0.3129%" height="15" fill="rgb(205,149,21)" fg:x="99851" fg:w="329"/><text x="95.2132%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (11 samples, 0.01%)</title><rect x="95.2657%" y="645" width="0.0105%" height="15" fill="rgb(215,126,34)" fg:x="100169" fg:w="11"/><text x="95.5157%" y="655.50"></text></g><g><title>__GI_epoll_ctl (375 samples, 0.36%)</title><rect x="94.9262%" y="693" width="0.3566%" height="15" fill="rgb(241,132,45)" fg:x="99812" fg:w="375"/><text x="95.1762%" y="703.50"></text></g><g><title>polling::epoll::Poller::ctl (382 samples, 0.36%)</title><rect x="94.9214%" y="709" width="0.3633%" height="15" fill="rgb(252,69,32)" fg:x="99807" fg:w="382"/><text x="95.1714%" y="719.50"></text></g><g><title>polling::epoll::Poller::modify (387 samples, 0.37%)</title><rect x="94.9176%" y="725" width="0.3681%" height="15" fill="rgb(232,204,19)" fg:x="99803" fg:w="387"/><text x="95.1676%" y="735.50"></text></g><g><title>__entry_text_start (14 samples, 0.01%)</title><rect x="95.2923%" y="709" width="0.0133%" height="15" fill="rgb(249,15,47)" fg:x="100197" fg:w="14"/><text x="95.5423%" y="719.50"></text></g><g><title>__fget_light (24 samples, 0.02%)</title><rect x="95.3351%" y="645" width="0.0228%" height="15" fill="rgb(209,227,23)" fg:x="100242" fg:w="24"/><text x="95.5851%" y="655.50"></text></g><g><title>__hrtimer_init (14 samples, 0.01%)</title><rect x="95.3579%" y="645" width="0.0133%" height="15" fill="rgb(248,92,24)" fg:x="100266" fg:w="14"/><text x="95.6079%" y="655.50"></text></g><g><title>enqueue_hrtimer (21 samples, 0.02%)</title><rect x="95.4064%" y="629" width="0.0200%" height="15" fill="rgb(247,59,2)" fg:x="100317" fg:w="21"/><text x="95.6564%" y="639.50"></text></g><g><title>timerqueue_add (16 samples, 0.02%)</title><rect x="95.4112%" y="613" width="0.0152%" height="15" fill="rgb(221,30,5)" fg:x="100322" fg:w="16"/><text x="95.6612%" y="623.50"></text></g><g><title>hrtimer_start_range_ns (59 samples, 0.06%)</title><rect x="95.3960%" y="645" width="0.0561%" height="15" fill="rgb(208,108,53)" fg:x="100306" fg:w="59"/><text x="95.6460%" y="655.50"></text></g><g><title>ktime_get (22 samples, 0.02%)</title><rect x="95.4312%" y="629" width="0.0209%" height="15" fill="rgb(211,183,26)" fg:x="100343" fg:w="22"/><text x="95.6812%" y="639.50"></text></g><g><title>read_tsc (16 samples, 0.02%)</title><rect x="95.4369%" y="613" width="0.0152%" height="15" fill="rgb(232,132,4)" fg:x="100349" fg:w="16"/><text x="95.6869%" y="623.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.01%)</title><rect x="95.4625%" y="629" width="0.0105%" height="15" fill="rgb(253,128,37)" fg:x="100376" fg:w="11"/><text x="95.7125%" y="639.50"></text></g><g><title>hrtimer_try_to_cancel (23 samples, 0.02%)</title><rect x="95.4521%" y="645" width="0.0219%" height="15" fill="rgb(221,58,24)" fg:x="100365" fg:w="23"/><text x="95.7021%" y="655.50"></text></g><g><title>ktime_get (19 samples, 0.02%)</title><rect x="95.4740%" y="645" width="0.0181%" height="15" fill="rgb(230,54,45)" fg:x="100388" fg:w="19"/><text x="95.7240%" y="655.50"></text></g><g><title>do_timerfd_settime (173 samples, 0.16%)</title><rect x="95.3294%" y="661" width="0.1645%" height="15" fill="rgb(254,21,18)" fg:x="100236" fg:w="173"/><text x="95.5794%" y="671.50"></text></g><g><title>get_itimerspec64 (15 samples, 0.01%)</title><rect x="95.4939%" y="661" width="0.0143%" height="15" fill="rgb(221,108,0)" fg:x="100409" fg:w="15"/><text x="95.7439%" y="671.50"></text></g><g><title>get_timespec64 (14 samples, 0.01%)</title><rect x="95.4949%" y="645" width="0.0133%" height="15" fill="rgb(206,95,1)" fg:x="100410" fg:w="14"/><text x="95.7449%" y="655.50"></text></g><g><title>__x64_sys_timerfd_settime (222 samples, 0.21%)</title><rect x="95.3123%" y="677" width="0.2111%" height="15" fill="rgb(237,52,5)" fg:x="100218" fg:w="222"/><text x="95.5623%" y="687.50"></text></g><g><title>get_timespec64 (16 samples, 0.02%)</title><rect x="95.5082%" y="661" width="0.0152%" height="15" fill="rgb(218,150,34)" fg:x="100424" fg:w="16"/><text x="95.7582%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (100 samples, 0.10%)</title><rect x="95.5263%" y="677" width="0.0951%" height="15" fill="rgb(235,194,28)" fg:x="100443" fg:w="100"/><text x="95.7763%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (337 samples, 0.32%)</title><rect x="95.3075%" y="709" width="0.3205%" height="15" fill="rgb(245,92,18)" fg:x="100213" fg:w="337"/><text x="95.5575%" y="719.50"></text></g><g><title>do_syscall_64 (336 samples, 0.32%)</title><rect x="95.3085%" y="693" width="0.3196%" height="15" fill="rgb(253,203,53)" fg:x="100214" fg:w="336"/><text x="95.5585%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (1,818 samples, 1.73%)</title><rect x="93.9057%" y="741" width="1.7290%" height="15" fill="rgb(249,185,47)" fg:x="98739" fg:w="1818"/><text x="94.1557%" y="751.50"></text></g><g><title>syscall (367 samples, 0.35%)</title><rect x="95.2856%" y="725" width="0.3490%" height="15" fill="rgb(252,194,52)" fg:x="100190" fg:w="367"/><text x="95.5356%" y="735.50"></text></g><g><title>async_io::reactor::ReactorLock::react (2,140 samples, 2.04%)</title><rect x="93.6147%" y="773" width="2.0352%" height="15" fill="rgb(210,53,36)" fg:x="98433" fg:w="2140"/><text x="93.8647%" y="783.50">a..</text></g><g><title>polling::Poller::wait (1,861 samples, 1.77%)</title><rect x="93.8800%" y="757" width="1.7699%" height="15" fill="rgb(237,37,25)" fg:x="98712" fg:w="1861"/><text x="94.1300%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (16 samples, 0.02%)</title><rect x="95.6347%" y="741" width="0.0152%" height="15" fill="rgb(242,116,27)" fg:x="100557" fg:w="16"/><text x="95.8847%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (16 samples, 0.02%)</title><rect x="95.6347%" y="725" width="0.0152%" height="15" fill="rgb(213,185,26)" fg:x="100557" fg:w="16"/><text x="95.8847%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (16 samples, 0.02%)</title><rect x="95.6347%" y="709" width="0.0152%" height="15" fill="rgb(225,204,8)" fg:x="100557" fg:w="16"/><text x="95.8847%" y="719.50"></text></g><g><title>__GI___pthread_mutex_trylock (16 samples, 0.02%)</title><rect x="95.6347%" y="693" width="0.0152%" height="15" fill="rgb(254,111,37)" fg:x="100557" fg:w="16"/><text x="95.8847%" y="703.50"></text></g><g><title>__GI___pthread_cond_wait (24 samples, 0.02%)</title><rect x="95.6746%" y="741" width="0.0228%" height="15" fill="rgb(242,35,9)" fg:x="100599" fg:w="24"/><text x="95.9246%" y="751.50"></text></g><g><title>__futex_abstimed_wait_common (24 samples, 0.02%)</title><rect x="95.6746%" y="725" width="0.0228%" height="15" fill="rgb(232,138,49)" fg:x="100599" fg:w="24"/><text x="95.9246%" y="735.50"></text></g><g><title>__entry_text_start (24 samples, 0.02%)</title><rect x="95.6746%" y="709" width="0.0228%" height="15" fill="rgb(247,56,4)" fg:x="100599" fg:w="24"/><text x="95.9246%" y="719.50"></text></g><g><title>__entry_text_start (26 samples, 0.02%)</title><rect x="95.7307%" y="709" width="0.0247%" height="15" fill="rgb(226,179,17)" fg:x="100658" fg:w="26"/><text x="95.9807%" y="719.50"></text></g><g><title>futex_hash (27 samples, 0.03%)</title><rect x="95.8696%" y="629" width="0.0257%" height="15" fill="rgb(216,163,45)" fg:x="100804" fg:w="27"/><text x="96.1196%" y="639.50"></text></g><g><title>get_futex_key (13 samples, 0.01%)</title><rect x="95.8953%" y="629" width="0.0124%" height="15" fill="rgb(211,157,3)" fg:x="100831" fg:w="13"/><text x="96.1453%" y="639.50"></text></g><g><title>__x64_sys_futex (142 samples, 0.14%)</title><rect x="95.7735%" y="677" width="0.1350%" height="15" fill="rgb(234,44,20)" fg:x="100703" fg:w="142"/><text x="96.0235%" y="687.50"></text></g><g><title>do_futex (105 samples, 0.10%)</title><rect x="95.8087%" y="661" width="0.0999%" height="15" fill="rgb(254,138,23)" fg:x="100740" fg:w="105"/><text x="96.0587%" y="671.50"></text></g><g><title>futex_wake (96 samples, 0.09%)</title><rect x="95.8173%" y="645" width="0.0913%" height="15" fill="rgb(206,119,39)" fg:x="100749" fg:w="96"/><text x="96.0673%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (17 samples, 0.02%)</title><rect x="96.1882%" y="661" width="0.0162%" height="15" fill="rgb(231,105,52)" fg:x="101139" fg:w="17"/><text x="96.4382%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (309 samples, 0.29%)</title><rect x="95.9143%" y="677" width="0.2939%" height="15" fill="rgb(250,20,5)" fg:x="100851" fg:w="309"/><text x="96.1643%" y="687.50"></text></g><g><title>__audit_syscall_entry (25 samples, 0.02%)</title><rect x="96.2177%" y="661" width="0.0238%" height="15" fill="rgb(215,198,30)" fg:x="101170" fg:w="25"/><text x="96.4677%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (511 samples, 0.49%)</title><rect x="95.7564%" y="709" width="0.4860%" height="15" fill="rgb(246,142,8)" fg:x="100685" fg:w="511"/><text x="96.0064%" y="719.50"></text></g><g><title>do_syscall_64 (502 samples, 0.48%)</title><rect x="95.7650%" y="693" width="0.4774%" height="15" fill="rgb(243,26,38)" fg:x="100694" fg:w="502"/><text x="96.0150%" y="703.50"></text></g><g><title>syscall_trace_enter.constprop.0 (36 samples, 0.03%)</title><rect x="96.2082%" y="677" width="0.0342%" height="15" fill="rgb(205,133,28)" fg:x="101160" fg:w="36"/><text x="96.4582%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (595 samples, 0.57%)</title><rect x="95.6975%" y="741" width="0.5659%" height="15" fill="rgb(212,34,0)" fg:x="100623" fg:w="595"/><text x="95.9475%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (583 samples, 0.55%)</title><rect x="95.7089%" y="725" width="0.5545%" height="15" fill="rgb(251,226,22)" fg:x="100635" fg:w="583"/><text x="95.9589%" y="735.50"></text></g><g><title>syscall_return_via_sysret (22 samples, 0.02%)</title><rect x="96.2424%" y="709" width="0.0209%" height="15" fill="rgb(252,119,9)" fg:x="101196" fg:w="22"/><text x="96.4924%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (42 samples, 0.04%)</title><rect x="96.2652%" y="741" width="0.0399%" height="15" fill="rgb(213,150,50)" fg:x="101220" fg:w="42"/><text x="96.5152%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.04%)</title><rect x="96.2652%" y="725" width="0.0399%" height="15" fill="rgb(212,24,39)" fg:x="101220" fg:w="42"/><text x="96.5152%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="96.3784%" y="677" width="0.0105%" height="15" fill="rgb(213,46,39)" fg:x="101339" fg:w="11"/><text x="96.6284%" y="687.50"></text></g><g><title>__condvar_confirm_wakeup (20 samples, 0.02%)</title><rect x="96.3889%" y="677" width="0.0190%" height="15" fill="rgb(239,106,12)" fg:x="101350" fg:w="20"/><text x="96.6389%" y="687.50"></text></g><g><title>__condvar_dec_grefs (89 samples, 0.08%)</title><rect x="96.4079%" y="677" width="0.0846%" height="15" fill="rgb(249,229,21)" fg:x="101370" fg:w="89"/><text x="96.6579%" y="687.50"></text></g><g><title>__GI___pthread_disable_asynccancel (11 samples, 0.01%)</title><rect x="96.5410%" y="661" width="0.0105%" height="15" fill="rgb(212,158,3)" fg:x="101510" fg:w="11"/><text x="96.7910%" y="671.50"></text></g><g><title>__entry_text_start (32 samples, 0.03%)</title><rect x="96.5601%" y="661" width="0.0304%" height="15" fill="rgb(253,26,48)" fg:x="101530" fg:w="32"/><text x="96.8101%" y="671.50"></text></g><g><title>futex_unqueue (29 samples, 0.03%)</title><rect x="96.7959%" y="581" width="0.0276%" height="15" fill="rgb(238,178,20)" fg:x="101778" fg:w="29"/><text x="97.0459%" y="591.50"></text></g><g><title>_raw_spin_lock (17 samples, 0.02%)</title><rect x="97.0403%" y="517" width="0.0162%" height="15" fill="rgb(208,86,15)" fg:x="102035" fg:w="17"/><text x="97.2903%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (82 samples, 0.08%)</title><rect x="97.0032%" y="533" width="0.0780%" height="15" fill="rgb(239,42,53)" fg:x="101996" fg:w="82"/><text x="97.2532%" y="543.50"></text></g><g><title>x86_pmu_disable (23 samples, 0.02%)</title><rect x="97.0594%" y="517" width="0.0219%" height="15" fill="rgb(245,226,8)" fg:x="102055" fg:w="23"/><text x="97.3094%" y="527.50"></text></g><g><title>dequeue_task (11 samples, 0.01%)</title><rect x="97.0812%" y="533" width="0.0105%" height="15" fill="rgb(216,176,32)" fg:x="102078" fg:w="11"/><text x="97.3312%" y="543.50"></text></g><g><title>reweight_entity (21 samples, 0.02%)</title><rect x="97.2172%" y="501" width="0.0200%" height="15" fill="rgb(231,186,21)" fg:x="102221" fg:w="21"/><text x="97.4672%" y="511.50"></text></g><g><title>update_cfs_group (34 samples, 0.03%)</title><rect x="97.2372%" y="501" width="0.0323%" height="15" fill="rgb(205,95,49)" fg:x="102242" fg:w="34"/><text x="97.4872%" y="511.50"></text></g><g><title>__calc_delta (39 samples, 0.04%)</title><rect x="97.3133%" y="485" width="0.0371%" height="15" fill="rgb(217,145,8)" fg:x="102322" fg:w="39"/><text x="97.5633%" y="495.50"></text></g><g><title>__cgroup_account_cputime (16 samples, 0.02%)</title><rect x="97.3504%" y="485" width="0.0152%" height="15" fill="rgb(239,144,48)" fg:x="102361" fg:w="16"/><text x="97.6004%" y="495.50"></text></g><g><title>cpuacct_charge (42 samples, 0.04%)</title><rect x="97.3703%" y="485" width="0.0399%" height="15" fill="rgb(214,189,23)" fg:x="102382" fg:w="42"/><text x="97.6203%" y="495.50"></text></g><g><title>update_curr (163 samples, 0.16%)</title><rect x="97.2695%" y="501" width="0.1550%" height="15" fill="rgb(229,157,17)" fg:x="102276" fg:w="163"/><text x="97.5195%" y="511.50"></text></g><g><title>update_min_vruntime (15 samples, 0.01%)</title><rect x="97.4103%" y="485" width="0.0143%" height="15" fill="rgb(230,5,48)" fg:x="102424" fg:w="15"/><text x="97.6603%" y="495.50"></text></g><g><title>__update_load_avg_cfs_rq (33 samples, 0.03%)</title><rect x="97.4512%" y="485" width="0.0314%" height="15" fill="rgb(224,156,48)" fg:x="102467" fg:w="33"/><text x="97.7012%" y="495.50"></text></g><g><title>dequeue_entity (392 samples, 0.37%)</title><rect x="97.1592%" y="517" width="0.3728%" height="15" fill="rgb(223,14,29)" fg:x="102160" fg:w="392"/><text x="97.4092%" y="527.50"></text></g><g><title>update_load_avg (113 samples, 0.11%)</title><rect x="97.4246%" y="501" width="0.1075%" height="15" fill="rgb(229,96,36)" fg:x="102439" fg:w="113"/><text x="97.6746%" y="511.50"></text></g><g><title>__update_load_avg_se (52 samples, 0.05%)</title><rect x="97.4826%" y="485" width="0.0495%" height="15" fill="rgb(231,102,53)" fg:x="102500" fg:w="52"/><text x="97.7326%" y="495.50"></text></g><g><title>dequeue_task_fair (468 samples, 0.45%)</title><rect x="97.0917%" y="533" width="0.4451%" height="15" fill="rgb(210,77,38)" fg:x="102089" fg:w="468"/><text x="97.3417%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (184 samples, 0.17%)</title><rect x="97.6395%" y="501" width="0.1750%" height="15" fill="rgb(235,131,6)" fg:x="102665" fg:w="184"/><text x="97.8895%" y="511.50"></text></g><g><title>native_write_msr (176 samples, 0.17%)</title><rect x="97.6471%" y="485" width="0.1674%" height="15" fill="rgb(252,55,38)" fg:x="102673" fg:w="176"/><text x="97.8971%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (212 samples, 0.20%)</title><rect x="97.6252%" y="517" width="0.2016%" height="15" fill="rgb(246,38,14)" fg:x="102650" fg:w="212"/><text x="97.8752%" y="527.50"></text></g><g><title>_raw_spin_unlock (13 samples, 0.01%)</title><rect x="97.8145%" y="501" width="0.0124%" height="15" fill="rgb(242,27,5)" fg:x="102849" fg:w="13"/><text x="98.0645%" y="511.50"></text></g><g><title>finish_task_switch.isra.0 (319 samples, 0.30%)</title><rect x="97.5368%" y="533" width="0.3034%" height="15" fill="rgb(228,65,35)" fg:x="102557" fg:w="319"/><text x="97.7868%" y="543.50"></text></g><g><title>pick_next_task_fair (70 samples, 0.07%)</title><rect x="97.8411%" y="533" width="0.0666%" height="15" fill="rgb(245,93,11)" fg:x="102877" fg:w="70"/><text x="98.0911%" y="543.50"></text></g><g><title>newidle_balance (52 samples, 0.05%)</title><rect x="97.8582%" y="517" width="0.0495%" height="15" fill="rgb(213,1,31)" fg:x="102895" fg:w="52"/><text x="98.1082%" y="527.50"></text></g><g><title>pick_next_task_idle (22 samples, 0.02%)</title><rect x="97.9077%" y="533" width="0.0209%" height="15" fill="rgb(237,205,14)" fg:x="102947" fg:w="22"/><text x="98.1577%" y="543.50"></text></g><g><title>set_next_task_idle (22 samples, 0.02%)</title><rect x="97.9077%" y="517" width="0.0209%" height="15" fill="rgb(232,118,45)" fg:x="102947" fg:w="22"/><text x="98.1577%" y="527.50"></text></g><g><title>__update_idle_core (18 samples, 0.02%)</title><rect x="97.9115%" y="501" width="0.0171%" height="15" fill="rgb(218,5,6)" fg:x="102951" fg:w="18"/><text x="98.1615%" y="511.50"></text></g><g><title>iterate_groups (33 samples, 0.03%)</title><rect x="97.9524%" y="517" width="0.0314%" height="15" fill="rgb(251,87,51)" fg:x="102994" fg:w="33"/><text x="98.2024%" y="527.50"></text></g><g><title>psi_group_change (214 samples, 0.20%)</title><rect x="97.9914%" y="517" width="0.2035%" height="15" fill="rgb(207,225,20)" fg:x="103035" fg:w="214"/><text x="98.2414%" y="527.50"></text></g><g><title>psi_task_switch (308 samples, 0.29%)</title><rect x="97.9286%" y="533" width="0.2929%" height="15" fill="rgb(222,78,54)" fg:x="102969" fg:w="308"/><text x="98.1786%" y="543.50"></text></g><g><title>sched_clock_cpu (28 samples, 0.03%)</title><rect x="98.1949%" y="517" width="0.0266%" height="15" fill="rgb(232,85,16)" fg:x="103249" fg:w="28"/><text x="98.4449%" y="527.50"></text></g><g><title>native_sched_clock (24 samples, 0.02%)</title><rect x="98.1987%" y="501" width="0.0228%" height="15" fill="rgb(244,25,33)" fg:x="103253" fg:w="24"/><text x="98.4487%" y="511.50"></text></g><g><title>put_prev_task_fair (50 samples, 0.05%)</title><rect x="98.2215%" y="533" width="0.0476%" height="15" fill="rgb(233,24,36)" fg:x="103277" fg:w="50"/><text x="98.4715%" y="543.50"></text></g><g><title>put_prev_entity (25 samples, 0.02%)</title><rect x="98.2453%" y="517" width="0.0238%" height="15" fill="rgb(253,49,54)" fg:x="103302" fg:w="25"/><text x="98.4953%" y="527.50"></text></g><g><title>raw_spin_rq_lock_nested (21 samples, 0.02%)</title><rect x="98.2691%" y="533" width="0.0200%" height="15" fill="rgb(245,12,22)" fg:x="103327" fg:w="21"/><text x="98.5191%" y="543.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.02%)</title><rect x="98.2719%" y="517" width="0.0171%" height="15" fill="rgb(253,141,28)" fg:x="103330" fg:w="18"/><text x="98.5219%" y="527.50"></text></g><g><title>sched_clock_cpu (31 samples, 0.03%)</title><rect x="98.3214%" y="517" width="0.0295%" height="15" fill="rgb(225,207,27)" fg:x="103382" fg:w="31"/><text x="98.5714%" y="527.50"></text></g><g><title>native_sched_clock (31 samples, 0.03%)</title><rect x="98.3214%" y="501" width="0.0295%" height="15" fill="rgb(220,84,2)" fg:x="103382" fg:w="31"/><text x="98.5714%" y="511.50"></text></g><g><title>futex_wait_queue (1,611 samples, 1.53%)</title><rect x="96.8235%" y="581" width="1.5321%" height="15" fill="rgb(224,37,37)" fg:x="101807" fg:w="1611"/><text x="97.0735%" y="591.50"></text></g><g><title>schedule (1,560 samples, 1.48%)</title><rect x="96.8720%" y="565" width="1.4836%" height="15" fill="rgb(220,143,18)" fg:x="101858" fg:w="1560"/><text x="97.1220%" y="575.50"></text></g><g><title>__schedule (1,525 samples, 1.45%)</title><rect x="96.9053%" y="549" width="1.4504%" height="15" fill="rgb(210,88,33)" fg:x="101893" fg:w="1525"/><text x="97.1553%" y="559.50"></text></g><g><title>update_rq_clock (65 samples, 0.06%)</title><rect x="98.2938%" y="533" width="0.0618%" height="15" fill="rgb(219,87,51)" fg:x="103353" fg:w="65"/><text x="98.5438%" y="543.50"></text></g><g><title>futex_get_value_locked (43 samples, 0.04%)</title><rect x="98.3766%" y="565" width="0.0409%" height="15" fill="rgb(211,7,35)" fg:x="103440" fg:w="43"/><text x="98.6266%" y="575.50"></text></g><g><title>__get_user_nocheck_4 (34 samples, 0.03%)</title><rect x="98.3851%" y="549" width="0.0323%" height="15" fill="rgb(232,77,2)" fg:x="103449" fg:w="34"/><text x="98.6351%" y="559.50"></text></g><g><title>_raw_spin_lock (20 samples, 0.02%)</title><rect x="98.4802%" y="549" width="0.0190%" height="15" fill="rgb(249,94,25)" fg:x="103549" fg:w="20"/><text x="98.7302%" y="559.50"></text></g><g><title>futex_q_lock (107 samples, 0.10%)</title><rect x="98.4175%" y="565" width="0.1018%" height="15" fill="rgb(215,112,2)" fg:x="103483" fg:w="107"/><text x="98.6675%" y="575.50"></text></g><g><title>futex_hash (21 samples, 0.02%)</title><rect x="98.4992%" y="549" width="0.0200%" height="15" fill="rgb(226,115,48)" fg:x="103569" fg:w="21"/><text x="98.7492%" y="559.50"></text></g><g><title>__x64_sys_futex (1,983 samples, 1.89%)</title><rect x="96.6476%" y="629" width="1.8859%" height="15" fill="rgb(249,196,10)" fg:x="101622" fg:w="1983"/><text x="96.8976%" y="639.50">_..</text></g><g><title>do_futex (1,934 samples, 1.84%)</title><rect x="96.6942%" y="613" width="1.8393%" height="15" fill="rgb(237,109,14)" fg:x="101671" fg:w="1934"/><text x="96.9442%" y="623.50">d..</text></g><g><title>futex_wait (1,911 samples, 1.82%)</title><rect x="96.7160%" y="597" width="1.8175%" height="15" fill="rgb(217,103,53)" fg:x="101694" fg:w="1911"/><text x="96.9660%" y="607.50">f..</text></g><g><title>futex_wait_setup (187 samples, 0.18%)</title><rect x="98.3556%" y="581" width="0.1778%" height="15" fill="rgb(244,137,9)" fg:x="103418" fg:w="187"/><text x="98.6056%" y="591.50"></text></g><g><title>get_futex_key (15 samples, 0.01%)</title><rect x="98.5192%" y="565" width="0.0143%" height="15" fill="rgb(227,201,3)" fg:x="103590" fg:w="15"/><text x="98.7692%" y="575.50"></text></g><g><title>__get_user_8 (38 samples, 0.04%)</title><rect x="98.9434%" y="581" width="0.0361%" height="15" fill="rgb(243,94,6)" fg:x="104036" fg:w="38"/><text x="99.1934%" y="591.50"></text></g><g><title>__rseq_handle_notify_resume (106 samples, 0.10%)</title><rect x="98.8987%" y="597" width="0.1008%" height="15" fill="rgb(235,118,5)" fg:x="103989" fg:w="106"/><text x="99.1487%" y="607.50"></text></g><g><title>__put_user_nocheck_8 (20 samples, 0.02%)</title><rect x="98.9805%" y="581" width="0.0190%" height="15" fill="rgb(247,10,30)" fg:x="104075" fg:w="20"/><text x="99.2305%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (194 samples, 0.18%)</title><rect x="98.8464%" y="613" width="0.1845%" height="15" fill="rgb(205,26,28)" fg:x="103934" fg:w="194"/><text x="99.0964%" y="623.50"></text></g><g><title>switch_fpu_return (23 samples, 0.02%)</title><rect x="99.0090%" y="597" width="0.0219%" height="15" fill="rgb(206,99,35)" fg:x="104105" fg:w="23"/><text x="99.2590%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (560 samples, 0.53%)</title><rect x="98.5411%" y="629" width="0.5326%" height="15" fill="rgb(238,130,40)" fg:x="103613" fg:w="560"/><text x="98.7911%" y="639.50"></text></g><g><title>syscall_exit_work (45 samples, 0.04%)</title><rect x="99.0309%" y="613" width="0.0428%" height="15" fill="rgb(224,126,31)" fg:x="104128" fg:w="45"/><text x="99.2809%" y="623.50"></text></g><g><title>__audit_syscall_exit (16 samples, 0.02%)</title><rect x="99.0585%" y="597" width="0.0152%" height="15" fill="rgb(254,105,17)" fg:x="104157" fg:w="16"/><text x="99.3085%" y="607.50"></text></g><g><title>__audit_syscall_entry (19 samples, 0.02%)</title><rect x="99.0832%" y="613" width="0.0181%" height="15" fill="rgb(216,87,36)" fg:x="104183" fg:w="19"/><text x="99.3332%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,633 samples, 2.50%)</title><rect x="96.6000%" y="661" width="2.5041%" height="15" fill="rgb(240,21,12)" fg:x="101572" fg:w="2633"/><text x="96.8500%" y="671.50">en..</text></g><g><title>do_syscall_64 (2,622 samples, 2.49%)</title><rect x="96.6105%" y="645" width="2.4937%" height="15" fill="rgb(245,192,34)" fg:x="101583" fg:w="2622"/><text x="96.8605%" y="655.50">do..</text></g><g><title>syscall_trace_enter.constprop.0 (32 samples, 0.03%)</title><rect x="99.0737%" y="629" width="0.0304%" height="15" fill="rgb(226,100,49)" fg:x="104173" fg:w="32"/><text x="99.3237%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (2,767 samples, 2.63%)</title><rect x="96.4925%" y="677" width="2.6316%" height="15" fill="rgb(245,188,27)" fg:x="101459" fg:w="2767"/><text x="96.7425%" y="687.50">__..</text></g><g><title>syscall_return_via_sysret (21 samples, 0.02%)</title><rect x="99.1041%" y="661" width="0.0200%" height="15" fill="rgb(212,170,8)" fg:x="104205" fg:w="21"/><text x="99.3541%" y="671.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (2,984 samples, 2.84%)</title><rect x="96.3099%" y="709" width="2.8379%" height="15" fill="rgb(217,113,29)" fg:x="101267" fg:w="2984"/><text x="96.5599%" y="719.50">st..</text></g><g><title>__GI___pthread_cond_wait (2,984 samples, 2.84%)</title><rect x="96.3099%" y="693" width="2.8379%" height="15" fill="rgb(237,30,3)" fg:x="101267" fg:w="2984"/><text x="96.5599%" y="703.50">__..</text></g><g><title>__pthread_mutex_cond_lock (16 samples, 0.02%)</title><rect x="99.1326%" y="677" width="0.0152%" height="15" fill="rgb(227,19,28)" fg:x="104235" fg:w="16"/><text x="99.3826%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (3,002 samples, 2.86%)</title><rect x="96.3052%" y="741" width="2.8551%" height="15" fill="rgb(239,172,45)" fg:x="101262" fg:w="3002"/><text x="96.5552%" y="751.50">st..</text></g><g><title>std::sys_common::condvar::Condvar::wait (2,997 samples, 2.85%)</title><rect x="96.3099%" y="725" width="2.8503%" height="15" fill="rgb(254,55,39)" fg:x="101267" fg:w="2997"/><text x="96.5599%" y="735.50">st..</text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (13 samples, 0.01%)</title><rect x="99.1479%" y="709" width="0.0124%" height="15" fill="rgb(249,208,12)" fg:x="104251" fg:w="13"/><text x="99.3979%" y="719.50"></text></g><g><title>parking::Parker::park (3,687 samples, 3.51%)</title><rect x="95.6670%" y="773" width="3.5065%" height="15" fill="rgb(240,52,13)" fg:x="100591" fg:w="3687"/><text x="95.9170%" y="783.50">par..</text></g><g><title>parking::Inner::park (3,684 samples, 3.50%)</title><rect x="95.6699%" y="757" width="3.5037%" height="15" fill="rgb(252,149,13)" fg:x="100594" fg:w="3684"/><text x="95.9199%" y="767.50">par..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="99.1602%" y="741" width="0.0133%" height="15" fill="rgb(232,81,48)" fg:x="104264" fg:w="14"/><text x="99.4102%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="99.1602%" y="725" width="0.0133%" height="15" fill="rgb(222,144,2)" fg:x="104264" fg:w="14"/><text x="99.4102%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="99.1602%" y="709" width="0.0133%" height="15" fill="rgb(216,81,32)" fg:x="104264" fg:w="14"/><text x="99.4102%" y="719.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="99.1602%" y="693" width="0.0133%" height="15" fill="rgb(244,78,51)" fg:x="104264" fg:w="14"/><text x="99.4102%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (63 samples, 0.06%)</title><rect x="99.1735%" y="773" width="0.0599%" height="15" fill="rgb(217,66,21)" fg:x="104278" fg:w="63"/><text x="99.4235%" y="783.50"></text></g><g><title>parking::Inner::park (61 samples, 0.06%)</title><rect x="99.1754%" y="757" width="0.0580%" height="15" fill="rgb(247,101,42)" fg:x="104280" fg:w="61"/><text x="99.4254%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (60 samples, 0.06%)</title><rect x="99.1764%" y="741" width="0.0571%" height="15" fill="rgb(227,81,39)" fg:x="104281" fg:w="60"/><text x="99.4264%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (60 samples, 0.06%)</title><rect x="99.1764%" y="725" width="0.0571%" height="15" fill="rgb(220,223,44)" fg:x="104281" fg:w="60"/><text x="99.4264%" y="735.50"></text></g><g><title>std::panic::catch_unwind (19,784 samples, 18.82%)</title><rect x="80.4331%" y="1061" width="18.8156%" height="15" fill="rgb(205,218,2)" fg:x="84573" fg:w="19784"/><text x="80.6831%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,784 samples, 18.82%)</title><rect x="80.4331%" y="1045" width="18.8156%" height="15" fill="rgb(212,207,28)" fg:x="84573" fg:w="19784"/><text x="80.6831%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,784 samples, 18.82%)</title><rect x="80.4331%" y="1029" width="18.8156%" height="15" fill="rgb(224,12,41)" fg:x="84573" fg:w="19784"/><text x="80.6831%" y="1039.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,784 samples, 18.82%)</title><rect x="80.4331%" y="1013" width="18.8156%" height="15" fill="rgb(216,118,12)" fg:x="84573" fg:w="19784"/><text x="80.6831%" y="1023.50">&lt;core::panic::unwind_safe::As..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (19,784 samples, 18.82%)</title><rect x="80.4331%" y="997" width="18.8156%" height="15" fill="rgb(252,97,46)" fg:x="84573" fg:w="19784"/><text x="80.6831%" y="1007.50">std::thread::Builder::spawn_u..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19,784 samples, 18.82%)</title><rect x="80.4331%" y="981" width="18.8156%" height="15" fill="rgb(244,206,19)" fg:x="84573" fg:w="19784"/><text x="80.6831%" y="991.50">std::sys_common::backtrace::_..</text></g><g><title>core::ops::function::FnOnce::call_once (19,784 samples, 18.82%)</title><rect x="80.4331%" y="965" width="18.8156%" height="15" fill="rgb(231,84,31)" fg:x="84573" fg:w="19784"/><text x="80.6831%" y="975.50">core::ops::function::FnOnce::..</text></g><g><title>async_global_executor::threading::thread_main_loop (19,784 samples, 18.82%)</title><rect x="80.4331%" y="949" width="18.8156%" height="15" fill="rgb(244,133,0)" fg:x="84573" fg:w="19784"/><text x="80.6831%" y="959.50">async_global_executor::thread..</text></g><g><title>std::panic::catch_unwind (19,754 samples, 18.79%)</title><rect x="80.4616%" y="933" width="18.7870%" height="15" fill="rgb(223,15,50)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,754 samples, 18.79%)</title><rect x="80.4616%" y="917" width="18.7870%" height="15" fill="rgb(250,118,49)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,754 samples, 18.79%)</title><rect x="80.4616%" y="901" width="18.7870%" height="15" fill="rgb(248,25,38)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="911.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (19,754 samples, 18.79%)</title><rect x="80.4616%" y="885" width="18.7870%" height="15" fill="rgb(215,70,14)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="895.50">async_global_executor::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19,754 samples, 18.79%)</title><rect x="80.4616%" y="869" width="18.7870%" height="15" fill="rgb(215,28,15)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="879.50">std::thread::local::LocalKey&lt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19,754 samples, 18.79%)</title><rect x="80.4616%" y="853" width="18.7870%" height="15" fill="rgb(243,6,28)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="863.50">std::thread::local::LocalKey&lt;..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (19,754 samples, 18.79%)</title><rect x="80.4616%" y="837" width="18.7870%" height="15" fill="rgb(222,130,1)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="847.50">async_global_executor::thread..</text></g><g><title>async_global_executor::reactor::block_on (19,754 samples, 18.79%)</title><rect x="80.4616%" y="821" width="18.7870%" height="15" fill="rgb(236,166,44)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="831.50">async_global_executor::reacto..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (19,754 samples, 18.79%)</title><rect x="80.4616%" y="805" width="18.7870%" height="15" fill="rgb(221,108,14)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="815.50">async_global_executor::reacto..</text></g><g><title>async_io::driver::block_on (19,754 samples, 18.79%)</title><rect x="80.4616%" y="789" width="18.7870%" height="15" fill="rgb(252,3,45)" fg:x="84603" fg:w="19754"/><text x="80.7116%" y="799.50">async_io::driver::block_on</text></g><g><title>std::time::Instant::now (14 samples, 0.01%)</title><rect x="99.2354%" y="773" width="0.0133%" height="15" fill="rgb(237,68,30)" fg:x="104343" fg:w="14"/><text x="99.4854%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (14 samples, 0.01%)</title><rect x="99.2354%" y="757" width="0.0133%" height="15" fill="rgb(211,79,22)" fg:x="104343" fg:w="14"/><text x="99.4854%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.01%)</title><rect x="99.2354%" y="741" width="0.0133%" height="15" fill="rgb(252,185,21)" fg:x="104343" fg:w="14"/><text x="99.4854%" y="751.50"></text></g><g><title>__clock_gettime_2 (11 samples, 0.01%)</title><rect x="99.2382%" y="725" width="0.0105%" height="15" fill="rgb(225,189,26)" fg:x="104346" fg:w="11"/><text x="99.4882%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19,787 samples, 18.82%)</title><rect x="80.4331%" y="1125" width="18.8184%" height="15" fill="rgb(241,30,40)" fg:x="84573" fg:w="19787"/><text x="80.6831%" y="1135.50">&lt;alloc::boxed::Box&lt;F,A&gt; as co..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19,787 samples, 18.82%)</title><rect x="80.4331%" y="1109" width="18.8184%" height="15" fill="rgb(235,215,44)" fg:x="84573" fg:w="19787"/><text x="80.6831%" y="1119.50">&lt;alloc::boxed::Box&lt;F,A&gt; as co..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19,787 samples, 18.82%)</title><rect x="80.4331%" y="1093" width="18.8184%" height="15" fill="rgb(205,8,29)" fg:x="84573" fg:w="19787"/><text x="80.6831%" y="1103.50">core::ops::function::FnOnce::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (19,787 samples, 18.82%)</title><rect x="80.4331%" y="1077" width="18.8184%" height="15" fill="rgb(241,137,42)" fg:x="84573" fg:w="19787"/><text x="80.6831%" y="1087.50">std::thread::Builder::spawn_u..</text></g><g><title>__GI___clone (19,825 samples, 18.85%)</title><rect x="80.4141%" y="1173" width="18.8546%" height="15" fill="rgb(237,155,2)" fg:x="84553" fg:w="19825"/><text x="80.6641%" y="1183.50">__GI___clone</text></g><g><title>start_thread (19,805 samples, 18.84%)</title><rect x="80.4331%" y="1157" width="18.8355%" height="15" fill="rgb(245,29,42)" fg:x="84573" fg:w="19805"/><text x="80.6831%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (19,805 samples, 18.84%)</title><rect x="80.4331%" y="1141" width="18.8355%" height="15" fill="rgb(234,101,35)" fg:x="84573" fg:w="19805"/><text x="80.6831%" y="1151.50">std::sys::unix::thread::Threa..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (18 samples, 0.02%)</title><rect x="99.2515%" y="1125" width="0.0171%" height="15" fill="rgb(228,64,37)" fg:x="104360" fg:w="18"/><text x="99.5015%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (18 samples, 0.02%)</title><rect x="99.2515%" y="1109" width="0.0171%" height="15" fill="rgb(217,214,36)" fg:x="104360" fg:w="18"/><text x="99.5015%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (18 samples, 0.02%)</title><rect x="99.2515%" y="1093" width="0.0171%" height="15" fill="rgb(243,70,3)" fg:x="104360" fg:w="18"/><text x="99.5015%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (18 samples, 0.02%)</title><rect x="99.2515%" y="1077" width="0.0171%" height="15" fill="rgb(253,158,52)" fg:x="104360" fg:w="18"/><text x="99.5015%" y="1087.50"></text></g><g><title>__GI___mprotect (11 samples, 0.01%)</title><rect x="99.2582%" y="1061" width="0.0105%" height="15" fill="rgb(234,111,54)" fg:x="104367" fg:w="11"/><text x="99.5082%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.01%)</title><rect x="99.2582%" y="1045" width="0.0105%" height="15" fill="rgb(217,70,32)" fg:x="104367" fg:w="11"/><text x="99.5082%" y="1055.50"></text></g><g><title>do_syscall_64 (11 samples, 0.01%)</title><rect x="99.2582%" y="1029" width="0.0105%" height="15" fill="rgb(234,18,33)" fg:x="104367" fg:w="11"/><text x="99.5082%" y="1039.50"></text></g><g><title>__x64_sys_mprotect (11 samples, 0.01%)</title><rect x="99.2582%" y="1013" width="0.0105%" height="15" fill="rgb(234,12,49)" fg:x="104367" fg:w="11"/><text x="99.5082%" y="1023.50"></text></g><g><title>do_mprotect_pkey (11 samples, 0.01%)</title><rect x="99.2582%" y="997" width="0.0105%" height="15" fill="rgb(236,10,21)" fg:x="104367" fg:w="11"/><text x="99.5082%" y="1007.50"></text></g><g><title>down_write_killable (11 samples, 0.01%)</title><rect x="99.2582%" y="981" width="0.0105%" height="15" fill="rgb(248,182,45)" fg:x="104367" fg:w="11"/><text x="99.5082%" y="991.50"></text></g><g><title>rwsem_down_write_slowpath (11 samples, 0.01%)</title><rect x="99.2582%" y="965" width="0.0105%" height="15" fill="rgb(217,95,36)" fg:x="104367" fg:w="11"/><text x="99.5082%" y="975.50"></text></g><g><title>__clock_gettime_2 (18 samples, 0.02%)</title><rect x="99.2782%" y="1173" width="0.0171%" height="15" fill="rgb(212,110,31)" fg:x="104388" fg:w="18"/><text x="99.5282%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (20 samples, 0.02%)</title><rect x="99.3105%" y="1157" width="0.0190%" height="15" fill="rgb(206,32,53)" fg:x="104422" fg:w="20"/><text x="99.5605%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (20 samples, 0.02%)</title><rect x="99.3105%" y="1141" width="0.0190%" height="15" fill="rgb(246,141,37)" fg:x="104422" fg:w="20"/><text x="99.5605%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (20 samples, 0.02%)</title><rect x="99.3105%" y="1125" width="0.0190%" height="15" fill="rgb(219,16,7)" fg:x="104422" fg:w="20"/><text x="99.5605%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="99.3105%" y="1109" width="0.0190%" height="15" fill="rgb(230,205,45)" fg:x="104422" fg:w="20"/><text x="99.5605%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="99.3105%" y="1093" width="0.0190%" height="15" fill="rgb(231,43,49)" fg:x="104422" fg:w="20"/><text x="99.5605%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="99.3105%" y="1077" width="0.0190%" height="15" fill="rgb(212,106,34)" fg:x="104422" fg:w="20"/><text x="99.5605%" y="1087.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="99.3105%" y="1061" width="0.0190%" height="15" fill="rgb(206,83,17)" fg:x="104422" fg:w="20"/><text x="99.5605%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="99.3105%" y="1045" width="0.0190%" height="15" fill="rgb(244,154,49)" fg:x="104422" fg:w="20"/><text x="99.5605%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (30 samples, 0.03%)</title><rect x="99.3295%" y="1157" width="0.0285%" height="15" fill="rgb(244,149,49)" fg:x="104442" fg:w="30"/><text x="99.5795%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (54 samples, 0.05%)</title><rect x="99.3076%" y="1173" width="0.0514%" height="15" fill="rgb(227,134,18)" fg:x="104419" fg:w="54"/><text x="99.5576%" y="1183.50"></text></g><g><title>async_executor::steal (33 samples, 0.03%)</title><rect x="99.3828%" y="1173" width="0.0314%" height="15" fill="rgb(237,116,36)" fg:x="104498" fg:w="33"/><text x="99.6328%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (18 samples, 0.02%)</title><rect x="99.4142%" y="1173" width="0.0171%" height="15" fill="rgb(205,129,40)" fg:x="104531" fg:w="18"/><text x="99.6642%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (12 samples, 0.01%)</title><rect x="99.4322%" y="1173" width="0.0114%" height="15" fill="rgb(236,178,4)" fg:x="104550" fg:w="12"/><text x="99.6822%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (24 samples, 0.02%)</title><rect x="99.4436%" y="1173" width="0.0228%" height="15" fill="rgb(251,76,53)" fg:x="104562" fg:w="24"/><text x="99.6936%" y="1183.50"></text></g><g><title>futex_wait_queue (11 samples, 0.01%)</title><rect x="99.5045%" y="1093" width="0.0105%" height="15" fill="rgb(242,92,40)" fg:x="104626" fg:w="11"/><text x="99.7545%" y="1103.50"></text></g><g><title>schedule (11 samples, 0.01%)</title><rect x="99.5045%" y="1077" width="0.0105%" height="15" fill="rgb(209,45,30)" fg:x="104626" fg:w="11"/><text x="99.7545%" y="1087.50"></text></g><g><title>__schedule (11 samples, 0.01%)</title><rect x="99.5045%" y="1061" width="0.0105%" height="15" fill="rgb(218,157,36)" fg:x="104626" fg:w="11"/><text x="99.7545%" y="1071.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="99.5045%" y="1109" width="0.0133%" height="15" fill="rgb(222,186,16)" fg:x="104626" fg:w="14"/><text x="99.7545%" y="1119.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.02%)</title><rect x="99.5026%" y="1141" width="0.0190%" height="15" fill="rgb(254,72,35)" fg:x="104624" fg:w="20"/><text x="99.7526%" y="1151.50"></text></g><g><title>do_futex (18 samples, 0.02%)</title><rect x="99.5045%" y="1125" width="0.0171%" height="15" fill="rgb(224,25,35)" fg:x="104626" fg:w="18"/><text x="99.7545%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (61 samples, 0.06%)</title><rect x="99.4722%" y="1173" width="0.0580%" height="15" fill="rgb(206,135,52)" fg:x="104592" fg:w="61"/><text x="99.7222%" y="1183.50"></text></g><g><title>do_syscall_64 (34 samples, 0.03%)</title><rect x="99.4978%" y="1157" width="0.0323%" height="15" fill="rgb(229,174,47)" fg:x="104619" fg:w="34"/><text x="99.7478%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (56 samples, 0.05%)</title><rect x="99.5302%" y="1173" width="0.0533%" height="15" fill="rgb(242,184,21)" fg:x="104653" fg:w="56"/><text x="99.7802%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (13 samples, 0.01%)</title><rect x="99.5863%" y="1173" width="0.0124%" height="15" fill="rgb(213,22,45)" fg:x="104712" fg:w="13"/><text x="99.8363%" y="1183.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (16 samples, 0.02%)</title><rect x="99.5987%" y="1173" width="0.0152%" height="15" fill="rgb(237,81,54)" fg:x="104725" fg:w="16"/><text x="99.8487%" y="1183.50"></text></g><g><title>syscall_return_via_sysret (14 samples, 0.01%)</title><rect x="99.6148%" y="1173" width="0.0133%" height="15" fill="rgb(248,177,18)" fg:x="104742" fg:w="14"/><text x="99.8648%" y="1183.50"></text></g><g><title>async-std/runti (104,694 samples, 99.57%)</title><rect x="0.0685%" y="1189" width="99.5692%" height="15" fill="rgb(254,31,16)" fg:x="72" fg:w="104694"/><text x="0.3185%" y="1199.50">async-std/runti</text></g><g><title>blocking-2 (19 samples, 0.02%)</title><rect x="99.6453%" y="1189" width="0.0181%" height="15" fill="rgb(235,20,31)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1199.50"></text></g><g><title>__GI___clone (19 samples, 0.02%)</title><rect x="99.6453%" y="1173" width="0.0181%" height="15" fill="rgb(240,56,43)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1183.50"></text></g><g><title>start_thread (19 samples, 0.02%)</title><rect x="99.6453%" y="1157" width="0.0181%" height="15" fill="rgb(237,197,51)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (19 samples, 0.02%)</title><rect x="99.6453%" y="1141" width="0.0181%" height="15" fill="rgb(241,162,44)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6453%" y="1125" width="0.0181%" height="15" fill="rgb(224,23,20)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6453%" y="1109" width="0.0181%" height="15" fill="rgb(250,109,34)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 0.02%)</title><rect x="99.6453%" y="1093" width="0.0181%" height="15" fill="rgb(214,175,50)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (19 samples, 0.02%)</title><rect x="99.6453%" y="1077" width="0.0181%" height="15" fill="rgb(213,182,5)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="99.6453%" y="1061" width="0.0181%" height="15" fill="rgb(209,199,19)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1071.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="99.6453%" y="1045" width="0.0181%" height="15" fill="rgb(236,224,42)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="99.6453%" y="1029" width="0.0181%" height="15" fill="rgb(246,226,29)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6453%" y="1013" width="0.0181%" height="15" fill="rgb(227,223,11)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="99.6453%" y="997" width="0.0181%" height="15" fill="rgb(219,7,51)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 0.02%)</title><rect x="99.6453%" y="981" width="0.0181%" height="15" fill="rgb(245,167,10)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (19 samples, 0.02%)</title><rect x="99.6453%" y="965" width="0.0181%" height="15" fill="rgb(237,224,16)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (19 samples, 0.02%)</title><rect x="99.6453%" y="949" width="0.0181%" height="15" fill="rgb(226,132,13)" fg:x="104774" fg:w="19"/><text x="99.8953%" y="959.50"></text></g><g><title>blocking-3 (17 samples, 0.02%)</title><rect x="99.6633%" y="1189" width="0.0162%" height="15" fill="rgb(214,140,3)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1199.50"></text></g><g><title>__GI___clone (17 samples, 0.02%)</title><rect x="99.6633%" y="1173" width="0.0162%" height="15" fill="rgb(221,177,4)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1183.50"></text></g><g><title>start_thread (17 samples, 0.02%)</title><rect x="99.6633%" y="1157" width="0.0162%" height="15" fill="rgb(238,139,3)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.02%)</title><rect x="99.6633%" y="1141" width="0.0162%" height="15" fill="rgb(216,17,39)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.6633%" y="1125" width="0.0162%" height="15" fill="rgb(238,120,9)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.6633%" y="1109" width="0.0162%" height="15" fill="rgb(244,92,53)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.02%)</title><rect x="99.6633%" y="1093" width="0.0162%" height="15" fill="rgb(224,148,33)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (17 samples, 0.02%)</title><rect x="99.6633%" y="1077" width="0.0162%" height="15" fill="rgb(243,6,36)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="99.6633%" y="1061" width="0.0162%" height="15" fill="rgb(230,102,11)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1071.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="99.6633%" y="1045" width="0.0162%" height="15" fill="rgb(234,148,36)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="99.6633%" y="1029" width="0.0162%" height="15" fill="rgb(251,153,25)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.6633%" y="1013" width="0.0162%" height="15" fill="rgb(215,129,8)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="99.6633%" y="997" width="0.0162%" height="15" fill="rgb(224,128,35)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.02%)</title><rect x="99.6633%" y="981" width="0.0162%" height="15" fill="rgb(237,56,52)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (17 samples, 0.02%)</title><rect x="99.6633%" y="965" width="0.0162%" height="15" fill="rgb(234,213,19)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (17 samples, 0.02%)</title><rect x="99.6633%" y="949" width="0.0162%" height="15" fill="rgb(252,82,23)" fg:x="104793" fg:w="17"/><text x="99.9133%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (13 samples, 0.01%)</title><rect x="99.6671%" y="933" width="0.0124%" height="15" fill="rgb(254,201,21)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (13 samples, 0.01%)</title><rect x="99.6671%" y="917" width="0.0124%" height="15" fill="rgb(250,186,11)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (13 samples, 0.01%)</title><rect x="99.6671%" y="901" width="0.0124%" height="15" fill="rgb(211,174,5)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (13 samples, 0.01%)</title><rect x="99.6671%" y="885" width="0.0124%" height="15" fill="rgb(214,121,10)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common (13 samples, 0.01%)</title><rect x="99.6671%" y="869" width="0.0124%" height="15" fill="rgb(241,66,2)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="99.6671%" y="853" width="0.0124%" height="15" fill="rgb(220,167,19)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="863.50"></text></g><g><title>do_syscall_64 (13 samples, 0.01%)</title><rect x="99.6671%" y="837" width="0.0124%" height="15" fill="rgb(231,54,50)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="847.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.01%)</title><rect x="99.6671%" y="821" width="0.0124%" height="15" fill="rgb(239,217,53)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="831.50"></text></g><g><title>do_futex (13 samples, 0.01%)</title><rect x="99.6671%" y="805" width="0.0124%" height="15" fill="rgb(248,8,0)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="815.50"></text></g><g><title>futex_wait (13 samples, 0.01%)</title><rect x="99.6671%" y="789" width="0.0124%" height="15" fill="rgb(229,118,37)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="799.50"></text></g><g><title>futex_wait_queue (13 samples, 0.01%)</title><rect x="99.6671%" y="773" width="0.0124%" height="15" fill="rgb(253,223,43)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="783.50"></text></g><g><title>schedule (13 samples, 0.01%)</title><rect x="99.6671%" y="757" width="0.0124%" height="15" fill="rgb(211,77,36)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="767.50"></text></g><g><title>__schedule (13 samples, 0.01%)</title><rect x="99.6671%" y="741" width="0.0124%" height="15" fill="rgb(219,3,53)" fg:x="104797" fg:w="13"/><text x="99.9171%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (12 samples, 0.01%)</title><rect x="99.6681%" y="725" width="0.0114%" height="15" fill="rgb(244,45,42)" fg:x="104798" fg:w="12"/><text x="99.9181%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (12 samples, 0.01%)</title><rect x="99.6681%" y="709" width="0.0114%" height="15" fill="rgb(225,95,27)" fg:x="104798" fg:w="12"/><text x="99.9181%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (11 samples, 0.01%)</title><rect x="99.6690%" y="693" width="0.0105%" height="15" fill="rgb(207,74,8)" fg:x="104799" fg:w="11"/><text x="99.9190%" y="703.50"></text></g><g><title>native_write_msr (11 samples, 0.01%)</title><rect x="99.6690%" y="677" width="0.0105%" height="15" fill="rgb(243,63,36)" fg:x="104799" fg:w="11"/><text x="99.9190%" y="687.50"></text></g><g><title>blocking-4 (11 samples, 0.01%)</title><rect x="99.6795%" y="1189" width="0.0105%" height="15" fill="rgb(211,180,12)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1199.50"></text></g><g><title>__GI___clone (11 samples, 0.01%)</title><rect x="99.6795%" y="1173" width="0.0105%" height="15" fill="rgb(254,166,49)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1183.50"></text></g><g><title>start_thread (11 samples, 0.01%)</title><rect x="99.6795%" y="1157" width="0.0105%" height="15" fill="rgb(205,19,0)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11 samples, 0.01%)</title><rect x="99.6795%" y="1141" width="0.0105%" height="15" fill="rgb(224,172,32)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.6795%" y="1125" width="0.0105%" height="15" fill="rgb(254,136,30)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.6795%" y="1109" width="0.0105%" height="15" fill="rgb(246,19,35)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11 samples, 0.01%)</title><rect x="99.6795%" y="1093" width="0.0105%" height="15" fill="rgb(219,24,36)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (11 samples, 0.01%)</title><rect x="99.6795%" y="1077" width="0.0105%" height="15" fill="rgb(251,55,1)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="99.6795%" y="1061" width="0.0105%" height="15" fill="rgb(218,117,39)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1071.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="99.6795%" y="1045" width="0.0105%" height="15" fill="rgb(248,169,11)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="99.6795%" y="1029" width="0.0105%" height="15" fill="rgb(244,40,44)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.6795%" y="1013" width="0.0105%" height="15" fill="rgb(234,62,37)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="99.6795%" y="997" width="0.0105%" height="15" fill="rgb(207,117,42)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.01%)</title><rect x="99.6795%" y="981" width="0.0105%" height="15" fill="rgb(213,43,2)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (11 samples, 0.01%)</title><rect x="99.6795%" y="965" width="0.0105%" height="15" fill="rgb(244,202,51)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (11 samples, 0.01%)</title><rect x="99.6795%" y="949" width="0.0105%" height="15" fill="rgb(253,174,46)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="959.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="99.6795%" y="933" width="0.0105%" height="15" fill="rgb(251,23,1)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="943.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="99.6795%" y="917" width="0.0105%" height="15" fill="rgb(253,26,1)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="927.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="99.6795%" y="901" width="0.0105%" height="15" fill="rgb(216,89,31)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="911.50"></text></g><g><title>blocking::Executor::main_loop::{{closure}} (11 samples, 0.01%)</title><rect x="99.6795%" y="885" width="0.0105%" height="15" fill="rgb(209,109,5)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="895.50"></text></g><g><title>async_task::runnable::Runnable::run (11 samples, 0.01%)</title><rect x="99.6795%" y="869" width="0.0105%" height="15" fill="rgb(229,63,13)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11 samples, 0.01%)</title><rect x="99.6795%" y="853" width="0.0105%" height="15" fill="rgb(238,137,54)" fg:x="104810" fg:w="11"/><text x="99.9295%" y="863.50"></text></g><g><title>__perf_event_task_sched_in (51 samples, 0.05%)</title><rect x="99.6957%" y="693" width="0.0485%" height="15" fill="rgb(228,1,9)" fg:x="104827" fg:w="51"/><text x="99.9457%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (50 samples, 0.05%)</title><rect x="99.6966%" y="677" width="0.0476%" height="15" fill="rgb(249,120,48)" fg:x="104828" fg:w="50"/><text x="99.9466%" y="687.50"></text></g><g><title>native_write_msr (49 samples, 0.05%)</title><rect x="99.6976%" y="661" width="0.0466%" height="15" fill="rgb(209,72,36)" fg:x="104829" fg:w="49"/><text x="99.9476%" y="671.50"></text></g><g><title>__x64_sys_futex (53 samples, 0.05%)</title><rect x="99.6957%" y="805" width="0.0504%" height="15" fill="rgb(247,98,49)" fg:x="104827" fg:w="53"/><text x="99.9457%" y="815.50"></text></g><g><title>do_futex (53 samples, 0.05%)</title><rect x="99.6957%" y="789" width="0.0504%" height="15" fill="rgb(233,75,36)" fg:x="104827" fg:w="53"/><text x="99.9457%" y="799.50"></text></g><g><title>futex_wait (53 samples, 0.05%)</title><rect x="99.6957%" y="773" width="0.0504%" height="15" fill="rgb(225,14,24)" fg:x="104827" fg:w="53"/><text x="99.9457%" y="783.50"></text></g><g><title>futex_wait_queue (53 samples, 0.05%)</title><rect x="99.6957%" y="757" width="0.0504%" height="15" fill="rgb(237,193,20)" fg:x="104827" fg:w="53"/><text x="99.9457%" y="767.50"></text></g><g><title>schedule (53 samples, 0.05%)</title><rect x="99.6957%" y="741" width="0.0504%" height="15" fill="rgb(239,122,19)" fg:x="104827" fg:w="53"/><text x="99.9457%" y="751.50"></text></g><g><title>__schedule (53 samples, 0.05%)</title><rect x="99.6957%" y="725" width="0.0504%" height="15" fill="rgb(231,220,10)" fg:x="104827" fg:w="53"/><text x="99.9457%" y="735.50"></text></g><g><title>finish_task_switch.isra.0 (53 samples, 0.05%)</title><rect x="99.6957%" y="709" width="0.0504%" height="15" fill="rgb(220,66,15)" fg:x="104827" fg:w="53"/><text x="99.9457%" y="719.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.05%)</title><rect x="99.6957%" y="933" width="0.0523%" height="15" fill="rgb(215,171,52)" fg:x="104827" fg:w="55"/><text x="99.9457%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.05%)</title><rect x="99.6957%" y="917" width="0.0523%" height="15" fill="rgb(241,169,50)" fg:x="104827" fg:w="55"/><text x="99.9457%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.05%)</title><rect x="99.6957%" y="901" width="0.0523%" height="15" fill="rgb(236,189,0)" fg:x="104827" fg:w="55"/><text x="99.9457%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (55 samples, 0.05%)</title><rect x="99.6957%" y="885" width="0.0523%" height="15" fill="rgb(217,147,20)" fg:x="104827" fg:w="55"/><text x="99.9457%" y="895.50"></text></g><g><title>___pthread_mutex_lock (55 samples, 0.05%)</title><rect x="99.6957%" y="869" width="0.0523%" height="15" fill="rgb(206,188,39)" fg:x="104827" fg:w="55"/><text x="99.9457%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (55 samples, 0.05%)</title><rect x="99.6957%" y="853" width="0.0523%" height="15" fill="rgb(227,118,25)" fg:x="104827" fg:w="55"/><text x="99.9457%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (55 samples, 0.05%)</title><rect x="99.6957%" y="837" width="0.0523%" height="15" fill="rgb(248,171,40)" fg:x="104827" fg:w="55"/><text x="99.9457%" y="847.50"></text></g><g><title>do_syscall_64 (55 samples, 0.05%)</title><rect x="99.6957%" y="821" width="0.0523%" height="15" fill="rgb(251,90,54)" fg:x="104827" fg:w="55"/><text x="99.9457%" y="831.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (11 samples, 0.01%)</title><rect x="99.7480%" y="933" width="0.0105%" height="15" fill="rgb(234,11,46)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="943.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (11 samples, 0.01%)</title><rect x="99.7480%" y="917" width="0.0105%" height="15" fill="rgb(229,134,13)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (11 samples, 0.01%)</title><rect x="99.7480%" y="901" width="0.0105%" height="15" fill="rgb(223,129,3)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="911.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="99.7480%" y="885" width="0.0105%" height="15" fill="rgb(221,124,13)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="895.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="99.7480%" y="869" width="0.0105%" height="15" fill="rgb(234,3,18)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="879.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="99.7480%" y="853" width="0.0105%" height="15" fill="rgb(249,199,20)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.01%)</title><rect x="99.7480%" y="837" width="0.0105%" height="15" fill="rgb(224,134,6)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="99.7480%" y="821" width="0.0105%" height="15" fill="rgb(254,83,26)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (11 samples, 0.01%)</title><rect x="99.7480%" y="805" width="0.0105%" height="15" fill="rgb(217,88,9)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="815.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (11 samples, 0.01%)</title><rect x="99.7480%" y="789" width="0.0105%" height="15" fill="rgb(225,73,2)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="799.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (11 samples, 0.01%)</title><rect x="99.7480%" y="773" width="0.0105%" height="15" fill="rgb(226,44,39)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="783.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (11 samples, 0.01%)</title><rect x="99.7480%" y="757" width="0.0105%" height="15" fill="rgb(228,53,17)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="767.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="99.7480%" y="741" width="0.0105%" height="15" fill="rgb(212,27,27)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (11 samples, 0.01%)</title><rect x="99.7480%" y="725" width="0.0105%" height="15" fill="rgb(241,50,6)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (11 samples, 0.01%)</title><rect x="99.7480%" y="709" width="0.0105%" height="15" fill="rgb(225,28,51)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="719.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (11 samples, 0.01%)</title><rect x="99.7480%" y="693" width="0.0105%" height="15" fill="rgb(215,33,16)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (11 samples, 0.01%)</title><rect x="99.7480%" y="677" width="0.0105%" height="15" fill="rgb(243,40,39)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (11 samples, 0.01%)</title><rect x="99.7480%" y="661" width="0.0105%" height="15" fill="rgb(225,11,42)" fg:x="104882" fg:w="11"/><text x="99.9980%" y="671.50"></text></g><g><title>std::panic::catch_unwind (76 samples, 0.07%)</title><rect x="99.6947%" y="1061" width="0.0723%" height="15" fill="rgb(241,220,38)" fg:x="104826" fg:w="76"/><text x="99.9447%" y="1071.50"></text></g><g><title>std::panicking::try (76 samples, 0.07%)</title><rect x="99.6947%" y="1045" width="0.0723%" height="15" fill="rgb(244,52,35)" fg:x="104826" fg:w="76"/><text x="99.9447%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (76 samples, 0.07%)</title><rect x="99.6947%" y="1029" width="0.0723%" height="15" fill="rgb(246,42,46)" fg:x="104826" fg:w="76"/><text x="99.9447%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (76 samples, 0.07%)</title><rect x="99.6947%" y="1013" width="0.0723%" height="15" fill="rgb(205,184,13)" fg:x="104826" fg:w="76"/><text x="99.9447%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (76 samples, 0.07%)</title><rect x="99.6947%" y="997" width="0.0723%" height="15" fill="rgb(209,48,36)" fg:x="104826" fg:w="76"/><text x="99.9447%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (76 samples, 0.07%)</title><rect x="99.6947%" y="981" width="0.0723%" height="15" fill="rgb(244,34,51)" fg:x="104826" fg:w="76"/><text x="99.9447%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (76 samples, 0.07%)</title><rect x="99.6947%" y="965" width="0.0723%" height="15" fill="rgb(221,107,33)" fg:x="104826" fg:w="76"/><text x="99.9447%" y="975.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (76 samples, 0.07%)</title><rect x="99.6947%" y="949" width="0.0723%" height="15" fill="rgb(224,203,12)" fg:x="104826" fg:w="76"/><text x="99.9447%" y="959.50"></text></g><g><title>__GI___clone (85 samples, 0.08%)</title><rect x="99.6947%" y="1173" width="0.0808%" height="15" fill="rgb(230,215,18)" fg:x="104826" fg:w="85"/><text x="99.9447%" y="1183.50"></text></g><g><title>start_thread (85 samples, 0.08%)</title><rect x="99.6947%" y="1157" width="0.0808%" height="15" fill="rgb(206,185,35)" fg:x="104826" fg:w="85"/><text x="99.9447%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (85 samples, 0.08%)</title><rect x="99.6947%" y="1141" width="0.0808%" height="15" fill="rgb(228,140,34)" fg:x="104826" fg:w="85"/><text x="99.9447%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85 samples, 0.08%)</title><rect x="99.6947%" y="1125" width="0.0808%" height="15" fill="rgb(208,93,13)" fg:x="104826" fg:w="85"/><text x="99.9447%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85 samples, 0.08%)</title><rect x="99.6947%" y="1109" width="0.0808%" height="15" fill="rgb(221,193,39)" fg:x="104826" fg:w="85"/><text x="99.9447%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (85 samples, 0.08%)</title><rect x="99.6947%" y="1093" width="0.0808%" height="15" fill="rgb(241,132,34)" fg:x="104826" fg:w="85"/><text x="99.9447%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (85 samples, 0.08%)</title><rect x="99.6947%" y="1077" width="0.0808%" height="15" fill="rgb(221,141,10)" fg:x="104826" fg:w="85"/><text x="99.9447%" y="1087.50"></text></g><g><title>tokio-runtime-w (88 samples, 0.08%)</title><rect x="99.6947%" y="1189" width="0.0837%" height="15" fill="rgb(226,90,31)" fg:x="104826" fg:w="88"/><text x="99.9447%" y="1199.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (176 samples, 0.17%)</title><rect x="99.7984%" y="1093" width="0.1674%" height="15" fill="rgb(243,75,5)" fg:x="104935" fg:w="176"/><text x="100.0484%" y="1103.50"></text></g><g><title>native_write_msr (175 samples, 0.17%)</title><rect x="99.7993%" y="1077" width="0.1664%" height="15" fill="rgb(227,156,21)" fg:x="104936" fg:w="175"/><text x="100.0493%" y="1087.50"></text></g><g><title>__perf_event_task_sched_in (180 samples, 0.17%)</title><rect x="99.7955%" y="1109" width="0.1712%" height="15" fill="rgb(250,195,8)" fg:x="104932" fg:w="180"/><text x="100.0455%" y="1119.50"></text></g><g><title>schedule_tail (196 samples, 0.19%)</title><rect x="99.7860%" y="1141" width="0.1864%" height="15" fill="rgb(220,134,5)" fg:x="104922" fg:w="196"/><text x="100.0360%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (191 samples, 0.18%)</title><rect x="99.7908%" y="1125" width="0.1817%" height="15" fill="rgb(246,106,34)" fg:x="104927" fg:w="191"/><text x="100.0408%" y="1135.50"></text></g><g><title>ret_from_fork (201 samples, 0.19%)</title><rect x="99.7851%" y="1157" width="0.1912%" height="15" fill="rgb(205,1,4)" fg:x="104921" fg:w="201"/><text x="100.0351%" y="1167.50"></text></g><g><title>down_write_killable (11 samples, 0.01%)</title><rect x="99.9810%" y="997" width="0.0105%" height="15" fill="rgb(224,151,29)" fg:x="105127" fg:w="11"/><text x="100.2310%" y="1007.50"></text></g><g><title>rwsem_down_write_slowpath (11 samples, 0.01%)</title><rect x="99.9810%" y="981" width="0.0105%" height="15" fill="rgb(251,196,0)" fg:x="105127" fg:w="11"/><text x="100.2310%" y="991.50"></text></g><g><title>__GI___mmap64 (14 samples, 0.01%)</title><rect x="99.9791%" y="1061" width="0.0133%" height="15" fill="rgb(212,127,0)" fg:x="105125" fg:w="14"/><text x="100.2291%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.01%)</title><rect x="99.9791%" y="1045" width="0.0133%" height="15" fill="rgb(236,71,53)" fg:x="105125" fg:w="14"/><text x="100.2291%" y="1055.50"></text></g><g><title>do_syscall_64 (14 samples, 0.01%)</title><rect x="99.9791%" y="1029" width="0.0133%" height="15" fill="rgb(227,99,0)" fg:x="105125" fg:w="14"/><text x="100.2291%" y="1039.50"></text></g><g><title>vm_mmap_pgoff (13 samples, 0.01%)</title><rect x="99.9800%" y="1013" width="0.0124%" height="15" fill="rgb(239,89,21)" fg:x="105126" fg:w="13"/><text x="100.2300%" y="1023.50"></text></g><g><title>__GI___clone (222 samples, 0.21%)</title><rect x="99.7851%" y="1173" width="0.2111%" height="15" fill="rgb(243,122,19)" fg:x="104921" fg:w="222"/><text x="100.0351%" y="1183.50"></text></g><g><title>start_thread (21 samples, 0.02%)</title><rect x="99.9762%" y="1157" width="0.0200%" height="15" fill="rgb(229,192,45)" fg:x="105122" fg:w="21"/><text x="100.2262%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (20 samples, 0.02%)</title><rect x="99.9772%" y="1141" width="0.0190%" height="15" fill="rgb(235,165,35)" fg:x="105123" fg:w="20"/><text x="100.2272%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (19 samples, 0.02%)</title><rect x="99.9781%" y="1125" width="0.0181%" height="15" fill="rgb(253,202,0)" fg:x="105124" fg:w="19"/><text x="100.2281%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (19 samples, 0.02%)</title><rect x="99.9781%" y="1109" width="0.0181%" height="15" fill="rgb(235,51,20)" fg:x="105124" fg:w="19"/><text x="100.2281%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (18 samples, 0.02%)</title><rect x="99.9791%" y="1093" width="0.0171%" height="15" fill="rgb(218,95,46)" fg:x="105125" fg:w="18"/><text x="100.2291%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (18 samples, 0.02%)</title><rect x="99.9791%" y="1077" width="0.0171%" height="15" fill="rgb(212,81,10)" fg:x="105125" fg:w="18"/><text x="100.2291%" y="1087.50"></text></g><g><title>all (105,147 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(240,59,0)" fg:x="0" fg:w="105147"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor-connecto (233 samples, 0.22%)</title><rect x="99.7784%" y="1189" width="0.2216%" height="15" fill="rgb(212,191,42)" fg:x="104914" fg:w="233"/><text x="100.0284%" y="1199.50"></text></g></svg></svg>