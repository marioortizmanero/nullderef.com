<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="104729"><g><title>polling::Poller::wait (12 samples, 0.01%)</title><rect x="0.0124%" y="917" width="0.0115%" height="15" fill="rgb(227,0,7)" fg:x="13" fg:w="12"/><text x="0.2624%" y="927.50"></text></g><g><title>polling::epoll::Poller::wait (12 samples, 0.01%)</title><rect x="0.0124%" y="901" width="0.0115%" height="15" fill="rgb(217,0,24)" fg:x="13" fg:w="12"/><text x="0.2624%" y="911.50"></text></g><g><title>epoll_wait (12 samples, 0.01%)</title><rect x="0.0124%" y="885" width="0.0115%" height="15" fill="rgb(221,193,54)" fg:x="13" fg:w="12"/><text x="0.2624%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="0.0124%" y="869" width="0.0115%" height="15" fill="rgb(248,212,6)" fg:x="13" fg:w="12"/><text x="0.2624%" y="879.50"></text></g><g><title>do_syscall_64 (12 samples, 0.01%)</title><rect x="0.0124%" y="853" width="0.0115%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="12"/><text x="0.2624%" y="863.50"></text></g><g><title>__x64_sys_epoll_wait (12 samples, 0.01%)</title><rect x="0.0124%" y="837" width="0.0115%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="12"/><text x="0.2624%" y="847.50"></text></g><g><title>do_epoll_wait (12 samples, 0.01%)</title><rect x="0.0124%" y="821" width="0.0115%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="12"/><text x="0.2624%" y="831.50"></text></g><g><title>async_io::reactor::ReactorLock::react (14 samples, 0.01%)</title><rect x="0.0115%" y="933" width="0.0134%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="14"/><text x="0.2615%" y="943.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (34 samples, 0.03%)</title><rect x="0.0420%" y="661" width="0.0325%" height="15" fill="rgb(218,30,26)" fg:x="44" fg:w="34"/><text x="0.2920%" y="671.50"></text></g><g><title>native_write_msr (34 samples, 0.03%)</title><rect x="0.0420%" y="645" width="0.0325%" height="15" fill="rgb(220,122,19)" fg:x="44" fg:w="34"/><text x="0.2920%" y="655.50"></text></g><g><title>finish_task_switch.isra.0 (37 samples, 0.04%)</title><rect x="0.0411%" y="693" width="0.0353%" height="15" fill="rgb(250,228,42)" fg:x="43" fg:w="37"/><text x="0.2911%" y="703.50"></text></g><g><title>__perf_event_task_sched_in (36 samples, 0.03%)</title><rect x="0.0420%" y="677" width="0.0344%" height="15" fill="rgb(240,193,28)" fg:x="44" fg:w="36"/><text x="0.2920%" y="687.50"></text></g><g><title>futex_wait_queue (46 samples, 0.04%)</title><rect x="0.0344%" y="741" width="0.0439%" height="15" fill="rgb(216,20,37)" fg:x="36" fg:w="46"/><text x="0.2844%" y="751.50"></text></g><g><title>schedule (41 samples, 0.04%)</title><rect x="0.0391%" y="725" width="0.0391%" height="15" fill="rgb(206,188,39)" fg:x="41" fg:w="41"/><text x="0.2891%" y="735.50"></text></g><g><title>__schedule (41 samples, 0.04%)</title><rect x="0.0391%" y="709" width="0.0391%" height="15" fill="rgb(217,207,13)" fg:x="41" fg:w="41"/><text x="0.2891%" y="719.50"></text></g><g><title>do_futex (50 samples, 0.05%)</title><rect x="0.0315%" y="773" width="0.0477%" height="15" fill="rgb(231,73,38)" fg:x="33" fg:w="50"/><text x="0.2815%" y="783.50"></text></g><g><title>futex_wait (50 samples, 0.05%)</title><rect x="0.0315%" y="757" width="0.0477%" height="15" fill="rgb(225,20,46)" fg:x="33" fg:w="50"/><text x="0.2815%" y="767.50"></text></g><g><title>__x64_sys_futex (52 samples, 0.05%)</title><rect x="0.0306%" y="789" width="0.0497%" height="15" fill="rgb(210,31,41)" fg:x="32" fg:w="52"/><text x="0.2806%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (56 samples, 0.05%)</title><rect x="0.0306%" y="821" width="0.0535%" height="15" fill="rgb(221,200,47)" fg:x="32" fg:w="56"/><text x="0.2806%" y="831.50"></text></g><g><title>do_syscall_64 (56 samples, 0.05%)</title><rect x="0.0306%" y="805" width="0.0535%" height="15" fill="rgb(226,26,5)" fg:x="32" fg:w="56"/><text x="0.2806%" y="815.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (60 samples, 0.06%)</title><rect x="0.0277%" y="901" width="0.0573%" height="15" fill="rgb(249,33,26)" fg:x="29" fg:w="60"/><text x="0.2777%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (60 samples, 0.06%)</title><rect x="0.0277%" y="885" width="0.0573%" height="15" fill="rgb(235,183,28)" fg:x="29" fg:w="60"/><text x="0.2777%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (60 samples, 0.06%)</title><rect x="0.0277%" y="869" width="0.0573%" height="15" fill="rgb(221,5,38)" fg:x="29" fg:w="60"/><text x="0.2777%" y="879.50"></text></g><g><title>___pthread_cond_timedwait (59 samples, 0.06%)</title><rect x="0.0286%" y="853" width="0.0563%" height="15" fill="rgb(247,18,42)" fg:x="30" fg:w="59"/><text x="0.2786%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common (58 samples, 0.06%)</title><rect x="0.0296%" y="837" width="0.0554%" height="15" fill="rgb(241,131,45)" fg:x="31" fg:w="58"/><text x="0.2796%" y="847.50"></text></g><g><title>async-io (86 samples, 0.08%)</title><rect x="0.0038%" y="1189" width="0.0821%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="86"/><text x="0.2538%" y="1199.50"></text></g><g><title>__GI___clone (85 samples, 0.08%)</title><rect x="0.0048%" y="1173" width="0.0812%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1183.50"></text></g><g><title>start_thread (85 samples, 0.08%)</title><rect x="0.0048%" y="1157" width="0.0812%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (85 samples, 0.08%)</title><rect x="0.0048%" y="1141" width="0.0812%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85 samples, 0.08%)</title><rect x="0.0048%" y="1125" width="0.0812%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (85 samples, 0.08%)</title><rect x="0.0048%" y="1109" width="0.0812%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (85 samples, 0.08%)</title><rect x="0.0048%" y="1093" width="0.0812%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (85 samples, 0.08%)</title><rect x="0.0048%" y="1077" width="0.0812%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (85 samples, 0.08%)</title><rect x="0.0048%" y="1061" width="0.0812%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1071.50"></text></g><g><title>std::panicking::try (85 samples, 0.08%)</title><rect x="0.0048%" y="1045" width="0.0812%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (85 samples, 0.08%)</title><rect x="0.0048%" y="1029" width="0.0812%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (85 samples, 0.08%)</title><rect x="0.0048%" y="1013" width="0.0812%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (85 samples, 0.08%)</title><rect x="0.0048%" y="997" width="0.0812%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="85"/><text x="0.2548%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (85 samples, 0.08%)</title><rect x="0.0048%" y="981" width="0.0812%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="85"/><text x="0.2548%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (85 samples, 0.08%)</title><rect x="0.0048%" y="965" width="0.0812%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="85"/><text x="0.2548%" y="975.50"></text></g><g><title>async_io::driver::main_loop (85 samples, 0.08%)</title><rect x="0.0048%" y="949" width="0.0812%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="85"/><text x="0.2548%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (63 samples, 0.06%)</title><rect x="0.0258%" y="933" width="0.0602%" height="15" fill="rgb(208,69,12)" fg:x="27" fg:w="63"/><text x="0.2758%" y="943.50"></text></g><g><title>parking::Inner::park (63 samples, 0.06%)</title><rect x="0.0258%" y="917" width="0.0602%" height="15" fill="rgb(235,93,37)" fg:x="27" fg:w="63"/><text x="0.2758%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.04%)</title><rect x="0.6770%" y="1173" width="0.0401%" height="15" fill="rgb(213,116,39)" fg:x="709" fg:w="42"/><text x="0.9270%" y="1183.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="0.7247%" y="1173" width="0.0124%" height="15" fill="rgb(222,207,29)" fg:x="759" fg:w="13"/><text x="0.9747%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (83 samples, 0.08%)</title><rect x="0.7496%" y="1157" width="0.0793%" height="15" fill="rgb(206,96,30)" fg:x="785" fg:w="83"/><text x="0.9996%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (29 samples, 0.03%)</title><rect x="0.8011%" y="1141" width="0.0277%" height="15" fill="rgb(218,138,4)" fg:x="839" fg:w="29"/><text x="1.0511%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="0.8288%" y="1157" width="0.0315%" height="15" fill="rgb(250,191,14)" fg:x="868" fg:w="33"/><text x="1.0788%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (19 samples, 0.02%)</title><rect x="0.9825%" y="1141" width="0.0181%" height="15" fill="rgb(239,60,40)" fg:x="1029" fg:w="19"/><text x="1.2325%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (151 samples, 0.14%)</title><rect x="0.8603%" y="1157" width="0.1442%" height="15" fill="rgb(206,27,48)" fg:x="901" fg:w="151"/><text x="1.1103%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (44 samples, 0.04%)</title><rect x="1.1363%" y="1141" width="0.0420%" height="15" fill="rgb(225,35,8)" fg:x="1190" fg:w="44"/><text x="1.3863%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (12 samples, 0.01%)</title><rect x="1.1783%" y="1141" width="0.0115%" height="15" fill="rgb(250,213,24)" fg:x="1234" fg:w="12"/><text x="1.4283%" y="1151.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="1.1783%" y="1125" width="0.0115%" height="15" fill="rgb(247,123,22)" fg:x="1234" fg:w="12"/><text x="1.4283%" y="1135.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="1.1783%" y="1109" width="0.0115%" height="15" fill="rgb(231,138,38)" fg:x="1234" fg:w="12"/><text x="1.4283%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (196 samples, 0.19%)</title><rect x="1.0131%" y="1157" width="0.1871%" height="15" fill="rgb(231,145,46)" fg:x="1061" fg:w="196"/><text x="1.2631%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (11 samples, 0.01%)</title><rect x="1.1897%" y="1141" width="0.0105%" height="15" fill="rgb(251,118,11)" fg:x="1246" fg:w="11"/><text x="1.4397%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="1.4848%" y="1125" width="0.0162%" height="15" fill="rgb(217,147,25)" fg:x="1555" fg:w="17"/><text x="1.7348%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (112 samples, 0.11%)</title><rect x="1.4065%" y="1141" width="0.1069%" height="15" fill="rgb(247,81,37)" fg:x="1473" fg:w="112"/><text x="1.6565%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (13 samples, 0.01%)</title><rect x="1.5010%" y="1125" width="0.0124%" height="15" fill="rgb(209,12,38)" fg:x="1572" fg:w="13"/><text x="1.7510%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (13 samples, 0.01%)</title><rect x="1.5134%" y="1141" width="0.0124%" height="15" fill="rgb(227,1,9)" fg:x="1585" fg:w="13"/><text x="1.7634%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.5134%" y="1125" width="0.0124%" height="15" fill="rgb(248,47,43)" fg:x="1585" fg:w="13"/><text x="1.7634%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.5134%" y="1109" width="0.0124%" height="15" fill="rgb(221,10,30)" fg:x="1585" fg:w="13"/><text x="1.7634%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="1.5134%" y="1093" width="0.0124%" height="15" fill="rgb(210,229,1)" fg:x="1585" fg:w="13"/><text x="1.7634%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (13 samples, 0.01%)</title><rect x="1.5134%" y="1077" width="0.0124%" height="15" fill="rgb(222,148,37)" fg:x="1585" fg:w="13"/><text x="1.7634%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="1.5698%" y="1125" width="0.0105%" height="15" fill="rgb(234,67,33)" fg:x="1644" fg:w="11"/><text x="1.8198%" y="1135.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="1.5698%" y="1109" width="0.0105%" height="15" fill="rgb(247,98,35)" fg:x="1644" fg:w="11"/><text x="1.8198%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="1.5898%" y="1125" width="0.0229%" height="15" fill="rgb(247,138,52)" fg:x="1665" fg:w="24"/><text x="1.8398%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="1.6003%" y="1109" width="0.0124%" height="15" fill="rgb(213,79,30)" fg:x="1676" fg:w="13"/><text x="1.8503%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="1.6003%" y="1093" width="0.0124%" height="15" fill="rgb(246,177,23)" fg:x="1676" fg:w="13"/><text x="1.8503%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="1.6003%" y="1077" width="0.0124%" height="15" fill="rgb(230,62,27)" fg:x="1676" fg:w="13"/><text x="1.8503%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="1.6003%" y="1061" width="0.0124%" height="15" fill="rgb(216,154,8)" fg:x="1676" fg:w="13"/><text x="1.8503%" y="1071.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="1.6003%" y="1045" width="0.0124%" height="15" fill="rgb(244,35,45)" fg:x="1676" fg:w="13"/><text x="1.8503%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="1.6003%" y="1029" width="0.0124%" height="15" fill="rgb(251,115,12)" fg:x="1676" fg:w="13"/><text x="1.8503%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (99 samples, 0.09%)</title><rect x="1.5325%" y="1141" width="0.0945%" height="15" fill="rgb(240,54,50)" fg:x="1605" fg:w="99"/><text x="1.7825%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (15 samples, 0.01%)</title><rect x="1.6127%" y="1125" width="0.0143%" height="15" fill="rgb(233,84,52)" fg:x="1689" fg:w="15"/><text x="1.8627%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (26 samples, 0.02%)</title><rect x="1.6271%" y="1141" width="0.0248%" height="15" fill="rgb(207,117,47)" fg:x="1704" fg:w="26"/><text x="1.8771%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (42 samples, 0.04%)</title><rect x="1.6519%" y="1141" width="0.0401%" height="15" fill="rgb(249,43,39)" fg:x="1730" fg:w="42"/><text x="1.9019%" y="1151.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (12 samples, 0.01%)</title><rect x="1.7646%" y="1125" width="0.0115%" height="15" fill="rgb(209,38,44)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (12 samples, 0.01%)</title><rect x="1.7646%" y="1109" width="0.0115%" height="15" fill="rgb(236,212,23)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (12 samples, 0.01%)</title><rect x="1.7646%" y="1093" width="0.0115%" height="15" fill="rgb(242,79,21)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (12 samples, 0.01%)</title><rect x="1.7646%" y="1077" width="0.0115%" height="15" fill="rgb(211,96,35)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.7646%" y="1061" width="0.0115%" height="15" fill="rgb(253,215,40)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="1.7646%" y="1045" width="0.0115%" height="15" fill="rgb(211,81,21)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="1.7646%" y="1029" width="0.0115%" height="15" fill="rgb(208,190,38)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.7646%" y="1013" width="0.0115%" height="15" fill="rgb(235,213,38)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="1.7646%" y="997" width="0.0115%" height="15" fill="rgb(237,122,38)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="1.7646%" y="981" width="0.0115%" height="15" fill="rgb(244,218,35)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="1.7646%" y="965" width="0.0115%" height="15" fill="rgb(240,68,47)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="1.7646%" y="949" width="0.0115%" height="15" fill="rgb(210,16,53)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="1.7646%" y="933" width="0.0115%" height="15" fill="rgb(235,124,12)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="943.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="1.7646%" y="917" width="0.0115%" height="15" fill="rgb(224,169,11)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="927.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="1.7646%" y="901" width="0.0115%" height="15" fill="rgb(250,166,2)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="1.7646%" y="885" width="0.0115%" height="15" fill="rgb(242,216,29)" fg:x="1848" fg:w="12"/><text x="2.0146%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 0.59%)</title><rect x="1.2012%" y="1157" width="0.5891%" height="15" fill="rgb(230,116,27)" fg:x="1258" fg:w="617"/><text x="1.4512%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (103 samples, 0.10%)</title><rect x="1.6920%" y="1141" width="0.0983%" height="15" fill="rgb(228,99,48)" fg:x="1772" fg:w="103"/><text x="1.9420%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (15 samples, 0.01%)</title><rect x="1.7760%" y="1125" width="0.0143%" height="15" fill="rgb(253,11,6)" fg:x="1860" fg:w="15"/><text x="2.0260%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="1.7760%" y="1109" width="0.0143%" height="15" fill="rgb(247,143,39)" fg:x="1860" fg:w="15"/><text x="2.0260%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (25 samples, 0.02%)</title><rect x="1.8935%" y="1141" width="0.0239%" height="15" fill="rgb(236,97,10)" fg:x="1983" fg:w="25"/><text x="2.1435%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="1.8935%" y="1125" width="0.0239%" height="15" fill="rgb(233,208,19)" fg:x="1983" fg:w="25"/><text x="2.1435%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="1.8935%" y="1109" width="0.0239%" height="15" fill="rgb(216,164,2)" fg:x="1983" fg:w="25"/><text x="2.1435%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="1.8935%" y="1093" width="0.0239%" height="15" fill="rgb(220,129,5)" fg:x="1983" fg:w="25"/><text x="2.1435%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (25 samples, 0.02%)</title><rect x="1.8935%" y="1077" width="0.0239%" height="15" fill="rgb(242,17,10)" fg:x="1983" fg:w="25"/><text x="2.1435%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (152 samples, 0.15%)</title><rect x="1.7903%" y="1157" width="0.1451%" height="15" fill="rgb(242,107,0)" fg:x="1875" fg:w="152"/><text x="2.0403%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (19 samples, 0.02%)</title><rect x="1.9173%" y="1141" width="0.0181%" height="15" fill="rgb(251,28,31)" fg:x="2008" fg:w="19"/><text x="2.1673%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.02%)</title><rect x="1.9173%" y="1125" width="0.0181%" height="15" fill="rgb(233,223,10)" fg:x="2008" fg:w="19"/><text x="2.1673%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="1.9173%" y="1109" width="0.0181%" height="15" fill="rgb(215,21,27)" fg:x="2008" fg:w="19"/><text x="2.1673%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="1.9173%" y="1093" width="0.0181%" height="15" fill="rgb(232,23,21)" fg:x="2008" fg:w="19"/><text x="2.1673%" y="1103.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (23 samples, 0.02%)</title><rect x="1.9469%" y="1125" width="0.0220%" height="15" fill="rgb(244,5,23)" fg:x="2039" fg:w="23"/><text x="2.1969%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="1.9565%" y="1109" width="0.0124%" height="15" fill="rgb(226,81,46)" fg:x="2049" fg:w="13"/><text x="2.2065%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="1.9374%" y="1157" width="0.0334%" height="15" fill="rgb(247,70,30)" fg:x="2029" fg:w="35"/><text x="2.1874%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (28 samples, 0.03%)</title><rect x="1.9441%" y="1141" width="0.0267%" height="15" fill="rgb(212,68,19)" fg:x="2036" fg:w="28"/><text x="2.1941%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (41 samples, 0.04%)</title><rect x="1.9708%" y="1157" width="0.0391%" height="15" fill="rgb(240,187,13)" fg:x="2064" fg:w="41"/><text x="2.2208%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (184 samples, 0.18%)</title><rect x="2.0099%" y="1157" width="0.1757%" height="15" fill="rgb(223,113,26)" fg:x="2105" fg:w="184"/><text x="2.2599%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (108 samples, 0.10%)</title><rect x="2.0825%" y="1141" width="0.1031%" height="15" fill="rgb(206,192,2)" fg:x="2181" fg:w="108"/><text x="2.3325%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (77 samples, 0.07%)</title><rect x="2.1121%" y="1125" width="0.0735%" height="15" fill="rgb(241,108,4)" fg:x="2212" fg:w="77"/><text x="2.3621%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.02%)</title><rect x="2.1637%" y="1109" width="0.0220%" height="15" fill="rgb(247,173,49)" fg:x="2266" fg:w="23"/><text x="2.4137%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.01%)</title><rect x="2.1751%" y="1093" width="0.0105%" height="15" fill="rgb(224,114,35)" fg:x="2278" fg:w="11"/><text x="2.4251%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="2.1751%" y="1077" width="0.0105%" height="15" fill="rgb(245,159,27)" fg:x="2278" fg:w="11"/><text x="2.4251%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="2.1751%" y="1061" width="0.0105%" height="15" fill="rgb(245,172,44)" fg:x="2278" fg:w="11"/><text x="2.4251%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="2.1751%" y="1045" width="0.0105%" height="15" fill="rgb(236,23,11)" fg:x="2278" fg:w="11"/><text x="2.4251%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="2.1751%" y="1029" width="0.0105%" height="15" fill="rgb(205,117,38)" fg:x="2278" fg:w="11"/><text x="2.4251%" y="1039.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="2.1751%" y="1013" width="0.0105%" height="15" fill="rgb(237,72,25)" fg:x="2278" fg:w="11"/><text x="2.4251%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="2.1751%" y="997" width="0.0105%" height="15" fill="rgb(244,70,9)" fg:x="2278" fg:w="11"/><text x="2.4251%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="2.1856%" y="1157" width="0.0239%" height="15" fill="rgb(217,125,39)" fg:x="2289" fg:w="25"/><text x="2.4356%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="2.1933%" y="1141" width="0.0162%" height="15" fill="rgb(235,36,10)" fg:x="2297" fg:w="17"/><text x="2.4433%" y="1151.50"></text></g><g><title>__GI___lll_lock_wake (11 samples, 0.01%)</title><rect x="2.2133%" y="1157" width="0.0105%" height="15" fill="rgb(251,123,47)" fg:x="2318" fg:w="11"/><text x="2.4633%" y="1167.50"></text></g><g><title>___pthread_mutex_lock (28 samples, 0.03%)</title><rect x="2.2429%" y="1157" width="0.0267%" height="15" fill="rgb(221,13,13)" fg:x="2349" fg:w="28"/><text x="2.4929%" y="1167.50"></text></g><g><title>__clock_gettime_2 (29 samples, 0.03%)</title><rect x="2.2744%" y="1157" width="0.0277%" height="15" fill="rgb(238,131,9)" fg:x="2382" fg:w="29"/><text x="2.5244%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="2.3050%" y="1157" width="0.0162%" height="15" fill="rgb(211,50,8)" fg:x="2414" fg:w="17"/><text x="2.5550%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (18 samples, 0.02%)</title><rect x="2.3250%" y="1157" width="0.0172%" height="15" fill="rgb(245,182,24)" fg:x="2435" fg:w="18"/><text x="2.5750%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (17 samples, 0.02%)</title><rect x="2.3422%" y="1157" width="0.0162%" height="15" fill="rgb(242,14,37)" fg:x="2453" fg:w="17"/><text x="2.5922%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.02%)</title><rect x="2.3594%" y="1157" width="0.0153%" height="15" fill="rgb(246,228,12)" fg:x="2471" fg:w="16"/><text x="2.6094%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="2.3604%" y="1141" width="0.0143%" height="15" fill="rgb(213,55,15)" fg:x="2472" fg:w="15"/><text x="2.6104%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="2.3604%" y="1125" width="0.0143%" height="15" fill="rgb(209,9,3)" fg:x="2472" fg:w="15"/><text x="2.6104%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="2.3604%" y="1109" width="0.0143%" height="15" fill="rgb(230,59,30)" fg:x="2472" fg:w="15"/><text x="2.6104%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="2.3604%" y="1093" width="0.0143%" height="15" fill="rgb(209,121,21)" fg:x="2472" fg:w="15"/><text x="2.6104%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="2.3604%" y="1077" width="0.0143%" height="15" fill="rgb(220,109,13)" fg:x="2472" fg:w="15"/><text x="2.6104%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="2.3604%" y="1061" width="0.0143%" height="15" fill="rgb(232,18,1)" fg:x="2472" fg:w="15"/><text x="2.6104%" y="1071.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="2.3604%" y="1045" width="0.0143%" height="15" fill="rgb(215,41,42)" fg:x="2472" fg:w="15"/><text x="2.6104%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="2.3604%" y="1029" width="0.0143%" height="15" fill="rgb(224,123,36)" fg:x="2472" fg:w="15"/><text x="2.6104%" y="1039.50"></text></g><g><title>async_executor::Ticker::sleep (22 samples, 0.02%)</title><rect x="2.3814%" y="1157" width="0.0210%" height="15" fill="rgb(240,125,3)" fg:x="2494" fg:w="22"/><text x="2.6314%" y="1167.50"></text></g><g><title>async_executor::steal (29 samples, 0.03%)</title><rect x="2.4072%" y="1157" width="0.0277%" height="15" fill="rgb(205,98,50)" fg:x="2521" fg:w="29"/><text x="2.6572%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14 samples, 0.01%)</title><rect x="2.4368%" y="1157" width="0.0134%" height="15" fill="rgb(205,185,37)" fg:x="2552" fg:w="14"/><text x="2.6868%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (123 samples, 0.12%)</title><rect x="2.4511%" y="1157" width="0.1174%" height="15" fill="rgb(238,207,15)" fg:x="2567" fg:w="123"/><text x="2.7011%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (64 samples, 0.06%)</title><rect x="2.5685%" y="1157" width="0.0611%" height="15" fill="rgb(213,199,42)" fg:x="2690" fg:w="64"/><text x="2.8185%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (150 samples, 0.14%)</title><rect x="2.6296%" y="1157" width="0.1432%" height="15" fill="rgb(235,201,11)" fg:x="2754" fg:w="150"/><text x="2.8796%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (11 samples, 0.01%)</title><rect x="2.7624%" y="1141" width="0.0105%" height="15" fill="rgb(207,46,11)" fg:x="2893" fg:w="11"/><text x="3.0124%" y="1151.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="2.7624%" y="1125" width="0.0105%" height="15" fill="rgb(241,35,35)" fg:x="2893" fg:w="11"/><text x="3.0124%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (74 samples, 0.07%)</title><rect x="2.7729%" y="1157" width="0.0707%" height="15" fill="rgb(243,32,47)" fg:x="2904" fg:w="74"/><text x="3.0229%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (53 samples, 0.05%)</title><rect x="2.8473%" y="1157" width="0.0506%" height="15" fill="rgb(247,202,23)" fg:x="2982" fg:w="53"/><text x="3.0973%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="2.8722%" y="1141" width="0.0258%" height="15" fill="rgb(219,102,11)" fg:x="3008" fg:w="27"/><text x="3.1222%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="2.9065%" y="1157" width="0.0153%" height="15" fill="rgb(243,110,44)" fg:x="3044" fg:w="16"/><text x="3.1565%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="2.9218%" y="1157" width="0.0210%" height="15" fill="rgb(222,74,54)" fg:x="3060" fg:w="22"/><text x="3.1718%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (22 samples, 0.02%)</title><rect x="2.9218%" y="1141" width="0.0210%" height="15" fill="rgb(216,99,12)" fg:x="3060" fg:w="22"/><text x="3.1718%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="2.9428%" y="1157" width="0.0220%" height="15" fill="rgb(226,22,26)" fg:x="3082" fg:w="23"/><text x="3.1928%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="2.9648%" y="1157" width="0.0134%" height="15" fill="rgb(217,163,10)" fg:x="3105" fg:w="14"/><text x="3.2148%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (36 samples, 0.03%)</title><rect x="2.9868%" y="1157" width="0.0344%" height="15" fill="rgb(213,25,53)" fg:x="3128" fg:w="36"/><text x="3.2368%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="3.0211%" y="1157" width="0.0105%" height="15" fill="rgb(252,105,26)" fg:x="3164" fg:w="11"/><text x="3.2711%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="3.0211%" y="1141" width="0.0105%" height="15" fill="rgb(220,39,43)" fg:x="3164" fg:w="11"/><text x="3.2711%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="3.0316%" y="1157" width="0.0143%" height="15" fill="rgb(229,68,48)" fg:x="3175" fg:w="15"/><text x="3.2816%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (124 samples, 0.12%)</title><rect x="3.0460%" y="1157" width="0.1184%" height="15" fill="rgb(252,8,32)" fg:x="3190" fg:w="124"/><text x="3.2960%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.2121%" y="1109" width="0.0134%" height="15" fill="rgb(223,20,43)" fg:x="3364" fg:w="14"/><text x="3.4621%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (14 samples, 0.01%)</title><rect x="3.2121%" y="1093" width="0.0134%" height="15" fill="rgb(229,81,49)" fg:x="3364" fg:w="14"/><text x="3.4621%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="3.2121%" y="1077" width="0.0134%" height="15" fill="rgb(236,28,36)" fg:x="3364" fg:w="14"/><text x="3.4621%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.2121%" y="1061" width="0.0134%" height="15" fill="rgb(249,185,26)" fg:x="3364" fg:w="14"/><text x="3.4621%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="3.2121%" y="1125" width="0.0201%" height="15" fill="rgb(249,174,33)" fg:x="3364" fg:w="21"/><text x="3.4621%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (101 samples, 0.10%)</title><rect x="3.1644%" y="1157" width="0.0964%" height="15" fill="rgb(233,201,37)" fg:x="3314" fg:w="101"/><text x="3.4144%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (51 samples, 0.05%)</title><rect x="3.2121%" y="1141" width="0.0487%" height="15" fill="rgb(221,78,26)" fg:x="3364" fg:w="51"/><text x="3.4621%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (30 samples, 0.03%)</title><rect x="3.2322%" y="1125" width="0.0286%" height="15" fill="rgb(250,127,30)" fg:x="3385" fg:w="30"/><text x="3.4822%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (34 samples, 0.03%)</title><rect x="3.2885%" y="1141" width="0.0325%" height="15" fill="rgb(230,49,44)" fg:x="3444" fg:w="34"/><text x="3.5385%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (34 samples, 0.03%)</title><rect x="3.2885%" y="1125" width="0.0325%" height="15" fill="rgb(229,67,23)" fg:x="3444" fg:w="34"/><text x="3.5385%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (34 samples, 0.03%)</title><rect x="3.2885%" y="1109" width="0.0325%" height="15" fill="rgb(249,83,47)" fg:x="3444" fg:w="34"/><text x="3.5385%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="3.2885%" y="1093" width="0.0325%" height="15" fill="rgb(215,43,3)" fg:x="3444" fg:w="34"/><text x="3.5385%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.03%)</title><rect x="3.2885%" y="1077" width="0.0325%" height="15" fill="rgb(238,154,13)" fg:x="3444" fg:w="34"/><text x="3.5385%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.03%)</title><rect x="3.2885%" y="1061" width="0.0325%" height="15" fill="rgb(219,56,2)" fg:x="3444" fg:w="34"/><text x="3.5385%" y="1071.50"></text></g><g><title>__rg_dealloc (34 samples, 0.03%)</title><rect x="3.2885%" y="1045" width="0.0325%" height="15" fill="rgb(233,0,4)" fg:x="3444" fg:w="34"/><text x="3.5385%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (34 samples, 0.03%)</title><rect x="3.2885%" y="1029" width="0.0325%" height="15" fill="rgb(235,30,7)" fg:x="3444" fg:w="34"/><text x="3.5385%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (70 samples, 0.07%)</title><rect x="3.2608%" y="1157" width="0.0668%" height="15" fill="rgb(250,79,13)" fg:x="3415" fg:w="70"/><text x="3.5108%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (83 samples, 0.08%)</title><rect x="3.3276%" y="1157" width="0.0793%" height="15" fill="rgb(211,146,34)" fg:x="3485" fg:w="83"/><text x="3.5776%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="3.3868%" y="1141" width="0.0201%" height="15" fill="rgb(228,22,38)" fg:x="3547" fg:w="21"/><text x="3.6368%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (21 samples, 0.02%)</title><rect x="3.3868%" y="1125" width="0.0201%" height="15" fill="rgb(235,168,5)" fg:x="3547" fg:w="21"/><text x="3.6368%" y="1135.50"></text></g><g><title>event_listener::Event::notify (247 samples, 0.24%)</title><rect x="3.4117%" y="1157" width="0.2358%" height="15" fill="rgb(221,155,16)" fg:x="3573" fg:w="247"/><text x="3.6617%" y="1167.50"></text></g><g><title>event_listener::full_fence (94 samples, 0.09%)</title><rect x="3.5578%" y="1141" width="0.0898%" height="15" fill="rgb(215,215,53)" fg:x="3726" fg:w="94"/><text x="3.8078%" y="1151.50"></text></g><g><title>event_listener::List::notify (12 samples, 0.01%)</title><rect x="3.6475%" y="1157" width="0.0115%" height="15" fill="rgb(223,4,10)" fg:x="3820" fg:w="12"/><text x="3.8975%" y="1167.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (64 samples, 0.06%)</title><rect x="3.6590%" y="1157" width="0.0611%" height="15" fill="rgb(234,103,6)" fg:x="3832" fg:w="64"/><text x="3.9090%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (30 samples, 0.03%)</title><rect x="3.7201%" y="1157" width="0.0286%" height="15" fill="rgb(227,97,0)" fg:x="3896" fg:w="30"/><text x="3.9701%" y="1167.50"></text></g><g><title>parking::Inner::park (17 samples, 0.02%)</title><rect x="3.7487%" y="1157" width="0.0162%" height="15" fill="rgb(234,150,53)" fg:x="3926" fg:w="17"/><text x="3.9987%" y="1167.50"></text></g><g><title>rust_alloc (52 samples, 0.05%)</title><rect x="3.7716%" y="1157" width="0.0497%" height="15" fill="rgb(228,201,54)" fg:x="3950" fg:w="52"/><text x="4.0216%" y="1167.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="3.8213%" y="1157" width="0.0124%" height="15" fill="rgb(222,22,37)" fg:x="4002" fg:w="13"/><text x="4.0713%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (11 samples, 0.01%)</title><rect x="3.8232%" y="1141" width="0.0105%" height="15" fill="rgb(237,53,32)" fg:x="4004" fg:w="11"/><text x="4.0732%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (11 samples, 0.01%)</title><rect x="3.8232%" y="1125" width="0.0105%" height="15" fill="rgb(233,25,53)" fg:x="4004" fg:w="11"/><text x="4.0732%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (11 samples, 0.01%)</title><rect x="3.8232%" y="1109" width="0.0105%" height="15" fill="rgb(210,40,34)" fg:x="4004" fg:w="11"/><text x="4.0732%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (11 samples, 0.01%)</title><rect x="3.8232%" y="1093" width="0.0105%" height="15" fill="rgb(241,220,44)" fg:x="4004" fg:w="11"/><text x="4.0732%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (11 samples, 0.01%)</title><rect x="3.8232%" y="1077" width="0.0105%" height="15" fill="rgb(235,28,35)" fg:x="4004" fg:w="11"/><text x="4.0732%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="3.8232%" y="1061" width="0.0105%" height="15" fill="rgb(210,56,17)" fg:x="4004" fg:w="11"/><text x="4.0732%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="3.8232%" y="1045" width="0.0105%" height="15" fill="rgb(224,130,29)" fg:x="4004" fg:w="11"/><text x="4.0732%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="3.8232%" y="1029" width="0.0105%" height="15" fill="rgb(235,212,8)" fg:x="4004" fg:w="11"/><text x="4.0732%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (26 samples, 0.02%)</title><rect x="3.8490%" y="1157" width="0.0248%" height="15" fill="rgb(223,33,50)" fg:x="4031" fg:w="26"/><text x="4.0990%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (51 samples, 0.05%)</title><rect x="3.8738%" y="1157" width="0.0487%" height="15" fill="rgb(219,149,13)" fg:x="4057" fg:w="51"/><text x="4.1238%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.01%)</title><rect x="3.9225%" y="1157" width="0.0143%" height="15" fill="rgb(250,156,29)" fg:x="4108" fg:w="15"/><text x="4.1725%" y="1167.50"></text></g><g><title>tremor_common::time::nanotime (74 samples, 0.07%)</title><rect x="3.9368%" y="1157" width="0.0707%" height="15" fill="rgb(216,193,19)" fg:x="4123" fg:w="74"/><text x="4.1868%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (74 samples, 0.07%)</title><rect x="3.9368%" y="1141" width="0.0707%" height="15" fill="rgb(216,135,14)" fg:x="4123" fg:w="74"/><text x="4.1868%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (74 samples, 0.07%)</title><rect x="3.9368%" y="1125" width="0.0707%" height="15" fill="rgb(241,47,5)" fg:x="4123" fg:w="74"/><text x="4.1868%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (74 samples, 0.07%)</title><rect x="3.9368%" y="1109" width="0.0707%" height="15" fill="rgb(233,42,35)" fg:x="4123" fg:w="74"/><text x="4.1868%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (23 samples, 0.02%)</title><rect x="4.0075%" y="1157" width="0.0220%" height="15" fill="rgb(231,13,6)" fg:x="4197" fg:w="23"/><text x="4.2575%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (22 samples, 0.02%)</title><rect x="4.1154%" y="1141" width="0.0210%" height="15" fill="rgb(207,181,40)" fg:x="4310" fg:w="22"/><text x="4.3654%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (22 samples, 0.02%)</title><rect x="4.1154%" y="1125" width="0.0210%" height="15" fill="rgb(254,173,49)" fg:x="4310" fg:w="22"/><text x="4.3654%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="4.1211%" y="1109" width="0.0153%" height="15" fill="rgb(221,1,38)" fg:x="4316" fg:w="16"/><text x="4.3711%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="4.1211%" y="1093" width="0.0153%" height="15" fill="rgb(206,124,46)" fg:x="4316" fg:w="16"/><text x="4.3711%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="4.1211%" y="1077" width="0.0153%" height="15" fill="rgb(249,21,11)" fg:x="4316" fg:w="16"/><text x="4.3711%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="4.1211%" y="1061" width="0.0153%" height="15" fill="rgb(222,201,40)" fg:x="4316" fg:w="16"/><text x="4.3711%" y="1071.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="4.1211%" y="1045" width="0.0153%" height="15" fill="rgb(235,61,29)" fg:x="4316" fg:w="16"/><text x="4.3711%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="4.1211%" y="1029" width="0.0153%" height="15" fill="rgb(219,207,3)" fg:x="4316" fg:w="16"/><text x="4.3711%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (158 samples, 0.15%)</title><rect x="4.0294%" y="1157" width="0.1509%" height="15" fill="rgb(222,56,46)" fg:x="4220" fg:w="158"/><text x="4.2794%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (28 samples, 0.03%)</title><rect x="4.1536%" y="1141" width="0.0267%" height="15" fill="rgb(239,76,54)" fg:x="4350" fg:w="28"/><text x="4.4036%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (13 samples, 0.01%)</title><rect x="4.1679%" y="1125" width="0.0124%" height="15" fill="rgb(231,124,27)" fg:x="4365" fg:w="13"/><text x="4.4179%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="4.1679%" y="1109" width="0.0124%" height="15" fill="rgb(249,195,6)" fg:x="4365" fg:w="13"/><text x="4.4179%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="4.1679%" y="1093" width="0.0124%" height="15" fill="rgb(237,174,47)" fg:x="4365" fg:w="13"/><text x="4.4179%" y="1103.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="4.1679%" y="1077" width="0.0124%" height="15" fill="rgb(206,201,31)" fg:x="4365" fg:w="13"/><text x="4.4179%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="4.1679%" y="1061" width="0.0124%" height="15" fill="rgb(231,57,52)" fg:x="4365" fg:w="13"/><text x="4.4179%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (82 samples, 0.08%)</title><rect x="4.2090%" y="1141" width="0.0783%" height="15" fill="rgb(248,177,22)" fg:x="4408" fg:w="82"/><text x="4.4590%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (64 samples, 0.06%)</title><rect x="4.2261%" y="1125" width="0.0611%" height="15" fill="rgb(215,211,37)" fg:x="4426" fg:w="64"/><text x="4.4761%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (13 samples, 0.01%)</title><rect x="4.2748%" y="1109" width="0.0124%" height="15" fill="rgb(241,128,51)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="4.2748%" y="1093" width="0.0124%" height="15" fill="rgb(227,165,31)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="1103.50"></text></g><g><title>value_trait::Builder::object (13 samples, 0.01%)</title><rect x="4.2748%" y="1077" width="0.0124%" height="15" fill="rgb(228,167,24)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="1087.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (13 samples, 0.01%)</title><rect x="4.2748%" y="1061" width="0.0124%" height="15" fill="rgb(228,143,12)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="4.2748%" y="1045" width="0.0124%" height="15" fill="rgb(249,149,8)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="4.2748%" y="1029" width="0.0124%" height="15" fill="rgb(243,35,44)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="4.2748%" y="1013" width="0.0124%" height="15" fill="rgb(246,89,9)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="4.2748%" y="997" width="0.0124%" height="15" fill="rgb(233,213,13)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="4.2748%" y="981" width="0.0124%" height="15" fill="rgb(233,141,41)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="991.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="4.2748%" y="965" width="0.0124%" height="15" fill="rgb(239,167,4)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="4.2748%" y="949" width="0.0124%" height="15" fill="rgb(209,217,16)" fg:x="4477" fg:w="13"/><text x="4.5248%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="4.2873%" y="1141" width="0.0115%" height="15" fill="rgb(219,88,35)" fg:x="4490" fg:w="12"/><text x="4.5373%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (154 samples, 0.15%)</title><rect x="4.1803%" y="1157" width="0.1470%" height="15" fill="rgb(220,193,23)" fg:x="4378" fg:w="154"/><text x="4.4303%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="4.3073%" y="1141" width="0.0201%" height="15" fill="rgb(230,90,52)" fg:x="4511" fg:w="21"/><text x="4.5573%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (21 samples, 0.02%)</title><rect x="4.3073%" y="1125" width="0.0201%" height="15" fill="rgb(252,106,19)" fg:x="4511" fg:w="21"/><text x="4.5573%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (40 samples, 0.04%)</title><rect x="4.3274%" y="1157" width="0.0382%" height="15" fill="rgb(206,74,20)" fg:x="4532" fg:w="40"/><text x="4.5774%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (11 samples, 0.01%)</title><rect x="4.3732%" y="1157" width="0.0105%" height="15" fill="rgb(230,138,44)" fg:x="4580" fg:w="11"/><text x="4.6232%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (20 samples, 0.02%)</title><rect x="4.3837%" y="1157" width="0.0191%" height="15" fill="rgb(235,182,43)" fg:x="4591" fg:w="20"/><text x="4.6337%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (17 samples, 0.02%)</title><rect x="4.4028%" y="1157" width="0.0162%" height="15" fill="rgb(242,16,51)" fg:x="4611" fg:w="17"/><text x="4.6528%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="4.4973%" y="1141" width="0.0162%" height="15" fill="rgb(248,9,4)" fg:x="4710" fg:w="17"/><text x="4.7473%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="4.5231%" y="1109" width="0.0124%" height="15" fill="rgb(210,31,22)" fg:x="4737" fg:w="13"/><text x="4.7731%" y="1119.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="4.5231%" y="1093" width="0.0124%" height="15" fill="rgb(239,54,39)" fg:x="4737" fg:w="13"/><text x="4.7731%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (126 samples, 0.12%)</title><rect x="4.4190%" y="1157" width="0.1203%" height="15" fill="rgb(230,99,41)" fg:x="4628" fg:w="126"/><text x="4.6690%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="4.5136%" y="1141" width="0.0258%" height="15" fill="rgb(253,106,12)" fg:x="4727" fg:w="27"/><text x="4.7636%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (27 samples, 0.03%)</title><rect x="4.5136%" y="1125" width="0.0258%" height="15" fill="rgb(213,46,41)" fg:x="4727" fg:w="27"/><text x="4.7636%" y="1135.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (50 samples, 0.05%)</title><rect x="4.5393%" y="1157" width="0.0477%" height="15" fill="rgb(215,133,35)" fg:x="4754" fg:w="50"/><text x="4.7893%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="4.5728%" y="1141" width="0.0143%" height="15" fill="rgb(213,28,5)" fg:x="4789" fg:w="15"/><text x="4.8228%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="4.5728%" y="1125" width="0.0143%" height="15" fill="rgb(215,77,49)" fg:x="4789" fg:w="15"/><text x="4.8228%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="4.5728%" y="1109" width="0.0143%" height="15" fill="rgb(248,100,22)" fg:x="4789" fg:w="15"/><text x="4.8228%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="4.5728%" y="1093" width="0.0143%" height="15" fill="rgb(208,67,9)" fg:x="4789" fg:w="15"/><text x="4.8228%" y="1103.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="4.5728%" y="1077" width="0.0143%" height="15" fill="rgb(219,133,21)" fg:x="4789" fg:w="15"/><text x="4.8228%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="4.5728%" y="1061" width="0.0143%" height="15" fill="rgb(246,46,29)" fg:x="4789" fg:w="15"/><text x="4.8228%" y="1071.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (41 samples, 0.04%)</title><rect x="4.5871%" y="1157" width="0.0391%" height="15" fill="rgb(246,185,52)" fg:x="4804" fg:w="41"/><text x="4.8371%" y="1167.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (57 samples, 0.05%)</title><rect x="4.6262%" y="1157" width="0.0544%" height="15" fill="rgb(252,136,11)" fg:x="4845" fg:w="57"/><text x="4.8762%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (19 samples, 0.02%)</title><rect x="4.6625%" y="1141" width="0.0181%" height="15" fill="rgb(219,138,53)" fg:x="4883" fg:w="19"/><text x="4.9125%" y="1151.50"></text></g><g><title>[anon] (4,142 samples, 3.95%)</title><rect x="0.7371%" y="1173" width="3.9550%" height="15" fill="rgb(211,51,23)" fg:x="772" fg:w="4142"/><text x="0.9871%" y="1183.50">[ano..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="4.6959%" y="1157" width="0.0115%" height="15" fill="rgb(247,221,28)" fg:x="4918" fg:w="12"/><text x="4.9459%" y="1167.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="4.6921%" y="1173" width="0.0162%" height="15" fill="rgb(251,222,45)" fg:x="4914" fg:w="17"/><text x="4.9421%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (66 samples, 0.06%)</title><rect x="4.7131%" y="1157" width="0.0630%" height="15" fill="rgb(217,162,53)" fg:x="4936" fg:w="66"/><text x="4.9631%" y="1167.50"></text></g><g><title>[tremor-connectors-copy-laptopnowarmup] (73 samples, 0.07%)</title><rect x="4.7083%" y="1173" width="0.0697%" height="15" fill="rgb(229,93,14)" fg:x="4931" fg:w="73"/><text x="4.9583%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="4.7780%" y="1157" width="0.0239%" height="15" fill="rgb(209,67,49)" fg:x="5004" fg:w="25"/><text x="5.0280%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="4.9203%" y="1013" width="0.0220%" height="15" fill="rgb(213,87,29)" fg:x="5153" fg:w="23"/><text x="5.1703%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="4.9203%" y="997" width="0.0220%" height="15" fill="rgb(205,151,52)" fg:x="5153" fg:w="23"/><text x="5.1703%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.02%)</title><rect x="4.9203%" y="981" width="0.0220%" height="15" fill="rgb(253,215,39)" fg:x="5153" fg:w="23"/><text x="5.1703%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="4.9203%" y="965" width="0.0220%" height="15" fill="rgb(221,220,41)" fg:x="5153" fg:w="23"/><text x="5.1703%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="4.9203%" y="949" width="0.0220%" height="15" fill="rgb(218,133,21)" fg:x="5153" fg:w="23"/><text x="5.1703%" y="959.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="4.9203%" y="933" width="0.0220%" height="15" fill="rgb(221,193,43)" fg:x="5153" fg:w="23"/><text x="5.1703%" y="943.50"></text></g><g><title>__rg_alloc (23 samples, 0.02%)</title><rect x="4.9203%" y="917" width="0.0220%" height="15" fill="rgb(240,128,52)" fg:x="5153" fg:w="23"/><text x="5.1703%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (23 samples, 0.02%)</title><rect x="4.9203%" y="901" width="0.0220%" height="15" fill="rgb(253,114,12)" fg:x="5153" fg:w="23"/><text x="5.1703%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="4.9203%" y="1093" width="0.0477%" height="15" fill="rgb(215,223,47)" fg:x="5153" fg:w="50"/><text x="5.1703%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="4.9203%" y="1077" width="0.0477%" height="15" fill="rgb(248,225,23)" fg:x="5153" fg:w="50"/><text x="5.1703%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.05%)</title><rect x="4.9203%" y="1061" width="0.0477%" height="15" fill="rgb(250,108,0)" fg:x="5153" fg:w="50"/><text x="5.1703%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.05%)</title><rect x="4.9203%" y="1045" width="0.0477%" height="15" fill="rgb(228,208,7)" fg:x="5153" fg:w="50"/><text x="5.1703%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.05%)</title><rect x="4.9203%" y="1029" width="0.0477%" height="15" fill="rgb(244,45,10)" fg:x="5153" fg:w="50"/><text x="5.1703%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (27 samples, 0.03%)</title><rect x="4.9423%" y="1013" width="0.0258%" height="15" fill="rgb(207,125,25)" fg:x="5176" fg:w="27"/><text x="5.1923%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.03%)</title><rect x="4.9423%" y="997" width="0.0258%" height="15" fill="rgb(210,195,18)" fg:x="5176" fg:w="27"/><text x="5.1923%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (196 samples, 0.19%)</title><rect x="4.8019%" y="1157" width="0.1871%" height="15" fill="rgb(249,80,12)" fg:x="5029" fg:w="196"/><text x="5.0519%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (72 samples, 0.07%)</title><rect x="4.9203%" y="1141" width="0.0687%" height="15" fill="rgb(221,65,9)" fg:x="5153" fg:w="72"/><text x="5.1703%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (72 samples, 0.07%)</title><rect x="4.9203%" y="1125" width="0.0687%" height="15" fill="rgb(235,49,36)" fg:x="5153" fg:w="72"/><text x="5.1703%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (72 samples, 0.07%)</title><rect x="4.9203%" y="1109" width="0.0687%" height="15" fill="rgb(225,32,20)" fg:x="5153" fg:w="72"/><text x="5.1703%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="4.9681%" y="1093" width="0.0210%" height="15" fill="rgb(215,141,46)" fg:x="5203" fg:w="22"/><text x="5.2181%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="4.9681%" y="1077" width="0.0210%" height="15" fill="rgb(250,160,47)" fg:x="5203" fg:w="22"/><text x="5.2181%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="4.9681%" y="1061" width="0.0210%" height="15" fill="rgb(216,222,40)" fg:x="5203" fg:w="22"/><text x="5.2181%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="4.9681%" y="1045" width="0.0210%" height="15" fill="rgb(234,217,39)" fg:x="5203" fg:w="22"/><text x="5.2181%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="4.9681%" y="1029" width="0.0210%" height="15" fill="rgb(207,178,40)" fg:x="5203" fg:w="22"/><text x="5.2181%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="4.9681%" y="1013" width="0.0210%" height="15" fill="rgb(221,136,13)" fg:x="5203" fg:w="22"/><text x="5.2181%" y="1023.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="4.9681%" y="997" width="0.0210%" height="15" fill="rgb(249,199,10)" fg:x="5203" fg:w="22"/><text x="5.2181%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="4.9681%" y="981" width="0.0210%" height="15" fill="rgb(249,222,13)" fg:x="5203" fg:w="22"/><text x="5.2181%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (177 samples, 0.17%)</title><rect x="4.9986%" y="1157" width="0.1690%" height="15" fill="rgb(244,185,38)" fg:x="5235" fg:w="177"/><text x="5.2486%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (22 samples, 0.02%)</title><rect x="5.1466%" y="1141" width="0.0210%" height="15" fill="rgb(236,202,9)" fg:x="5390" fg:w="22"/><text x="5.3966%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="5.1676%" y="1157" width="0.0306%" height="15" fill="rgb(250,229,37)" fg:x="5412" fg:w="32"/><text x="5.4176%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="5.3853%" y="1029" width="0.0172%" height="15" fill="rgb(206,174,23)" fg:x="5640" fg:w="18"/><text x="5.6353%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="5.3853%" y="1013" width="0.0172%" height="15" fill="rgb(211,33,43)" fg:x="5640" fg:w="18"/><text x="5.6353%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="5.3853%" y="997" width="0.0172%" height="15" fill="rgb(245,58,50)" fg:x="5640" fg:w="18"/><text x="5.6353%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="5.3853%" y="981" width="0.0172%" height="15" fill="rgb(244,68,36)" fg:x="5640" fg:w="18"/><text x="5.6353%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="5.3853%" y="965" width="0.0172%" height="15" fill="rgb(232,229,15)" fg:x="5640" fg:w="18"/><text x="5.6353%" y="975.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="5.3853%" y="949" width="0.0172%" height="15" fill="rgb(254,30,23)" fg:x="5640" fg:w="18"/><text x="5.6353%" y="959.50"></text></g><g><title>__rg_alloc (18 samples, 0.02%)</title><rect x="5.3853%" y="933" width="0.0172%" height="15" fill="rgb(235,160,14)" fg:x="5640" fg:w="18"/><text x="5.6353%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.02%)</title><rect x="5.3853%" y="917" width="0.0172%" height="15" fill="rgb(212,155,44)" fg:x="5640" fg:w="18"/><text x="5.6353%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (53 samples, 0.05%)</title><rect x="5.3758%" y="1125" width="0.0506%" height="15" fill="rgb(226,2,50)" fg:x="5630" fg:w="53"/><text x="5.6258%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="5.3853%" y="1109" width="0.0411%" height="15" fill="rgb(234,177,6)" fg:x="5640" fg:w="43"/><text x="5.6353%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="5.3853%" y="1093" width="0.0411%" height="15" fill="rgb(217,24,9)" fg:x="5640" fg:w="43"/><text x="5.6353%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 0.04%)</title><rect x="5.3853%" y="1077" width="0.0411%" height="15" fill="rgb(220,13,46)" fg:x="5640" fg:w="43"/><text x="5.6353%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (43 samples, 0.04%)</title><rect x="5.3853%" y="1061" width="0.0411%" height="15" fill="rgb(239,221,27)" fg:x="5640" fg:w="43"/><text x="5.6353%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 0.04%)</title><rect x="5.3853%" y="1045" width="0.0411%" height="15" fill="rgb(222,198,25)" fg:x="5640" fg:w="43"/><text x="5.6353%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (25 samples, 0.02%)</title><rect x="5.4025%" y="1029" width="0.0239%" height="15" fill="rgb(211,99,13)" fg:x="5658" fg:w="25"/><text x="5.6525%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="5.4025%" y="1013" width="0.0239%" height="15" fill="rgb(232,111,31)" fg:x="5658" fg:w="25"/><text x="5.6525%" y="1023.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (67 samples, 0.06%)</title><rect x="5.3758%" y="1141" width="0.0640%" height="15" fill="rgb(245,82,37)" fg:x="5630" fg:w="67"/><text x="5.6258%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (14 samples, 0.01%)</title><rect x="5.4264%" y="1125" width="0.0134%" height="15" fill="rgb(227,149,46)" fg:x="5683" fg:w="14"/><text x="5.6764%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="5.4264%" y="1109" width="0.0134%" height="15" fill="rgb(218,36,50)" fg:x="5683" fg:w="14"/><text x="5.6764%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="5.4264%" y="1093" width="0.0134%" height="15" fill="rgb(226,80,48)" fg:x="5683" fg:w="14"/><text x="5.6764%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="5.4264%" y="1077" width="0.0134%" height="15" fill="rgb(238,224,15)" fg:x="5683" fg:w="14"/><text x="5.6764%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="5.4264%" y="1061" width="0.0134%" height="15" fill="rgb(241,136,10)" fg:x="5683" fg:w="14"/><text x="5.6764%" y="1071.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (26 samples, 0.02%)</title><rect x="5.4398%" y="1141" width="0.0248%" height="15" fill="rgb(208,32,45)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="5.4398%" y="1125" width="0.0248%" height="15" fill="rgb(207,135,9)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="5.4398%" y="1109" width="0.0248%" height="15" fill="rgb(206,86,44)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (26 samples, 0.02%)</title><rect x="5.4398%" y="1093" width="0.0248%" height="15" fill="rgb(245,177,15)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (26 samples, 0.02%)</title><rect x="5.4398%" y="1077" width="0.0248%" height="15" fill="rgb(206,64,50)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (26 samples, 0.02%)</title><rect x="5.4398%" y="1061" width="0.0248%" height="15" fill="rgb(234,36,40)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="5.4398%" y="1045" width="0.0248%" height="15" fill="rgb(213,64,8)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="5.4398%" y="1029" width="0.0248%" height="15" fill="rgb(210,75,36)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (26 samples, 0.02%)</title><rect x="5.4398%" y="1013" width="0.0248%" height="15" fill="rgb(229,88,21)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="5.4398%" y="997" width="0.0248%" height="15" fill="rgb(252,204,47)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (26 samples, 0.02%)</title><rect x="5.4398%" y="981" width="0.0248%" height="15" fill="rgb(208,77,27)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.02%)</title><rect x="5.4398%" y="965" width="0.0248%" height="15" fill="rgb(221,76,26)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.02%)</title><rect x="5.4398%" y="949" width="0.0248%" height="15" fill="rgb(225,139,18)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (26 samples, 0.02%)</title><rect x="5.4398%" y="933" width="0.0248%" height="15" fill="rgb(230,137,11)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (26 samples, 0.02%)</title><rect x="5.4398%" y="917" width="0.0248%" height="15" fill="rgb(212,28,1)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="5.4398%" y="901" width="0.0248%" height="15" fill="rgb(248,164,17)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (26 samples, 0.02%)</title><rect x="5.4398%" y="885" width="0.0248%" height="15" fill="rgb(222,171,42)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="5.4398%" y="869" width="0.0248%" height="15" fill="rgb(243,84,45)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (26 samples, 0.02%)</title><rect x="5.4398%" y="853" width="0.0248%" height="15" fill="rgb(252,49,23)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (26 samples, 0.02%)</title><rect x="5.4398%" y="837" width="0.0248%" height="15" fill="rgb(215,19,7)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="5.4398%" y="821" width="0.0248%" height="15" fill="rgb(238,81,41)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (26 samples, 0.02%)</title><rect x="5.4398%" y="805" width="0.0248%" height="15" fill="rgb(210,199,37)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="5.4398%" y="789" width="0.0248%" height="15" fill="rgb(244,192,49)" fg:x="5697" fg:w="26"/><text x="5.6898%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="5.4865%" y="949" width="0.0143%" height="15" fill="rgb(226,211,11)" fg:x="5746" fg:w="15"/><text x="5.7365%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (402 samples, 0.38%)</title><rect x="5.5009%" y="949" width="0.3838%" height="15" fill="rgb(236,162,54)" fg:x="5761" fg:w="402"/><text x="5.7509%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="5.9907%" y="933" width="0.0124%" height="15" fill="rgb(220,229,9)" fg:x="6274" fg:w="13"/><text x="6.2407%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (985 samples, 0.94%)</title><rect x="6.0031%" y="933" width="0.9405%" height="15" fill="rgb(250,87,22)" fg:x="6287" fg:w="985"/><text x="6.2531%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (17 samples, 0.02%)</title><rect x="6.9436%" y="917" width="0.0162%" height="15" fill="rgb(239,43,17)" fg:x="7272" fg:w="17"/><text x="7.1936%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1141" width="1.5039%" height="15" fill="rgb(231,177,25)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1125" width="1.5039%" height="15" fill="rgb(219,179,1)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1109" width="1.5039%" height="15" fill="rgb(238,219,53)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1093" width="1.5039%" height="15" fill="rgb(232,167,36)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1077" width="1.5039%" height="15" fill="rgb(244,19,51)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1061" width="1.5039%" height="15" fill="rgb(224,6,22)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1045" width="1.5039%" height="15" fill="rgb(224,145,5)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1029" width="1.5039%" height="15" fill="rgb(234,130,49)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,575 samples, 1.50%)</title><rect x="5.4646%" y="1013" width="1.5039%" height="15" fill="rgb(254,6,2)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,575 samples, 1.50%)</title><rect x="5.4646%" y="997" width="1.5039%" height="15" fill="rgb(208,96,46)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,575 samples, 1.50%)</title><rect x="5.4646%" y="981" width="1.5039%" height="15" fill="rgb(239,3,39)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,575 samples, 1.50%)</title><rect x="5.4646%" y="965" width="1.5039%" height="15" fill="rgb(233,210,1)" fg:x="5723" fg:w="1575"/><text x="5.7146%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,135 samples, 1.08%)</title><rect x="5.8847%" y="949" width="1.0837%" height="15" fill="rgb(244,137,37)" fg:x="6163" fg:w="1135"/><text x="6.1347%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (26 samples, 0.02%)</title><rect x="6.9436%" y="933" width="0.0248%" height="15" fill="rgb(240,136,2)" fg:x="7272" fg:w="26"/><text x="7.1936%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,857 samples, 1.77%)</title><rect x="5.1982%" y="1157" width="1.7731%" height="15" fill="rgb(239,18,37)" fg:x="5444" fg:w="1857"/><text x="5.4482%" y="1167.50">&lt;..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="6.9713%" y="1157" width="0.0143%" height="15" fill="rgb(218,185,22)" fg:x="7301" fg:w="15"/><text x="7.2213%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (20 samples, 0.02%)</title><rect x="6.9876%" y="1157" width="0.0191%" height="15" fill="rgb(225,218,4)" fg:x="7318" fg:w="20"/><text x="7.2376%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (61 samples, 0.06%)</title><rect x="7.0067%" y="1157" width="0.0582%" height="15" fill="rgb(230,182,32)" fg:x="7338" fg:w="61"/><text x="7.2567%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="7.0649%" y="1157" width="0.0153%" height="15" fill="rgb(242,56,43)" fg:x="7399" fg:w="16"/><text x="7.3149%" y="1167.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="7.0802%" y="1157" width="0.0201%" height="15" fill="rgb(233,99,24)" fg:x="7415" fg:w="21"/><text x="7.3302%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (21 samples, 0.02%)</title><rect x="7.0802%" y="1141" width="0.0201%" height="15" fill="rgb(234,209,42)" fg:x="7415" fg:w="21"/><text x="7.3302%" y="1151.50"></text></g><g><title>___pthread_mutex_lock (36 samples, 0.03%)</title><rect x="7.1222%" y="1157" width="0.0344%" height="15" fill="rgb(227,7,12)" fg:x="7459" fg:w="36"/><text x="7.3722%" y="1167.50"></text></g><g><title>__clock_gettime_2 (112 samples, 0.11%)</title><rect x="7.1566%" y="1157" width="0.1069%" height="15" fill="rgb(245,203,43)" fg:x="7495" fg:w="112"/><text x="7.4066%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (90 samples, 0.09%)</title><rect x="7.2635%" y="1157" width="0.0859%" height="15" fill="rgb(238,205,33)" fg:x="7607" fg:w="90"/><text x="7.5135%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (46 samples, 0.04%)</title><rect x="7.3494%" y="1157" width="0.0439%" height="15" fill="rgb(231,56,7)" fg:x="7697" fg:w="46"/><text x="7.5994%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (26 samples, 0.02%)</title><rect x="7.3685%" y="1141" width="0.0248%" height="15" fill="rgb(244,186,29)" fg:x="7717" fg:w="26"/><text x="7.6185%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (41 samples, 0.04%)</title><rect x="7.3934%" y="1157" width="0.0391%" height="15" fill="rgb(234,111,31)" fg:x="7743" fg:w="41"/><text x="7.6434%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (115 samples, 0.11%)</title><rect x="7.4325%" y="1157" width="0.1098%" height="15" fill="rgb(241,149,10)" fg:x="7784" fg:w="115"/><text x="7.6825%" y="1167.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="7.6292%" y="549" width="0.0143%" height="15" fill="rgb(249,206,44)" fg:x="7990" fg:w="15"/><text x="7.8792%" y="559.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="7.6302%" y="533" width="0.0134%" height="15" fill="rgb(251,153,30)" fg:x="7991" fg:w="14"/><text x="7.8802%" y="543.50"></text></g><g><title>futex_wake (13 samples, 0.01%)</title><rect x="7.6311%" y="517" width="0.0124%" height="15" fill="rgb(239,152,38)" fg:x="7992" fg:w="13"/><text x="7.8811%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.02%)</title><rect x="7.6435%" y="549" width="0.0220%" height="15" fill="rgb(249,139,47)" fg:x="8005" fg:w="23"/><text x="7.8935%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (41 samples, 0.04%)</title><rect x="7.6283%" y="581" width="0.0391%" height="15" fill="rgb(244,64,35)" fg:x="7989" fg:w="41"/><text x="7.8783%" y="591.50"></text></g><g><title>do_syscall_64 (40 samples, 0.04%)</title><rect x="7.6292%" y="565" width="0.0382%" height="15" fill="rgb(216,46,15)" fg:x="7990" fg:w="40"/><text x="7.8792%" y="575.50"></text></g><g><title>core::mem::drop (66 samples, 0.06%)</title><rect x="7.6073%" y="709" width="0.0630%" height="15" fill="rgb(250,74,19)" fg:x="7967" fg:w="66"/><text x="7.8573%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (66 samples, 0.06%)</title><rect x="7.6073%" y="693" width="0.0630%" height="15" fill="rgb(249,42,33)" fg:x="7967" fg:w="66"/><text x="7.8573%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (63 samples, 0.06%)</title><rect x="7.6101%" y="677" width="0.0602%" height="15" fill="rgb(242,149,17)" fg:x="7970" fg:w="63"/><text x="7.8601%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.06%)</title><rect x="7.6101%" y="661" width="0.0602%" height="15" fill="rgb(244,29,21)" fg:x="7970" fg:w="63"/><text x="7.8601%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (62 samples, 0.06%)</title><rect x="7.6111%" y="645" width="0.0592%" height="15" fill="rgb(220,130,37)" fg:x="7971" fg:w="62"/><text x="7.8611%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (62 samples, 0.06%)</title><rect x="7.6111%" y="629" width="0.0592%" height="15" fill="rgb(211,67,2)" fg:x="7971" fg:w="62"/><text x="7.8611%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (62 samples, 0.06%)</title><rect x="7.6111%" y="613" width="0.0592%" height="15" fill="rgb(235,68,52)" fg:x="7971" fg:w="62"/><text x="7.8611%" y="623.50"></text></g><g><title>__GI___lll_lock_wake (49 samples, 0.05%)</title><rect x="7.6235%" y="597" width="0.0468%" height="15" fill="rgb(246,142,3)" fg:x="7984" fg:w="49"/><text x="7.8735%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="7.6703%" y="709" width="0.0124%" height="15" fill="rgb(241,25,7)" fg:x="8033" fg:w="13"/><text x="7.9203%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="7.6703%" y="693" width="0.0124%" height="15" fill="rgb(242,119,39)" fg:x="8033" fg:w="13"/><text x="7.9203%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="7.6703%" y="677" width="0.0124%" height="15" fill="rgb(241,98,45)" fg:x="8033" fg:w="13"/><text x="7.9203%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="7.6703%" y="661" width="0.0124%" height="15" fill="rgb(254,28,30)" fg:x="8033" fg:w="13"/><text x="7.9203%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="7.6703%" y="645" width="0.0124%" height="15" fill="rgb(241,142,54)" fg:x="8033" fg:w="13"/><text x="7.9203%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="7.6703%" y="629" width="0.0124%" height="15" fill="rgb(222,85,15)" fg:x="8033" fg:w="13"/><text x="7.9203%" y="639.50"></text></g><g><title>__perf_event_task_sched_out (12 samples, 0.01%)</title><rect x="7.8135%" y="485" width="0.0115%" height="15" fill="rgb(210,85,47)" fg:x="8183" fg:w="12"/><text x="8.0635%" y="495.50"></text></g><g><title>update_curr (19 samples, 0.02%)</title><rect x="7.8498%" y="453" width="0.0181%" height="15" fill="rgb(224,206,25)" fg:x="8221" fg:w="19"/><text x="8.0998%" y="463.50"></text></g><g><title>dequeue_entity (46 samples, 0.04%)</title><rect x="7.8355%" y="469" width="0.0439%" height="15" fill="rgb(243,201,19)" fg:x="8206" fg:w="46"/><text x="8.0855%" y="479.50"></text></g><g><title>update_load_avg (12 samples, 0.01%)</title><rect x="7.8679%" y="453" width="0.0115%" height="15" fill="rgb(236,59,4)" fg:x="8240" fg:w="12"/><text x="8.1179%" y="463.50"></text></g><g><title>dequeue_task_fair (57 samples, 0.05%)</title><rect x="7.8259%" y="485" width="0.0544%" height="15" fill="rgb(254,179,45)" fg:x="8196" fg:w="57"/><text x="8.0759%" y="495.50"></text></g><g><title>finish_task_switch.isra.0 (27 samples, 0.03%)</title><rect x="7.8803%" y="485" width="0.0258%" height="15" fill="rgb(226,14,10)" fg:x="8253" fg:w="27"/><text x="8.1303%" y="495.50"></text></g><g><title>psi_group_change (21 samples, 0.02%)</title><rect x="7.9195%" y="469" width="0.0201%" height="15" fill="rgb(244,27,41)" fg:x="8294" fg:w="21"/><text x="8.1695%" y="479.50"></text></g><g><title>psi_task_switch (33 samples, 0.03%)</title><rect x="7.9099%" y="485" width="0.0315%" height="15" fill="rgb(235,35,32)" fg:x="8284" fg:w="33"/><text x="8.1599%" y="495.50"></text></g><g><title>futex_wait_queue (163 samples, 0.16%)</title><rect x="7.7982%" y="533" width="0.1556%" height="15" fill="rgb(218,68,31)" fg:x="8167" fg:w="163"/><text x="8.0482%" y="543.50"></text></g><g><title>schedule (158 samples, 0.15%)</title><rect x="7.8030%" y="517" width="0.1509%" height="15" fill="rgb(207,120,37)" fg:x="8172" fg:w="158"/><text x="8.0530%" y="527.50"></text></g><g><title>__schedule (157 samples, 0.15%)</title><rect x="7.8040%" y="501" width="0.1499%" height="15" fill="rgb(227,98,0)" fg:x="8173" fg:w="157"/><text x="8.0540%" y="511.50"></text></g><g><title>__x64_sys_futex (192 samples, 0.18%)</title><rect x="7.7858%" y="581" width="0.1833%" height="15" fill="rgb(207,7,3)" fg:x="8154" fg:w="192"/><text x="8.0358%" y="591.50"></text></g><g><title>do_futex (186 samples, 0.18%)</title><rect x="7.7915%" y="565" width="0.1776%" height="15" fill="rgb(206,98,19)" fg:x="8160" fg:w="186"/><text x="8.0415%" y="575.50"></text></g><g><title>futex_wait (183 samples, 0.17%)</title><rect x="7.7944%" y="549" width="0.1747%" height="15" fill="rgb(217,5,26)" fg:x="8163" fg:w="183"/><text x="8.0444%" y="559.50"></text></g><g><title>futex_wait_setup (16 samples, 0.02%)</title><rect x="7.9539%" y="533" width="0.0153%" height="15" fill="rgb(235,190,38)" fg:x="8330" fg:w="16"/><text x="8.2039%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (18 samples, 0.02%)</title><rect x="7.9882%" y="565" width="0.0172%" height="15" fill="rgb(247,86,24)" fg:x="8366" fg:w="18"/><text x="8.2382%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (42 samples, 0.04%)</title><rect x="7.9691%" y="581" width="0.0401%" height="15" fill="rgb(205,101,16)" fg:x="8346" fg:w="42"/><text x="8.2191%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (239 samples, 0.23%)</title><rect x="7.7829%" y="613" width="0.2282%" height="15" fill="rgb(246,168,33)" fg:x="8151" fg:w="239"/><text x="8.0329%" y="623.50"></text></g><g><title>do_syscall_64 (239 samples, 0.23%)</title><rect x="7.7829%" y="597" width="0.2282%" height="15" fill="rgb(231,114,1)" fg:x="8151" fg:w="239"/><text x="8.0329%" y="607.50"></text></g><g><title>event_listener::Inner::lock (345 samples, 0.33%)</title><rect x="7.6846%" y="709" width="0.3294%" height="15" fill="rgb(207,184,53)" fg:x="8048" fg:w="345"/><text x="7.9346%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (345 samples, 0.33%)</title><rect x="7.6846%" y="693" width="0.3294%" height="15" fill="rgb(224,95,51)" fg:x="8048" fg:w="345"/><text x="7.9346%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (344 samples, 0.33%)</title><rect x="7.6856%" y="677" width="0.3285%" height="15" fill="rgb(212,188,45)" fg:x="8049" fg:w="344"/><text x="7.9356%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (325 samples, 0.31%)</title><rect x="7.7037%" y="661" width="0.3103%" height="15" fill="rgb(223,154,38)" fg:x="8068" fg:w="325"/><text x="7.9537%" y="671.50"></text></g><g><title>___pthread_mutex_lock (325 samples, 0.31%)</title><rect x="7.7037%" y="645" width="0.3103%" height="15" fill="rgb(251,22,52)" fg:x="8068" fg:w="325"/><text x="7.9537%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (250 samples, 0.24%)</title><rect x="7.7753%" y="629" width="0.2387%" height="15" fill="rgb(229,209,22)" fg:x="8143" fg:w="250"/><text x="8.0253%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (454 samples, 0.43%)</title><rect x="7.5987%" y="725" width="0.4335%" height="15" fill="rgb(234,138,34)" fg:x="7958" fg:w="454"/><text x="7.8487%" y="735.50"></text></g><g><title>event_listener::List::remove (19 samples, 0.02%)</title><rect x="8.0140%" y="709" width="0.0181%" height="15" fill="rgb(212,95,11)" fg:x="8393" fg:w="19"/><text x="8.2640%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.01%)</title><rect x="8.0207%" y="693" width="0.0115%" height="15" fill="rgb(240,179,47)" fg:x="8400" fg:w="12"/><text x="8.2707%" y="703.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="8.0207%" y="677" width="0.0115%" height="15" fill="rgb(240,163,11)" fg:x="8400" fg:w="12"/><text x="8.2707%" y="687.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="8.0207%" y="661" width="0.0115%" height="15" fill="rgb(236,37,12)" fg:x="8400" fg:w="12"/><text x="8.2707%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (680 samples, 0.65%)</title><rect x="8.0331%" y="725" width="0.6493%" height="15" fill="rgb(232,164,16)" fg:x="8413" fg:w="680"/><text x="8.2831%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (714 samples, 0.68%)</title><rect x="8.7302%" y="709" width="0.6818%" height="15" fill="rgb(244,205,15)" fg:x="9143" fg:w="714"/><text x="8.9802%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (398 samples, 0.38%)</title><rect x="9.6334%" y="677" width="0.3800%" height="15" fill="rgb(223,117,47)" fg:x="10089" fg:w="398"/><text x="9.8834%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (34 samples, 0.03%)</title><rect x="10.0182%" y="677" width="0.0325%" height="15" fill="rgb(244,107,35)" fg:x="10492" fg:w="34"/><text x="10.2682%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (33 samples, 0.03%)</title><rect x="10.0192%" y="661" width="0.0315%" height="15" fill="rgb(205,140,8)" fg:x="10493" fg:w="33"/><text x="10.2692%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (33 samples, 0.03%)</title><rect x="10.0192%" y="645" width="0.0315%" height="15" fill="rgb(228,84,46)" fg:x="10493" fg:w="33"/><text x="10.2692%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.03%)</title><rect x="10.0192%" y="629" width="0.0315%" height="15" fill="rgb(254,188,9)" fg:x="10493" fg:w="33"/><text x="10.2692%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (373 samples, 0.36%)</title><rect x="10.0517%" y="677" width="0.3562%" height="15" fill="rgb(206,112,54)" fg:x="10527" fg:w="373"/><text x="10.3017%" y="687.50"></text></g><g><title>core::ptr::read (373 samples, 0.36%)</title><rect x="10.0517%" y="661" width="0.3562%" height="15" fill="rgb(216,84,49)" fg:x="10527" fg:w="373"/><text x="10.3017%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (373 samples, 0.36%)</title><rect x="10.0517%" y="645" width="0.3562%" height="15" fill="rgb(214,194,35)" fg:x="10527" fg:w="373"/><text x="10.3017%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1,022 samples, 0.98%)</title><rect x="10.4078%" y="677" width="0.9759%" height="15" fill="rgb(249,28,3)" fg:x="10900" fg:w="1022"/><text x="10.6578%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,022 samples, 0.98%)</title><rect x="10.4078%" y="661" width="0.9759%" height="15" fill="rgb(222,56,52)" fg:x="10900" fg:w="1022"/><text x="10.6578%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (215 samples, 0.21%)</title><rect x="11.3837%" y="677" width="0.2053%" height="15" fill="rgb(245,217,50)" fg:x="11922" fg:w="215"/><text x="11.6337%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (207 samples, 0.20%)</title><rect x="11.3913%" y="661" width="0.1977%" height="15" fill="rgb(213,201,24)" fg:x="11930" fg:w="207"/><text x="11.6413%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,281 samples, 2.18%)</title><rect x="9.4129%" y="709" width="2.1780%" height="15" fill="rgb(248,116,28)" fg:x="9858" fg:w="2281"/><text x="9.6629%" y="719.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,231 samples, 2.13%)</title><rect x="9.4606%" y="693" width="2.1303%" height="15" fill="rgb(219,72,43)" fg:x="9908" fg:w="2231"/><text x="9.7106%" y="703.50">c..</text></g><g><title>__x64_sys_futex (19 samples, 0.02%)</title><rect x="11.6081%" y="549" width="0.0181%" height="15" fill="rgb(209,138,14)" fg:x="12157" fg:w="19"/><text x="11.8581%" y="559.50"></text></g><g><title>do_futex (18 samples, 0.02%)</title><rect x="11.6090%" y="533" width="0.0172%" height="15" fill="rgb(222,18,33)" fg:x="12158" fg:w="18"/><text x="11.8590%" y="543.50"></text></g><g><title>futex_wake (18 samples, 0.02%)</title><rect x="11.6090%" y="517" width="0.0172%" height="15" fill="rgb(213,199,7)" fg:x="12158" fg:w="18"/><text x="11.8590%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (25 samples, 0.02%)</title><rect x="11.6033%" y="693" width="0.0239%" height="15" fill="rgb(250,110,10)" fg:x="12152" fg:w="25"/><text x="11.8533%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="11.6033%" y="677" width="0.0239%" height="15" fill="rgb(248,123,6)" fg:x="12152" fg:w="25"/><text x="11.8533%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="11.6033%" y="661" width="0.0239%" height="15" fill="rgb(206,91,31)" fg:x="12152" fg:w="25"/><text x="11.8533%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="11.6033%" y="645" width="0.0239%" height="15" fill="rgb(211,154,13)" fg:x="12152" fg:w="25"/><text x="11.8533%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (25 samples, 0.02%)</title><rect x="11.6033%" y="629" width="0.0239%" height="15" fill="rgb(225,148,7)" fg:x="12152" fg:w="25"/><text x="11.8533%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (25 samples, 0.02%)</title><rect x="11.6033%" y="613" width="0.0239%" height="15" fill="rgb(220,160,43)" fg:x="12152" fg:w="25"/><text x="11.8533%" y="623.50"></text></g><g><title>__GI___lll_lock_wake (21 samples, 0.02%)</title><rect x="11.6071%" y="597" width="0.0201%" height="15" fill="rgb(213,52,39)" fg:x="12156" fg:w="21"/><text x="11.8571%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="11.6081%" y="581" width="0.0191%" height="15" fill="rgb(243,137,7)" fg:x="12157" fg:w="20"/><text x="11.8581%" y="591.50"></text></g><g><title>do_syscall_64 (20 samples, 0.02%)</title><rect x="11.6081%" y="565" width="0.0191%" height="15" fill="rgb(230,79,13)" fg:x="12157" fg:w="20"/><text x="11.8581%" y="575.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.02%)</title><rect x="11.6434%" y="421" width="0.0162%" height="15" fill="rgb(247,105,23)" fg:x="12194" fg:w="17"/><text x="11.8934%" y="431.50"></text></g><g><title>do_futex (17 samples, 0.02%)</title><rect x="11.6434%" y="405" width="0.0162%" height="15" fill="rgb(223,179,41)" fg:x="12194" fg:w="17"/><text x="11.8934%" y="415.50"></text></g><g><title>futex_wake (17 samples, 0.02%)</title><rect x="11.6434%" y="389" width="0.0162%" height="15" fill="rgb(218,9,34)" fg:x="12194" fg:w="17"/><text x="11.8934%" y="399.50"></text></g><g><title>wake_up_q (14 samples, 0.01%)</title><rect x="11.6462%" y="373" width="0.0134%" height="15" fill="rgb(222,106,8)" fg:x="12197" fg:w="14"/><text x="11.8962%" y="383.50"></text></g><g><title>try_to_wake_up (14 samples, 0.01%)</title><rect x="11.6462%" y="357" width="0.0134%" height="15" fill="rgb(211,220,0)" fg:x="12197" fg:w="14"/><text x="11.8962%" y="367.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.02%)</title><rect x="11.6386%" y="597" width="0.0229%" height="15" fill="rgb(229,52,16)" fg:x="12189" fg:w="24"/><text x="11.8886%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.02%)</title><rect x="11.6386%" y="581" width="0.0229%" height="15" fill="rgb(212,155,18)" fg:x="12189" fg:w="24"/><text x="11.8886%" y="591.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (24 samples, 0.02%)</title><rect x="11.6386%" y="565" width="0.0229%" height="15" fill="rgb(242,21,14)" fg:x="12189" fg:w="24"/><text x="11.8886%" y="575.50"></text></g><g><title>parking::Unparker::unpark (22 samples, 0.02%)</title><rect x="11.6405%" y="549" width="0.0210%" height="15" fill="rgb(222,19,48)" fg:x="12191" fg:w="22"/><text x="11.8905%" y="559.50"></text></g><g><title>parking::Inner::unpark (22 samples, 0.02%)</title><rect x="11.6405%" y="533" width="0.0210%" height="15" fill="rgb(232,45,27)" fg:x="12191" fg:w="22"/><text x="11.8905%" y="543.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (21 samples, 0.02%)</title><rect x="11.6415%" y="517" width="0.0201%" height="15" fill="rgb(249,103,42)" fg:x="12192" fg:w="21"/><text x="11.8915%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (21 samples, 0.02%)</title><rect x="11.6415%" y="501" width="0.0201%" height="15" fill="rgb(246,81,33)" fg:x="12192" fg:w="21"/><text x="11.8915%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (21 samples, 0.02%)</title><rect x="11.6415%" y="485" width="0.0201%" height="15" fill="rgb(252,33,42)" fg:x="12192" fg:w="21"/><text x="11.8915%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (21 samples, 0.02%)</title><rect x="11.6415%" y="469" width="0.0201%" height="15" fill="rgb(209,212,41)" fg:x="12192" fg:w="21"/><text x="11.8915%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.02%)</title><rect x="11.6434%" y="453" width="0.0181%" height="15" fill="rgb(207,154,6)" fg:x="12194" fg:w="19"/><text x="11.8934%" y="463.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="11.6434%" y="437" width="0.0181%" height="15" fill="rgb(223,64,47)" fg:x="12194" fg:w="19"/><text x="11.8934%" y="447.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (29 samples, 0.03%)</title><rect x="11.6357%" y="629" width="0.0277%" height="15" fill="rgb(211,161,38)" fg:x="12186" fg:w="29"/><text x="11.8857%" y="639.50"></text></g><g><title>async_executor::State::notify (29 samples, 0.03%)</title><rect x="11.6357%" y="613" width="0.0277%" height="15" fill="rgb(219,138,40)" fg:x="12186" fg:w="29"/><text x="11.8857%" y="623.50"></text></g><g><title>event_listener::List::notify (30 samples, 0.03%)</title><rect x="11.6357%" y="693" width="0.0286%" height="15" fill="rgb(241,228,46)" fg:x="12186" fg:w="30"/><text x="11.8857%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (30 samples, 0.03%)</title><rect x="11.6357%" y="677" width="0.0286%" height="15" fill="rgb(223,209,38)" fg:x="12186" fg:w="30"/><text x="11.8857%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (30 samples, 0.03%)</title><rect x="11.6357%" y="661" width="0.0286%" height="15" fill="rgb(236,164,45)" fg:x="12186" fg:w="30"/><text x="11.8857%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (30 samples, 0.03%)</title><rect x="11.6357%" y="645" width="0.0286%" height="15" fill="rgb(231,15,5)" fg:x="12186" fg:w="30"/><text x="11.8857%" y="655.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,484 samples, 3.33%)</title><rect x="8.6824%" y="725" width="3.3267%" height="15" fill="rgb(252,35,15)" fg:x="9093" fg:w="3484"/><text x="8.9324%" y="735.50">asy..</text></g><g><title>event_listener::Event::notify (438 samples, 0.42%)</title><rect x="11.5909%" y="709" width="0.4182%" height="15" fill="rgb(248,181,18)" fg:x="12139" fg:w="438"/><text x="11.8409%" y="719.50"></text></g><g><title>event_listener::full_fence (361 samples, 0.34%)</title><rect x="11.6644%" y="693" width="0.3447%" height="15" fill="rgb(233,39,42)" fg:x="12216" fg:w="361"/><text x="11.9144%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (345 samples, 0.33%)</title><rect x="11.6797%" y="677" width="0.3294%" height="15" fill="rgb(238,110,33)" fg:x="12232" fg:w="345"/><text x="11.9297%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (345 samples, 0.33%)</title><rect x="11.6797%" y="661" width="0.3294%" height="15" fill="rgb(233,195,10)" fg:x="12232" fg:w="345"/><text x="11.9297%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (345 samples, 0.33%)</title><rect x="11.6797%" y="645" width="0.3294%" height="15" fill="rgb(254,105,3)" fg:x="12232" fg:w="345"/><text x="11.9297%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (27 samples, 0.03%)</title><rect x="12.0091%" y="725" width="0.0258%" height="15" fill="rgb(221,225,9)" fg:x="12577" fg:w="27"/><text x="12.2591%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (19 samples, 0.02%)</title><rect x="12.0482%" y="677" width="0.0181%" height="15" fill="rgb(224,227,45)" fg:x="12618" fg:w="19"/><text x="12.2982%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (19 samples, 0.02%)</title><rect x="12.0482%" y="661" width="0.0181%" height="15" fill="rgb(229,198,43)" fg:x="12618" fg:w="19"/><text x="12.2982%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="12.0482%" y="645" width="0.0181%" height="15" fill="rgb(206,209,35)" fg:x="12618" fg:w="19"/><text x="12.2982%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="12.0482%" y="629" width="0.0181%" height="15" fill="rgb(245,195,53)" fg:x="12618" fg:w="19"/><text x="12.2982%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="12.0482%" y="613" width="0.0181%" height="15" fill="rgb(240,92,26)" fg:x="12618" fg:w="19"/><text x="12.2982%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="12.0482%" y="597" width="0.0181%" height="15" fill="rgb(207,40,23)" fg:x="12618" fg:w="19"/><text x="12.2982%" y="607.50"></text></g><g><title>event_listener::Inner::lock (18 samples, 0.02%)</title><rect x="12.0664%" y="677" width="0.0172%" height="15" fill="rgb(223,111,35)" fg:x="12637" fg:w="18"/><text x="12.3164%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="12.0664%" y="661" width="0.0172%" height="15" fill="rgb(229,147,28)" fg:x="12637" fg:w="18"/><text x="12.3164%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="12.0664%" y="645" width="0.0172%" height="15" fill="rgb(211,29,28)" fg:x="12637" fg:w="18"/><text x="12.3164%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="12.0692%" y="629" width="0.0143%" height="15" fill="rgb(228,72,33)" fg:x="12640" fg:w="15"/><text x="12.3192%" y="639.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="12.0692%" y="613" width="0.0143%" height="15" fill="rgb(205,214,31)" fg:x="12640" fg:w="15"/><text x="12.3192%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="12.0473%" y="693" width="0.0391%" height="15" fill="rgb(224,111,15)" fg:x="12617" fg:w="41"/><text x="12.2973%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (70 samples, 0.07%)</title><rect x="12.0349%" y="725" width="0.0668%" height="15" fill="rgb(253,21,26)" fg:x="12604" fg:w="70"/><text x="12.2849%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (57 samples, 0.05%)</title><rect x="12.0473%" y="709" width="0.0544%" height="15" fill="rgb(245,139,43)" fg:x="12617" fg:w="57"/><text x="12.2973%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (16 samples, 0.02%)</title><rect x="12.0864%" y="693" width="0.0153%" height="15" fill="rgb(252,170,7)" fg:x="12658" fg:w="16"/><text x="12.3364%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="12.0864%" y="677" width="0.0153%" height="15" fill="rgb(231,118,14)" fg:x="12658" fg:w="16"/><text x="12.3364%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="12.0874%" y="661" width="0.0143%" height="15" fill="rgb(238,83,0)" fg:x="12659" fg:w="15"/><text x="12.3374%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="12.0874%" y="645" width="0.0143%" height="15" fill="rgb(221,39,39)" fg:x="12659" fg:w="15"/><text x="12.3374%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="12.1027%" y="709" width="0.0391%" height="15" fill="rgb(222,119,46)" fg:x="12675" fg:w="41"/><text x="12.3527%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (41 samples, 0.04%)</title><rect x="12.1027%" y="693" width="0.0391%" height="15" fill="rgb(222,165,49)" fg:x="12675" fg:w="41"/><text x="12.3527%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (41 samples, 0.04%)</title><rect x="12.1027%" y="677" width="0.0391%" height="15" fill="rgb(219,113,52)" fg:x="12675" fg:w="41"/><text x="12.3527%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (11 samples, 0.01%)</title><rect x="12.1418%" y="709" width="0.0105%" height="15" fill="rgb(214,7,15)" fg:x="12716" fg:w="11"/><text x="12.3918%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (11 samples, 0.01%)</title><rect x="12.1418%" y="693" width="0.0105%" height="15" fill="rgb(235,32,4)" fg:x="12716" fg:w="11"/><text x="12.3918%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="12.1418%" y="677" width="0.0105%" height="15" fill="rgb(238,90,54)" fg:x="12716" fg:w="11"/><text x="12.3918%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="12.1418%" y="661" width="0.0105%" height="15" fill="rgb(213,208,19)" fg:x="12716" fg:w="11"/><text x="12.3918%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="12.1418%" y="645" width="0.0105%" height="15" fill="rgb(233,156,4)" fg:x="12716" fg:w="11"/><text x="12.3918%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="12.1418%" y="629" width="0.0105%" height="15" fill="rgb(207,194,5)" fg:x="12716" fg:w="11"/><text x="12.3918%" y="639.50"></text></g><g><title>event_listener::Inner::lock (47 samples, 0.04%)</title><rect x="12.1523%" y="709" width="0.0449%" height="15" fill="rgb(206,111,30)" fg:x="12727" fg:w="47"/><text x="12.4023%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.04%)</title><rect x="12.1523%" y="693" width="0.0449%" height="15" fill="rgb(243,70,54)" fg:x="12727" fg:w="47"/><text x="12.4023%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (47 samples, 0.04%)</title><rect x="12.1523%" y="677" width="0.0449%" height="15" fill="rgb(242,28,8)" fg:x="12727" fg:w="47"/><text x="12.4023%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (47 samples, 0.04%)</title><rect x="12.1523%" y="661" width="0.0449%" height="15" fill="rgb(219,106,18)" fg:x="12727" fg:w="47"/><text x="12.4023%" y="671.50"></text></g><g><title>___pthread_mutex_lock (47 samples, 0.04%)</title><rect x="12.1523%" y="645" width="0.0449%" height="15" fill="rgb(244,222,10)" fg:x="12727" fg:w="47"/><text x="12.4023%" y="655.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,880 samples, 4.66%)</title><rect x="7.5500%" y="805" width="4.6596%" height="15" fill="rgb(236,179,52)" fg:x="7907" fg:w="4880"/><text x="7.8000%" y="815.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,880 samples, 4.66%)</title><rect x="7.5500%" y="789" width="4.6596%" height="15" fill="rgb(213,23,39)" fg:x="7907" fg:w="4880"/><text x="7.8000%" y="799.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,880 samples, 4.66%)</title><rect x="7.5500%" y="773" width="4.6596%" height="15" fill="rgb(238,48,10)" fg:x="7907" fg:w="4880"/><text x="7.8000%" y="783.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,880 samples, 4.66%)</title><rect x="7.5500%" y="757" width="4.6596%" height="15" fill="rgb(251,196,23)" fg:x="7907" fg:w="4880"/><text x="7.8000%" y="767.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,880 samples, 4.66%)</title><rect x="7.5500%" y="741" width="4.6596%" height="15" fill="rgb(250,152,24)" fg:x="7907" fg:w="4880"/><text x="7.8000%" y="751.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (113 samples, 0.11%)</title><rect x="12.1017%" y="725" width="0.1079%" height="15" fill="rgb(209,150,17)" fg:x="12674" fg:w="113"/><text x="12.3517%" y="735.50"></text></g><g><title>event_listener::full_fence (11 samples, 0.01%)</title><rect x="12.1991%" y="709" width="0.0105%" height="15" fill="rgb(234,202,34)" fg:x="12776" fg:w="11"/><text x="12.4491%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,231 samples, 1.18%)</title><rect x="12.2554%" y="709" width="1.1754%" height="15" fill="rgb(253,148,53)" fg:x="12835" fg:w="1231"/><text x="12.5054%" y="719.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="13.4366%" y="693" width="0.0105%" height="15" fill="rgb(218,129,16)" fg:x="14072" fg:w="11"/><text x="13.6866%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (13 samples, 0.01%)</title><rect x="13.4643%" y="645" width="0.0124%" height="15" fill="rgb(216,85,19)" fg:x="14101" fg:w="13"/><text x="13.7143%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (13 samples, 0.01%)</title><rect x="13.4643%" y="629" width="0.0124%" height="15" fill="rgb(235,228,7)" fg:x="14101" fg:w="13"/><text x="13.7143%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (13 samples, 0.01%)</title><rect x="13.4643%" y="613" width="0.0124%" height="15" fill="rgb(245,175,0)" fg:x="14101" fg:w="13"/><text x="13.7143%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="13.4643%" y="597" width="0.0124%" height="15" fill="rgb(208,168,36)" fg:x="14101" fg:w="13"/><text x="13.7143%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (13 samples, 0.01%)</title><rect x="13.4643%" y="581" width="0.0124%" height="15" fill="rgb(246,171,24)" fg:x="14101" fg:w="13"/><text x="13.7143%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="13.4901%" y="533" width="0.0210%" height="15" fill="rgb(215,142,24)" fg:x="14128" fg:w="22"/><text x="13.7401%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="13.4901%" y="517" width="0.0210%" height="15" fill="rgb(250,187,7)" fg:x="14128" fg:w="22"/><text x="13.7401%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (44 samples, 0.04%)</title><rect x="13.4796%" y="581" width="0.0420%" height="15" fill="rgb(228,66,33)" fg:x="14117" fg:w="44"/><text x="13.7296%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (44 samples, 0.04%)</title><rect x="13.4796%" y="565" width="0.0420%" height="15" fill="rgb(234,215,21)" fg:x="14117" fg:w="44"/><text x="13.7296%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (43 samples, 0.04%)</title><rect x="13.4805%" y="549" width="0.0411%" height="15" fill="rgb(222,191,20)" fg:x="14118" fg:w="43"/><text x="13.7305%" y="559.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="13.5111%" y="533" width="0.0105%" height="15" fill="rgb(245,79,54)" fg:x="14150" fg:w="11"/><text x="13.7611%" y="543.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="13.5111%" y="517" width="0.0105%" height="15" fill="rgb(240,10,37)" fg:x="14150" fg:w="11"/><text x="13.7611%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (51 samples, 0.05%)</title><rect x="13.4796%" y="597" width="0.0487%" height="15" fill="rgb(214,192,32)" fg:x="14117" fg:w="51"/><text x="13.7296%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (64 samples, 0.06%)</title><rect x="13.4767%" y="613" width="0.0611%" height="15" fill="rgb(209,36,54)" fg:x="14114" fg:w="64"/><text x="13.7267%" y="623.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (18 samples, 0.02%)</title><rect x="13.5521%" y="597" width="0.0172%" height="15" fill="rgb(220,10,11)" fg:x="14193" fg:w="18"/><text x="13.8021%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (319 samples, 0.30%)</title><rect x="13.4767%" y="645" width="0.3046%" height="15" fill="rgb(221,106,17)" fg:x="14114" fg:w="319"/><text x="13.7267%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (319 samples, 0.30%)</title><rect x="13.4767%" y="629" width="0.3046%" height="15" fill="rgb(251,142,44)" fg:x="14114" fg:w="319"/><text x="13.7267%" y="639.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (255 samples, 0.24%)</title><rect x="13.5378%" y="613" width="0.2435%" height="15" fill="rgb(238,13,15)" fg:x="14178" fg:w="255"/><text x="13.7878%" y="623.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (222 samples, 0.21%)</title><rect x="13.5693%" y="597" width="0.2120%" height="15" fill="rgb(208,107,27)" fg:x="14211" fg:w="222"/><text x="13.8193%" y="607.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (222 samples, 0.21%)</title><rect x="13.5693%" y="581" width="0.2120%" height="15" fill="rgb(205,136,37)" fg:x="14211" fg:w="222"/><text x="13.8193%" y="591.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (222 samples, 0.21%)</title><rect x="13.5693%" y="565" width="0.2120%" height="15" fill="rgb(250,205,27)" fg:x="14211" fg:w="222"/><text x="13.8193%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (33 samples, 0.03%)</title><rect x="13.7908%" y="613" width="0.0315%" height="15" fill="rgb(210,80,43)" fg:x="14443" fg:w="33"/><text x="14.0408%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (32 samples, 0.03%)</title><rect x="13.7918%" y="597" width="0.0306%" height="15" fill="rgb(247,160,36)" fg:x="14444" fg:w="32"/><text x="14.0418%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="13.7918%" y="581" width="0.0306%" height="15" fill="rgb(234,13,49)" fg:x="14444" fg:w="32"/><text x="14.0418%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (37 samples, 0.04%)</title><rect x="13.8223%" y="613" width="0.0353%" height="15" fill="rgb(234,122,0)" fg:x="14476" fg:w="37"/><text x="14.0723%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (37 samples, 0.04%)</title><rect x="13.8223%" y="597" width="0.0353%" height="15" fill="rgb(207,146,38)" fg:x="14476" fg:w="37"/><text x="14.0723%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="13.7813%" y="645" width="0.0821%" height="15" fill="rgb(207,177,25)" fg:x="14433" fg:w="86"/><text x="14.0313%" y="655.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (78 samples, 0.07%)</title><rect x="13.7889%" y="629" width="0.0745%" height="15" fill="rgb(211,178,42)" fg:x="14441" fg:w="78"/><text x="14.0389%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (19 samples, 0.02%)</title><rect x="13.8672%" y="597" width="0.0181%" height="15" fill="rgb(230,69,54)" fg:x="14523" fg:w="19"/><text x="14.1172%" y="607.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (16 samples, 0.02%)</title><rect x="13.8701%" y="581" width="0.0153%" height="15" fill="rgb(214,135,41)" fg:x="14526" fg:w="16"/><text x="14.1201%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="13.8663%" y="613" width="0.0267%" height="15" fill="rgb(237,67,25)" fg:x="14522" fg:w="28"/><text x="14.1163%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="13.8634%" y="645" width="0.0306%" height="15" fill="rgb(222,189,50)" fg:x="14519" fg:w="32"/><text x="14.1134%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="13.8653%" y="629" width="0.0286%" height="15" fill="rgb(245,148,34)" fg:x="14521" fg:w="30"/><text x="14.1153%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::empty (23 samples, 0.02%)</title><rect x="13.8940%" y="645" width="0.0220%" height="15" fill="rgb(222,29,6)" fg:x="14551" fg:w="23"/><text x="14.1440%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (23 samples, 0.02%)</title><rect x="13.8940%" y="629" width="0.0220%" height="15" fill="rgb(221,189,43)" fg:x="14551" fg:w="23"/><text x="14.1440%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (746 samples, 0.71%)</title><rect x="13.4471%" y="693" width="0.7123%" height="15" fill="rgb(207,36,27)" fg:x="14083" fg:w="746"/><text x="13.6971%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (746 samples, 0.71%)</title><rect x="13.4471%" y="677" width="0.7123%" height="15" fill="rgb(217,90,24)" fg:x="14083" fg:w="746"/><text x="13.6971%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (734 samples, 0.70%)</title><rect x="13.4585%" y="661" width="0.7009%" height="15" fill="rgb(224,66,35)" fg:x="14095" fg:w="734"/><text x="13.7085%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (255 samples, 0.24%)</title><rect x="13.9159%" y="645" width="0.2435%" height="15" fill="rgb(221,13,50)" fg:x="14574" fg:w="255"/><text x="14.1659%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (255 samples, 0.24%)</title><rect x="13.9159%" y="629" width="0.2435%" height="15" fill="rgb(236,68,49)" fg:x="14574" fg:w="255"/><text x="14.1659%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,064 samples, 1.97%)</title><rect x="12.2096%" y="725" width="1.9708%" height="15" fill="rgb(229,146,28)" fg:x="12787" fg:w="2064"/><text x="12.4596%" y="735.50">&lt;..</text></g><g><title>rust_alloc (780 samples, 0.74%)</title><rect x="13.4356%" y="709" width="0.7448%" height="15" fill="rgb(225,31,38)" fg:x="14071" fg:w="780"/><text x="13.6856%" y="719.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (22 samples, 0.02%)</title><rect x="14.1594%" y="693" width="0.0210%" height="15" fill="rgb(250,208,3)" fg:x="14829" fg:w="22"/><text x="14.4094%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="14.4659%" y="549" width="0.0115%" height="15" fill="rgb(246,54,23)" fg:x="15150" fg:w="12"/><text x="14.7159%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (12 samples, 0.01%)</title><rect x="14.4659%" y="533" width="0.0115%" height="15" fill="rgb(243,76,11)" fg:x="15150" fg:w="12"/><text x="14.7159%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::empty (22 samples, 0.02%)</title><rect x="14.4840%" y="549" width="0.0210%" height="15" fill="rgb(245,21,50)" fg:x="15169" fg:w="22"/><text x="14.7340%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (22 samples, 0.02%)</title><rect x="14.4840%" y="533" width="0.0210%" height="15" fill="rgb(228,9,43)" fg:x="15169" fg:w="22"/><text x="14.7340%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (440 samples, 0.42%)</title><rect x="14.4497%" y="597" width="0.4201%" height="15" fill="rgb(208,100,47)" fg:x="15133" fg:w="440"/><text x="14.6997%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (440 samples, 0.42%)</title><rect x="14.4497%" y="581" width="0.4201%" height="15" fill="rgb(232,26,8)" fg:x="15133" fg:w="440"/><text x="14.6997%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (429 samples, 0.41%)</title><rect x="14.4602%" y="565" width="0.4096%" height="15" fill="rgb(216,166,38)" fg:x="15144" fg:w="429"/><text x="14.7102%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (382 samples, 0.36%)</title><rect x="14.5051%" y="549" width="0.3648%" height="15" fill="rgb(251,202,51)" fg:x="15191" fg:w="382"/><text x="14.7551%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (382 samples, 0.36%)</title><rect x="14.5051%" y="533" width="0.3648%" height="15" fill="rgb(254,216,34)" fg:x="15191" fg:w="382"/><text x="14.7551%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (464 samples, 0.44%)</title><rect x="14.4306%" y="709" width="0.4430%" height="15" fill="rgb(251,32,27)" fg:x="15113" fg:w="464"/><text x="14.6806%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (464 samples, 0.44%)</title><rect x="14.4306%" y="693" width="0.4430%" height="15" fill="rgb(208,127,28)" fg:x="15113" fg:w="464"/><text x="14.6806%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (464 samples, 0.44%)</title><rect x="14.4306%" y="677" width="0.4430%" height="15" fill="rgb(224,137,22)" fg:x="15113" fg:w="464"/><text x="14.6806%" y="687.50"></text></g><g><title>alloc::alloc::alloc (463 samples, 0.44%)</title><rect x="14.4315%" y="661" width="0.4421%" height="15" fill="rgb(254,70,32)" fg:x="15114" fg:w="463"/><text x="14.6815%" y="671.50"></text></g><g><title>__rg_alloc (463 samples, 0.44%)</title><rect x="14.4315%" y="645" width="0.4421%" height="15" fill="rgb(229,75,37)" fg:x="15114" fg:w="463"/><text x="14.6815%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (463 samples, 0.44%)</title><rect x="14.4315%" y="629" width="0.4421%" height="15" fill="rgb(252,64,23)" fg:x="15114" fg:w="463"/><text x="14.6815%" y="639.50"></text></g><g><title>rust_alloc (463 samples, 0.44%)</title><rect x="14.4315%" y="613" width="0.4421%" height="15" fill="rgb(232,162,48)" fg:x="15114" fg:w="463"/><text x="14.6815%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="14.8822%" y="709" width="0.0124%" height="15" fill="rgb(246,160,12)" fg:x="15586" fg:w="13"/><text x="15.1322%" y="719.50"></text></g><g><title>core::time::Duration::as_nanos (12 samples, 0.01%)</title><rect x="14.9357%" y="693" width="0.0115%" height="15" fill="rgb(247,166,0)" fg:x="15642" fg:w="12"/><text x="15.1857%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (71 samples, 0.07%)</title><rect x="15.0130%" y="645" width="0.0678%" height="15" fill="rgb(249,219,21)" fg:x="15723" fg:w="71"/><text x="15.2630%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (71 samples, 0.07%)</title><rect x="15.0130%" y="629" width="0.0678%" height="15" fill="rgb(205,209,3)" fg:x="15723" fg:w="71"/><text x="15.2630%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (68 samples, 0.06%)</title><rect x="15.0159%" y="613" width="0.0649%" height="15" fill="rgb(243,44,1)" fg:x="15726" fg:w="68"/><text x="15.2659%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (68 samples, 0.06%)</title><rect x="15.0159%" y="597" width="0.0649%" height="15" fill="rgb(206,159,16)" fg:x="15726" fg:w="68"/><text x="15.2659%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (68 samples, 0.06%)</title><rect x="15.0159%" y="581" width="0.0649%" height="15" fill="rgb(244,77,30)" fg:x="15726" fg:w="68"/><text x="15.2659%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (39 samples, 0.04%)</title><rect x="15.0436%" y="565" width="0.0372%" height="15" fill="rgb(218,69,12)" fg:x="15755" fg:w="39"/><text x="15.2936%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (161 samples, 0.15%)</title><rect x="14.9471%" y="677" width="0.1537%" height="15" fill="rgb(212,87,7)" fg:x="15654" fg:w="161"/><text x="15.1971%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (161 samples, 0.15%)</title><rect x="14.9471%" y="661" width="0.1537%" height="15" fill="rgb(245,114,25)" fg:x="15654" fg:w="161"/><text x="15.1971%" y="671.50"></text></g><g><title>core::time::Duration::new (21 samples, 0.02%)</title><rect x="15.0808%" y="645" width="0.0201%" height="15" fill="rgb(210,61,42)" fg:x="15794" fg:w="21"/><text x="15.3308%" y="655.50"></text></g><g><title>std::time::SystemTime::duration_since (172 samples, 0.16%)</title><rect x="14.9471%" y="693" width="0.1642%" height="15" fill="rgb(211,52,33)" fg:x="15654" fg:w="172"/><text x="15.1971%" y="703.50"></text></g><g><title>tremor_common::time::nanotime (11 samples, 0.01%)</title><rect x="15.1009%" y="677" width="0.0105%" height="15" fill="rgb(234,58,33)" fg:x="15815" fg:w="11"/><text x="15.3509%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,614 samples, 8.23%)</title><rect x="7.5500%" y="821" width="8.2250%" height="15" fill="rgb(220,115,36)" fg:x="7907" fg:w="8614"/><text x="7.8000%" y="831.50">tremor_runt..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,734 samples, 3.57%)</title><rect x="12.2096%" y="805" width="3.5654%" height="15" fill="rgb(243,153,54)" fg:x="12787" fg:w="3734"/><text x="12.4596%" y="815.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,734 samples, 3.57%)</title><rect x="12.2096%" y="789" width="3.5654%" height="15" fill="rgb(251,47,18)" fg:x="12787" fg:w="3734"/><text x="12.4596%" y="799.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,734 samples, 3.57%)</title><rect x="12.2096%" y="773" width="3.5654%" height="15" fill="rgb(242,102,42)" fg:x="12787" fg:w="3734"/><text x="12.4596%" y="783.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,734 samples, 3.57%)</title><rect x="12.2096%" y="757" width="3.5654%" height="15" fill="rgb(234,31,38)" fg:x="12787" fg:w="3734"/><text x="12.4596%" y="767.50">trem..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,734 samples, 3.57%)</title><rect x="12.2096%" y="741" width="3.5654%" height="15" fill="rgb(221,117,51)" fg:x="12787" fg:w="3734"/><text x="12.4596%" y="751.50">trem..</text></g><g><title>tremor_runtime::postprocessor::postprocess (1,670 samples, 1.59%)</title><rect x="14.1804%" y="725" width="1.5946%" height="15" fill="rgb(212,20,18)" fg:x="14851" fg:w="1670"/><text x="14.4304%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (907 samples, 0.87%)</title><rect x="14.9090%" y="709" width="0.8660%" height="15" fill="rgb(245,133,36)" fg:x="15614" fg:w="907"/><text x="15.1590%" y="719.50"></text></g><g><title>std::time::SystemTime::now (695 samples, 0.66%)</title><rect x="15.1114%" y="693" width="0.6636%" height="15" fill="rgb(212,6,19)" fg:x="15826" fg:w="695"/><text x="15.3614%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (695 samples, 0.66%)</title><rect x="15.1114%" y="677" width="0.6636%" height="15" fill="rgb(218,1,36)" fg:x="15826" fg:w="695"/><text x="15.3614%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::now (695 samples, 0.66%)</title><rect x="15.1114%" y="661" width="0.6636%" height="15" fill="rgb(246,84,54)" fg:x="15826" fg:w="695"/><text x="15.3614%" y="671.50"></text></g><g><title>__clock_gettime_2 (557 samples, 0.53%)</title><rect x="15.2432%" y="645" width="0.5318%" height="15" fill="rgb(242,110,6)" fg:x="15964" fg:w="557"/><text x="15.4932%" y="655.50"></text></g><g><title>__vdso_clock_gettime (542 samples, 0.52%)</title><rect x="15.2575%" y="629" width="0.5175%" height="15" fill="rgb(214,47,5)" fg:x="15979" fg:w="542"/><text x="15.5075%" y="639.50"></text></g><g><title>[[vdso]] (379 samples, 0.36%)</title><rect x="15.4131%" y="613" width="0.3619%" height="15" fill="rgb(218,159,25)" fg:x="16142" fg:w="379"/><text x="15.6631%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="15.7788%" y="757" width="0.0115%" height="15" fill="rgb(215,211,28)" fg:x="16525" fg:w="12"/><text x="16.0288%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (348 samples, 0.33%)</title><rect x="16.0500%" y="741" width="0.3323%" height="15" fill="rgb(238,59,32)" fg:x="16809" fg:w="348"/><text x="16.3000%" y="751.50"></text></g><g><title>core::ptr::read (333 samples, 0.32%)</title><rect x="16.0643%" y="725" width="0.3180%" height="15" fill="rgb(226,82,3)" fg:x="16824" fg:w="333"/><text x="16.3143%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (322 samples, 0.31%)</title><rect x="16.0748%" y="709" width="0.3075%" height="15" fill="rgb(240,164,32)" fg:x="16835" fg:w="322"/><text x="16.3248%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="16.3823%" y="741" width="0.0115%" height="15" fill="rgb(232,46,7)" fg:x="17157" fg:w="12"/><text x="16.6323%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (12 samples, 0.01%)</title><rect x="16.3823%" y="725" width="0.0115%" height="15" fill="rgb(229,129,53)" fg:x="17157" fg:w="12"/><text x="16.6323%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (175 samples, 0.17%)</title><rect x="16.4472%" y="725" width="0.1671%" height="15" fill="rgb(234,188,29)" fg:x="17225" fg:w="175"/><text x="16.6972%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (63 samples, 0.06%)</title><rect x="16.7766%" y="677" width="0.0602%" height="15" fill="rgb(246,141,4)" fg:x="17570" fg:w="63"/><text x="17.0266%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (400 samples, 0.38%)</title><rect x="16.9542%" y="661" width="0.3819%" height="15" fill="rgb(229,23,39)" fg:x="17756" fg:w="400"/><text x="17.2042%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (400 samples, 0.38%)</title><rect x="16.9542%" y="645" width="0.3819%" height="15" fill="rgb(206,12,3)" fg:x="17756" fg:w="400"/><text x="17.2042%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (495 samples, 0.47%)</title><rect x="17.3362%" y="661" width="0.4726%" height="15" fill="rgb(252,226,20)" fg:x="18156" fg:w="495"/><text x="17.5862%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (492 samples, 0.47%)</title><rect x="17.3390%" y="645" width="0.4698%" height="15" fill="rgb(216,123,35)" fg:x="18159" fg:w="492"/><text x="17.5890%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,026 samples, 0.98%)</title><rect x="16.8368%" y="677" width="0.9797%" height="15" fill="rgb(212,68,40)" fg:x="17633" fg:w="1026"/><text x="17.0868%" y="687.50"></text></g><g><title>_raw_spin_lock (26 samples, 0.02%)</title><rect x="17.9606%" y="469" width="0.0248%" height="15" fill="rgb(254,125,32)" fg:x="18810" fg:w="26"/><text x="18.2106%" y="479.50"></text></g><g><title>__futex_unqueue (11 samples, 0.01%)</title><rect x="17.9979%" y="453" width="0.0105%" height="15" fill="rgb(253,97,22)" fg:x="18849" fg:w="11"/><text x="18.2479%" y="463.50"></text></g><g><title>futex_wake_mark (22 samples, 0.02%)</title><rect x="17.9883%" y="469" width="0.0210%" height="15" fill="rgb(241,101,14)" fg:x="18839" fg:w="22"/><text x="18.2383%" y="479.50"></text></g><g><title>ttwu_do_activate (15 samples, 0.01%)</title><rect x="18.0504%" y="437" width="0.0143%" height="15" fill="rgb(238,103,29)" fg:x="18904" fg:w="15"/><text x="18.3004%" y="447.50"></text></g><g><title>enqueue_task (14 samples, 0.01%)</title><rect x="18.0514%" y="421" width="0.0134%" height="15" fill="rgb(233,195,47)" fg:x="18905" fg:w="14"/><text x="18.3014%" y="431.50"></text></g><g><title>__smp_call_single_queue (18 samples, 0.02%)</title><rect x="18.0876%" y="421" width="0.0172%" height="15" fill="rgb(246,218,30)" fg:x="18943" fg:w="18"/><text x="18.3376%" y="431.50"></text></g><g><title>llist_add_batch (18 samples, 0.02%)</title><rect x="18.0876%" y="405" width="0.0172%" height="15" fill="rgb(219,145,47)" fg:x="18943" fg:w="18"/><text x="18.3376%" y="415.50"></text></g><g><title>__x2apic_send_IPI_dest (23 samples, 0.02%)</title><rect x="18.1048%" y="421" width="0.0220%" height="15" fill="rgb(243,12,26)" fg:x="18961" fg:w="23"/><text x="18.3548%" y="431.50"></text></g><g><title>native_write_msr (21 samples, 0.02%)</title><rect x="18.1067%" y="405" width="0.0201%" height="15" fill="rgb(214,87,16)" fg:x="18963" fg:w="21"/><text x="18.3567%" y="415.50"></text></g><g><title>ttwu_queue_wakelist (88 samples, 0.08%)</title><rect x="18.0657%" y="437" width="0.0840%" height="15" fill="rgb(208,99,42)" fg:x="18920" fg:w="88"/><text x="18.3157%" y="447.50"></text></g><g><title>x2apic_send_IPI (16 samples, 0.02%)</title><rect x="18.1344%" y="421" width="0.0153%" height="15" fill="rgb(253,99,2)" fg:x="18992" fg:w="16"/><text x="18.3844%" y="431.50"></text></g><g><title>__x64_sys_futex (247 samples, 0.24%)</title><rect x="17.9167%" y="517" width="0.2358%" height="15" fill="rgb(220,168,23)" fg:x="18764" fg:w="247"/><text x="18.1667%" y="527.50"></text></g><g><title>do_futex (234 samples, 0.22%)</title><rect x="17.9291%" y="501" width="0.2234%" height="15" fill="rgb(242,38,24)" fg:x="18777" fg:w="234"/><text x="18.1791%" y="511.50"></text></g><g><title>futex_wake (230 samples, 0.22%)</title><rect x="17.9330%" y="485" width="0.2196%" height="15" fill="rgb(225,182,9)" fg:x="18781" fg:w="230"/><text x="18.1830%" y="495.50"></text></g><g><title>wake_up_q (140 samples, 0.13%)</title><rect x="18.0189%" y="469" width="0.1337%" height="15" fill="rgb(243,178,37)" fg:x="18871" fg:w="140"/><text x="18.2689%" y="479.50"></text></g><g><title>try_to_wake_up (129 samples, 0.12%)</title><rect x="18.0294%" y="453" width="0.1232%" height="15" fill="rgb(232,139,19)" fg:x="18882" fg:w="129"/><text x="18.2794%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (137 samples, 0.13%)</title><rect x="18.1545%" y="517" width="0.1308%" height="15" fill="rgb(225,201,24)" fg:x="19013" fg:w="137"/><text x="18.4045%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (396 samples, 0.38%)</title><rect x="17.9100%" y="549" width="0.3781%" height="15" fill="rgb(221,47,46)" fg:x="18757" fg:w="396"/><text x="18.1600%" y="559.50"></text></g><g><title>do_syscall_64 (393 samples, 0.38%)</title><rect x="17.9129%" y="533" width="0.3753%" height="15" fill="rgb(249,23,13)" fg:x="18760" fg:w="393"/><text x="18.1629%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (482 samples, 0.46%)</title><rect x="17.8365%" y="661" width="0.4602%" height="15" fill="rgb(219,9,5)" fg:x="18680" fg:w="482"/><text x="18.0865%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (480 samples, 0.46%)</title><rect x="17.8384%" y="645" width="0.4583%" height="15" fill="rgb(254,171,16)" fg:x="18682" fg:w="480"/><text x="18.0884%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (480 samples, 0.46%)</title><rect x="17.8384%" y="629" width="0.4583%" height="15" fill="rgb(230,171,20)" fg:x="18682" fg:w="480"/><text x="18.0884%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (479 samples, 0.46%)</title><rect x="17.8394%" y="613" width="0.4574%" height="15" fill="rgb(210,71,41)" fg:x="18683" fg:w="479"/><text x="18.0894%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (476 samples, 0.45%)</title><rect x="17.8422%" y="597" width="0.4545%" height="15" fill="rgb(206,173,20)" fg:x="18686" fg:w="476"/><text x="18.0922%" y="607.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (476 samples, 0.45%)</title><rect x="17.8422%" y="581" width="0.4545%" height="15" fill="rgb(233,88,34)" fg:x="18686" fg:w="476"/><text x="18.0922%" y="591.50"></text></g><g><title>__GI___lll_lock_wake (420 samples, 0.40%)</title><rect x="17.8957%" y="565" width="0.4010%" height="15" fill="rgb(223,209,46)" fg:x="18742" fg:w="420"/><text x="18.1457%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.03%)</title><rect x="18.2967%" y="661" width="0.0344%" height="15" fill="rgb(250,43,18)" fg:x="19162" fg:w="36"/><text x="18.5467%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.03%)</title><rect x="18.2967%" y="645" width="0.0344%" height="15" fill="rgb(208,13,10)" fg:x="19162" fg:w="36"/><text x="18.5467%" y="655.50"></text></g><g><title>futex_get_value_locked (11 samples, 0.01%)</title><rect x="18.4486%" y="469" width="0.0105%" height="15" fill="rgb(212,200,36)" fg:x="19321" fg:w="11"/><text x="18.6986%" y="479.50"></text></g><g><title>__get_user_nocheck_4 (11 samples, 0.01%)</title><rect x="18.4486%" y="453" width="0.0105%" height="15" fill="rgb(225,90,30)" fg:x="19321" fg:w="11"/><text x="18.6986%" y="463.50"></text></g><g><title>__x64_sys_futex (32 samples, 0.03%)</title><rect x="18.4409%" y="533" width="0.0306%" height="15" fill="rgb(236,182,39)" fg:x="19313" fg:w="32"/><text x="18.6909%" y="543.50"></text></g><g><title>do_futex (31 samples, 0.03%)</title><rect x="18.4419%" y="517" width="0.0296%" height="15" fill="rgb(212,144,35)" fg:x="19314" fg:w="31"/><text x="18.6919%" y="527.50"></text></g><g><title>futex_wait (31 samples, 0.03%)</title><rect x="18.4419%" y="501" width="0.0296%" height="15" fill="rgb(228,63,44)" fg:x="19314" fg:w="31"/><text x="18.6919%" y="511.50"></text></g><g><title>futex_wait_setup (27 samples, 0.03%)</title><rect x="18.4457%" y="485" width="0.0258%" height="15" fill="rgb(228,109,6)" fg:x="19318" fg:w="27"/><text x="18.6957%" y="495.50"></text></g><g><title>syscall_exit_to_user_mode (25 samples, 0.02%)</title><rect x="18.4715%" y="533" width="0.0239%" height="15" fill="rgb(238,117,24)" fg:x="19345" fg:w="25"/><text x="18.7215%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (62 samples, 0.06%)</title><rect x="18.4390%" y="565" width="0.0592%" height="15" fill="rgb(242,26,26)" fg:x="19311" fg:w="62"/><text x="18.6890%" y="575.50"></text></g><g><title>do_syscall_64 (62 samples, 0.06%)</title><rect x="18.4390%" y="549" width="0.0592%" height="15" fill="rgb(221,92,48)" fg:x="19311" fg:w="62"/><text x="18.6890%" y="559.50"></text></g><g><title>event_listener::Inner::lock (172 samples, 0.16%)</title><rect x="18.3349%" y="661" width="0.1642%" height="15" fill="rgb(209,209,32)" fg:x="19202" fg:w="172"/><text x="18.5849%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (172 samples, 0.16%)</title><rect x="18.3349%" y="645" width="0.1642%" height="15" fill="rgb(221,70,22)" fg:x="19202" fg:w="172"/><text x="18.5849%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (163 samples, 0.16%)</title><rect x="18.3435%" y="629" width="0.1556%" height="15" fill="rgb(248,145,5)" fg:x="19211" fg:w="163"/><text x="18.5935%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (157 samples, 0.15%)</title><rect x="18.3493%" y="613" width="0.1499%" height="15" fill="rgb(226,116,26)" fg:x="19217" fg:w="157"/><text x="18.5993%" y="623.50"></text></g><g><title>___pthread_mutex_lock (157 samples, 0.15%)</title><rect x="18.3493%" y="597" width="0.1499%" height="15" fill="rgb(244,5,17)" fg:x="19217" fg:w="157"/><text x="18.5993%" y="607.50"></text></g><g><title>__GI___lll_lock_wait (80 samples, 0.08%)</title><rect x="18.4228%" y="581" width="0.0764%" height="15" fill="rgb(252,159,33)" fg:x="19294" fg:w="80"/><text x="18.6728%" y="591.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,692 samples, 2.57%)</title><rect x="16.7403%" y="693" width="2.5704%" height="15" fill="rgb(206,71,0)" fg:x="17532" fg:w="2692"/><text x="16.9903%" y="703.50">as..</text></g><g><title>event_listener::Event::notify (1,565 samples, 1.49%)</title><rect x="17.8165%" y="677" width="1.4943%" height="15" fill="rgb(233,118,54)" fg:x="18659" fg:w="1565"/><text x="18.0665%" y="687.50"></text></g><g><title>event_listener::full_fence (850 samples, 0.81%)</title><rect x="18.4992%" y="661" width="0.8116%" height="15" fill="rgb(234,83,48)" fg:x="19374" fg:w="850"/><text x="18.7492%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (823 samples, 0.79%)</title><rect x="18.5250%" y="645" width="0.7858%" height="15" fill="rgb(228,3,54)" fg:x="19401" fg:w="823"/><text x="18.7750%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (823 samples, 0.79%)</title><rect x="18.5250%" y="629" width="0.7858%" height="15" fill="rgb(226,155,13)" fg:x="19401" fg:w="823"/><text x="18.7750%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (823 samples, 0.79%)</title><rect x="18.5250%" y="613" width="0.7858%" height="15" fill="rgb(241,28,37)" fg:x="19401" fg:w="823"/><text x="18.7750%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (21 samples, 0.02%)</title><rect x="19.3108%" y="693" width="0.0201%" height="15" fill="rgb(233,93,10)" fg:x="20224" fg:w="21"/><text x="19.5608%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (11 samples, 0.01%)</title><rect x="19.3595%" y="533" width="0.0105%" height="15" fill="rgb(225,113,19)" fg:x="20275" fg:w="11"/><text x="19.6095%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.02%)</title><rect x="19.3547%" y="565" width="0.0162%" height="15" fill="rgb(241,2,18)" fg:x="20270" fg:w="17"/><text x="19.6047%" y="575.50"></text></g><g><title>do_syscall_64 (17 samples, 0.02%)</title><rect x="19.3547%" y="549" width="0.0162%" height="15" fill="rgb(228,207,21)" fg:x="20270" fg:w="17"/><text x="19.6047%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (24 samples, 0.02%)</title><rect x="19.3490%" y="677" width="0.0229%" height="15" fill="rgb(213,211,35)" fg:x="20264" fg:w="24"/><text x="19.5990%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (24 samples, 0.02%)</title><rect x="19.3490%" y="661" width="0.0229%" height="15" fill="rgb(209,83,10)" fg:x="20264" fg:w="24"/><text x="19.5990%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="19.3490%" y="645" width="0.0229%" height="15" fill="rgb(209,164,1)" fg:x="20264" fg:w="24"/><text x="19.5990%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (23 samples, 0.02%)</title><rect x="19.3499%" y="629" width="0.0220%" height="15" fill="rgb(213,184,43)" fg:x="20265" fg:w="23"/><text x="19.5999%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (23 samples, 0.02%)</title><rect x="19.3499%" y="613" width="0.0220%" height="15" fill="rgb(231,61,34)" fg:x="20265" fg:w="23"/><text x="19.5999%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (23 samples, 0.02%)</title><rect x="19.3499%" y="597" width="0.0220%" height="15" fill="rgb(235,75,3)" fg:x="20265" fg:w="23"/><text x="19.5999%" y="607.50"></text></g><g><title>__GI___lll_lock_wake (21 samples, 0.02%)</title><rect x="19.3519%" y="581" width="0.0201%" height="15" fill="rgb(220,106,47)" fg:x="20267" fg:w="21"/><text x="19.6019%" y="591.50"></text></g><g><title>futex_wait_queue (25 samples, 0.02%)</title><rect x="19.3843%" y="501" width="0.0239%" height="15" fill="rgb(210,196,33)" fg:x="20301" fg:w="25"/><text x="19.6343%" y="511.50"></text></g><g><title>schedule (25 samples, 0.02%)</title><rect x="19.3843%" y="485" width="0.0239%" height="15" fill="rgb(229,154,42)" fg:x="20301" fg:w="25"/><text x="19.6343%" y="495.50"></text></g><g><title>__schedule (25 samples, 0.02%)</title><rect x="19.3843%" y="469" width="0.0239%" height="15" fill="rgb(228,114,26)" fg:x="20301" fg:w="25"/><text x="19.6343%" y="479.50"></text></g><g><title>__x64_sys_futex (31 samples, 0.03%)</title><rect x="19.3824%" y="549" width="0.0296%" height="15" fill="rgb(208,144,1)" fg:x="20299" fg:w="31"/><text x="19.6324%" y="559.50"></text></g><g><title>do_futex (31 samples, 0.03%)</title><rect x="19.3824%" y="533" width="0.0296%" height="15" fill="rgb(239,112,37)" fg:x="20299" fg:w="31"/><text x="19.6324%" y="543.50"></text></g><g><title>futex_wait (30 samples, 0.03%)</title><rect x="19.3834%" y="517" width="0.0286%" height="15" fill="rgb(210,96,50)" fg:x="20300" fg:w="30"/><text x="19.6334%" y="527.50"></text></g><g><title>event_listener::Inner::lock (50 samples, 0.05%)</title><rect x="19.3767%" y="677" width="0.0477%" height="15" fill="rgb(222,178,2)" fg:x="20293" fg:w="50"/><text x="19.6267%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.05%)</title><rect x="19.3767%" y="661" width="0.0477%" height="15" fill="rgb(226,74,18)" fg:x="20293" fg:w="50"/><text x="19.6267%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (48 samples, 0.05%)</title><rect x="19.3786%" y="645" width="0.0458%" height="15" fill="rgb(225,67,54)" fg:x="20295" fg:w="48"/><text x="19.6286%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (48 samples, 0.05%)</title><rect x="19.3786%" y="629" width="0.0458%" height="15" fill="rgb(251,92,32)" fg:x="20295" fg:w="48"/><text x="19.6286%" y="639.50"></text></g><g><title>___pthread_mutex_lock (48 samples, 0.05%)</title><rect x="19.3786%" y="613" width="0.0458%" height="15" fill="rgb(228,149,22)" fg:x="20295" fg:w="48"/><text x="19.6286%" y="623.50"></text></g><g><title>__GI___lll_lock_wait (46 samples, 0.04%)</title><rect x="19.3805%" y="597" width="0.0439%" height="15" fill="rgb(243,54,13)" fg:x="20297" fg:w="46"/><text x="19.6305%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44 samples, 0.04%)</title><rect x="19.3824%" y="581" width="0.0420%" height="15" fill="rgb(243,180,28)" fg:x="20299" fg:w="44"/><text x="19.6324%" y="591.50"></text></g><g><title>do_syscall_64 (44 samples, 0.04%)</title><rect x="19.3824%" y="565" width="0.0420%" height="15" fill="rgb(208,167,24)" fg:x="20299" fg:w="44"/><text x="19.6324%" y="575.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,098 samples, 2.96%)</title><rect x="16.6878%" y="709" width="2.9581%" height="15" fill="rgb(245,73,45)" fg:x="17477" fg:w="3098"/><text x="16.9378%" y="719.50">&lt;as..</text></g><g><title>event_listener::Event::notify (319 samples, 0.30%)</title><rect x="19.3413%" y="693" width="0.3046%" height="15" fill="rgb(237,203,48)" fg:x="20256" fg:w="319"/><text x="19.5913%" y="703.50"></text></g><g><title>event_listener::full_fence (232 samples, 0.22%)</title><rect x="19.4244%" y="677" width="0.2215%" height="15" fill="rgb(211,197,16)" fg:x="20343" fg:w="232"/><text x="19.6744%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (224 samples, 0.21%)</title><rect x="19.4321%" y="661" width="0.2139%" height="15" fill="rgb(243,99,51)" fg:x="20351" fg:w="224"/><text x="19.6821%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (224 samples, 0.21%)</title><rect x="19.4321%" y="645" width="0.2139%" height="15" fill="rgb(215,123,29)" fg:x="20351" fg:w="224"/><text x="19.6821%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (224 samples, 0.21%)</title><rect x="19.4321%" y="629" width="0.2139%" height="15" fill="rgb(239,186,37)" fg:x="20351" fg:w="224"/><text x="19.6821%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,437 samples, 3.28%)</title><rect x="16.3937%" y="741" width="3.2818%" height="15" fill="rgb(252,136,39)" fg:x="17169" fg:w="3437"/><text x="16.6437%" y="751.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (3,206 samples, 3.06%)</title><rect x="16.6143%" y="725" width="3.0612%" height="15" fill="rgb(223,213,32)" fg:x="17400" fg:w="3206"/><text x="16.8643%" y="735.50">tre..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="19.6459%" y="709" width="0.0296%" height="15" fill="rgb(233,115,5)" fg:x="20575" fg:w="31"/><text x="19.8959%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (12 samples, 0.01%)</title><rect x="19.6641%" y="693" width="0.0115%" height="15" fill="rgb(207,226,44)" fg:x="20594" fg:w="12"/><text x="19.9141%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (11 samples, 0.01%)</title><rect x="19.6650%" y="677" width="0.0105%" height="15" fill="rgb(208,126,0)" fg:x="20595" fg:w="11"/><text x="19.9150%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="19.6755%" y="741" width="0.0115%" height="15" fill="rgb(244,66,21)" fg:x="20606" fg:w="12"/><text x="19.9255%" y="751.50"></text></g><g><title>rust_alloc (51 samples, 0.05%)</title><rect x="19.7013%" y="437" width="0.0487%" height="15" fill="rgb(222,97,12)" fg:x="20633" fg:w="51"/><text x="19.9513%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.05%)</title><rect x="19.7643%" y="421" width="0.0468%" height="15" fill="rgb(219,213,19)" fg:x="20699" fg:w="49"/><text x="20.0143%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (49 samples, 0.05%)</title><rect x="19.7643%" y="405" width="0.0468%" height="15" fill="rgb(252,169,30)" fg:x="20699" fg:w="49"/><text x="20.0143%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (39 samples, 0.04%)</title><rect x="19.7739%" y="389" width="0.0372%" height="15" fill="rgb(206,32,51)" fg:x="20709" fg:w="39"/><text x="20.0239%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (28 samples, 0.03%)</title><rect x="19.7844%" y="373" width="0.0267%" height="15" fill="rgb(250,172,42)" fg:x="20720" fg:w="28"/><text x="20.0344%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="19.7844%" y="357" width="0.0267%" height="15" fill="rgb(209,34,43)" fg:x="20720" fg:w="28"/><text x="20.0344%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (28 samples, 0.03%)</title><rect x="19.7844%" y="341" width="0.0267%" height="15" fill="rgb(223,11,35)" fg:x="20720" fg:w="28"/><text x="20.0344%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (93 samples, 0.09%)</title><rect x="19.8150%" y="421" width="0.0888%" height="15" fill="rgb(251,219,26)" fg:x="20752" fg:w="93"/><text x="20.0650%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (93 samples, 0.09%)</title><rect x="19.8150%" y="405" width="0.0888%" height="15" fill="rgb(231,119,3)" fg:x="20752" fg:w="93"/><text x="20.0650%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (569 samples, 0.54%)</title><rect x="19.7013%" y="469" width="0.5433%" height="15" fill="rgb(216,97,11)" fg:x="20633" fg:w="569"/><text x="19.9513%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (569 samples, 0.54%)</title><rect x="19.7013%" y="453" width="0.5433%" height="15" fill="rgb(223,59,9)" fg:x="20633" fg:w="569"/><text x="19.9513%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (511 samples, 0.49%)</title><rect x="19.7567%" y="437" width="0.4879%" height="15" fill="rgb(233,93,31)" fg:x="20691" fg:w="511"/><text x="20.0067%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (357 samples, 0.34%)</title><rect x="19.9038%" y="421" width="0.3409%" height="15" fill="rgb(239,81,33)" fg:x="20845" fg:w="357"/><text x="20.1538%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (357 samples, 0.34%)</title><rect x="19.9038%" y="405" width="0.3409%" height="15" fill="rgb(213,120,34)" fg:x="20845" fg:w="357"/><text x="20.1538%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (595 samples, 0.57%)</title><rect x="19.6870%" y="613" width="0.5681%" height="15" fill="rgb(243,49,53)" fg:x="20618" fg:w="595"/><text x="19.9370%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (595 samples, 0.57%)</title><rect x="19.6870%" y="597" width="0.5681%" height="15" fill="rgb(247,216,33)" fg:x="20618" fg:w="595"/><text x="19.9370%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (590 samples, 0.56%)</title><rect x="19.6918%" y="581" width="0.5634%" height="15" fill="rgb(226,26,14)" fg:x="20623" fg:w="590"/><text x="19.9418%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (590 samples, 0.56%)</title><rect x="19.6918%" y="565" width="0.5634%" height="15" fill="rgb(215,49,53)" fg:x="20623" fg:w="590"/><text x="19.9418%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (590 samples, 0.56%)</title><rect x="19.6918%" y="549" width="0.5634%" height="15" fill="rgb(245,162,40)" fg:x="20623" fg:w="590"/><text x="19.9418%" y="559.50"></text></g><g><title>alloc::alloc::alloc (587 samples, 0.56%)</title><rect x="19.6946%" y="533" width="0.5605%" height="15" fill="rgb(229,68,17)" fg:x="20626" fg:w="587"/><text x="19.9446%" y="543.50"></text></g><g><title>__rg_alloc (587 samples, 0.56%)</title><rect x="19.6946%" y="517" width="0.5605%" height="15" fill="rgb(213,182,10)" fg:x="20626" fg:w="587"/><text x="19.9446%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (587 samples, 0.56%)</title><rect x="19.6946%" y="501" width="0.5605%" height="15" fill="rgb(245,125,30)" fg:x="20626" fg:w="587"/><text x="19.9446%" y="511.50"></text></g><g><title>rust_alloc (587 samples, 0.56%)</title><rect x="19.6946%" y="485" width="0.5605%" height="15" fill="rgb(232,202,2)" fg:x="20626" fg:w="587"/><text x="19.9446%" y="495.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="20.2446%" y="469" width="0.0105%" height="15" fill="rgb(237,140,51)" fg:x="21202" fg:w="11"/><text x="20.4946%" y="479.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (644 samples, 0.61%)</title><rect x="19.6870%" y="741" width="0.6149%" height="15" fill="rgb(236,157,25)" fg:x="20618" fg:w="644"/><text x="19.9370%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (644 samples, 0.61%)</title><rect x="19.6870%" y="725" width="0.6149%" height="15" fill="rgb(219,209,0)" fg:x="20618" fg:w="644"/><text x="19.9370%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (644 samples, 0.61%)</title><rect x="19.6870%" y="709" width="0.6149%" height="15" fill="rgb(240,116,54)" fg:x="20618" fg:w="644"/><text x="19.9370%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (644 samples, 0.61%)</title><rect x="19.6870%" y="693" width="0.6149%" height="15" fill="rgb(216,10,36)" fg:x="20618" fg:w="644"/><text x="19.9370%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (644 samples, 0.61%)</title><rect x="19.6870%" y="677" width="0.6149%" height="15" fill="rgb(222,72,44)" fg:x="20618" fg:w="644"/><text x="19.9370%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (644 samples, 0.61%)</title><rect x="19.6870%" y="661" width="0.6149%" height="15" fill="rgb(232,159,9)" fg:x="20618" fg:w="644"/><text x="19.9370%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (644 samples, 0.61%)</title><rect x="19.6870%" y="645" width="0.6149%" height="15" fill="rgb(210,39,32)" fg:x="20618" fg:w="644"/><text x="19.9370%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (644 samples, 0.61%)</title><rect x="19.6870%" y="629" width="0.6149%" height="15" fill="rgb(216,194,45)" fg:x="20618" fg:w="644"/><text x="19.9370%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (49 samples, 0.05%)</title><rect x="20.2551%" y="613" width="0.0468%" height="15" fill="rgb(218,18,35)" fg:x="21213" fg:w="49"/><text x="20.5051%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.05%)</title><rect x="20.2551%" y="597" width="0.0468%" height="15" fill="rgb(207,83,51)" fg:x="21213" fg:w="49"/><text x="20.5051%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.04%)</title><rect x="20.2656%" y="581" width="0.0363%" height="15" fill="rgb(225,63,43)" fg:x="21224" fg:w="38"/><text x="20.5156%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (848 samples, 0.81%)</title><rect x="20.3019%" y="741" width="0.8097%" height="15" fill="rgb(207,57,36)" fg:x="21262" fg:w="848"/><text x="20.5519%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (424 samples, 0.40%)</title><rect x="21.1403%" y="725" width="0.4049%" height="15" fill="rgb(216,99,33)" fg:x="22140" fg:w="424"/><text x="21.3903%" y="735.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="21.5490%" y="613" width="0.0210%" height="15" fill="rgb(225,42,16)" fg:x="22568" fg:w="22"/><text x="21.7990%" y="623.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="21.5700%" y="581" width="0.0143%" height="15" fill="rgb(220,201,45)" fg:x="22590" fg:w="15"/><text x="21.8200%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="21.5996%" y="453" width="0.0220%" height="15" fill="rgb(225,33,4)" fg:x="22621" fg:w="23"/><text x="21.8496%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="21.6005%" y="437" width="0.0210%" height="15" fill="rgb(224,33,50)" fg:x="22622" fg:w="22"/><text x="21.8505%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (35 samples, 0.03%)</title><rect x="21.5957%" y="501" width="0.0334%" height="15" fill="rgb(246,198,51)" fg:x="22617" fg:w="35"/><text x="21.8457%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (35 samples, 0.03%)</title><rect x="21.5957%" y="485" width="0.0334%" height="15" fill="rgb(205,22,4)" fg:x="22617" fg:w="35"/><text x="21.8457%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (32 samples, 0.03%)</title><rect x="21.5986%" y="469" width="0.0306%" height="15" fill="rgb(206,3,8)" fg:x="22620" fg:w="32"/><text x="21.8486%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (48 samples, 0.05%)</title><rect x="21.5957%" y="517" width="0.0458%" height="15" fill="rgb(251,23,15)" fg:x="22617" fg:w="48"/><text x="21.8457%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="21.6292%" y="501" width="0.0124%" height="15" fill="rgb(252,88,28)" fg:x="22652" fg:w="13"/><text x="21.8792%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="21.6292%" y="485" width="0.0124%" height="15" fill="rgb(212,127,14)" fg:x="22652" fg:w="13"/><text x="21.8792%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="21.6292%" y="469" width="0.0124%" height="15" fill="rgb(247,145,37)" fg:x="22652" fg:w="13"/><text x="21.8792%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="21.6292%" y="453" width="0.0124%" height="15" fill="rgb(209,117,53)" fg:x="22652" fg:w="13"/><text x="21.8792%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (68 samples, 0.06%)</title><rect x="21.5871%" y="533" width="0.0649%" height="15" fill="rgb(212,90,42)" fg:x="22608" fg:w="68"/><text x="21.8371%" y="543.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (53 samples, 0.05%)</title><rect x="21.6759%" y="517" width="0.0506%" height="15" fill="rgb(218,164,37)" fg:x="22701" fg:w="53"/><text x="21.9259%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (405 samples, 0.39%)</title><rect x="21.5871%" y="565" width="0.3867%" height="15" fill="rgb(246,65,34)" fg:x="22608" fg:w="405"/><text x="21.8371%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (405 samples, 0.39%)</title><rect x="21.5871%" y="549" width="0.3867%" height="15" fill="rgb(231,100,33)" fg:x="22608" fg:w="405"/><text x="21.8371%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (337 samples, 0.32%)</title><rect x="21.6521%" y="533" width="0.3218%" height="15" fill="rgb(228,126,14)" fg:x="22676" fg:w="337"/><text x="21.9021%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (259 samples, 0.25%)</title><rect x="21.7266%" y="517" width="0.2473%" height="15" fill="rgb(215,173,21)" fg:x="22754" fg:w="259"/><text x="21.9766%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (259 samples, 0.25%)</title><rect x="21.7266%" y="501" width="0.2473%" height="15" fill="rgb(210,6,40)" fg:x="22754" fg:w="259"/><text x="21.9766%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (259 samples, 0.25%)</title><rect x="21.7266%" y="485" width="0.2473%" height="15" fill="rgb(212,48,18)" fg:x="22754" fg:w="259"/><text x="21.9766%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="21.9739%" y="565" width="0.0143%" height="15" fill="rgb(230,214,11)" fg:x="23013" fg:w="15"/><text x="22.2239%" y="575.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (12 samples, 0.01%)</title><rect x="21.9767%" y="549" width="0.0115%" height="15" fill="rgb(254,105,39)" fg:x="23016" fg:w="12"/><text x="22.2267%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (16 samples, 0.02%)</title><rect x="21.9910%" y="517" width="0.0153%" height="15" fill="rgb(245,158,5)" fg:x="23031" fg:w="16"/><text x="22.2410%" y="527.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (13 samples, 0.01%)</title><rect x="21.9939%" y="501" width="0.0124%" height="15" fill="rgb(249,208,11)" fg:x="23034" fg:w="13"/><text x="22.2439%" y="511.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (11 samples, 0.01%)</title><rect x="21.9958%" y="485" width="0.0105%" height="15" fill="rgb(210,39,28)" fg:x="23036" fg:w="11"/><text x="22.2458%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (16 samples, 0.02%)</title><rect x="22.0063%" y="501" width="0.0153%" height="15" fill="rgb(211,56,53)" fg:x="23047" fg:w="16"/><text x="22.2563%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (16 samples, 0.02%)</title><rect x="22.0063%" y="485" width="0.0153%" height="15" fill="rgb(226,201,30)" fg:x="23047" fg:w="16"/><text x="22.2563%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="21.9882%" y="565" width="0.0573%" height="15" fill="rgb(239,101,34)" fg:x="23028" fg:w="60"/><text x="22.2382%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.06%)</title><rect x="21.9901%" y="549" width="0.0554%" height="15" fill="rgb(226,209,5)" fg:x="23030" fg:w="58"/><text x="22.2401%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.06%)</title><rect x="21.9901%" y="533" width="0.0554%" height="15" fill="rgb(250,105,47)" fg:x="23030" fg:w="58"/><text x="22.2401%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (41 samples, 0.04%)</title><rect x="22.0063%" y="517" width="0.0391%" height="15" fill="rgb(230,72,3)" fg:x="23047" fg:w="41"/><text x="22.2563%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (25 samples, 0.02%)</title><rect x="22.0216%" y="501" width="0.0239%" height="15" fill="rgb(232,218,39)" fg:x="23063" fg:w="25"/><text x="22.2716%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (17 samples, 0.02%)</title><rect x="22.0292%" y="485" width="0.0162%" height="15" fill="rgb(248,166,6)" fg:x="23071" fg:w="17"/><text x="22.2792%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="22.0292%" y="469" width="0.0162%" height="15" fill="rgb(247,89,20)" fg:x="23071" fg:w="17"/><text x="22.2792%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (14 samples, 0.01%)</title><rect x="22.0455%" y="565" width="0.0134%" height="15" fill="rgb(248,130,54)" fg:x="23088" fg:w="14"/><text x="22.2955%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (14 samples, 0.01%)</title><rect x="22.0455%" y="549" width="0.0134%" height="15" fill="rgb(234,196,4)" fg:x="23088" fg:w="14"/><text x="22.2955%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,116 samples, 1.07%)</title><rect x="21.1116%" y="741" width="1.0656%" height="15" fill="rgb(250,143,31)" fg:x="22110" fg:w="1116"/><text x="21.3616%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (662 samples, 0.63%)</title><rect x="21.5451%" y="725" width="0.6321%" height="15" fill="rgb(211,110,34)" fg:x="22564" fg:w="662"/><text x="21.7951%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (662 samples, 0.63%)</title><rect x="21.5451%" y="709" width="0.6321%" height="15" fill="rgb(215,124,48)" fg:x="22564" fg:w="662"/><text x="21.7951%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (662 samples, 0.63%)</title><rect x="21.5451%" y="693" width="0.6321%" height="15" fill="rgb(216,46,13)" fg:x="22564" fg:w="662"/><text x="21.7951%" y="703.50"></text></g><g><title>alloc::alloc::alloc (662 samples, 0.63%)</title><rect x="21.5451%" y="677" width="0.6321%" height="15" fill="rgb(205,184,25)" fg:x="22564" fg:w="662"/><text x="21.7951%" y="687.50"></text></g><g><title>__rg_alloc (662 samples, 0.63%)</title><rect x="21.5451%" y="661" width="0.6321%" height="15" fill="rgb(228,1,10)" fg:x="22564" fg:w="662"/><text x="21.7951%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (662 samples, 0.63%)</title><rect x="21.5451%" y="645" width="0.6321%" height="15" fill="rgb(213,116,27)" fg:x="22564" fg:w="662"/><text x="21.7951%" y="655.50"></text></g><g><title>rust_alloc (658 samples, 0.63%)</title><rect x="21.5490%" y="629" width="0.6283%" height="15" fill="rgb(241,95,50)" fg:x="22568" fg:w="658"/><text x="21.7990%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (636 samples, 0.61%)</title><rect x="21.5700%" y="613" width="0.6073%" height="15" fill="rgb(238,48,32)" fg:x="22590" fg:w="636"/><text x="21.8200%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (636 samples, 0.61%)</title><rect x="21.5700%" y="597" width="0.6073%" height="15" fill="rgb(235,113,49)" fg:x="22590" fg:w="636"/><text x="21.8200%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (621 samples, 0.59%)</title><rect x="21.5843%" y="581" width="0.5930%" height="15" fill="rgb(205,127,43)" fg:x="22605" fg:w="621"/><text x="21.8343%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (124 samples, 0.12%)</title><rect x="22.0588%" y="565" width="0.1184%" height="15" fill="rgb(250,162,2)" fg:x="23102" fg:w="124"/><text x="22.3088%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (124 samples, 0.12%)</title><rect x="22.0588%" y="549" width="0.1184%" height="15" fill="rgb(220,13,41)" fg:x="23102" fg:w="124"/><text x="22.3088%" y="559.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (12 samples, 0.01%)</title><rect x="22.1887%" y="709" width="0.0115%" height="15" fill="rgb(249,221,25)" fg:x="23238" fg:w="12"/><text x="22.4387%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (12 samples, 0.01%)</title><rect x="22.1887%" y="693" width="0.0115%" height="15" fill="rgb(215,208,19)" fg:x="23238" fg:w="12"/><text x="22.4387%" y="703.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (12 samples, 0.01%)</title><rect x="22.1887%" y="677" width="0.0115%" height="15" fill="rgb(236,175,2)" fg:x="23238" fg:w="12"/><text x="22.4387%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="22.1887%" y="661" width="0.0115%" height="15" fill="rgb(241,52,2)" fg:x="23238" fg:w="12"/><text x="22.4387%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (12 samples, 0.01%)</title><rect x="22.1887%" y="645" width="0.0115%" height="15" fill="rgb(248,140,14)" fg:x="23238" fg:w="12"/><text x="22.4387%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="22.2002%" y="709" width="0.0115%" height="15" fill="rgb(253,22,42)" fg:x="23250" fg:w="12"/><text x="22.4502%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="22.2002%" y="693" width="0.0115%" height="15" fill="rgb(234,61,47)" fg:x="23250" fg:w="12"/><text x="22.4502%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (12 samples, 0.01%)</title><rect x="22.2002%" y="677" width="0.0115%" height="15" fill="rgb(208,226,15)" fg:x="23250" fg:w="12"/><text x="22.4502%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="22.2002%" y="661" width="0.0115%" height="15" fill="rgb(217,221,4)" fg:x="23250" fg:w="12"/><text x="22.4502%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="22.1782%" y="725" width="0.0439%" height="15" fill="rgb(212,174,34)" fg:x="23227" fg:w="46"/><text x="22.4282%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (11 samples, 0.01%)</title><rect x="22.2116%" y="709" width="0.0105%" height="15" fill="rgb(253,83,4)" fg:x="23262" fg:w="11"/><text x="22.4616%" y="719.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="22.2240%" y="709" width="0.0115%" height="15" fill="rgb(250,195,49)" fg:x="23275" fg:w="12"/><text x="22.4740%" y="719.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="22.2364%" y="693" width="0.0124%" height="15" fill="rgb(241,192,25)" fg:x="23288" fg:w="13"/><text x="22.4864%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="22.2870%" y="581" width="0.0181%" height="15" fill="rgb(208,124,10)" fg:x="23341" fg:w="19"/><text x="22.5370%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="22.2880%" y="565" width="0.0172%" height="15" fill="rgb(222,33,0)" fg:x="23342" fg:w="18"/><text x="22.5380%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (57 samples, 0.05%)</title><rect x="22.2641%" y="629" width="0.0544%" height="15" fill="rgb(234,209,28)" fg:x="23317" fg:w="57"/><text x="22.5141%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (57 samples, 0.05%)</title><rect x="22.2641%" y="613" width="0.0544%" height="15" fill="rgb(224,11,23)" fg:x="23317" fg:w="57"/><text x="22.5141%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (55 samples, 0.05%)</title><rect x="22.2660%" y="597" width="0.0525%" height="15" fill="rgb(232,99,1)" fg:x="23319" fg:w="55"/><text x="22.5160%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="22.3052%" y="581" width="0.0134%" height="15" fill="rgb(237,95,45)" fg:x="23360" fg:w="14"/><text x="22.5552%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="22.3052%" y="565" width="0.0134%" height="15" fill="rgb(208,109,11)" fg:x="23360" fg:w="14"/><text x="22.5552%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (96 samples, 0.09%)</title><rect x="22.2489%" y="693" width="0.0917%" height="15" fill="rgb(216,190,48)" fg:x="23301" fg:w="96"/><text x="22.4989%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (96 samples, 0.09%)</title><rect x="22.2489%" y="677" width="0.0917%" height="15" fill="rgb(251,171,36)" fg:x="23301" fg:w="96"/><text x="22.4989%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (96 samples, 0.09%)</title><rect x="22.2489%" y="661" width="0.0917%" height="15" fill="rgb(230,62,22)" fg:x="23301" fg:w="96"/><text x="22.4989%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (96 samples, 0.09%)</title><rect x="22.2489%" y="645" width="0.0917%" height="15" fill="rgb(225,114,35)" fg:x="23301" fg:w="96"/><text x="22.4989%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="22.3186%" y="629" width="0.0220%" height="15" fill="rgb(215,118,42)" fg:x="23374" fg:w="23"/><text x="22.5686%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (117 samples, 0.11%)</title><rect x="22.2355%" y="709" width="0.1117%" height="15" fill="rgb(243,119,21)" fg:x="23287" fg:w="117"/><text x="22.4855%" y="719.50"></text></g><g><title>rust_dealloc (151 samples, 0.14%)</title><rect x="22.2221%" y="725" width="0.1442%" height="15" fill="rgb(252,177,53)" fg:x="23273" fg:w="151"/><text x="22.4721%" y="735.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (20 samples, 0.02%)</title><rect x="22.3472%" y="709" width="0.0191%" height="15" fill="rgb(237,209,29)" fg:x="23404" fg:w="20"/><text x="22.5972%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (213 samples, 0.20%)</title><rect x="22.1782%" y="741" width="0.2034%" height="15" fill="rgb(212,65,23)" fg:x="23227" fg:w="213"/><text x="22.4282%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.02%)</title><rect x="22.3663%" y="725" width="0.0153%" height="15" fill="rgb(230,222,46)" fg:x="23424" fg:w="16"/><text x="22.6163%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (12 samples, 0.01%)</title><rect x="22.3978%" y="741" width="0.0115%" height="15" fill="rgb(215,135,32)" fg:x="23457" fg:w="12"/><text x="22.6478%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (55 samples, 0.05%)</title><rect x="22.4093%" y="741" width="0.0525%" height="15" fill="rgb(246,101,22)" fg:x="23469" fg:w="55"/><text x="22.6593%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (55 samples, 0.05%)</title><rect x="22.4093%" y="725" width="0.0525%" height="15" fill="rgb(206,107,13)" fg:x="23469" fg:w="55"/><text x="22.6593%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (55 samples, 0.05%)</title><rect x="22.4093%" y="709" width="0.0525%" height="15" fill="rgb(250,100,44)" fg:x="23469" fg:w="55"/><text x="22.6593%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (55 samples, 0.05%)</title><rect x="22.4093%" y="693" width="0.0525%" height="15" fill="rgb(231,147,38)" fg:x="23469" fg:w="55"/><text x="22.6593%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (32 samples, 0.03%)</title><rect x="22.4312%" y="677" width="0.0306%" height="15" fill="rgb(229,8,40)" fg:x="23492" fg:w="32"/><text x="22.6812%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (32 samples, 0.03%)</title><rect x="22.4312%" y="661" width="0.0306%" height="15" fill="rgb(221,135,30)" fg:x="23492" fg:w="32"/><text x="22.6812%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (32 samples, 0.03%)</title><rect x="22.4312%" y="645" width="0.0306%" height="15" fill="rgb(249,193,18)" fg:x="23492" fg:w="32"/><text x="22.6812%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (28 samples, 0.03%)</title><rect x="22.4350%" y="629" width="0.0267%" height="15" fill="rgb(209,133,39)" fg:x="23496" fg:w="28"/><text x="22.6850%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (20 samples, 0.02%)</title><rect x="22.4427%" y="613" width="0.0191%" height="15" fill="rgb(232,100,14)" fg:x="23504" fg:w="20"/><text x="22.6927%" y="623.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (21 samples, 0.02%)</title><rect x="22.4646%" y="741" width="0.0201%" height="15" fill="rgb(224,185,1)" fg:x="23527" fg:w="21"/><text x="22.7146%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,107 samples, 6.79%)</title><rect x="15.7750%" y="773" width="6.7861%" height="15" fill="rgb(223,139,8)" fg:x="16521" fg:w="7107"/><text x="16.0250%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (7,091 samples, 6.77%)</title><rect x="15.7903%" y="757" width="6.7708%" height="15" fill="rgb(232,213,38)" fg:x="16537" fg:w="7091"/><text x="16.0403%" y="767.50">tremor_ru..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (80 samples, 0.08%)</title><rect x="22.4847%" y="741" width="0.0764%" height="15" fill="rgb(207,94,22)" fg:x="23548" fg:w="80"/><text x="22.7347%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (80 samples, 0.08%)</title><rect x="22.4847%" y="725" width="0.0764%" height="15" fill="rgb(219,183,54)" fg:x="23548" fg:w="80"/><text x="22.7347%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (80 samples, 0.08%)</title><rect x="22.4847%" y="709" width="0.0764%" height="15" fill="rgb(216,185,54)" fg:x="23548" fg:w="80"/><text x="22.7347%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (47 samples, 0.04%)</title><rect x="22.5162%" y="693" width="0.0449%" height="15" fill="rgb(254,217,39)" fg:x="23581" fg:w="47"/><text x="22.7662%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="23.6592%" y="757" width="0.0134%" height="15" fill="rgb(240,178,23)" fg:x="24778" fg:w="14"/><text x="23.9092%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="23.6725%" y="757" width="0.0267%" height="15" fill="rgb(218,11,47)" fg:x="24792" fg:w="28"/><text x="23.9225%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="23.6993%" y="757" width="0.0172%" height="15" fill="rgb(218,51,51)" fg:x="24820" fg:w="18"/><text x="23.9493%" y="767.50"></text></g><g><title>aligned_size (30 samples, 0.03%)</title><rect x="24.1089%" y="517" width="0.0286%" height="15" fill="rgb(238,126,27)" fg:x="25249" fg:w="30"/><text x="24.3589%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (229 samples, 0.22%)</title><rect x="24.0764%" y="661" width="0.2187%" height="15" fill="rgb(249,202,22)" fg:x="25215" fg:w="229"/><text x="24.3264%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (229 samples, 0.22%)</title><rect x="24.0764%" y="645" width="0.2187%" height="15" fill="rgb(254,195,49)" fg:x="25215" fg:w="229"/><text x="24.3264%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (229 samples, 0.22%)</title><rect x="24.0764%" y="629" width="0.2187%" height="15" fill="rgb(208,123,14)" fg:x="25215" fg:w="229"/><text x="24.3264%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (213 samples, 0.20%)</title><rect x="24.0917%" y="613" width="0.2034%" height="15" fill="rgb(224,200,8)" fg:x="25231" fg:w="213"/><text x="24.3417%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (213 samples, 0.20%)</title><rect x="24.0917%" y="597" width="0.2034%" height="15" fill="rgb(217,61,36)" fg:x="25231" fg:w="213"/><text x="24.3417%" y="607.50"></text></g><g><title>alloc::alloc::alloc (213 samples, 0.20%)</title><rect x="24.0917%" y="581" width="0.2034%" height="15" fill="rgb(206,35,45)" fg:x="25231" fg:w="213"/><text x="24.3417%" y="591.50"></text></g><g><title>__rg_alloc (213 samples, 0.20%)</title><rect x="24.0917%" y="565" width="0.2034%" height="15" fill="rgb(217,65,33)" fg:x="25231" fg:w="213"/><text x="24.3417%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (213 samples, 0.20%)</title><rect x="24.0917%" y="549" width="0.2034%" height="15" fill="rgb(222,158,48)" fg:x="25231" fg:w="213"/><text x="24.3417%" y="559.50"></text></g><g><title>rust_alloc (195 samples, 0.19%)</title><rect x="24.1089%" y="533" width="0.1862%" height="15" fill="rgb(254,2,54)" fg:x="25249" fg:w="195"/><text x="24.3589%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (165 samples, 0.16%)</title><rect x="24.1375%" y="517" width="0.1575%" height="15" fill="rgb(250,143,38)" fg:x="25279" fg:w="165"/><text x="24.3875%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (165 samples, 0.16%)</title><rect x="24.1375%" y="501" width="0.1575%" height="15" fill="rgb(248,25,0)" fg:x="25279" fg:w="165"/><text x="24.3875%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="24.1528%" y="485" width="0.1423%" height="15" fill="rgb(206,152,27)" fg:x="25295" fg:w="149"/><text x="24.4028%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (128 samples, 0.12%)</title><rect x="24.1729%" y="469" width="0.1222%" height="15" fill="rgb(240,77,30)" fg:x="25316" fg:w="128"/><text x="24.4229%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (128 samples, 0.12%)</title><rect x="24.1729%" y="453" width="0.1222%" height="15" fill="rgb(231,5,3)" fg:x="25316" fg:w="128"/><text x="24.4229%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (351 samples, 0.34%)</title><rect x="24.0315%" y="741" width="0.3352%" height="15" fill="rgb(207,226,32)" fg:x="25168" fg:w="351"/><text x="24.2815%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (304 samples, 0.29%)</title><rect x="24.0764%" y="725" width="0.2903%" height="15" fill="rgb(222,207,47)" fg:x="25215" fg:w="304"/><text x="24.3264%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (304 samples, 0.29%)</title><rect x="24.0764%" y="709" width="0.2903%" height="15" fill="rgb(229,115,45)" fg:x="25215" fg:w="304"/><text x="24.3264%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (304 samples, 0.29%)</title><rect x="24.0764%" y="693" width="0.2903%" height="15" fill="rgb(224,191,6)" fg:x="25215" fg:w="304"/><text x="24.3264%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (304 samples, 0.29%)</title><rect x="24.0764%" y="677" width="0.2903%" height="15" fill="rgb(230,227,24)" fg:x="25215" fg:w="304"/><text x="24.3264%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (75 samples, 0.07%)</title><rect x="24.2951%" y="661" width="0.0716%" height="15" fill="rgb(228,80,19)" fg:x="25444" fg:w="75"/><text x="24.5451%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.07%)</title><rect x="24.2951%" y="645" width="0.0716%" height="15" fill="rgb(247,229,0)" fg:x="25444" fg:w="75"/><text x="24.5451%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (59 samples, 0.06%)</title><rect x="24.3104%" y="629" width="0.0563%" height="15" fill="rgb(237,194,15)" fg:x="25460" fg:w="59"/><text x="24.5604%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.08%)</title><rect x="24.4230%" y="453" width="0.0773%" height="15" fill="rgb(219,203,20)" fg:x="25578" fg:w="81"/><text x="24.6730%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.08%)</title><rect x="24.4230%" y="437" width="0.0773%" height="15" fill="rgb(234,128,8)" fg:x="25578" fg:w="81"/><text x="24.6730%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (74 samples, 0.07%)</title><rect x="24.4297%" y="421" width="0.0707%" height="15" fill="rgb(248,202,8)" fg:x="25585" fg:w="74"/><text x="24.6797%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (66 samples, 0.06%)</title><rect x="24.4374%" y="405" width="0.0630%" height="15" fill="rgb(206,104,37)" fg:x="25593" fg:w="66"/><text x="24.6874%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (66 samples, 0.06%)</title><rect x="24.4374%" y="389" width="0.0630%" height="15" fill="rgb(223,8,27)" fg:x="25593" fg:w="66"/><text x="24.6874%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (124 samples, 0.12%)</title><rect x="24.3887%" y="597" width="0.1184%" height="15" fill="rgb(216,217,28)" fg:x="25542" fg:w="124"/><text x="24.6387%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (124 samples, 0.12%)</title><rect x="24.3887%" y="581" width="0.1184%" height="15" fill="rgb(249,199,1)" fg:x="25542" fg:w="124"/><text x="24.6387%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (124 samples, 0.12%)</title><rect x="24.3887%" y="565" width="0.1184%" height="15" fill="rgb(240,85,17)" fg:x="25542" fg:w="124"/><text x="24.6387%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (119 samples, 0.11%)</title><rect x="24.3934%" y="549" width="0.1136%" height="15" fill="rgb(206,108,45)" fg:x="25547" fg:w="119"/><text x="24.6434%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (119 samples, 0.11%)</title><rect x="24.3934%" y="533" width="0.1136%" height="15" fill="rgb(245,210,41)" fg:x="25547" fg:w="119"/><text x="24.6434%" y="543.50"></text></g><g><title>alloc::alloc::alloc (109 samples, 0.10%)</title><rect x="24.4030%" y="517" width="0.1041%" height="15" fill="rgb(206,13,37)" fg:x="25557" fg:w="109"/><text x="24.6530%" y="527.50"></text></g><g><title>__rg_alloc (109 samples, 0.10%)</title><rect x="24.4030%" y="501" width="0.1041%" height="15" fill="rgb(250,61,18)" fg:x="25557" fg:w="109"/><text x="24.6530%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (109 samples, 0.10%)</title><rect x="24.4030%" y="485" width="0.1041%" height="15" fill="rgb(235,172,48)" fg:x="25557" fg:w="109"/><text x="24.6530%" y="495.50"></text></g><g><title>rust_alloc (97 samples, 0.09%)</title><rect x="24.4144%" y="469" width="0.0926%" height="15" fill="rgb(249,201,17)" fg:x="25569" fg:w="97"/><text x="24.6644%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (178 samples, 0.17%)</title><rect x="24.3877%" y="677" width="0.1700%" height="15" fill="rgb(219,208,6)" fg:x="25541" fg:w="178"/><text x="24.6377%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (177 samples, 0.17%)</title><rect x="24.3887%" y="661" width="0.1690%" height="15" fill="rgb(248,31,23)" fg:x="25542" fg:w="177"/><text x="24.6387%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (177 samples, 0.17%)</title><rect x="24.3887%" y="645" width="0.1690%" height="15" fill="rgb(245,15,42)" fg:x="25542" fg:w="177"/><text x="24.6387%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (177 samples, 0.17%)</title><rect x="24.3887%" y="629" width="0.1690%" height="15" fill="rgb(222,217,39)" fg:x="25542" fg:w="177"/><text x="24.6387%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (177 samples, 0.17%)</title><rect x="24.3887%" y="613" width="0.1690%" height="15" fill="rgb(210,219,27)" fg:x="25542" fg:w="177"/><text x="24.6387%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (53 samples, 0.05%)</title><rect x="24.5071%" y="597" width="0.0506%" height="15" fill="rgb(252,166,36)" fg:x="25666" fg:w="53"/><text x="24.7571%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.05%)</title><rect x="24.5071%" y="581" width="0.0506%" height="15" fill="rgb(245,132,34)" fg:x="25666" fg:w="53"/><text x="24.7571%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="24.5242%" y="565" width="0.0334%" height="15" fill="rgb(236,54,3)" fg:x="25684" fg:w="35"/><text x="24.7742%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="24.6130%" y="533" width="0.0850%" height="15" fill="rgb(241,173,43)" fg:x="25777" fg:w="89"/><text x="24.8630%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="24.6130%" y="517" width="0.0850%" height="15" fill="rgb(215,190,9)" fg:x="25777" fg:w="89"/><text x="24.8630%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.08%)</title><rect x="24.6216%" y="501" width="0.0764%" height="15" fill="rgb(242,101,16)" fg:x="25786" fg:w="80"/><text x="24.8716%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (74 samples, 0.07%)</title><rect x="24.6274%" y="485" width="0.0707%" height="15" fill="rgb(223,190,21)" fg:x="25792" fg:w="74"/><text x="24.8774%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (74 samples, 0.07%)</title><rect x="24.6274%" y="469" width="0.0707%" height="15" fill="rgb(215,228,25)" fg:x="25792" fg:w="74"/><text x="24.8774%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (121 samples, 0.12%)</title><rect x="24.5892%" y="629" width="0.1155%" height="15" fill="rgb(225,36,22)" fg:x="25752" fg:w="121"/><text x="24.8392%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (121 samples, 0.12%)</title><rect x="24.5892%" y="613" width="0.1155%" height="15" fill="rgb(251,106,46)" fg:x="25752" fg:w="121"/><text x="24.8392%" y="623.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.11%)</title><rect x="24.5978%" y="597" width="0.1069%" height="15" fill="rgb(208,90,1)" fg:x="25761" fg:w="112"/><text x="24.8478%" y="607.50"></text></g><g><title>__rg_alloc (112 samples, 0.11%)</title><rect x="24.5978%" y="581" width="0.1069%" height="15" fill="rgb(243,10,4)" fg:x="25761" fg:w="112"/><text x="24.8478%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.11%)</title><rect x="24.5978%" y="565" width="0.1069%" height="15" fill="rgb(212,137,27)" fg:x="25761" fg:w="112"/><text x="24.8478%" y="575.50"></text></g><g><title>rust_alloc (104 samples, 0.10%)</title><rect x="24.6054%" y="549" width="0.0993%" height="15" fill="rgb(231,220,49)" fg:x="25769" fg:w="104"/><text x="24.8554%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (11 samples, 0.01%)</title><rect x="24.7047%" y="629" width="0.0105%" height="15" fill="rgb(237,96,20)" fg:x="25873" fg:w="11"/><text x="24.9547%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (161 samples, 0.15%)</title><rect x="24.5672%" y="677" width="0.1537%" height="15" fill="rgb(239,229,30)" fg:x="25729" fg:w="161"/><text x="24.8172%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (139 samples, 0.13%)</title><rect x="24.5882%" y="661" width="0.1327%" height="15" fill="rgb(219,65,33)" fg:x="25751" fg:w="139"/><text x="24.8382%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (138 samples, 0.13%)</title><rect x="24.5892%" y="645" width="0.1318%" height="15" fill="rgb(243,134,7)" fg:x="25752" fg:w="138"/><text x="24.8392%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (365 samples, 0.35%)</title><rect x="24.3858%" y="693" width="0.3485%" height="15" fill="rgb(216,177,54)" fg:x="25539" fg:w="365"/><text x="24.6358%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.01%)</title><rect x="24.7209%" y="677" width="0.0134%" height="15" fill="rgb(211,160,20)" fg:x="25890" fg:w="14"/><text x="24.9709%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (373 samples, 0.36%)</title><rect x="24.3858%" y="725" width="0.3562%" height="15" fill="rgb(239,85,39)" fg:x="25539" fg:w="373"/><text x="24.6358%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (373 samples, 0.36%)</title><rect x="24.3858%" y="709" width="0.3562%" height="15" fill="rgb(232,125,22)" fg:x="25539" fg:w="373"/><text x="24.6358%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (394 samples, 0.38%)</title><rect x="24.3667%" y="741" width="0.3762%" height="15" fill="rgb(244,57,34)" fg:x="25519" fg:w="394"/><text x="24.6167%" y="751.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,082 samples, 1.03%)</title><rect x="23.7164%" y="757" width="1.0331%" height="15" fill="rgb(214,203,32)" fg:x="24838" fg:w="1082"/><text x="23.9664%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (220 samples, 0.21%)</title><rect x="24.7496%" y="757" width="0.2101%" height="15" fill="rgb(207,58,43)" fg:x="25920" fg:w="220"/><text x="24.9996%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (12 samples, 0.01%)</title><rect x="24.9597%" y="757" width="0.0115%" height="15" fill="rgb(215,193,15)" fg:x="26140" fg:w="12"/><text x="25.2097%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="24.9597%" y="741" width="0.0115%" height="15" fill="rgb(232,15,44)" fg:x="26140" fg:w="12"/><text x="25.2097%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.01%)</title><rect x="24.9893%" y="741" width="0.0124%" height="15" fill="rgb(212,3,48)" fg:x="26171" fg:w="13"/><text x="25.2393%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="24.9893%" y="725" width="0.0124%" height="15" fill="rgb(218,128,7)" fg:x="26171" fg:w="13"/><text x="25.2393%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (415 samples, 0.40%)</title><rect x="24.9711%" y="757" width="0.3963%" height="15" fill="rgb(226,216,39)" fg:x="26152" fg:w="415"/><text x="25.2211%" y="767.50"></text></g><g><title>core::ptr::write (383 samples, 0.37%)</title><rect x="25.0017%" y="741" width="0.3657%" height="15" fill="rgb(243,47,51)" fg:x="26184" fg:w="383"/><text x="25.2517%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (379 samples, 0.36%)</title><rect x="25.0055%" y="725" width="0.3619%" height="15" fill="rgb(241,183,40)" fg:x="26188" fg:w="379"/><text x="25.2555%" y="735.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="25.3932%" y="597" width="0.0210%" height="15" fill="rgb(231,217,32)" fg:x="26594" fg:w="22"/><text x="25.6432%" y="607.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="25.4142%" y="565" width="0.0105%" height="15" fill="rgb(229,61,38)" fg:x="26616" fg:w="11"/><text x="25.6642%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="25.4352%" y="549" width="0.0134%" height="15" fill="rgb(225,210,5)" fg:x="26638" fg:w="14"/><text x="25.6852%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="25.4361%" y="533" width="0.0124%" height="15" fill="rgb(231,79,45)" fg:x="26639" fg:w="13"/><text x="25.6861%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="25.4371%" y="517" width="0.0115%" height="15" fill="rgb(224,100,7)" fg:x="26640" fg:w="12"/><text x="25.6871%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="25.4371%" y="501" width="0.0115%" height="15" fill="rgb(241,198,18)" fg:x="26640" fg:w="12"/><text x="25.6871%" y="511.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (11 samples, 0.01%)</title><rect x="25.4380%" y="485" width="0.0105%" height="15" fill="rgb(252,97,53)" fg:x="26641" fg:w="11"/><text x="25.6880%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (116 samples, 0.11%)</title><rect x="25.3760%" y="693" width="0.1108%" height="15" fill="rgb(220,88,7)" fg:x="26576" fg:w="116"/><text x="25.6260%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (116 samples, 0.11%)</title><rect x="25.3760%" y="677" width="0.1108%" height="15" fill="rgb(213,176,14)" fg:x="26576" fg:w="116"/><text x="25.6260%" y="687.50"></text></g><g><title>alloc::alloc::alloc (106 samples, 0.10%)</title><rect x="25.3855%" y="661" width="0.1012%" height="15" fill="rgb(246,73,7)" fg:x="26586" fg:w="106"/><text x="25.6355%" y="671.50"></text></g><g><title>__rg_alloc (106 samples, 0.10%)</title><rect x="25.3855%" y="645" width="0.1012%" height="15" fill="rgb(245,64,36)" fg:x="26586" fg:w="106"/><text x="25.6355%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (106 samples, 0.10%)</title><rect x="25.3855%" y="629" width="0.1012%" height="15" fill="rgb(245,80,10)" fg:x="26586" fg:w="106"/><text x="25.6355%" y="639.50"></text></g><g><title>rust_alloc (98 samples, 0.09%)</title><rect x="25.3932%" y="613" width="0.0936%" height="15" fill="rgb(232,107,50)" fg:x="26594" fg:w="98"/><text x="25.6432%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="25.4142%" y="597" width="0.0726%" height="15" fill="rgb(253,3,0)" fg:x="26616" fg:w="76"/><text x="25.6642%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="25.4142%" y="581" width="0.0726%" height="15" fill="rgb(212,99,53)" fg:x="26616" fg:w="76"/><text x="25.6642%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="25.4247%" y="565" width="0.0621%" height="15" fill="rgb(249,111,54)" fg:x="26627" fg:w="65"/><text x="25.6747%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (38 samples, 0.04%)</title><rect x="25.4504%" y="549" width="0.0363%" height="15" fill="rgb(249,55,30)" fg:x="26654" fg:w="38"/><text x="25.7004%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (38 samples, 0.04%)</title><rect x="25.4504%" y="533" width="0.0363%" height="15" fill="rgb(237,47,42)" fg:x="26654" fg:w="38"/><text x="25.7004%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (140 samples, 0.13%)</title><rect x="25.3674%" y="757" width="0.1337%" height="15" fill="rgb(211,20,18)" fg:x="26567" fg:w="140"/><text x="25.6174%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (140 samples, 0.13%)</title><rect x="25.3674%" y="741" width="0.1337%" height="15" fill="rgb(231,203,46)" fg:x="26567" fg:w="140"/><text x="25.6174%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (131 samples, 0.13%)</title><rect x="25.3760%" y="725" width="0.1251%" height="15" fill="rgb(237,142,3)" fg:x="26576" fg:w="131"/><text x="25.6260%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (131 samples, 0.13%)</title><rect x="25.3760%" y="709" width="0.1251%" height="15" fill="rgb(241,107,1)" fg:x="26576" fg:w="131"/><text x="25.6260%" y="719.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="25.5221%" y="565" width="0.0134%" height="15" fill="rgb(229,83,13)" fg:x="26729" fg:w="14"/><text x="25.7721%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.03%)</title><rect x="25.5717%" y="453" width="0.0267%" height="15" fill="rgb(241,91,40)" fg:x="26781" fg:w="28"/><text x="25.8217%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="25.5774%" y="437" width="0.0210%" height="15" fill="rgb(225,3,45)" fg:x="26787" fg:w="22"/><text x="25.8274%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (59 samples, 0.06%)</title><rect x="25.5507%" y="501" width="0.0563%" height="15" fill="rgb(244,223,14)" fg:x="26759" fg:w="59"/><text x="25.8007%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (59 samples, 0.06%)</title><rect x="25.5507%" y="485" width="0.0563%" height="15" fill="rgb(224,124,37)" fg:x="26759" fg:w="59"/><text x="25.8007%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (58 samples, 0.06%)</title><rect x="25.5517%" y="469" width="0.0554%" height="15" fill="rgb(251,171,30)" fg:x="26760" fg:w="58"/><text x="25.8017%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (87 samples, 0.08%)</title><rect x="25.5354%" y="533" width="0.0831%" height="15" fill="rgb(236,46,54)" fg:x="26743" fg:w="87"/><text x="25.7854%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (87 samples, 0.08%)</title><rect x="25.5354%" y="517" width="0.0831%" height="15" fill="rgb(245,213,5)" fg:x="26743" fg:w="87"/><text x="25.7854%" y="527.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="25.6070%" y="501" width="0.0115%" height="15" fill="rgb(230,144,27)" fg:x="26818" fg:w="12"/><text x="25.8570%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (88 samples, 0.08%)</title><rect x="25.5354%" y="565" width="0.0840%" height="15" fill="rgb(220,86,6)" fg:x="26743" fg:w="88"/><text x="25.7854%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (88 samples, 0.08%)</title><rect x="25.5354%" y="549" width="0.0840%" height="15" fill="rgb(240,20,13)" fg:x="26743" fg:w="88"/><text x="25.7854%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (111 samples, 0.11%)</title><rect x="25.5221%" y="581" width="0.1060%" height="15" fill="rgb(217,89,34)" fg:x="26729" fg:w="111"/><text x="25.7721%" y="591.50"></text></g><g><title>rust_dealloc (134 samples, 0.13%)</title><rect x="25.5144%" y="597" width="0.1279%" height="15" fill="rgb(229,13,5)" fg:x="26721" fg:w="134"/><text x="25.7644%" y="607.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="25.6280%" y="581" width="0.0143%" height="15" fill="rgb(244,67,35)" fg:x="26840" fg:w="15"/><text x="25.8780%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (145 samples, 0.14%)</title><rect x="25.5068%" y="661" width="0.1385%" height="15" fill="rgb(221,40,2)" fg:x="26713" fg:w="145"/><text x="25.7568%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (142 samples, 0.14%)</title><rect x="25.5096%" y="645" width="0.1356%" height="15" fill="rgb(237,157,21)" fg:x="26716" fg:w="142"/><text x="25.7596%" y="655.50"></text></g><g><title>__rg_dealloc (142 samples, 0.14%)</title><rect x="25.5096%" y="629" width="0.1356%" height="15" fill="rgb(222,94,11)" fg:x="26716" fg:w="142"/><text x="25.7596%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (142 samples, 0.14%)</title><rect x="25.5096%" y="613" width="0.1356%" height="15" fill="rgb(249,113,6)" fg:x="26716" fg:w="142"/><text x="25.7596%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (160 samples, 0.15%)</title><rect x="25.5049%" y="725" width="0.1528%" height="15" fill="rgb(238,137,36)" fg:x="26711" fg:w="160"/><text x="25.7549%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.15%)</title><rect x="25.5049%" y="709" width="0.1528%" height="15" fill="rgb(210,102,26)" fg:x="26711" fg:w="160"/><text x="25.7549%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (158 samples, 0.15%)</title><rect x="25.5068%" y="693" width="0.1509%" height="15" fill="rgb(218,30,30)" fg:x="26713" fg:w="158"/><text x="25.7568%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (158 samples, 0.15%)</title><rect x="25.5068%" y="677" width="0.1509%" height="15" fill="rgb(214,67,26)" fg:x="26713" fg:w="158"/><text x="25.7568%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="25.6452%" y="661" width="0.0124%" height="15" fill="rgb(251,9,53)" fg:x="26858" fg:w="13"/><text x="25.8952%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.15%)</title><rect x="25.5049%" y="741" width="0.1547%" height="15" fill="rgb(228,204,25)" fg:x="26711" fg:w="162"/><text x="25.7549%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (167 samples, 0.16%)</title><rect x="25.5049%" y="757" width="0.1595%" height="15" fill="rgb(207,153,8)" fg:x="26711" fg:w="167"/><text x="25.7549%" y="767.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="25.7159%" y="581" width="0.0143%" height="15" fill="rgb(242,9,16)" fg:x="26932" fg:w="15"/><text x="25.9659%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (31 samples, 0.03%)</title><rect x="25.7904%" y="469" width="0.0296%" height="15" fill="rgb(217,211,10)" fg:x="27010" fg:w="31"/><text x="26.0404%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (28 samples, 0.03%)</title><rect x="25.7932%" y="453" width="0.0267%" height="15" fill="rgb(219,228,52)" fg:x="27013" fg:w="28"/><text x="26.0432%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (94 samples, 0.09%)</title><rect x="25.7522%" y="517" width="0.0898%" height="15" fill="rgb(231,92,29)" fg:x="26970" fg:w="94"/><text x="26.0022%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (94 samples, 0.09%)</title><rect x="25.7522%" y="501" width="0.0898%" height="15" fill="rgb(232,8,23)" fg:x="26970" fg:w="94"/><text x="26.0022%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (92 samples, 0.09%)</title><rect x="25.7541%" y="485" width="0.0878%" height="15" fill="rgb(216,211,34)" fg:x="26972" fg:w="92"/><text x="26.0041%" y="495.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (23 samples, 0.02%)</title><rect x="25.8200%" y="469" width="0.0220%" height="15" fill="rgb(236,151,0)" fg:x="27041" fg:w="23"/><text x="26.0700%" y="479.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (23 samples, 0.02%)</title><rect x="25.8200%" y="453" width="0.0220%" height="15" fill="rgb(209,168,3)" fg:x="27041" fg:w="23"/><text x="26.0700%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (131 samples, 0.13%)</title><rect x="25.7302%" y="549" width="0.1251%" height="15" fill="rgb(208,129,28)" fg:x="26947" fg:w="131"/><text x="25.9802%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (131 samples, 0.13%)</title><rect x="25.7302%" y="533" width="0.1251%" height="15" fill="rgb(229,78,22)" fg:x="26947" fg:w="131"/><text x="25.9802%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="25.8419%" y="517" width="0.0134%" height="15" fill="rgb(228,187,13)" fg:x="27064" fg:w="14"/><text x="26.0919%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (142 samples, 0.14%)</title><rect x="25.7302%" y="581" width="0.1356%" height="15" fill="rgb(240,119,24)" fg:x="26947" fg:w="142"/><text x="25.9802%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (142 samples, 0.14%)</title><rect x="25.7302%" y="565" width="0.1356%" height="15" fill="rgb(209,194,42)" fg:x="26947" fg:w="142"/><text x="25.9802%" y="575.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="25.8553%" y="549" width="0.0105%" height="15" fill="rgb(247,200,46)" fg:x="27078" fg:w="11"/><text x="26.1053%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="25.8553%" y="533" width="0.0105%" height="15" fill="rgb(218,76,16)" fg:x="27078" fg:w="11"/><text x="26.1053%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="25.8553%" y="517" width="0.0105%" height="15" fill="rgb(225,21,48)" fg:x="27078" fg:w="11"/><text x="26.1053%" y="527.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="25.8553%" y="501" width="0.0105%" height="15" fill="rgb(239,223,50)" fg:x="27078" fg:w="11"/><text x="26.1053%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (173 samples, 0.17%)</title><rect x="25.7073%" y="597" width="0.1652%" height="15" fill="rgb(244,45,21)" fg:x="26923" fg:w="173"/><text x="25.9573%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (203 samples, 0.19%)</title><rect x="25.6825%" y="677" width="0.1938%" height="15" fill="rgb(232,33,43)" fg:x="26897" fg:w="203"/><text x="25.9325%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (203 samples, 0.19%)</title><rect x="25.6825%" y="661" width="0.1938%" height="15" fill="rgb(209,8,3)" fg:x="26897" fg:w="203"/><text x="25.9325%" y="671.50"></text></g><g><title>__rg_dealloc (203 samples, 0.19%)</title><rect x="25.6825%" y="645" width="0.1938%" height="15" fill="rgb(214,25,53)" fg:x="26897" fg:w="203"/><text x="25.9325%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (203 samples, 0.19%)</title><rect x="25.6825%" y="629" width="0.1938%" height="15" fill="rgb(254,186,54)" fg:x="26897" fg:w="203"/><text x="25.9325%" y="639.50"></text></g><g><title>rust_dealloc (199 samples, 0.19%)</title><rect x="25.6863%" y="613" width="0.1900%" height="15" fill="rgb(208,174,49)" fg:x="26901" fg:w="199"/><text x="25.9363%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (223 samples, 0.21%)</title><rect x="25.6701%" y="741" width="0.2129%" height="15" fill="rgb(233,191,51)" fg:x="26884" fg:w="223"/><text x="25.9201%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (223 samples, 0.21%)</title><rect x="25.6701%" y="725" width="0.2129%" height="15" fill="rgb(222,134,10)" fg:x="26884" fg:w="223"/><text x="25.9201%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (223 samples, 0.21%)</title><rect x="25.6701%" y="709" width="0.2129%" height="15" fill="rgb(230,226,20)" fg:x="26884" fg:w="223"/><text x="25.9201%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (223 samples, 0.21%)</title><rect x="25.6701%" y="693" width="0.2129%" height="15" fill="rgb(251,111,25)" fg:x="26884" fg:w="223"/><text x="25.9201%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="25.9556%" y="421" width="0.0134%" height="15" fill="rgb(224,40,46)" fg:x="27183" fg:w="14"/><text x="26.2056%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="25.9556%" y="405" width="0.0134%" height="15" fill="rgb(236,108,47)" fg:x="27183" fg:w="14"/><text x="26.2056%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="25.9393%" y="469" width="0.0401%" height="15" fill="rgb(234,93,0)" fg:x="27166" fg:w="42"/><text x="26.1893%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="25.9393%" y="453" width="0.0401%" height="15" fill="rgb(224,213,32)" fg:x="27166" fg:w="42"/><text x="26.1893%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="25.9393%" y="437" width="0.0401%" height="15" fill="rgb(251,11,48)" fg:x="27166" fg:w="42"/><text x="26.1893%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="25.9689%" y="421" width="0.0105%" height="15" fill="rgb(236,173,5)" fg:x="27197" fg:w="11"/><text x="26.2189%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="25.9689%" y="405" width="0.0105%" height="15" fill="rgb(230,95,12)" fg:x="27197" fg:w="11"/><text x="26.2189%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (62 samples, 0.06%)</title><rect x="25.9279%" y="501" width="0.0592%" height="15" fill="rgb(232,209,1)" fg:x="27154" fg:w="62"/><text x="26.1779%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (62 samples, 0.06%)</title><rect x="25.9279%" y="485" width="0.0592%" height="15" fill="rgb(232,6,1)" fg:x="27154" fg:w="62"/><text x="26.1779%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (69 samples, 0.07%)</title><rect x="25.9279%" y="533" width="0.0659%" height="15" fill="rgb(210,224,50)" fg:x="27154" fg:w="69"/><text x="26.1779%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (69 samples, 0.07%)</title><rect x="25.9279%" y="517" width="0.0659%" height="15" fill="rgb(228,127,35)" fg:x="27154" fg:w="69"/><text x="26.1779%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (80 samples, 0.08%)</title><rect x="25.9202%" y="549" width="0.0764%" height="15" fill="rgb(245,102,45)" fg:x="27146" fg:w="80"/><text x="26.1702%" y="559.50"></text></g><g><title>rust_dealloc (91 samples, 0.09%)</title><rect x="25.9155%" y="565" width="0.0869%" height="15" fill="rgb(214,1,49)" fg:x="27141" fg:w="91"/><text x="26.1655%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (98 samples, 0.09%)</title><rect x="25.9097%" y="581" width="0.0936%" height="15" fill="rgb(226,163,40)" fg:x="27135" fg:w="98"/><text x="26.1597%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (112 samples, 0.11%)</title><rect x="25.9097%" y="629" width="0.1069%" height="15" fill="rgb(239,212,28)" fg:x="27135" fg:w="112"/><text x="26.1597%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (112 samples, 0.11%)</title><rect x="25.9097%" y="613" width="0.1069%" height="15" fill="rgb(220,20,13)" fg:x="27135" fg:w="112"/><text x="26.1597%" y="623.50"></text></g><g><title>__rg_dealloc (112 samples, 0.11%)</title><rect x="25.9097%" y="597" width="0.1069%" height="15" fill="rgb(210,164,35)" fg:x="27135" fg:w="112"/><text x="26.1597%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (14 samples, 0.01%)</title><rect x="26.0033%" y="581" width="0.0134%" height="15" fill="rgb(248,109,41)" fg:x="27233" fg:w="14"/><text x="26.2533%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150 samples, 0.14%)</title><rect x="25.8830%" y="725" width="0.1432%" height="15" fill="rgb(238,23,50)" fg:x="27107" fg:w="150"/><text x="26.1330%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (145 samples, 0.14%)</title><rect x="25.8878%" y="709" width="0.1385%" height="15" fill="rgb(211,48,49)" fg:x="27112" fg:w="145"/><text x="26.1378%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (134 samples, 0.13%)</title><rect x="25.8983%" y="693" width="0.1279%" height="15" fill="rgb(223,36,21)" fg:x="27123" fg:w="134"/><text x="26.1483%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (134 samples, 0.13%)</title><rect x="25.8983%" y="677" width="0.1279%" height="15" fill="rgb(207,123,46)" fg:x="27123" fg:w="134"/><text x="26.1483%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (134 samples, 0.13%)</title><rect x="25.8983%" y="661" width="0.1279%" height="15" fill="rgb(240,218,32)" fg:x="27123" fg:w="134"/><text x="26.1483%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (134 samples, 0.13%)</title><rect x="25.8983%" y="645" width="0.1279%" height="15" fill="rgb(252,5,43)" fg:x="27123" fg:w="134"/><text x="26.1483%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (17 samples, 0.02%)</title><rect x="26.0262%" y="725" width="0.0162%" height="15" fill="rgb(252,84,19)" fg:x="27257" fg:w="17"/><text x="26.2762%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="26.0262%" y="709" width="0.0162%" height="15" fill="rgb(243,152,39)" fg:x="27257" fg:w="17"/><text x="26.2762%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="26.0291%" y="693" width="0.0134%" height="15" fill="rgb(234,160,15)" fg:x="27260" fg:w="14"/><text x="26.2791%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (398 samples, 0.38%)</title><rect x="25.6643%" y="757" width="0.3800%" height="15" fill="rgb(237,34,20)" fg:x="26878" fg:w="398"/><text x="25.9143%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (169 samples, 0.16%)</title><rect x="25.8830%" y="741" width="0.1614%" height="15" fill="rgb(229,97,13)" fg:x="27107" fg:w="169"/><text x="26.1330%" y="751.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="26.0520%" y="661" width="0.0115%" height="15" fill="rgb(234,71,50)" fg:x="27284" fg:w="12"/><text x="26.3020%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="26.0816%" y="613" width="0.0220%" height="15" fill="rgb(253,155,4)" fg:x="27315" fg:w="23"/><text x="26.3316%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="26.0902%" y="597" width="0.0134%" height="15" fill="rgb(222,185,37)" fg:x="27324" fg:w="14"/><text x="26.3402%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (48 samples, 0.05%)</title><rect x="26.0635%" y="661" width="0.0458%" height="15" fill="rgb(251,177,13)" fg:x="27296" fg:w="48"/><text x="26.3135%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (48 samples, 0.05%)</title><rect x="26.0635%" y="645" width="0.0458%" height="15" fill="rgb(250,179,40)" fg:x="27296" fg:w="48"/><text x="26.3135%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (48 samples, 0.05%)</title><rect x="26.0635%" y="629" width="0.0458%" height="15" fill="rgb(242,44,2)" fg:x="27296" fg:w="48"/><text x="26.3135%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (66 samples, 0.06%)</title><rect x="26.0520%" y="693" width="0.0630%" height="15" fill="rgb(216,177,13)" fg:x="27284" fg:w="66"/><text x="26.3020%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (66 samples, 0.06%)</title><rect x="26.0520%" y="677" width="0.0630%" height="15" fill="rgb(216,106,43)" fg:x="27284" fg:w="66"/><text x="26.3020%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (76 samples, 0.07%)</title><rect x="26.0520%" y="725" width="0.0726%" height="15" fill="rgb(216,183,2)" fg:x="27284" fg:w="76"/><text x="26.3020%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (76 samples, 0.07%)</title><rect x="26.0520%" y="709" width="0.0726%" height="15" fill="rgb(249,75,3)" fg:x="27284" fg:w="76"/><text x="26.3020%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (85 samples, 0.08%)</title><rect x="26.0520%" y="741" width="0.0812%" height="15" fill="rgb(219,67,39)" fg:x="27284" fg:w="85"/><text x="26.3020%" y="751.50"></text></g><g><title>rust_dealloc (102 samples, 0.10%)</title><rect x="26.0444%" y="757" width="0.0974%" height="15" fill="rgb(253,228,2)" fg:x="27276" fg:w="102"/><text x="26.2944%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (56 samples, 0.05%)</title><rect x="26.1484%" y="757" width="0.0535%" height="15" fill="rgb(235,138,27)" fg:x="27385" fg:w="56"/><text x="26.3984%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,937 samples, 10.44%)</title><rect x="15.7750%" y="805" width="10.4431%" height="15" fill="rgb(236,97,51)" fg:x="16521" fg:w="10937"/><text x="16.0250%" y="815.50">&lt;core::future::..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (10,937 samples, 10.44%)</title><rect x="15.7750%" y="789" width="10.4431%" height="15" fill="rgb(240,80,30)" fg:x="16521" fg:w="10937"/><text x="16.0250%" y="799.50">tremor_runtime:..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,830 samples, 3.66%)</title><rect x="22.5611%" y="773" width="3.6571%" height="15" fill="rgb(230,178,19)" fg:x="23628" fg:w="3830"/><text x="22.8111%" y="783.50">trem..</text></g><g><title>tremor_script::srs::EventPayload::try_new (11 samples, 0.01%)</title><rect x="26.2076%" y="757" width="0.0105%" height="15" fill="rgb(210,190,27)" fg:x="27447" fg:w="11"/><text x="26.4576%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="26.2181%" y="437" width="0.0115%" height="15" fill="rgb(222,107,31)" fg:x="27458" fg:w="12"/><text x="26.4681%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="26.2181%" y="469" width="0.0850%" height="15" fill="rgb(216,127,34)" fg:x="27458" fg:w="89"/><text x="26.4681%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (89 samples, 0.08%)</title><rect x="26.2181%" y="453" width="0.0850%" height="15" fill="rgb(234,116,52)" fg:x="27458" fg:w="89"/><text x="26.4681%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (77 samples, 0.07%)</title><rect x="26.2296%" y="437" width="0.0735%" height="15" fill="rgb(222,124,15)" fg:x="27470" fg:w="77"/><text x="26.4796%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (61 samples, 0.06%)</title><rect x="26.2449%" y="421" width="0.0582%" height="15" fill="rgb(231,179,28)" fg:x="27486" fg:w="61"/><text x="26.4949%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (61 samples, 0.06%)</title><rect x="26.2449%" y="405" width="0.0582%" height="15" fill="rgb(226,93,45)" fg:x="27486" fg:w="61"/><text x="26.4949%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (61 samples, 0.06%)</title><rect x="26.2449%" y="389" width="0.0582%" height="15" fill="rgb(215,8,51)" fg:x="27486" fg:w="61"/><text x="26.4949%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (95 samples, 0.09%)</title><rect x="26.2181%" y="741" width="0.0907%" height="15" fill="rgb(223,106,5)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (95 samples, 0.09%)</title><rect x="26.2181%" y="725" width="0.0907%" height="15" fill="rgb(250,191,5)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (95 samples, 0.09%)</title><rect x="26.2181%" y="709" width="0.0907%" height="15" fill="rgb(242,132,44)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (95 samples, 0.09%)</title><rect x="26.2181%" y="693" width="0.0907%" height="15" fill="rgb(251,152,29)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (95 samples, 0.09%)</title><rect x="26.2181%" y="677" width="0.0907%" height="15" fill="rgb(218,179,5)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (95 samples, 0.09%)</title><rect x="26.2181%" y="661" width="0.0907%" height="15" fill="rgb(227,67,19)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (95 samples, 0.09%)</title><rect x="26.2181%" y="645" width="0.0907%" height="15" fill="rgb(233,119,31)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (95 samples, 0.09%)</title><rect x="26.2181%" y="629" width="0.0907%" height="15" fill="rgb(241,120,22)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.09%)</title><rect x="26.2181%" y="613" width="0.0907%" height="15" fill="rgb(224,102,30)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.09%)</title><rect x="26.2181%" y="597" width="0.0907%" height="15" fill="rgb(210,164,37)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="607.50"></text></g><g><title>alloc::alloc::alloc (95 samples, 0.09%)</title><rect x="26.2181%" y="581" width="0.0907%" height="15" fill="rgb(226,191,16)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="591.50"></text></g><g><title>__rg_alloc (95 samples, 0.09%)</title><rect x="26.2181%" y="565" width="0.0907%" height="15" fill="rgb(214,40,45)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (95 samples, 0.09%)</title><rect x="26.2181%" y="549" width="0.0907%" height="15" fill="rgb(244,29,26)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="559.50"></text></g><g><title>rust_alloc (95 samples, 0.09%)</title><rect x="26.2181%" y="533" width="0.0907%" height="15" fill="rgb(216,16,5)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="26.2181%" y="517" width="0.0907%" height="15" fill="rgb(249,76,35)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="26.2181%" y="501" width="0.0907%" height="15" fill="rgb(207,11,44)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="26.2181%" y="485" width="0.0907%" height="15" fill="rgb(228,190,49)" fg:x="27458" fg:w="95"/><text x="26.4681%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="26.4091%" y="341" width="0.0124%" height="15" fill="rgb(214,173,12)" fg:x="27658" fg:w="13"/><text x="26.6591%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="26.4091%" y="325" width="0.0124%" height="15" fill="rgb(218,26,35)" fg:x="27658" fg:w="13"/><text x="26.6591%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.02%)</title><rect x="26.4091%" y="357" width="0.0153%" height="15" fill="rgb(220,200,19)" fg:x="27658" fg:w="16"/><text x="26.6591%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (23 samples, 0.02%)</title><rect x="26.4053%" y="373" width="0.0220%" height="15" fill="rgb(239,95,49)" fg:x="27654" fg:w="23"/><text x="26.6553%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="26.4397%" y="357" width="0.0162%" height="15" fill="rgb(235,85,53)" fg:x="27690" fg:w="17"/><text x="26.6897%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.15%)</title><rect x="26.4053%" y="405" width="0.1480%" height="15" fill="rgb(233,133,31)" fg:x="27654" fg:w="155"/><text x="26.6553%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (155 samples, 0.15%)</title><rect x="26.4053%" y="389" width="0.1480%" height="15" fill="rgb(218,25,20)" fg:x="27654" fg:w="155"/><text x="26.6553%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (132 samples, 0.13%)</title><rect x="26.4273%" y="373" width="0.1260%" height="15" fill="rgb(252,210,38)" fg:x="27677" fg:w="132"/><text x="26.6773%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (102 samples, 0.10%)</title><rect x="26.4559%" y="357" width="0.0974%" height="15" fill="rgb(242,134,21)" fg:x="27707" fg:w="102"/><text x="26.7059%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (102 samples, 0.10%)</title><rect x="26.4559%" y="341" width="0.0974%" height="15" fill="rgb(213,28,48)" fg:x="27707" fg:w="102"/><text x="26.7059%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (102 samples, 0.10%)</title><rect x="26.4559%" y="325" width="0.0974%" height="15" fill="rgb(250,196,2)" fg:x="27707" fg:w="102"/><text x="26.7059%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="26.5533%" y="405" width="0.0105%" height="15" fill="rgb(227,5,17)" fg:x="27809" fg:w="11"/><text x="26.8033%" y="415.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (11 samples, 0.01%)</title><rect x="26.5533%" y="389" width="0.0105%" height="15" fill="rgb(221,226,24)" fg:x="27809" fg:w="11"/><text x="26.8033%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (286 samples, 0.27%)</title><rect x="26.3872%" y="453" width="0.2731%" height="15" fill="rgb(211,5,48)" fg:x="27635" fg:w="286"/><text x="26.6372%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (286 samples, 0.27%)</title><rect x="26.3872%" y="437" width="0.2731%" height="15" fill="rgb(219,150,6)" fg:x="27635" fg:w="286"/><text x="26.6372%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (270 samples, 0.26%)</title><rect x="26.4024%" y="421" width="0.2578%" height="15" fill="rgb(251,46,16)" fg:x="27651" fg:w="270"/><text x="26.6524%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (93 samples, 0.09%)</title><rect x="26.5714%" y="405" width="0.0888%" height="15" fill="rgb(220,204,40)" fg:x="27828" fg:w="93"/><text x="26.8214%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (93 samples, 0.09%)</title><rect x="26.5714%" y="389" width="0.0888%" height="15" fill="rgb(211,85,2)" fg:x="27828" fg:w="93"/><text x="26.8214%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (336 samples, 0.32%)</title><rect x="26.3509%" y="597" width="0.3208%" height="15" fill="rgb(229,17,7)" fg:x="27597" fg:w="336"/><text x="26.6009%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (336 samples, 0.32%)</title><rect x="26.3509%" y="581" width="0.3208%" height="15" fill="rgb(239,72,28)" fg:x="27597" fg:w="336"/><text x="26.6009%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (336 samples, 0.32%)</title><rect x="26.3509%" y="565" width="0.3208%" height="15" fill="rgb(230,47,54)" fg:x="27597" fg:w="336"/><text x="26.6009%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (331 samples, 0.32%)</title><rect x="26.3556%" y="549" width="0.3161%" height="15" fill="rgb(214,50,8)" fg:x="27602" fg:w="331"/><text x="26.6056%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (331 samples, 0.32%)</title><rect x="26.3556%" y="533" width="0.3161%" height="15" fill="rgb(216,198,43)" fg:x="27602" fg:w="331"/><text x="26.6056%" y="543.50"></text></g><g><title>alloc::alloc::alloc (326 samples, 0.31%)</title><rect x="26.3604%" y="517" width="0.3113%" height="15" fill="rgb(234,20,35)" fg:x="27607" fg:w="326"/><text x="26.6104%" y="527.50"></text></g><g><title>__rg_alloc (326 samples, 0.31%)</title><rect x="26.3604%" y="501" width="0.3113%" height="15" fill="rgb(254,45,19)" fg:x="27607" fg:w="326"/><text x="26.6104%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (326 samples, 0.31%)</title><rect x="26.3604%" y="485" width="0.3113%" height="15" fill="rgb(219,14,44)" fg:x="27607" fg:w="326"/><text x="26.6104%" y="495.50"></text></g><g><title>rust_alloc (316 samples, 0.30%)</title><rect x="26.3700%" y="469" width="0.3017%" height="15" fill="rgb(217,220,26)" fg:x="27617" fg:w="316"/><text x="26.6200%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="26.6602%" y="453" width="0.0115%" height="15" fill="rgb(213,158,28)" fg:x="27921" fg:w="12"/><text x="26.9102%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (414 samples, 0.40%)</title><rect x="26.3404%" y="677" width="0.3953%" height="15" fill="rgb(252,51,52)" fg:x="27586" fg:w="414"/><text x="26.5904%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (403 samples, 0.38%)</title><rect x="26.3509%" y="661" width="0.3848%" height="15" fill="rgb(246,89,16)" fg:x="27597" fg:w="403"/><text x="26.6009%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (403 samples, 0.38%)</title><rect x="26.3509%" y="645" width="0.3848%" height="15" fill="rgb(216,158,49)" fg:x="27597" fg:w="403"/><text x="26.6009%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (403 samples, 0.38%)</title><rect x="26.3509%" y="629" width="0.3848%" height="15" fill="rgb(236,107,19)" fg:x="27597" fg:w="403"/><text x="26.6009%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (403 samples, 0.38%)</title><rect x="26.3509%" y="613" width="0.3848%" height="15" fill="rgb(228,185,30)" fg:x="27597" fg:w="403"/><text x="26.6009%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (67 samples, 0.06%)</title><rect x="26.6717%" y="597" width="0.0640%" height="15" fill="rgb(246,134,8)" fg:x="27933" fg:w="67"/><text x="26.9217%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (67 samples, 0.06%)</title><rect x="26.6717%" y="581" width="0.0640%" height="15" fill="rgb(214,143,50)" fg:x="27933" fg:w="67"/><text x="26.9217%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (46 samples, 0.04%)</title><rect x="26.6917%" y="565" width="0.0439%" height="15" fill="rgb(228,75,8)" fg:x="27954" fg:w="46"/><text x="26.9417%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="26.7357%" y="677" width="0.0181%" height="15" fill="rgb(207,175,4)" fg:x="28000" fg:w="19"/><text x="26.9857%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="26.8035%" y="453" width="0.0191%" height="15" fill="rgb(205,108,24)" fg:x="28071" fg:w="20"/><text x="27.0535%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="26.8264%" y="437" width="0.0115%" height="15" fill="rgb(244,120,49)" fg:x="28095" fg:w="12"/><text x="27.0764%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.09%)</title><rect x="26.8035%" y="485" width="0.0936%" height="15" fill="rgb(223,47,38)" fg:x="28071" fg:w="98"/><text x="27.0535%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (98 samples, 0.09%)</title><rect x="26.8035%" y="469" width="0.0936%" height="15" fill="rgb(229,179,11)" fg:x="28071" fg:w="98"/><text x="27.0535%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (78 samples, 0.07%)</title><rect x="26.8226%" y="453" width="0.0745%" height="15" fill="rgb(231,122,1)" fg:x="28091" fg:w="78"/><text x="27.0726%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (62 samples, 0.06%)</title><rect x="26.8378%" y="437" width="0.0592%" height="15" fill="rgb(245,119,9)" fg:x="28107" fg:w="62"/><text x="27.0878%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="26.8378%" y="421" width="0.0592%" height="15" fill="rgb(241,163,25)" fg:x="28107" fg:w="62"/><text x="27.0878%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="26.8378%" y="405" width="0.0592%" height="15" fill="rgb(217,214,3)" fg:x="28107" fg:w="62"/><text x="27.0878%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (241 samples, 0.23%)</title><rect x="26.7949%" y="533" width="0.2301%" height="15" fill="rgb(240,86,28)" fg:x="28062" fg:w="241"/><text x="27.0449%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (241 samples, 0.23%)</title><rect x="26.7949%" y="517" width="0.2301%" height="15" fill="rgb(215,47,9)" fg:x="28062" fg:w="241"/><text x="27.0449%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (233 samples, 0.22%)</title><rect x="26.8025%" y="501" width="0.2225%" height="15" fill="rgb(252,25,45)" fg:x="28070" fg:w="233"/><text x="27.0525%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (125 samples, 0.12%)</title><rect x="26.9056%" y="485" width="0.1194%" height="15" fill="rgb(251,164,9)" fg:x="28178" fg:w="125"/><text x="27.1556%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (125 samples, 0.12%)</title><rect x="26.9056%" y="469" width="0.1194%" height="15" fill="rgb(233,194,0)" fg:x="28178" fg:w="125"/><text x="27.1556%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (279 samples, 0.27%)</title><rect x="26.7720%" y="629" width="0.2664%" height="15" fill="rgb(249,111,24)" fg:x="28038" fg:w="279"/><text x="27.0220%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (279 samples, 0.27%)</title><rect x="26.7720%" y="613" width="0.2664%" height="15" fill="rgb(250,223,3)" fg:x="28038" fg:w="279"/><text x="27.0220%" y="623.50"></text></g><g><title>alloc::alloc::alloc (268 samples, 0.26%)</title><rect x="26.7825%" y="597" width="0.2559%" height="15" fill="rgb(236,178,37)" fg:x="28049" fg:w="268"/><text x="27.0325%" y="607.50"></text></g><g><title>__rg_alloc (268 samples, 0.26%)</title><rect x="26.7825%" y="581" width="0.2559%" height="15" fill="rgb(241,158,50)" fg:x="28049" fg:w="268"/><text x="27.0325%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (268 samples, 0.26%)</title><rect x="26.7825%" y="565" width="0.2559%" height="15" fill="rgb(213,121,41)" fg:x="28049" fg:w="268"/><text x="27.0325%" y="575.50"></text></g><g><title>rust_alloc (263 samples, 0.25%)</title><rect x="26.7872%" y="549" width="0.2511%" height="15" fill="rgb(240,92,3)" fg:x="28054" fg:w="263"/><text x="27.0372%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="27.0250%" y="533" width="0.0134%" height="15" fill="rgb(205,123,3)" fg:x="28303" fg:w="14"/><text x="27.2750%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (315 samples, 0.30%)</title><rect x="26.7538%" y="677" width="0.3008%" height="15" fill="rgb(205,97,47)" fg:x="28019" fg:w="315"/><text x="27.0038%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (296 samples, 0.28%)</title><rect x="26.7720%" y="661" width="0.2826%" height="15" fill="rgb(247,152,14)" fg:x="28038" fg:w="296"/><text x="27.0220%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (296 samples, 0.28%)</title><rect x="26.7720%" y="645" width="0.2826%" height="15" fill="rgb(248,195,53)" fg:x="28038" fg:w="296"/><text x="27.0220%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (767 samples, 0.73%)</title><rect x="26.3375%" y="693" width="0.7324%" height="15" fill="rgb(226,201,16)" fg:x="27583" fg:w="767"/><text x="26.5875%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.02%)</title><rect x="27.0546%" y="677" width="0.0153%" height="15" fill="rgb(205,98,0)" fg:x="28334" fg:w="16"/><text x="27.3046%" y="687.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (897 samples, 0.86%)</title><rect x="26.2181%" y="757" width="0.8565%" height="15" fill="rgb(214,191,48)" fg:x="27458" fg:w="897"/><text x="26.4681%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (802 samples, 0.77%)</title><rect x="26.3089%" y="741" width="0.7658%" height="15" fill="rgb(237,112,39)" fg:x="27553" fg:w="802"/><text x="26.5589%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (772 samples, 0.74%)</title><rect x="26.3375%" y="725" width="0.7371%" height="15" fill="rgb(247,203,27)" fg:x="27583" fg:w="772"/><text x="26.5875%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (772 samples, 0.74%)</title><rect x="26.3375%" y="709" width="0.7371%" height="15" fill="rgb(235,124,28)" fg:x="27583" fg:w="772"/><text x="26.5875%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (11 samples, 0.01%)</title><rect x="27.0947%" y="373" width="0.0105%" height="15" fill="rgb(208,207,46)" fg:x="28376" fg:w="11"/><text x="27.3447%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="27.0937%" y="389" width="0.0134%" height="15" fill="rgb(234,176,4)" fg:x="28375" fg:w="14"/><text x="27.3437%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (38 samples, 0.04%)</title><rect x="27.1176%" y="373" width="0.0363%" height="15" fill="rgb(230,133,28)" fg:x="28400" fg:w="38"/><text x="27.3676%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (38 samples, 0.04%)</title><rect x="27.1176%" y="357" width="0.0363%" height="15" fill="rgb(211,137,40)" fg:x="28400" fg:w="38"/><text x="27.3676%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (83 samples, 0.08%)</title><rect x="27.0937%" y="421" width="0.0793%" height="15" fill="rgb(254,35,13)" fg:x="28375" fg:w="83"/><text x="27.3437%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (83 samples, 0.08%)</title><rect x="27.0937%" y="405" width="0.0793%" height="15" fill="rgb(225,49,51)" fg:x="28375" fg:w="83"/><text x="27.3437%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (69 samples, 0.07%)</title><rect x="27.1071%" y="389" width="0.0659%" height="15" fill="rgb(251,10,15)" fg:x="28389" fg:w="69"/><text x="27.3571%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (20 samples, 0.02%)</title><rect x="27.1539%" y="373" width="0.0191%" height="15" fill="rgb(228,207,15)" fg:x="28438" fg:w="20"/><text x="27.4039%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (20 samples, 0.02%)</title><rect x="27.1539%" y="357" width="0.0191%" height="15" fill="rgb(241,99,19)" fg:x="28438" fg:w="20"/><text x="27.4039%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (105 samples, 0.10%)</title><rect x="27.0928%" y="437" width="0.1003%" height="15" fill="rgb(207,104,49)" fg:x="28374" fg:w="105"/><text x="27.3428%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="27.1730%" y="421" width="0.0201%" height="15" fill="rgb(234,99,18)" fg:x="28458" fg:w="21"/><text x="27.4230%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (21 samples, 0.02%)</title><rect x="27.1730%" y="405" width="0.0201%" height="15" fill="rgb(213,191,49)" fg:x="28458" fg:w="21"/><text x="27.4230%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (21 samples, 0.02%)</title><rect x="27.1730%" y="389" width="0.0201%" height="15" fill="rgb(210,226,19)" fg:x="28458" fg:w="21"/><text x="27.4230%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (21 samples, 0.02%)</title><rect x="27.1730%" y="373" width="0.0201%" height="15" fill="rgb(229,97,18)" fg:x="28458" fg:w="21"/><text x="27.4230%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (155 samples, 0.15%)</title><rect x="27.0746%" y="453" width="0.1480%" height="15" fill="rgb(211,167,15)" fg:x="28355" fg:w="155"/><text x="27.3246%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (24 samples, 0.02%)</title><rect x="27.1997%" y="437" width="0.0229%" height="15" fill="rgb(210,169,34)" fg:x="28486" fg:w="24"/><text x="27.4497%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (24 samples, 0.02%)</title><rect x="27.1997%" y="421" width="0.0229%" height="15" fill="rgb(241,121,31)" fg:x="28486" fg:w="24"/><text x="27.4497%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (24 samples, 0.02%)</title><rect x="27.1997%" y="405" width="0.0229%" height="15" fill="rgb(232,40,11)" fg:x="28486" fg:w="24"/><text x="27.4497%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (24 samples, 0.02%)</title><rect x="27.1997%" y="389" width="0.0229%" height="15" fill="rgb(205,86,26)" fg:x="28486" fg:w="24"/><text x="27.4497%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (77 samples, 0.07%)</title><rect x="27.2780%" y="437" width="0.0735%" height="15" fill="rgb(231,126,28)" fg:x="28568" fg:w="77"/><text x="27.5280%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (874 samples, 0.83%)</title><rect x="27.0746%" y="485" width="0.8345%" height="15" fill="rgb(219,221,18)" fg:x="28355" fg:w="874"/><text x="27.3246%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (874 samples, 0.83%)</title><rect x="27.0746%" y="469" width="0.8345%" height="15" fill="rgb(211,40,0)" fg:x="28355" fg:w="874"/><text x="27.3246%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (719 samples, 0.69%)</title><rect x="27.2226%" y="453" width="0.6865%" height="15" fill="rgb(239,85,43)" fg:x="28510" fg:w="719"/><text x="27.4726%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (584 samples, 0.56%)</title><rect x="27.3515%" y="437" width="0.5576%" height="15" fill="rgb(231,55,21)" fg:x="28645" fg:w="584"/><text x="27.6015%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (584 samples, 0.56%)</title><rect x="27.3515%" y="421" width="0.5576%" height="15" fill="rgb(225,184,43)" fg:x="28645" fg:w="584"/><text x="27.6015%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (584 samples, 0.56%)</title><rect x="27.3515%" y="405" width="0.5576%" height="15" fill="rgb(251,158,41)" fg:x="28645" fg:w="584"/><text x="27.6015%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (17 samples, 0.02%)</title><rect x="27.9092%" y="437" width="0.0162%" height="15" fill="rgb(234,159,37)" fg:x="29229" fg:w="17"/><text x="28.1592%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (15 samples, 0.01%)</title><rect x="27.9111%" y="421" width="0.0143%" height="15" fill="rgb(216,204,22)" fg:x="29231" fg:w="15"/><text x="28.1611%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="27.9350%" y="405" width="0.0124%" height="15" fill="rgb(214,17,3)" fg:x="29256" fg:w="13"/><text x="28.1850%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="27.9350%" y="389" width="0.0124%" height="15" fill="rgb(212,111,17)" fg:x="29256" fg:w="13"/><text x="28.1850%" y="399.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (12,765 samples, 12.19%)</title><rect x="15.7750%" y="821" width="12.1886%" height="15" fill="rgb(221,157,24)" fg:x="16521" fg:w="12765"/><text x="16.0250%" y="831.50">tremor_runtime::co..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,828 samples, 1.75%)</title><rect x="26.2181%" y="805" width="1.7455%" height="15" fill="rgb(252,16,13)" fg:x="27458" fg:w="1828"/><text x="26.4681%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,828 samples, 1.75%)</title><rect x="26.2181%" y="789" width="1.7455%" height="15" fill="rgb(221,62,2)" fg:x="27458" fg:w="1828"/><text x="26.4681%" y="799.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (1,828 samples, 1.75%)</title><rect x="26.2181%" y="773" width="1.7455%" height="15" fill="rgb(247,87,22)" fg:x="27458" fg:w="1828"/><text x="26.4681%" y="783.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (931 samples, 0.89%)</title><rect x="27.0746%" y="757" width="0.8890%" height="15" fill="rgb(215,73,9)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (931 samples, 0.89%)</title><rect x="27.0746%" y="741" width="0.8890%" height="15" fill="rgb(207,175,33)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (931 samples, 0.89%)</title><rect x="27.0746%" y="725" width="0.8890%" height="15" fill="rgb(243,129,54)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (931 samples, 0.89%)</title><rect x="27.0746%" y="709" width="0.8890%" height="15" fill="rgb(227,119,45)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (931 samples, 0.89%)</title><rect x="27.0746%" y="693" width="0.8890%" height="15" fill="rgb(205,109,36)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (931 samples, 0.89%)</title><rect x="27.0746%" y="677" width="0.8890%" height="15" fill="rgb(205,6,39)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (931 samples, 0.89%)</title><rect x="27.0746%" y="661" width="0.8890%" height="15" fill="rgb(221,32,16)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (931 samples, 0.89%)</title><rect x="27.0746%" y="645" width="0.8890%" height="15" fill="rgb(228,144,50)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (931 samples, 0.89%)</title><rect x="27.0746%" y="629" width="0.8890%" height="15" fill="rgb(229,201,53)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (931 samples, 0.89%)</title><rect x="27.0746%" y="613" width="0.8890%" height="15" fill="rgb(249,153,27)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="623.50"></text></g><g><title>alloc::alloc::alloc (931 samples, 0.89%)</title><rect x="27.0746%" y="597" width="0.8890%" height="15" fill="rgb(227,106,25)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="607.50"></text></g><g><title>__rg_alloc (931 samples, 0.89%)</title><rect x="27.0746%" y="581" width="0.8890%" height="15" fill="rgb(230,65,29)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (931 samples, 0.89%)</title><rect x="27.0746%" y="565" width="0.8890%" height="15" fill="rgb(221,57,46)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="575.50"></text></g><g><title>rust_alloc (931 samples, 0.89%)</title><rect x="27.0746%" y="549" width="0.8890%" height="15" fill="rgb(229,161,17)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (931 samples, 0.89%)</title><rect x="27.0746%" y="533" width="0.8890%" height="15" fill="rgb(222,213,11)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (931 samples, 0.89%)</title><rect x="27.0746%" y="517" width="0.8890%" height="15" fill="rgb(235,35,13)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (931 samples, 0.89%)</title><rect x="27.0746%" y="501" width="0.8890%" height="15" fill="rgb(233,158,34)" fg:x="28355" fg:w="931"/><text x="27.3246%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="27.9092%" y="485" width="0.0544%" height="15" fill="rgb(215,151,48)" fg:x="29229" fg:w="57"/><text x="28.1592%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="27.9092%" y="469" width="0.0544%" height="15" fill="rgb(229,84,14)" fg:x="29229" fg:w="57"/><text x="28.1592%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="27.9092%" y="453" width="0.0544%" height="15" fill="rgb(229,68,14)" fg:x="29229" fg:w="57"/><text x="28.1592%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="27.9254%" y="437" width="0.0382%" height="15" fill="rgb(243,106,26)" fg:x="29246" fg:w="40"/><text x="28.1754%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (38 samples, 0.04%)</title><rect x="27.9273%" y="421" width="0.0363%" height="15" fill="rgb(206,45,38)" fg:x="29248" fg:w="38"/><text x="28.1773%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::close (17 samples, 0.02%)</title><rect x="27.9474%" y="405" width="0.0162%" height="15" fill="rgb(226,6,15)" fg:x="29269" fg:w="17"/><text x="28.1974%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::terminate (17 samples, 0.02%)</title><rect x="27.9474%" y="389" width="0.0162%" height="15" fill="rgb(232,22,54)" fg:x="29269" fg:w="17"/><text x="28.1974%" y="399.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::read (17 samples, 0.02%)</title><rect x="27.9474%" y="373" width="0.0162%" height="15" fill="rgb(229,222,32)" fg:x="29269" fg:w="17"/><text x="28.1974%" y="383.50"></text></g><g><title>size_to_sizeclass (28 samples, 0.03%)</title><rect x="28.1001%" y="773" width="0.0267%" height="15" fill="rgb(228,62,29)" fg:x="29429" fg:w="28"/><text x="28.3501%" y="783.50"></text></g><g><title>rust_dealloc (25 samples, 0.02%)</title><rect x="28.1422%" y="709" width="0.0239%" height="15" fill="rgb(251,103,34)" fg:x="29473" fg:w="25"/><text x="28.3922%" y="719.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="28.2271%" y="677" width="0.0172%" height="15" fill="rgb(233,12,30)" fg:x="29562" fg:w="18"/><text x="28.4771%" y="687.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="28.2271%" y="661" width="0.0172%" height="15" fill="rgb(238,52,0)" fg:x="29562" fg:w="18"/><text x="28.4771%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (93 samples, 0.09%)</title><rect x="28.1746%" y="709" width="0.0888%" height="15" fill="rgb(223,98,5)" fg:x="29507" fg:w="93"/><text x="28.4246%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (77 samples, 0.07%)</title><rect x="28.1899%" y="693" width="0.0735%" height="15" fill="rgb(228,75,37)" fg:x="29523" fg:w="77"/><text x="28.4399%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (171 samples, 0.16%)</title><rect x="28.1269%" y="773" width="0.1633%" height="15" fill="rgb(205,115,49)" fg:x="29457" fg:w="171"/><text x="28.3769%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (171 samples, 0.16%)</title><rect x="28.1269%" y="757" width="0.1633%" height="15" fill="rgb(250,154,43)" fg:x="29457" fg:w="171"/><text x="28.3769%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (171 samples, 0.16%)</title><rect x="28.1269%" y="741" width="0.1633%" height="15" fill="rgb(226,43,29)" fg:x="29457" fg:w="171"/><text x="28.3769%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (171 samples, 0.16%)</title><rect x="28.1269%" y="725" width="0.1633%" height="15" fill="rgb(249,228,39)" fg:x="29457" fg:w="171"/><text x="28.3769%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (28 samples, 0.03%)</title><rect x="28.2634%" y="709" width="0.0267%" height="15" fill="rgb(216,79,43)" fg:x="29600" fg:w="28"/><text x="28.5134%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (214 samples, 0.20%)</title><rect x="28.0916%" y="789" width="0.2043%" height="15" fill="rgb(228,95,12)" fg:x="29420" fg:w="214"/><text x="28.3416%" y="799.50"></text></g><g><title>rust_dealloc (236 samples, 0.23%)</title><rect x="28.0820%" y="805" width="0.2253%" height="15" fill="rgb(249,221,15)" fg:x="29410" fg:w="236"/><text x="28.3320%" y="815.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="28.2959%" y="789" width="0.0115%" height="15" fill="rgb(233,34,13)" fg:x="29634" fg:w="12"/><text x="28.5459%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (396 samples, 0.38%)</title><rect x="27.9636%" y="821" width="0.3781%" height="15" fill="rgb(214,103,39)" fg:x="29286" fg:w="396"/><text x="28.2136%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (36 samples, 0.03%)</title><rect x="28.3073%" y="805" width="0.0344%" height="15" fill="rgb(251,126,39)" fg:x="29646" fg:w="36"/><text x="28.5573%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (36 samples, 0.03%)</title><rect x="28.3073%" y="789" width="0.0344%" height="15" fill="rgb(214,216,36)" fg:x="29646" fg:w="36"/><text x="28.5573%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (36 samples, 0.03%)</title><rect x="28.3073%" y="773" width="0.0344%" height="15" fill="rgb(220,221,8)" fg:x="29646" fg:w="36"/><text x="28.5573%" y="783.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (31 samples, 0.03%)</title><rect x="28.3121%" y="757" width="0.0296%" height="15" fill="rgb(240,216,3)" fg:x="29651" fg:w="31"/><text x="28.5621%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.02%)</title><rect x="28.3169%" y="741" width="0.0248%" height="15" fill="rgb(232,218,17)" fg:x="29656" fg:w="26"/><text x="28.5669%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="28.3169%" y="725" width="0.0248%" height="15" fill="rgb(229,163,45)" fg:x="29656" fg:w="26"/><text x="28.5669%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.02%)</title><rect x="28.3169%" y="709" width="0.0248%" height="15" fill="rgb(231,110,42)" fg:x="29656" fg:w="26"/><text x="28.5669%" y="719.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.01%)</title><rect x="29.0283%" y="789" width="0.0143%" height="15" fill="rgb(208,170,48)" fg:x="30401" fg:w="15"/><text x="29.2783%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="29.0139%" y="805" width="0.0296%" height="15" fill="rgb(239,116,25)" fg:x="30386" fg:w="31"/><text x="29.2639%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="29.1648%" y="789" width="0.0143%" height="15" fill="rgb(219,200,50)" fg:x="30544" fg:w="15"/><text x="29.4148%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (508 samples, 0.49%)</title><rect x="29.4006%" y="773" width="0.4851%" height="15" fill="rgb(245,200,0)" fg:x="30791" fg:w="508"/><text x="29.6506%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="29.9124%" y="757" width="0.0115%" height="15" fill="rgb(245,119,33)" fg:x="31327" fg:w="12"/><text x="30.1624%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (439 samples, 0.42%)</title><rect x="29.8857%" y="773" width="0.4192%" height="15" fill="rgb(231,125,12)" fg:x="31299" fg:w="439"/><text x="30.1357%" y="783.50"></text></g><g><title>core::ptr::write (399 samples, 0.38%)</title><rect x="29.9239%" y="757" width="0.3810%" height="15" fill="rgb(216,96,41)" fg:x="31339" fg:w="399"/><text x="30.1739%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (398 samples, 0.38%)</title><rect x="29.9249%" y="741" width="0.3800%" height="15" fill="rgb(248,43,45)" fg:x="31340" fg:w="398"/><text x="30.1749%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (49 samples, 0.05%)</title><rect x="30.3049%" y="773" width="0.0468%" height="15" fill="rgb(217,222,7)" fg:x="31738" fg:w="49"/><text x="30.5549%" y="783.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (43 samples, 0.04%)</title><rect x="30.3679%" y="725" width="0.0411%" height="15" fill="rgb(233,28,6)" fg:x="31804" fg:w="43"/><text x="30.6179%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (44 samples, 0.04%)</title><rect x="30.3679%" y="741" width="0.0420%" height="15" fill="rgb(231,218,15)" fg:x="31804" fg:w="44"/><text x="30.6179%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (991 samples, 0.95%)</title><rect x="30.4118%" y="677" width="0.9463%" height="15" fill="rgb(226,171,48)" fg:x="31850" fg:w="991"/><text x="30.6618%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (879 samples, 0.84%)</title><rect x="30.5188%" y="661" width="0.8393%" height="15" fill="rgb(235,201,9)" fg:x="31962" fg:w="879"/><text x="30.7688%" y="671.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (1,044 samples, 1.00%)</title><rect x="30.3622%" y="757" width="0.9969%" height="15" fill="rgb(217,80,15)" fg:x="31798" fg:w="1044"/><text x="30.6122%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (992 samples, 0.95%)</title><rect x="30.4118%" y="741" width="0.9472%" height="15" fill="rgb(219,152,8)" fg:x="31850" fg:w="992"/><text x="30.6618%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (992 samples, 0.95%)</title><rect x="30.4118%" y="725" width="0.9472%" height="15" fill="rgb(243,107,38)" fg:x="31850" fg:w="992"/><text x="30.6618%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (992 samples, 0.95%)</title><rect x="30.4118%" y="709" width="0.9472%" height="15" fill="rgb(231,17,5)" fg:x="31850" fg:w="992"/><text x="30.6618%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (992 samples, 0.95%)</title><rect x="30.4118%" y="693" width="0.9472%" height="15" fill="rgb(209,25,54)" fg:x="31850" fg:w="992"/><text x="30.6618%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,068 samples, 1.02%)</title><rect x="30.3517%" y="773" width="1.0198%" height="15" fill="rgb(219,0,2)" fg:x="31787" fg:w="1068"/><text x="30.6017%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (13 samples, 0.01%)</title><rect x="31.3590%" y="757" width="0.0124%" height="15" fill="rgb(246,9,5)" fg:x="32842" fg:w="13"/><text x="31.6090%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (16 samples, 0.02%)</title><rect x="31.3791%" y="757" width="0.0153%" height="15" fill="rgb(226,159,4)" fg:x="32863" fg:w="16"/><text x="31.6291%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (16 samples, 0.02%)</title><rect x="31.3791%" y="741" width="0.0153%" height="15" fill="rgb(219,175,34)" fg:x="32863" fg:w="16"/><text x="31.6291%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.02%)</title><rect x="31.3791%" y="725" width="0.0153%" height="15" fill="rgb(236,10,46)" fg:x="32863" fg:w="16"/><text x="31.6291%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.02%)</title><rect x="31.3791%" y="709" width="0.0153%" height="15" fill="rgb(240,211,16)" fg:x="32863" fg:w="16"/><text x="31.6291%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="32.0332%" y="741" width="0.0162%" height="15" fill="rgb(205,3,43)" fg:x="33548" fg:w="17"/><text x="32.2832%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (18 samples, 0.02%)</title><rect x="32.0494%" y="741" width="0.0172%" height="15" fill="rgb(245,7,22)" fg:x="33565" fg:w="18"/><text x="32.2994%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (34 samples, 0.03%)</title><rect x="32.0666%" y="741" width="0.0325%" height="15" fill="rgb(239,132,32)" fg:x="33583" fg:w="34"/><text x="32.3166%" y="751.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="32.0838%" y="725" width="0.0153%" height="15" fill="rgb(228,202,34)" fg:x="33601" fg:w="16"/><text x="32.3338%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (498 samples, 0.48%)</title><rect x="32.0990%" y="741" width="0.4755%" height="15" fill="rgb(254,200,22)" fg:x="33617" fg:w="498"/><text x="32.3490%" y="751.50"></text></g><g><title>core::ptr::write (491 samples, 0.47%)</title><rect x="32.1057%" y="725" width="0.4688%" height="15" fill="rgb(219,10,39)" fg:x="33624" fg:w="491"/><text x="32.3557%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (463 samples, 0.44%)</title><rect x="32.1325%" y="709" width="0.4421%" height="15" fill="rgb(226,210,39)" fg:x="33652" fg:w="463"/><text x="32.3825%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,238 samples, 1.18%)</title><rect x="31.3944%" y="757" width="1.1821%" height="15" fill="rgb(208,219,16)" fg:x="32879" fg:w="1238"/><text x="31.6444%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,272 samples, 1.21%)</title><rect x="31.3714%" y="773" width="1.2146%" height="15" fill="rgb(216,158,51)" fg:x="32855" fg:w="1272"/><text x="31.6214%" y="783.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,574 samples, 3.41%)</title><rect x="29.1791%" y="789" width="3.4126%" height="15" fill="rgb(233,14,44)" fg:x="30559" fg:w="3574"/><text x="29.4291%" y="799.50">tre..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (72 samples, 0.07%)</title><rect x="32.5917%" y="789" width="0.0687%" height="15" fill="rgb(237,97,39)" fg:x="34133" fg:w="72"/><text x="32.8417%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,822 samples, 3.65%)</title><rect x="29.0454%" y="805" width="3.6494%" height="15" fill="rgb(218,198,43)" fg:x="30419" fg:w="3822"/><text x="29.2954%" y="815.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (36 samples, 0.03%)</title><rect x="32.6605%" y="789" width="0.0344%" height="15" fill="rgb(231,104,20)" fg:x="34205" fg:w="36"/><text x="32.9105%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,543 samples, 1.47%)</title><rect x="32.6949%" y="805" width="1.4733%" height="15" fill="rgb(254,36,13)" fg:x="34241" fg:w="1543"/><text x="32.9449%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="34.1720%" y="789" width="0.0201%" height="15" fill="rgb(248,14,50)" fg:x="35788" fg:w="21"/><text x="34.4220%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (28 samples, 0.03%)</title><rect x="34.1720%" y="805" width="0.0267%" height="15" fill="rgb(217,107,29)" fg:x="35788" fg:w="28"/><text x="34.4220%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="34.2035%" y="805" width="0.0105%" height="15" fill="rgb(251,169,33)" fg:x="35821" fg:w="11"/><text x="34.4535%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="34.2035%" y="789" width="0.0105%" height="15" fill="rgb(217,108,32)" fg:x="35821" fg:w="11"/><text x="34.4535%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1157" width="26.6765%" height="15" fill="rgb(219,66,42)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1167.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1141" width="26.6765%" height="15" fill="rgb(206,180,7)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1151.50">async_global_executor::reactor::block_on::{..</text></g><g><title>async_io::driver::block_on (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1125" width="26.6765%" height="15" fill="rgb(208,226,31)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1135.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1109" width="26.6765%" height="15" fill="rgb(218,26,49)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1119.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1093" width="26.6765%" height="15" fill="rgb(233,197,48)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1103.50">&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1077" width="26.6765%" height="15" fill="rgb(252,181,51)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1087.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1061" width="26.6765%" height="15" fill="rgb(253,90,19)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1071.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1045" width="26.6765%" height="15" fill="rgb(215,171,30)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1055.50">&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1029" width="26.6765%" height="15" fill="rgb(214,222,9)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1039.50">async_executor::Executor::run::{{closure}}:..</text></g><g><title>async_task::runnable::Runnable::run (27,938 samples, 26.68%)</title><rect x="7.5500%" y="1013" width="26.6765%" height="15" fill="rgb(223,3,22)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1023.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (27,938 samples, 26.68%)</title><rect x="7.5500%" y="997" width="26.6765%" height="15" fill="rgb(225,196,46)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="1007.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,938 samples, 26.68%)</title><rect x="7.5500%" y="981" width="26.6765%" height="15" fill="rgb(209,110,37)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,938 samples, 26.68%)</title><rect x="7.5500%" y="965" width="26.6765%" height="15" fill="rgb(249,89,12)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="975.50">&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (27,938 samples, 26.68%)</title><rect x="7.5500%" y="949" width="26.6765%" height="15" fill="rgb(226,27,33)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="959.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (27,938 samples, 26.68%)</title><rect x="7.5500%" y="933" width="26.6765%" height="15" fill="rgb(213,82,22)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="943.50">&lt;async_std::task::builder::SupportTaskLocal..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (27,938 samples, 26.68%)</title><rect x="7.5500%" y="917" width="26.6765%" height="15" fill="rgb(248,140,0)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="927.50">async_std::task::task_locals_wrapper::TaskL..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27,938 samples, 26.68%)</title><rect x="7.5500%" y="901" width="26.6765%" height="15" fill="rgb(228,106,3)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="911.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27,938 samples, 26.68%)</title><rect x="7.5500%" y="885" width="26.6765%" height="15" fill="rgb(209,23,37)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="895.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (27,938 samples, 26.68%)</title><rect x="7.5500%" y="869" width="26.6765%" height="15" fill="rgb(241,93,50)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="879.50">async_std::task::task_locals_wrapper::TaskL..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (27,938 samples, 26.68%)</title><rect x="7.5500%" y="853" width="26.6765%" height="15" fill="rgb(253,46,43)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="863.50">&lt;async_std::task::builder::SupportTaskLocal..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,938 samples, 26.68%)</title><rect x="7.5500%" y="837" width="26.6765%" height="15" fill="rgb(226,206,43)" fg:x="7907" fg:w="27938"/><text x="7.8000%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T&gt;..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,163 samples, 5.88%)</title><rect x="28.3417%" y="821" width="5.8847%" height="15" fill="rgb(217,54,7)" fg:x="29682" fg:w="6163"/><text x="28.5917%" y="831.50">tremor_..</text></g><g><title>tremor_runtime::pipeline::maybe_send (13 samples, 0.01%)</title><rect x="34.2140%" y="805" width="0.0124%" height="15" fill="rgb(223,5,52)" fg:x="35832" fg:w="13"/><text x="34.4640%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (698 samples, 0.67%)</title><rect x="34.2780%" y="597" width="0.6665%" height="15" fill="rgb(206,52,46)" fg:x="35899" fg:w="698"/><text x="34.5280%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (754 samples, 0.72%)</title><rect x="34.2274%" y="693" width="0.7200%" height="15" fill="rgb(253,136,11)" fg:x="35846" fg:w="754"/><text x="34.4774%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (754 samples, 0.72%)</title><rect x="34.2274%" y="677" width="0.7200%" height="15" fill="rgb(208,106,33)" fg:x="35846" fg:w="754"/><text x="34.4774%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (754 samples, 0.72%)</title><rect x="34.2274%" y="661" width="0.7200%" height="15" fill="rgb(206,54,4)" fg:x="35846" fg:w="754"/><text x="34.4774%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (754 samples, 0.72%)</title><rect x="34.2274%" y="645" width="0.7200%" height="15" fill="rgb(213,3,15)" fg:x="35846" fg:w="754"/><text x="34.4774%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (750 samples, 0.72%)</title><rect x="34.2312%" y="629" width="0.7161%" height="15" fill="rgb(252,211,39)" fg:x="35850" fg:w="750"/><text x="34.4812%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (750 samples, 0.72%)</title><rect x="34.2312%" y="613" width="0.7161%" height="15" fill="rgb(223,6,36)" fg:x="35850" fg:w="750"/><text x="34.4812%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="34.9588%" y="341" width="0.0143%" height="15" fill="rgb(252,169,45)" fg:x="36612" fg:w="15"/><text x="35.2088%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="34.9588%" y="325" width="0.0143%" height="15" fill="rgb(212,48,26)" fg:x="36612" fg:w="15"/><text x="35.2088%" y="335.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="34.9607%" y="309" width="0.0124%" height="15" fill="rgb(251,102,48)" fg:x="36614" fg:w="13"/><text x="35.2107%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (21 samples, 0.02%)</title><rect x="34.9588%" y="357" width="0.0201%" height="15" fill="rgb(243,208,16)" fg:x="36612" fg:w="21"/><text x="35.2088%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (24 samples, 0.02%)</title><rect x="34.9569%" y="373" width="0.0229%" height="15" fill="rgb(219,96,24)" fg:x="36610" fg:w="24"/><text x="35.2069%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="34.9932%" y="357" width="0.0105%" height="15" fill="rgb(219,33,29)" fg:x="36648" fg:w="11"/><text x="35.2432%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="34.9569%" y="405" width="0.1423%" height="15" fill="rgb(223,176,5)" fg:x="36610" fg:w="149"/><text x="35.2069%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (149 samples, 0.14%)</title><rect x="34.9569%" y="389" width="0.1423%" height="15" fill="rgb(228,140,14)" fg:x="36610" fg:w="149"/><text x="35.2069%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (125 samples, 0.12%)</title><rect x="34.9798%" y="373" width="0.1194%" height="15" fill="rgb(217,179,31)" fg:x="36634" fg:w="125"/><text x="35.2298%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (100 samples, 0.10%)</title><rect x="35.0037%" y="357" width="0.0955%" height="15" fill="rgb(230,9,30)" fg:x="36659" fg:w="100"/><text x="35.2537%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (100 samples, 0.10%)</title><rect x="35.0037%" y="341" width="0.0955%" height="15" fill="rgb(230,136,20)" fg:x="36659" fg:w="100"/><text x="35.2537%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (100 samples, 0.10%)</title><rect x="35.0037%" y="325" width="0.0955%" height="15" fill="rgb(215,210,22)" fg:x="36659" fg:w="100"/><text x="35.2537%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (151 samples, 0.14%)</title><rect x="34.9569%" y="645" width="0.1442%" height="15" fill="rgb(218,43,5)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (151 samples, 0.14%)</title><rect x="34.9569%" y="629" width="0.1442%" height="15" fill="rgb(216,11,5)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="639.50"></text></g><g><title>value_trait::Builder::object (151 samples, 0.14%)</title><rect x="34.9569%" y="613" width="0.1442%" height="15" fill="rgb(209,82,29)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (151 samples, 0.14%)</title><rect x="34.9569%" y="597" width="0.1442%" height="15" fill="rgb(244,115,12)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (151 samples, 0.14%)</title><rect x="34.9569%" y="581" width="0.1442%" height="15" fill="rgb(222,82,18)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (151 samples, 0.14%)</title><rect x="34.9569%" y="565" width="0.1442%" height="15" fill="rgb(249,227,8)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (151 samples, 0.14%)</title><rect x="34.9569%" y="549" width="0.1442%" height="15" fill="rgb(253,141,45)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (151 samples, 0.14%)</title><rect x="34.9569%" y="533" width="0.1442%" height="15" fill="rgb(234,184,4)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="543.50"></text></g><g><title>alloc::alloc::alloc (151 samples, 0.14%)</title><rect x="34.9569%" y="517" width="0.1442%" height="15" fill="rgb(218,194,23)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="527.50"></text></g><g><title>__rg_alloc (151 samples, 0.14%)</title><rect x="34.9569%" y="501" width="0.1442%" height="15" fill="rgb(235,66,41)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (151 samples, 0.14%)</title><rect x="34.9569%" y="485" width="0.1442%" height="15" fill="rgb(245,217,1)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="495.50"></text></g><g><title>rust_alloc (151 samples, 0.14%)</title><rect x="34.9569%" y="469" width="0.1442%" height="15" fill="rgb(229,91,1)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.14%)</title><rect x="34.9569%" y="453" width="0.1442%" height="15" fill="rgb(207,101,30)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.14%)</title><rect x="34.9569%" y="437" width="0.1442%" height="15" fill="rgb(223,82,49)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.14%)</title><rect x="34.9569%" y="421" width="0.1442%" height="15" fill="rgb(218,167,17)" fg:x="36610" fg:w="151"/><text x="35.2069%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="35.1011%" y="645" width="0.0134%" height="15" fill="rgb(208,103,14)" fg:x="36761" fg:w="14"/><text x="35.3511%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="35.1011%" y="629" width="0.0134%" height="15" fill="rgb(238,20,8)" fg:x="36761" fg:w="14"/><text x="35.3511%" y="639.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="35.1431%" y="613" width="0.0115%" height="15" fill="rgb(218,80,54)" fg:x="36805" fg:w="12"/><text x="35.3931%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="35.1431%" y="597" width="0.0115%" height="15" fill="rgb(240,144,17)" fg:x="36805" fg:w="12"/><text x="35.3931%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="35.1431%" y="581" width="0.0115%" height="15" fill="rgb(245,27,50)" fg:x="36805" fg:w="12"/><text x="35.3931%" y="591.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="35.1431%" y="565" width="0.0115%" height="15" fill="rgb(251,51,7)" fg:x="36805" fg:w="12"/><text x="35.3931%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="35.1431%" y="549" width="0.0115%" height="15" fill="rgb(245,217,29)" fg:x="36805" fg:w="12"/><text x="35.3931%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="35.1765%" y="549" width="0.0277%" height="15" fill="rgb(221,176,29)" fg:x="36840" fg:w="29"/><text x="35.4265%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (27 samples, 0.03%)</title><rect x="35.1784%" y="533" width="0.0258%" height="15" fill="rgb(212,180,24)" fg:x="36842" fg:w="27"/><text x="35.4284%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (101 samples, 0.10%)</title><rect x="35.1144%" y="645" width="0.0964%" height="15" fill="rgb(254,24,2)" fg:x="36775" fg:w="101"/><text x="35.3644%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (77 samples, 0.07%)</title><rect x="35.1374%" y="629" width="0.0735%" height="15" fill="rgb(230,100,2)" fg:x="36799" fg:w="77"/><text x="35.3874%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (59 samples, 0.06%)</title><rect x="35.1545%" y="613" width="0.0563%" height="15" fill="rgb(219,142,25)" fg:x="36817" fg:w="59"/><text x="35.4045%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (59 samples, 0.06%)</title><rect x="35.1545%" y="597" width="0.0563%" height="15" fill="rgb(240,73,43)" fg:x="36817" fg:w="59"/><text x="35.4045%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (36 samples, 0.03%)</title><rect x="35.1765%" y="581" width="0.0344%" height="15" fill="rgb(214,114,15)" fg:x="36840" fg:w="36"/><text x="35.4265%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (36 samples, 0.03%)</title><rect x="35.1765%" y="565" width="0.0344%" height="15" fill="rgb(207,130,4)" fg:x="36840" fg:w="36"/><text x="35.4265%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (11 samples, 0.01%)</title><rect x="35.2109%" y="645" width="0.0105%" height="15" fill="rgb(221,25,40)" fg:x="36876" fg:w="11"/><text x="35.4609%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (54 samples, 0.05%)</title><rect x="35.3102%" y="581" width="0.0516%" height="15" fill="rgb(241,184,7)" fg:x="36980" fg:w="54"/><text x="35.5602%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (54 samples, 0.05%)</title><rect x="35.3102%" y="565" width="0.0516%" height="15" fill="rgb(235,159,4)" fg:x="36980" fg:w="54"/><text x="35.5602%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (54 samples, 0.05%)</title><rect x="35.3102%" y="549" width="0.0516%" height="15" fill="rgb(214,87,48)" fg:x="36980" fg:w="54"/><text x="35.5602%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (54 samples, 0.05%)</title><rect x="35.3102%" y="533" width="0.0516%" height="15" fill="rgb(246,198,24)" fg:x="36980" fg:w="54"/><text x="35.5602%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (54 samples, 0.05%)</title><rect x="35.3102%" y="517" width="0.0516%" height="15" fill="rgb(209,66,40)" fg:x="36980" fg:w="54"/><text x="35.5602%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (18 samples, 0.02%)</title><rect x="35.3446%" y="501" width="0.0172%" height="15" fill="rgb(233,147,39)" fg:x="37016" fg:w="18"/><text x="35.5946%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (137 samples, 0.13%)</title><rect x="35.2605%" y="613" width="0.1308%" height="15" fill="rgb(231,145,52)" fg:x="36928" fg:w="137"/><text x="35.5105%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (137 samples, 0.13%)</title><rect x="35.2605%" y="597" width="0.1308%" height="15" fill="rgb(206,20,26)" fg:x="36928" fg:w="137"/><text x="35.5105%" y="607.50"></text></g><g><title>core::time::Duration::new (31 samples, 0.03%)</title><rect x="35.3617%" y="581" width="0.0296%" height="15" fill="rgb(238,220,4)" fg:x="37034" fg:w="31"/><text x="35.6117%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (144 samples, 0.14%)</title><rect x="35.2605%" y="629" width="0.1375%" height="15" fill="rgb(252,195,42)" fg:x="36928" fg:w="144"/><text x="35.5105%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (844 samples, 0.81%)</title><rect x="35.2214%" y="645" width="0.8059%" height="15" fill="rgb(209,10,6)" fg:x="36887" fg:w="844"/><text x="35.4714%" y="655.50"></text></g><g><title>std::time::SystemTime::now (659 samples, 0.63%)</title><rect x="35.3980%" y="629" width="0.6292%" height="15" fill="rgb(229,3,52)" fg:x="37072" fg:w="659"/><text x="35.6480%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (659 samples, 0.63%)</title><rect x="35.3980%" y="613" width="0.6292%" height="15" fill="rgb(253,49,37)" fg:x="37072" fg:w="659"/><text x="35.6480%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (659 samples, 0.63%)</title><rect x="35.3980%" y="597" width="0.6292%" height="15" fill="rgb(240,103,49)" fg:x="37072" fg:w="659"/><text x="35.6480%" y="607.50"></text></g><g><title>__clock_gettime_2 (513 samples, 0.49%)</title><rect x="35.5374%" y="581" width="0.4898%" height="15" fill="rgb(250,182,30)" fg:x="37218" fg:w="513"/><text x="35.7874%" y="591.50"></text></g><g><title>__vdso_clock_gettime (472 samples, 0.45%)</title><rect x="35.5766%" y="565" width="0.4507%" height="15" fill="rgb(248,8,30)" fg:x="37259" fg:w="472"/><text x="35.8266%" y="575.50"></text></g><g><title>[[vdso]] (302 samples, 0.29%)</title><rect x="35.7389%" y="549" width="0.2884%" height="15" fill="rgb(237,120,30)" fg:x="37429" fg:w="302"/><text x="35.9889%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="36.0807%" y="565" width="0.0124%" height="15" fill="rgb(221,146,34)" fg:x="37787" fg:w="13"/><text x="36.3307%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="36.0807%" y="549" width="0.0124%" height="15" fill="rgb(242,55,13)" fg:x="37787" fg:w="13"/><text x="36.3307%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (14 samples, 0.01%)</title><rect x="36.0932%" y="565" width="0.0134%" height="15" fill="rgb(242,112,31)" fg:x="37800" fg:w="14"/><text x="36.3432%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,233 samples, 1.18%)</title><rect x="34.9473%" y="677" width="1.1773%" height="15" fill="rgb(249,192,27)" fg:x="36600" fg:w="1233"/><text x="35.1973%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,233 samples, 1.18%)</title><rect x="34.9473%" y="661" width="1.1773%" height="15" fill="rgb(208,204,44)" fg:x="36600" fg:w="1233"/><text x="35.1973%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (102 samples, 0.10%)</title><rect x="36.0273%" y="645" width="0.0974%" height="15" fill="rgb(208,93,54)" fg:x="37731" fg:w="102"/><text x="36.2773%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (85 samples, 0.08%)</title><rect x="36.0435%" y="629" width="0.0812%" height="15" fill="rgb(242,1,31)" fg:x="37748" fg:w="85"/><text x="36.2935%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (64 samples, 0.06%)</title><rect x="36.0636%" y="613" width="0.0611%" height="15" fill="rgb(241,83,25)" fg:x="37769" fg:w="64"/><text x="36.3136%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (64 samples, 0.06%)</title><rect x="36.0636%" y="597" width="0.0611%" height="15" fill="rgb(205,169,50)" fg:x="37769" fg:w="64"/><text x="36.3136%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (64 samples, 0.06%)</title><rect x="36.0636%" y="581" width="0.0611%" height="15" fill="rgb(239,186,37)" fg:x="37769" fg:w="64"/><text x="36.3136%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (19 samples, 0.02%)</title><rect x="36.1065%" y="565" width="0.0181%" height="15" fill="rgb(205,221,10)" fg:x="37814" fg:w="19"/><text x="36.3565%" y="575.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="37.9704%" y="389" width="0.0105%" height="15" fill="rgb(218,196,15)" fg:x="39766" fg:w="11"/><text x="38.2204%" y="399.50"></text></g><g><title>rust_alloc (30 samples, 0.03%)</title><rect x="37.9904%" y="357" width="0.0286%" height="15" fill="rgb(218,196,35)" fg:x="39787" fg:w="30"/><text x="38.2404%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="38.0372%" y="341" width="0.0105%" height="15" fill="rgb(233,63,24)" fg:x="39836" fg:w="11"/><text x="38.2872%" y="351.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (11 samples, 0.01%)</title><rect x="38.0372%" y="325" width="0.0105%" height="15" fill="rgb(225,8,4)" fg:x="39836" fg:w="11"/><text x="38.2872%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::empty (50 samples, 0.05%)</title><rect x="38.0477%" y="341" width="0.0477%" height="15" fill="rgb(234,105,35)" fg:x="39847" fg:w="50"/><text x="38.2977%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (50 samples, 0.05%)</title><rect x="38.0477%" y="325" width="0.0477%" height="15" fill="rgb(236,21,32)" fg:x="39847" fg:w="50"/><text x="38.2977%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (785 samples, 0.75%)</title><rect x="37.9904%" y="389" width="0.7496%" height="15" fill="rgb(228,109,6)" fg:x="39787" fg:w="785"/><text x="38.2404%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (785 samples, 0.75%)</title><rect x="37.9904%" y="373" width="0.7496%" height="15" fill="rgb(229,215,31)" fg:x="39787" fg:w="785"/><text x="38.2404%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (748 samples, 0.71%)</title><rect x="38.0258%" y="357" width="0.7142%" height="15" fill="rgb(221,52,54)" fg:x="39824" fg:w="748"/><text x="38.2758%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (675 samples, 0.64%)</title><rect x="38.0955%" y="341" width="0.6445%" height="15" fill="rgb(252,129,43)" fg:x="39897" fg:w="675"/><text x="38.3455%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (675 samples, 0.64%)</title><rect x="38.0955%" y="325" width="0.6445%" height="15" fill="rgb(248,183,27)" fg:x="39897" fg:w="675"/><text x="38.3455%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (860 samples, 0.82%)</title><rect x="37.9341%" y="533" width="0.8212%" height="15" fill="rgb(250,0,22)" fg:x="39728" fg:w="860"/><text x="38.1841%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (860 samples, 0.82%)</title><rect x="37.9341%" y="517" width="0.8212%" height="15" fill="rgb(213,166,10)" fg:x="39728" fg:w="860"/><text x="38.1841%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (860 samples, 0.82%)</title><rect x="37.9341%" y="501" width="0.8212%" height="15" fill="rgb(207,163,36)" fg:x="39728" fg:w="860"/><text x="38.1841%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (837 samples, 0.80%)</title><rect x="37.9561%" y="485" width="0.7992%" height="15" fill="rgb(208,122,22)" fg:x="39751" fg:w="837"/><text x="38.2061%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (837 samples, 0.80%)</title><rect x="37.9561%" y="469" width="0.7992%" height="15" fill="rgb(207,104,49)" fg:x="39751" fg:w="837"/><text x="38.2061%" y="479.50"></text></g><g><title>alloc::alloc::alloc (828 samples, 0.79%)</title><rect x="37.9647%" y="453" width="0.7906%" height="15" fill="rgb(248,211,50)" fg:x="39760" fg:w="828"/><text x="38.2147%" y="463.50"></text></g><g><title>__rg_alloc (828 samples, 0.79%)</title><rect x="37.9647%" y="437" width="0.7906%" height="15" fill="rgb(217,13,45)" fg:x="39760" fg:w="828"/><text x="38.2147%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (828 samples, 0.79%)</title><rect x="37.9647%" y="421" width="0.7906%" height="15" fill="rgb(211,216,49)" fg:x="39760" fg:w="828"/><text x="38.2147%" y="431.50"></text></g><g><title>rust_alloc (822 samples, 0.78%)</title><rect x="37.9704%" y="405" width="0.7849%" height="15" fill="rgb(221,58,53)" fg:x="39766" fg:w="822"/><text x="38.2204%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="38.7400%" y="389" width="0.0153%" height="15" fill="rgb(220,112,41)" fg:x="40572" fg:w="16"/><text x="38.9900%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (947 samples, 0.90%)</title><rect x="37.9026%" y="613" width="0.9042%" height="15" fill="rgb(236,38,28)" fg:x="39695" fg:w="947"/><text x="38.1526%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (914 samples, 0.87%)</title><rect x="37.9341%" y="597" width="0.8727%" height="15" fill="rgb(227,195,22)" fg:x="39728" fg:w="914"/><text x="38.1841%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (914 samples, 0.87%)</title><rect x="37.9341%" y="581" width="0.8727%" height="15" fill="rgb(214,55,33)" fg:x="39728" fg:w="914"/><text x="38.1841%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (914 samples, 0.87%)</title><rect x="37.9341%" y="565" width="0.8727%" height="15" fill="rgb(248,80,13)" fg:x="39728" fg:w="914"/><text x="38.1841%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (914 samples, 0.87%)</title><rect x="37.9341%" y="549" width="0.8727%" height="15" fill="rgb(238,52,6)" fg:x="39728" fg:w="914"/><text x="38.1841%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (54 samples, 0.05%)</title><rect x="38.7553%" y="533" width="0.0516%" height="15" fill="rgb(224,198,47)" fg:x="40588" fg:w="54"/><text x="39.0053%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.05%)</title><rect x="38.7553%" y="517" width="0.0516%" height="15" fill="rgb(233,171,20)" fg:x="40588" fg:w="54"/><text x="39.0053%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (53 samples, 0.05%)</title><rect x="38.7562%" y="501" width="0.0506%" height="15" fill="rgb(241,30,25)" fg:x="40589" fg:w="53"/><text x="39.0062%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="38.8068%" y="613" width="0.0105%" height="15" fill="rgb(207,171,38)" fg:x="40642" fg:w="11"/><text x="39.0568%" y="623.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,309 samples, 1.25%)</title><rect x="37.5684%" y="629" width="1.2499%" height="15" fill="rgb(234,70,1)" fg:x="39345" fg:w="1309"/><text x="37.8184%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (82 samples, 0.08%)</title><rect x="38.9854%" y="597" width="0.0783%" height="15" fill="rgb(232,178,18)" fg:x="40829" fg:w="82"/><text x="39.2354%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (40 samples, 0.04%)</title><rect x="39.0255%" y="581" width="0.0382%" height="15" fill="rgb(241,78,40)" fg:x="40871" fg:w="40"/><text x="39.2755%" y="591.50"></text></g><g><title>rust_alloc (60 samples, 0.06%)</title><rect x="39.0875%" y="373" width="0.0573%" height="15" fill="rgb(222,35,25)" fg:x="40936" fg:w="60"/><text x="39.3375%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (11 samples, 0.01%)</title><rect x="39.1639%" y="357" width="0.0105%" height="15" fill="rgb(207,92,16)" fg:x="41016" fg:w="11"/><text x="39.4139%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (11 samples, 0.01%)</title><rect x="39.1639%" y="341" width="0.0105%" height="15" fill="rgb(216,59,51)" fg:x="41016" fg:w="11"/><text x="39.4139%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (11 samples, 0.01%)</title><rect x="39.1639%" y="325" width="0.0105%" height="15" fill="rgb(213,80,28)" fg:x="41016" fg:w="11"/><text x="39.4139%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="39.1639%" y="309" width="0.0105%" height="15" fill="rgb(220,93,7)" fg:x="41016" fg:w="11"/><text x="39.4139%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (11 samples, 0.01%)</title><rect x="39.1639%" y="293" width="0.0105%" height="15" fill="rgb(225,24,44)" fg:x="41016" fg:w="11"/><text x="39.4139%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (19 samples, 0.02%)</title><rect x="39.1849%" y="325" width="0.0181%" height="15" fill="rgb(243,74,40)" fg:x="41038" fg:w="19"/><text x="39.4349%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (19 samples, 0.02%)</title><rect x="39.1849%" y="309" width="0.0181%" height="15" fill="rgb(228,39,7)" fg:x="41038" fg:w="19"/><text x="39.4349%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="39.1849%" y="293" width="0.0181%" height="15" fill="rgb(227,79,8)" fg:x="41038" fg:w="19"/><text x="39.4349%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (18 samples, 0.02%)</title><rect x="39.2031%" y="325" width="0.0172%" height="15" fill="rgb(236,58,11)" fg:x="41057" fg:w="18"/><text x="39.4531%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (18 samples, 0.02%)</title><rect x="39.2031%" y="309" width="0.0172%" height="15" fill="rgb(249,63,35)" fg:x="41057" fg:w="18"/><text x="39.4531%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (50 samples, 0.05%)</title><rect x="39.1744%" y="357" width="0.0477%" height="15" fill="rgb(252,114,16)" fg:x="41027" fg:w="50"/><text x="39.4244%" y="367.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (40 samples, 0.04%)</title><rect x="39.1840%" y="341" width="0.0382%" height="15" fill="rgb(254,151,24)" fg:x="41037" fg:w="40"/><text x="39.4340%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (58 samples, 0.06%)</title><rect x="39.2270%" y="357" width="0.0554%" height="15" fill="rgb(253,54,39)" fg:x="41082" fg:w="58"/><text x="39.4770%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (58 samples, 0.06%)</title><rect x="39.2270%" y="341" width="0.0554%" height="15" fill="rgb(243,25,45)" fg:x="41082" fg:w="58"/><text x="39.4770%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (405 samples, 0.39%)</title><rect x="39.0847%" y="405" width="0.3867%" height="15" fill="rgb(234,134,9)" fg:x="40933" fg:w="405"/><text x="39.3347%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (402 samples, 0.38%)</title><rect x="39.0875%" y="389" width="0.3838%" height="15" fill="rgb(227,166,31)" fg:x="40936" fg:w="402"/><text x="39.3375%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (336 samples, 0.32%)</title><rect x="39.1506%" y="373" width="0.3208%" height="15" fill="rgb(245,143,41)" fg:x="41002" fg:w="336"/><text x="39.4006%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (198 samples, 0.19%)</title><rect x="39.2823%" y="357" width="0.1891%" height="15" fill="rgb(238,181,32)" fg:x="41140" fg:w="198"/><text x="39.5323%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (198 samples, 0.19%)</title><rect x="39.2823%" y="341" width="0.1891%" height="15" fill="rgb(224,113,18)" fg:x="41140" fg:w="198"/><text x="39.5323%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (429 samples, 0.41%)</title><rect x="39.0637%" y="549" width="0.4096%" height="15" fill="rgb(240,229,28)" fg:x="40911" fg:w="429"/><text x="39.3137%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (429 samples, 0.41%)</title><rect x="39.0637%" y="533" width="0.4096%" height="15" fill="rgb(250,185,3)" fg:x="40911" fg:w="429"/><text x="39.3137%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (428 samples, 0.41%)</title><rect x="39.0646%" y="517" width="0.4087%" height="15" fill="rgb(212,59,25)" fg:x="40912" fg:w="428"/><text x="39.3146%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (428 samples, 0.41%)</title><rect x="39.0646%" y="501" width="0.4087%" height="15" fill="rgb(221,87,20)" fg:x="40912" fg:w="428"/><text x="39.3146%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (428 samples, 0.41%)</title><rect x="39.0646%" y="485" width="0.4087%" height="15" fill="rgb(213,74,28)" fg:x="40912" fg:w="428"/><text x="39.3146%" y="495.50"></text></g><g><title>alloc::alloc::alloc (420 samples, 0.40%)</title><rect x="39.0723%" y="469" width="0.4010%" height="15" fill="rgb(224,132,34)" fg:x="40920" fg:w="420"/><text x="39.3223%" y="479.50"></text></g><g><title>__rg_alloc (420 samples, 0.40%)</title><rect x="39.0723%" y="453" width="0.4010%" height="15" fill="rgb(222,101,24)" fg:x="40920" fg:w="420"/><text x="39.3223%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (420 samples, 0.40%)</title><rect x="39.0723%" y="437" width="0.4010%" height="15" fill="rgb(254,142,4)" fg:x="40920" fg:w="420"/><text x="39.3223%" y="447.50"></text></g><g><title>rust_alloc (417 samples, 0.40%)</title><rect x="39.0751%" y="421" width="0.3982%" height="15" fill="rgb(230,229,49)" fg:x="40923" fg:w="417"/><text x="39.3251%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (878 samples, 0.84%)</title><rect x="39.0637%" y="565" width="0.8384%" height="15" fill="rgb(238,70,47)" fg:x="40911" fg:w="878"/><text x="39.3137%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (449 samples, 0.43%)</title><rect x="39.4733%" y="549" width="0.4287%" height="15" fill="rgb(231,160,17)" fg:x="41340" fg:w="449"/><text x="39.7233%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (449 samples, 0.43%)</title><rect x="39.4733%" y="533" width="0.4287%" height="15" fill="rgb(218,68,53)" fg:x="41340" fg:w="449"/><text x="39.7233%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (444 samples, 0.42%)</title><rect x="39.4781%" y="517" width="0.4240%" height="15" fill="rgb(236,111,10)" fg:x="41345" fg:w="444"/><text x="39.7281%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (963 samples, 0.92%)</title><rect x="38.9854%" y="613" width="0.9195%" height="15" fill="rgb(224,34,41)" fg:x="40829" fg:w="963"/><text x="39.2354%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (881 samples, 0.84%)</title><rect x="39.0637%" y="597" width="0.8412%" height="15" fill="rgb(241,118,19)" fg:x="40911" fg:w="881"/><text x="39.3137%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (881 samples, 0.84%)</title><rect x="39.0637%" y="581" width="0.8412%" height="15" fill="rgb(238,129,25)" fg:x="40911" fg:w="881"/><text x="39.3137%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (3,726 samples, 3.56%)</title><rect x="36.3491%" y="645" width="3.5578%" height="15" fill="rgb(238,22,31)" fg:x="38068" fg:w="3726"/><text x="36.5991%" y="655.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,138 samples, 1.09%)</title><rect x="38.8202%" y="629" width="1.0866%" height="15" fill="rgb(222,174,48)" fg:x="40656" fg:w="1138"/><text x="39.0702%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,962 samples, 3.78%)</title><rect x="36.1247%" y="677" width="3.7831%" height="15" fill="rgb(206,152,40)" fg:x="37833" fg:w="3962"/><text x="36.3747%" y="687.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,962 samples, 3.78%)</title><rect x="36.1247%" y="661" width="3.7831%" height="15" fill="rgb(218,99,54)" fg:x="37833" fg:w="3962"/><text x="36.3747%" y="671.50">&lt;cor..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="39.9097%" y="421" width="0.0105%" height="15" fill="rgb(220,174,26)" fg:x="41797" fg:w="11"/><text x="40.1597%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="39.9097%" y="405" width="0.0105%" height="15" fill="rgb(245,116,9)" fg:x="41797" fg:w="11"/><text x="40.1597%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="39.9097%" y="437" width="0.0143%" height="15" fill="rgb(209,72,35)" fg:x="41797" fg:w="15"/><text x="40.1597%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (28 samples, 0.03%)</title><rect x="39.9078%" y="453" width="0.0267%" height="15" fill="rgb(226,126,21)" fg:x="41795" fg:w="28"/><text x="40.1578%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (18 samples, 0.02%)</title><rect x="39.9450%" y="437" width="0.0172%" height="15" fill="rgb(227,192,1)" fg:x="41834" fg:w="18"/><text x="40.1950%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.18%)</title><rect x="39.9078%" y="485" width="0.1833%" height="15" fill="rgb(237,180,29)" fg:x="41795" fg:w="192"/><text x="40.1578%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (192 samples, 0.18%)</title><rect x="39.9078%" y="469" width="0.1833%" height="15" fill="rgb(230,197,35)" fg:x="41795" fg:w="192"/><text x="40.1578%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (164 samples, 0.16%)</title><rect x="39.9345%" y="453" width="0.1566%" height="15" fill="rgb(246,193,31)" fg:x="41823" fg:w="164"/><text x="40.1845%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (135 samples, 0.13%)</title><rect x="39.9622%" y="437" width="0.1289%" height="15" fill="rgb(241,36,4)" fg:x="41852" fg:w="135"/><text x="40.2122%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (135 samples, 0.13%)</title><rect x="39.9622%" y="421" width="0.1289%" height="15" fill="rgb(241,130,17)" fg:x="41852" fg:w="135"/><text x="40.2122%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (135 samples, 0.13%)</title><rect x="39.9622%" y="405" width="0.1289%" height="15" fill="rgb(206,137,32)" fg:x="41852" fg:w="135"/><text x="40.2122%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.02%)</title><rect x="40.0978%" y="437" width="0.0153%" height="15" fill="rgb(237,228,51)" fg:x="41994" fg:w="16"/><text x="40.3478%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (14 samples, 0.01%)</title><rect x="40.0997%" y="421" width="0.0134%" height="15" fill="rgb(243,6,42)" fg:x="41996" fg:w="14"/><text x="40.3497%" y="431.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (216 samples, 0.21%)</title><rect x="39.9078%" y="677" width="0.2062%" height="15" fill="rgb(251,74,28)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (216 samples, 0.21%)</title><rect x="39.9078%" y="661" width="0.2062%" height="15" fill="rgb(218,20,49)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (216 samples, 0.21%)</title><rect x="39.9078%" y="645" width="0.2062%" height="15" fill="rgb(238,28,14)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (216 samples, 0.21%)</title><rect x="39.9078%" y="629" width="0.2062%" height="15" fill="rgb(229,40,46)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (216 samples, 0.21%)</title><rect x="39.9078%" y="613" width="0.2062%" height="15" fill="rgb(244,195,20)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="623.50"></text></g><g><title>alloc::alloc::alloc (216 samples, 0.21%)</title><rect x="39.9078%" y="597" width="0.2062%" height="15" fill="rgb(253,56,35)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="607.50"></text></g><g><title>__rg_alloc (216 samples, 0.21%)</title><rect x="39.9078%" y="581" width="0.2062%" height="15" fill="rgb(210,149,44)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (216 samples, 0.21%)</title><rect x="39.9078%" y="565" width="0.2062%" height="15" fill="rgb(240,135,12)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="575.50"></text></g><g><title>rust_alloc (216 samples, 0.21%)</title><rect x="39.9078%" y="549" width="0.2062%" height="15" fill="rgb(251,24,50)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (216 samples, 0.21%)</title><rect x="39.9078%" y="533" width="0.2062%" height="15" fill="rgb(243,200,47)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (216 samples, 0.21%)</title><rect x="39.9078%" y="517" width="0.2062%" height="15" fill="rgb(224,166,26)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (216 samples, 0.21%)</title><rect x="39.9078%" y="501" width="0.2062%" height="15" fill="rgb(233,0,47)" fg:x="41795" fg:w="216"/><text x="40.1578%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="40.0911%" y="485" width="0.0229%" height="15" fill="rgb(253,80,5)" fg:x="41987" fg:w="24"/><text x="40.3411%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="40.0920%" y="469" width="0.0220%" height="15" fill="rgb(214,133,25)" fg:x="41988" fg:w="23"/><text x="40.3420%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (22 samples, 0.02%)</title><rect x="40.0930%" y="453" width="0.0210%" height="15" fill="rgb(209,27,14)" fg:x="41989" fg:w="22"/><text x="40.3430%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="40.1140%" y="677" width="0.0105%" height="15" fill="rgb(219,102,51)" fg:x="42011" fg:w="11"/><text x="40.3640%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1157" width="5.9143%" height="15" fill="rgb(237,18,16)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1167.50">async_gl..</text></g><g><title>std::panic::catch_unwind (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1141" width="5.9143%" height="15" fill="rgb(241,85,17)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1151.50">std::pan..</text></g><g><title>std::panicking::try (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1125" width="5.9143%" height="15" fill="rgb(236,90,42)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1135.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1109" width="5.9143%" height="15" fill="rgb(249,57,21)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1119.50">std::pan..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1093" width="5.9143%" height="15" fill="rgb(243,12,36)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1103.50">async_gl..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1077" width="5.9143%" height="15" fill="rgb(253,128,47)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1087.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1061" width="5.9143%" height="15" fill="rgb(207,33,20)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1071.50">std::thr..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1045" width="5.9143%" height="15" fill="rgb(233,215,35)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1055.50">async_gl..</text></g><g><title>async_global_executor::reactor::block_on (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1029" width="5.9143%" height="15" fill="rgb(249,188,52)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1039.50">async_gl..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (6,194 samples, 5.91%)</title><rect x="34.2264%" y="1013" width="5.9143%" height="15" fill="rgb(225,12,32)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1023.50">async_gl..</text></g><g><title>async_io::driver::block_on (6,194 samples, 5.91%)</title><rect x="34.2264%" y="997" width="5.9143%" height="15" fill="rgb(247,98,14)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="1007.50">async_io..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,194 samples, 5.91%)</title><rect x="34.2264%" y="981" width="5.9143%" height="15" fill="rgb(247,219,48)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="991.50">&lt;futures..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,194 samples, 5.91%)</title><rect x="34.2264%" y="965" width="5.9143%" height="15" fill="rgb(253,60,48)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="975.50">&lt;core::f..</text></g><g><title>async_executor::Executor::run::{{closure}} (6,194 samples, 5.91%)</title><rect x="34.2264%" y="949" width="5.9143%" height="15" fill="rgb(245,15,52)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="959.50">async_ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,194 samples, 5.91%)</title><rect x="34.2264%" y="933" width="5.9143%" height="15" fill="rgb(220,133,28)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="943.50">&lt;futures..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,194 samples, 5.91%)</title><rect x="34.2264%" y="917" width="5.9143%" height="15" fill="rgb(217,180,4)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="927.50">&lt;core::f..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6,194 samples, 5.91%)</title><rect x="34.2264%" y="901" width="5.9143%" height="15" fill="rgb(251,24,1)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="911.50">async_ex..</text></g><g><title>async_task::runnable::Runnable::run (6,194 samples, 5.91%)</title><rect x="34.2264%" y="885" width="5.9143%" height="15" fill="rgb(212,185,49)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="895.50">async_ta..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6,194 samples, 5.91%)</title><rect x="34.2264%" y="869" width="5.9143%" height="15" fill="rgb(215,175,22)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="879.50">async_ta..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,194 samples, 5.91%)</title><rect x="34.2264%" y="853" width="5.9143%" height="15" fill="rgb(250,205,14)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="863.50">&lt;core::p..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,194 samples, 5.91%)</title><rect x="34.2264%" y="837" width="5.9143%" height="15" fill="rgb(225,211,22)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="847.50">&lt;core::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,194 samples, 5.91%)</title><rect x="34.2264%" y="821" width="5.9143%" height="15" fill="rgb(251,179,42)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="831.50">async_ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,194 samples, 5.91%)</title><rect x="34.2264%" y="805" width="5.9143%" height="15" fill="rgb(208,216,51)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="815.50">&lt;async_s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,194 samples, 5.91%)</title><rect x="34.2264%" y="789" width="5.9143%" height="15" fill="rgb(235,36,11)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="799.50">async_st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,194 samples, 5.91%)</title><rect x="34.2264%" y="773" width="5.9143%" height="15" fill="rgb(213,189,28)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="783.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,194 samples, 5.91%)</title><rect x="34.2264%" y="757" width="5.9143%" height="15" fill="rgb(227,203,42)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="767.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,194 samples, 5.91%)</title><rect x="34.2264%" y="741" width="5.9143%" height="15" fill="rgb(244,72,36)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="751.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,194 samples, 5.91%)</title><rect x="34.2264%" y="725" width="5.9143%" height="15" fill="rgb(213,53,17)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="735.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,194 samples, 5.91%)</title><rect x="34.2264%" y="709" width="5.9143%" height="15" fill="rgb(207,167,3)" fg:x="35845" fg:w="6194"/><text x="34.4764%" y="719.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,439 samples, 5.19%)</title><rect x="34.9473%" y="693" width="5.1934%" height="15" fill="rgb(216,98,30)" fg:x="36600" fg:w="5439"/><text x="35.1973%" y="703.50">tremor..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="40.1245%" y="677" width="0.0162%" height="15" fill="rgb(236,123,15)" fg:x="42022" fg:w="17"/><text x="40.3745%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (17 samples, 0.02%)</title><rect x="40.1245%" y="661" width="0.0162%" height="15" fill="rgb(248,81,50)" fg:x="42022" fg:w="17"/><text x="40.3745%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (61 samples, 0.06%)</title><rect x="40.1770%" y="597" width="0.0582%" height="15" fill="rgb(214,120,4)" fg:x="42077" fg:w="61"/><text x="40.4270%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.06%)</title><rect x="40.1770%" y="581" width="0.0582%" height="15" fill="rgb(208,179,34)" fg:x="42077" fg:w="61"/><text x="40.4270%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (61 samples, 0.06%)</title><rect x="40.1770%" y="565" width="0.0582%" height="15" fill="rgb(227,140,7)" fg:x="42077" fg:w="61"/><text x="40.4270%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (60 samples, 0.06%)</title><rect x="40.1780%" y="549" width="0.0573%" height="15" fill="rgb(214,22,6)" fg:x="42078" fg:w="60"/><text x="40.4280%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (60 samples, 0.06%)</title><rect x="40.1780%" y="533" width="0.0573%" height="15" fill="rgb(207,137,27)" fg:x="42078" fg:w="60"/><text x="40.4280%" y="543.50"></text></g><g><title>__GI___lll_lock_wake (27 samples, 0.03%)</title><rect x="40.2095%" y="517" width="0.0258%" height="15" fill="rgb(210,8,46)" fg:x="42111" fg:w="27"/><text x="40.4595%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="40.2114%" y="501" width="0.0239%" height="15" fill="rgb(240,16,54)" fg:x="42113" fg:w="25"/><text x="40.4614%" y="511.50"></text></g><g><title>do_syscall_64 (25 samples, 0.02%)</title><rect x="40.2114%" y="485" width="0.0239%" height="15" fill="rgb(211,209,29)" fg:x="42113" fg:w="25"/><text x="40.4614%" y="495.50"></text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.02%)</title><rect x="40.2200%" y="469" width="0.0153%" height="15" fill="rgb(226,228,24)" fg:x="42122" fg:w="16"/><text x="40.4700%" y="479.50"></text></g><g><title>__fdget_pos (12 samples, 0.01%)</title><rect x="40.2534%" y="437" width="0.0115%" height="15" fill="rgb(222,84,9)" fg:x="42157" fg:w="12"/><text x="40.5034%" y="447.50"></text></g><g><title>__fget_light (11 samples, 0.01%)</title><rect x="40.2544%" y="421" width="0.0105%" height="15" fill="rgb(234,203,30)" fg:x="42158" fg:w="11"/><text x="40.5044%" y="431.50"></text></g><g><title>enqueue_task_fair (31 samples, 0.03%)</title><rect x="40.3059%" y="277" width="0.0296%" height="15" fill="rgb(238,109,14)" fg:x="42212" fg:w="31"/><text x="40.5559%" y="287.50"></text></g><g><title>enqueue_entity (17 samples, 0.02%)</title><rect x="40.3193%" y="261" width="0.0162%" height="15" fill="rgb(233,206,34)" fg:x="42226" fg:w="17"/><text x="40.5693%" y="271.50"></text></g><g><title>ttwu_do_activate (57 samples, 0.05%)</title><rect x="40.3059%" y="309" width="0.0544%" height="15" fill="rgb(220,167,47)" fg:x="42212" fg:w="57"/><text x="40.5559%" y="319.50"></text></g><g><title>enqueue_task (57 samples, 0.05%)</title><rect x="40.3059%" y="293" width="0.0544%" height="15" fill="rgb(238,105,10)" fg:x="42212" fg:w="57"/><text x="40.5559%" y="303.50"></text></g><g><title>psi_task_change (21 samples, 0.02%)</title><rect x="40.3403%" y="277" width="0.0201%" height="15" fill="rgb(213,227,17)" fg:x="42248" fg:w="21"/><text x="40.5903%" y="287.50"></text></g><g><title>psi_group_change (13 samples, 0.01%)</title><rect x="40.3479%" y="261" width="0.0124%" height="15" fill="rgb(217,132,38)" fg:x="42256" fg:w="13"/><text x="40.5979%" y="271.50"></text></g><g><title>__wake_up_common (102 samples, 0.10%)</title><rect x="40.2763%" y="357" width="0.0974%" height="15" fill="rgb(242,146,4)" fg:x="42181" fg:w="102"/><text x="40.5263%" y="367.50"></text></g><g><title>autoremove_wake_function (97 samples, 0.09%)</title><rect x="40.2811%" y="341" width="0.0926%" height="15" fill="rgb(212,61,9)" fg:x="42186" fg:w="97"/><text x="40.5311%" y="351.50"></text></g><g><title>try_to_wake_up (94 samples, 0.09%)</title><rect x="40.2840%" y="325" width="0.0898%" height="15" fill="rgb(247,126,22)" fg:x="42189" fg:w="94"/><text x="40.5340%" y="335.50"></text></g><g><title>__wake_up_common_lock (105 samples, 0.10%)</title><rect x="40.2763%" y="373" width="0.1003%" height="15" fill="rgb(220,196,2)" fg:x="42181" fg:w="105"/><text x="40.5263%" y="383.50"></text></g><g><title>__wake_up_common (129 samples, 0.12%)</title><rect x="40.2668%" y="405" width="0.1232%" height="15" fill="rgb(208,46,4)" fg:x="42171" fg:w="129"/><text x="40.5168%" y="415.50"></text></g><g><title>ep_poll_callback (129 samples, 0.12%)</title><rect x="40.2668%" y="389" width="0.1232%" height="15" fill="rgb(252,104,46)" fg:x="42171" fg:w="129"/><text x="40.5168%" y="399.50"></text></g><g><title>ksys_write (155 samples, 0.15%)</title><rect x="40.2534%" y="453" width="0.1480%" height="15" fill="rgb(237,152,48)" fg:x="42157" fg:w="155"/><text x="40.5034%" y="463.50"></text></g><g><title>vfs_write (142 samples, 0.14%)</title><rect x="40.2658%" y="437" width="0.1356%" height="15" fill="rgb(221,59,37)" fg:x="42170" fg:w="142"/><text x="40.5158%" y="447.50"></text></g><g><title>eventfd_write (141 samples, 0.13%)</title><rect x="40.2668%" y="421" width="0.1346%" height="15" fill="rgb(209,202,51)" fg:x="42171" fg:w="141"/><text x="40.5168%" y="431.50"></text></g><g><title>syscall_exit_to_user_mode (33 samples, 0.03%)</title><rect x="40.4014%" y="453" width="0.0315%" height="15" fill="rgb(228,81,30)" fg:x="42312" fg:w="33"/><text x="40.6514%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (191 samples, 0.18%)</title><rect x="40.2515%" y="485" width="0.1824%" height="15" fill="rgb(227,42,39)" fg:x="42155" fg:w="191"/><text x="40.5015%" y="495.50"></text></g><g><title>do_syscall_64 (191 samples, 0.18%)</title><rect x="40.2515%" y="469" width="0.1824%" height="15" fill="rgb(221,26,2)" fg:x="42155" fg:w="191"/><text x="40.5015%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (202 samples, 0.19%)</title><rect x="40.2439%" y="549" width="0.1929%" height="15" fill="rgb(254,61,31)" fg:x="42147" fg:w="202"/><text x="40.4939%" y="559.50"></text></g><g><title>polling::Poller::notify (202 samples, 0.19%)</title><rect x="40.2439%" y="533" width="0.1929%" height="15" fill="rgb(222,173,38)" fg:x="42147" fg:w="202"/><text x="40.4939%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (201 samples, 0.19%)</title><rect x="40.2448%" y="517" width="0.1919%" height="15" fill="rgb(218,50,12)" fg:x="42148" fg:w="201"/><text x="40.4948%" y="527.50"></text></g><g><title>__GI___write (201 samples, 0.19%)</title><rect x="40.2448%" y="501" width="0.1919%" height="15" fill="rgb(223,88,40)" fg:x="42148" fg:w="201"/><text x="40.4948%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (15 samples, 0.01%)</title><rect x="40.4453%" y="517" width="0.0143%" height="15" fill="rgb(237,54,19)" fg:x="42358" fg:w="15"/><text x="40.6953%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="40.4453%" y="501" width="0.0143%" height="15" fill="rgb(251,129,25)" fg:x="42358" fg:w="15"/><text x="40.6953%" y="511.50"></text></g><g><title>futex_wake_mark (22 samples, 0.02%)</title><rect x="40.5170%" y="373" width="0.0210%" height="15" fill="rgb(238,97,19)" fg:x="42433" fg:w="22"/><text x="40.7670%" y="383.50"></text></g><g><title>select_task_rq_fair (24 samples, 0.02%)</title><rect x="40.5704%" y="341" width="0.0229%" height="15" fill="rgb(240,169,18)" fg:x="42489" fg:w="24"/><text x="40.8204%" y="351.50"></text></g><g><title>update_cfs_group (13 samples, 0.01%)</title><rect x="40.6650%" y="277" width="0.0124%" height="15" fill="rgb(230,187,49)" fg:x="42588" fg:w="13"/><text x="40.9150%" y="287.50"></text></g><g><title>enqueue_task_fair (97 samples, 0.09%)</title><rect x="40.5981%" y="309" width="0.0926%" height="15" fill="rgb(209,44,26)" fg:x="42518" fg:w="97"/><text x="40.8481%" y="319.50"></text></g><g><title>enqueue_entity (65 samples, 0.06%)</title><rect x="40.6287%" y="293" width="0.0621%" height="15" fill="rgb(244,0,6)" fg:x="42550" fg:w="65"/><text x="40.8787%" y="303.50"></text></g><g><title>update_load_avg (13 samples, 0.01%)</title><rect x="40.6783%" y="277" width="0.0124%" height="15" fill="rgb(248,18,21)" fg:x="42602" fg:w="13"/><text x="40.9283%" y="287.50"></text></g><g><title>psi_group_change (22 samples, 0.02%)</title><rect x="40.6907%" y="309" width="0.0210%" height="15" fill="rgb(245,180,19)" fg:x="42615" fg:w="22"/><text x="40.9407%" y="319.50"></text></g><g><title>psi_group_change (43 samples, 0.04%)</title><rect x="40.7347%" y="293" width="0.0411%" height="15" fill="rgb(252,118,36)" fg:x="42661" fg:w="43"/><text x="40.9847%" y="303.50"></text></g><g><title>ttwu_do_activate (193 samples, 0.18%)</title><rect x="40.5933%" y="341" width="0.1843%" height="15" fill="rgb(210,224,19)" fg:x="42513" fg:w="193"/><text x="40.8433%" y="351.50"></text></g><g><title>enqueue_task (192 samples, 0.18%)</title><rect x="40.5943%" y="325" width="0.1833%" height="15" fill="rgb(218,30,24)" fg:x="42514" fg:w="192"/><text x="40.8443%" y="335.50"></text></g><g><title>psi_task_change (69 samples, 0.07%)</title><rect x="40.7117%" y="309" width="0.0659%" height="15" fill="rgb(219,75,50)" fg:x="42637" fg:w="69"/><text x="40.9617%" y="319.50"></text></g><g><title>__x64_sys_futex (341 samples, 0.33%)</title><rect x="40.4845%" y="421" width="0.3256%" height="15" fill="rgb(234,72,50)" fg:x="42399" fg:w="341"/><text x="40.7345%" y="431.50"></text></g><g><title>do_futex (333 samples, 0.32%)</title><rect x="40.4921%" y="405" width="0.3180%" height="15" fill="rgb(219,100,48)" fg:x="42407" fg:w="333"/><text x="40.7421%" y="415.50"></text></g><g><title>futex_wake (333 samples, 0.32%)</title><rect x="40.4921%" y="389" width="0.3180%" height="15" fill="rgb(253,5,41)" fg:x="42407" fg:w="333"/><text x="40.7421%" y="399.50"></text></g><g><title>wake_up_q (278 samples, 0.27%)</title><rect x="40.5446%" y="373" width="0.2654%" height="15" fill="rgb(247,181,11)" fg:x="42462" fg:w="278"/><text x="40.7946%" y="383.50"></text></g><g><title>try_to_wake_up (275 samples, 0.26%)</title><rect x="40.5475%" y="357" width="0.2626%" height="15" fill="rgb(222,223,25)" fg:x="42465" fg:w="275"/><text x="40.7975%" y="367.50"></text></g><g><title>update_rq_clock (16 samples, 0.02%)</title><rect x="40.7948%" y="341" width="0.0153%" height="15" fill="rgb(214,198,28)" fg:x="42724" fg:w="16"/><text x="41.0448%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (78 samples, 0.07%)</title><rect x="40.8130%" y="421" width="0.0745%" height="15" fill="rgb(230,46,43)" fg:x="42743" fg:w="78"/><text x="41.0630%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (433 samples, 0.41%)</title><rect x="40.4807%" y="453" width="0.4134%" height="15" fill="rgb(233,65,53)" fg:x="42395" fg:w="433"/><text x="40.7307%" y="463.50"></text></g><g><title>do_syscall_64 (431 samples, 0.41%)</title><rect x="40.4826%" y="437" width="0.4115%" height="15" fill="rgb(221,121,27)" fg:x="42397" fg:w="431"/><text x="40.7326%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (458 samples, 0.44%)</title><rect x="40.4597%" y="517" width="0.4373%" height="15" fill="rgb(247,70,47)" fg:x="42373" fg:w="458"/><text x="40.7097%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (458 samples, 0.44%)</title><rect x="40.4597%" y="501" width="0.4373%" height="15" fill="rgb(228,85,35)" fg:x="42373" fg:w="458"/><text x="40.7097%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (458 samples, 0.44%)</title><rect x="40.4597%" y="485" width="0.4373%" height="15" fill="rgb(209,50,18)" fg:x="42373" fg:w="458"/><text x="40.7097%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (458 samples, 0.44%)</title><rect x="40.4597%" y="469" width="0.4373%" height="15" fill="rgb(250,19,35)" fg:x="42373" fg:w="458"/><text x="40.7097%" y="479.50"></text></g><g><title>parking::Unparker::unpark (502 samples, 0.48%)</title><rect x="40.4367%" y="549" width="0.4793%" height="15" fill="rgb(253,107,29)" fg:x="42349" fg:w="502"/><text x="40.6867%" y="559.50"></text></g><g><title>parking::Inner::unpark (498 samples, 0.48%)</title><rect x="40.4406%" y="533" width="0.4755%" height="15" fill="rgb(252,179,29)" fg:x="42353" fg:w="498"/><text x="40.6906%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="40.8970%" y="517" width="0.0191%" height="15" fill="rgb(238,194,6)" fg:x="42831" fg:w="20"/><text x="41.1470%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="40.8979%" y="501" width="0.0181%" height="15" fill="rgb(238,164,29)" fg:x="42832" fg:w="19"/><text x="41.1479%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="40.8979%" y="485" width="0.0181%" height="15" fill="rgb(224,25,9)" fg:x="42832" fg:w="19"/><text x="41.1479%" y="495.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="40.8979%" y="469" width="0.0181%" height="15" fill="rgb(244,153,23)" fg:x="42832" fg:w="19"/><text x="41.1479%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (708 samples, 0.68%)</title><rect x="40.2410%" y="565" width="0.6760%" height="15" fill="rgb(212,203,14)" fg:x="42144" fg:w="708"/><text x="40.4910%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="40.9170%" y="565" width="0.0134%" height="15" fill="rgb(220,164,20)" fg:x="42852" fg:w="14"/><text x="41.1670%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="40.9170%" y="549" width="0.0134%" height="15" fill="rgb(222,203,48)" fg:x="42852" fg:w="14"/><text x="41.1670%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="40.9170%" y="533" width="0.0134%" height="15" fill="rgb(215,159,22)" fg:x="42852" fg:w="14"/><text x="41.1670%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="40.9170%" y="517" width="0.0134%" height="15" fill="rgb(216,183,47)" fg:x="42852" fg:w="14"/><text x="41.1670%" y="527.50"></text></g><g><title>core::task::wake::Waker::wake (723 samples, 0.69%)</title><rect x="40.2410%" y="597" width="0.6904%" height="15" fill="rgb(229,195,25)" fg:x="42144" fg:w="723"/><text x="40.4910%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (723 samples, 0.69%)</title><rect x="40.2410%" y="581" width="0.6904%" height="15" fill="rgb(224,132,51)" fg:x="42144" fg:w="723"/><text x="40.4910%" y="591.50"></text></g><g><title>async_executor::State::notify (844 samples, 0.81%)</title><rect x="40.1694%" y="613" width="0.8059%" height="15" fill="rgb(240,63,7)" fg:x="42069" fg:w="844"/><text x="40.4194%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.04%)</title><rect x="40.9314%" y="597" width="0.0439%" height="15" fill="rgb(249,182,41)" fg:x="42867" fg:w="46"/><text x="41.1814%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (45 samples, 0.04%)</title><rect x="40.9323%" y="581" width="0.0430%" height="15" fill="rgb(243,47,26)" fg:x="42868" fg:w="45"/><text x="41.1823%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (41 samples, 0.04%)</title><rect x="40.9361%" y="565" width="0.0391%" height="15" fill="rgb(233,48,2)" fg:x="42872" fg:w="41"/><text x="41.1861%" y="575.50"></text></g><g><title>___pthread_mutex_lock (41 samples, 0.04%)</title><rect x="40.9361%" y="549" width="0.0391%" height="15" fill="rgb(244,165,34)" fg:x="42872" fg:w="41"/><text x="41.1861%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (26 samples, 0.02%)</title><rect x="40.9505%" y="533" width="0.0248%" height="15" fill="rgb(207,89,7)" fg:x="42887" fg:w="26"/><text x="41.2005%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (20 samples, 0.02%)</title><rect x="40.9562%" y="517" width="0.0191%" height="15" fill="rgb(244,117,36)" fg:x="42893" fg:w="20"/><text x="41.2062%" y="527.50"></text></g><g><title>do_syscall_64 (20 samples, 0.02%)</title><rect x="40.9562%" y="501" width="0.0191%" height="15" fill="rgb(226,144,34)" fg:x="42893" fg:w="20"/><text x="41.2062%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (29 samples, 0.03%)</title><rect x="40.9801%" y="581" width="0.0277%" height="15" fill="rgb(213,23,19)" fg:x="42918" fg:w="29"/><text x="41.2301%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.03%)</title><rect x="40.9801%" y="565" width="0.0277%" height="15" fill="rgb(217,75,12)" fg:x="42918" fg:w="29"/><text x="41.2301%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 0.01%)</title><rect x="41.0077%" y="581" width="0.0124%" height="15" fill="rgb(224,159,17)" fg:x="42947" fg:w="13"/><text x="41.2577%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (13 samples, 0.01%)</title><rect x="41.0077%" y="565" width="0.0124%" height="15" fill="rgb(217,118,1)" fg:x="42947" fg:w="13"/><text x="41.2577%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (892 samples, 0.85%)</title><rect x="40.1694%" y="629" width="0.8517%" height="15" fill="rgb(232,180,48)" fg:x="42069" fg:w="892"/><text x="40.4194%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (48 samples, 0.05%)</title><rect x="40.9753%" y="613" width="0.0458%" height="15" fill="rgb(230,27,33)" fg:x="42913" fg:w="48"/><text x="41.2253%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (48 samples, 0.05%)</title><rect x="40.9753%" y="597" width="0.0458%" height="15" fill="rgb(205,31,21)" fg:x="42913" fg:w="48"/><text x="41.2253%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (36 samples, 0.03%)</title><rect x="41.0211%" y="629" width="0.0344%" height="15" fill="rgb(253,59,4)" fg:x="42961" fg:w="36"/><text x="41.2711%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (36 samples, 0.03%)</title><rect x="41.0211%" y="613" width="0.0344%" height="15" fill="rgb(224,201,9)" fg:x="42961" fg:w="36"/><text x="41.2711%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (965 samples, 0.92%)</title><rect x="40.1465%" y="725" width="0.9214%" height="15" fill="rgb(229,206,30)" fg:x="42045" fg:w="965"/><text x="40.3965%" y="735.50"></text></g><g><title>event_listener::Event::notify (965 samples, 0.92%)</title><rect x="40.1465%" y="709" width="0.9214%" height="15" fill="rgb(212,67,47)" fg:x="42045" fg:w="965"/><text x="40.3965%" y="719.50"></text></g><g><title>event_listener::List::notify (960 samples, 0.92%)</title><rect x="40.1512%" y="693" width="0.9167%" height="15" fill="rgb(211,96,50)" fg:x="42050" fg:w="960"/><text x="40.4012%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (951 samples, 0.91%)</title><rect x="40.1598%" y="677" width="0.9081%" height="15" fill="rgb(252,114,18)" fg:x="42059" fg:w="951"/><text x="40.4098%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (951 samples, 0.91%)</title><rect x="40.1598%" y="661" width="0.9081%" height="15" fill="rgb(223,58,37)" fg:x="42059" fg:w="951"/><text x="40.4098%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (942 samples, 0.90%)</title><rect x="40.1684%" y="645" width="0.8995%" height="15" fill="rgb(237,70,4)" fg:x="42068" fg:w="942"/><text x="40.4184%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="41.0555%" y="629" width="0.0124%" height="15" fill="rgb(244,85,46)" fg:x="42997" fg:w="13"/><text x="41.3055%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="41.0555%" y="613" width="0.0124%" height="15" fill="rgb(223,39,52)" fg:x="42997" fg:w="13"/><text x="41.3055%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (981 samples, 0.94%)</title><rect x="40.1417%" y="741" width="0.9367%" height="15" fill="rgb(218,200,14)" fg:x="42040" fg:w="981"/><text x="40.3917%" y="751.50"></text></g><g><title>event_listener::Event::listen (11 samples, 0.01%)</title><rect x="41.0679%" y="725" width="0.0105%" height="15" fill="rgb(208,171,16)" fg:x="43010" fg:w="11"/><text x="41.3179%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (982 samples, 0.94%)</title><rect x="40.1417%" y="805" width="0.9377%" height="15" fill="rgb(234,200,18)" fg:x="42040" fg:w="982"/><text x="40.3917%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (982 samples, 0.94%)</title><rect x="40.1417%" y="789" width="0.9377%" height="15" fill="rgb(228,45,11)" fg:x="42040" fg:w="982"/><text x="40.3917%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (982 samples, 0.94%)</title><rect x="40.1417%" y="773" width="0.9377%" height="15" fill="rgb(237,182,11)" fg:x="42040" fg:w="982"/><text x="40.3917%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (982 samples, 0.94%)</title><rect x="40.1417%" y="757" width="0.9377%" height="15" fill="rgb(241,175,49)" fg:x="42040" fg:w="982"/><text x="40.3917%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="41.0794%" y="469" width="0.0115%" height="15" fill="rgb(247,38,35)" fg:x="43022" fg:w="12"/><text x="41.3294%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (81 samples, 0.08%)</title><rect x="41.0794%" y="773" width="0.0773%" height="15" fill="rgb(228,39,49)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81 samples, 0.08%)</title><rect x="41.0794%" y="757" width="0.0773%" height="15" fill="rgb(226,101,26)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (81 samples, 0.08%)</title><rect x="41.0794%" y="741" width="0.0773%" height="15" fill="rgb(206,141,19)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (81 samples, 0.08%)</title><rect x="41.0794%" y="725" width="0.0773%" height="15" fill="rgb(211,200,13)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (81 samples, 0.08%)</title><rect x="41.0794%" y="709" width="0.0773%" height="15" fill="rgb(241,121,6)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (81 samples, 0.08%)</title><rect x="41.0794%" y="693" width="0.0773%" height="15" fill="rgb(234,221,29)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (81 samples, 0.08%)</title><rect x="41.0794%" y="677" width="0.0773%" height="15" fill="rgb(229,136,5)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.08%)</title><rect x="41.0794%" y="661" width="0.0773%" height="15" fill="rgb(238,36,11)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.08%)</title><rect x="41.0794%" y="645" width="0.0773%" height="15" fill="rgb(251,55,41)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81 samples, 0.08%)</title><rect x="41.0794%" y="629" width="0.0773%" height="15" fill="rgb(242,34,40)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="639.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.08%)</title><rect x="41.0794%" y="613" width="0.0773%" height="15" fill="rgb(215,42,17)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="623.50"></text></g><g><title>__rg_alloc (81 samples, 0.08%)</title><rect x="41.0794%" y="597" width="0.0773%" height="15" fill="rgb(207,44,46)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (81 samples, 0.08%)</title><rect x="41.0794%" y="581" width="0.0773%" height="15" fill="rgb(211,206,28)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="591.50"></text></g><g><title>rust_alloc (81 samples, 0.08%)</title><rect x="41.0794%" y="565" width="0.0773%" height="15" fill="rgb(237,167,16)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.08%)</title><rect x="41.0794%" y="549" width="0.0773%" height="15" fill="rgb(233,66,6)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.08%)</title><rect x="41.0794%" y="533" width="0.0773%" height="15" fill="rgb(246,123,29)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.08%)</title><rect x="41.0794%" y="517" width="0.0773%" height="15" fill="rgb(209,62,40)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.08%)</title><rect x="41.0794%" y="501" width="0.0773%" height="15" fill="rgb(218,4,25)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (81 samples, 0.08%)</title><rect x="41.0794%" y="485" width="0.0773%" height="15" fill="rgb(253,91,49)" fg:x="43022" fg:w="81"/><text x="41.3294%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (69 samples, 0.07%)</title><rect x="41.0908%" y="469" width="0.0659%" height="15" fill="rgb(228,155,29)" fg:x="43034" fg:w="69"/><text x="41.3408%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (52 samples, 0.05%)</title><rect x="41.1070%" y="453" width="0.0497%" height="15" fill="rgb(243,57,37)" fg:x="43051" fg:w="52"/><text x="41.3570%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="41.1070%" y="437" width="0.0497%" height="15" fill="rgb(244,167,17)" fg:x="43051" fg:w="52"/><text x="41.3570%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="41.1070%" y="421" width="0.0497%" height="15" fill="rgb(207,181,38)" fg:x="43051" fg:w="52"/><text x="41.3570%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.02%)</title><rect x="41.1567%" y="405" width="0.0153%" height="15" fill="rgb(211,8,23)" fg:x="43103" fg:w="16"/><text x="41.4067%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="41.1586%" y="389" width="0.0134%" height="15" fill="rgb(235,11,44)" fg:x="43105" fg:w="14"/><text x="41.4086%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="41.1739%" y="389" width="0.0105%" height="15" fill="rgb(248,18,52)" fg:x="43121" fg:w="11"/><text x="41.4239%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="41.1567%" y="437" width="0.0869%" height="15" fill="rgb(208,4,7)" fg:x="43103" fg:w="91"/><text x="41.4067%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (91 samples, 0.09%)</title><rect x="41.1567%" y="421" width="0.0869%" height="15" fill="rgb(240,17,39)" fg:x="43103" fg:w="91"/><text x="41.4067%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (75 samples, 0.07%)</title><rect x="41.1720%" y="405" width="0.0716%" height="15" fill="rgb(207,170,3)" fg:x="43119" fg:w="75"/><text x="41.4220%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (62 samples, 0.06%)</title><rect x="41.1844%" y="389" width="0.0592%" height="15" fill="rgb(236,100,52)" fg:x="43132" fg:w="62"/><text x="41.4344%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="41.1844%" y="373" width="0.0592%" height="15" fill="rgb(246,78,51)" fg:x="43132" fg:w="62"/><text x="41.4344%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="41.1844%" y="357" width="0.0592%" height="15" fill="rgb(211,17,15)" fg:x="43132" fg:w="62"/><text x="41.4344%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (112 samples, 0.11%)</title><rect x="41.1567%" y="709" width="0.1069%" height="15" fill="rgb(209,59,46)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (112 samples, 0.11%)</title><rect x="41.1567%" y="693" width="0.1069%" height="15" fill="rgb(210,92,25)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (112 samples, 0.11%)</title><rect x="41.1567%" y="677" width="0.1069%" height="15" fill="rgb(238,174,52)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (112 samples, 0.11%)</title><rect x="41.1567%" y="661" width="0.1069%" height="15" fill="rgb(230,73,7)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (112 samples, 0.11%)</title><rect x="41.1567%" y="645" width="0.1069%" height="15" fill="rgb(243,124,40)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (112 samples, 0.11%)</title><rect x="41.1567%" y="629" width="0.1069%" height="15" fill="rgb(244,170,11)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (112 samples, 0.11%)</title><rect x="41.1567%" y="613" width="0.1069%" height="15" fill="rgb(207,114,54)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (112 samples, 0.11%)</title><rect x="41.1567%" y="597" width="0.1069%" height="15" fill="rgb(205,42,20)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 0.11%)</title><rect x="41.1567%" y="581" width="0.1069%" height="15" fill="rgb(230,30,28)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 0.11%)</title><rect x="41.1567%" y="565" width="0.1069%" height="15" fill="rgb(205,73,54)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="575.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.11%)</title><rect x="41.1567%" y="549" width="0.1069%" height="15" fill="rgb(254,227,23)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="559.50"></text></g><g><title>__rg_alloc (112 samples, 0.11%)</title><rect x="41.1567%" y="533" width="0.1069%" height="15" fill="rgb(228,202,34)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.11%)</title><rect x="41.1567%" y="517" width="0.1069%" height="15" fill="rgb(222,225,37)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="527.50"></text></g><g><title>rust_alloc (112 samples, 0.11%)</title><rect x="41.1567%" y="501" width="0.1069%" height="15" fill="rgb(221,14,54)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.11%)</title><rect x="41.1567%" y="485" width="0.1069%" height="15" fill="rgb(254,102,2)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.11%)</title><rect x="41.1567%" y="469" width="0.1069%" height="15" fill="rgb(232,104,17)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.11%)</title><rect x="41.1567%" y="453" width="0.1069%" height="15" fill="rgb(250,220,14)" fg:x="43103" fg:w="112"/><text x="41.4067%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="41.2436%" y="437" width="0.0201%" height="15" fill="rgb(241,158,9)" fg:x="43194" fg:w="21"/><text x="41.4936%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="41.2436%" y="421" width="0.0201%" height="15" fill="rgb(246,9,43)" fg:x="43194" fg:w="21"/><text x="41.4936%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="41.2436%" y="405" width="0.0201%" height="15" fill="rgb(206,73,33)" fg:x="43194" fg:w="21"/><text x="41.4936%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="41.2436%" y="389" width="0.0201%" height="15" fill="rgb(222,79,8)" fg:x="43194" fg:w="21"/><text x="41.4936%" y="399.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (21 samples, 0.02%)</title><rect x="41.2436%" y="373" width="0.0201%" height="15" fill="rgb(234,8,54)" fg:x="43194" fg:w="21"/><text x="41.4936%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (11 samples, 0.01%)</title><rect x="41.2531%" y="357" width="0.0105%" height="15" fill="rgb(209,134,38)" fg:x="43204" fg:w="11"/><text x="41.5031%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="41.2531%" y="341" width="0.0105%" height="15" fill="rgb(230,127,29)" fg:x="43204" fg:w="11"/><text x="41.5031%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (17 samples, 0.02%)</title><rect x="41.2636%" y="485" width="0.0162%" height="15" fill="rgb(242,44,41)" fg:x="43215" fg:w="17"/><text x="41.5136%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="41.2656%" y="469" width="0.0143%" height="15" fill="rgb(222,56,43)" fg:x="43217" fg:w="15"/><text x="41.5156%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="41.2837%" y="469" width="0.0105%" height="15" fill="rgb(238,39,47)" fg:x="43236" fg:w="11"/><text x="41.5337%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="41.2636%" y="517" width="0.0812%" height="15" fill="rgb(226,79,43)" fg:x="43215" fg:w="85"/><text x="41.5136%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (85 samples, 0.08%)</title><rect x="41.2636%" y="501" width="0.0812%" height="15" fill="rgb(242,105,53)" fg:x="43215" fg:w="85"/><text x="41.5136%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (68 samples, 0.06%)</title><rect x="41.2799%" y="485" width="0.0649%" height="15" fill="rgb(251,132,46)" fg:x="43232" fg:w="68"/><text x="41.5299%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (53 samples, 0.05%)</title><rect x="41.2942%" y="469" width="0.0506%" height="15" fill="rgb(231,77,14)" fg:x="43247" fg:w="53"/><text x="41.5442%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="41.2942%" y="453" width="0.0506%" height="15" fill="rgb(240,135,9)" fg:x="43247" fg:w="53"/><text x="41.5442%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="41.2942%" y="437" width="0.0506%" height="15" fill="rgb(248,109,14)" fg:x="43247" fg:w="53"/><text x="41.5442%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (279 samples, 0.27%)</title><rect x="41.0794%" y="789" width="0.2664%" height="15" fill="rgb(227,146,52)" fg:x="43022" fg:w="279"/><text x="41.3294%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (198 samples, 0.19%)</title><rect x="41.1567%" y="773" width="0.1891%" height="15" fill="rgb(232,54,3)" fg:x="43103" fg:w="198"/><text x="41.4067%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (198 samples, 0.19%)</title><rect x="41.1567%" y="757" width="0.1891%" height="15" fill="rgb(229,201,43)" fg:x="43103" fg:w="198"/><text x="41.4067%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (198 samples, 0.19%)</title><rect x="41.1567%" y="741" width="0.1891%" height="15" fill="rgb(252,161,33)" fg:x="43103" fg:w="198"/><text x="41.4067%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (198 samples, 0.19%)</title><rect x="41.1567%" y="725" width="0.1891%" height="15" fill="rgb(226,146,40)" fg:x="43103" fg:w="198"/><text x="41.4067%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (86 samples, 0.08%)</title><rect x="41.2636%" y="709" width="0.0821%" height="15" fill="rgb(219,47,25)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86 samples, 0.08%)</title><rect x="41.2636%" y="693" width="0.0821%" height="15" fill="rgb(250,135,13)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (86 samples, 0.08%)</title><rect x="41.2636%" y="677" width="0.0821%" height="15" fill="rgb(219,229,18)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.08%)</title><rect x="41.2636%" y="661" width="0.0821%" height="15" fill="rgb(217,152,27)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.08%)</title><rect x="41.2636%" y="645" width="0.0821%" height="15" fill="rgb(225,71,47)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="655.50"></text></g><g><title>alloc::alloc::alloc (86 samples, 0.08%)</title><rect x="41.2636%" y="629" width="0.0821%" height="15" fill="rgb(220,139,14)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="639.50"></text></g><g><title>__rg_alloc (86 samples, 0.08%)</title><rect x="41.2636%" y="613" width="0.0821%" height="15" fill="rgb(247,54,32)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (86 samples, 0.08%)</title><rect x="41.2636%" y="597" width="0.0821%" height="15" fill="rgb(252,131,39)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="607.50"></text></g><g><title>rust_alloc (86 samples, 0.08%)</title><rect x="41.2636%" y="581" width="0.0821%" height="15" fill="rgb(210,108,39)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="41.2636%" y="565" width="0.0821%" height="15" fill="rgb(205,23,29)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="41.2636%" y="549" width="0.0821%" height="15" fill="rgb(246,139,46)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="41.2636%" y="533" width="0.0821%" height="15" fill="rgb(250,81,26)" fg:x="43215" fg:w="86"/><text x="41.5136%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (28 samples, 0.03%)</title><rect x="41.3563%" y="517" width="0.0267%" height="15" fill="rgb(214,104,7)" fg:x="43312" fg:w="28"/><text x="41.6063%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (28 samples, 0.03%)</title><rect x="41.3563%" y="501" width="0.0267%" height="15" fill="rgb(233,189,8)" fg:x="43312" fg:w="28"/><text x="41.6063%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="41.3610%" y="485" width="0.0220%" height="15" fill="rgb(228,141,17)" fg:x="43317" fg:w="23"/><text x="41.6110%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (40 samples, 0.04%)</title><rect x="41.3563%" y="533" width="0.0382%" height="15" fill="rgb(247,157,1)" fg:x="43312" fg:w="40"/><text x="41.6063%" y="543.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="41.3830%" y="517" width="0.0115%" height="15" fill="rgb(249,225,5)" fg:x="43340" fg:w="12"/><text x="41.6330%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="41.3830%" y="501" width="0.0115%" height="15" fill="rgb(242,55,13)" fg:x="43340" fg:w="12"/><text x="41.6330%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="41.3830%" y="485" width="0.0115%" height="15" fill="rgb(230,49,50)" fg:x="43340" fg:w="12"/><text x="41.6330%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="41.3830%" y="469" width="0.0115%" height="15" fill="rgb(241,111,38)" fg:x="43340" fg:w="12"/><text x="41.6330%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (67 samples, 0.06%)</title><rect x="41.3458%" y="549" width="0.0640%" height="15" fill="rgb(252,155,4)" fg:x="43301" fg:w="67"/><text x="41.5958%" y="559.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="41.3945%" y="533" width="0.0153%" height="15" fill="rgb(212,69,32)" fg:x="43352" fg:w="16"/><text x="41.6445%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="41.3945%" y="517" width="0.0153%" height="15" fill="rgb(243,107,47)" fg:x="43352" fg:w="16"/><text x="41.6445%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (16 samples, 0.02%)</title><rect x="41.3945%" y="501" width="0.0153%" height="15" fill="rgb(247,130,12)" fg:x="43352" fg:w="16"/><text x="41.6445%" y="511.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.02%)</title><rect x="41.3945%" y="485" width="0.0153%" height="15" fill="rgb(233,74,16)" fg:x="43352" fg:w="16"/><text x="41.6445%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (40 samples, 0.04%)</title><rect x="41.4307%" y="533" width="0.0382%" height="15" fill="rgb(208,58,18)" fg:x="43390" fg:w="40"/><text x="41.6807%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (326 samples, 0.31%)</title><rect x="41.3458%" y="581" width="0.3113%" height="15" fill="rgb(242,225,1)" fg:x="43301" fg:w="326"/><text x="41.5958%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (326 samples, 0.31%)</title><rect x="41.3458%" y="565" width="0.3113%" height="15" fill="rgb(249,39,40)" fg:x="43301" fg:w="326"/><text x="41.5958%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (259 samples, 0.25%)</title><rect x="41.4097%" y="549" width="0.2473%" height="15" fill="rgb(207,72,44)" fg:x="43368" fg:w="259"/><text x="41.6597%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (197 samples, 0.19%)</title><rect x="41.4689%" y="533" width="0.1881%" height="15" fill="rgb(215,193,12)" fg:x="43430" fg:w="197"/><text x="41.7189%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (197 samples, 0.19%)</title><rect x="41.4689%" y="517" width="0.1881%" height="15" fill="rgb(248,41,39)" fg:x="43430" fg:w="197"/><text x="41.7189%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (197 samples, 0.19%)</title><rect x="41.4689%" y="501" width="0.1881%" height="15" fill="rgb(253,85,4)" fg:x="43430" fg:w="197"/><text x="41.7189%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (337 samples, 0.32%)</title><rect x="41.3458%" y="789" width="0.3218%" height="15" fill="rgb(243,70,31)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (337 samples, 0.32%)</title><rect x="41.3458%" y="773" width="0.3218%" height="15" fill="rgb(253,195,26)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (337 samples, 0.32%)</title><rect x="41.3458%" y="757" width="0.3218%" height="15" fill="rgb(243,42,11)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (337 samples, 0.32%)</title><rect x="41.3458%" y="741" width="0.3218%" height="15" fill="rgb(239,66,17)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (337 samples, 0.32%)</title><rect x="41.3458%" y="725" width="0.3218%" height="15" fill="rgb(217,132,21)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (337 samples, 0.32%)</title><rect x="41.3458%" y="709" width="0.3218%" height="15" fill="rgb(252,202,21)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="719.50"></text></g><g><title>alloc::alloc::alloc (337 samples, 0.32%)</title><rect x="41.3458%" y="693" width="0.3218%" height="15" fill="rgb(233,98,36)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="703.50"></text></g><g><title>__rg_alloc (337 samples, 0.32%)</title><rect x="41.3458%" y="677" width="0.3218%" height="15" fill="rgb(216,153,54)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (337 samples, 0.32%)</title><rect x="41.3458%" y="661" width="0.3218%" height="15" fill="rgb(250,99,7)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="671.50"></text></g><g><title>rust_alloc (337 samples, 0.32%)</title><rect x="41.3458%" y="645" width="0.3218%" height="15" fill="rgb(207,56,50)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (337 samples, 0.32%)</title><rect x="41.3458%" y="629" width="0.3218%" height="15" fill="rgb(244,61,34)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (337 samples, 0.32%)</title><rect x="41.3458%" y="613" width="0.3218%" height="15" fill="rgb(241,50,38)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (337 samples, 0.32%)</title><rect x="41.3458%" y="597" width="0.3218%" height="15" fill="rgb(212,166,30)" fg:x="43301" fg:w="337"/><text x="41.5958%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="41.6570%" y="581" width="0.0105%" height="15" fill="rgb(249,127,32)" fg:x="43627" fg:w="11"/><text x="41.9070%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="41.6570%" y="565" width="0.0105%" height="15" fill="rgb(209,103,0)" fg:x="43627" fg:w="11"/><text x="41.9070%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="41.6570%" y="549" width="0.0105%" height="15" fill="rgb(238,209,51)" fg:x="43627" fg:w="11"/><text x="41.9070%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (11 samples, 0.01%)</title><rect x="41.6570%" y="533" width="0.0105%" height="15" fill="rgb(237,56,23)" fg:x="43627" fg:w="11"/><text x="41.9070%" y="543.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (644 samples, 0.61%)</title><rect x="41.8786%" y="757" width="0.6149%" height="15" fill="rgb(215,153,46)" fg:x="43859" fg:w="644"/><text x="42.1286%" y="767.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="42.5441%" y="565" width="0.0134%" height="15" fill="rgb(224,49,31)" fg:x="44556" fg:w="14"/><text x="42.7941%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (17 samples, 0.02%)</title><rect x="42.6023%" y="453" width="0.0162%" height="15" fill="rgb(250,18,42)" fg:x="44617" fg:w="17"/><text x="42.8523%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (17 samples, 0.02%)</title><rect x="42.6023%" y="437" width="0.0162%" height="15" fill="rgb(215,176,39)" fg:x="44617" fg:w="17"/><text x="42.8523%" y="447.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (15 samples, 0.01%)</title><rect x="42.6042%" y="421" width="0.0143%" height="15" fill="rgb(223,77,29)" fg:x="44619" fg:w="15"/><text x="42.8542%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (22 samples, 0.02%)</title><rect x="42.6023%" y="469" width="0.0210%" height="15" fill="rgb(234,94,52)" fg:x="44617" fg:w="22"/><text x="42.8523%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (30 samples, 0.03%)</title><rect x="42.5966%" y="485" width="0.0286%" height="15" fill="rgb(220,154,50)" fg:x="44611" fg:w="30"/><text x="42.8466%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (37 samples, 0.04%)</title><rect x="42.6386%" y="469" width="0.0353%" height="15" fill="rgb(212,11,10)" fg:x="44655" fg:w="37"/><text x="42.8886%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (232 samples, 0.22%)</title><rect x="42.5966%" y="517" width="0.2215%" height="15" fill="rgb(205,166,19)" fg:x="44611" fg:w="232"/><text x="42.8466%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (232 samples, 0.22%)</title><rect x="42.5966%" y="501" width="0.2215%" height="15" fill="rgb(244,198,16)" fg:x="44611" fg:w="232"/><text x="42.8466%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (202 samples, 0.19%)</title><rect x="42.6253%" y="485" width="0.1929%" height="15" fill="rgb(219,69,12)" fg:x="44641" fg:w="202"/><text x="42.8753%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (151 samples, 0.14%)</title><rect x="42.6739%" y="469" width="0.1442%" height="15" fill="rgb(245,30,7)" fg:x="44692" fg:w="151"/><text x="42.9239%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (151 samples, 0.14%)</title><rect x="42.6739%" y="453" width="0.1442%" height="15" fill="rgb(218,221,48)" fg:x="44692" fg:w="151"/><text x="42.9239%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (151 samples, 0.14%)</title><rect x="42.6739%" y="437" width="0.1442%" height="15" fill="rgb(216,66,15)" fg:x="44692" fg:w="151"/><text x="42.9239%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="42.8181%" y="517" width="0.0172%" height="15" fill="rgb(226,122,50)" fg:x="44843" fg:w="18"/><text x="43.0681%" y="527.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (16 samples, 0.02%)</title><rect x="42.8200%" y="501" width="0.0153%" height="15" fill="rgb(239,156,16)" fg:x="44845" fg:w="16"/><text x="43.0700%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (21 samples, 0.02%)</title><rect x="42.8410%" y="517" width="0.0201%" height="15" fill="rgb(224,27,38)" fg:x="44867" fg:w="21"/><text x="43.0910%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (21 samples, 0.02%)</title><rect x="42.8410%" y="501" width="0.0201%" height="15" fill="rgb(224,39,27)" fg:x="44867" fg:w="21"/><text x="43.0910%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (616 samples, 0.59%)</title><rect x="42.5641%" y="565" width="0.5882%" height="15" fill="rgb(215,92,29)" fg:x="44577" fg:w="616"/><text x="42.8141%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (609 samples, 0.58%)</title><rect x="42.5708%" y="549" width="0.5815%" height="15" fill="rgb(207,159,16)" fg:x="44584" fg:w="609"/><text x="42.8208%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (593 samples, 0.57%)</title><rect x="42.5861%" y="533" width="0.5662%" height="15" fill="rgb(238,163,47)" fg:x="44600" fg:w="593"/><text x="42.8361%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (305 samples, 0.29%)</title><rect x="42.8611%" y="517" width="0.2912%" height="15" fill="rgb(219,91,49)" fg:x="44888" fg:w="305"/><text x="43.1111%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (305 samples, 0.29%)</title><rect x="42.8611%" y="501" width="0.2912%" height="15" fill="rgb(227,167,31)" fg:x="44888" fg:w="305"/><text x="43.1111%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,398 samples, 1.33%)</title><rect x="41.8356%" y="773" width="1.3349%" height="15" fill="rgb(234,80,54)" fg:x="43814" fg:w="1398"/><text x="42.0856%" y="783.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (709 samples, 0.68%)</title><rect x="42.4935%" y="757" width="0.6770%" height="15" fill="rgb(212,114,2)" fg:x="44503" fg:w="709"/><text x="42.7435%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (704 samples, 0.67%)</title><rect x="42.4983%" y="741" width="0.6722%" height="15" fill="rgb(234,50,24)" fg:x="44508" fg:w="704"/><text x="42.7483%" y="751.50"></text></g><g><title>value_trait::Builder::object (704 samples, 0.67%)</title><rect x="42.4983%" y="725" width="0.6722%" height="15" fill="rgb(221,68,8)" fg:x="44508" fg:w="704"/><text x="42.7483%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (704 samples, 0.67%)</title><rect x="42.4983%" y="709" width="0.6722%" height="15" fill="rgb(254,180,31)" fg:x="44508" fg:w="704"/><text x="42.7483%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (704 samples, 0.67%)</title><rect x="42.4983%" y="693" width="0.6722%" height="15" fill="rgb(247,130,50)" fg:x="44508" fg:w="704"/><text x="42.7483%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (683 samples, 0.65%)</title><rect x="42.5183%" y="677" width="0.6522%" height="15" fill="rgb(211,109,4)" fg:x="44529" fg:w="683"/><text x="42.7683%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (683 samples, 0.65%)</title><rect x="42.5183%" y="661" width="0.6522%" height="15" fill="rgb(238,50,21)" fg:x="44529" fg:w="683"/><text x="42.7683%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (683 samples, 0.65%)</title><rect x="42.5183%" y="645" width="0.6522%" height="15" fill="rgb(225,57,45)" fg:x="44529" fg:w="683"/><text x="42.7683%" y="655.50"></text></g><g><title>alloc::alloc::alloc (679 samples, 0.65%)</title><rect x="42.5221%" y="629" width="0.6483%" height="15" fill="rgb(209,196,50)" fg:x="44533" fg:w="679"/><text x="42.7721%" y="639.50"></text></g><g><title>__rg_alloc (679 samples, 0.65%)</title><rect x="42.5221%" y="613" width="0.6483%" height="15" fill="rgb(242,140,13)" fg:x="44533" fg:w="679"/><text x="42.7721%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (679 samples, 0.65%)</title><rect x="42.5221%" y="597" width="0.6483%" height="15" fill="rgb(217,111,7)" fg:x="44533" fg:w="679"/><text x="42.7721%" y="607.50"></text></g><g><title>rust_alloc (656 samples, 0.63%)</title><rect x="42.5441%" y="581" width="0.6264%" height="15" fill="rgb(253,193,51)" fg:x="44556" fg:w="656"/><text x="42.7941%" y="591.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (19 samples, 0.02%)</title><rect x="43.1523%" y="565" width="0.0181%" height="15" fill="rgb(252,70,29)" fg:x="45193" fg:w="19"/><text x="43.4023%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (17 samples, 0.02%)</title><rect x="43.1705%" y="773" width="0.0162%" height="15" fill="rgb(232,127,12)" fg:x="45212" fg:w="17"/><text x="43.4205%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="43.1905%" y="741" width="0.0105%" height="15" fill="rgb(211,180,21)" fg:x="45233" fg:w="11"/><text x="43.4405%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="43.1905%" y="757" width="0.0191%" height="15" fill="rgb(229,72,13)" fg:x="45233" fg:w="20"/><text x="43.4405%" y="767.50"></text></g><g><title>alloc::alloc::box_free (24 samples, 0.02%)</title><rect x="43.3051%" y="709" width="0.0229%" height="15" fill="rgb(240,211,49)" fg:x="45353" fg:w="24"/><text x="43.5551%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="43.3051%" y="693" width="0.0229%" height="15" fill="rgb(219,149,40)" fg:x="45353" fg:w="24"/><text x="43.5551%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="43.3051%" y="677" width="0.0229%" height="15" fill="rgb(210,127,46)" fg:x="45353" fg:w="24"/><text x="43.5551%" y="687.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="43.3051%" y="661" width="0.0229%" height="15" fill="rgb(220,106,7)" fg:x="45353" fg:w="24"/><text x="43.5551%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="43.3051%" y="645" width="0.0229%" height="15" fill="rgb(249,31,22)" fg:x="45353" fg:w="24"/><text x="43.5551%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.05%)</title><rect x="43.3490%" y="645" width="0.0458%" height="15" fill="rgb(253,1,49)" fg:x="45399" fg:w="48"/><text x="43.5990%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (48 samples, 0.05%)</title><rect x="43.3490%" y="629" width="0.0458%" height="15" fill="rgb(227,144,33)" fg:x="45399" fg:w="48"/><text x="43.5990%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (193 samples, 0.18%)</title><rect x="43.2316%" y="741" width="0.1843%" height="15" fill="rgb(249,163,44)" fg:x="45276" fg:w="193"/><text x="43.4816%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (131 samples, 0.13%)</title><rect x="43.2908%" y="725" width="0.1251%" height="15" fill="rgb(234,15,39)" fg:x="45338" fg:w="131"/><text x="43.5408%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (92 samples, 0.09%)</title><rect x="43.3280%" y="709" width="0.0878%" height="15" fill="rgb(207,66,16)" fg:x="45377" fg:w="92"/><text x="43.5780%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (92 samples, 0.09%)</title><rect x="43.3280%" y="693" width="0.0878%" height="15" fill="rgb(233,112,24)" fg:x="45377" fg:w="92"/><text x="43.5780%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (70 samples, 0.07%)</title><rect x="43.3490%" y="677" width="0.0668%" height="15" fill="rgb(230,90,22)" fg:x="45399" fg:w="70"/><text x="43.5990%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (70 samples, 0.07%)</title><rect x="43.3490%" y="661" width="0.0668%" height="15" fill="rgb(229,61,13)" fg:x="45399" fg:w="70"/><text x="43.5990%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (22 samples, 0.02%)</title><rect x="43.3949%" y="645" width="0.0210%" height="15" fill="rgb(225,57,24)" fg:x="45447" fg:w="22"/><text x="43.6449%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="43.3949%" y="629" width="0.0210%" height="15" fill="rgb(208,169,48)" fg:x="45447" fg:w="22"/><text x="43.6449%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (21 samples, 0.02%)</title><rect x="43.3958%" y="613" width="0.0201%" height="15" fill="rgb(244,218,51)" fg:x="45448" fg:w="21"/><text x="43.6458%" y="623.50"></text></g><g><title>rust_dealloc (29 samples, 0.03%)</title><rect x="43.4340%" y="709" width="0.0277%" height="15" fill="rgb(214,148,10)" fg:x="45488" fg:w="29"/><text x="43.6840%" y="719.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="43.4617%" y="709" width="0.0153%" height="15" fill="rgb(225,174,27)" fg:x="45517" fg:w="16"/><text x="43.7117%" y="719.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="43.4913%" y="645" width="0.0229%" height="15" fill="rgb(230,96,26)" fg:x="45548" fg:w="24"/><text x="43.7413%" y="655.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="43.5142%" y="645" width="0.0105%" height="15" fill="rgb(232,10,30)" fg:x="45572" fg:w="11"/><text x="43.7642%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="43.5142%" y="629" width="0.0105%" height="15" fill="rgb(222,8,50)" fg:x="45572" fg:w="11"/><text x="43.7642%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (44 samples, 0.04%)</title><rect x="43.5591%" y="597" width="0.0420%" height="15" fill="rgb(213,81,27)" fg:x="45619" fg:w="44"/><text x="43.8091%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (44 samples, 0.04%)</title><rect x="43.5591%" y="581" width="0.0420%" height="15" fill="rgb(245,50,10)" fg:x="45619" fg:w="44"/><text x="43.8091%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (101 samples, 0.10%)</title><rect x="43.5257%" y="645" width="0.0964%" height="15" fill="rgb(216,100,18)" fg:x="45584" fg:w="101"/><text x="43.7757%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (101 samples, 0.10%)</title><rect x="43.5257%" y="629" width="0.0964%" height="15" fill="rgb(236,147,54)" fg:x="45584" fg:w="101"/><text x="43.7757%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (95 samples, 0.09%)</title><rect x="43.5314%" y="613" width="0.0907%" height="15" fill="rgb(205,143,26)" fg:x="45590" fg:w="95"/><text x="43.7814%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (22 samples, 0.02%)</title><rect x="43.6011%" y="597" width="0.0210%" height="15" fill="rgb(236,26,9)" fg:x="45663" fg:w="22"/><text x="43.8511%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (22 samples, 0.02%)</title><rect x="43.6011%" y="581" width="0.0210%" height="15" fill="rgb(221,165,53)" fg:x="45663" fg:w="22"/><text x="43.8511%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (166 samples, 0.16%)</title><rect x="43.4770%" y="677" width="0.1585%" height="15" fill="rgb(214,110,17)" fg:x="45533" fg:w="166"/><text x="43.7270%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (166 samples, 0.16%)</title><rect x="43.4770%" y="661" width="0.1585%" height="15" fill="rgb(237,197,12)" fg:x="45533" fg:w="166"/><text x="43.7270%" y="671.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="43.6221%" y="645" width="0.0134%" height="15" fill="rgb(205,84,17)" fg:x="45685" fg:w="14"/><text x="43.8721%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (167 samples, 0.16%)</title><rect x="43.4770%" y="709" width="0.1595%" height="15" fill="rgb(237,18,45)" fg:x="45533" fg:w="167"/><text x="43.7270%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (167 samples, 0.16%)</title><rect x="43.4770%" y="693" width="0.1595%" height="15" fill="rgb(221,87,14)" fg:x="45533" fg:w="167"/><text x="43.7270%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (214 samples, 0.20%)</title><rect x="43.4340%" y="725" width="0.2043%" height="15" fill="rgb(238,186,15)" fg:x="45488" fg:w="214"/><text x="43.6840%" y="735.50"></text></g><g><title>rust_dealloc (250 samples, 0.24%)</title><rect x="43.4159%" y="741" width="0.2387%" height="15" fill="rgb(208,115,11)" fg:x="45469" fg:w="250"/><text x="43.6659%" y="751.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="43.6383%" y="725" width="0.0162%" height="15" fill="rgb(254,175,0)" fg:x="45702" fg:w="17"/><text x="43.8883%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (491 samples, 0.47%)</title><rect x="43.1905%" y="773" width="0.4688%" height="15" fill="rgb(227,24,42)" fg:x="45233" fg:w="491"/><text x="43.4405%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (471 samples, 0.45%)</title><rect x="43.2096%" y="757" width="0.4497%" height="15" fill="rgb(223,211,37)" fg:x="45253" fg:w="471"/><text x="43.4596%" y="767.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (24 samples, 0.02%)</title><rect x="43.6593%" y="773" width="0.0229%" height="15" fill="rgb(235,49,27)" fg:x="45724" fg:w="24"/><text x="43.9093%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,728 samples, 3.56%)</title><rect x="40.1417%" y="853" width="3.5597%" height="15" fill="rgb(254,97,51)" fg:x="42040" fg:w="3728"/><text x="40.3917%" y="863.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,728 samples, 3.56%)</title><rect x="40.1417%" y="837" width="3.5597%" height="15" fill="rgb(249,51,40)" fg:x="42040" fg:w="3728"/><text x="40.3917%" y="847.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,728 samples, 3.56%)</title><rect x="40.1417%" y="821" width="3.5597%" height="15" fill="rgb(210,128,45)" fg:x="42040" fg:w="3728"/><text x="40.3917%" y="831.50">trem..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,746 samples, 2.62%)</title><rect x="41.0794%" y="805" width="2.6220%" height="15" fill="rgb(224,137,50)" fg:x="43022" fg:w="2746"/><text x="41.3294%" y="815.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_event (2,127 samples, 2.03%)</title><rect x="41.6704%" y="789" width="2.0310%" height="15" fill="rgb(242,15,9)" fg:x="43641" fg:w="2127"/><text x="41.9204%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (20 samples, 0.02%)</title><rect x="43.6823%" y="773" width="0.0191%" height="15" fill="rgb(233,187,41)" fg:x="45748" fg:w="20"/><text x="43.9323%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (32 samples, 0.03%)</title><rect x="43.8121%" y="789" width="0.0306%" height="15" fill="rgb(227,2,29)" fg:x="45884" fg:w="32"/><text x="44.0621%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (923 samples, 0.88%)</title><rect x="43.7195%" y="805" width="0.8813%" height="15" fill="rgb(222,70,3)" fg:x="45787" fg:w="923"/><text x="43.9695%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (785 samples, 0.75%)</title><rect x="43.8513%" y="789" width="0.7496%" height="15" fill="rgb(213,11,42)" fg:x="45925" fg:w="785"/><text x="44.1013%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,384 samples, 1.32%)</title><rect x="43.7014%" y="837" width="1.3215%" height="15" fill="rgb(225,150,9)" fg:x="45768" fg:w="1384"/><text x="43.9514%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,384 samples, 1.32%)</title><rect x="43.7014%" y="821" width="1.3215%" height="15" fill="rgb(230,162,45)" fg:x="45768" fg:w="1384"/><text x="43.9514%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (442 samples, 0.42%)</title><rect x="44.6008%" y="805" width="0.4220%" height="15" fill="rgb(222,14,52)" fg:x="46710" fg:w="442"/><text x="44.8508%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (389 samples, 0.37%)</title><rect x="45.0754%" y="821" width="0.3714%" height="15" fill="rgb(254,198,14)" fg:x="47207" fg:w="389"/><text x="45.3254%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (32 samples, 0.03%)</title><rect x="45.6445%" y="805" width="0.0306%" height="15" fill="rgb(220,217,30)" fg:x="47803" fg:w="32"/><text x="45.8945%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="45.6769%" y="789" width="0.0372%" height="15" fill="rgb(215,146,41)" fg:x="47837" fg:w="39"/><text x="45.9269%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (17 samples, 0.02%)</title><rect x="45.6979%" y="773" width="0.0162%" height="15" fill="rgb(217,27,36)" fg:x="47859" fg:w="17"/><text x="45.9479%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (285 samples, 0.27%)</title><rect x="45.6769%" y="805" width="0.2721%" height="15" fill="rgb(219,218,39)" fg:x="47837" fg:w="285"/><text x="45.9269%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (246 samples, 0.23%)</title><rect x="45.7142%" y="789" width="0.2349%" height="15" fill="rgb(219,4,42)" fg:x="47876" fg:w="246"/><text x="45.9642%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (240 samples, 0.23%)</title><rect x="45.7199%" y="773" width="0.2292%" height="15" fill="rgb(249,119,36)" fg:x="47882" fg:w="240"/><text x="45.9699%" y="783.50"></text></g><g><title>core::ptr::read (240 samples, 0.23%)</title><rect x="45.7199%" y="757" width="0.2292%" height="15" fill="rgb(209,23,33)" fg:x="47882" fg:w="240"/><text x="45.9699%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (237 samples, 0.23%)</title><rect x="45.7228%" y="741" width="0.2263%" height="15" fill="rgb(211,10,0)" fg:x="47885" fg:w="237"/><text x="45.9728%" y="751.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="45.9510%" y="805" width="0.0105%" height="15" fill="rgb(208,99,37)" fg:x="48124" fg:w="11"/><text x="46.2010%" y="815.50"></text></g><g><title>rust_alloc (27 samples, 0.03%)</title><rect x="45.9939%" y="501" width="0.0258%" height="15" fill="rgb(213,132,31)" fg:x="48169" fg:w="27"/><text x="46.2439%" y="511.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="46.0197%" y="501" width="0.0143%" height="15" fill="rgb(243,129,40)" fg:x="48196" fg:w="15"/><text x="46.2697%" y="511.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="46.0235%" y="485" width="0.0105%" height="15" fill="rgb(210,66,33)" fg:x="48200" fg:w="11"/><text x="46.2735%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (20 samples, 0.02%)</title><rect x="46.0398%" y="421" width="0.0191%" height="15" fill="rgb(209,189,4)" fg:x="48217" fg:w="20"/><text x="46.2898%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (20 samples, 0.02%)</title><rect x="46.0398%" y="405" width="0.0191%" height="15" fill="rgb(214,107,37)" fg:x="48217" fg:w="20"/><text x="46.2898%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="46.0417%" y="389" width="0.0172%" height="15" fill="rgb(245,88,54)" fg:x="48219" fg:w="18"/><text x="46.2917%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (24 samples, 0.02%)</title><rect x="46.0398%" y="437" width="0.0229%" height="15" fill="rgb(205,146,20)" fg:x="48217" fg:w="24"/><text x="46.2898%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (32 samples, 0.03%)</title><rect x="46.0388%" y="453" width="0.0306%" height="15" fill="rgb(220,161,25)" fg:x="48216" fg:w="32"/><text x="46.2888%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="46.0761%" y="437" width="0.0105%" height="15" fill="rgb(215,152,15)" fg:x="48255" fg:w="11"/><text x="46.3261%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.15%)</title><rect x="46.0388%" y="485" width="0.1451%" height="15" fill="rgb(233,192,44)" fg:x="48216" fg:w="152"/><text x="46.2888%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (152 samples, 0.15%)</title><rect x="46.0388%" y="469" width="0.1451%" height="15" fill="rgb(240,170,46)" fg:x="48216" fg:w="152"/><text x="46.2888%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (120 samples, 0.11%)</title><rect x="46.0694%" y="453" width="0.1146%" height="15" fill="rgb(207,104,33)" fg:x="48248" fg:w="120"/><text x="46.3194%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (102 samples, 0.10%)</title><rect x="46.0866%" y="437" width="0.0974%" height="15" fill="rgb(219,21,39)" fg:x="48266" fg:w="102"/><text x="46.3366%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (102 samples, 0.10%)</title><rect x="46.0866%" y="421" width="0.0974%" height="15" fill="rgb(214,133,29)" fg:x="48266" fg:w="102"/><text x="46.3366%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (102 samples, 0.10%)</title><rect x="46.0866%" y="405" width="0.0974%" height="15" fill="rgb(226,93,6)" fg:x="48266" fg:w="102"/><text x="46.3366%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (52 samples, 0.05%)</title><rect x="46.1887%" y="485" width="0.0497%" height="15" fill="rgb(252,222,34)" fg:x="48373" fg:w="52"/><text x="46.4387%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (52 samples, 0.05%)</title><rect x="46.1887%" y="469" width="0.0497%" height="15" fill="rgb(252,92,48)" fg:x="48373" fg:w="52"/><text x="46.4387%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (779 samples, 0.74%)</title><rect x="45.9939%" y="533" width="0.7438%" height="15" fill="rgb(245,223,24)" fg:x="48169" fg:w="779"/><text x="46.2439%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (779 samples, 0.74%)</title><rect x="45.9939%" y="517" width="0.7438%" height="15" fill="rgb(205,176,3)" fg:x="48169" fg:w="779"/><text x="46.2439%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (737 samples, 0.70%)</title><rect x="46.0340%" y="501" width="0.7037%" height="15" fill="rgb(235,151,15)" fg:x="48211" fg:w="737"/><text x="46.2840%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (523 samples, 0.50%)</title><rect x="46.2384%" y="485" width="0.4994%" height="15" fill="rgb(237,209,11)" fg:x="48425" fg:w="523"/><text x="46.4884%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (523 samples, 0.50%)</title><rect x="46.2384%" y="469" width="0.4994%" height="15" fill="rgb(243,227,24)" fg:x="48425" fg:w="523"/><text x="46.4884%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (824 samples, 0.79%)</title><rect x="45.9615%" y="677" width="0.7868%" height="15" fill="rgb(239,193,16)" fg:x="48135" fg:w="824"/><text x="46.2115%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (824 samples, 0.79%)</title><rect x="45.9615%" y="661" width="0.7868%" height="15" fill="rgb(231,27,9)" fg:x="48135" fg:w="824"/><text x="46.2115%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (820 samples, 0.78%)</title><rect x="45.9653%" y="645" width="0.7830%" height="15" fill="rgb(219,169,10)" fg:x="48139" fg:w="820"/><text x="46.2153%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (820 samples, 0.78%)</title><rect x="45.9653%" y="629" width="0.7830%" height="15" fill="rgb(244,229,43)" fg:x="48139" fg:w="820"/><text x="46.2153%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (820 samples, 0.78%)</title><rect x="45.9653%" y="613" width="0.7830%" height="15" fill="rgb(254,38,20)" fg:x="48139" fg:w="820"/><text x="46.2153%" y="623.50"></text></g><g><title>alloc::alloc::alloc (804 samples, 0.77%)</title><rect x="45.9806%" y="597" width="0.7677%" height="15" fill="rgb(250,47,30)" fg:x="48155" fg:w="804"/><text x="46.2306%" y="607.50"></text></g><g><title>__rg_alloc (804 samples, 0.77%)</title><rect x="45.9806%" y="581" width="0.7677%" height="15" fill="rgb(224,124,36)" fg:x="48155" fg:w="804"/><text x="46.2306%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (804 samples, 0.77%)</title><rect x="45.9806%" y="565" width="0.7677%" height="15" fill="rgb(246,68,51)" fg:x="48155" fg:w="804"/><text x="46.2306%" y="575.50"></text></g><g><title>rust_alloc (803 samples, 0.77%)</title><rect x="45.9815%" y="549" width="0.7667%" height="15" fill="rgb(253,43,49)" fg:x="48156" fg:w="803"/><text x="46.2315%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="46.7378%" y="533" width="0.0105%" height="15" fill="rgb(219,54,36)" fg:x="48948" fg:w="11"/><text x="46.9878%" y="543.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (878 samples, 0.84%)</title><rect x="45.9615%" y="805" width="0.8384%" height="15" fill="rgb(227,133,34)" fg:x="48135" fg:w="878"/><text x="46.2115%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (878 samples, 0.84%)</title><rect x="45.9615%" y="789" width="0.8384%" height="15" fill="rgb(247,227,15)" fg:x="48135" fg:w="878"/><text x="46.2115%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (878 samples, 0.84%)</title><rect x="45.9615%" y="773" width="0.8384%" height="15" fill="rgb(229,96,14)" fg:x="48135" fg:w="878"/><text x="46.2115%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (878 samples, 0.84%)</title><rect x="45.9615%" y="757" width="0.8384%" height="15" fill="rgb(220,79,17)" fg:x="48135" fg:w="878"/><text x="46.2115%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (878 samples, 0.84%)</title><rect x="45.9615%" y="741" width="0.8384%" height="15" fill="rgb(205,131,53)" fg:x="48135" fg:w="878"/><text x="46.2115%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (878 samples, 0.84%)</title><rect x="45.9615%" y="725" width="0.8384%" height="15" fill="rgb(209,50,29)" fg:x="48135" fg:w="878"/><text x="46.2115%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (878 samples, 0.84%)</title><rect x="45.9615%" y="709" width="0.8384%" height="15" fill="rgb(245,86,46)" fg:x="48135" fg:w="878"/><text x="46.2115%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (878 samples, 0.84%)</title><rect x="45.9615%" y="693" width="0.8384%" height="15" fill="rgb(235,66,46)" fg:x="48135" fg:w="878"/><text x="46.2115%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (54 samples, 0.05%)</title><rect x="46.7483%" y="677" width="0.0516%" height="15" fill="rgb(232,148,31)" fg:x="48959" fg:w="54"/><text x="46.9983%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.05%)</title><rect x="46.7483%" y="661" width="0.0516%" height="15" fill="rgb(217,149,8)" fg:x="48959" fg:w="54"/><text x="46.9983%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (44 samples, 0.04%)</title><rect x="46.7578%" y="645" width="0.0420%" height="15" fill="rgb(209,183,11)" fg:x="48969" fg:w="44"/><text x="47.0078%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,454 samples, 1.39%)</title><rect x="46.7998%" y="805" width="1.3883%" height="15" fill="rgb(208,55,20)" fg:x="49013" fg:w="1454"/><text x="47.0498%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (19 samples, 0.02%)</title><rect x="48.1939%" y="789" width="0.0181%" height="15" fill="rgb(218,39,14)" fg:x="50473" fg:w="19"/><text x="48.4439%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (32 samples, 0.03%)</title><rect x="48.1882%" y="805" width="0.0306%" height="15" fill="rgb(216,169,33)" fg:x="50467" fg:w="32"/><text x="48.4382%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (27 samples, 0.03%)</title><rect x="48.2197%" y="805" width="0.0258%" height="15" fill="rgb(233,80,24)" fg:x="50500" fg:w="27"/><text x="48.4697%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="48.2197%" y="789" width="0.0258%" height="15" fill="rgb(213,179,31)" fg:x="50500" fg:w="27"/><text x="48.4697%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="48.2311%" y="773" width="0.0143%" height="15" fill="rgb(209,19,5)" fg:x="50512" fg:w="15"/><text x="48.4811%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="48.2311%" y="757" width="0.0143%" height="15" fill="rgb(219,18,35)" fg:x="50512" fg:w="15"/><text x="48.4811%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="48.2531%" y="805" width="0.0162%" height="15" fill="rgb(209,169,16)" fg:x="50535" fg:w="17"/><text x="48.5031%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt; (16 samples, 0.02%)</title><rect x="48.2541%" y="789" width="0.0153%" height="15" fill="rgb(245,90,51)" fg:x="50536" fg:w="16"/><text x="48.5041%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (16 samples, 0.02%)</title><rect x="48.2693%" y="805" width="0.0153%" height="15" fill="rgb(220,99,45)" fg:x="50552" fg:w="16"/><text x="48.5193%" y="815.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (17 samples, 0.02%)</title><rect x="48.3066%" y="757" width="0.0162%" height="15" fill="rgb(249,89,25)" fg:x="50591" fg:w="17"/><text x="48.5566%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (216 samples, 0.21%)</title><rect x="48.3066%" y="773" width="0.2062%" height="15" fill="rgb(239,193,0)" fg:x="50591" fg:w="216"/><text x="48.5566%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (199 samples, 0.19%)</title><rect x="48.3228%" y="757" width="0.1900%" height="15" fill="rgb(231,126,1)" fg:x="50608" fg:w="199"/><text x="48.5728%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (199 samples, 0.19%)</title><rect x="48.3228%" y="741" width="0.1900%" height="15" fill="rgb(243,166,3)" fg:x="50608" fg:w="199"/><text x="48.5728%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (199 samples, 0.19%)</title><rect x="48.3228%" y="725" width="0.1900%" height="15" fill="rgb(223,22,34)" fg:x="50608" fg:w="199"/><text x="48.5728%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (199 samples, 0.19%)</title><rect x="48.3228%" y="709" width="0.1900%" height="15" fill="rgb(251,52,51)" fg:x="50608" fg:w="199"/><text x="48.5728%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (199 samples, 0.19%)</title><rect x="48.3228%" y="693" width="0.1900%" height="15" fill="rgb(221,165,28)" fg:x="50608" fg:w="199"/><text x="48.5728%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (140 samples, 0.13%)</title><rect x="48.3791%" y="677" width="0.1337%" height="15" fill="rgb(218,121,47)" fg:x="50667" fg:w="140"/><text x="48.6291%" y="687.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (240 samples, 0.23%)</title><rect x="48.2846%" y="805" width="0.2292%" height="15" fill="rgb(209,120,9)" fg:x="50568" fg:w="240"/><text x="48.5346%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (220 samples, 0.21%)</title><rect x="48.3037%" y="789" width="0.2101%" height="15" fill="rgb(236,68,12)" fg:x="50588" fg:w="220"/><text x="48.5537%" y="799.50"></text></g><g><title>async_io::driver::block_on (8,797 samples, 8.40%)</title><rect x="40.1407%" y="1157" width="8.3998%" height="15" fill="rgb(225,194,26)" fg:x="42039" fg:w="8797"/><text x="40.3907%" y="1167.50">async_io::dr..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1141" width="8.3988%" height="15" fill="rgb(231,84,39)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1151.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1125" width="8.3988%" height="15" fill="rgb(210,11,45)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1135.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1109" width="8.3988%" height="15" fill="rgb(224,54,52)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1119.50">async_execut..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1093" width="8.3988%" height="15" fill="rgb(238,102,14)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1103.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1077" width="8.3988%" height="15" fill="rgb(243,160,52)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1087.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1061" width="8.3988%" height="15" fill="rgb(216,114,19)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1071.50">async_execut..</text></g><g><title>async_task::runnable::Runnable::run (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1045" width="8.3988%" height="15" fill="rgb(244,166,37)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1055.50">async_task::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1029" width="8.3988%" height="15" fill="rgb(246,29,44)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1039.50">async_task::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,796 samples, 8.40%)</title><rect x="40.1417%" y="1013" width="8.3988%" height="15" fill="rgb(215,56,53)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1023.50">&lt;core::pin::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,796 samples, 8.40%)</title><rect x="40.1417%" y="997" width="8.3988%" height="15" fill="rgb(217,60,2)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="1007.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,796 samples, 8.40%)</title><rect x="40.1417%" y="981" width="8.3988%" height="15" fill="rgb(207,26,24)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="991.50">async_execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,796 samples, 8.40%)</title><rect x="40.1417%" y="965" width="8.3988%" height="15" fill="rgb(252,210,15)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="975.50">&lt;async_std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,796 samples, 8.40%)</title><rect x="40.1417%" y="949" width="8.3988%" height="15" fill="rgb(253,209,26)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="959.50">async_std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,796 samples, 8.40%)</title><rect x="40.1417%" y="933" width="8.3988%" height="15" fill="rgb(238,170,14)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="943.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,796 samples, 8.40%)</title><rect x="40.1417%" y="917" width="8.3988%" height="15" fill="rgb(216,178,15)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="927.50">std::thread:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,796 samples, 8.40%)</title><rect x="40.1417%" y="901" width="8.3988%" height="15" fill="rgb(250,197,2)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="911.50">async_std::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,796 samples, 8.40%)</title><rect x="40.1417%" y="885" width="8.3988%" height="15" fill="rgb(212,70,42)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="895.50">&lt;async_std::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,796 samples, 8.40%)</title><rect x="40.1417%" y="869" width="8.3988%" height="15" fill="rgb(227,213,9)" fg:x="42040" fg:w="8796"/><text x="40.3917%" y="879.50">&lt;core::futur..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,068 samples, 4.84%)</title><rect x="43.7014%" y="853" width="4.8392%" height="15" fill="rgb(245,99,25)" fg:x="45768" fg:w="5068"/><text x="43.9514%" y="863.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,684 samples, 3.52%)</title><rect x="45.0229%" y="837" width="3.5177%" height="15" fill="rgb(250,82,29)" fg:x="47152" fg:w="3684"/><text x="45.2729%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,240 samples, 3.09%)</title><rect x="45.4468%" y="821" width="3.0937%" height="15" fill="rgb(241,226,54)" fg:x="47596" fg:w="3240"/><text x="45.6968%" y="831.50">tre..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (28 samples, 0.03%)</title><rect x="48.5138%" y="805" width="0.0267%" height="15" fill="rgb(221,99,41)" fg:x="50808" fg:w="28"/><text x="48.7638%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (28 samples, 0.03%)</title><rect x="48.5138%" y="789" width="0.0267%" height="15" fill="rgb(213,90,21)" fg:x="50808" fg:w="28"/><text x="48.7638%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.03%)</title><rect x="48.5138%" y="773" width="0.0267%" height="15" fill="rgb(205,208,24)" fg:x="50808" fg:w="28"/><text x="48.7638%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (20 samples, 0.02%)</title><rect x="48.5214%" y="757" width="0.0191%" height="15" fill="rgb(246,31,12)" fg:x="50816" fg:w="20"/><text x="48.7714%" y="767.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="49.0705%" y="789" width="0.0105%" height="15" fill="rgb(213,154,6)" fg:x="51391" fg:w="11"/><text x="49.3205%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="49.0981%" y="709" width="0.0115%" height="15" fill="rgb(222,163,29)" fg:x="51420" fg:w="12"/><text x="49.3481%" y="719.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="49.1125%" y="693" width="0.0134%" height="15" fill="rgb(227,201,8)" fg:x="51435" fg:w="14"/><text x="49.3625%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.08%)</title><rect x="49.0972%" y="741" width="0.0850%" height="15" fill="rgb(233,9,32)" fg:x="51419" fg:w="89"/><text x="49.3472%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (89 samples, 0.08%)</title><rect x="49.0972%" y="725" width="0.0850%" height="15" fill="rgb(217,54,24)" fg:x="51419" fg:w="89"/><text x="49.3472%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (76 samples, 0.07%)</title><rect x="49.1096%" y="709" width="0.0726%" height="15" fill="rgb(235,192,0)" fg:x="51432" fg:w="76"/><text x="49.3596%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (59 samples, 0.06%)</title><rect x="49.1258%" y="693" width="0.0563%" height="15" fill="rgb(235,45,9)" fg:x="51449" fg:w="59"/><text x="49.3758%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (59 samples, 0.06%)</title><rect x="49.1258%" y="677" width="0.0563%" height="15" fill="rgb(246,42,40)" fg:x="51449" fg:w="59"/><text x="49.3758%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (59 samples, 0.06%)</title><rect x="49.1258%" y="661" width="0.0563%" height="15" fill="rgb(248,111,24)" fg:x="51449" fg:w="59"/><text x="49.3758%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (383 samples, 0.37%)</title><rect x="49.0819%" y="789" width="0.3657%" height="15" fill="rgb(249,65,22)" fg:x="51403" fg:w="383"/><text x="49.3319%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (382 samples, 0.36%)</title><rect x="49.0829%" y="773" width="0.3648%" height="15" fill="rgb(238,111,51)" fg:x="51404" fg:w="382"/><text x="49.3329%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (371 samples, 0.35%)</title><rect x="49.0934%" y="757" width="0.3542%" height="15" fill="rgb(250,118,22)" fg:x="51415" fg:w="371"/><text x="49.3434%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (265 samples, 0.25%)</title><rect x="49.1946%" y="741" width="0.2530%" height="15" fill="rgb(234,84,26)" fg:x="51521" fg:w="265"/><text x="49.4446%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (265 samples, 0.25%)</title><rect x="49.1946%" y="725" width="0.2530%" height="15" fill="rgb(243,172,12)" fg:x="51521" fg:w="265"/><text x="49.4446%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (406 samples, 0.39%)</title><rect x="49.0628%" y="901" width="0.3877%" height="15" fill="rgb(236,150,49)" fg:x="51383" fg:w="406"/><text x="49.3128%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (406 samples, 0.39%)</title><rect x="49.0628%" y="885" width="0.3877%" height="15" fill="rgb(225,197,26)" fg:x="51383" fg:w="406"/><text x="49.3128%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (406 samples, 0.39%)</title><rect x="49.0628%" y="869" width="0.3877%" height="15" fill="rgb(214,17,42)" fg:x="51383" fg:w="406"/><text x="49.3128%" y="879.50"></text></g><g><title>alloc::alloc::alloc (406 samples, 0.39%)</title><rect x="49.0628%" y="853" width="0.3877%" height="15" fill="rgb(224,165,40)" fg:x="51383" fg:w="406"/><text x="49.3128%" y="863.50"></text></g><g><title>__rg_alloc (406 samples, 0.39%)</title><rect x="49.0628%" y="837" width="0.3877%" height="15" fill="rgb(246,100,4)" fg:x="51383" fg:w="406"/><text x="49.3128%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (406 samples, 0.39%)</title><rect x="49.0628%" y="821" width="0.3877%" height="15" fill="rgb(222,103,0)" fg:x="51383" fg:w="406"/><text x="49.3128%" y="831.50"></text></g><g><title>rust_alloc (398 samples, 0.38%)</title><rect x="49.0705%" y="805" width="0.3800%" height="15" fill="rgb(227,189,26)" fg:x="51391" fg:w="398"/><text x="49.3205%" y="815.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (982 samples, 0.94%)</title><rect x="48.5405%" y="917" width="0.9377%" height="15" fill="rgb(214,202,17)" fg:x="50836" fg:w="982"/><text x="48.7905%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (150 samples, 0.14%)</title><rect x="49.8515%" y="901" width="0.1432%" height="15" fill="rgb(229,111,3)" fg:x="52209" fg:w="150"/><text x="50.1015%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (58 samples, 0.06%)</title><rect x="50.0263%" y="741" width="0.0554%" height="15" fill="rgb(229,172,15)" fg:x="52392" fg:w="58"/><text x="50.2763%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (58 samples, 0.06%)</title><rect x="50.0263%" y="725" width="0.0554%" height="15" fill="rgb(230,224,35)" fg:x="52392" fg:w="58"/><text x="50.2763%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (49 samples, 0.05%)</title><rect x="50.0349%" y="709" width="0.0468%" height="15" fill="rgb(251,141,6)" fg:x="52401" fg:w="49"/><text x="50.2849%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.04%)</title><rect x="50.0444%" y="693" width="0.0372%" height="15" fill="rgb(225,208,6)" fg:x="52411" fg:w="39"/><text x="50.2944%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="50.0444%" y="677" width="0.0372%" height="15" fill="rgb(246,181,16)" fg:x="52411" fg:w="39"/><text x="50.2944%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.04%)</title><rect x="50.0444%" y="661" width="0.0372%" height="15" fill="rgb(227,129,36)" fg:x="52411" fg:w="39"/><text x="50.2944%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (11 samples, 0.01%)</title><rect x="50.0874%" y="741" width="0.0105%" height="15" fill="rgb(248,117,24)" fg:x="52456" fg:w="11"/><text x="50.3374%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (11 samples, 0.01%)</title><rect x="50.0874%" y="725" width="0.0105%" height="15" fill="rgb(214,185,35)" fg:x="52456" fg:w="11"/><text x="50.3374%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (199 samples, 0.19%)</title><rect x="50.0158%" y="789" width="0.1900%" height="15" fill="rgb(236,150,34)" fg:x="52381" fg:w="199"/><text x="50.2658%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (193 samples, 0.18%)</title><rect x="50.0215%" y="773" width="0.1843%" height="15" fill="rgb(243,228,27)" fg:x="52387" fg:w="193"/><text x="50.2715%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (190 samples, 0.18%)</title><rect x="50.0243%" y="757" width="0.1814%" height="15" fill="rgb(245,77,44)" fg:x="52390" fg:w="190"/><text x="50.2743%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (113 samples, 0.11%)</title><rect x="50.0979%" y="741" width="0.1079%" height="15" fill="rgb(235,214,42)" fg:x="52467" fg:w="113"/><text x="50.3479%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (113 samples, 0.11%)</title><rect x="50.0979%" y="725" width="0.1079%" height="15" fill="rgb(221,74,3)" fg:x="52467" fg:w="113"/><text x="50.3479%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (230 samples, 0.22%)</title><rect x="49.9947%" y="901" width="0.2196%" height="15" fill="rgb(206,121,29)" fg:x="52359" fg:w="230"/><text x="50.2447%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (230 samples, 0.22%)</title><rect x="49.9947%" y="885" width="0.2196%" height="15" fill="rgb(249,131,53)" fg:x="52359" fg:w="230"/><text x="50.2447%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (230 samples, 0.22%)</title><rect x="49.9947%" y="869" width="0.2196%" height="15" fill="rgb(236,170,29)" fg:x="52359" fg:w="230"/><text x="50.2447%" y="879.50"></text></g><g><title>alloc::alloc::alloc (229 samples, 0.22%)</title><rect x="49.9957%" y="853" width="0.2187%" height="15" fill="rgb(247,96,15)" fg:x="52360" fg:w="229"/><text x="50.2457%" y="863.50"></text></g><g><title>__rg_alloc (229 samples, 0.22%)</title><rect x="49.9957%" y="837" width="0.2187%" height="15" fill="rgb(211,210,7)" fg:x="52360" fg:w="229"/><text x="50.2457%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (229 samples, 0.22%)</title><rect x="49.9957%" y="821" width="0.2187%" height="15" fill="rgb(240,88,50)" fg:x="52360" fg:w="229"/><text x="50.2457%" y="831.50"></text></g><g><title>rust_alloc (213 samples, 0.20%)</title><rect x="50.0110%" y="805" width="0.2034%" height="15" fill="rgb(209,229,26)" fg:x="52376" fg:w="213"/><text x="50.2610%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="50.2707%" y="661" width="0.0115%" height="15" fill="rgb(210,68,23)" fg:x="52648" fg:w="12"/><text x="50.5207%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="50.2707%" y="645" width="0.0115%" height="15" fill="rgb(229,180,13)" fg:x="52648" fg:w="12"/><text x="50.5207%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="50.2717%" y="629" width="0.0105%" height="15" fill="rgb(236,53,44)" fg:x="52649" fg:w="11"/><text x="50.5217%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="50.2707%" y="677" width="0.0143%" height="15" fill="rgb(244,214,29)" fg:x="52648" fg:w="15"/><text x="50.5207%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="50.2678%" y="693" width="0.0191%" height="15" fill="rgb(220,75,29)" fg:x="52645" fg:w="20"/><text x="50.5178%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="50.2678%" y="725" width="0.0917%" height="15" fill="rgb(214,183,37)" fg:x="52645" fg:w="96"/><text x="50.5178%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (96 samples, 0.09%)</title><rect x="50.2678%" y="709" width="0.0917%" height="15" fill="rgb(239,117,29)" fg:x="52645" fg:w="96"/><text x="50.5178%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (76 samples, 0.07%)</title><rect x="50.2869%" y="693" width="0.0726%" height="15" fill="rgb(237,171,35)" fg:x="52665" fg:w="76"/><text x="50.5369%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (61 samples, 0.06%)</title><rect x="50.3013%" y="677" width="0.0582%" height="15" fill="rgb(229,178,53)" fg:x="52680" fg:w="61"/><text x="50.5513%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (61 samples, 0.06%)</title><rect x="50.3013%" y="661" width="0.0582%" height="15" fill="rgb(210,102,19)" fg:x="52680" fg:w="61"/><text x="50.5513%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (61 samples, 0.06%)</title><rect x="50.3013%" y="645" width="0.0582%" height="15" fill="rgb(235,127,22)" fg:x="52680" fg:w="61"/><text x="50.5513%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="50.3614%" y="725" width="0.0277%" height="15" fill="rgb(244,31,31)" fg:x="52743" fg:w="29"/><text x="50.6114%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="50.3624%" y="709" width="0.0267%" height="15" fill="rgb(231,43,21)" fg:x="52744" fg:w="28"/><text x="50.6124%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="50.3624%" y="693" width="0.0267%" height="15" fill="rgb(217,131,35)" fg:x="52744" fg:w="28"/><text x="50.6124%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="50.3633%" y="677" width="0.0258%" height="15" fill="rgb(221,149,4)" fg:x="52745" fg:w="27"/><text x="50.6133%" y="687.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (26 samples, 0.02%)</title><rect x="50.3643%" y="661" width="0.0248%" height="15" fill="rgb(232,170,28)" fg:x="52746" fg:w="26"/><text x="50.6143%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (177 samples, 0.17%)</title><rect x="50.2516%" y="773" width="0.1690%" height="15" fill="rgb(238,56,10)" fg:x="52628" fg:w="177"/><text x="50.5016%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (170 samples, 0.16%)</title><rect x="50.2583%" y="757" width="0.1623%" height="15" fill="rgb(235,196,14)" fg:x="52635" fg:w="170"/><text x="50.5083%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (160 samples, 0.15%)</title><rect x="50.2678%" y="741" width="0.1528%" height="15" fill="rgb(216,45,48)" fg:x="52645" fg:w="160"/><text x="50.5178%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (32 samples, 0.03%)</title><rect x="50.3901%" y="725" width="0.0306%" height="15" fill="rgb(238,213,17)" fg:x="52773" fg:w="32"/><text x="50.6401%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (32 samples, 0.03%)</title><rect x="50.3901%" y="709" width="0.0306%" height="15" fill="rgb(212,13,2)" fg:x="52773" fg:w="32"/><text x="50.6401%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (223 samples, 0.21%)</title><rect x="50.2144%" y="901" width="0.2129%" height="15" fill="rgb(240,114,20)" fg:x="52589" fg:w="223"/><text x="50.4644%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (200 samples, 0.19%)</title><rect x="50.2363%" y="885" width="0.1910%" height="15" fill="rgb(228,41,40)" fg:x="52612" fg:w="200"/><text x="50.4863%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (200 samples, 0.19%)</title><rect x="50.2363%" y="869" width="0.1910%" height="15" fill="rgb(244,132,35)" fg:x="52612" fg:w="200"/><text x="50.4863%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (200 samples, 0.19%)</title><rect x="50.2363%" y="853" width="0.1910%" height="15" fill="rgb(253,189,4)" fg:x="52612" fg:w="200"/><text x="50.4863%" y="863.50"></text></g><g><title>alloc::alloc::alloc (199 samples, 0.19%)</title><rect x="50.2373%" y="837" width="0.1900%" height="15" fill="rgb(224,37,19)" fg:x="52613" fg:w="199"/><text x="50.4873%" y="847.50"></text></g><g><title>__rg_alloc (199 samples, 0.19%)</title><rect x="50.2373%" y="821" width="0.1900%" height="15" fill="rgb(235,223,18)" fg:x="52613" fg:w="199"/><text x="50.4873%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (199 samples, 0.19%)</title><rect x="50.2373%" y="805" width="0.1900%" height="15" fill="rgb(235,163,25)" fg:x="52613" fg:w="199"/><text x="50.4873%" y="815.50"></text></g><g><title>rust_alloc (194 samples, 0.19%)</title><rect x="50.2421%" y="789" width="0.1852%" height="15" fill="rgb(217,145,28)" fg:x="52618" fg:w="194"/><text x="50.4921%" y="799.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (24 samples, 0.02%)</title><rect x="50.4273%" y="901" width="0.0229%" height="15" fill="rgb(223,223,32)" fg:x="52812" fg:w="24"/><text x="50.6773%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (24 samples, 0.02%)</title><rect x="50.4273%" y="885" width="0.0229%" height="15" fill="rgb(227,189,39)" fg:x="52812" fg:w="24"/><text x="50.6773%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (24 samples, 0.02%)</title><rect x="50.4273%" y="869" width="0.0229%" height="15" fill="rgb(248,10,22)" fg:x="52812" fg:w="24"/><text x="50.6773%" y="879.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (34 samples, 0.03%)</title><rect x="50.7548%" y="885" width="0.0325%" height="15" fill="rgb(248,46,39)" fg:x="53155" fg:w="34"/><text x="51.0048%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.05%)</title><rect x="51.0728%" y="741" width="0.0477%" height="15" fill="rgb(248,113,48)" fg:x="53488" fg:w="50"/><text x="51.3228%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (39 samples, 0.04%)</title><rect x="51.0833%" y="725" width="0.0372%" height="15" fill="rgb(245,16,25)" fg:x="53499" fg:w="39"/><text x="51.3333%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="51.0976%" y="709" width="0.0229%" height="15" fill="rgb(249,152,16)" fg:x="53514" fg:w="24"/><text x="51.3476%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.02%)</title><rect x="51.1052%" y="693" width="0.0153%" height="15" fill="rgb(250,16,1)" fg:x="53522" fg:w="16"/><text x="51.3552%" y="703.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (332 samples, 0.32%)</title><rect x="50.8102%" y="837" width="0.3170%" height="15" fill="rgb(249,138,3)" fg:x="53213" fg:w="332"/><text x="51.0602%" y="847.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (279 samples, 0.27%)</title><rect x="50.8608%" y="821" width="0.2664%" height="15" fill="rgb(227,71,41)" fg:x="53266" fg:w="279"/><text x="51.1108%" y="831.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (263 samples, 0.25%)</title><rect x="50.8761%" y="805" width="0.2511%" height="15" fill="rgb(209,184,23)" fg:x="53282" fg:w="263"/><text x="51.1261%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79 samples, 0.08%)</title><rect x="51.0518%" y="789" width="0.0754%" height="15" fill="rgb(223,215,31)" fg:x="53466" fg:w="79"/><text x="51.3018%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (57 samples, 0.05%)</title><rect x="51.0728%" y="773" width="0.0544%" height="15" fill="rgb(210,146,28)" fg:x="53488" fg:w="57"/><text x="51.3228%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (57 samples, 0.05%)</title><rect x="51.0728%" y="757" width="0.0544%" height="15" fill="rgb(209,183,41)" fg:x="53488" fg:w="57"/><text x="51.3228%" y="767.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (380 samples, 0.36%)</title><rect x="50.8102%" y="853" width="0.3628%" height="15" fill="rgb(209,224,45)" fg:x="53213" fg:w="380"/><text x="51.0602%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (48 samples, 0.05%)</title><rect x="51.1272%" y="837" width="0.0458%" height="15" fill="rgb(224,209,51)" fg:x="53545" fg:w="48"/><text x="51.3772%" y="847.50"></text></g><g><title>core::ptr::write (48 samples, 0.05%)</title><rect x="51.1272%" y="821" width="0.0458%" height="15" fill="rgb(223,17,39)" fg:x="53545" fg:w="48"/><text x="51.3772%" y="831.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="51.1730%" y="725" width="0.0143%" height="15" fill="rgb(234,204,37)" fg:x="53593" fg:w="15"/><text x="51.4230%" y="735.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="51.1883%" y="693" width="0.0105%" height="15" fill="rgb(236,120,5)" fg:x="53609" fg:w="11"/><text x="51.4383%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="51.2103%" y="613" width="0.0134%" height="15" fill="rgb(248,97,27)" fg:x="53632" fg:w="14"/><text x="51.4603%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="51.2103%" y="597" width="0.0134%" height="15" fill="rgb(240,66,17)" fg:x="53632" fg:w="14"/><text x="51.4603%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="51.2131%" y="581" width="0.0105%" height="15" fill="rgb(210,79,3)" fg:x="53635" fg:w="11"/><text x="51.4631%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.02%)</title><rect x="51.2093%" y="629" width="0.0153%" height="15" fill="rgb(214,176,27)" fg:x="53631" fg:w="16"/><text x="51.4593%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (23 samples, 0.02%)</title><rect x="51.2074%" y="645" width="0.0220%" height="15" fill="rgb(235,185,3)" fg:x="53629" fg:w="23"/><text x="51.4574%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (21 samples, 0.02%)</title><rect x="51.2389%" y="629" width="0.0201%" height="15" fill="rgb(227,24,12)" fg:x="53662" fg:w="21"/><text x="51.4889%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (143 samples, 0.14%)</title><rect x="51.2074%" y="677" width="0.1365%" height="15" fill="rgb(252,169,48)" fg:x="53629" fg:w="143"/><text x="51.4574%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (143 samples, 0.14%)</title><rect x="51.2074%" y="661" width="0.1365%" height="15" fill="rgb(212,65,1)" fg:x="53629" fg:w="143"/><text x="51.4574%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (120 samples, 0.11%)</title><rect x="51.2294%" y="645" width="0.1146%" height="15" fill="rgb(242,39,24)" fg:x="53652" fg:w="120"/><text x="51.4794%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (89 samples, 0.08%)</title><rect x="51.2590%" y="629" width="0.0850%" height="15" fill="rgb(249,32,23)" fg:x="53683" fg:w="89"/><text x="51.5090%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (89 samples, 0.08%)</title><rect x="51.2590%" y="613" width="0.0850%" height="15" fill="rgb(251,195,23)" fg:x="53683" fg:w="89"/><text x="51.5090%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (89 samples, 0.08%)</title><rect x="51.2590%" y="597" width="0.0850%" height="15" fill="rgb(236,174,8)" fg:x="53683" fg:w="89"/><text x="51.5090%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="51.3497%" y="677" width="0.0115%" height="15" fill="rgb(220,197,8)" fg:x="53778" fg:w="12"/><text x="51.5997%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="51.3497%" y="661" width="0.0115%" height="15" fill="rgb(240,108,37)" fg:x="53778" fg:w="12"/><text x="51.5997%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="51.3497%" y="645" width="0.0115%" height="15" fill="rgb(232,176,24)" fg:x="53778" fg:w="12"/><text x="51.5997%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="51.3497%" y="629" width="0.0115%" height="15" fill="rgb(243,35,29)" fg:x="53778" fg:w="12"/><text x="51.5997%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (12 samples, 0.01%)</title><rect x="51.3497%" y="613" width="0.0115%" height="15" fill="rgb(210,37,18)" fg:x="53778" fg:w="12"/><text x="51.5997%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (638 samples, 0.61%)</title><rect x="50.8045%" y="869" width="0.6092%" height="15" fill="rgb(224,184,40)" fg:x="53207" fg:w="638"/><text x="51.0545%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (252 samples, 0.24%)</title><rect x="51.1730%" y="853" width="0.2406%" height="15" fill="rgb(236,39,29)" fg:x="53593" fg:w="252"/><text x="51.4230%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (252 samples, 0.24%)</title><rect x="51.1730%" y="837" width="0.2406%" height="15" fill="rgb(232,48,39)" fg:x="53593" fg:w="252"/><text x="51.4230%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (252 samples, 0.24%)</title><rect x="51.1730%" y="821" width="0.2406%" height="15" fill="rgb(236,34,42)" fg:x="53593" fg:w="252"/><text x="51.4230%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (252 samples, 0.24%)</title><rect x="51.1730%" y="805" width="0.2406%" height="15" fill="rgb(243,106,37)" fg:x="53593" fg:w="252"/><text x="51.4230%" y="815.50"></text></g><g><title>alloc::alloc::alloc (252 samples, 0.24%)</title><rect x="51.1730%" y="789" width="0.2406%" height="15" fill="rgb(218,96,6)" fg:x="53593" fg:w="252"/><text x="51.4230%" y="799.50"></text></g><g><title>__rg_alloc (252 samples, 0.24%)</title><rect x="51.1730%" y="773" width="0.2406%" height="15" fill="rgb(235,130,12)" fg:x="53593" fg:w="252"/><text x="51.4230%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (252 samples, 0.24%)</title><rect x="51.1730%" y="757" width="0.2406%" height="15" fill="rgb(231,95,0)" fg:x="53593" fg:w="252"/><text x="51.4230%" y="767.50"></text></g><g><title>rust_alloc (252 samples, 0.24%)</title><rect x="51.1730%" y="741" width="0.2406%" height="15" fill="rgb(228,12,23)" fg:x="53593" fg:w="252"/><text x="51.4230%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (236 samples, 0.23%)</title><rect x="51.1883%" y="725" width="0.2253%" height="15" fill="rgb(216,12,1)" fg:x="53609" fg:w="236"/><text x="51.4383%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (236 samples, 0.23%)</title><rect x="51.1883%" y="709" width="0.2253%" height="15" fill="rgb(219,59,3)" fg:x="53609" fg:w="236"/><text x="51.4383%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (225 samples, 0.21%)</title><rect x="51.1988%" y="693" width="0.2148%" height="15" fill="rgb(215,208,46)" fg:x="53620" fg:w="225"/><text x="51.4488%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (55 samples, 0.05%)</title><rect x="51.3611%" y="677" width="0.0525%" height="15" fill="rgb(254,224,29)" fg:x="53790" fg:w="55"/><text x="51.6111%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (55 samples, 0.05%)</title><rect x="51.3611%" y="661" width="0.0525%" height="15" fill="rgb(232,14,29)" fg:x="53790" fg:w="55"/><text x="51.6111%" y="671.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (657 samples, 0.63%)</title><rect x="50.7873%" y="885" width="0.6273%" height="15" fill="rgb(208,45,52)" fg:x="53189" fg:w="657"/><text x="51.0373%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,322 samples, 3.17%)</title><rect x="48.5405%" y="981" width="3.1720%" height="15" fill="rgb(234,191,28)" fg:x="50836" fg:w="3322"/><text x="48.7905%" y="991.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,322 samples, 3.17%)</title><rect x="48.5405%" y="965" width="3.1720%" height="15" fill="rgb(244,67,43)" fg:x="50836" fg:w="3322"/><text x="48.7905%" y="975.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,322 samples, 3.17%)</title><rect x="48.5405%" y="949" width="3.1720%" height="15" fill="rgb(236,189,24)" fg:x="50836" fg:w="3322"/><text x="48.7905%" y="959.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,322 samples, 3.17%)</title><rect x="48.5405%" y="933" width="3.1720%" height="15" fill="rgb(239,214,33)" fg:x="50836" fg:w="3322"/><text x="48.7905%" y="943.50">tre..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,340 samples, 2.23%)</title><rect x="49.4782%" y="917" width="2.2343%" height="15" fill="rgb(226,176,41)" fg:x="51818" fg:w="2340"/><text x="49.7282%" y="927.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,322 samples, 1.26%)</title><rect x="50.4502%" y="901" width="1.2623%" height="15" fill="rgb(248,47,8)" fg:x="52836" fg:w="1322"/><text x="50.7002%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (312 samples, 0.30%)</title><rect x="51.4146%" y="885" width="0.2979%" height="15" fill="rgb(218,81,44)" fg:x="53846" fg:w="312"/><text x="51.6646%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="51.8281%" y="869" width="0.0143%" height="15" fill="rgb(213,98,6)" fg:x="54279" fg:w="15"/><text x="52.0781%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (22 samples, 0.02%)</title><rect x="51.8433%" y="869" width="0.0210%" height="15" fill="rgb(222,85,22)" fg:x="54295" fg:w="22"/><text x="52.0933%" y="879.50"></text></g><g><title>core::mem::replace (22 samples, 0.02%)</title><rect x="51.8433%" y="853" width="0.0210%" height="15" fill="rgb(239,46,39)" fg:x="54295" fg:w="22"/><text x="52.0933%" y="863.50"></text></g><g><title>core::ptr::read (20 samples, 0.02%)</title><rect x="51.8452%" y="837" width="0.0191%" height="15" fill="rgb(237,12,29)" fg:x="54297" fg:w="20"/><text x="52.0952%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (207 samples, 0.20%)</title><rect x="51.9436%" y="853" width="0.1977%" height="15" fill="rgb(214,77,8)" fg:x="54400" fg:w="207"/><text x="52.1936%" y="863.50"></text></g><g><title>core::mem::replace (207 samples, 0.20%)</title><rect x="51.9436%" y="837" width="0.1977%" height="15" fill="rgb(217,168,37)" fg:x="54400" fg:w="207"/><text x="52.1936%" y="847.50"></text></g><g><title>core::ptr::read (206 samples, 0.20%)</title><rect x="51.9445%" y="821" width="0.1967%" height="15" fill="rgb(221,217,23)" fg:x="54401" fg:w="206"/><text x="52.1945%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (353 samples, 0.34%)</title><rect x="51.8643%" y="869" width="0.3371%" height="15" fill="rgb(243,229,36)" fg:x="54317" fg:w="353"/><text x="52.1143%" y="879.50"></text></g><g><title>core::mem::drop (63 samples, 0.06%)</title><rect x="52.1412%" y="853" width="0.0602%" height="15" fill="rgb(251,163,40)" fg:x="54607" fg:w="63"/><text x="52.3912%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (63 samples, 0.06%)</title><rect x="52.1412%" y="837" width="0.0602%" height="15" fill="rgb(237,222,12)" fg:x="54607" fg:w="63"/><text x="52.3912%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="52.2014%" y="853" width="0.0153%" height="15" fill="rgb(248,132,6)" fg:x="54670" fg:w="16"/><text x="52.4514%" y="863.50"></text></g><g><title>std::sync::poison::Flag::done (11 samples, 0.01%)</title><rect x="52.2310%" y="821" width="0.0105%" height="15" fill="rgb(227,167,50)" fg:x="54701" fg:w="11"/><text x="52.4810%" y="831.50"></text></g><g><title>std::thread::panicking (11 samples, 0.01%)</title><rect x="52.2310%" y="805" width="0.0105%" height="15" fill="rgb(242,84,37)" fg:x="54701" fg:w="11"/><text x="52.4810%" y="815.50"></text></g><g><title>std::panicking::panicking (11 samples, 0.01%)</title><rect x="52.2310%" y="789" width="0.0105%" height="15" fill="rgb(212,4,50)" fg:x="54701" fg:w="11"/><text x="52.4810%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (11 samples, 0.01%)</title><rect x="52.2310%" y="773" width="0.0105%" height="15" fill="rgb(230,228,32)" fg:x="54701" fg:w="11"/><text x="52.4810%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="52.2415%" y="805" width="0.0124%" height="15" fill="rgb(248,217,23)" fg:x="54712" fg:w="13"/><text x="52.4915%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (323 samples, 0.31%)</title><rect x="52.2539%" y="789" width="0.3084%" height="15" fill="rgb(238,197,32)" fg:x="54725" fg:w="323"/><text x="52.5039%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (386 samples, 0.37%)</title><rect x="52.2014%" y="869" width="0.3686%" height="15" fill="rgb(236,106,1)" fg:x="54670" fg:w="386"/><text x="52.4514%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (370 samples, 0.35%)</title><rect x="52.2167%" y="853" width="0.3533%" height="15" fill="rgb(219,228,13)" fg:x="54686" fg:w="370"/><text x="52.4667%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (370 samples, 0.35%)</title><rect x="52.2167%" y="837" width="0.3533%" height="15" fill="rgb(238,30,35)" fg:x="54686" fg:w="370"/><text x="52.4667%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (344 samples, 0.33%)</title><rect x="52.2415%" y="821" width="0.3285%" height="15" fill="rgb(236,70,23)" fg:x="54712" fg:w="344"/><text x="52.4915%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (331 samples, 0.32%)</title><rect x="52.2539%" y="805" width="0.3161%" height="15" fill="rgb(249,104,48)" fg:x="54725" fg:w="331"/><text x="52.5039%" y="815.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="52.5767%" y="821" width="0.0115%" height="15" fill="rgb(254,117,50)" fg:x="55063" fg:w="12"/><text x="52.8267%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (32 samples, 0.03%)</title><rect x="52.5700%" y="869" width="0.0306%" height="15" fill="rgb(223,152,4)" fg:x="55056" fg:w="32"/><text x="52.8200%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (32 samples, 0.03%)</title><rect x="52.5700%" y="853" width="0.0306%" height="15" fill="rgb(245,6,2)" fg:x="55056" fg:w="32"/><text x="52.8200%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (25 samples, 0.02%)</title><rect x="52.5767%" y="837" width="0.0239%" height="15" fill="rgb(249,150,24)" fg:x="55063" fg:w="25"/><text x="52.8267%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="52.5881%" y="821" width="0.0124%" height="15" fill="rgb(228,185,42)" fg:x="55075" fg:w="13"/><text x="52.8381%" y="831.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="52.6225%" y="837" width="0.0201%" height="15" fill="rgb(226,39,33)" fg:x="55111" fg:w="21"/><text x="52.8725%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (21 samples, 0.02%)</title><rect x="52.6225%" y="821" width="0.0201%" height="15" fill="rgb(221,166,19)" fg:x="55111" fg:w="21"/><text x="52.8725%" y="831.50"></text></g><g><title>std::thread::panicking (20 samples, 0.02%)</title><rect x="52.6234%" y="805" width="0.0191%" height="15" fill="rgb(209,109,2)" fg:x="55112" fg:w="20"/><text x="52.8734%" y="815.50"></text></g><g><title>std::panicking::panicking (20 samples, 0.02%)</title><rect x="52.6234%" y="789" width="0.0191%" height="15" fill="rgb(252,216,26)" fg:x="55112" fg:w="20"/><text x="52.8734%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (20 samples, 0.02%)</title><rect x="52.6234%" y="773" width="0.0191%" height="15" fill="rgb(227,173,36)" fg:x="55112" fg:w="20"/><text x="52.8734%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.02%)</title><rect x="52.6234%" y="757" width="0.0191%" height="15" fill="rgb(209,90,7)" fg:x="55112" fg:w="20"/><text x="52.8734%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="52.6234%" y="741" width="0.0191%" height="15" fill="rgb(250,194,11)" fg:x="55112" fg:w="20"/><text x="52.8734%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,060 samples, 1.97%)</title><rect x="51.7326%" y="885" width="1.9670%" height="15" fill="rgb(220,72,50)" fg:x="54179" fg:w="2060"/><text x="51.9826%" y="895.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,151 samples, 1.10%)</title><rect x="52.6005%" y="869" width="1.0990%" height="15" fill="rgb(222,106,48)" fg:x="55088" fg:w="1151"/><text x="52.8505%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,128 samples, 1.08%)</title><rect x="52.6225%" y="853" width="1.0771%" height="15" fill="rgb(216,220,45)" fg:x="55111" fg:w="1128"/><text x="52.8725%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,107 samples, 1.06%)</title><rect x="52.6425%" y="837" width="1.0570%" height="15" fill="rgb(234,112,18)" fg:x="55132" fg:w="1107"/><text x="52.8925%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,081 samples, 1.03%)</title><rect x="52.6674%" y="821" width="1.0322%" height="15" fill="rgb(206,179,9)" fg:x="55158" fg:w="1081"/><text x="52.9174%" y="831.50"></text></g><g><title>___pthread_mutex_lock (1,081 samples, 1.03%)</title><rect x="52.6674%" y="805" width="1.0322%" height="15" fill="rgb(215,115,40)" fg:x="55158" fg:w="1081"/><text x="52.9174%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1157" width="5.1800%" height="15" fill="rgb(222,69,34)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1167.50">async_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1141" width="5.1800%" height="15" fill="rgb(209,161,10)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1151.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1125" width="5.1800%" height="15" fill="rgb(217,6,38)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1135.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1109" width="5.1800%" height="15" fill="rgb(229,229,48)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1119.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1093" width="5.1800%" height="15" fill="rgb(225,21,28)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1103.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1077" width="5.1800%" height="15" fill="rgb(206,33,13)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1087.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1061" width="5.1800%" height="15" fill="rgb(242,178,17)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1071.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1045" width="5.1800%" height="15" fill="rgb(220,162,5)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1055.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1029" width="5.1800%" height="15" fill="rgb(210,33,43)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1039.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,425 samples, 5.18%)</title><rect x="48.5405%" y="1013" width="5.1800%" height="15" fill="rgb(216,116,54)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1023.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,425 samples, 5.18%)</title><rect x="48.5405%" y="997" width="5.1800%" height="15" fill="rgb(249,92,24)" fg:x="50836" fg:w="5425"/><text x="48.7905%" y="1007.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,103 samples, 2.01%)</title><rect x="51.7125%" y="981" width="2.0080%" height="15" fill="rgb(231,189,14)" fg:x="54158" fg:w="2103"/><text x="51.9625%" y="991.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,103 samples, 2.01%)</title><rect x="51.7125%" y="965" width="2.0080%" height="15" fill="rgb(230,8,41)" fg:x="54158" fg:w="2103"/><text x="51.9625%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,103 samples, 2.01%)</title><rect x="51.7125%" y="949" width="2.0080%" height="15" fill="rgb(249,7,27)" fg:x="54158" fg:w="2103"/><text x="51.9625%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,103 samples, 2.01%)</title><rect x="51.7125%" y="933" width="2.0080%" height="15" fill="rgb(232,86,5)" fg:x="54158" fg:w="2103"/><text x="51.9625%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,103 samples, 2.01%)</title><rect x="51.7125%" y="917" width="2.0080%" height="15" fill="rgb(224,175,18)" fg:x="54158" fg:w="2103"/><text x="51.9625%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,103 samples, 2.01%)</title><rect x="51.7125%" y="901" width="2.0080%" height="15" fill="rgb(220,129,12)" fg:x="54158" fg:w="2103"/><text x="51.9625%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (22 samples, 0.02%)</title><rect x="53.6995%" y="885" width="0.0210%" height="15" fill="rgb(210,19,36)" fg:x="56239" fg:w="22"/><text x="53.9495%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (21 samples, 0.02%)</title><rect x="53.7282%" y="1157" width="0.0201%" height="15" fill="rgb(219,96,14)" fg:x="56269" fg:w="21"/><text x="53.9782%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="53.7482%" y="1157" width="0.0172%" height="15" fill="rgb(249,106,1)" fg:x="56290" fg:w="18"/><text x="53.9982%" y="1167.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="53.7979%" y="293" width="0.0134%" height="15" fill="rgb(249,155,20)" fg:x="56342" fg:w="14"/><text x="54.0479%" y="303.50"></text></g><g><title>size_to_sizeclass (20 samples, 0.02%)</title><rect x="53.8227%" y="277" width="0.0191%" height="15" fill="rgb(244,168,9)" fg:x="56368" fg:w="20"/><text x="54.0727%" y="287.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="53.8285%" y="261" width="0.0134%" height="15" fill="rgb(216,23,50)" fg:x="56374" fg:w="14"/><text x="54.0785%" y="271.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="53.8418%" y="213" width="0.0105%" height="15" fill="rgb(224,219,20)" fg:x="56388" fg:w="11"/><text x="54.0918%" y="223.50"></text></g><g><title>sizeclass_to_size (15 samples, 0.01%)</title><rect x="53.8523%" y="213" width="0.0143%" height="15" fill="rgb(222,156,15)" fg:x="56399" fg:w="15"/><text x="54.1023%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (15 samples, 0.01%)</title><rect x="53.8523%" y="197" width="0.0143%" height="15" fill="rgb(231,97,17)" fg:x="56399" fg:w="15"/><text x="54.1023%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (11 samples, 0.01%)</title><rect x="53.8666%" y="213" width="0.0105%" height="15" fill="rgb(218,70,48)" fg:x="56414" fg:w="11"/><text x="54.1166%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="53.9249%" y="181" width="0.0201%" height="15" fill="rgb(212,196,52)" fg:x="56475" fg:w="21"/><text x="54.1749%" y="191.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="53.9249%" y="165" width="0.0201%" height="15" fill="rgb(243,203,18)" fg:x="56475" fg:w="21"/><text x="54.1749%" y="175.50"></text></g><g><title>snmalloc::Remote::set_info (27 samples, 0.03%)</title><rect x="53.9449%" y="181" width="0.0258%" height="15" fill="rgb(252,125,41)" fg:x="56496" fg:w="27"/><text x="54.1949%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (115 samples, 0.11%)</title><rect x="53.8771%" y="213" width="0.1098%" height="15" fill="rgb(223,180,33)" fg:x="56425" fg:w="115"/><text x="54.1271%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (97 samples, 0.09%)</title><rect x="53.8943%" y="197" width="0.0926%" height="15" fill="rgb(254,159,46)" fg:x="56443" fg:w="97"/><text x="54.1443%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (17 samples, 0.02%)</title><rect x="53.9707%" y="181" width="0.0162%" height="15" fill="rgb(254,38,10)" fg:x="56523" fg:w="17"/><text x="54.2207%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (170 samples, 0.16%)</title><rect x="53.8418%" y="245" width="0.1623%" height="15" fill="rgb(208,217,32)" fg:x="56388" fg:w="170"/><text x="54.0918%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (170 samples, 0.16%)</title><rect x="53.8418%" y="229" width="0.1623%" height="15" fill="rgb(221,120,13)" fg:x="56388" fg:w="170"/><text x="54.0918%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.02%)</title><rect x="53.9889%" y="213" width="0.0153%" height="15" fill="rgb(246,54,52)" fg:x="56542" fg:w="16"/><text x="54.2389%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (178 samples, 0.17%)</title><rect x="53.8418%" y="277" width="0.1700%" height="15" fill="rgb(242,34,25)" fg:x="56388" fg:w="178"/><text x="54.0918%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (178 samples, 0.17%)</title><rect x="53.8418%" y="261" width="0.1700%" height="15" fill="rgb(247,209,9)" fg:x="56388" fg:w="178"/><text x="54.0918%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (223 samples, 0.21%)</title><rect x="53.8113%" y="293" width="0.2129%" height="15" fill="rgb(228,71,26)" fg:x="56356" fg:w="223"/><text x="54.0613%" y="303.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="54.0118%" y="277" width="0.0124%" height="15" fill="rgb(222,145,49)" fg:x="56566" fg:w="13"/><text x="54.2618%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="54.0118%" y="261" width="0.0124%" height="15" fill="rgb(218,121,17)" fg:x="56566" fg:w="13"/><text x="54.2618%" y="271.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="54.0118%" y="245" width="0.0124%" height="15" fill="rgb(244,50,7)" fg:x="56566" fg:w="13"/><text x="54.2618%" y="255.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="54.0118%" y="229" width="0.0124%" height="15" fill="rgb(246,229,37)" fg:x="56566" fg:w="13"/><text x="54.2618%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (267 samples, 0.25%)</title><rect x="53.7798%" y="373" width="0.2549%" height="15" fill="rgb(225,18,5)" fg:x="56323" fg:w="267"/><text x="54.0298%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (267 samples, 0.25%)</title><rect x="53.7798%" y="357" width="0.2549%" height="15" fill="rgb(213,204,8)" fg:x="56323" fg:w="267"/><text x="54.0298%" y="367.50"></text></g><g><title>__rg_dealloc (267 samples, 0.25%)</title><rect x="53.7798%" y="341" width="0.2549%" height="15" fill="rgb(238,103,6)" fg:x="56323" fg:w="267"/><text x="54.0298%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (267 samples, 0.25%)</title><rect x="53.7798%" y="325" width="0.2549%" height="15" fill="rgb(222,25,35)" fg:x="56323" fg:w="267"/><text x="54.0298%" y="335.50"></text></g><g><title>rust_dealloc (258 samples, 0.25%)</title><rect x="53.7883%" y="309" width="0.2464%" height="15" fill="rgb(213,203,35)" fg:x="56332" fg:w="258"/><text x="54.0383%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="54.0242%" y="293" width="0.0105%" height="15" fill="rgb(221,79,53)" fg:x="56579" fg:w="11"/><text x="54.2742%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (278 samples, 0.27%)</title><rect x="53.7778%" y="437" width="0.2654%" height="15" fill="rgb(243,200,35)" fg:x="56321" fg:w="278"/><text x="54.0278%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (278 samples, 0.27%)</title><rect x="53.7778%" y="421" width="0.2654%" height="15" fill="rgb(248,60,25)" fg:x="56321" fg:w="278"/><text x="54.0278%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (278 samples, 0.27%)</title><rect x="53.7778%" y="405" width="0.2654%" height="15" fill="rgb(227,53,46)" fg:x="56321" fg:w="278"/><text x="54.0278%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (278 samples, 0.27%)</title><rect x="53.7778%" y="389" width="0.2654%" height="15" fill="rgb(216,120,32)" fg:x="56321" fg:w="278"/><text x="54.0278%" y="399.50"></text></g><g><title>size_to_sizeclass (40 samples, 0.04%)</title><rect x="54.7040%" y="229" width="0.0382%" height="15" fill="rgb(220,134,1)" fg:x="57291" fg:w="40"/><text x="54.9540%" y="239.50"></text></g><g><title>rust_dealloc (27 samples, 0.03%)</title><rect x="54.7422%" y="165" width="0.0258%" height="15" fill="rgb(237,168,5)" fg:x="57331" fg:w="27"/><text x="54.9922%" y="175.50"></text></g><g><title>sizeclass_to_size (13 samples, 0.01%)</title><rect x="54.7680%" y="165" width="0.0124%" height="15" fill="rgb(231,100,33)" fg:x="57358" fg:w="13"/><text x="55.0180%" y="175.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (13 samples, 0.01%)</title><rect x="54.7680%" y="149" width="0.0124%" height="15" fill="rgb(236,177,47)" fg:x="57358" fg:w="13"/><text x="55.0180%" y="159.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (31 samples, 0.03%)</title><rect x="54.8816%" y="133" width="0.0296%" height="15" fill="rgb(235,7,49)" fg:x="57477" fg:w="31"/><text x="55.1316%" y="143.50"></text></g><g><title> (31 samples, 0.03%)</title><rect x="54.8816%" y="117" width="0.0296%" height="15" fill="rgb(232,119,22)" fg:x="57477" fg:w="31"/><text x="55.1316%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (147 samples, 0.14%)</title><rect x="54.7833%" y="165" width="0.1404%" height="15" fill="rgb(254,73,53)" fg:x="57374" fg:w="147"/><text x="55.0333%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (136 samples, 0.13%)</title><rect x="54.7938%" y="149" width="0.1299%" height="15" fill="rgb(251,35,20)" fg:x="57385" fg:w="136"/><text x="55.0438%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (265 samples, 0.25%)</title><rect x="54.7040%" y="245" width="0.2530%" height="15" fill="rgb(241,119,20)" fg:x="57291" fg:w="265"/><text x="54.9540%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (225 samples, 0.21%)</title><rect x="54.7422%" y="229" width="0.2148%" height="15" fill="rgb(207,102,14)" fg:x="57331" fg:w="225"/><text x="54.9922%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (225 samples, 0.21%)</title><rect x="54.7422%" y="213" width="0.2148%" height="15" fill="rgb(248,201,50)" fg:x="57331" fg:w="225"/><text x="54.9922%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (225 samples, 0.21%)</title><rect x="54.7422%" y="197" width="0.2148%" height="15" fill="rgb(222,185,44)" fg:x="57331" fg:w="225"/><text x="54.9922%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (225 samples, 0.21%)</title><rect x="54.7422%" y="181" width="0.2148%" height="15" fill="rgb(218,107,18)" fg:x="57331" fg:w="225"/><text x="54.9922%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (32 samples, 0.03%)</title><rect x="54.9265%" y="165" width="0.0306%" height="15" fill="rgb(237,177,39)" fg:x="57524" fg:w="32"/><text x="55.1765%" y="175.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (282 samples, 0.27%)</title><rect x="54.6955%" y="277" width="0.2693%" height="15" fill="rgb(246,69,6)" fg:x="57282" fg:w="282"/><text x="54.9455%" y="287.50"></text></g><g><title>rust_dealloc (282 samples, 0.27%)</title><rect x="54.6955%" y="261" width="0.2693%" height="15" fill="rgb(234,208,37)" fg:x="57282" fg:w="282"/><text x="54.9455%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (293 samples, 0.28%)</title><rect x="54.6955%" y="325" width="0.2798%" height="15" fill="rgb(225,4,6)" fg:x="57282" fg:w="293"/><text x="54.9455%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (293 samples, 0.28%)</title><rect x="54.6955%" y="309" width="0.2798%" height="15" fill="rgb(233,45,0)" fg:x="57282" fg:w="293"/><text x="54.9455%" y="319.50"></text></g><g><title>__rg_dealloc (293 samples, 0.28%)</title><rect x="54.6955%" y="293" width="0.2798%" height="15" fill="rgb(226,136,5)" fg:x="57282" fg:w="293"/><text x="54.9455%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (11 samples, 0.01%)</title><rect x="54.9647%" y="277" width="0.0105%" height="15" fill="rgb(211,91,47)" fg:x="57564" fg:w="11"/><text x="55.2147%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,011 samples, 0.97%)</title><rect x="54.0433%" y="421" width="0.9653%" height="15" fill="rgb(242,88,51)" fg:x="56599" fg:w="1011"/><text x="54.2933%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1,010 samples, 0.96%)</title><rect x="54.0442%" y="405" width="0.9644%" height="15" fill="rgb(230,91,28)" fg:x="56600" fg:w="1010"/><text x="54.2942%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (998 samples, 0.95%)</title><rect x="54.0557%" y="389" width="0.9529%" height="15" fill="rgb(254,186,29)" fg:x="56612" fg:w="998"/><text x="54.3057%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (998 samples, 0.95%)</title><rect x="54.0557%" y="373" width="0.9529%" height="15" fill="rgb(238,6,4)" fg:x="56612" fg:w="998"/><text x="54.3057%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (998 samples, 0.95%)</title><rect x="54.0557%" y="357" width="0.9529%" height="15" fill="rgb(221,151,16)" fg:x="56612" fg:w="998"/><text x="54.3057%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (998 samples, 0.95%)</title><rect x="54.0557%" y="341" width="0.9529%" height="15" fill="rgb(251,143,52)" fg:x="56612" fg:w="998"/><text x="54.3057%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (35 samples, 0.03%)</title><rect x="54.9752%" y="325" width="0.0334%" height="15" fill="rgb(206,90,15)" fg:x="57575" fg:w="35"/><text x="55.2252%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (11 samples, 0.01%)</title><rect x="55.0086%" y="421" width="0.0105%" height="15" fill="rgb(218,35,8)" fg:x="57610" fg:w="11"/><text x="55.2586%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="55.0086%" y="405" width="0.0105%" height="15" fill="rgb(239,215,6)" fg:x="57610" fg:w="11"/><text x="55.2586%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="55.0086%" y="389" width="0.0105%" height="15" fill="rgb(245,116,39)" fg:x="57610" fg:w="11"/><text x="55.2586%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,326 samples, 1.27%)</title><rect x="53.7654%" y="453" width="1.2661%" height="15" fill="rgb(242,65,28)" fg:x="56308" fg:w="1326"/><text x="54.0154%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1,035 samples, 0.99%)</title><rect x="54.0433%" y="437" width="0.9883%" height="15" fill="rgb(252,132,53)" fg:x="56599" fg:w="1035"/><text x="54.2933%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (13 samples, 0.01%)</title><rect x="55.0191%" y="421" width="0.0124%" height="15" fill="rgb(224,159,50)" fg:x="57621" fg:w="13"/><text x="55.2691%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,329 samples, 1.27%)</title><rect x="53.7654%" y="469" width="1.2690%" height="15" fill="rgb(224,93,4)" fg:x="56308" fg:w="1329"/><text x="54.0154%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="55.0459%" y="325" width="0.0105%" height="15" fill="rgb(208,81,34)" fg:x="57649" fg:w="11"/><text x="55.2959%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (33 samples, 0.03%)</title><rect x="55.0344%" y="469" width="0.0315%" height="15" fill="rgb(233,92,54)" fg:x="57637" fg:w="33"/><text x="55.2844%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (33 samples, 0.03%)</title><rect x="55.0344%" y="453" width="0.0315%" height="15" fill="rgb(237,21,14)" fg:x="57637" fg:w="33"/><text x="55.2844%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="55.0344%" y="437" width="0.0315%" height="15" fill="rgb(249,128,51)" fg:x="57637" fg:w="33"/><text x="55.2844%" y="447.50"></text></g><g><title>core::mem::drop (33 samples, 0.03%)</title><rect x="55.0344%" y="421" width="0.0315%" height="15" fill="rgb(223,129,24)" fg:x="57637" fg:w="33"/><text x="55.2844%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (33 samples, 0.03%)</title><rect x="55.0344%" y="405" width="0.0315%" height="15" fill="rgb(231,168,25)" fg:x="57637" fg:w="33"/><text x="55.2844%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="55.0344%" y="389" width="0.0315%" height="15" fill="rgb(224,39,20)" fg:x="57637" fg:w="33"/><text x="55.2844%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (33 samples, 0.03%)</title><rect x="55.0344%" y="373" width="0.0315%" height="15" fill="rgb(225,152,53)" fg:x="57637" fg:w="33"/><text x="55.2844%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (21 samples, 0.02%)</title><rect x="55.0459%" y="357" width="0.0201%" height="15" fill="rgb(252,17,24)" fg:x="57649" fg:w="21"/><text x="55.2959%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (21 samples, 0.02%)</title><rect x="55.0459%" y="341" width="0.0201%" height="15" fill="rgb(250,114,30)" fg:x="57649" fg:w="21"/><text x="55.2959%" y="351.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,437 samples, 1.37%)</title><rect x="53.7654%" y="549" width="1.3721%" height="15" fill="rgb(229,5,4)" fg:x="56308" fg:w="1437"/><text x="54.0154%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,437 samples, 1.37%)</title><rect x="53.7654%" y="533" width="1.3721%" height="15" fill="rgb(225,176,49)" fg:x="56308" fg:w="1437"/><text x="54.0154%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,437 samples, 1.37%)</title><rect x="53.7654%" y="517" width="1.3721%" height="15" fill="rgb(224,221,49)" fg:x="56308" fg:w="1437"/><text x="54.0154%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,437 samples, 1.37%)</title><rect x="53.7654%" y="501" width="1.3721%" height="15" fill="rgb(253,169,27)" fg:x="56308" fg:w="1437"/><text x="54.0154%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (1,437 samples, 1.37%)</title><rect x="53.7654%" y="485" width="1.3721%" height="15" fill="rgb(211,206,16)" fg:x="56308" fg:w="1437"/><text x="54.0154%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (75 samples, 0.07%)</title><rect x="55.0659%" y="469" width="0.0716%" height="15" fill="rgb(244,87,35)" fg:x="57670" fg:w="75"/><text x="55.3159%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (71 samples, 0.07%)</title><rect x="55.0698%" y="453" width="0.0678%" height="15" fill="rgb(246,28,10)" fg:x="57674" fg:w="71"/><text x="55.3198%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (71 samples, 0.07%)</title><rect x="55.0698%" y="437" width="0.0678%" height="15" fill="rgb(229,12,44)" fg:x="57674" fg:w="71"/><text x="55.3198%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="55.1251%" y="421" width="0.0124%" height="15" fill="rgb(210,145,37)" fg:x="57732" fg:w="13"/><text x="55.3751%" y="431.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="55.1251%" y="405" width="0.0124%" height="15" fill="rgb(227,112,52)" fg:x="57732" fg:w="13"/><text x="55.3751%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="55.1251%" y="389" width="0.0124%" height="15" fill="rgb(238,155,34)" fg:x="57732" fg:w="13"/><text x="55.3751%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="55.1251%" y="373" width="0.0124%" height="15" fill="rgb(239,226,36)" fg:x="57732" fg:w="13"/><text x="55.3751%" y="383.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="55.1251%" y="357" width="0.0124%" height="15" fill="rgb(230,16,23)" fg:x="57732" fg:w="13"/><text x="55.3751%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="55.1251%" y="341" width="0.0124%" height="15" fill="rgb(236,171,36)" fg:x="57732" fg:w="13"/><text x="55.3751%" y="351.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (42 samples, 0.04%)</title><rect x="55.1375%" y="549" width="0.0401%" height="15" fill="rgb(221,22,14)" fg:x="57745" fg:w="42"/><text x="55.3875%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (291 samples, 0.28%)</title><rect x="55.2722%" y="517" width="0.2779%" height="15" fill="rgb(242,43,11)" fg:x="57886" fg:w="291"/><text x="55.5222%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (180 samples, 0.17%)</title><rect x="55.5672%" y="501" width="0.1719%" height="15" fill="rgb(232,69,23)" fg:x="58195" fg:w="180"/><text x="55.8172%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::control_plane::{{closure}} (342 samples, 0.33%)</title><rect x="55.5500%" y="517" width="0.3266%" height="15" fill="rgb(216,180,54)" fg:x="58177" fg:w="342"/><text x="55.8000%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::needs_control_plane_msg (144 samples, 0.14%)</title><rect x="55.7391%" y="501" width="0.1375%" height="15" fill="rgb(216,5,24)" fg:x="58375" fg:w="144"/><text x="55.9891%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (122 samples, 0.12%)</title><rect x="55.7601%" y="485" width="0.1165%" height="15" fill="rgb(225,89,9)" fg:x="58397" fg:w="122"/><text x="56.0101%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (121 samples, 0.12%)</title><rect x="55.7611%" y="469" width="0.1155%" height="15" fill="rgb(243,75,33)" fg:x="58398" fg:w="121"/><text x="56.0111%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (88 samples, 0.08%)</title><rect x="55.7926%" y="453" width="0.0840%" height="15" fill="rgb(247,141,45)" fg:x="58431" fg:w="88"/><text x="56.0426%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (74 samples, 0.07%)</title><rect x="55.8059%" y="437" width="0.0707%" height="15" fill="rgb(232,177,36)" fg:x="58445" fg:w="74"/><text x="56.0559%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (74 samples, 0.07%)</title><rect x="55.8059%" y="421" width="0.0707%" height="15" fill="rgb(219,125,36)" fg:x="58445" fg:w="74"/><text x="56.0559%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (434 samples, 0.41%)</title><rect x="56.8591%" y="501" width="0.4144%" height="15" fill="rgb(227,94,9)" fg:x="59548" fg:w="434"/><text x="57.1091%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="57.2879%" y="437" width="0.0239%" height="15" fill="rgb(240,34,52)" fg:x="59997" fg:w="25"/><text x="57.5379%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (38 samples, 0.04%)</title><rect x="57.2850%" y="501" width="0.0363%" height="15" fill="rgb(216,45,12)" fg:x="59994" fg:w="38"/><text x="57.5350%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.03%)</title><rect x="57.2879%" y="485" width="0.0334%" height="15" fill="rgb(246,21,19)" fg:x="59997" fg:w="35"/><text x="57.5379%" y="495.50"></text></g><g><title>value_trait::Builder::object (35 samples, 0.03%)</title><rect x="57.2879%" y="469" width="0.0334%" height="15" fill="rgb(213,98,42)" fg:x="59997" fg:w="35"/><text x="57.5379%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (35 samples, 0.03%)</title><rect x="57.2879%" y="453" width="0.0334%" height="15" fill="rgb(250,136,47)" fg:x="59997" fg:w="35"/><text x="57.5379%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (16 samples, 0.02%)</title><rect x="57.3299%" y="501" width="0.0153%" height="15" fill="rgb(251,124,27)" fg:x="60041" fg:w="16"/><text x="57.5799%" y="511.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="57.3671%" y="469" width="0.0105%" height="15" fill="rgb(229,180,14)" fg:x="60080" fg:w="11"/><text x="57.6171%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (36 samples, 0.03%)</title><rect x="57.4158%" y="357" width="0.0344%" height="15" fill="rgb(245,216,25)" fg:x="60131" fg:w="36"/><text x="57.6658%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (36 samples, 0.03%)</title><rect x="57.4158%" y="341" width="0.0344%" height="15" fill="rgb(251,43,5)" fg:x="60131" fg:w="36"/><text x="57.6658%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (59 samples, 0.06%)</title><rect x="57.4005%" y="405" width="0.0563%" height="15" fill="rgb(250,128,24)" fg:x="60115" fg:w="59"/><text x="57.6505%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (59 samples, 0.06%)</title><rect x="57.4005%" y="389" width="0.0563%" height="15" fill="rgb(217,117,27)" fg:x="60115" fg:w="59"/><text x="57.6505%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (57 samples, 0.05%)</title><rect x="57.4024%" y="373" width="0.0544%" height="15" fill="rgb(245,147,4)" fg:x="60117" fg:w="57"/><text x="57.6524%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.08%)</title><rect x="57.3776%" y="437" width="0.0812%" height="15" fill="rgb(242,201,35)" fg:x="60091" fg:w="85"/><text x="57.6276%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.08%)</title><rect x="57.3776%" y="421" width="0.0812%" height="15" fill="rgb(218,181,1)" fg:x="60091" fg:w="85"/><text x="57.6276%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (87 samples, 0.08%)</title><rect x="57.3776%" y="469" width="0.0831%" height="15" fill="rgb(222,6,29)" fg:x="60091" fg:w="87"/><text x="57.6276%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (87 samples, 0.08%)</title><rect x="57.3776%" y="453" width="0.0831%" height="15" fill="rgb(208,186,3)" fg:x="60091" fg:w="87"/><text x="57.6276%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (110 samples, 0.11%)</title><rect x="57.3566%" y="485" width="0.1050%" height="15" fill="rgb(216,36,26)" fg:x="60069" fg:w="110"/><text x="57.6066%" y="495.50"></text></g><g><title>rust_dealloc (124 samples, 0.12%)</title><rect x="57.3451%" y="501" width="0.1184%" height="15" fill="rgb(248,201,23)" fg:x="60057" fg:w="124"/><text x="57.5951%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,672 samples, 1.60%)</title><rect x="55.8766%" y="517" width="1.5965%" height="15" fill="rgb(251,170,31)" fg:x="58519" fg:w="1672"/><text x="56.1266%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,376 samples, 2.27%)</title><rect x="55.2693%" y="533" width="2.2687%" height="15" fill="rgb(207,110,25)" fg:x="57883" fg:w="2376"/><text x="55.5193%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (68 samples, 0.06%)</title><rect x="57.4731%" y="517" width="0.0649%" height="15" fill="rgb(250,54,15)" fg:x="60191" fg:w="68"/><text x="57.7231%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="57.5380%" y="533" width="0.0124%" height="15" fill="rgb(227,68,33)" fg:x="60259" fg:w="13"/><text x="57.7880%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="57.5380%" y="517" width="0.0124%" height="15" fill="rgb(238,34,41)" fg:x="60259" fg:w="13"/><text x="57.7880%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.02%)</title><rect x="57.5504%" y="533" width="0.0172%" height="15" fill="rgb(220,11,15)" fg:x="60272" fg:w="18"/><text x="57.8004%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (17 samples, 0.02%)</title><rect x="57.5676%" y="533" width="0.0162%" height="15" fill="rgb(246,111,35)" fg:x="60290" fg:w="17"/><text x="57.8176%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (17 samples, 0.02%)</title><rect x="57.5676%" y="517" width="0.0162%" height="15" fill="rgb(209,88,53)" fg:x="60290" fg:w="17"/><text x="57.8176%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (506 samples, 0.48%)</title><rect x="57.5839%" y="533" width="0.4832%" height="15" fill="rgb(231,185,47)" fg:x="60307" fg:w="506"/><text x="57.8339%" y="543.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="58.1081%" y="325" width="0.0191%" height="15" fill="rgb(233,154,1)" fg:x="60856" fg:w="20"/><text x="58.3581%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (28 samples, 0.03%)</title><rect x="58.1281%" y="325" width="0.0267%" height="15" fill="rgb(225,15,46)" fg:x="60877" fg:w="28"/><text x="58.3781%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (28 samples, 0.03%)</title><rect x="58.1281%" y="309" width="0.0267%" height="15" fill="rgb(211,135,41)" fg:x="60877" fg:w="28"/><text x="58.3781%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.03%)</title><rect x="58.1291%" y="293" width="0.0258%" height="15" fill="rgb(208,54,0)" fg:x="60878" fg:w="27"/><text x="58.3791%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (57 samples, 0.05%)</title><rect x="58.1081%" y="357" width="0.0544%" height="15" fill="rgb(244,136,14)" fg:x="60856" fg:w="57"/><text x="58.3581%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (57 samples, 0.05%)</title><rect x="58.1081%" y="341" width="0.0544%" height="15" fill="rgb(241,56,14)" fg:x="60856" fg:w="57"/><text x="58.3581%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (69 samples, 0.07%)</title><rect x="58.1081%" y="389" width="0.0659%" height="15" fill="rgb(205,80,24)" fg:x="60856" fg:w="69"/><text x="58.3581%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (69 samples, 0.07%)</title><rect x="58.1081%" y="373" width="0.0659%" height="15" fill="rgb(220,57,4)" fg:x="60856" fg:w="69"/><text x="58.3581%" y="383.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="58.1625%" y="357" width="0.0115%" height="15" fill="rgb(226,193,50)" fg:x="60913" fg:w="12"/><text x="58.4125%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="58.1625%" y="341" width="0.0115%" height="15" fill="rgb(231,168,22)" fg:x="60913" fg:w="12"/><text x="58.4125%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="58.1625%" y="325" width="0.0115%" height="15" fill="rgb(254,215,14)" fg:x="60913" fg:w="12"/><text x="58.4125%" y="335.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="58.1625%" y="309" width="0.0115%" height="15" fill="rgb(211,115,16)" fg:x="60913" fg:w="12"/><text x="58.4125%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (81 samples, 0.08%)</title><rect x="58.1023%" y="405" width="0.0773%" height="15" fill="rgb(236,210,16)" fg:x="60850" fg:w="81"/><text x="58.3523%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (122 samples, 0.12%)</title><rect x="58.0737%" y="533" width="0.1165%" height="15" fill="rgb(221,94,12)" fg:x="60820" fg:w="122"/><text x="58.3237%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (122 samples, 0.12%)</title><rect x="58.0737%" y="517" width="0.1165%" height="15" fill="rgb(235,218,49)" fg:x="60820" fg:w="122"/><text x="58.3237%" y="527.50"></text></g><g><title>alloc::alloc::box_free (120 samples, 0.11%)</title><rect x="58.0756%" y="501" width="0.1146%" height="15" fill="rgb(217,114,14)" fg:x="60822" fg:w="120"/><text x="58.3256%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (103 samples, 0.10%)</title><rect x="58.0918%" y="485" width="0.0983%" height="15" fill="rgb(216,145,22)" fg:x="60839" fg:w="103"/><text x="58.3418%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (101 samples, 0.10%)</title><rect x="58.0937%" y="469" width="0.0964%" height="15" fill="rgb(217,112,39)" fg:x="60841" fg:w="101"/><text x="58.3437%" y="479.50"></text></g><g><title>__rg_dealloc (101 samples, 0.10%)</title><rect x="58.0937%" y="453" width="0.0964%" height="15" fill="rgb(225,85,32)" fg:x="60841" fg:w="101"/><text x="58.3437%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (101 samples, 0.10%)</title><rect x="58.0937%" y="437" width="0.0964%" height="15" fill="rgb(245,209,47)" fg:x="60841" fg:w="101"/><text x="58.3437%" y="447.50"></text></g><g><title>rust_dealloc (101 samples, 0.10%)</title><rect x="58.0937%" y="421" width="0.0964%" height="15" fill="rgb(218,220,15)" fg:x="60841" fg:w="101"/><text x="58.3437%" y="431.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="58.1797%" y="405" width="0.0105%" height="15" fill="rgb(222,202,31)" fg:x="60931" fg:w="11"/><text x="58.4297%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1157" width="4.4744%" height="15" fill="rgb(243,203,4)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1167.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1141" width="4.4744%" height="15" fill="rgb(237,92,17)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1151.50">std::..</text></g><g><title>std::panic::catch_unwind (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1125" width="4.4744%" height="15" fill="rgb(231,119,7)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1135.50">std::..</text></g><g><title>std::panicking::try (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1109" width="4.4744%" height="15" fill="rgb(237,82,41)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1119.50">std::..</text></g><g><title>std::panicking::try::do_call (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1093" width="4.4744%" height="15" fill="rgb(226,81,48)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1103.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1077" width="4.4744%" height="15" fill="rgb(234,70,51)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1087.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1061" width="4.4744%" height="15" fill="rgb(251,86,4)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1071.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1045" width="4.4744%" height="15" fill="rgb(244,144,28)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1055.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1029" width="4.4744%" height="15" fill="rgb(232,161,39)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1039.50">core:..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,686 samples, 4.47%)</title><rect x="53.7654%" y="1013" width="4.4744%" height="15" fill="rgb(247,34,51)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1023.50">async..</text></g><g><title>std::panic::catch_unwind (4,686 samples, 4.47%)</title><rect x="53.7654%" y="997" width="4.4744%" height="15" fill="rgb(225,132,2)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="1007.50">std::..</text></g><g><title>std::panicking::try (4,686 samples, 4.47%)</title><rect x="53.7654%" y="981" width="4.4744%" height="15" fill="rgb(209,159,44)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="991.50">std::..</text></g><g><title>std::panicking::try::do_call (4,686 samples, 4.47%)</title><rect x="53.7654%" y="965" width="4.4744%" height="15" fill="rgb(251,214,1)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="975.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="949" width="4.4744%" height="15" fill="rgb(247,84,47)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="959.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,686 samples, 4.47%)</title><rect x="53.7654%" y="933" width="4.4744%" height="15" fill="rgb(240,111,43)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="943.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,686 samples, 4.47%)</title><rect x="53.7654%" y="917" width="4.4744%" height="15" fill="rgb(215,214,35)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="927.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="901" width="4.4744%" height="15" fill="rgb(248,207,23)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="911.50">async..</text></g><g><title>async_global_executor::reactor::block_on (4,686 samples, 4.47%)</title><rect x="53.7654%" y="885" width="4.4744%" height="15" fill="rgb(214,186,4)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="895.50">async..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="869" width="4.4744%" height="15" fill="rgb(220,133,22)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="879.50">async..</text></g><g><title>async_io::driver::block_on (4,686 samples, 4.47%)</title><rect x="53.7654%" y="853" width="4.4744%" height="15" fill="rgb(239,134,19)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="863.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,686 samples, 4.47%)</title><rect x="53.7654%" y="837" width="4.4744%" height="15" fill="rgb(250,140,9)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="847.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,686 samples, 4.47%)</title><rect x="53.7654%" y="821" width="4.4744%" height="15" fill="rgb(225,59,14)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="831.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="805" width="4.4744%" height="15" fill="rgb(214,152,51)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="815.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,686 samples, 4.47%)</title><rect x="53.7654%" y="789" width="4.4744%" height="15" fill="rgb(251,227,43)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="799.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,686 samples, 4.47%)</title><rect x="53.7654%" y="773" width="4.4744%" height="15" fill="rgb(241,96,17)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="783.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="757" width="4.4744%" height="15" fill="rgb(234,198,43)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="767.50">async..</text></g><g><title>async_task::runnable::Runnable::run (4,686 samples, 4.47%)</title><rect x="53.7654%" y="741" width="4.4744%" height="15" fill="rgb(220,108,29)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="751.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,686 samples, 4.47%)</title><rect x="53.7654%" y="725" width="4.4744%" height="15" fill="rgb(226,163,33)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="735.50">async..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,686 samples, 4.47%)</title><rect x="53.7654%" y="709" width="4.4744%" height="15" fill="rgb(205,194,45)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="719.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,686 samples, 4.47%)</title><rect x="53.7654%" y="693" width="4.4744%" height="15" fill="rgb(206,143,44)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="703.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="677" width="4.4744%" height="15" fill="rgb(236,136,36)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="687.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,686 samples, 4.47%)</title><rect x="53.7654%" y="661" width="4.4744%" height="15" fill="rgb(249,172,42)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="671.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,686 samples, 4.47%)</title><rect x="53.7654%" y="645" width="4.4744%" height="15" fill="rgb(216,139,23)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="655.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,686 samples, 4.47%)</title><rect x="53.7654%" y="629" width="4.4744%" height="15" fill="rgb(207,166,20)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="639.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,686 samples, 4.47%)</title><rect x="53.7654%" y="613" width="4.4744%" height="15" fill="rgb(210,209,22)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="623.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="597" width="4.4744%" height="15" fill="rgb(232,118,20)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="607.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,686 samples, 4.47%)</title><rect x="53.7654%" y="581" width="4.4744%" height="15" fill="rgb(238,113,42)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="591.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,686 samples, 4.47%)</title><rect x="53.7654%" y="565" width="4.4744%" height="15" fill="rgb(231,42,5)" fg:x="56308" fg:w="4686"/><text x="54.0154%" y="575.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,207 samples, 3.06%)</title><rect x="55.1776%" y="549" width="3.0622%" height="15" fill="rgb(243,166,24)" fg:x="57787" fg:w="3207"/><text x="55.4276%" y="559.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (51 samples, 0.05%)</title><rect x="58.1911%" y="533" width="0.0487%" height="15" fill="rgb(237,226,12)" fg:x="60943" fg:w="51"/><text x="58.4411%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (11 samples, 0.01%)</title><rect x="58.2293%" y="517" width="0.0105%" height="15" fill="rgb(229,133,24)" fg:x="60983" fg:w="11"/><text x="58.4793%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="58.2513%" y="1157" width="0.0115%" height="15" fill="rgb(238,33,43)" fg:x="61006" fg:w="12"/><text x="58.5013%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="58.2628%" y="1157" width="0.0172%" height="15" fill="rgb(227,59,38)" fg:x="61018" fg:w="18"/><text x="58.5128%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (89 samples, 0.08%)</title><rect x="58.2799%" y="1157" width="0.0850%" height="15" fill="rgb(230,97,0)" fg:x="61036" fg:w="89"/><text x="58.5299%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (20 samples, 0.02%)</title><rect x="58.3649%" y="1157" width="0.0191%" height="15" fill="rgb(250,173,50)" fg:x="61125" fg:w="20"/><text x="58.6149%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (20 samples, 0.02%)</title><rect x="58.3649%" y="1141" width="0.0191%" height="15" fill="rgb(240,15,50)" fg:x="61125" fg:w="20"/><text x="58.6149%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (20 samples, 0.02%)</title><rect x="58.3649%" y="1125" width="0.0191%" height="15" fill="rgb(221,93,22)" fg:x="61125" fg:w="20"/><text x="58.6149%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="58.3649%" y="1109" width="0.0191%" height="15" fill="rgb(245,180,53)" fg:x="61125" fg:w="20"/><text x="58.6149%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="58.3649%" y="1093" width="0.0191%" height="15" fill="rgb(231,88,51)" fg:x="61125" fg:w="20"/><text x="58.6149%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="58.3649%" y="1077" width="0.0191%" height="15" fill="rgb(240,58,21)" fg:x="61125" fg:w="20"/><text x="58.6149%" y="1087.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="58.3649%" y="1061" width="0.0191%" height="15" fill="rgb(237,21,10)" fg:x="61125" fg:w="20"/><text x="58.6149%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="58.3649%" y="1045" width="0.0191%" height="15" fill="rgb(218,43,11)" fg:x="61125" fg:w="20"/><text x="58.6149%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (82 samples, 0.08%)</title><rect x="58.3840%" y="1157" width="0.0783%" height="15" fill="rgb(218,221,29)" fg:x="61145" fg:w="82"/><text x="58.6340%" y="1167.50"></text></g><g><title>event_listener::Event::notify (22 samples, 0.02%)</title><rect x="58.4633%" y="1157" width="0.0210%" height="15" fill="rgb(214,118,42)" fg:x="61228" fg:w="22"/><text x="58.7133%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (27 samples, 0.03%)</title><rect x="58.4948%" y="1157" width="0.0258%" height="15" fill="rgb(251,200,26)" fg:x="61261" fg:w="27"/><text x="58.7448%" y="1167.50"></text></g><g><title>rust_alloc (50 samples, 0.05%)</title><rect x="58.5311%" y="1157" width="0.0477%" height="15" fill="rgb(237,101,39)" fg:x="61299" fg:w="50"/><text x="58.7811%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (79 samples, 0.08%)</title><rect x="60.2765%" y="437" width="0.0754%" height="15" fill="rgb(251,117,11)" fg:x="63127" fg:w="79"/><text x="60.5265%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="60.5572%" y="421" width="0.0191%" height="15" fill="rgb(216,223,23)" fg:x="63421" fg:w="20"/><text x="60.8072%" y="431.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.04%)</title><rect x="60.5763%" y="421" width="0.0363%" height="15" fill="rgb(251,54,12)" fg:x="63441" fg:w="38"/><text x="60.8263%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (768 samples, 0.73%)</title><rect x="60.6126%" y="421" width="0.7333%" height="15" fill="rgb(254,176,54)" fg:x="63479" fg:w="768"/><text x="60.8626%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.03%)</title><rect x="61.3545%" y="357" width="0.0334%" height="15" fill="rgb(210,32,8)" fg:x="64256" fg:w="35"/><text x="61.6045%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (45 samples, 0.04%)</title><rect x="61.3545%" y="421" width="0.0430%" height="15" fill="rgb(235,52,38)" fg:x="64256" fg:w="45"/><text x="61.6045%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (45 samples, 0.04%)</title><rect x="61.3545%" y="405" width="0.0430%" height="15" fill="rgb(231,4,44)" fg:x="64256" fg:w="45"/><text x="61.6045%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 0.04%)</title><rect x="61.3545%" y="389" width="0.0430%" height="15" fill="rgb(249,2,32)" fg:x="64256" fg:w="45"/><text x="61.6045%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (45 samples, 0.04%)</title><rect x="61.3545%" y="373" width="0.0430%" height="15" fill="rgb(224,65,26)" fg:x="64256" fg:w="45"/><text x="61.6045%" y="383.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="61.4538%" y="229" width="0.0153%" height="15" fill="rgb(250,73,40)" fg:x="64360" fg:w="16"/><text x="61.7038%" y="239.50"></text></g><g><title>rust_dealloc (35 samples, 0.03%)</title><rect x="61.4701%" y="165" width="0.0334%" height="15" fill="rgb(253,177,16)" fg:x="64377" fg:w="35"/><text x="61.7201%" y="175.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="61.5713%" y="117" width="0.0306%" height="15" fill="rgb(217,32,34)" fg:x="64483" fg:w="32"/><text x="61.8213%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="61.5722%" y="101" width="0.0296%" height="15" fill="rgb(212,7,10)" fg:x="64484" fg:w="31"/><text x="61.8222%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (111 samples, 0.11%)</title><rect x="61.5073%" y="165" width="0.1060%" height="15" fill="rgb(245,89,8)" fg:x="64416" fg:w="111"/><text x="61.7573%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (111 samples, 0.11%)</title><rect x="61.5073%" y="149" width="0.1060%" height="15" fill="rgb(237,16,53)" fg:x="64416" fg:w="111"/><text x="61.7573%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (99 samples, 0.09%)</title><rect x="61.5188%" y="133" width="0.0945%" height="15" fill="rgb(250,204,30)" fg:x="64428" fg:w="99"/><text x="61.7688%" y="143.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="61.6018%" y="117" width="0.0115%" height="15" fill="rgb(208,77,27)" fg:x="64515" fg:w="12"/><text x="61.8518%" y="127.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="61.6018%" y="101" width="0.0115%" height="15" fill="rgb(250,204,28)" fg:x="64515" fg:w="12"/><text x="61.8518%" y="111.50"></text></g><g><title>rust_dealloc (267 samples, 0.25%)</title><rect x="61.4328%" y="261" width="0.2549%" height="15" fill="rgb(244,63,21)" fg:x="64338" fg:w="267"/><text x="61.6828%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (253 samples, 0.24%)</title><rect x="61.4462%" y="245" width="0.2416%" height="15" fill="rgb(236,85,44)" fg:x="64352" fg:w="253"/><text x="61.6962%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (229 samples, 0.22%)</title><rect x="61.4691%" y="229" width="0.2187%" height="15" fill="rgb(215,98,4)" fg:x="64376" fg:w="229"/><text x="61.7191%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (229 samples, 0.22%)</title><rect x="61.4691%" y="213" width="0.2187%" height="15" fill="rgb(235,38,11)" fg:x="64376" fg:w="229"/><text x="61.7191%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (229 samples, 0.22%)</title><rect x="61.4691%" y="197" width="0.2187%" height="15" fill="rgb(254,186,25)" fg:x="64376" fg:w="229"/><text x="61.7191%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (229 samples, 0.22%)</title><rect x="61.4691%" y="181" width="0.2187%" height="15" fill="rgb(225,55,31)" fg:x="64376" fg:w="229"/><text x="61.7191%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (78 samples, 0.07%)</title><rect x="61.6133%" y="165" width="0.0745%" height="15" fill="rgb(211,15,21)" fg:x="64527" fg:w="78"/><text x="61.8633%" y="175.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (24 samples, 0.02%)</title><rect x="61.6983%" y="245" width="0.0229%" height="15" fill="rgb(215,187,41)" fg:x="64616" fg:w="24"/><text x="61.9483%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (343 samples, 0.33%)</title><rect x="61.3975%" y="405" width="0.3275%" height="15" fill="rgb(248,69,32)" fg:x="64301" fg:w="343"/><text x="61.6475%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (336 samples, 0.32%)</title><rect x="61.4042%" y="389" width="0.3208%" height="15" fill="rgb(252,102,52)" fg:x="64308" fg:w="336"/><text x="61.6542%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (322 samples, 0.31%)</title><rect x="61.4176%" y="373" width="0.3075%" height="15" fill="rgb(253,140,32)" fg:x="64322" fg:w="322"/><text x="61.6676%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (322 samples, 0.31%)</title><rect x="61.4176%" y="357" width="0.3075%" height="15" fill="rgb(216,56,42)" fg:x="64322" fg:w="322"/><text x="61.6676%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (322 samples, 0.31%)</title><rect x="61.4176%" y="341" width="0.3075%" height="15" fill="rgb(216,184,14)" fg:x="64322" fg:w="322"/><text x="61.6676%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (311 samples, 0.30%)</title><rect x="61.4281%" y="325" width="0.2970%" height="15" fill="rgb(237,187,27)" fg:x="64333" fg:w="311"/><text x="61.6781%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (311 samples, 0.30%)</title><rect x="61.4281%" y="309" width="0.2970%" height="15" fill="rgb(219,65,3)" fg:x="64333" fg:w="311"/><text x="61.6781%" y="319.50"></text></g><g><title>__rg_dealloc (311 samples, 0.30%)</title><rect x="61.4281%" y="293" width="0.2970%" height="15" fill="rgb(245,83,25)" fg:x="64333" fg:w="311"/><text x="61.6781%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (306 samples, 0.29%)</title><rect x="61.4328%" y="277" width="0.2922%" height="15" fill="rgb(214,205,45)" fg:x="64338" fg:w="306"/><text x="61.6828%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (39 samples, 0.04%)</title><rect x="61.6878%" y="261" width="0.0372%" height="15" fill="rgb(241,20,18)" fg:x="64605" fg:w="39"/><text x="61.9378%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="61.7785%" y="165" width="0.0124%" height="15" fill="rgb(232,163,23)" fg:x="64700" fg:w="13"/><text x="62.0285%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="61.7794%" y="149" width="0.0115%" height="15" fill="rgb(214,5,46)" fg:x="64701" fg:w="12"/><text x="62.0294%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (34 samples, 0.03%)</title><rect x="61.7651%" y="213" width="0.0325%" height="15" fill="rgb(229,78,17)" fg:x="64686" fg:w="34"/><text x="62.0151%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (34 samples, 0.03%)</title><rect x="61.7651%" y="197" width="0.0325%" height="15" fill="rgb(248,89,10)" fg:x="64686" fg:w="34"/><text x="62.0151%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (34 samples, 0.03%)</title><rect x="61.7651%" y="181" width="0.0325%" height="15" fill="rgb(248,54,15)" fg:x="64686" fg:w="34"/><text x="62.0151%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (56 samples, 0.05%)</title><rect x="61.7479%" y="245" width="0.0535%" height="15" fill="rgb(223,116,6)" fg:x="64668" fg:w="56"/><text x="61.9979%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (56 samples, 0.05%)</title><rect x="61.7479%" y="229" width="0.0535%" height="15" fill="rgb(205,125,38)" fg:x="64668" fg:w="56"/><text x="61.9979%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (72 samples, 0.07%)</title><rect x="61.7422%" y="293" width="0.0687%" height="15" fill="rgb(251,78,38)" fg:x="64662" fg:w="72"/><text x="61.9922%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (66 samples, 0.06%)</title><rect x="61.7479%" y="277" width="0.0630%" height="15" fill="rgb(253,78,28)" fg:x="64668" fg:w="66"/><text x="61.9979%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (66 samples, 0.06%)</title><rect x="61.7479%" y="261" width="0.0630%" height="15" fill="rgb(209,120,3)" fg:x="64668" fg:w="66"/><text x="61.9979%" y="271.50"></text></g><g><title>rust_dealloc (84 samples, 0.08%)</title><rect x="61.7327%" y="309" width="0.0802%" height="15" fill="rgb(238,229,9)" fg:x="64652" fg:w="84"/><text x="61.9827%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (93 samples, 0.09%)</title><rect x="61.7250%" y="373" width="0.0888%" height="15" fill="rgb(253,159,18)" fg:x="64644" fg:w="93"/><text x="61.9750%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (86 samples, 0.08%)</title><rect x="61.7317%" y="357" width="0.0821%" height="15" fill="rgb(244,42,34)" fg:x="64651" fg:w="86"/><text x="61.9817%" y="367.50"></text></g><g><title>__rg_dealloc (86 samples, 0.08%)</title><rect x="61.7317%" y="341" width="0.0821%" height="15" fill="rgb(224,8,7)" fg:x="64651" fg:w="86"/><text x="61.9817%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (86 samples, 0.08%)</title><rect x="61.7317%" y="325" width="0.0821%" height="15" fill="rgb(210,201,45)" fg:x="64651" fg:w="86"/><text x="61.9817%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (437 samples, 0.42%)</title><rect x="61.3975%" y="421" width="0.4173%" height="15" fill="rgb(252,185,21)" fg:x="64301" fg:w="437"/><text x="61.6475%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (94 samples, 0.09%)</title><rect x="61.7250%" y="405" width="0.0898%" height="15" fill="rgb(223,131,1)" fg:x="64644" fg:w="94"/><text x="61.9750%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.09%)</title><rect x="61.7250%" y="389" width="0.0898%" height="15" fill="rgb(245,141,16)" fg:x="64644" fg:w="94"/><text x="61.9750%" y="399.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (13 samples, 0.01%)</title><rect x="61.8797%" y="373" width="0.0124%" height="15" fill="rgb(229,55,45)" fg:x="64806" fg:w="13"/><text x="62.1297%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (13 samples, 0.01%)</title><rect x="61.8797%" y="357" width="0.0124%" height="15" fill="rgb(208,92,15)" fg:x="64806" fg:w="13"/><text x="62.1297%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (12 samples, 0.01%)</title><rect x="61.8950%" y="357" width="0.0115%" height="15" fill="rgb(234,185,47)" fg:x="64822" fg:w="12"/><text x="62.1450%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (24 samples, 0.02%)</title><rect x="61.9246%" y="341" width="0.0229%" height="15" fill="rgb(253,104,50)" fg:x="64853" fg:w="24"/><text x="62.1746%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (11 samples, 0.01%)</title><rect x="61.9370%" y="325" width="0.0105%" height="15" fill="rgb(205,70,7)" fg:x="64866" fg:w="11"/><text x="62.1870%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (53 samples, 0.05%)</title><rect x="61.9064%" y="357" width="0.0506%" height="15" fill="rgb(240,178,43)" fg:x="64834" fg:w="53"/><text x="62.1564%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (69 samples, 0.07%)</title><rect x="61.8950%" y="373" width="0.0659%" height="15" fill="rgb(214,112,2)" fg:x="64822" fg:w="69"/><text x="62.1450%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (11 samples, 0.01%)</title><rect x="61.9609%" y="373" width="0.0105%" height="15" fill="rgb(206,46,17)" fg:x="64891" fg:w="11"/><text x="62.2109%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (169 samples, 0.16%)</title><rect x="61.8157%" y="421" width="0.1614%" height="15" fill="rgb(225,220,16)" fg:x="64739" fg:w="169"/><text x="62.0657%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (158 samples, 0.15%)</title><rect x="61.8262%" y="405" width="0.1509%" height="15" fill="rgb(238,65,40)" fg:x="64750" fg:w="158"/><text x="62.0762%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (158 samples, 0.15%)</title><rect x="61.8262%" y="389" width="0.1509%" height="15" fill="rgb(230,151,21)" fg:x="64750" fg:w="158"/><text x="62.0762%" y="399.50"></text></g><g><title>core::time::Duration::as_nanos (18 samples, 0.02%)</title><rect x="62.0220%" y="405" width="0.0172%" height="15" fill="rgb(218,58,49)" fg:x="64955" fg:w="18"/><text x="62.2720%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (16 samples, 0.02%)</title><rect x="62.0392%" y="405" width="0.0153%" height="15" fill="rgb(219,179,14)" fg:x="64973" fg:w="16"/><text x="62.2892%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (16 samples, 0.02%)</title><rect x="62.0392%" y="389" width="0.0153%" height="15" fill="rgb(223,72,1)" fg:x="64973" fg:w="16"/><text x="62.2892%" y="399.50"></text></g><g><title>tremor_common::time::nanotime (290 samples, 0.28%)</title><rect x="61.9781%" y="421" width="0.2769%" height="15" fill="rgb(238,126,10)" fg:x="64909" fg:w="290"/><text x="62.2281%" y="431.50"></text></g><g><title>std::time::SystemTime::now (210 samples, 0.20%)</title><rect x="62.0544%" y="405" width="0.2005%" height="15" fill="rgb(224,206,38)" fg:x="64989" fg:w="210"/><text x="62.3044%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (210 samples, 0.20%)</title><rect x="62.0544%" y="389" width="0.2005%" height="15" fill="rgb(212,201,54)" fg:x="64989" fg:w="210"/><text x="62.3044%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (210 samples, 0.20%)</title><rect x="62.0544%" y="373" width="0.2005%" height="15" fill="rgb(218,154,48)" fg:x="64989" fg:w="210"/><text x="62.3044%" y="383.50"></text></g><g><title>__clock_gettime_2 (42 samples, 0.04%)</title><rect x="62.2149%" y="357" width="0.0401%" height="15" fill="rgb(232,93,24)" fg:x="65157" fg:w="42"/><text x="62.4649%" y="367.50"></text></g><g><title>__vdso_clock_gettime (22 samples, 0.02%)</title><rect x="62.2340%" y="341" width="0.0210%" height="15" fill="rgb(245,30,21)" fg:x="65177" fg:w="22"/><text x="62.4840%" y="351.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (2,006 samples, 1.92%)</title><rect x="60.3520%" y="437" width="1.9154%" height="15" fill="rgb(242,148,29)" fg:x="63206" fg:w="2006"/><text x="60.6020%" y="447.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (13 samples, 0.01%)</title><rect x="62.2550%" y="421" width="0.0124%" height="15" fill="rgb(244,153,54)" fg:x="65199" fg:w="13"/><text x="62.5050%" y="431.50"></text></g><g><title>start_thread (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1157" width="3.6657%" height="15" fill="rgb(252,87,22)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1167.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1141" width="3.6657%" height="15" fill="rgb(210,51,29)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1151.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1125" width="3.6657%" height="15" fill="rgb(242,136,47)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1135.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1109" width="3.6657%" height="15" fill="rgb(238,68,4)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1119.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1093" width="3.6657%" height="15" fill="rgb(242,161,30)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1103.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1077" width="3.6657%" height="15" fill="rgb(218,58,44)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1087.50">std:..</text></g><g><title>std::panic::catch_unwind (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1061" width="3.6657%" height="15" fill="rgb(252,125,32)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1071.50">std:..</text></g><g><title>std::panicking::try (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1045" width="3.6657%" height="15" fill="rgb(219,178,0)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1055.50">std:..</text></g><g><title>std::panicking::try::do_call (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1029" width="3.6657%" height="15" fill="rgb(213,152,7)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1039.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,839 samples, 3.67%)</title><rect x="58.6027%" y="1013" width="3.6657%" height="15" fill="rgb(249,109,34)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1023.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="997" width="3.6657%" height="15" fill="rgb(232,96,21)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="1007.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,839 samples, 3.67%)</title><rect x="58.6027%" y="981" width="3.6657%" height="15" fill="rgb(228,27,39)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="991.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (3,839 samples, 3.67%)</title><rect x="58.6027%" y="965" width="3.6657%" height="15" fill="rgb(211,182,52)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="975.50">core..</text></g><g><title>async_global_executor::threading::thread_main_loop (3,839 samples, 3.67%)</title><rect x="58.6027%" y="949" width="3.6657%" height="15" fill="rgb(234,178,38)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="959.50">asyn..</text></g><g><title>std::panic::catch_unwind (3,839 samples, 3.67%)</title><rect x="58.6027%" y="933" width="3.6657%" height="15" fill="rgb(221,111,3)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="943.50">std:..</text></g><g><title>std::panicking::try (3,839 samples, 3.67%)</title><rect x="58.6027%" y="917" width="3.6657%" height="15" fill="rgb(228,175,21)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="927.50">std:..</text></g><g><title>std::panicking::try::do_call (3,839 samples, 3.67%)</title><rect x="58.6027%" y="901" width="3.6657%" height="15" fill="rgb(228,174,43)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="911.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="885" width="3.6657%" height="15" fill="rgb(211,191,0)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="895.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,839 samples, 3.67%)</title><rect x="58.6027%" y="869" width="3.6657%" height="15" fill="rgb(253,117,3)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="879.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,839 samples, 3.67%)</title><rect x="58.6027%" y="853" width="3.6657%" height="15" fill="rgb(241,127,19)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="863.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="837" width="3.6657%" height="15" fill="rgb(218,103,12)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="847.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (3,839 samples, 3.67%)</title><rect x="58.6027%" y="821" width="3.6657%" height="15" fill="rgb(236,214,43)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="831.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="805" width="3.6657%" height="15" fill="rgb(244,144,19)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="815.50">asyn..</text></g><g><title>async_io::driver::block_on (3,839 samples, 3.67%)</title><rect x="58.6027%" y="789" width="3.6657%" height="15" fill="rgb(246,188,10)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="799.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="773" width="3.6657%" height="15" fill="rgb(212,193,33)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="783.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="757" width="3.6657%" height="15" fill="rgb(241,51,29)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="767.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="741" width="3.6657%" height="15" fill="rgb(211,58,19)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="751.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="725" width="3.6657%" height="15" fill="rgb(229,111,26)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="735.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="709" width="3.6657%" height="15" fill="rgb(213,115,40)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="719.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="693" width="3.6657%" height="15" fill="rgb(209,56,44)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="703.50">asyn..</text></g><g><title>async_task::runnable::Runnable::run (3,839 samples, 3.67%)</title><rect x="58.6027%" y="677" width="3.6657%" height="15" fill="rgb(230,108,32)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="687.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,839 samples, 3.67%)</title><rect x="58.6027%" y="661" width="3.6657%" height="15" fill="rgb(216,165,31)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="671.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="645" width="3.6657%" height="15" fill="rgb(218,122,21)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="655.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="629" width="3.6657%" height="15" fill="rgb(223,224,47)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="639.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="613" width="3.6657%" height="15" fill="rgb(238,102,44)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="623.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="597" width="3.6657%" height="15" fill="rgb(236,46,40)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="607.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,839 samples, 3.67%)</title><rect x="58.6027%" y="581" width="3.6657%" height="15" fill="rgb(247,202,50)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="591.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,839 samples, 3.67%)</title><rect x="58.6027%" y="565" width="3.6657%" height="15" fill="rgb(209,99,20)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="575.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,839 samples, 3.67%)</title><rect x="58.6027%" y="549" width="3.6657%" height="15" fill="rgb(252,27,34)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="559.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="533" width="3.6657%" height="15" fill="rgb(215,206,23)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="543.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="517" width="3.6657%" height="15" fill="rgb(212,135,36)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="527.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="501" width="3.6657%" height="15" fill="rgb(240,189,1)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="511.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,839 samples, 3.67%)</title><rect x="58.6027%" y="485" width="3.6657%" height="15" fill="rgb(242,56,20)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="495.50">trem..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="469" width="3.6657%" height="15" fill="rgb(247,132,33)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="479.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,839 samples, 3.67%)</title><rect x="58.6027%" y="453" width="3.6657%" height="15" fill="rgb(208,149,11)" fg:x="61374" fg:w="3839"/><text x="58.8527%" y="463.50">&lt;cor..</text></g><g><title>aligned_size (21 samples, 0.02%)</title><rect x="62.2912%" y="389" width="0.0201%" height="15" fill="rgb(211,33,11)" fg:x="65237" fg:w="21"/><text x="62.5412%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="62.3610%" y="277" width="0.0191%" height="15" fill="rgb(221,29,38)" fg:x="65310" fg:w="20"/><text x="62.6110%" y="287.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="62.3610%" y="261" width="0.0191%" height="15" fill="rgb(206,182,49)" fg:x="65310" fg:w="20"/><text x="62.6110%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (65 samples, 0.06%)</title><rect x="62.3266%" y="309" width="0.0621%" height="15" fill="rgb(216,140,1)" fg:x="65274" fg:w="65"/><text x="62.5766%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (52 samples, 0.05%)</title><rect x="62.3390%" y="293" width="0.0497%" height="15" fill="rgb(232,57,40)" fg:x="65287" fg:w="52"/><text x="62.5890%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (77 samples, 0.07%)</title><rect x="62.3161%" y="341" width="0.0735%" height="15" fill="rgb(224,186,18)" fg:x="65263" fg:w="77"/><text x="62.5661%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (77 samples, 0.07%)</title><rect x="62.3161%" y="325" width="0.0735%" height="15" fill="rgb(215,121,11)" fg:x="65263" fg:w="77"/><text x="62.5661%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (89 samples, 0.08%)</title><rect x="62.3161%" y="373" width="0.0850%" height="15" fill="rgb(245,147,10)" fg:x="65263" fg:w="89"/><text x="62.5661%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (89 samples, 0.08%)</title><rect x="62.3161%" y="357" width="0.0850%" height="15" fill="rgb(238,153,13)" fg:x="65263" fg:w="89"/><text x="62.5661%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="62.3896%" y="341" width="0.0115%" height="15" fill="rgb(233,108,0)" fg:x="65340" fg:w="12"/><text x="62.6396%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="62.3896%" y="325" width="0.0115%" height="15" fill="rgb(212,157,17)" fg:x="65340" fg:w="12"/><text x="62.6396%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="62.3896%" y="309" width="0.0115%" height="15" fill="rgb(225,213,38)" fg:x="65340" fg:w="12"/><text x="62.6396%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="62.3896%" y="293" width="0.0115%" height="15" fill="rgb(248,16,11)" fg:x="65340" fg:w="12"/><text x="62.6396%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (107 samples, 0.10%)</title><rect x="62.3113%" y="389" width="0.1022%" height="15" fill="rgb(241,33,4)" fg:x="65258" fg:w="107"/><text x="62.5613%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="62.4011%" y="373" width="0.0124%" height="15" fill="rgb(222,26,43)" fg:x="65352" fg:w="13"/><text x="62.6511%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="62.4011%" y="357" width="0.0124%" height="15" fill="rgb(243,29,36)" fg:x="65352" fg:w="13"/><text x="62.6511%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="62.4011%" y="341" width="0.0124%" height="15" fill="rgb(241,9,27)" fg:x="65352" fg:w="13"/><text x="62.6511%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="62.4011%" y="325" width="0.0124%" height="15" fill="rgb(205,117,26)" fg:x="65352" fg:w="13"/><text x="62.6511%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (141 samples, 0.13%)</title><rect x="62.2893%" y="421" width="0.1346%" height="15" fill="rgb(209,80,39)" fg:x="65235" fg:w="141"/><text x="62.5393%" y="431.50"></text></g><g><title>rust_dealloc (140 samples, 0.13%)</title><rect x="62.2903%" y="405" width="0.1337%" height="15" fill="rgb(239,155,6)" fg:x="65236" fg:w="140"/><text x="62.5403%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="62.4135%" y="389" width="0.0105%" height="15" fill="rgb(212,104,12)" fg:x="65365" fg:w="11"/><text x="62.6635%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (34 samples, 0.03%)</title><rect x="62.4259%" y="373" width="0.0325%" height="15" fill="rgb(234,204,3)" fg:x="65378" fg:w="34"/><text x="62.6759%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (15 samples, 0.01%)</title><rect x="62.4440%" y="357" width="0.0143%" height="15" fill="rgb(251,218,7)" fg:x="65397" fg:w="15"/><text x="62.6940%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (55 samples, 0.05%)</title><rect x="62.4259%" y="421" width="0.0525%" height="15" fill="rgb(221,81,32)" fg:x="65378" fg:w="55"/><text x="62.6759%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (55 samples, 0.05%)</title><rect x="62.4259%" y="405" width="0.0525%" height="15" fill="rgb(214,152,26)" fg:x="65378" fg:w="55"/><text x="62.6759%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="62.4259%" y="389" width="0.0525%" height="15" fill="rgb(223,22,3)" fg:x="65378" fg:w="55"/><text x="62.6759%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (11 samples, 0.01%)</title><rect x="62.4679%" y="373" width="0.0105%" height="15" fill="rgb(207,174,7)" fg:x="65422" fg:w="11"/><text x="62.7179%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="62.9644%" y="261" width="0.0172%" height="15" fill="rgb(224,19,52)" fg:x="65942" fg:w="18"/><text x="63.2144%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="62.9644%" y="245" width="0.0172%" height="15" fill="rgb(228,24,14)" fg:x="65942" fg:w="18"/><text x="63.2144%" y="255.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="62.9644%" y="229" width="0.0172%" height="15" fill="rgb(230,153,43)" fg:x="65942" fg:w="18"/><text x="63.2144%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="62.9644%" y="213" width="0.0172%" height="15" fill="rgb(231,106,12)" fg:x="65942" fg:w="18"/><text x="63.2144%" y="223.50"></text></g><g><title>core::mem::drop (789 samples, 0.75%)</title><rect x="62.9644%" y="309" width="0.7534%" height="15" fill="rgb(215,92,2)" fg:x="65942" fg:w="789"/><text x="63.2144%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (789 samples, 0.75%)</title><rect x="62.9644%" y="293" width="0.7534%" height="15" fill="rgb(249,143,25)" fg:x="65942" fg:w="789"/><text x="63.2144%" y="303.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (789 samples, 0.75%)</title><rect x="62.9644%" y="277" width="0.7534%" height="15" fill="rgb(252,7,35)" fg:x="65942" fg:w="789"/><text x="63.2144%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (764 samples, 0.73%)</title><rect x="62.9883%" y="261" width="0.7295%" height="15" fill="rgb(216,69,40)" fg:x="65967" fg:w="764"/><text x="63.2383%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (764 samples, 0.73%)</title><rect x="62.9883%" y="245" width="0.7295%" height="15" fill="rgb(240,36,33)" fg:x="65967" fg:w="764"/><text x="63.2383%" y="255.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="63.7550%" y="85" width="0.0124%" height="15" fill="rgb(231,128,14)" fg:x="66770" fg:w="13"/><text x="64.0050%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (42 samples, 0.04%)</title><rect x="63.8438%" y="53" width="0.0401%" height="15" fill="rgb(245,143,14)" fg:x="66863" fg:w="42"/><text x="64.0938%" y="63.50"></text></g><g><title> (42 samples, 0.04%)</title><rect x="63.8438%" y="37" width="0.0401%" height="15" fill="rgb(222,130,28)" fg:x="66863" fg:w="42"/><text x="64.0938%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (144 samples, 0.14%)</title><rect x="63.7693%" y="85" width="0.1375%" height="15" fill="rgb(212,10,48)" fg:x="66785" fg:w="144"/><text x="64.0193%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (130 samples, 0.12%)</title><rect x="63.7827%" y="69" width="0.1241%" height="15" fill="rgb(254,118,45)" fg:x="66799" fg:w="130"/><text x="64.0327%" y="79.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (19 samples, 0.02%)</title><rect x="63.8887%" y="53" width="0.0181%" height="15" fill="rgb(228,6,45)" fg:x="66910" fg:w="19"/><text x="64.1387%" y="63.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (177 samples, 0.17%)</title><rect x="63.7550%" y="117" width="0.1690%" height="15" fill="rgb(241,18,35)" fg:x="66770" fg:w="177"/><text x="64.0050%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (177 samples, 0.17%)</title><rect x="63.7550%" y="101" width="0.1690%" height="15" fill="rgb(227,214,53)" fg:x="66770" fg:w="177"/><text x="64.0050%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (16 samples, 0.02%)</title><rect x="63.9088%" y="85" width="0.0153%" height="15" fill="rgb(224,107,51)" fg:x="66931" fg:w="16"/><text x="64.1588%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (187 samples, 0.18%)</title><rect x="63.7550%" y="149" width="0.1786%" height="15" fill="rgb(248,60,28)" fg:x="66770" fg:w="187"/><text x="64.0050%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (187 samples, 0.18%)</title><rect x="63.7550%" y="133" width="0.1786%" height="15" fill="rgb(249,101,23)" fg:x="66770" fg:w="187"/><text x="64.0050%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (204 samples, 0.19%)</title><rect x="63.7503%" y="165" width="0.1948%" height="15" fill="rgb(228,51,19)" fg:x="66765" fg:w="204"/><text x="64.0003%" y="175.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="63.9336%" y="149" width="0.0115%" height="15" fill="rgb(213,20,6)" fg:x="66957" fg:w="12"/><text x="64.1836%" y="159.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="63.9336%" y="133" width="0.0115%" height="15" fill="rgb(212,124,10)" fg:x="66957" fg:w="12"/><text x="64.1836%" y="143.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="63.9336%" y="117" width="0.0115%" height="15" fill="rgb(248,3,40)" fg:x="66957" fg:w="12"/><text x="64.1836%" y="127.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="63.9336%" y="101" width="0.0115%" height="15" fill="rgb(223,178,23)" fg:x="66957" fg:w="12"/><text x="64.1836%" y="111.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,043 samples, 1.00%)</title><rect x="62.9577%" y="325" width="0.9959%" height="15" fill="rgb(240,132,45)" fg:x="65935" fg:w="1043"/><text x="63.2077%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (247 samples, 0.24%)</title><rect x="63.7178%" y="309" width="0.2358%" height="15" fill="rgb(245,164,36)" fg:x="66731" fg:w="247"/><text x="63.9678%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (247 samples, 0.24%)</title><rect x="63.7178%" y="293" width="0.2358%" height="15" fill="rgb(231,188,53)" fg:x="66731" fg:w="247"/><text x="63.9678%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (247 samples, 0.24%)</title><rect x="63.7178%" y="277" width="0.2358%" height="15" fill="rgb(237,198,39)" fg:x="66731" fg:w="247"/><text x="63.9678%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (247 samples, 0.24%)</title><rect x="63.7178%" y="261" width="0.2358%" height="15" fill="rgb(223,120,35)" fg:x="66731" fg:w="247"/><text x="63.9678%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (222 samples, 0.21%)</title><rect x="63.7417%" y="245" width="0.2120%" height="15" fill="rgb(253,107,49)" fg:x="66756" fg:w="222"/><text x="63.9917%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (222 samples, 0.21%)</title><rect x="63.7417%" y="229" width="0.2120%" height="15" fill="rgb(216,44,31)" fg:x="66756" fg:w="222"/><text x="63.9917%" y="239.50"></text></g><g><title>__rg_dealloc (222 samples, 0.21%)</title><rect x="63.7417%" y="213" width="0.2120%" height="15" fill="rgb(253,87,21)" fg:x="66756" fg:w="222"/><text x="63.9917%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (222 samples, 0.21%)</title><rect x="63.7417%" y="197" width="0.2120%" height="15" fill="rgb(226,18,2)" fg:x="66756" fg:w="222"/><text x="63.9917%" y="207.50"></text></g><g><title>rust_dealloc (222 samples, 0.21%)</title><rect x="63.7417%" y="181" width="0.2120%" height="15" fill="rgb(216,8,46)" fg:x="66756" fg:w="222"/><text x="63.9917%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,188 samples, 1.13%)</title><rect x="63.9565%" y="325" width="1.1344%" height="15" fill="rgb(226,140,39)" fg:x="66981" fg:w="1188"/><text x="64.2065%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,188 samples, 1.13%)</title><rect x="63.9565%" y="309" width="1.1344%" height="15" fill="rgb(221,194,54)" fg:x="66981" fg:w="1188"/><text x="64.2065%" y="319.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="65.1061%" y="293" width="0.0134%" height="15" fill="rgb(213,92,11)" fg:x="68185" fg:w="14"/><text x="65.3561%" y="303.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="65.1195%" y="293" width="0.0124%" height="15" fill="rgb(229,162,46)" fg:x="68199" fg:w="13"/><text x="65.3695%" y="303.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (26 samples, 0.02%)</title><rect x="65.1739%" y="197" width="0.0248%" height="15" fill="rgb(214,111,36)" fg:x="68256" fg:w="26"/><text x="65.4239%" y="207.50"></text></g><g><title> (26 samples, 0.02%)</title><rect x="65.1739%" y="181" width="0.0248%" height="15" fill="rgb(207,6,21)" fg:x="68256" fg:w="26"/><text x="65.4239%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (58 samples, 0.06%)</title><rect x="65.1539%" y="229" width="0.0554%" height="15" fill="rgb(213,127,38)" fg:x="68235" fg:w="58"/><text x="65.4039%" y="239.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (49 samples, 0.05%)</title><rect x="65.1625%" y="213" width="0.0468%" height="15" fill="rgb(238,118,32)" fg:x="68244" fg:w="49"/><text x="65.4125%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,864 samples, 2.73%)</title><rect x="62.4784%" y="389" width="2.7347%" height="15" fill="rgb(240,139,39)" fg:x="65433" fg:w="2864"/><text x="62.7284%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,857 samples, 2.73%)</title><rect x="62.4851%" y="373" width="2.7280%" height="15" fill="rgb(235,10,37)" fg:x="65440" fg:w="2857"/><text x="62.7351%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,849 samples, 2.72%)</title><rect x="62.4927%" y="357" width="2.7204%" height="15" fill="rgb(249,171,38)" fg:x="65448" fg:w="2849"/><text x="62.7427%" y="367.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,849 samples, 2.72%)</title><rect x="62.4927%" y="341" width="2.7204%" height="15" fill="rgb(242,144,32)" fg:x="65448" fg:w="2849"/><text x="62.7427%" y="351.50">&lt;a..</text></g><g><title>rust_dealloc (128 samples, 0.12%)</title><rect x="65.0909%" y="325" width="0.1222%" height="15" fill="rgb(217,117,21)" fg:x="68169" fg:w="128"/><text x="65.3409%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (113 samples, 0.11%)</title><rect x="65.1052%" y="309" width="0.1079%" height="15" fill="rgb(249,87,1)" fg:x="68184" fg:w="113"/><text x="65.3552%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (85 samples, 0.08%)</title><rect x="65.1319%" y="293" width="0.0812%" height="15" fill="rgb(248,196,48)" fg:x="68212" fg:w="85"/><text x="65.3819%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (85 samples, 0.08%)</title><rect x="65.1319%" y="277" width="0.0812%" height="15" fill="rgb(251,206,33)" fg:x="68212" fg:w="85"/><text x="65.3819%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.08%)</title><rect x="65.1319%" y="261" width="0.0812%" height="15" fill="rgb(232,141,28)" fg:x="68212" fg:w="85"/><text x="65.3819%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.08%)</title><rect x="65.1319%" y="245" width="0.0812%" height="15" fill="rgb(209,167,14)" fg:x="68212" fg:w="85"/><text x="65.3819%" y="255.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="65.2245%" y="277" width="0.0105%" height="15" fill="rgb(225,11,50)" fg:x="68309" fg:w="11"/><text x="65.4745%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (11 samples, 0.01%)</title><rect x="65.2494%" y="197" width="0.0105%" height="15" fill="rgb(209,50,20)" fg:x="68335" fg:w="11"/><text x="65.4994%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.02%)</title><rect x="65.2923%" y="165" width="0.0153%" height="15" fill="rgb(212,17,46)" fg:x="68380" fg:w="16"/><text x="65.5423%" y="175.50"></text></g><g><title> (16 samples, 0.02%)</title><rect x="65.2923%" y="149" width="0.0153%" height="15" fill="rgb(216,101,39)" fg:x="68380" fg:w="16"/><text x="65.5423%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (62 samples, 0.06%)</title><rect x="65.2599%" y="197" width="0.0592%" height="15" fill="rgb(212,228,48)" fg:x="68346" fg:w="62"/><text x="65.5099%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (47 samples, 0.04%)</title><rect x="65.2742%" y="181" width="0.0449%" height="15" fill="rgb(250,6,50)" fg:x="68361" fg:w="47"/><text x="65.5242%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="65.3076%" y="165" width="0.0115%" height="15" fill="rgb(250,160,48)" fg:x="68396" fg:w="12"/><text x="65.5576%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (89 samples, 0.08%)</title><rect x="65.2474%" y="229" width="0.0850%" height="15" fill="rgb(244,216,33)" fg:x="68333" fg:w="89"/><text x="65.4974%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (89 samples, 0.08%)</title><rect x="65.2474%" y="213" width="0.0850%" height="15" fill="rgb(207,157,5)" fg:x="68333" fg:w="89"/><text x="65.4974%" y="223.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="65.3191%" y="197" width="0.0134%" height="15" fill="rgb(228,199,8)" fg:x="68408" fg:w="14"/><text x="65.5691%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (95 samples, 0.09%)</title><rect x="65.2474%" y="261" width="0.0907%" height="15" fill="rgb(227,80,20)" fg:x="68333" fg:w="95"/><text x="65.4974%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (95 samples, 0.09%)</title><rect x="65.2474%" y="245" width="0.0907%" height="15" fill="rgb(222,9,33)" fg:x="68333" fg:w="95"/><text x="65.4974%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (109 samples, 0.10%)</title><rect x="65.2350%" y="277" width="0.1041%" height="15" fill="rgb(239,44,28)" fg:x="68320" fg:w="109"/><text x="65.4850%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,997 samples, 2.86%)</title><rect x="62.4784%" y="405" width="2.8617%" height="15" fill="rgb(249,187,43)" fg:x="65433" fg:w="2997"/><text x="62.7284%" y="415.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (133 samples, 0.13%)</title><rect x="65.2131%" y="389" width="0.1270%" height="15" fill="rgb(216,141,28)" fg:x="68297" fg:w="133"/><text x="65.4631%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 samples, 0.13%)</title><rect x="65.2131%" y="373" width="0.1270%" height="15" fill="rgb(230,154,53)" fg:x="68297" fg:w="133"/><text x="65.4631%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (133 samples, 0.13%)</title><rect x="65.2131%" y="357" width="0.1270%" height="15" fill="rgb(227,82,4)" fg:x="68297" fg:w="133"/><text x="65.4631%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (121 samples, 0.12%)</title><rect x="65.2245%" y="341" width="0.1155%" height="15" fill="rgb(220,107,16)" fg:x="68309" fg:w="121"/><text x="65.4745%" y="351.50"></text></g><g><title>__rg_dealloc (121 samples, 0.12%)</title><rect x="65.2245%" y="325" width="0.1155%" height="15" fill="rgb(207,187,2)" fg:x="68309" fg:w="121"/><text x="65.4745%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (121 samples, 0.12%)</title><rect x="65.2245%" y="309" width="0.1155%" height="15" fill="rgb(210,162,52)" fg:x="68309" fg:w="121"/><text x="65.4745%" y="319.50"></text></g><g><title>rust_dealloc (121 samples, 0.12%)</title><rect x="65.2245%" y="293" width="0.1155%" height="15" fill="rgb(217,216,49)" fg:x="68309" fg:w="121"/><text x="65.4745%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (11 samples, 0.01%)</title><rect x="65.3410%" y="389" width="0.0105%" height="15" fill="rgb(218,146,49)" fg:x="68431" fg:w="11"/><text x="65.5910%" y="399.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="65.3639%" y="357" width="0.0143%" height="15" fill="rgb(216,55,40)" fg:x="68455" fg:w="15"/><text x="65.6139%" y="367.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="65.3783%" y="357" width="0.0115%" height="15" fill="rgb(208,196,21)" fg:x="68470" fg:w="12"/><text x="65.6283%" y="367.50"></text></g><g><title>sizeclass_to_size (13 samples, 0.01%)</title><rect x="65.4126%" y="293" width="0.0124%" height="15" fill="rgb(242,117,42)" fg:x="68506" fg:w="13"/><text x="65.6626%" y="303.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (13 samples, 0.01%)</title><rect x="65.4126%" y="277" width="0.0124%" height="15" fill="rgb(210,11,23)" fg:x="68506" fg:w="13"/><text x="65.6626%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="65.4461%" y="261" width="0.0115%" height="15" fill="rgb(217,110,2)" fg:x="68541" fg:w="12"/><text x="65.6961%" y="271.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="65.4461%" y="245" width="0.0115%" height="15" fill="rgb(229,77,54)" fg:x="68541" fg:w="12"/><text x="65.6961%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (52 samples, 0.05%)</title><rect x="65.4260%" y="293" width="0.0497%" height="15" fill="rgb(218,53,16)" fg:x="68520" fg:w="52"/><text x="65.6760%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (44 samples, 0.04%)</title><rect x="65.4336%" y="277" width="0.0420%" height="15" fill="rgb(215,38,13)" fg:x="68528" fg:w="44"/><text x="65.6836%" y="287.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (16 samples, 0.02%)</title><rect x="65.4604%" y="261" width="0.0153%" height="15" fill="rgb(235,42,18)" fg:x="68556" fg:w="16"/><text x="65.7104%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (95 samples, 0.09%)</title><rect x="65.3897%" y="325" width="0.0907%" height="15" fill="rgb(219,66,54)" fg:x="68482" fg:w="95"/><text x="65.6397%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (95 samples, 0.09%)</title><rect x="65.3897%" y="309" width="0.0907%" height="15" fill="rgb(222,205,4)" fg:x="68482" fg:w="95"/><text x="65.6397%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (123 samples, 0.12%)</title><rect x="65.3639%" y="373" width="0.1174%" height="15" fill="rgb(227,213,46)" fg:x="68455" fg:w="123"/><text x="65.6139%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (96 samples, 0.09%)</title><rect x="65.3897%" y="357" width="0.0917%" height="15" fill="rgb(250,145,42)" fg:x="68482" fg:w="96"/><text x="65.6397%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (96 samples, 0.09%)</title><rect x="65.3897%" y="341" width="0.0917%" height="15" fill="rgb(219,15,2)" fg:x="68482" fg:w="96"/><text x="65.6397%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (3,368 samples, 3.22%)</title><rect x="62.2683%" y="437" width="3.2159%" height="15" fill="rgb(231,181,52)" fg:x="65213" fg:w="3368"/><text x="62.5183%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,148 samples, 3.01%)</title><rect x="62.4784%" y="421" width="3.0059%" height="15" fill="rgb(235,1,42)" fg:x="65433" fg:w="3148"/><text x="62.7284%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (151 samples, 0.14%)</title><rect x="65.3401%" y="405" width="0.1442%" height="15" fill="rgb(249,88,27)" fg:x="68430" fg:w="151"/><text x="65.5901%" y="415.50"></text></g><g><title>rust_dealloc (139 samples, 0.13%)</title><rect x="65.3515%" y="389" width="0.1327%" height="15" fill="rgb(235,145,16)" fg:x="68442" fg:w="139"/><text x="65.6015%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (67 samples, 0.06%)</title><rect x="65.5520%" y="373" width="0.0640%" height="15" fill="rgb(237,114,19)" fg:x="68652" fg:w="67"/><text x="65.8020%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::ge (67 samples, 0.06%)</title><rect x="65.5520%" y="357" width="0.0640%" height="15" fill="rgb(238,51,50)" fg:x="68652" fg:w="67"/><text x="65.8020%" y="367.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (64 samples, 0.06%)</title><rect x="65.5549%" y="341" width="0.0611%" height="15" fill="rgb(205,194,25)" fg:x="68655" fg:w="64"/><text x="65.8049%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (64 samples, 0.06%)</title><rect x="65.5549%" y="325" width="0.0611%" height="15" fill="rgb(215,203,17)" fg:x="68655" fg:w="64"/><text x="65.8049%" y="335.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (64 samples, 0.06%)</title><rect x="65.5549%" y="309" width="0.0611%" height="15" fill="rgb(233,112,49)" fg:x="68655" fg:w="64"/><text x="65.8049%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (31 samples, 0.03%)</title><rect x="65.5864%" y="293" width="0.0296%" height="15" fill="rgb(241,130,26)" fg:x="68688" fg:w="31"/><text x="65.8364%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (161 samples, 0.15%)</title><rect x="65.4842%" y="421" width="0.1537%" height="15" fill="rgb(252,223,19)" fg:x="68581" fg:w="161"/><text x="65.7342%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (161 samples, 0.15%)</title><rect x="65.4842%" y="405" width="0.1537%" height="15" fill="rgb(211,95,25)" fg:x="68581" fg:w="161"/><text x="65.7342%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (161 samples, 0.15%)</title><rect x="65.4842%" y="389" width="0.1537%" height="15" fill="rgb(251,182,27)" fg:x="68581" fg:w="161"/><text x="65.7342%" y="399.50"></text></g><g><title>core::time::Duration::new (23 samples, 0.02%)</title><rect x="65.6160%" y="373" width="0.0220%" height="15" fill="rgb(238,24,4)" fg:x="68719" fg:w="23"/><text x="65.8660%" y="383.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1157" width="3.9960%" height="15" fill="rgb(224,220,25)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1167.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1141" width="3.9960%" height="15" fill="rgb(239,133,26)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1151.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1125" width="3.9960%" height="15" fill="rgb(211,94,48)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1135.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1109" width="3.9960%" height="15" fill="rgb(239,87,6)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1119.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1093" width="3.9960%" height="15" fill="rgb(227,62,0)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1103.50">std:..</text></g><g><title>std::panic::catch_unwind (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1077" width="3.9960%" height="15" fill="rgb(211,226,4)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1087.50">std:..</text></g><g><title>std::panicking::try (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1061" width="3.9960%" height="15" fill="rgb(253,38,52)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1071.50">std:..</text></g><g><title>std::panicking::try::do_call (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1045" width="3.9960%" height="15" fill="rgb(229,126,40)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1055.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1029" width="3.9960%" height="15" fill="rgb(229,165,44)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1039.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="1013" width="3.9960%" height="15" fill="rgb(247,95,47)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1023.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,185 samples, 4.00%)</title><rect x="62.2683%" y="997" width="3.9960%" height="15" fill="rgb(216,140,30)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="1007.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (4,185 samples, 4.00%)</title><rect x="62.2683%" y="981" width="3.9960%" height="15" fill="rgb(246,214,8)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="991.50">core..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,185 samples, 4.00%)</title><rect x="62.2683%" y="965" width="3.9960%" height="15" fill="rgb(227,224,15)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="975.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,185 samples, 4.00%)</title><rect x="62.2683%" y="949" width="3.9960%" height="15" fill="rgb(233,175,4)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="959.50">std:..</text></g><g><title>std::panicking::try (4,185 samples, 4.00%)</title><rect x="62.2683%" y="933" width="3.9960%" height="15" fill="rgb(221,66,45)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="943.50">std:..</text></g><g><title>std::panicking::try::do_call (4,185 samples, 4.00%)</title><rect x="62.2683%" y="917" width="3.9960%" height="15" fill="rgb(221,178,18)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="927.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="901" width="3.9960%" height="15" fill="rgb(213,81,29)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="911.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,185 samples, 4.00%)</title><rect x="62.2683%" y="885" width="3.9960%" height="15" fill="rgb(220,89,49)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="895.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,185 samples, 4.00%)</title><rect x="62.2683%" y="869" width="3.9960%" height="15" fill="rgb(227,60,33)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="879.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="853" width="3.9960%" height="15" fill="rgb(205,113,12)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="863.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (4,185 samples, 4.00%)</title><rect x="62.2683%" y="837" width="3.9960%" height="15" fill="rgb(211,32,1)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="847.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="821" width="3.9960%" height="15" fill="rgb(246,2,12)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="831.50">asyn..</text></g><g><title>async_io::driver::block_on (4,185 samples, 4.00%)</title><rect x="62.2683%" y="805" width="3.9960%" height="15" fill="rgb(243,37,27)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="815.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="789" width="3.9960%" height="15" fill="rgb(248,211,31)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="799.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="773" width="3.9960%" height="15" fill="rgb(242,146,47)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="783.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="757" width="3.9960%" height="15" fill="rgb(206,70,20)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="767.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="741" width="3.9960%" height="15" fill="rgb(215,10,51)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="751.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="725" width="3.9960%" height="15" fill="rgb(243,178,53)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="735.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="709" width="3.9960%" height="15" fill="rgb(233,221,20)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="719.50">asyn..</text></g><g><title>async_task::runnable::Runnable::run (4,185 samples, 4.00%)</title><rect x="62.2683%" y="693" width="3.9960%" height="15" fill="rgb(218,95,35)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="703.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,185 samples, 4.00%)</title><rect x="62.2683%" y="677" width="3.9960%" height="15" fill="rgb(229,13,5)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="687.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="661" width="3.9960%" height="15" fill="rgb(252,164,30)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="671.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="645" width="3.9960%" height="15" fill="rgb(232,68,36)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="655.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="629" width="3.9960%" height="15" fill="rgb(219,59,54)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="639.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="613" width="3.9960%" height="15" fill="rgb(250,92,33)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="623.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,185 samples, 4.00%)</title><rect x="62.2683%" y="597" width="3.9960%" height="15" fill="rgb(229,162,54)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="607.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,185 samples, 4.00%)</title><rect x="62.2683%" y="581" width="3.9960%" height="15" fill="rgb(244,114,52)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="591.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,185 samples, 4.00%)</title><rect x="62.2683%" y="565" width="3.9960%" height="15" fill="rgb(212,211,43)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="575.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="549" width="3.9960%" height="15" fill="rgb(226,147,8)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="559.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="533" width="3.9960%" height="15" fill="rgb(226,23,13)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="543.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="517" width="3.9960%" height="15" fill="rgb(240,63,4)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="527.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="501" width="3.9960%" height="15" fill="rgb(221,1,32)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="511.50">trem..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="485" width="3.9960%" height="15" fill="rgb(242,117,10)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="495.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.00%)</title><rect x="62.2683%" y="469" width="3.9960%" height="15" fill="rgb(249,172,44)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="479.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,185 samples, 4.00%)</title><rect x="62.2683%" y="453" width="3.9960%" height="15" fill="rgb(244,46,45)" fg:x="65213" fg:w="4185"/><text x="62.5183%" y="463.50">&lt;tre..</text></g><g><title>tremor_common::time::nanotime (817 samples, 0.78%)</title><rect x="65.4842%" y="437" width="0.7801%" height="15" fill="rgb(206,43,17)" fg:x="68581" fg:w="817"/><text x="65.7342%" y="447.50"></text></g><g><title>std::time::SystemTime::now (656 samples, 0.63%)</title><rect x="65.6380%" y="421" width="0.6264%" height="15" fill="rgb(239,218,39)" fg:x="68742" fg:w="656"/><text x="65.8880%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (656 samples, 0.63%)</title><rect x="65.6380%" y="405" width="0.6264%" height="15" fill="rgb(208,169,54)" fg:x="68742" fg:w="656"/><text x="65.8880%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::now (656 samples, 0.63%)</title><rect x="65.6380%" y="389" width="0.6264%" height="15" fill="rgb(247,25,42)" fg:x="68742" fg:w="656"/><text x="65.8880%" y="399.50"></text></g><g><title>__clock_gettime_2 (656 samples, 0.63%)</title><rect x="65.6380%" y="373" width="0.6264%" height="15" fill="rgb(226,23,31)" fg:x="68742" fg:w="656"/><text x="65.8880%" y="383.50"></text></g><g><title>__vdso_clock_gettime (656 samples, 0.63%)</title><rect x="65.6380%" y="357" width="0.6264%" height="15" fill="rgb(247,16,28)" fg:x="68742" fg:w="656"/><text x="65.8880%" y="367.50"></text></g><g><title>[[vdso]] (445 samples, 0.42%)</title><rect x="65.8395%" y="341" width="0.4249%" height="15" fill="rgb(231,147,38)" fg:x="68953" fg:w="445"/><text x="66.0895%" y="351.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (53 samples, 0.05%)</title><rect x="66.2644%" y="1157" width="0.0506%" height="15" fill="rgb(253,81,48)" fg:x="69398" fg:w="53"/><text x="66.5144%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (749 samples, 0.72%)</title><rect x="66.4143%" y="581" width="0.7152%" height="15" fill="rgb(249,222,43)" fg:x="69555" fg:w="749"/><text x="66.6643%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (802 samples, 0.77%)</title><rect x="66.3761%" y="597" width="0.7658%" height="15" fill="rgb(221,3,27)" fg:x="69515" fg:w="802"/><text x="66.6261%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="67.1294%" y="581" width="0.0124%" height="15" fill="rgb(228,180,5)" fg:x="70304" fg:w="13"/><text x="67.3794%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,231 samples, 1.18%)</title><rect x="66.3341%" y="613" width="1.1754%" height="15" fill="rgb(227,131,42)" fg:x="69471" fg:w="1231"/><text x="66.5841%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (385 samples, 0.37%)</title><rect x="67.1419%" y="597" width="0.3676%" height="15" fill="rgb(212,3,39)" fg:x="70317" fg:w="385"/><text x="67.3919%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,262 samples, 1.21%)</title><rect x="66.3150%" y="645" width="1.2050%" height="15" fill="rgb(226,45,5)" fg:x="69451" fg:w="1262"/><text x="66.5650%" y="655.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,262 samples, 1.21%)</title><rect x="66.3150%" y="629" width="1.2050%" height="15" fill="rgb(215,167,45)" fg:x="69451" fg:w="1262"/><text x="66.5650%" y="639.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.01%)</title><rect x="67.5095%" y="613" width="0.0105%" height="15" fill="rgb(250,218,53)" fg:x="70702" fg:w="11"/><text x="67.7595%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="67.6374%" y="453" width="0.0363%" height="15" fill="rgb(207,140,0)" fg:x="70836" fg:w="38"/><text x="67.8874%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (35 samples, 0.03%)</title><rect x="67.6403%" y="437" width="0.0334%" height="15" fill="rgb(238,133,51)" fg:x="70839" fg:w="35"/><text x="67.8903%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,433 samples, 1.37%)</title><rect x="66.3150%" y="661" width="1.3683%" height="15" fill="rgb(218,203,53)" fg:x="69451" fg:w="1433"/><text x="66.5650%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (171 samples, 0.16%)</title><rect x="67.5200%" y="645" width="0.1633%" height="15" fill="rgb(226,184,25)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (171 samples, 0.16%)</title><rect x="67.5200%" y="629" width="0.1633%" height="15" fill="rgb(231,121,21)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (171 samples, 0.16%)</title><rect x="67.5200%" y="613" width="0.1633%" height="15" fill="rgb(251,14,34)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (171 samples, 0.16%)</title><rect x="67.5200%" y="597" width="0.1633%" height="15" fill="rgb(249,193,11)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (171 samples, 0.16%)</title><rect x="67.5200%" y="581" width="0.1633%" height="15" fill="rgb(220,172,37)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (171 samples, 0.16%)</title><rect x="67.5200%" y="565" width="0.1633%" height="15" fill="rgb(231,229,43)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (171 samples, 0.16%)</title><rect x="67.5200%" y="549" width="0.1633%" height="15" fill="rgb(250,161,5)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (171 samples, 0.16%)</title><rect x="67.5200%" y="533" width="0.1633%" height="15" fill="rgb(218,225,18)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (171 samples, 0.16%)</title><rect x="67.5200%" y="517" width="0.1633%" height="15" fill="rgb(245,45,42)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (171 samples, 0.16%)</title><rect x="67.5200%" y="501" width="0.1633%" height="15" fill="rgb(211,115,1)" fg:x="70713" fg:w="171"/><text x="67.7700%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (48 samples, 0.05%)</title><rect x="67.6374%" y="485" width="0.0458%" height="15" fill="rgb(248,133,52)" fg:x="70836" fg:w="48"/><text x="67.8874%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (48 samples, 0.05%)</title><rect x="67.6374%" y="469" width="0.0458%" height="15" fill="rgb(238,100,21)" fg:x="70836" fg:w="48"/><text x="67.8874%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.21%)</title><rect x="67.6899%" y="421" width="0.2129%" height="15" fill="rgb(247,144,11)" fg:x="70891" fg:w="223"/><text x="67.9399%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.21%)</title><rect x="67.6899%" y="405" width="0.2129%" height="15" fill="rgb(206,164,16)" fg:x="70891" fg:w="223"/><text x="67.9399%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (211 samples, 0.20%)</title><rect x="67.7014%" y="389" width="0.2015%" height="15" fill="rgb(222,34,3)" fg:x="70903" fg:w="211"/><text x="67.9514%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (194 samples, 0.19%)</title><rect x="67.7176%" y="373" width="0.1852%" height="15" fill="rgb(248,82,4)" fg:x="70920" fg:w="194"/><text x="67.9676%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (194 samples, 0.19%)</title><rect x="67.7176%" y="357" width="0.1852%" height="15" fill="rgb(228,81,46)" fg:x="70920" fg:w="194"/><text x="67.9676%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (233 samples, 0.22%)</title><rect x="67.6833%" y="645" width="0.2225%" height="15" fill="rgb(227,67,47)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (233 samples, 0.22%)</title><rect x="67.6833%" y="629" width="0.2225%" height="15" fill="rgb(215,93,53)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (233 samples, 0.22%)</title><rect x="67.6833%" y="613" width="0.2225%" height="15" fill="rgb(248,194,39)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (233 samples, 0.22%)</title><rect x="67.6833%" y="597" width="0.2225%" height="15" fill="rgb(215,5,19)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="607.50"></text></g><g><title>value_trait::Builder::object (233 samples, 0.22%)</title><rect x="67.6833%" y="581" width="0.2225%" height="15" fill="rgb(226,215,51)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (233 samples, 0.22%)</title><rect x="67.6833%" y="565" width="0.2225%" height="15" fill="rgb(225,56,26)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (233 samples, 0.22%)</title><rect x="67.6833%" y="549" width="0.2225%" height="15" fill="rgb(222,75,29)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (233 samples, 0.22%)</title><rect x="67.6833%" y="533" width="0.2225%" height="15" fill="rgb(236,139,6)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (233 samples, 0.22%)</title><rect x="67.6833%" y="517" width="0.2225%" height="15" fill="rgb(223,137,36)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (233 samples, 0.22%)</title><rect x="67.6833%" y="501" width="0.2225%" height="15" fill="rgb(226,99,2)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="511.50"></text></g><g><title>alloc::alloc::alloc (233 samples, 0.22%)</title><rect x="67.6833%" y="485" width="0.2225%" height="15" fill="rgb(206,133,23)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="495.50"></text></g><g><title>__rg_alloc (233 samples, 0.22%)</title><rect x="67.6833%" y="469" width="0.2225%" height="15" fill="rgb(243,173,15)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (233 samples, 0.22%)</title><rect x="67.6833%" y="453" width="0.2225%" height="15" fill="rgb(228,69,28)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="463.50"></text></g><g><title>rust_alloc (233 samples, 0.22%)</title><rect x="67.6833%" y="437" width="0.2225%" height="15" fill="rgb(212,51,22)" fg:x="70884" fg:w="233"/><text x="67.9333%" y="447.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="67.9057%" y="501" width="0.0134%" height="15" fill="rgb(227,113,0)" fg:x="71117" fg:w="14"/><text x="68.1557%" y="511.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="67.9210%" y="469" width="0.0105%" height="15" fill="rgb(252,84,27)" fg:x="71133" fg:w="11"/><text x="68.1710%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="67.9392%" y="453" width="0.0105%" height="15" fill="rgb(223,145,39)" fg:x="71152" fg:w="11"/><text x="68.1892%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="67.9497%" y="453" width="0.0115%" height="15" fill="rgb(239,219,30)" fg:x="71163" fg:w="12"/><text x="68.1997%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="67.9497%" y="437" width="0.0115%" height="15" fill="rgb(224,196,39)" fg:x="71163" fg:w="12"/><text x="68.1997%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="67.9210%" y="501" width="0.0898%" height="15" fill="rgb(205,35,43)" fg:x="71133" fg:w="94"/><text x="68.1710%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="67.9210%" y="485" width="0.0898%" height="15" fill="rgb(228,201,21)" fg:x="71133" fg:w="94"/><text x="68.1710%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.08%)</title><rect x="67.9353%" y="469" width="0.0754%" height="15" fill="rgb(237,118,16)" fg:x="71148" fg:w="79"/><text x="68.1853%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (52 samples, 0.05%)</title><rect x="67.9611%" y="453" width="0.0497%" height="15" fill="rgb(241,17,19)" fg:x="71175" fg:w="52"/><text x="68.2111%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (52 samples, 0.05%)</title><rect x="67.9611%" y="437" width="0.0497%" height="15" fill="rgb(214,10,25)" fg:x="71175" fg:w="52"/><text x="68.2111%" y="447.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1157" width="1.6996%" height="15" fill="rgb(238,37,29)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1141" width="1.6996%" height="15" fill="rgb(253,83,25)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1151.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1125" width="1.6996%" height="15" fill="rgb(234,192,12)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1109" width="1.6996%" height="15" fill="rgb(241,216,45)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1119.50"></text></g><g><title>std::panicking::try (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1093" width="1.6996%" height="15" fill="rgb(242,22,33)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1077" width="1.6996%" height="15" fill="rgb(231,105,49)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1087.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1061" width="1.6996%" height="15" fill="rgb(218,204,15)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1045" width="1.6996%" height="15" fill="rgb(235,138,41)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1029" width="1.6996%" height="15" fill="rgb(246,0,9)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1039.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,780 samples, 1.70%)</title><rect x="66.3150%" y="1013" width="1.6996%" height="15" fill="rgb(210,74,4)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1023.50"></text></g><g><title>async_global_executor::reactor::block_on (1,780 samples, 1.70%)</title><rect x="66.3150%" y="997" width="1.6996%" height="15" fill="rgb(250,60,41)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="1007.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,780 samples, 1.70%)</title><rect x="66.3150%" y="981" width="1.6996%" height="15" fill="rgb(220,115,12)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="991.50"></text></g><g><title>async_io::driver::block_on (1,780 samples, 1.70%)</title><rect x="66.3150%" y="965" width="1.6996%" height="15" fill="rgb(237,100,13)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="975.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,780 samples, 1.70%)</title><rect x="66.3150%" y="949" width="1.6996%" height="15" fill="rgb(213,55,26)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,780 samples, 1.70%)</title><rect x="66.3150%" y="933" width="1.6996%" height="15" fill="rgb(216,17,4)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,780 samples, 1.70%)</title><rect x="66.3150%" y="917" width="1.6996%" height="15" fill="rgb(220,153,47)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="927.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,780 samples, 1.70%)</title><rect x="66.3150%" y="901" width="1.6996%" height="15" fill="rgb(215,131,9)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,780 samples, 1.70%)</title><rect x="66.3150%" y="885" width="1.6996%" height="15" fill="rgb(233,46,42)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,780 samples, 1.70%)</title><rect x="66.3150%" y="869" width="1.6996%" height="15" fill="rgb(226,86,7)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="879.50"></text></g><g><title>async_task::runnable::Runnable::run (1,780 samples, 1.70%)</title><rect x="66.3150%" y="853" width="1.6996%" height="15" fill="rgb(239,226,21)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,780 samples, 1.70%)</title><rect x="66.3150%" y="837" width="1.6996%" height="15" fill="rgb(244,137,22)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,780 samples, 1.70%)</title><rect x="66.3150%" y="821" width="1.6996%" height="15" fill="rgb(211,139,35)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,780 samples, 1.70%)</title><rect x="66.3150%" y="805" width="1.6996%" height="15" fill="rgb(214,62,50)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="815.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,780 samples, 1.70%)</title><rect x="66.3150%" y="789" width="1.6996%" height="15" fill="rgb(212,113,44)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="799.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,780 samples, 1.70%)</title><rect x="66.3150%" y="773" width="1.6996%" height="15" fill="rgb(226,150,43)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,780 samples, 1.70%)</title><rect x="66.3150%" y="757" width="1.6996%" height="15" fill="rgb(250,71,37)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,780 samples, 1.70%)</title><rect x="66.3150%" y="741" width="1.6996%" height="15" fill="rgb(219,76,19)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,780 samples, 1.70%)</title><rect x="66.3150%" y="725" width="1.6996%" height="15" fill="rgb(250,39,11)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,780 samples, 1.70%)</title><rect x="66.3150%" y="709" width="1.6996%" height="15" fill="rgb(230,64,31)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,780 samples, 1.70%)</title><rect x="66.3150%" y="693" width="1.6996%" height="15" fill="rgb(208,222,23)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,780 samples, 1.70%)</title><rect x="66.3150%" y="677" width="1.6996%" height="15" fill="rgb(227,125,18)" fg:x="69451" fg:w="1780"/><text x="66.5650%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (347 samples, 0.33%)</title><rect x="67.6833%" y="661" width="0.3313%" height="15" fill="rgb(234,210,9)" fg:x="70884" fg:w="347"/><text x="67.9333%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (114 samples, 0.11%)</title><rect x="67.9057%" y="645" width="0.1089%" height="15" fill="rgb(217,127,24)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (114 samples, 0.11%)</title><rect x="67.9057%" y="629" width="0.1089%" height="15" fill="rgb(239,141,48)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (114 samples, 0.11%)</title><rect x="67.9057%" y="613" width="0.1089%" height="15" fill="rgb(227,109,8)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.11%)</title><rect x="67.9057%" y="597" width="0.1089%" height="15" fill="rgb(235,184,23)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.11%)</title><rect x="67.9057%" y="581" width="0.1089%" height="15" fill="rgb(227,226,48)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="591.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 0.11%)</title><rect x="67.9057%" y="565" width="0.1089%" height="15" fill="rgb(206,150,11)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="575.50"></text></g><g><title>__rg_alloc (114 samples, 0.11%)</title><rect x="67.9057%" y="549" width="0.1089%" height="15" fill="rgb(254,2,33)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (114 samples, 0.11%)</title><rect x="67.9057%" y="533" width="0.1089%" height="15" fill="rgb(243,160,20)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="543.50"></text></g><g><title>rust_alloc (114 samples, 0.11%)</title><rect x="67.9057%" y="517" width="0.1089%" height="15" fill="rgb(218,208,30)" fg:x="71117" fg:w="114"/><text x="68.1557%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="68.1884%" y="933" width="0.0172%" height="15" fill="rgb(224,120,49)" fg:x="71413" fg:w="18"/><text x="68.4384%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (18 samples, 0.02%)</title><rect x="68.1884%" y="917" width="0.0172%" height="15" fill="rgb(246,12,2)" fg:x="71413" fg:w="18"/><text x="68.4384%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="68.1884%" y="901" width="0.0172%" height="15" fill="rgb(236,117,3)" fg:x="71413" fg:w="18"/><text x="68.4384%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="68.1884%" y="885" width="0.0172%" height="15" fill="rgb(216,128,52)" fg:x="71413" fg:w="18"/><text x="68.4384%" y="895.50"></text></g><g><title>__x64_sys_futex (54 samples, 0.05%)</title><rect x="68.2514%" y="773" width="0.0516%" height="15" fill="rgb(246,145,19)" fg:x="71479" fg:w="54"/><text x="68.5014%" y="783.50"></text></g><g><title>do_futex (48 samples, 0.05%)</title><rect x="68.2571%" y="757" width="0.0458%" height="15" fill="rgb(222,11,46)" fg:x="71485" fg:w="48"/><text x="68.5071%" y="767.50"></text></g><g><title>futex_wake (45 samples, 0.04%)</title><rect x="68.2600%" y="741" width="0.0430%" height="15" fill="rgb(245,82,36)" fg:x="71488" fg:w="45"/><text x="68.5100%" y="751.50"></text></g><g><title>get_futex_key (13 samples, 0.01%)</title><rect x="68.2905%" y="725" width="0.0124%" height="15" fill="rgb(250,73,51)" fg:x="71520" fg:w="13"/><text x="68.5405%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (83 samples, 0.08%)</title><rect x="68.3030%" y="773" width="0.0793%" height="15" fill="rgb(221,189,23)" fg:x="71533" fg:w="83"/><text x="68.5530%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (156 samples, 0.15%)</title><rect x="68.2457%" y="805" width="0.1490%" height="15" fill="rgb(210,33,7)" fg:x="71473" fg:w="156"/><text x="68.4957%" y="815.50"></text></g><g><title>do_syscall_64 (155 samples, 0.15%)</title><rect x="68.2466%" y="789" width="0.1480%" height="15" fill="rgb(210,107,22)" fg:x="71474" fg:w="155"/><text x="68.4966%" y="799.50"></text></g><g><title>syscall_trace_enter.constprop.0 (13 samples, 0.01%)</title><rect x="68.3822%" y="773" width="0.0124%" height="15" fill="rgb(222,116,37)" fg:x="71616" fg:w="13"/><text x="68.6322%" y="783.50"></text></g><g><title>__audit_syscall_entry (11 samples, 0.01%)</title><rect x="68.3841%" y="757" width="0.0105%" height="15" fill="rgb(254,17,48)" fg:x="71618" fg:w="11"/><text x="68.6341%" y="767.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (191 samples, 0.18%)</title><rect x="68.2170%" y="837" width="0.1824%" height="15" fill="rgb(224,36,32)" fg:x="71443" fg:w="191"/><text x="68.4670%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (176 samples, 0.17%)</title><rect x="68.2313%" y="821" width="0.1681%" height="15" fill="rgb(232,90,46)" fg:x="71458" fg:w="176"/><text x="68.4813%" y="831.50"></text></g><g><title>core::mem::drop (194 samples, 0.19%)</title><rect x="68.2151%" y="933" width="0.1852%" height="15" fill="rgb(241,66,40)" fg:x="71441" fg:w="194"/><text x="68.4651%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (194 samples, 0.19%)</title><rect x="68.2151%" y="917" width="0.1852%" height="15" fill="rgb(249,184,29)" fg:x="71441" fg:w="194"/><text x="68.4651%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (194 samples, 0.19%)</title><rect x="68.2151%" y="901" width="0.1852%" height="15" fill="rgb(231,181,1)" fg:x="71441" fg:w="194"/><text x="68.4651%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.19%)</title><rect x="68.2151%" y="885" width="0.1852%" height="15" fill="rgb(224,94,2)" fg:x="71441" fg:w="194"/><text x="68.4651%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (192 samples, 0.18%)</title><rect x="68.2170%" y="869" width="0.1833%" height="15" fill="rgb(229,170,15)" fg:x="71443" fg:w="192"/><text x="68.4670%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (192 samples, 0.18%)</title><rect x="68.2170%" y="853" width="0.1833%" height="15" fill="rgb(240,127,35)" fg:x="71443" fg:w="192"/><text x="68.4670%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (30 samples, 0.03%)</title><rect x="68.4003%" y="933" width="0.0286%" height="15" fill="rgb(248,196,34)" fg:x="71635" fg:w="30"/><text x="68.6503%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (27 samples, 0.03%)</title><rect x="68.4032%" y="917" width="0.0258%" height="15" fill="rgb(236,137,7)" fg:x="71638" fg:w="27"/><text x="68.6532%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="68.4032%" y="901" width="0.0258%" height="15" fill="rgb(235,127,16)" fg:x="71638" fg:w="27"/><text x="68.6532%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (27 samples, 0.03%)</title><rect x="68.4032%" y="885" width="0.0258%" height="15" fill="rgb(250,192,54)" fg:x="71638" fg:w="27"/><text x="68.6532%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.02%)</title><rect x="68.4042%" y="869" width="0.0248%" height="15" fill="rgb(218,98,20)" fg:x="71639" fg:w="26"/><text x="68.6542%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (26 samples, 0.02%)</title><rect x="68.4042%" y="853" width="0.0248%" height="15" fill="rgb(230,176,47)" fg:x="71639" fg:w="26"/><text x="68.6542%" y="863.50"></text></g><g><title>__perf_event_task_sched_out (24 samples, 0.02%)</title><rect x="68.6457%" y="709" width="0.0229%" height="15" fill="rgb(244,2,33)" fg:x="71892" fg:w="24"/><text x="68.8957%" y="719.50"></text></g><g><title>update_cfs_group (11 samples, 0.01%)</title><rect x="68.7212%" y="677" width="0.0105%" height="15" fill="rgb(231,100,17)" fg:x="71971" fg:w="11"/><text x="68.9712%" y="687.50"></text></g><g><title>__calc_delta (16 samples, 0.02%)</title><rect x="68.7603%" y="661" width="0.0153%" height="15" fill="rgb(245,23,12)" fg:x="72012" fg:w="16"/><text x="69.0103%" y="671.50"></text></g><g><title>cpuacct_charge (15 samples, 0.01%)</title><rect x="68.7832%" y="661" width="0.0143%" height="15" fill="rgb(249,55,22)" fg:x="72036" fg:w="15"/><text x="69.0332%" y="671.50"></text></g><g><title>update_curr (76 samples, 0.07%)</title><rect x="68.7317%" y="677" width="0.0726%" height="15" fill="rgb(207,134,9)" fg:x="71982" fg:w="76"/><text x="68.9817%" y="687.50"></text></g><g><title>dequeue_entity (139 samples, 0.13%)</title><rect x="68.6935%" y="693" width="0.1327%" height="15" fill="rgb(218,134,0)" fg:x="71942" fg:w="139"/><text x="68.9435%" y="703.50"></text></g><g><title>update_load_avg (23 samples, 0.02%)</title><rect x="68.8042%" y="677" width="0.0220%" height="15" fill="rgb(213,212,33)" fg:x="72058" fg:w="23"/><text x="69.0542%" y="687.50"></text></g><g><title>dequeue_task_fair (161 samples, 0.15%)</title><rect x="68.6734%" y="709" width="0.1537%" height="15" fill="rgb(252,106,18)" fg:x="71921" fg:w="161"/><text x="68.9234%" y="719.50"></text></g><g><title>__perf_event_task_sched_in (29 samples, 0.03%)</title><rect x="68.8634%" y="693" width="0.0277%" height="15" fill="rgb(208,126,42)" fg:x="72120" fg:w="29"/><text x="69.1134%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (29 samples, 0.03%)</title><rect x="68.8634%" y="677" width="0.0277%" height="15" fill="rgb(246,175,29)" fg:x="72120" fg:w="29"/><text x="69.1134%" y="687.50"></text></g><g><title>native_write_msr (28 samples, 0.03%)</title><rect x="68.8644%" y="661" width="0.0267%" height="15" fill="rgb(215,13,50)" fg:x="72121" fg:w="28"/><text x="69.1144%" y="671.50"></text></g><g><title>finish_task_switch.isra.0 (69 samples, 0.07%)</title><rect x="68.8272%" y="709" width="0.0659%" height="15" fill="rgb(216,172,15)" fg:x="72082" fg:w="69"/><text x="69.0772%" y="719.50"></text></g><g><title>pick_next_task_fair (16 samples, 0.02%)</title><rect x="68.8940%" y="709" width="0.0153%" height="15" fill="rgb(212,103,13)" fg:x="72152" fg:w="16"/><text x="69.1440%" y="719.50"></text></g><g><title>psi_group_change (67 samples, 0.06%)</title><rect x="68.9322%" y="693" width="0.0640%" height="15" fill="rgb(231,171,36)" fg:x="72192" fg:w="67"/><text x="69.1822%" y="703.50"></text></g><g><title>psi_task_switch (88 samples, 0.08%)</title><rect x="68.9169%" y="709" width="0.0840%" height="15" fill="rgb(250,123,20)" fg:x="72176" fg:w="88"/><text x="69.1669%" y="719.50"></text></g><g><title>put_prev_task_fair (19 samples, 0.02%)</title><rect x="69.0009%" y="709" width="0.0181%" height="15" fill="rgb(212,53,50)" fg:x="72264" fg:w="19"/><text x="69.2509%" y="719.50"></text></g><g><title>futex_wait_queue (482 samples, 0.46%)</title><rect x="68.5932%" y="757" width="0.4602%" height="15" fill="rgb(243,54,12)" fg:x="71837" fg:w="482"/><text x="68.8432%" y="767.50"></text></g><g><title>schedule (469 samples, 0.45%)</title><rect x="68.6056%" y="741" width="0.4478%" height="15" fill="rgb(234,101,34)" fg:x="71850" fg:w="469"/><text x="68.8556%" y="751.50"></text></g><g><title>__schedule (465 samples, 0.44%)</title><rect x="68.6095%" y="725" width="0.4440%" height="15" fill="rgb(254,67,22)" fg:x="71854" fg:w="465"/><text x="68.8595%" y="735.50"></text></g><g><title>update_rq_clock (30 samples, 0.03%)</title><rect x="69.0248%" y="709" width="0.0286%" height="15" fill="rgb(250,35,47)" fg:x="72289" fg:w="30"/><text x="69.2748%" y="719.50"></text></g><g><title>update_irq_load_avg (13 samples, 0.01%)</title><rect x="69.0410%" y="693" width="0.0124%" height="15" fill="rgb(226,126,38)" fg:x="72306" fg:w="13"/><text x="69.2910%" y="703.50"></text></g><g><title>futex_get_value_locked (11 samples, 0.01%)</title><rect x="69.0573%" y="741" width="0.0105%" height="15" fill="rgb(216,138,53)" fg:x="72323" fg:w="11"/><text x="69.3073%" y="751.50"></text></g><g><title>futex_q_lock (30 samples, 0.03%)</title><rect x="69.0678%" y="741" width="0.0286%" height="15" fill="rgb(246,199,43)" fg:x="72334" fg:w="30"/><text x="69.3178%" y="751.50"></text></g><g><title>__x64_sys_futex (582 samples, 0.56%)</title><rect x="68.5474%" y="805" width="0.5557%" height="15" fill="rgb(232,125,11)" fg:x="71789" fg:w="582"/><text x="68.7974%" y="815.50"></text></g><g><title>do_futex (569 samples, 0.54%)</title><rect x="68.5598%" y="789" width="0.5433%" height="15" fill="rgb(218,219,45)" fg:x="71802" fg:w="569"/><text x="68.8098%" y="799.50"></text></g><g><title>futex_wait (565 samples, 0.54%)</title><rect x="68.5636%" y="773" width="0.5395%" height="15" fill="rgb(216,102,54)" fg:x="71806" fg:w="565"/><text x="68.8136%" y="783.50"></text></g><g><title>futex_wait_setup (52 samples, 0.05%)</title><rect x="69.0535%" y="757" width="0.0497%" height="15" fill="rgb(250,228,7)" fg:x="72319" fg:w="52"/><text x="69.3035%" y="767.50"></text></g><g><title>__get_user_8 (13 samples, 0.01%)</title><rect x="69.2129%" y="757" width="0.0124%" height="15" fill="rgb(226,125,25)" fg:x="72486" fg:w="13"/><text x="69.4629%" y="767.50"></text></g><g><title>__rseq_handle_notify_resume (31 samples, 0.03%)</title><rect x="69.1996%" y="773" width="0.0296%" height="15" fill="rgb(224,165,27)" fg:x="72472" fg:w="31"/><text x="69.4496%" y="783.50"></text></g><g><title>exit_to_user_mode_prepare (60 samples, 0.06%)</title><rect x="69.1814%" y="789" width="0.0573%" height="15" fill="rgb(233,86,3)" fg:x="72453" fg:w="60"/><text x="69.4314%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (164 samples, 0.16%)</title><rect x="69.1069%" y="805" width="0.1566%" height="15" fill="rgb(228,116,20)" fg:x="72375" fg:w="164"/><text x="69.3569%" y="815.50"></text></g><g><title>syscall_exit_work (26 samples, 0.02%)</title><rect x="69.2387%" y="789" width="0.0248%" height="15" fill="rgb(209,192,17)" fg:x="72513" fg:w="26"/><text x="69.4887%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (776 samples, 0.74%)</title><rect x="68.5293%" y="837" width="0.7410%" height="15" fill="rgb(224,88,34)" fg:x="71770" fg:w="776"/><text x="68.7793%" y="847.50"></text></g><g><title>do_syscall_64 (771 samples, 0.74%)</title><rect x="68.5340%" y="821" width="0.7362%" height="15" fill="rgb(233,38,6)" fg:x="71775" fg:w="771"/><text x="68.7840%" y="831.50"></text></g><g><title>__GI___lll_lock_wait (806 samples, 0.77%)</title><rect x="68.5035%" y="853" width="0.7696%" height="15" fill="rgb(212,59,30)" fg:x="71743" fg:w="806"/><text x="68.7535%" y="863.50"></text></g><g><title>event_listener::Inner::lock (884 samples, 0.84%)</title><rect x="68.4299%" y="933" width="0.8441%" height="15" fill="rgb(213,80,3)" fg:x="71666" fg:w="884"/><text x="68.6799%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (883 samples, 0.84%)</title><rect x="68.4309%" y="917" width="0.8431%" height="15" fill="rgb(251,178,7)" fg:x="71667" fg:w="883"/><text x="68.6809%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (875 samples, 0.84%)</title><rect x="68.4385%" y="901" width="0.8355%" height="15" fill="rgb(213,154,26)" fg:x="71675" fg:w="875"/><text x="68.6885%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (871 samples, 0.83%)</title><rect x="68.4424%" y="885" width="0.8317%" height="15" fill="rgb(238,165,49)" fg:x="71679" fg:w="871"/><text x="68.6924%" y="895.50"></text></g><g><title>___pthread_mutex_lock (871 samples, 0.83%)</title><rect x="68.4424%" y="869" width="0.8317%" height="15" fill="rgb(248,91,46)" fg:x="71679" fg:w="871"/><text x="68.6924%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,172 samples, 1.12%)</title><rect x="68.1788%" y="949" width="1.1191%" height="15" fill="rgb(244,21,52)" fg:x="71403" fg:w="1172"/><text x="68.4288%" y="959.50"></text></g><g><title>event_listener::List::remove (25 samples, 0.02%)</title><rect x="69.2740%" y="933" width="0.0239%" height="15" fill="rgb(247,122,20)" fg:x="72550" fg:w="25"/><text x="69.5240%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.02%)</title><rect x="69.2807%" y="917" width="0.0172%" height="15" fill="rgb(218,27,9)" fg:x="72557" fg:w="18"/><text x="69.5307%" y="927.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="69.2807%" y="901" width="0.0172%" height="15" fill="rgb(246,7,6)" fg:x="72557" fg:w="18"/><text x="69.5307%" y="911.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="69.2807%" y="885" width="0.0172%" height="15" fill="rgb(227,135,54)" fg:x="72557" fg:w="18"/><text x="69.5307%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (47 samples, 0.04%)</title><rect x="69.3237%" y="933" width="0.0449%" height="15" fill="rgb(247,14,11)" fg:x="72602" fg:w="47"/><text x="69.5737%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (42 samples, 0.04%)</title><rect x="69.4765%" y="917" width="0.0401%" height="15" fill="rgb(206,149,34)" fg:x="72762" fg:w="42"/><text x="69.7265%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (42 samples, 0.04%)</title><rect x="69.4765%" y="901" width="0.0401%" height="15" fill="rgb(227,228,4)" fg:x="72762" fg:w="42"/><text x="69.7265%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (42 samples, 0.04%)</title><rect x="69.4765%" y="885" width="0.0401%" height="15" fill="rgb(238,218,28)" fg:x="72762" fg:w="42"/><text x="69.7265%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.04%)</title><rect x="69.4765%" y="869" width="0.0401%" height="15" fill="rgb(252,86,40)" fg:x="72762" fg:w="42"/><text x="69.7265%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (242 samples, 0.23%)</title><rect x="69.5213%" y="917" width="0.2311%" height="15" fill="rgb(251,225,11)" fg:x="72809" fg:w="242"/><text x="69.7713%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (242 samples, 0.23%)</title><rect x="69.5213%" y="901" width="0.2311%" height="15" fill="rgb(206,46,49)" fg:x="72809" fg:w="242"/><text x="69.7713%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (407 samples, 0.39%)</title><rect x="69.7524%" y="917" width="0.3886%" height="15" fill="rgb(245,128,24)" fg:x="73051" fg:w="407"/><text x="70.0024%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (406 samples, 0.39%)</title><rect x="69.7534%" y="901" width="0.3877%" height="15" fill="rgb(219,177,34)" fg:x="73052" fg:w="406"/><text x="70.0034%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (823 samples, 0.79%)</title><rect x="69.3686%" y="933" width="0.7858%" height="15" fill="rgb(218,60,48)" fg:x="72649" fg:w="823"/><text x="69.6186%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (14 samples, 0.01%)</title><rect x="70.1410%" y="917" width="0.0134%" height="15" fill="rgb(221,11,5)" fg:x="73458" fg:w="14"/><text x="70.3910%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.01%)</title><rect x="70.1410%" y="901" width="0.0134%" height="15" fill="rgb(220,148,13)" fg:x="73458" fg:w="14"/><text x="70.3910%" y="911.50"></text></g><g><title>__x64_sys_futex (33 samples, 0.03%)</title><rect x="70.1735%" y="773" width="0.0315%" height="15" fill="rgb(210,16,3)" fg:x="73492" fg:w="33"/><text x="70.4235%" y="783.50"></text></g><g><title>do_futex (32 samples, 0.03%)</title><rect x="70.1745%" y="757" width="0.0306%" height="15" fill="rgb(236,80,2)" fg:x="73493" fg:w="32"/><text x="70.4245%" y="767.50"></text></g><g><title>futex_wake (32 samples, 0.03%)</title><rect x="70.1745%" y="741" width="0.0306%" height="15" fill="rgb(239,129,19)" fg:x="73493" fg:w="32"/><text x="70.4245%" y="751.50"></text></g><g><title>wake_up_q (22 samples, 0.02%)</title><rect x="70.1840%" y="725" width="0.0210%" height="15" fill="rgb(220,106,35)" fg:x="73503" fg:w="22"/><text x="70.4340%" y="735.50"></text></g><g><title>try_to_wake_up (21 samples, 0.02%)</title><rect x="70.1850%" y="709" width="0.0201%" height="15" fill="rgb(252,139,45)" fg:x="73504" fg:w="21"/><text x="70.4350%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (46 samples, 0.04%)</title><rect x="70.1725%" y="805" width="0.0439%" height="15" fill="rgb(229,8,36)" fg:x="73491" fg:w="46"/><text x="70.4225%" y="815.50"></text></g><g><title>do_syscall_64 (45 samples, 0.04%)</title><rect x="70.1735%" y="789" width="0.0430%" height="15" fill="rgb(230,126,33)" fg:x="73492" fg:w="45"/><text x="70.4235%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (56 samples, 0.05%)</title><rect x="70.1639%" y="917" width="0.0535%" height="15" fill="rgb(239,140,21)" fg:x="73482" fg:w="56"/><text x="70.4139%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (56 samples, 0.05%)</title><rect x="70.1639%" y="901" width="0.0535%" height="15" fill="rgb(254,104,9)" fg:x="73482" fg:w="56"/><text x="70.4139%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="70.1639%" y="885" width="0.0535%" height="15" fill="rgb(239,52,14)" fg:x="73482" fg:w="56"/><text x="70.4139%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (55 samples, 0.05%)</title><rect x="70.1649%" y="869" width="0.0525%" height="15" fill="rgb(208,227,44)" fg:x="73483" fg:w="55"/><text x="70.4149%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (55 samples, 0.05%)</title><rect x="70.1649%" y="853" width="0.0525%" height="15" fill="rgb(246,18,19)" fg:x="73483" fg:w="55"/><text x="70.4149%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (55 samples, 0.05%)</title><rect x="70.1649%" y="837" width="0.0525%" height="15" fill="rgb(235,228,25)" fg:x="73483" fg:w="55"/><text x="70.4149%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (50 samples, 0.05%)</title><rect x="70.1697%" y="821" width="0.0477%" height="15" fill="rgb(240,156,20)" fg:x="73488" fg:w="50"/><text x="70.4197%" y="831.50"></text></g><g><title>ttwu_do_activate (17 samples, 0.02%)</title><rect x="70.2518%" y="565" width="0.0162%" height="15" fill="rgb(224,8,20)" fg:x="73574" fg:w="17"/><text x="70.5018%" y="575.50"></text></g><g><title>enqueue_task (17 samples, 0.02%)</title><rect x="70.2518%" y="549" width="0.0162%" height="15" fill="rgb(214,12,52)" fg:x="73574" fg:w="17"/><text x="70.5018%" y="559.50"></text></g><g><title>__x64_sys_futex (33 samples, 0.03%)</title><rect x="70.2403%" y="645" width="0.0315%" height="15" fill="rgb(211,220,47)" fg:x="73562" fg:w="33"/><text x="70.4903%" y="655.50"></text></g><g><title>do_futex (33 samples, 0.03%)</title><rect x="70.2403%" y="629" width="0.0315%" height="15" fill="rgb(250,173,5)" fg:x="73562" fg:w="33"/><text x="70.4903%" y="639.50"></text></g><g><title>futex_wake (33 samples, 0.03%)</title><rect x="70.2403%" y="613" width="0.0315%" height="15" fill="rgb(250,125,52)" fg:x="73562" fg:w="33"/><text x="70.4903%" y="623.50"></text></g><g><title>wake_up_q (25 samples, 0.02%)</title><rect x="70.2480%" y="597" width="0.0239%" height="15" fill="rgb(209,133,18)" fg:x="73570" fg:w="25"/><text x="70.4980%" y="607.50"></text></g><g><title>try_to_wake_up (25 samples, 0.02%)</title><rect x="70.2480%" y="581" width="0.0239%" height="15" fill="rgb(216,173,22)" fg:x="73570" fg:w="25"/><text x="70.4980%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (41 samples, 0.04%)</title><rect x="70.2394%" y="741" width="0.0391%" height="15" fill="rgb(205,3,22)" fg:x="73561" fg:w="41"/><text x="70.4894%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (41 samples, 0.04%)</title><rect x="70.2394%" y="725" width="0.0391%" height="15" fill="rgb(248,22,20)" fg:x="73561" fg:w="41"/><text x="70.4894%" y="735.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (41 samples, 0.04%)</title><rect x="70.2394%" y="709" width="0.0391%" height="15" fill="rgb(233,6,29)" fg:x="73561" fg:w="41"/><text x="70.4894%" y="719.50"></text></g><g><title>__GI___pthread_cond_signal (41 samples, 0.04%)</title><rect x="70.2394%" y="693" width="0.0391%" height="15" fill="rgb(240,22,54)" fg:x="73561" fg:w="41"/><text x="70.4894%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (40 samples, 0.04%)</title><rect x="70.2403%" y="677" width="0.0382%" height="15" fill="rgb(231,133,32)" fg:x="73562" fg:w="40"/><text x="70.4903%" y="687.50"></text></g><g><title>do_syscall_64 (40 samples, 0.04%)</title><rect x="70.2403%" y="661" width="0.0382%" height="15" fill="rgb(248,193,4)" fg:x="73562" fg:w="40"/><text x="70.4903%" y="671.50"></text></g><g><title>core::task::wake::Waker::wake (46 samples, 0.04%)</title><rect x="70.2356%" y="821" width="0.0439%" height="15" fill="rgb(211,178,46)" fg:x="73557" fg:w="46"/><text x="70.4856%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (46 samples, 0.04%)</title><rect x="70.2356%" y="805" width="0.0439%" height="15" fill="rgb(224,5,42)" fg:x="73557" fg:w="46"/><text x="70.4856%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (46 samples, 0.04%)</title><rect x="70.2356%" y="789" width="0.0439%" height="15" fill="rgb(239,176,25)" fg:x="73557" fg:w="46"/><text x="70.4856%" y="799.50"></text></g><g><title>parking::Unparker::unpark (45 samples, 0.04%)</title><rect x="70.2365%" y="773" width="0.0430%" height="15" fill="rgb(245,187,50)" fg:x="73558" fg:w="45"/><text x="70.4865%" y="783.50"></text></g><g><title>parking::Inner::unpark (44 samples, 0.04%)</title><rect x="70.2375%" y="757" width="0.0420%" height="15" fill="rgb(248,24,15)" fg:x="73559" fg:w="44"/><text x="70.4875%" y="767.50"></text></g><g><title>async_executor::State::notify (52 samples, 0.05%)</title><rect x="70.2317%" y="837" width="0.0497%" height="15" fill="rgb(205,166,13)" fg:x="73553" fg:w="52"/><text x="70.4817%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (58 samples, 0.06%)</title><rect x="70.2317%" y="853" width="0.0554%" height="15" fill="rgb(208,114,23)" fg:x="73553" fg:w="58"/><text x="70.4817%" y="863.50"></text></g><g><title>event_listener::List::notify (61 samples, 0.06%)</title><rect x="70.2317%" y="917" width="0.0582%" height="15" fill="rgb(239,127,18)" fg:x="73553" fg:w="61"/><text x="70.4817%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (61 samples, 0.06%)</title><rect x="70.2317%" y="901" width="0.0582%" height="15" fill="rgb(219,154,28)" fg:x="73553" fg:w="61"/><text x="70.4817%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (61 samples, 0.06%)</title><rect x="70.2317%" y="885" width="0.0582%" height="15" fill="rgb(225,157,23)" fg:x="73553" fg:w="61"/><text x="70.4817%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (61 samples, 0.06%)</title><rect x="70.2317%" y="869" width="0.0582%" height="15" fill="rgb(219,8,6)" fg:x="73553" fg:w="61"/><text x="70.4817%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,950 samples, 1.86%)</title><rect x="69.2979%" y="949" width="1.8619%" height="15" fill="rgb(212,47,6)" fg:x="72575" fg:w="1950"/><text x="69.5479%" y="959.50">a..</text></g><g><title>event_listener::Event::notify (1,053 samples, 1.01%)</title><rect x="70.1544%" y="933" width="1.0055%" height="15" fill="rgb(224,190,4)" fg:x="73472" fg:w="1053"/><text x="70.4044%" y="943.50"></text></g><g><title>event_listener::full_fence (911 samples, 0.87%)</title><rect x="70.2900%" y="917" width="0.8699%" height="15" fill="rgb(239,183,29)" fg:x="73614" fg:w="911"/><text x="70.5400%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (909 samples, 0.87%)</title><rect x="70.2919%" y="901" width="0.8680%" height="15" fill="rgb(213,57,7)" fg:x="73616" fg:w="909"/><text x="70.5419%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (909 samples, 0.87%)</title><rect x="70.2919%" y="885" width="0.8680%" height="15" fill="rgb(216,148,1)" fg:x="73616" fg:w="909"/><text x="70.5419%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (909 samples, 0.87%)</title><rect x="70.2919%" y="869" width="0.8680%" height="15" fill="rgb(236,182,29)" fg:x="73616" fg:w="909"/><text x="70.5419%" y="879.50"></text></g><g><title>__x64_sys_futex (29 samples, 0.03%)</title><rect x="71.2343%" y="757" width="0.0277%" height="15" fill="rgb(244,120,48)" fg:x="74603" fg:w="29"/><text x="71.4843%" y="767.50"></text></g><g><title>do_futex (25 samples, 0.02%)</title><rect x="71.2381%" y="741" width="0.0239%" height="15" fill="rgb(206,71,34)" fg:x="74607" fg:w="25"/><text x="71.4881%" y="751.50"></text></g><g><title>futex_wake (24 samples, 0.02%)</title><rect x="71.2391%" y="725" width="0.0229%" height="15" fill="rgb(242,32,6)" fg:x="74608" fg:w="24"/><text x="71.4891%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (68 samples, 0.06%)</title><rect x="71.2630%" y="757" width="0.0649%" height="15" fill="rgb(241,35,3)" fg:x="74633" fg:w="68"/><text x="71.5130%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (108 samples, 0.10%)</title><rect x="71.2296%" y="789" width="0.1031%" height="15" fill="rgb(222,62,19)" fg:x="74598" fg:w="108"/><text x="71.4796%" y="799.50"></text></g><g><title>do_syscall_64 (105 samples, 0.10%)</title><rect x="71.2324%" y="773" width="0.1003%" height="15" fill="rgb(223,110,41)" fg:x="74601" fg:w="105"/><text x="71.4824%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (169 samples, 0.16%)</title><rect x="71.1723%" y="901" width="0.1614%" height="15" fill="rgb(208,224,4)" fg:x="74538" fg:w="169"/><text x="71.4223%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (166 samples, 0.16%)</title><rect x="71.1751%" y="885" width="0.1585%" height="15" fill="rgb(241,137,19)" fg:x="74541" fg:w="166"/><text x="71.4251%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.16%)</title><rect x="71.1751%" y="869" width="0.1585%" height="15" fill="rgb(244,24,17)" fg:x="74541" fg:w="166"/><text x="71.4251%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (165 samples, 0.16%)</title><rect x="71.1761%" y="853" width="0.1575%" height="15" fill="rgb(245,178,49)" fg:x="74542" fg:w="165"/><text x="71.4261%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (161 samples, 0.15%)</title><rect x="71.1799%" y="837" width="0.1537%" height="15" fill="rgb(219,160,38)" fg:x="74546" fg:w="161"/><text x="71.4299%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (161 samples, 0.15%)</title><rect x="71.1799%" y="821" width="0.1537%" height="15" fill="rgb(228,137,14)" fg:x="74546" fg:w="161"/><text x="71.4299%" y="831.50"></text></g><g><title>__GI___lll_lock_wake (121 samples, 0.12%)</title><rect x="71.2181%" y="805" width="0.1155%" height="15" fill="rgb(237,134,11)" fg:x="74586" fg:w="121"/><text x="71.4681%" y="815.50"></text></g><g><title>futex_q_lock (11 samples, 0.01%)</title><rect x="71.4444%" y="709" width="0.0105%" height="15" fill="rgb(211,126,44)" fg:x="74823" fg:w="11"/><text x="71.6944%" y="719.50"></text></g><g><title>__x64_sys_futex (36 samples, 0.03%)</title><rect x="71.4310%" y="773" width="0.0344%" height="15" fill="rgb(226,171,33)" fg:x="74809" fg:w="36"/><text x="71.6810%" y="783.50"></text></g><g><title>do_futex (35 samples, 0.03%)</title><rect x="71.4320%" y="757" width="0.0334%" height="15" fill="rgb(253,99,13)" fg:x="74810" fg:w="35"/><text x="71.6820%" y="767.50"></text></g><g><title>futex_wait (35 samples, 0.03%)</title><rect x="71.4320%" y="741" width="0.0334%" height="15" fill="rgb(244,48,7)" fg:x="74810" fg:w="35"/><text x="71.6820%" y="751.50"></text></g><g><title>futex_wait_setup (29 samples, 0.03%)</title><rect x="71.4377%" y="725" width="0.0277%" height="15" fill="rgb(244,217,54)" fg:x="74816" fg:w="29"/><text x="71.6877%" y="735.50"></text></g><g><title>syscall_exit_to_user_mode (24 samples, 0.02%)</title><rect x="71.4654%" y="773" width="0.0229%" height="15" fill="rgb(224,15,18)" fg:x="74845" fg:w="24"/><text x="71.7154%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (63 samples, 0.06%)</title><rect x="71.4301%" y="805" width="0.0602%" height="15" fill="rgb(244,99,12)" fg:x="74808" fg:w="63"/><text x="71.6801%" y="815.50"></text></g><g><title>do_syscall_64 (62 samples, 0.06%)</title><rect x="71.4310%" y="789" width="0.0592%" height="15" fill="rgb(233,226,8)" fg:x="74809" fg:w="62"/><text x="71.6810%" y="799.50"></text></g><g><title>event_listener::Inner::lock (166 samples, 0.16%)</title><rect x="71.3336%" y="901" width="0.1585%" height="15" fill="rgb(229,211,3)" fg:x="74707" fg:w="166"/><text x="71.5836%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (166 samples, 0.16%)</title><rect x="71.3336%" y="885" width="0.1585%" height="15" fill="rgb(216,140,21)" fg:x="74707" fg:w="166"/><text x="71.5836%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (156 samples, 0.15%)</title><rect x="71.3432%" y="869" width="0.1490%" height="15" fill="rgb(234,122,30)" fg:x="74717" fg:w="156"/><text x="71.5932%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (148 samples, 0.14%)</title><rect x="71.3508%" y="853" width="0.1413%" height="15" fill="rgb(236,25,46)" fg:x="74725" fg:w="148"/><text x="71.6008%" y="863.50"></text></g><g><title>___pthread_mutex_lock (148 samples, 0.14%)</title><rect x="71.3508%" y="837" width="0.1413%" height="15" fill="rgb(217,52,54)" fg:x="74725" fg:w="148"/><text x="71.6008%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (93 samples, 0.09%)</title><rect x="71.4033%" y="821" width="0.0888%" height="15" fill="rgb(222,29,26)" fg:x="74780" fg:w="93"/><text x="71.6533%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (344 samples, 0.33%)</title><rect x="71.1713%" y="917" width="0.3285%" height="15" fill="rgb(216,177,29)" fg:x="74537" fg:w="344"/><text x="71.4213%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (378 samples, 0.36%)</title><rect x="71.1618%" y="949" width="0.3609%" height="15" fill="rgb(247,136,51)" fg:x="74527" fg:w="378"/><text x="71.4118%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (369 samples, 0.35%)</title><rect x="71.1704%" y="933" width="0.3523%" height="15" fill="rgb(231,47,47)" fg:x="74536" fg:w="369"/><text x="71.4204%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (24 samples, 0.02%)</title><rect x="71.4998%" y="917" width="0.0229%" height="15" fill="rgb(211,192,36)" fg:x="74881" fg:w="24"/><text x="71.7498%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="71.4998%" y="901" width="0.0229%" height="15" fill="rgb(229,156,32)" fg:x="74881" fg:w="24"/><text x="71.7498%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (24 samples, 0.02%)</title><rect x="71.4998%" y="885" width="0.0229%" height="15" fill="rgb(248,213,20)" fg:x="74881" fg:w="24"/><text x="71.7498%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (24 samples, 0.02%)</title><rect x="71.4998%" y="869" width="0.0229%" height="15" fill="rgb(217,64,7)" fg:x="74881" fg:w="24"/><text x="71.7498%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="71.5227%" y="933" width="0.0286%" height="15" fill="rgb(232,142,8)" fg:x="74905" fg:w="30"/><text x="71.7727%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (30 samples, 0.03%)</title><rect x="71.5227%" y="917" width="0.0286%" height="15" fill="rgb(224,92,44)" fg:x="74905" fg:w="30"/><text x="71.7727%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (30 samples, 0.03%)</title><rect x="71.5227%" y="901" width="0.0286%" height="15" fill="rgb(214,169,17)" fg:x="74905" fg:w="30"/><text x="71.7727%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (23 samples, 0.02%)</title><rect x="71.5513%" y="933" width="0.0220%" height="15" fill="rgb(210,59,37)" fg:x="74935" fg:w="23"/><text x="71.8013%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.02%)</title><rect x="71.5513%" y="917" width="0.0220%" height="15" fill="rgb(214,116,48)" fg:x="74935" fg:w="23"/><text x="71.8013%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="71.5513%" y="901" width="0.0220%" height="15" fill="rgb(244,191,6)" fg:x="74935" fg:w="23"/><text x="71.8013%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (23 samples, 0.02%)</title><rect x="71.5513%" y="885" width="0.0220%" height="15" fill="rgb(241,50,52)" fg:x="74935" fg:w="23"/><text x="71.8013%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (23 samples, 0.02%)</title><rect x="71.5513%" y="869" width="0.0220%" height="15" fill="rgb(236,75,39)" fg:x="74935" fg:w="23"/><text x="71.8013%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (23 samples, 0.02%)</title><rect x="71.5513%" y="853" width="0.0220%" height="15" fill="rgb(236,99,0)" fg:x="74935" fg:w="23"/><text x="71.8013%" y="863.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.03%)</title><rect x="71.5771%" y="933" width="0.0286%" height="15" fill="rgb(207,202,15)" fg:x="74962" fg:w="30"/><text x="71.8271%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="71.5771%" y="917" width="0.0286%" height="15" fill="rgb(233,207,14)" fg:x="74962" fg:w="30"/><text x="71.8271%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="71.5781%" y="901" width="0.0277%" height="15" fill="rgb(226,27,51)" fg:x="74963" fg:w="29"/><text x="71.8281%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="71.5781%" y="885" width="0.0277%" height="15" fill="rgb(206,104,42)" fg:x="74963" fg:w="29"/><text x="71.8281%" y="895.50"></text></g><g><title>___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="71.5800%" y="869" width="0.0258%" height="15" fill="rgb(212,225,4)" fg:x="74965" fg:w="27"/><text x="71.8300%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,650 samples, 3.49%)</title><rect x="68.1311%" y="965" width="3.4852%" height="15" fill="rgb(233,96,42)" fg:x="71353" fg:w="3650"/><text x="68.3811%" y="975.50">&lt;as..</text></g><g><title>event_listener::Event::listen (98 samples, 0.09%)</title><rect x="71.5227%" y="949" width="0.0936%" height="15" fill="rgb(229,21,32)" fg:x="74905" fg:w="98"/><text x="71.7727%" y="959.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.01%)</title><rect x="71.6163%" y="965" width="0.0143%" height="15" fill="rgb(226,216,24)" fg:x="75003" fg:w="15"/><text x="71.8663%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (809 samples, 0.77%)</title><rect x="71.6306%" y="965" width="0.7725%" height="15" fill="rgb(221,163,17)" fg:x="75018" fg:w="809"/><text x="71.8806%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (223 samples, 0.21%)</title><rect x="72.4212%" y="949" width="0.2129%" height="15" fill="rgb(216,216,42)" fg:x="75846" fg:w="223"/><text x="72.6712%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (716 samples, 0.68%)</title><rect x="72.6418%" y="917" width="0.6837%" height="15" fill="rgb(240,118,7)" fg:x="76077" fg:w="716"/><text x="72.8918%" y="927.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="73.3808%" y="741" width="0.0191%" height="15" fill="rgb(221,67,37)" fg:x="76851" fg:w="20"/><text x="73.6308%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="73.4601%" y="709" width="0.0124%" height="15" fill="rgb(241,32,44)" fg:x="76934" fg:w="13"/><text x="73.7101%" y="719.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="73.4601%" y="693" width="0.0124%" height="15" fill="rgb(235,204,43)" fg:x="76934" fg:w="13"/><text x="73.7101%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (78 samples, 0.07%)</title><rect x="73.4095%" y="741" width="0.0745%" height="15" fill="rgb(213,116,10)" fg:x="76881" fg:w="78"/><text x="73.6595%" y="751.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (64 samples, 0.06%)</title><rect x="73.4228%" y="725" width="0.0611%" height="15" fill="rgb(239,15,48)" fg:x="76895" fg:w="64"/><text x="73.6728%" y="735.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="73.4725%" y="709" width="0.0115%" height="15" fill="rgb(207,123,36)" fg:x="76947" fg:w="12"/><text x="73.7225%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (135 samples, 0.13%)</title><rect x="73.3751%" y="773" width="0.1289%" height="15" fill="rgb(209,103,30)" fg:x="76845" fg:w="135"/><text x="73.6251%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (135 samples, 0.13%)</title><rect x="73.3751%" y="757" width="0.1289%" height="15" fill="rgb(238,100,19)" fg:x="76845" fg:w="135"/><text x="73.6251%" y="767.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (20 samples, 0.02%)</title><rect x="73.4849%" y="741" width="0.0191%" height="15" fill="rgb(244,30,14)" fg:x="76960" fg:w="20"/><text x="73.7349%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (143 samples, 0.14%)</title><rect x="73.3751%" y="805" width="0.1365%" height="15" fill="rgb(249,174,6)" fg:x="76845" fg:w="143"/><text x="73.6251%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (143 samples, 0.14%)</title><rect x="73.3751%" y="789" width="0.1365%" height="15" fill="rgb(235,213,41)" fg:x="76845" fg:w="143"/><text x="73.6251%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (167 samples, 0.16%)</title><rect x="73.3541%" y="821" width="0.1595%" height="15" fill="rgb(213,118,6)" fg:x="76823" fg:w="167"/><text x="73.6041%" y="831.50"></text></g><g><title>rust_dealloc (181 samples, 0.17%)</title><rect x="73.3445%" y="837" width="0.1728%" height="15" fill="rgb(235,44,51)" fg:x="76813" fg:w="181"/><text x="73.5945%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,690 samples, 5.43%)</title><rect x="68.0872%" y="981" width="5.4331%" height="15" fill="rgb(217,9,53)" fg:x="71307" fg:w="5690"/><text x="68.3372%" y="991.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,170 samples, 1.12%)</title><rect x="72.4031%" y="965" width="1.1172%" height="15" fill="rgb(237,172,34)" fg:x="75827" fg:w="1170"/><text x="72.6531%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (928 samples, 0.89%)</title><rect x="72.6341%" y="949" width="0.8861%" height="15" fill="rgb(206,206,11)" fg:x="76069" fg:w="928"/><text x="72.8841%" y="959.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (928 samples, 0.89%)</title><rect x="72.6341%" y="933" width="0.8861%" height="15" fill="rgb(214,149,29)" fg:x="76069" fg:w="928"/><text x="72.8841%" y="943.50"></text></g><g><title>alloc::alloc::box_free (204 samples, 0.19%)</title><rect x="73.3254%" y="917" width="0.1948%" height="15" fill="rgb(208,123,3)" fg:x="76793" fg:w="204"/><text x="73.5754%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (204 samples, 0.19%)</title><rect x="73.3254%" y="901" width="0.1948%" height="15" fill="rgb(229,126,4)" fg:x="76793" fg:w="204"/><text x="73.5754%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (204 samples, 0.19%)</title><rect x="73.3254%" y="885" width="0.1948%" height="15" fill="rgb(222,92,36)" fg:x="76793" fg:w="204"/><text x="73.5754%" y="895.50"></text></g><g><title>__rg_dealloc (204 samples, 0.19%)</title><rect x="73.3254%" y="869" width="0.1948%" height="15" fill="rgb(216,39,41)" fg:x="76793" fg:w="204"/><text x="73.5754%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (204 samples, 0.19%)</title><rect x="73.3254%" y="853" width="0.1948%" height="15" fill="rgb(253,127,28)" fg:x="76793" fg:w="204"/><text x="73.5754%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,122 samples, 5.85%)</title><rect x="68.0451%" y="997" width="5.8456%" height="15" fill="rgb(249,152,51)" fg:x="71263" fg:w="6122"/><text x="68.2951%" y="1007.50">&lt;async_..</text></g><g><title>__memcpy_avx_unaligned_erms (388 samples, 0.37%)</title><rect x="73.5202%" y="981" width="0.3705%" height="15" fill="rgb(209,123,42)" fg:x="76997" fg:w="388"/><text x="73.7702%" y="991.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,566 samples, 6.27%)</title><rect x="68.0165%" y="1061" width="6.2695%" height="15" fill="rgb(241,118,22)" fg:x="71233" fg:w="6566"/><text x="68.2665%" y="1071.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,566 samples, 6.27%)</title><rect x="68.0165%" y="1045" width="6.2695%" height="15" fill="rgb(208,25,7)" fg:x="71233" fg:w="6566"/><text x="68.2665%" y="1055.50">&lt;tremor_..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,566 samples, 6.27%)</title><rect x="68.0165%" y="1029" width="6.2695%" height="15" fill="rgb(243,144,39)" fg:x="71233" fg:w="6566"/><text x="68.2665%" y="1039.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,566 samples, 6.27%)</title><rect x="68.0165%" y="1013" width="6.2695%" height="15" fill="rgb(250,50,5)" fg:x="71233" fg:w="6566"/><text x="68.2665%" y="1023.50">&lt;tremor_..</text></g><g><title>__memcpy_avx_unaligned_erms (414 samples, 0.40%)</title><rect x="73.8907%" y="997" width="0.3953%" height="15" fill="rgb(207,67,11)" fg:x="77385" fg:w="414"/><text x="74.1407%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,569 samples, 6.27%)</title><rect x="68.0146%" y="1157" width="6.2724%" height="15" fill="rgb(245,204,40)" fg:x="71231" fg:w="6569"/><text x="68.2646%" y="1167.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,567 samples, 6.27%)</title><rect x="68.0165%" y="1141" width="6.2705%" height="15" fill="rgb(238,228,24)" fg:x="71233" fg:w="6567"/><text x="68.2665%" y="1151.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,567 samples, 6.27%)</title><rect x="68.0165%" y="1125" width="6.2705%" height="15" fill="rgb(217,116,22)" fg:x="71233" fg:w="6567"/><text x="68.2665%" y="1135.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,567 samples, 6.27%)</title><rect x="68.0165%" y="1109" width="6.2705%" height="15" fill="rgb(234,98,12)" fg:x="71233" fg:w="6567"/><text x="68.2665%" y="1119.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,567 samples, 6.27%)</title><rect x="68.0165%" y="1093" width="6.2705%" height="15" fill="rgb(242,170,50)" fg:x="71233" fg:w="6567"/><text x="68.2665%" y="1103.50">&lt;core::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,567 samples, 6.27%)</title><rect x="68.0165%" y="1077" width="6.2705%" height="15" fill="rgb(235,7,5)" fg:x="71233" fg:w="6567"/><text x="68.2665%" y="1087.50">tremor_r..</text></g><g><title>tremor_common::time::nanotime (18 samples, 0.02%)</title><rect x="74.2870%" y="1157" width="0.0172%" height="15" fill="rgb(241,114,28)" fg:x="77800" fg:w="18"/><text x="74.5370%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (18 samples, 0.02%)</title><rect x="74.2870%" y="1141" width="0.0172%" height="15" fill="rgb(246,112,42)" fg:x="77800" fg:w="18"/><text x="74.5370%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (18 samples, 0.02%)</title><rect x="74.2870%" y="1125" width="0.0172%" height="15" fill="rgb(248,228,14)" fg:x="77800" fg:w="18"/><text x="74.5370%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (18 samples, 0.02%)</title><rect x="74.2870%" y="1109" width="0.0172%" height="15" fill="rgb(208,133,18)" fg:x="77800" fg:w="18"/><text x="74.5370%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (60 samples, 0.06%)</title><rect x="74.3042%" y="1157" width="0.0573%" height="15" fill="rgb(207,35,49)" fg:x="77818" fg:w="60"/><text x="74.5542%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.02%)</title><rect x="74.4674%" y="1045" width="0.0248%" height="15" fill="rgb(205,68,36)" fg:x="77989" fg:w="26"/><text x="74.7174%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.02%)</title><rect x="74.4674%" y="1029" width="0.0248%" height="15" fill="rgb(245,62,40)" fg:x="77989" fg:w="26"/><text x="74.7174%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.02%)</title><rect x="74.4674%" y="1013" width="0.0248%" height="15" fill="rgb(228,27,24)" fg:x="77989" fg:w="26"/><text x="74.7174%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.02%)</title><rect x="74.4674%" y="997" width="0.0248%" height="15" fill="rgb(253,19,12)" fg:x="77989" fg:w="26"/><text x="74.7174%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.02%)</title><rect x="74.4674%" y="981" width="0.0248%" height="15" fill="rgb(232,28,20)" fg:x="77989" fg:w="26"/><text x="74.7174%" y="991.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.02%)</title><rect x="74.4674%" y="965" width="0.0248%" height="15" fill="rgb(218,35,51)" fg:x="77989" fg:w="26"/><text x="74.7174%" y="975.50"></text></g><g><title>__rg_alloc (26 samples, 0.02%)</title><rect x="74.4674%" y="949" width="0.0248%" height="15" fill="rgb(212,90,40)" fg:x="77989" fg:w="26"/><text x="74.7174%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (26 samples, 0.02%)</title><rect x="74.4674%" y="933" width="0.0248%" height="15" fill="rgb(220,172,12)" fg:x="77989" fg:w="26"/><text x="74.7174%" y="943.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (65 samples, 0.06%)</title><rect x="74.4502%" y="1141" width="0.0621%" height="15" fill="rgb(226,159,20)" fg:x="77971" fg:w="65"/><text x="74.7002%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (47 samples, 0.04%)</title><rect x="74.4674%" y="1125" width="0.0449%" height="15" fill="rgb(234,205,16)" fg:x="77989" fg:w="47"/><text x="74.7174%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47 samples, 0.04%)</title><rect x="74.4674%" y="1109" width="0.0449%" height="15" fill="rgb(207,9,39)" fg:x="77989" fg:w="47"/><text x="74.7174%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47 samples, 0.04%)</title><rect x="74.4674%" y="1093" width="0.0449%" height="15" fill="rgb(249,143,15)" fg:x="77989" fg:w="47"/><text x="74.7174%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (47 samples, 0.04%)</title><rect x="74.4674%" y="1077" width="0.0449%" height="15" fill="rgb(253,133,29)" fg:x="77989" fg:w="47"/><text x="74.7174%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47 samples, 0.04%)</title><rect x="74.4674%" y="1061" width="0.0449%" height="15" fill="rgb(221,187,0)" fg:x="77989" fg:w="47"/><text x="74.7174%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.02%)</title><rect x="74.4923%" y="1045" width="0.0201%" height="15" fill="rgb(205,204,26)" fg:x="78015" fg:w="21"/><text x="74.7423%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="74.4923%" y="1029" width="0.0201%" height="15" fill="rgb(224,68,54)" fg:x="78015" fg:w="21"/><text x="74.7423%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.02%)</title><rect x="74.5123%" y="1141" width="0.0153%" height="15" fill="rgb(209,67,4)" fg:x="78036" fg:w="16"/><text x="74.7623%" y="1151.50"></text></g><g><title>core::ptr::write (16 samples, 0.02%)</title><rect x="74.5123%" y="1125" width="0.0153%" height="15" fill="rgb(228,229,18)" fg:x="78036" fg:w="16"/><text x="74.7623%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (174 samples, 0.17%)</title><rect x="74.3748%" y="1157" width="0.1661%" height="15" fill="rgb(231,89,13)" fg:x="77892" fg:w="174"/><text x="74.6248%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (23 samples, 0.02%)</title><rect x="74.5410%" y="1157" width="0.0220%" height="15" fill="rgb(210,182,18)" fg:x="78066" fg:w="23"/><text x="74.7910%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (185 samples, 0.18%)</title><rect x="74.7749%" y="997" width="0.1766%" height="15" fill="rgb(240,105,2)" fg:x="78311" fg:w="185"/><text x="75.0249%" y="1007.50"></text></g><g><title>core::mem::replace (185 samples, 0.18%)</title><rect x="74.7749%" y="981" width="0.1766%" height="15" fill="rgb(207,170,50)" fg:x="78311" fg:w="185"/><text x="75.0249%" y="991.50"></text></g><g><title>core::ptr::read (184 samples, 0.18%)</title><rect x="74.7759%" y="965" width="0.1757%" height="15" fill="rgb(232,133,24)" fg:x="78312" fg:w="184"/><text x="75.0259%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (315 samples, 0.30%)</title><rect x="74.7109%" y="1013" width="0.3008%" height="15" fill="rgb(235,166,27)" fg:x="78244" fg:w="315"/><text x="74.9609%" y="1023.50"></text></g><g><title>core::mem::drop (63 samples, 0.06%)</title><rect x="74.9515%" y="997" width="0.0602%" height="15" fill="rgb(209,19,13)" fg:x="78496" fg:w="63"/><text x="75.2015%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (63 samples, 0.06%)</title><rect x="74.9515%" y="981" width="0.0602%" height="15" fill="rgb(226,79,39)" fg:x="78496" fg:w="63"/><text x="75.2015%" y="991.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="75.0117%" y="997" width="0.0191%" height="15" fill="rgb(222,163,10)" fg:x="78559" fg:w="20"/><text x="75.2617%" y="1007.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="75.0528%" y="949" width="0.0143%" height="15" fill="rgb(214,44,19)" fg:x="78602" fg:w="15"/><text x="75.3028%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (328 samples, 0.31%)</title><rect x="75.0671%" y="933" width="0.3132%" height="15" fill="rgb(210,217,13)" fg:x="78617" fg:w="328"/><text x="75.3171%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (394 samples, 0.38%)</title><rect x="75.0117%" y="1013" width="0.3762%" height="15" fill="rgb(237,61,54)" fg:x="78559" fg:w="394"/><text x="75.2617%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (374 samples, 0.36%)</title><rect x="75.0308%" y="997" width="0.3571%" height="15" fill="rgb(226,184,24)" fg:x="78579" fg:w="374"/><text x="75.2808%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (374 samples, 0.36%)</title><rect x="75.0308%" y="981" width="0.3571%" height="15" fill="rgb(223,226,4)" fg:x="78579" fg:w="374"/><text x="75.2808%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (351 samples, 0.34%)</title><rect x="75.0528%" y="965" width="0.3352%" height="15" fill="rgb(210,26,41)" fg:x="78602" fg:w="351"/><text x="75.3028%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (336 samples, 0.32%)</title><rect x="75.0671%" y="949" width="0.3208%" height="15" fill="rgb(220,221,6)" fg:x="78617" fg:w="336"/><text x="75.3171%" y="959.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (41 samples, 0.04%)</title><rect x="75.3908%" y="965" width="0.0391%" height="15" fill="rgb(225,89,49)" fg:x="78956" fg:w="41"/><text x="75.6408%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (45 samples, 0.04%)</title><rect x="75.3879%" y="1013" width="0.0430%" height="15" fill="rgb(218,70,45)" fg:x="78953" fg:w="45"/><text x="75.6379%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (45 samples, 0.04%)</title><rect x="75.3879%" y="997" width="0.0430%" height="15" fill="rgb(238,166,21)" fg:x="78953" fg:w="45"/><text x="75.6379%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (42 samples, 0.04%)</title><rect x="75.3908%" y="981" width="0.0401%" height="15" fill="rgb(224,141,44)" fg:x="78956" fg:w="42"/><text x="75.6408%" y="991.50"></text></g><g><title>std::sync::poison::Flag::get (150 samples, 0.14%)</title><rect x="75.4414%" y="949" width="0.1432%" height="15" fill="rgb(230,12,49)" fg:x="79009" fg:w="150"/><text x="75.6914%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (150 samples, 0.14%)</title><rect x="75.4414%" y="933" width="0.1432%" height="15" fill="rgb(212,174,12)" fg:x="79009" fg:w="150"/><text x="75.6914%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (137 samples, 0.13%)</title><rect x="75.4538%" y="917" width="0.1308%" height="15" fill="rgb(246,67,9)" fg:x="79022" fg:w="137"/><text x="75.7038%" y="927.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (162 samples, 0.15%)</title><rect x="75.4414%" y="981" width="0.1547%" height="15" fill="rgb(239,35,23)" fg:x="79009" fg:w="162"/><text x="75.6914%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (162 samples, 0.15%)</title><rect x="75.4414%" y="965" width="0.1547%" height="15" fill="rgb(211,167,0)" fg:x="79009" fg:w="162"/><text x="75.6914%" y="975.50"></text></g><g><title>std::thread::panicking (12 samples, 0.01%)</title><rect x="75.5846%" y="949" width="0.0115%" height="15" fill="rgb(225,119,45)" fg:x="79159" fg:w="12"/><text x="75.8346%" y="959.50"></text></g><g><title>std::panicking::panicking (12 samples, 0.01%)</title><rect x="75.5846%" y="933" width="0.0115%" height="15" fill="rgb(210,162,6)" fg:x="79159" fg:w="12"/><text x="75.8346%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (12 samples, 0.01%)</title><rect x="75.5846%" y="917" width="0.0115%" height="15" fill="rgb(208,118,35)" fg:x="79159" fg:w="12"/><text x="75.8346%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="75.5846%" y="901" width="0.0115%" height="15" fill="rgb(239,4,53)" fg:x="79159" fg:w="12"/><text x="75.8346%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="75.5846%" y="885" width="0.0115%" height="15" fill="rgb(213,130,21)" fg:x="79159" fg:w="12"/><text x="75.8346%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,420 samples, 1.36%)</title><rect x="74.6269%" y="1029" width="1.3559%" height="15" fill="rgb(235,148,0)" fg:x="78156" fg:w="1420"/><text x="74.8769%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (578 samples, 0.55%)</title><rect x="75.4309%" y="1013" width="0.5519%" height="15" fill="rgb(244,224,18)" fg:x="78998" fg:w="578"/><text x="75.6809%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (567 samples, 0.54%)</title><rect x="75.4414%" y="997" width="0.5414%" height="15" fill="rgb(211,214,4)" fg:x="79009" fg:w="567"/><text x="75.6914%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (405 samples, 0.39%)</title><rect x="75.5961%" y="981" width="0.3867%" height="15" fill="rgb(206,119,25)" fg:x="79171" fg:w="405"/><text x="75.8461%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (397 samples, 0.38%)</title><rect x="75.6037%" y="965" width="0.3791%" height="15" fill="rgb(243,93,47)" fg:x="79179" fg:w="397"/><text x="75.8537%" y="975.50"></text></g><g><title>___pthread_mutex_lock (397 samples, 0.38%)</title><rect x="75.6037%" y="949" width="0.3791%" height="15" fill="rgb(224,194,6)" fg:x="79179" fg:w="397"/><text x="75.8537%" y="959.50"></text></g><g><title>ksys_write (15 samples, 0.01%)</title><rect x="75.9828%" y="757" width="0.0143%" height="15" fill="rgb(243,229,6)" fg:x="79576" fg:w="15"/><text x="76.2328%" y="767.50"></text></g><g><title>vfs_write (13 samples, 0.01%)</title><rect x="75.9847%" y="741" width="0.0124%" height="15" fill="rgb(207,23,50)" fg:x="79578" fg:w="13"/><text x="76.2347%" y="751.50"></text></g><g><title>eventfd_write (12 samples, 0.01%)</title><rect x="75.9856%" y="725" width="0.0115%" height="15" fill="rgb(253,192,32)" fg:x="79579" fg:w="12"/><text x="76.2356%" y="735.50"></text></g><g><title>__wake_up_common (11 samples, 0.01%)</title><rect x="75.9866%" y="709" width="0.0105%" height="15" fill="rgb(213,21,6)" fg:x="79580" fg:w="11"/><text x="76.2366%" y="719.50"></text></g><g><title>ep_poll_callback (11 samples, 0.01%)</title><rect x="75.9866%" y="693" width="0.0105%" height="15" fill="rgb(243,151,13)" fg:x="79580" fg:w="11"/><text x="76.2366%" y="703.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (18 samples, 0.02%)</title><rect x="75.9828%" y="1029" width="0.0172%" height="15" fill="rgb(233,165,41)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="1039.50"></text></g><g><title>event_listener::Event::notify (18 samples, 0.02%)</title><rect x="75.9828%" y="1013" width="0.0172%" height="15" fill="rgb(246,176,45)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="1023.50"></text></g><g><title>event_listener::List::notify (18 samples, 0.02%)</title><rect x="75.9828%" y="997" width="0.0172%" height="15" fill="rgb(217,170,52)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (18 samples, 0.02%)</title><rect x="75.9828%" y="981" width="0.0172%" height="15" fill="rgb(214,203,54)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (18 samples, 0.02%)</title><rect x="75.9828%" y="965" width="0.0172%" height="15" fill="rgb(248,215,49)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (18 samples, 0.02%)</title><rect x="75.9828%" y="949" width="0.0172%" height="15" fill="rgb(208,46,10)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (18 samples, 0.02%)</title><rect x="75.9828%" y="933" width="0.0172%" height="15" fill="rgb(254,5,31)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="943.50"></text></g><g><title>async_executor::State::notify (18 samples, 0.02%)</title><rect x="75.9828%" y="917" width="0.0172%" height="15" fill="rgb(222,104,33)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (18 samples, 0.02%)</title><rect x="75.9828%" y="901" width="0.0172%" height="15" fill="rgb(248,49,16)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (18 samples, 0.02%)</title><rect x="75.9828%" y="885" width="0.0172%" height="15" fill="rgb(232,198,41)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="895.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (18 samples, 0.02%)</title><rect x="75.9828%" y="869" width="0.0172%" height="15" fill="rgb(214,125,3)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="879.50"></text></g><g><title>async_io::reactor::Reactor::notify (18 samples, 0.02%)</title><rect x="75.9828%" y="853" width="0.0172%" height="15" fill="rgb(229,220,28)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="863.50"></text></g><g><title>polling::Poller::notify (18 samples, 0.02%)</title><rect x="75.9828%" y="837" width="0.0172%" height="15" fill="rgb(222,64,37)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="847.50"></text></g><g><title>polling::epoll::Poller::notify (18 samples, 0.02%)</title><rect x="75.9828%" y="821" width="0.0172%" height="15" fill="rgb(249,184,13)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="831.50"></text></g><g><title>__GI___write (18 samples, 0.02%)</title><rect x="75.9828%" y="805" width="0.0172%" height="15" fill="rgb(252,176,6)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18 samples, 0.02%)</title><rect x="75.9828%" y="789" width="0.0172%" height="15" fill="rgb(228,153,7)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="799.50"></text></g><g><title>do_syscall_64 (18 samples, 0.02%)</title><rect x="75.9828%" y="773" width="0.0172%" height="15" fill="rgb(242,193,5)" fg:x="79576" fg:w="18"/><text x="76.2328%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,519 samples, 1.45%)</title><rect x="74.5648%" y="1141" width="1.4504%" height="15" fill="rgb(232,140,9)" fg:x="78091" fg:w="1519"/><text x="74.8148%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,518 samples, 1.45%)</title><rect x="74.5658%" y="1125" width="1.4495%" height="15" fill="rgb(213,222,16)" fg:x="78092" fg:w="1518"/><text x="74.8158%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,518 samples, 1.45%)</title><rect x="74.5658%" y="1109" width="1.4495%" height="15" fill="rgb(222,75,50)" fg:x="78092" fg:w="1518"/><text x="74.8158%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,518 samples, 1.45%)</title><rect x="74.5658%" y="1093" width="1.4495%" height="15" fill="rgb(205,180,2)" fg:x="78092" fg:w="1518"/><text x="74.8158%" y="1103.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,518 samples, 1.45%)</title><rect x="74.5658%" y="1077" width="1.4495%" height="15" fill="rgb(216,34,7)" fg:x="78092" fg:w="1518"/><text x="74.8158%" y="1087.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,518 samples, 1.45%)</title><rect x="74.5658%" y="1061" width="1.4495%" height="15" fill="rgb(253,16,32)" fg:x="78092" fg:w="1518"/><text x="74.8158%" y="1071.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,518 samples, 1.45%)</title><rect x="74.5658%" y="1045" width="1.4495%" height="15" fill="rgb(208,97,28)" fg:x="78092" fg:w="1518"/><text x="74.8158%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.02%)</title><rect x="76.0000%" y="1029" width="0.0153%" height="15" fill="rgb(225,92,11)" fg:x="79594" fg:w="16"/><text x="76.2500%" y="1039.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.03%)</title><rect x="76.0869%" y="1061" width="0.0344%" height="15" fill="rgb(243,38,12)" fg:x="79685" fg:w="36"/><text x="76.3369%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (391 samples, 0.37%)</title><rect x="76.1976%" y="1045" width="0.3733%" height="15" fill="rgb(208,139,16)" fg:x="79801" fg:w="391"/><text x="76.4476%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (753 samples, 0.72%)</title><rect x="76.6101%" y="1029" width="0.7190%" height="15" fill="rgb(227,24,9)" fg:x="80233" fg:w="753"/><text x="76.8601%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (243 samples, 0.23%)</title><rect x="77.4179%" y="1013" width="0.2320%" height="15" fill="rgb(206,62,11)" fg:x="81079" fg:w="243"/><text x="77.6679%" y="1023.50"></text></g><g><title>core::ptr::write (243 samples, 0.23%)</title><rect x="77.4179%" y="997" width="0.2320%" height="15" fill="rgb(228,134,27)" fg:x="81079" fg:w="243"/><text x="77.6679%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (235 samples, 0.22%)</title><rect x="77.4255%" y="981" width="0.2244%" height="15" fill="rgb(205,55,33)" fg:x="81087" fg:w="235"/><text x="77.6755%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (333 samples, 0.32%)</title><rect x="77.6499%" y="1013" width="0.3180%" height="15" fill="rgb(243,75,43)" fg:x="81322" fg:w="333"/><text x="77.8999%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (333 samples, 0.32%)</title><rect x="77.6499%" y="997" width="0.3180%" height="15" fill="rgb(223,27,42)" fg:x="81322" fg:w="333"/><text x="77.8999%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (52 samples, 0.05%)</title><rect x="77.9679%" y="1013" width="0.0497%" height="15" fill="rgb(232,189,33)" fg:x="81655" fg:w="52"/><text x="78.2179%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (52 samples, 0.05%)</title><rect x="77.9679%" y="997" width="0.0497%" height="15" fill="rgb(210,9,39)" fg:x="81655" fg:w="52"/><text x="78.2179%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,527 samples, 1.46%)</title><rect x="76.5710%" y="1045" width="1.4580%" height="15" fill="rgb(242,85,26)" fg:x="80192" fg:w="1527"/><text x="76.8210%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (733 samples, 0.70%)</title><rect x="77.3291%" y="1029" width="0.6999%" height="15" fill="rgb(248,44,4)" fg:x="80986" fg:w="733"/><text x="77.5791%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (12 samples, 0.01%)</title><rect x="78.0176%" y="1013" width="0.0115%" height="15" fill="rgb(250,96,46)" fg:x="81707" fg:w="12"/><text x="78.2676%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_store (12 samples, 0.01%)</title><rect x="78.0176%" y="997" width="0.0115%" height="15" fill="rgb(229,116,26)" fg:x="81707" fg:w="12"/><text x="78.2676%" y="1007.50"></text></g><g><title>futex_wake_mark (14 samples, 0.01%)</title><rect x="78.1044%" y="837" width="0.0134%" height="15" fill="rgb(246,94,34)" fg:x="81798" fg:w="14"/><text x="78.3544%" y="847.50"></text></g><g><title>enqueue_task_fair (14 samples, 0.01%)</title><rect x="78.1293%" y="773" width="0.0134%" height="15" fill="rgb(251,73,21)" fg:x="81824" fg:w="14"/><text x="78.3793%" y="783.50"></text></g><g><title>enqueue_entity (12 samples, 0.01%)</title><rect x="78.1312%" y="757" width="0.0115%" height="15" fill="rgb(254,121,25)" fg:x="81826" fg:w="12"/><text x="78.3812%" y="767.50"></text></g><g><title>psi_group_change (17 samples, 0.02%)</title><rect x="78.1550%" y="757" width="0.0162%" height="15" fill="rgb(215,161,49)" fg:x="81851" fg:w="17"/><text x="78.4050%" y="767.50"></text></g><g><title>ttwu_do_activate (46 samples, 0.04%)</title><rect x="78.1283%" y="805" width="0.0439%" height="15" fill="rgb(221,43,13)" fg:x="81823" fg:w="46"/><text x="78.3783%" y="815.50"></text></g><g><title>enqueue_task (45 samples, 0.04%)</title><rect x="78.1293%" y="789" width="0.0430%" height="15" fill="rgb(249,5,37)" fg:x="81824" fg:w="45"/><text x="78.3793%" y="799.50"></text></g><g><title>psi_task_change (25 samples, 0.02%)</title><rect x="78.1484%" y="773" width="0.0239%" height="15" fill="rgb(226,25,44)" fg:x="81844" fg:w="25"/><text x="78.3984%" y="783.50"></text></g><g><title>ttwu_queue_wakelist (18 samples, 0.02%)</title><rect x="78.1761%" y="805" width="0.0172%" height="15" fill="rgb(238,189,16)" fg:x="81873" fg:w="18"/><text x="78.4261%" y="815.50"></text></g><g><title>__x64_sys_futex (118 samples, 0.11%)</title><rect x="78.0834%" y="885" width="0.1127%" height="15" fill="rgb(251,186,8)" fg:x="81776" fg:w="118"/><text x="78.3334%" y="895.50"></text></g><g><title>do_futex (116 samples, 0.11%)</title><rect x="78.0853%" y="869" width="0.1108%" height="15" fill="rgb(254,34,31)" fg:x="81778" fg:w="116"/><text x="78.3353%" y="879.50"></text></g><g><title>futex_wake (116 samples, 0.11%)</title><rect x="78.0853%" y="853" width="0.1108%" height="15" fill="rgb(225,215,27)" fg:x="81778" fg:w="116"/><text x="78.3353%" y="863.50"></text></g><g><title>wake_up_q (81 samples, 0.08%)</title><rect x="78.1188%" y="837" width="0.0773%" height="15" fill="rgb(221,192,48)" fg:x="81813" fg:w="81"/><text x="78.3688%" y="847.50"></text></g><g><title>try_to_wake_up (79 samples, 0.08%)</title><rect x="78.1207%" y="821" width="0.0754%" height="15" fill="rgb(219,137,20)" fg:x="81815" fg:w="79"/><text x="78.3707%" y="831.50"></text></g><g><title>syscall_exit_to_user_mode (35 samples, 0.03%)</title><rect x="78.1961%" y="885" width="0.0334%" height="15" fill="rgb(219,84,11)" fg:x="81894" fg:w="35"/><text x="78.4461%" y="895.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (156 samples, 0.15%)</title><rect x="78.0825%" y="917" width="0.1490%" height="15" fill="rgb(224,10,23)" fg:x="81775" fg:w="156"/><text x="78.3325%" y="927.50"></text></g><g><title>do_syscall_64 (156 samples, 0.15%)</title><rect x="78.0825%" y="901" width="0.1490%" height="15" fill="rgb(248,22,39)" fg:x="81775" fg:w="156"/><text x="78.3325%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (182 samples, 0.17%)</title><rect x="78.0586%" y="949" width="0.1738%" height="15" fill="rgb(212,154,20)" fg:x="81750" fg:w="182"/><text x="78.3086%" y="959.50"></text></g><g><title>__GI___lll_lock_wake (163 samples, 0.16%)</title><rect x="78.0768%" y="933" width="0.1556%" height="15" fill="rgb(236,199,50)" fg:x="81769" fg:w="163"/><text x="78.3268%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (186 samples, 0.18%)</title><rect x="78.0557%" y="1029" width="0.1776%" height="15" fill="rgb(211,9,17)" fg:x="81747" fg:w="186"/><text x="78.3057%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (183 samples, 0.17%)</title><rect x="78.0586%" y="1013" width="0.1747%" height="15" fill="rgb(243,216,36)" fg:x="81750" fg:w="183"/><text x="78.3086%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (183 samples, 0.17%)</title><rect x="78.0586%" y="997" width="0.1747%" height="15" fill="rgb(250,2,10)" fg:x="81750" fg:w="183"/><text x="78.3086%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (183 samples, 0.17%)</title><rect x="78.0586%" y="981" width="0.1747%" height="15" fill="rgb(226,50,48)" fg:x="81750" fg:w="183"/><text x="78.3086%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (183 samples, 0.17%)</title><rect x="78.0586%" y="965" width="0.1747%" height="15" fill="rgb(243,81,16)" fg:x="81750" fg:w="183"/><text x="78.3086%" y="975.50"></text></g><g><title>event_listener::Inner::lock (73 samples, 0.07%)</title><rect x="78.2438%" y="1029" width="0.0697%" height="15" fill="rgb(250,14,2)" fg:x="81944" fg:w="73"/><text x="78.4938%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (73 samples, 0.07%)</title><rect x="78.2438%" y="1013" width="0.0697%" height="15" fill="rgb(233,135,29)" fg:x="81944" fg:w="73"/><text x="78.4938%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (70 samples, 0.07%)</title><rect x="78.2467%" y="997" width="0.0668%" height="15" fill="rgb(224,64,43)" fg:x="81947" fg:w="70"/><text x="78.4967%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (67 samples, 0.06%)</title><rect x="78.2496%" y="981" width="0.0640%" height="15" fill="rgb(238,84,13)" fg:x="81950" fg:w="67"/><text x="78.4996%" y="991.50"></text></g><g><title>___pthread_mutex_lock (67 samples, 0.06%)</title><rect x="78.2496%" y="965" width="0.0640%" height="15" fill="rgb(253,48,26)" fg:x="81950" fg:w="67"/><text x="78.4996%" y="975.50"></text></g><g><title>syscall_exit_to_user_mode (14 samples, 0.01%)</title><rect x="78.3498%" y="805" width="0.0134%" height="15" fill="rgb(205,223,31)" fg:x="82055" fg:w="14"/><text x="78.5998%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.02%)</title><rect x="78.3412%" y="837" width="0.0248%" height="15" fill="rgb(221,41,32)" fg:x="82046" fg:w="26"/><text x="78.5912%" y="847.50"></text></g><g><title>do_syscall_64 (26 samples, 0.02%)</title><rect x="78.3412%" y="821" width="0.0248%" height="15" fill="rgb(213,158,31)" fg:x="82046" fg:w="26"/><text x="78.5912%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (45 samples, 0.04%)</title><rect x="78.3250%" y="933" width="0.0430%" height="15" fill="rgb(245,126,43)" fg:x="82029" fg:w="45"/><text x="78.5750%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="78.3250%" y="917" width="0.0430%" height="15" fill="rgb(227,7,22)" fg:x="82029" fg:w="45"/><text x="78.5750%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (45 samples, 0.04%)</title><rect x="78.3250%" y="901" width="0.0430%" height="15" fill="rgb(252,90,44)" fg:x="82029" fg:w="45"/><text x="78.5750%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (45 samples, 0.04%)</title><rect x="78.3250%" y="885" width="0.0430%" height="15" fill="rgb(253,91,0)" fg:x="82029" fg:w="45"/><text x="78.5750%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (45 samples, 0.04%)</title><rect x="78.3250%" y="869" width="0.0430%" height="15" fill="rgb(252,175,49)" fg:x="82029" fg:w="45"/><text x="78.5750%" y="879.50"></text></g><g><title>__GI___lll_lock_wake (31 samples, 0.03%)</title><rect x="78.3384%" y="853" width="0.0296%" height="15" fill="rgb(246,150,1)" fg:x="82043" fg:w="31"/><text x="78.5884%" y="863.50"></text></g><g><title>__fdget_pos (13 samples, 0.01%)</title><rect x="78.3880%" y="773" width="0.0124%" height="15" fill="rgb(241,192,25)" fg:x="82095" fg:w="13"/><text x="78.6380%" y="783.50"></text></g><g><title>__fget_light (13 samples, 0.01%)</title><rect x="78.3880%" y="757" width="0.0124%" height="15" fill="rgb(239,187,11)" fg:x="82095" fg:w="13"/><text x="78.6380%" y="767.50"></text></g><g><title>ttwu_do_activate (25 samples, 0.02%)</title><rect x="78.4224%" y="645" width="0.0239%" height="15" fill="rgb(218,202,51)" fg:x="82131" fg:w="25"/><text x="78.6724%" y="655.50"></text></g><g><title>enqueue_task (25 samples, 0.02%)</title><rect x="78.4224%" y="629" width="0.0239%" height="15" fill="rgb(225,176,8)" fg:x="82131" fg:w="25"/><text x="78.6724%" y="639.50"></text></g><g><title>psi_task_change (17 samples, 0.02%)</title><rect x="78.4300%" y="613" width="0.0162%" height="15" fill="rgb(219,122,41)" fg:x="82139" fg:w="17"/><text x="78.6800%" y="623.50"></text></g><g><title>psi_group_change (16 samples, 0.02%)</title><rect x="78.4310%" y="597" width="0.0153%" height="15" fill="rgb(248,140,20)" fg:x="82140" fg:w="16"/><text x="78.6810%" y="607.50"></text></g><g><title>__wake_up_common (52 samples, 0.05%)</title><rect x="78.4081%" y="693" width="0.0497%" height="15" fill="rgb(245,41,37)" fg:x="82116" fg:w="52"/><text x="78.6581%" y="703.50"></text></g><g><title>autoremove_wake_function (50 samples, 0.05%)</title><rect x="78.4100%" y="677" width="0.0477%" height="15" fill="rgb(235,82,39)" fg:x="82118" fg:w="50"/><text x="78.6600%" y="687.50"></text></g><g><title>try_to_wake_up (48 samples, 0.05%)</title><rect x="78.4119%" y="661" width="0.0458%" height="15" fill="rgb(230,108,42)" fg:x="82120" fg:w="48"/><text x="78.6619%" y="671.50"></text></g><g><title>__wake_up_common_lock (54 samples, 0.05%)</title><rect x="78.4071%" y="709" width="0.0516%" height="15" fill="rgb(215,150,50)" fg:x="82115" fg:w="54"/><text x="78.6571%" y="719.50"></text></g><g><title>__wake_up_common (63 samples, 0.06%)</title><rect x="78.4024%" y="741" width="0.0602%" height="15" fill="rgb(233,212,5)" fg:x="82110" fg:w="63"/><text x="78.6524%" y="751.50"></text></g><g><title>ep_poll_callback (62 samples, 0.06%)</title><rect x="78.4033%" y="725" width="0.0592%" height="15" fill="rgb(245,80,22)" fg:x="82111" fg:w="62"/><text x="78.6533%" y="735.50"></text></g><g><title>eventfd_write (71 samples, 0.07%)</title><rect x="78.4014%" y="757" width="0.0678%" height="15" fill="rgb(238,129,16)" fg:x="82109" fg:w="71"/><text x="78.6514%" y="767.50"></text></g><g><title>ksys_write (87 samples, 0.08%)</title><rect x="78.3871%" y="789" width="0.0831%" height="15" fill="rgb(240,19,0)" fg:x="82094" fg:w="87"/><text x="78.6371%" y="799.50"></text></g><g><title>vfs_write (73 samples, 0.07%)</title><rect x="78.4004%" y="773" width="0.0697%" height="15" fill="rgb(232,42,35)" fg:x="82108" fg:w="73"/><text x="78.6504%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.02%)</title><rect x="78.4701%" y="789" width="0.0172%" height="15" fill="rgb(223,130,24)" fg:x="82181" fg:w="18"/><text x="78.7201%" y="799.50"></text></g><g><title>async_io::reactor::Reactor::notify (114 samples, 0.11%)</title><rect x="78.3794%" y="885" width="0.1089%" height="15" fill="rgb(237,16,22)" fg:x="82086" fg:w="114"/><text x="78.6294%" y="895.50"></text></g><g><title>polling::Poller::notify (114 samples, 0.11%)</title><rect x="78.3794%" y="869" width="0.1089%" height="15" fill="rgb(248,192,20)" fg:x="82086" fg:w="114"/><text x="78.6294%" y="879.50"></text></g><g><title>polling::epoll::Poller::notify (111 samples, 0.11%)</title><rect x="78.3823%" y="853" width="0.1060%" height="15" fill="rgb(233,167,2)" fg:x="82089" fg:w="111"/><text x="78.6323%" y="863.50"></text></g><g><title>__GI___write (111 samples, 0.11%)</title><rect x="78.3823%" y="837" width="0.1060%" height="15" fill="rgb(252,71,44)" fg:x="82089" fg:w="111"/><text x="78.6323%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (108 samples, 0.10%)</title><rect x="78.3852%" y="821" width="0.1031%" height="15" fill="rgb(238,37,47)" fg:x="82092" fg:w="108"/><text x="78.6352%" y="831.50"></text></g><g><title>do_syscall_64 (108 samples, 0.10%)</title><rect x="78.3852%" y="805" width="0.1031%" height="15" fill="rgb(214,202,54)" fg:x="82092" fg:w="108"/><text x="78.6352%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (15 samples, 0.01%)</title><rect x="78.5017%" y="853" width="0.0143%" height="15" fill="rgb(254,165,40)" fg:x="82214" fg:w="15"/><text x="78.7517%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="78.5017%" y="837" width="0.0143%" height="15" fill="rgb(246,173,38)" fg:x="82214" fg:w="15"/><text x="78.7517%" y="847.50"></text></g><g><title>futex_wake_mark (20 samples, 0.02%)</title><rect x="78.5981%" y="709" width="0.0191%" height="15" fill="rgb(215,3,27)" fg:x="82315" fg:w="20"/><text x="78.8481%" y="719.50"></text></g><g><title>select_task_rq_fair (16 samples, 0.02%)</title><rect x="78.6382%" y="677" width="0.0153%" height="15" fill="rgb(239,169,51)" fg:x="82357" fg:w="16"/><text x="78.8882%" y="687.50"></text></g><g><title>enqueue_task_fair (64 samples, 0.06%)</title><rect x="78.6583%" y="645" width="0.0611%" height="15" fill="rgb(212,5,25)" fg:x="82378" fg:w="64"/><text x="78.9083%" y="655.50"></text></g><g><title>enqueue_entity (45 samples, 0.04%)</title><rect x="78.6764%" y="629" width="0.0430%" height="15" fill="rgb(243,45,17)" fg:x="82397" fg:w="45"/><text x="78.9264%" y="639.50"></text></g><g><title>psi_group_change (12 samples, 0.01%)</title><rect x="78.7194%" y="645" width="0.0115%" height="15" fill="rgb(242,97,9)" fg:x="82442" fg:w="12"/><text x="78.9694%" y="655.50"></text></g><g><title>psi_group_change (33 samples, 0.03%)</title><rect x="78.7385%" y="629" width="0.0315%" height="15" fill="rgb(228,71,31)" fg:x="82462" fg:w="33"/><text x="78.9885%" y="639.50"></text></g><g><title>ttwu_do_activate (124 samples, 0.12%)</title><rect x="78.6535%" y="677" width="0.1184%" height="15" fill="rgb(252,184,16)" fg:x="82373" fg:w="124"/><text x="78.9035%" y="687.50"></text></g><g><title>enqueue_task (122 samples, 0.12%)</title><rect x="78.6554%" y="661" width="0.1165%" height="15" fill="rgb(236,169,46)" fg:x="82375" fg:w="122"/><text x="78.9054%" y="671.50"></text></g><g><title>psi_task_change (43 samples, 0.04%)</title><rect x="78.7308%" y="645" width="0.0411%" height="15" fill="rgb(207,17,47)" fg:x="82454" fg:w="43"/><text x="78.9808%" y="655.50"></text></g><g><title>ttwu_queue_wakelist (23 samples, 0.02%)</title><rect x="78.7786%" y="677" width="0.0220%" height="15" fill="rgb(206,201,28)" fg:x="82504" fg:w="23"/><text x="79.0286%" y="687.50"></text></g><g><title>__x64_sys_futex (262 samples, 0.25%)</title><rect x="78.5580%" y="757" width="0.2502%" height="15" fill="rgb(224,184,23)" fg:x="82273" fg:w="262"/><text x="78.8080%" y="767.50"></text></g><g><title>do_futex (257 samples, 0.25%)</title><rect x="78.5628%" y="741" width="0.2454%" height="15" fill="rgb(208,139,48)" fg:x="82278" fg:w="257"/><text x="78.8128%" y="751.50"></text></g><g><title>futex_wake (256 samples, 0.24%)</title><rect x="78.5637%" y="725" width="0.2444%" height="15" fill="rgb(208,130,10)" fg:x="82279" fg:w="256"/><text x="78.8137%" y="735.50"></text></g><g><title>wake_up_q (199 samples, 0.19%)</title><rect x="78.6181%" y="709" width="0.1900%" height="15" fill="rgb(211,213,45)" fg:x="82336" fg:w="199"/><text x="78.8681%" y="719.50"></text></g><g><title>try_to_wake_up (196 samples, 0.19%)</title><rect x="78.6210%" y="693" width="0.1871%" height="15" fill="rgb(235,100,30)" fg:x="82339" fg:w="196"/><text x="78.8710%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (60 samples, 0.06%)</title><rect x="78.8091%" y="757" width="0.0573%" height="15" fill="rgb(206,144,31)" fg:x="82536" fg:w="60"/><text x="79.0591%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (330 samples, 0.32%)</title><rect x="78.5551%" y="789" width="0.3151%" height="15" fill="rgb(224,200,26)" fg:x="82270" fg:w="330"/><text x="78.8051%" y="799.50"></text></g><g><title>do_syscall_64 (329 samples, 0.31%)</title><rect x="78.5561%" y="773" width="0.3141%" height="15" fill="rgb(247,104,53)" fg:x="82271" fg:w="329"/><text x="78.8061%" y="783.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (375 samples, 0.36%)</title><rect x="78.5160%" y="853" width="0.3581%" height="15" fill="rgb(220,14,17)" fg:x="82229" fg:w="375"/><text x="78.7660%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (375 samples, 0.36%)</title><rect x="78.5160%" y="837" width="0.3581%" height="15" fill="rgb(230,140,40)" fg:x="82229" fg:w="375"/><text x="78.7660%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (375 samples, 0.36%)</title><rect x="78.5160%" y="821" width="0.3581%" height="15" fill="rgb(229,2,41)" fg:x="82229" fg:w="375"/><text x="78.7660%" y="831.50"></text></g><g><title>__GI___pthread_cond_signal (375 samples, 0.36%)</title><rect x="78.5160%" y="805" width="0.3581%" height="15" fill="rgb(232,89,16)" fg:x="82229" fg:w="375"/><text x="78.7660%" y="815.50"></text></g><g><title>parking::Unparker::unpark (415 samples, 0.40%)</title><rect x="78.4902%" y="885" width="0.3963%" height="15" fill="rgb(247,59,52)" fg:x="82202" fg:w="415"/><text x="78.7402%" y="895.50"></text></g><g><title>parking::Inner::unpark (407 samples, 0.39%)</title><rect x="78.4978%" y="869" width="0.3886%" height="15" fill="rgb(226,110,21)" fg:x="82210" fg:w="407"/><text x="78.7478%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="78.8740%" y="853" width="0.0124%" height="15" fill="rgb(224,176,43)" fg:x="82604" fg:w="13"/><text x="79.1240%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="78.8740%" y="837" width="0.0124%" height="15" fill="rgb(221,73,6)" fg:x="82604" fg:w="13"/><text x="79.1240%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="78.8740%" y="821" width="0.0124%" height="15" fill="rgb(232,78,19)" fg:x="82604" fg:w="13"/><text x="79.1240%" y="831.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="78.8740%" y="805" width="0.0124%" height="15" fill="rgb(233,112,48)" fg:x="82604" fg:w="13"/><text x="79.1240%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (537 samples, 0.51%)</title><rect x="78.3775%" y="901" width="0.5128%" height="15" fill="rgb(243,131,47)" fg:x="82084" fg:w="537"/><text x="78.6275%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (553 samples, 0.53%)</title><rect x="78.3766%" y="933" width="0.5280%" height="15" fill="rgb(226,51,1)" fg:x="82083" fg:w="553"/><text x="78.6266%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (552 samples, 0.53%)</title><rect x="78.3775%" y="917" width="0.5271%" height="15" fill="rgb(247,58,7)" fg:x="82084" fg:w="552"/><text x="78.6275%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="78.8903%" y="901" width="0.0143%" height="15" fill="rgb(209,7,32)" fg:x="82621" fg:w="15"/><text x="79.1403%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="78.8903%" y="885" width="0.0143%" height="15" fill="rgb(209,39,41)" fg:x="82621" fg:w="15"/><text x="79.1403%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="78.8903%" y="869" width="0.0143%" height="15" fill="rgb(226,182,46)" fg:x="82621" fg:w="15"/><text x="79.1403%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="78.8903%" y="853" width="0.0143%" height="15" fill="rgb(230,219,10)" fg:x="82621" fg:w="15"/><text x="79.1403%" y="863.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.01%)</title><rect x="78.9342%" y="821" width="0.0105%" height="15" fill="rgb(227,175,30)" fg:x="82667" fg:w="11"/><text x="79.1842%" y="831.50"></text></g><g><title>do_futex (11 samples, 0.01%)</title><rect x="78.9342%" y="805" width="0.0105%" height="15" fill="rgb(217,2,50)" fg:x="82667" fg:w="11"/><text x="79.1842%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="78.9323%" y="853" width="0.0201%" height="15" fill="rgb(229,160,0)" fg:x="82665" fg:w="21"/><text x="79.1823%" y="863.50"></text></g><g><title>do_syscall_64 (20 samples, 0.02%)</title><rect x="78.9332%" y="837" width="0.0191%" height="15" fill="rgb(207,78,37)" fg:x="82666" fg:w="20"/><text x="79.1832%" y="847.50"></text></g><g><title>async_executor::State::notify (661 samples, 0.63%)</title><rect x="78.3231%" y="949" width="0.6312%" height="15" fill="rgb(225,57,0)" fg:x="82027" fg:w="661"/><text x="78.5731%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.05%)</title><rect x="78.9046%" y="933" width="0.0497%" height="15" fill="rgb(232,154,2)" fg:x="82636" fg:w="52"/><text x="79.1546%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (51 samples, 0.05%)</title><rect x="78.9056%" y="917" width="0.0487%" height="15" fill="rgb(241,212,25)" fg:x="82637" fg:w="51"/><text x="79.1556%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (48 samples, 0.05%)</title><rect x="78.9084%" y="901" width="0.0458%" height="15" fill="rgb(226,69,20)" fg:x="82640" fg:w="48"/><text x="79.1584%" y="911.50"></text></g><g><title>___pthread_mutex_lock (48 samples, 0.05%)</title><rect x="78.9084%" y="885" width="0.0458%" height="15" fill="rgb(247,184,54)" fg:x="82640" fg:w="48"/><text x="79.1584%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (28 samples, 0.03%)</title><rect x="78.9275%" y="869" width="0.0267%" height="15" fill="rgb(210,145,0)" fg:x="82660" fg:w="28"/><text x="79.1775%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.02%)</title><rect x="78.9648%" y="917" width="0.0181%" height="15" fill="rgb(253,82,12)" fg:x="82699" fg:w="19"/><text x="79.2148%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.02%)</title><rect x="78.9648%" y="901" width="0.0181%" height="15" fill="rgb(245,42,11)" fg:x="82699" fg:w="19"/><text x="79.2148%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (704 samples, 0.67%)</title><rect x="78.3221%" y="965" width="0.6722%" height="15" fill="rgb(219,147,32)" fg:x="82026" fg:w="704"/><text x="78.5721%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.04%)</title><rect x="78.9543%" y="949" width="0.0401%" height="15" fill="rgb(246,12,7)" fg:x="82688" fg:w="42"/><text x="79.2043%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (38 samples, 0.04%)</title><rect x="78.9581%" y="933" width="0.0363%" height="15" fill="rgb(243,50,9)" fg:x="82692" fg:w="38"/><text x="79.2081%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (27 samples, 0.03%)</title><rect x="78.9944%" y="965" width="0.0258%" height="15" fill="rgb(219,149,6)" fg:x="82730" fg:w="27"/><text x="79.2444%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.03%)</title><rect x="78.9944%" y="949" width="0.0258%" height="15" fill="rgb(241,51,42)" fg:x="82730" fg:w="27"/><text x="79.2444%" y="959.50"></text></g><g><title>event_listener::List::notify (745 samples, 0.71%)</title><rect x="78.3136%" y="1029" width="0.7114%" height="15" fill="rgb(226,128,27)" fg:x="82017" fg:w="745"/><text x="78.5636%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (745 samples, 0.71%)</title><rect x="78.3136%" y="1013" width="0.7114%" height="15" fill="rgb(244,144,4)" fg:x="82017" fg:w="745"/><text x="78.5636%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (745 samples, 0.71%)</title><rect x="78.3136%" y="997" width="0.7114%" height="15" fill="rgb(221,4,13)" fg:x="82017" fg:w="745"/><text x="78.5636%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (736 samples, 0.70%)</title><rect x="78.3221%" y="981" width="0.7028%" height="15" fill="rgb(208,170,28)" fg:x="82026" fg:w="736"/><text x="78.5721%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (4,062 samples, 3.88%)</title><rect x="76.1222%" y="1061" width="3.8786%" height="15" fill="rgb(226,131,13)" fg:x="79722" fg:w="4062"/><text x="76.3722%" y="1071.50">asyn..</text></g><g><title>event_listener::Event::notify (2,065 samples, 1.97%)</title><rect x="78.0290%" y="1045" width="1.9718%" height="15" fill="rgb(215,72,41)" fg:x="81719" fg:w="2065"/><text x="78.2790%" y="1055.50">e..</text></g><g><title>event_listener::full_fence (1,022 samples, 0.98%)</title><rect x="79.0249%" y="1029" width="0.9759%" height="15" fill="rgb(243,108,20)" fg:x="82762" fg:w="1022"/><text x="79.2749%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (997 samples, 0.95%)</title><rect x="79.0488%" y="1013" width="0.9520%" height="15" fill="rgb(230,189,17)" fg:x="82787" fg:w="997"/><text x="79.2988%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (997 samples, 0.95%)</title><rect x="79.0488%" y="997" width="0.9520%" height="15" fill="rgb(220,50,17)" fg:x="82787" fg:w="997"/><text x="79.2988%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (997 samples, 0.95%)</title><rect x="79.0488%" y="981" width="0.9520%" height="15" fill="rgb(248,152,48)" fg:x="82787" fg:w="997"/><text x="79.2988%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (15 samples, 0.01%)</title><rect x="80.0008%" y="1061" width="0.0143%" height="15" fill="rgb(244,91,11)" fg:x="83784" fg:w="15"/><text x="80.2508%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (340 samples, 0.32%)</title><rect x="80.0151%" y="1061" width="0.3246%" height="15" fill="rgb(220,157,5)" fg:x="83799" fg:w="340"/><text x="80.2651%" y="1071.50"></text></g><g><title>core::mem::replace (340 samples, 0.32%)</title><rect x="80.0151%" y="1045" width="0.3246%" height="15" fill="rgb(253,137,8)" fg:x="83799" fg:w="340"/><text x="80.2651%" y="1055.50"></text></g><g><title>core::ptr::read (334 samples, 0.32%)</title><rect x="80.0208%" y="1029" width="0.3189%" height="15" fill="rgb(217,137,51)" fg:x="83805" fg:w="334"/><text x="80.2708%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (316 samples, 0.30%)</title><rect x="80.0380%" y="1013" width="0.3017%" height="15" fill="rgb(218,209,53)" fg:x="83823" fg:w="316"/><text x="80.2880%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (436 samples, 0.42%)</title><rect x="80.3397%" y="1061" width="0.4163%" height="15" fill="rgb(249,137,25)" fg:x="84139" fg:w="436"/><text x="80.5897%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (415 samples, 0.40%)</title><rect x="80.3598%" y="1045" width="0.3963%" height="15" fill="rgb(239,155,26)" fg:x="84160" fg:w="415"/><text x="80.6098%" y="1055.50"></text></g><g><title>futex_wait_queue (11 samples, 0.01%)</title><rect x="80.7828%" y="869" width="0.0105%" height="15" fill="rgb(227,85,46)" fg:x="84603" fg:w="11"/><text x="81.0328%" y="879.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="80.7818%" y="917" width="0.0143%" height="15" fill="rgb(251,107,43)" fg:x="84602" fg:w="15"/><text x="81.0318%" y="927.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="80.7828%" y="901" width="0.0134%" height="15" fill="rgb(234,170,33)" fg:x="84603" fg:w="14"/><text x="81.0328%" y="911.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="80.7828%" y="885" width="0.0134%" height="15" fill="rgb(206,29,35)" fg:x="84603" fg:w="14"/><text x="81.0328%" y="895.50"></text></g><g><title>event_listener::Inner::lock (19 samples, 0.02%)</title><rect x="80.7809%" y="1045" width="0.0181%" height="15" fill="rgb(227,138,25)" fg:x="84601" fg:w="19"/><text x="81.0309%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.02%)</title><rect x="80.7809%" y="1029" width="0.0181%" height="15" fill="rgb(249,131,35)" fg:x="84601" fg:w="19"/><text x="81.0309%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="80.7809%" y="1013" width="0.0181%" height="15" fill="rgb(239,6,40)" fg:x="84601" fg:w="19"/><text x="81.0309%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="80.7809%" y="997" width="0.0181%" height="15" fill="rgb(246,136,47)" fg:x="84601" fg:w="19"/><text x="81.0309%" y="1007.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="80.7809%" y="981" width="0.0181%" height="15" fill="rgb(253,58,26)" fg:x="84601" fg:w="19"/><text x="81.0309%" y="991.50"></text></g><g><title>__GI___lll_lock_wait (19 samples, 0.02%)</title><rect x="80.7809%" y="965" width="0.0181%" height="15" fill="rgb(237,141,10)" fg:x="84601" fg:w="19"/><text x="81.0309%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.02%)</title><rect x="80.7809%" y="949" width="0.0181%" height="15" fill="rgb(234,156,12)" fg:x="84601" fg:w="19"/><text x="81.0309%" y="959.50"></text></g><g><title>do_syscall_64 (19 samples, 0.02%)</title><rect x="80.7809%" y="933" width="0.0181%" height="15" fill="rgb(243,224,36)" fg:x="84601" fg:w="19"/><text x="81.0309%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,338 samples, 5.10%)</title><rect x="76.0152%" y="1141" width="5.0970%" height="15" fill="rgb(205,229,51)" fg:x="79610" fg:w="5338"/><text x="76.2652%" y="1151.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (5,338 samples, 5.10%)</title><rect x="76.0152%" y="1125" width="5.0970%" height="15" fill="rgb(223,189,4)" fg:x="79610" fg:w="5338"/><text x="76.2652%" y="1135.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,338 samples, 5.10%)</title><rect x="76.0152%" y="1109" width="5.0970%" height="15" fill="rgb(249,167,54)" fg:x="79610" fg:w="5338"/><text x="76.2652%" y="1119.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (5,338 samples, 5.10%)</title><rect x="76.0152%" y="1093" width="5.0970%" height="15" fill="rgb(218,34,28)" fg:x="79610" fg:w="5338"/><text x="76.2652%" y="1103.50">tremor..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (5,338 samples, 5.10%)</title><rect x="76.0152%" y="1077" width="5.0970%" height="15" fill="rgb(232,109,42)" fg:x="79610" fg:w="5338"/><text x="76.2652%" y="1087.50">&lt;async..</text></g><g><title>event_listener::Event::notify (367 samples, 0.35%)</title><rect x="80.7618%" y="1061" width="0.3504%" height="15" fill="rgb(248,214,46)" fg:x="84581" fg:w="367"/><text x="81.0118%" y="1071.50"></text></g><g><title>event_listener::full_fence (328 samples, 0.31%)</title><rect x="80.7990%" y="1045" width="0.3132%" height="15" fill="rgb(244,216,40)" fg:x="84620" fg:w="328"/><text x="81.0490%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (316 samples, 0.30%)</title><rect x="80.8105%" y="1029" width="0.3017%" height="15" fill="rgb(231,226,31)" fg:x="84632" fg:w="316"/><text x="81.0605%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (316 samples, 0.30%)</title><rect x="80.8105%" y="1013" width="0.3017%" height="15" fill="rgb(238,38,43)" fg:x="84632" fg:w="316"/><text x="81.0605%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (316 samples, 0.30%)</title><rect x="80.8105%" y="997" width="0.3017%" height="15" fill="rgb(208,88,43)" fg:x="84632" fg:w="316"/><text x="81.0605%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,858 samples, 6.55%)</title><rect x="74.5648%" y="1157" width="6.5483%" height="15" fill="rgb(205,136,37)" fg:x="78091" fg:w="6858"/><text x="74.8148%" y="1167.50">tremor_ru..</text></g><g><title>tremor_runtime::preprocessor::preprocess (27 samples, 0.03%)</title><rect x="81.1132%" y="1157" width="0.0258%" height="15" fill="rgb(237,34,14)" fg:x="84949" fg:w="27"/><text x="81.3632%" y="1167.50"></text></g><g><title>[unknown] (79,986 samples, 76.37%)</title><rect x="4.7780%" y="1173" width="76.3743%" height="15" fill="rgb(236,193,44)" fg:x="5004" fg:w="79986"/><text x="5.0280%" y="1183.50">[unknown]</text></g><g><title>tremor_script::srs::EventPayload::try_new (12 samples, 0.01%)</title><rect x="81.1408%" y="1157" width="0.0115%" height="15" fill="rgb(231,48,10)" fg:x="84978" fg:w="12"/><text x="81.3908%" y="1167.50"></text></g><g><title>ret_from_fork (15 samples, 0.01%)</title><rect x="81.1523%" y="1157" width="0.0143%" height="15" fill="rgb(213,141,34)" fg:x="84990" fg:w="15"/><text x="81.4023%" y="1167.50"></text></g><g><title>schedule_tail (15 samples, 0.01%)</title><rect x="81.1523%" y="1141" width="0.0143%" height="15" fill="rgb(249,130,34)" fg:x="84990" fg:w="15"/><text x="81.4023%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (15 samples, 0.01%)</title><rect x="81.1523%" y="1125" width="0.0143%" height="15" fill="rgb(219,42,41)" fg:x="84990" fg:w="15"/><text x="81.4023%" y="1135.50"></text></g><g><title>__perf_event_task_sched_in (15 samples, 0.01%)</title><rect x="81.1523%" y="1109" width="0.0143%" height="15" fill="rgb(224,100,54)" fg:x="84990" fg:w="15"/><text x="81.4023%" y="1119.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (15 samples, 0.01%)</title><rect x="81.1523%" y="1093" width="0.0143%" height="15" fill="rgb(229,200,27)" fg:x="84990" fg:w="15"/><text x="81.4023%" y="1103.50"></text></g><g><title>native_write_msr (15 samples, 0.01%)</title><rect x="81.1523%" y="1077" width="0.0143%" height="15" fill="rgb(217,118,10)" fg:x="84990" fg:w="15"/><text x="81.4023%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="81.2478%" y="565" width="0.0105%" height="15" fill="rgb(206,22,3)" fg:x="85090" fg:w="11"/><text x="81.4978%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (13 samples, 0.01%)</title><rect x="81.2908%" y="469" width="0.0124%" height="15" fill="rgb(232,163,46)" fg:x="85135" fg:w="13"/><text x="81.5408%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (11 samples, 0.01%)</title><rect x="81.2927%" y="453" width="0.0105%" height="15" fill="rgb(206,95,13)" fg:x="85137" fg:w="11"/><text x="81.5427%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="81.3032%" y="469" width="0.0105%" height="15" fill="rgb(253,154,18)" fg:x="85148" fg:w="11"/><text x="81.5532%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (78 samples, 0.07%)</title><rect x="81.2583%" y="533" width="0.0745%" height="15" fill="rgb(219,32,23)" fg:x="85101" fg:w="78"/><text x="81.5083%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 0.06%)</title><rect x="81.2678%" y="517" width="0.0649%" height="15" fill="rgb(230,191,45)" fg:x="85111" fg:w="68"/><text x="81.5178%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 0.05%)</title><rect x="81.2783%" y="501" width="0.0544%" height="15" fill="rgb(229,64,36)" fg:x="85122" fg:w="57"/><text x="81.5283%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 0.04%)</title><rect x="81.2898%" y="485" width="0.0430%" height="15" fill="rgb(205,129,25)" fg:x="85134" fg:w="45"/><text x="81.5398%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.01%)</title><rect x="81.3213%" y="469" width="0.0115%" height="15" fill="rgb(254,112,7)" fg:x="85167" fg:w="12"/><text x="81.5713%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (12 samples, 0.01%)</title><rect x="81.3213%" y="453" width="0.0115%" height="15" fill="rgb(226,53,48)" fg:x="85167" fg:w="12"/><text x="81.5713%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (11 samples, 0.01%)</title><rect x="81.3223%" y="437" width="0.0105%" height="15" fill="rgb(214,153,38)" fg:x="85168" fg:w="11"/><text x="81.5723%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="81.3223%" y="421" width="0.0105%" height="15" fill="rgb(243,101,7)" fg:x="85168" fg:w="11"/><text x="81.5723%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.08%)</title><rect x="81.2583%" y="565" width="0.0812%" height="15" fill="rgb(240,140,22)" fg:x="85101" fg:w="85"/><text x="81.5083%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (85 samples, 0.08%)</title><rect x="81.2583%" y="549" width="0.0812%" height="15" fill="rgb(235,114,2)" fg:x="85101" fg:w="85"/><text x="81.5083%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (223 samples, 0.21%)</title><rect x="81.4340%" y="533" width="0.2129%" height="15" fill="rgb(242,59,12)" fg:x="85285" fg:w="223"/><text x="81.6840%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (150 samples, 0.14%)</title><rect x="81.5037%" y="517" width="0.1432%" height="15" fill="rgb(252,134,9)" fg:x="85358" fg:w="150"/><text x="81.7537%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (150 samples, 0.14%)</title><rect x="81.5037%" y="501" width="0.1432%" height="15" fill="rgb(236,4,44)" fg:x="85358" fg:w="150"/><text x="81.7537%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (317 samples, 0.30%)</title><rect x="81.3471%" y="549" width="0.3027%" height="15" fill="rgb(254,172,41)" fg:x="85194" fg:w="317"/><text x="81.5971%" y="559.50"></text></g><g><title>async_executor::steal (326 samples, 0.31%)</title><rect x="81.3395%" y="565" width="0.3113%" height="15" fill="rgb(244,63,20)" fg:x="85186" fg:w="326"/><text x="81.5895%" y="575.50"></text></g><g><title>concurrent_queue::full_fence (370 samples, 0.35%)</title><rect x="81.8446%" y="533" width="0.3533%" height="15" fill="rgb(250,73,31)" fg:x="85715" fg:w="370"/><text x="82.0946%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (370 samples, 0.35%)</title><rect x="81.8446%" y="517" width="0.3533%" height="15" fill="rgb(241,38,36)" fg:x="85715" fg:w="370"/><text x="82.0946%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (370 samples, 0.35%)</title><rect x="81.8446%" y="501" width="0.3533%" height="15" fill="rgb(245,211,2)" fg:x="85715" fg:w="370"/><text x="82.0946%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (370 samples, 0.35%)</title><rect x="81.8446%" y="485" width="0.3533%" height="15" fill="rgb(206,120,28)" fg:x="85715" fg:w="370"/><text x="82.0946%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (542 samples, 0.52%)</title><rect x="81.7109%" y="549" width="0.5175%" height="15" fill="rgb(211,59,34)" fg:x="85575" fg:w="542"/><text x="81.9609%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32 samples, 0.03%)</title><rect x="82.1979%" y="533" width="0.0306%" height="15" fill="rgb(233,168,5)" fg:x="86085" fg:w="32"/><text x="82.4479%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.03%)</title><rect x="82.2026%" y="517" width="0.0258%" height="15" fill="rgb(234,33,13)" fg:x="86090" fg:w="27"/><text x="82.4526%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (151 samples, 0.14%)</title><rect x="82.2494%" y="533" width="0.1442%" height="15" fill="rgb(231,150,26)" fg:x="86139" fg:w="151"/><text x="82.4994%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (150 samples, 0.14%)</title><rect x="82.2504%" y="517" width="0.1432%" height="15" fill="rgb(217,191,4)" fg:x="86140" fg:w="150"/><text x="82.5004%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (150 samples, 0.14%)</title><rect x="82.2504%" y="501" width="0.1432%" height="15" fill="rgb(246,198,38)" fg:x="86140" fg:w="150"/><text x="82.5004%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (150 samples, 0.14%)</title><rect x="82.2504%" y="485" width="0.1432%" height="15" fill="rgb(245,64,37)" fg:x="86140" fg:w="150"/><text x="82.5004%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="82.3974%" y="517" width="0.0115%" height="15" fill="rgb(250,30,36)" fg:x="86294" fg:w="12"/><text x="82.6474%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="82.3974%" y="501" width="0.0115%" height="15" fill="rgb(217,86,53)" fg:x="86294" fg:w="12"/><text x="82.6474%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (15 samples, 0.01%)</title><rect x="82.3974%" y="533" width="0.0143%" height="15" fill="rgb(228,157,16)" fg:x="86294" fg:w="15"/><text x="82.6474%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (40 samples, 0.04%)</title><rect x="82.4232%" y="533" width="0.0382%" height="15" fill="rgb(217,59,31)" fg:x="86321" fg:w="40"/><text x="82.6732%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (40 samples, 0.04%)</title><rect x="82.4232%" y="517" width="0.0382%" height="15" fill="rgb(237,138,41)" fg:x="86321" fg:w="40"/><text x="82.6732%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (51 samples, 0.05%)</title><rect x="82.4614%" y="533" width="0.0487%" height="15" fill="rgb(227,91,49)" fg:x="86361" fg:w="51"/><text x="82.7114%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (51 samples, 0.05%)</title><rect x="82.4614%" y="517" width="0.0487%" height="15" fill="rgb(247,21,44)" fg:x="86361" fg:w="51"/><text x="82.7114%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (994 samples, 0.95%)</title><rect x="81.6507%" y="565" width="0.9491%" height="15" fill="rgb(219,210,51)" fg:x="85512" fg:w="994"/><text x="81.9007%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (389 samples, 0.37%)</title><rect x="82.2284%" y="549" width="0.3714%" height="15" fill="rgb(209,140,6)" fg:x="86117" fg:w="389"/><text x="82.4784%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (94 samples, 0.09%)</title><rect x="82.5101%" y="533" width="0.0898%" height="15" fill="rgb(221,188,24)" fg:x="86412" fg:w="94"/><text x="82.7601%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (94 samples, 0.09%)</title><rect x="82.5101%" y="517" width="0.0898%" height="15" fill="rgb(232,154,20)" fg:x="86412" fg:w="94"/><text x="82.7601%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (88 samples, 0.08%)</title><rect x="82.6084%" y="501" width="0.0840%" height="15" fill="rgb(244,137,50)" fg:x="86515" fg:w="88"/><text x="82.8584%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (88 samples, 0.08%)</title><rect x="82.6084%" y="485" width="0.0840%" height="15" fill="rgb(225,185,43)" fg:x="86515" fg:w="88"/><text x="82.8584%" y="495.50"></text></g><g><title>___pthread_rwlock_unlock (69 samples, 0.07%)</title><rect x="82.6925%" y="485" width="0.0659%" height="15" fill="rgb(213,205,38)" fg:x="86603" fg:w="69"/><text x="82.9425%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (167 samples, 0.16%)</title><rect x="82.5999%" y="565" width="0.1595%" height="15" fill="rgb(236,73,12)" fg:x="86506" fg:w="167"/><text x="82.8499%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.16%)</title><rect x="82.5999%" y="549" width="0.1595%" height="15" fill="rgb(235,219,13)" fg:x="86506" fg:w="167"/><text x="82.8499%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (166 samples, 0.16%)</title><rect x="82.6008%" y="533" width="0.1585%" height="15" fill="rgb(218,59,36)" fg:x="86507" fg:w="166"/><text x="82.8508%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (160 samples, 0.15%)</title><rect x="82.6065%" y="517" width="0.1528%" height="15" fill="rgb(205,110,39)" fg:x="86513" fg:w="160"/><text x="82.8565%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (70 samples, 0.07%)</title><rect x="82.6925%" y="501" width="0.0668%" height="15" fill="rgb(218,206,42)" fg:x="86603" fg:w="70"/><text x="82.9425%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.02%)</title><rect x="82.7622%" y="533" width="0.0153%" height="15" fill="rgb(248,125,24)" fg:x="86676" fg:w="16"/><text x="83.0122%" y="543.50"></text></g><g><title>fastrand::usize (23 samples, 0.02%)</title><rect x="82.7593%" y="565" width="0.0220%" height="15" fill="rgb(242,28,27)" fg:x="86673" fg:w="23"/><text x="83.0093%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.02%)</title><rect x="82.7603%" y="549" width="0.0210%" height="15" fill="rgb(216,228,15)" fg:x="86674" fg:w="22"/><text x="83.0103%" y="559.50"></text></g><g><title>___pthread_rwlock_rdlock (85 samples, 0.08%)</title><rect x="82.7966%" y="517" width="0.0812%" height="15" fill="rgb(235,116,46)" fg:x="86712" fg:w="85"/><text x="83.0466%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,767 samples, 1.69%)</title><rect x="81.2096%" y="581" width="1.6872%" height="15" fill="rgb(224,18,32)" fg:x="85050" fg:w="1767"/><text x="81.4596%" y="591.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (121 samples, 0.12%)</title><rect x="82.7813%" y="565" width="0.1155%" height="15" fill="rgb(252,5,12)" fg:x="86696" fg:w="121"/><text x="83.0313%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (111 samples, 0.11%)</title><rect x="82.7908%" y="549" width="0.1060%" height="15" fill="rgb(251,36,5)" fg:x="86706" fg:w="111"/><text x="83.0408%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (111 samples, 0.11%)</title><rect x="82.7908%" y="533" width="0.1060%" height="15" fill="rgb(217,53,14)" fg:x="86706" fg:w="111"/><text x="83.0408%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="82.8777%" y="517" width="0.0191%" height="15" fill="rgb(215,86,45)" fg:x="86797" fg:w="20"/><text x="83.1277%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="82.8777%" y="501" width="0.0191%" height="15" fill="rgb(242,169,11)" fg:x="86797" fg:w="20"/><text x="83.1277%" y="511.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="82.8997%" y="501" width="0.0201%" height="15" fill="rgb(211,213,45)" fg:x="86820" fg:w="21"/><text x="83.1497%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (23 samples, 0.02%)</title><rect x="82.8987%" y="565" width="0.0220%" height="15" fill="rgb(205,88,11)" fg:x="86819" fg:w="23"/><text x="83.1487%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="82.8987%" y="549" width="0.0220%" height="15" fill="rgb(252,69,26)" fg:x="86819" fg:w="23"/><text x="83.1487%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="82.8997%" y="533" width="0.0210%" height="15" fill="rgb(246,123,37)" fg:x="86820" fg:w="22"/><text x="83.1497%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (22 samples, 0.02%)</title><rect x="82.8997%" y="517" width="0.0210%" height="15" fill="rgb(212,205,5)" fg:x="86820" fg:w="22"/><text x="83.1497%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (12 samples, 0.01%)</title><rect x="82.9207%" y="565" width="0.0115%" height="15" fill="rgb(253,148,0)" fg:x="86842" fg:w="12"/><text x="83.1707%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="82.9207%" y="549" width="0.0115%" height="15" fill="rgb(239,22,4)" fg:x="86842" fg:w="12"/><text x="83.1707%" y="559.50"></text></g><g><title>__fdget_pos (11 samples, 0.01%)</title><rect x="82.9541%" y="405" width="0.0105%" height="15" fill="rgb(226,26,53)" fg:x="86877" fg:w="11"/><text x="83.2041%" y="415.50"></text></g><g><title>__fget_light (11 samples, 0.01%)</title><rect x="82.9541%" y="389" width="0.0105%" height="15" fill="rgb(225,229,45)" fg:x="86877" fg:w="11"/><text x="83.2041%" y="399.50"></text></g><g><title>select_task_rq_fair (16 samples, 0.02%)</title><rect x="83.0190%" y="277" width="0.0153%" height="15" fill="rgb(220,60,37)" fg:x="86945" fg:w="16"/><text x="83.2690%" y="287.50"></text></g><g><title>enqueue_task_fair (48 samples, 0.05%)</title><rect x="83.0353%" y="245" width="0.0458%" height="15" fill="rgb(217,180,35)" fg:x="86962" fg:w="48"/><text x="83.2853%" y="255.50"></text></g><g><title>enqueue_entity (34 samples, 0.03%)</title><rect x="83.0486%" y="229" width="0.0325%" height="15" fill="rgb(229,7,53)" fg:x="86976" fg:w="34"/><text x="83.2986%" y="239.50"></text></g><g><title>update_load_avg (11 samples, 0.01%)</title><rect x="83.0706%" y="213" width="0.0105%" height="15" fill="rgb(254,137,3)" fg:x="86999" fg:w="11"/><text x="83.3206%" y="223.50"></text></g><g><title>psi_group_change (19 samples, 0.02%)</title><rect x="83.0954%" y="229" width="0.0181%" height="15" fill="rgb(215,140,41)" fg:x="87025" fg:w="19"/><text x="83.3454%" y="239.50"></text></g><g><title>ttwu_do_activate (85 samples, 0.08%)</title><rect x="83.0343%" y="277" width="0.0812%" height="15" fill="rgb(250,80,15)" fg:x="86961" fg:w="85"/><text x="83.2843%" y="287.50"></text></g><g><title>enqueue_task (85 samples, 0.08%)</title><rect x="83.0343%" y="261" width="0.0812%" height="15" fill="rgb(252,191,6)" fg:x="86961" fg:w="85"/><text x="83.2843%" y="271.50"></text></g><g><title>psi_task_change (29 samples, 0.03%)</title><rect x="83.0878%" y="245" width="0.0277%" height="15" fill="rgb(246,217,18)" fg:x="87017" fg:w="29"/><text x="83.3378%" y="255.50"></text></g><g><title>__wake_up_common (148 samples, 0.14%)</title><rect x="82.9952%" y="325" width="0.1413%" height="15" fill="rgb(223,93,7)" fg:x="86920" fg:w="148"/><text x="83.2452%" y="335.50"></text></g><g><title>autoremove_wake_function (141 samples, 0.13%)</title><rect x="83.0018%" y="309" width="0.1346%" height="15" fill="rgb(225,55,52)" fg:x="86927" fg:w="141"/><text x="83.2518%" y="319.50"></text></g><g><title>try_to_wake_up (141 samples, 0.13%)</title><rect x="83.0018%" y="293" width="0.1346%" height="15" fill="rgb(240,31,24)" fg:x="86927" fg:w="141"/><text x="83.2518%" y="303.50"></text></g><g><title>__wake_up_common_lock (151 samples, 0.14%)</title><rect x="82.9942%" y="341" width="0.1442%" height="15" fill="rgb(205,56,52)" fg:x="86919" fg:w="151"/><text x="83.2442%" y="351.50"></text></g><g><title>_raw_read_lock_irqsave (11 samples, 0.01%)</title><rect x="83.1384%" y="341" width="0.0105%" height="15" fill="rgb(246,146,12)" fg:x="87070" fg:w="11"/><text x="83.3884%" y="351.50"></text></g><g><title>__wake_up_common (178 samples, 0.17%)</title><rect x="82.9808%" y="373" width="0.1700%" height="15" fill="rgb(239,84,36)" fg:x="86905" fg:w="178"/><text x="83.2308%" y="383.50"></text></g><g><title>ep_poll_callback (178 samples, 0.17%)</title><rect x="82.9808%" y="357" width="0.1700%" height="15" fill="rgb(207,41,40)" fg:x="86905" fg:w="178"/><text x="83.2308%" y="367.50"></text></g><g><title>eventfd_write (200 samples, 0.19%)</title><rect x="82.9732%" y="389" width="0.1910%" height="15" fill="rgb(241,179,25)" fg:x="86897" fg:w="200"/><text x="83.2232%" y="399.50"></text></g><g><title>ksys_write (224 samples, 0.21%)</title><rect x="82.9512%" y="421" width="0.2139%" height="15" fill="rgb(210,0,34)" fg:x="86874" fg:w="224"/><text x="83.2012%" y="431.50"></text></g><g><title>vfs_write (205 samples, 0.20%)</title><rect x="82.9694%" y="405" width="0.1957%" height="15" fill="rgb(225,217,29)" fg:x="86893" fg:w="205"/><text x="83.2194%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (35 samples, 0.03%)</title><rect x="83.1651%" y="421" width="0.0334%" height="15" fill="rgb(216,191,38)" fg:x="87098" fg:w="35"/><text x="83.4151%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (264 samples, 0.25%)</title><rect x="82.9484%" y="453" width="0.2521%" height="15" fill="rgb(232,140,52)" fg:x="86871" fg:w="264"/><text x="83.1984%" y="463.50"></text></g><g><title>do_syscall_64 (264 samples, 0.25%)</title><rect x="82.9484%" y="437" width="0.2521%" height="15" fill="rgb(223,158,51)" fg:x="86871" fg:w="264"/><text x="83.1984%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::notify (279 samples, 0.27%)</title><rect x="82.9350%" y="517" width="0.2664%" height="15" fill="rgb(235,29,51)" fg:x="86857" fg:w="279"/><text x="83.1850%" y="527.50"></text></g><g><title>polling::Poller::notify (278 samples, 0.27%)</title><rect x="82.9360%" y="501" width="0.2654%" height="15" fill="rgb(215,181,18)" fg:x="86858" fg:w="278"/><text x="83.1860%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (272 samples, 0.26%)</title><rect x="82.9417%" y="485" width="0.2597%" height="15" fill="rgb(227,125,34)" fg:x="86864" fg:w="272"/><text x="83.1917%" y="495.50"></text></g><g><title>__GI___write (271 samples, 0.26%)</title><rect x="82.9426%" y="469" width="0.2588%" height="15" fill="rgb(230,197,49)" fg:x="86865" fg:w="271"/><text x="83.1926%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (39 samples, 0.04%)</title><rect x="83.2262%" y="485" width="0.0372%" height="15" fill="rgb(239,141,16)" fg:x="87162" fg:w="39"/><text x="83.4762%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (39 samples, 0.04%)</title><rect x="83.2262%" y="469" width="0.0372%" height="15" fill="rgb(225,105,43)" fg:x="87162" fg:w="39"/><text x="83.4762%" y="479.50"></text></g><g><title>__entry_text_start (13 samples, 0.01%)</title><rect x="83.3083%" y="421" width="0.0124%" height="15" fill="rgb(214,131,14)" fg:x="87248" fg:w="13"/><text x="83.5583%" y="431.50"></text></g><g><title>_raw_spin_lock (32 samples, 0.03%)</title><rect x="83.4010%" y="341" width="0.0306%" height="15" fill="rgb(229,177,11)" fg:x="87345" fg:w="32"/><text x="83.6510%" y="351.50"></text></g><g><title>futex_wake_mark (53 samples, 0.05%)</title><rect x="83.4392%" y="341" width="0.0506%" height="15" fill="rgb(231,180,14)" fg:x="87385" fg:w="53"/><text x="83.6892%" y="351.50"></text></g><g><title>__futex_unqueue (21 samples, 0.02%)</title><rect x="83.4697%" y="325" width="0.0201%" height="15" fill="rgb(232,88,2)" fg:x="87417" fg:w="21"/><text x="83.7197%" y="335.50"></text></g><g><title>select_task_rq_fair (73 samples, 0.07%)</title><rect x="83.5690%" y="309" width="0.0697%" height="15" fill="rgb(205,220,8)" fg:x="87521" fg:w="73"/><text x="83.8190%" y="319.50"></text></g><g><title>available_idle_cpu (27 samples, 0.03%)</title><rect x="83.6129%" y="293" width="0.0258%" height="15" fill="rgb(225,23,53)" fg:x="87567" fg:w="27"/><text x="83.8629%" y="303.50"></text></g><g><title>reweight_entity (16 samples, 0.02%)</title><rect x="83.7724%" y="245" width="0.0153%" height="15" fill="rgb(213,62,29)" fg:x="87734" fg:w="16"/><text x="84.0224%" y="255.50"></text></g><g><title>update_cfs_group (19 samples, 0.02%)</title><rect x="83.7877%" y="245" width="0.0181%" height="15" fill="rgb(227,75,7)" fg:x="87750" fg:w="19"/><text x="84.0377%" y="255.50"></text></g><g><title>enqueue_task_fair (210 samples, 0.20%)</title><rect x="83.6550%" y="277" width="0.2005%" height="15" fill="rgb(207,105,14)" fg:x="87611" fg:w="210"/><text x="83.9050%" y="287.50"></text></g><g><title>enqueue_entity (147 samples, 0.14%)</title><rect x="83.7151%" y="261" width="0.1404%" height="15" fill="rgb(245,62,29)" fg:x="87674" fg:w="147"/><text x="83.9651%" y="271.50"></text></g><g><title>update_load_avg (44 samples, 0.04%)</title><rect x="83.8135%" y="245" width="0.0420%" height="15" fill="rgb(236,202,4)" fg:x="87777" fg:w="44"/><text x="84.0635%" y="255.50"></text></g><g><title>__update_load_avg_se (11 samples, 0.01%)</title><rect x="83.8450%" y="229" width="0.0105%" height="15" fill="rgb(250,67,1)" fg:x="87810" fg:w="11"/><text x="84.0950%" y="239.50"></text></g><g><title>psi_group_change (41 samples, 0.04%)</title><rect x="83.8555%" y="277" width="0.0391%" height="15" fill="rgb(253,115,44)" fg:x="87821" fg:w="41"/><text x="84.1055%" y="287.50"></text></g><g><title>psi_group_change (101 samples, 0.10%)</title><rect x="83.9366%" y="261" width="0.0964%" height="15" fill="rgb(251,139,18)" fg:x="87906" fg:w="101"/><text x="84.1866%" y="271.50"></text></g><g><title>ttwu_do_activate (417 samples, 0.40%)</title><rect x="83.6397%" y="309" width="0.3982%" height="15" fill="rgb(218,22,32)" fg:x="87595" fg:w="417"/><text x="83.8897%" y="319.50"></text></g><g><title>enqueue_task (407 samples, 0.39%)</title><rect x="83.6492%" y="293" width="0.3886%" height="15" fill="rgb(243,53,5)" fg:x="87605" fg:w="407"/><text x="83.8992%" y="303.50"></text></g><g><title>psi_task_change (150 samples, 0.14%)</title><rect x="83.8946%" y="277" width="0.1432%" height="15" fill="rgb(227,56,16)" fg:x="87862" fg:w="150"/><text x="84.1446%" y="287.50"></text></g><g><title>ttwu_do_wakeup (44 samples, 0.04%)</title><rect x="84.0379%" y="309" width="0.0420%" height="15" fill="rgb(245,53,0)" fg:x="88012" fg:w="44"/><text x="84.2879%" y="319.50"></text></g><g><title>check_preempt_curr (39 samples, 0.04%)</title><rect x="84.0426%" y="293" width="0.0372%" height="15" fill="rgb(216,170,35)" fg:x="88017" fg:w="39"/><text x="84.2926%" y="303.50"></text></g><g><title>resched_curr (30 samples, 0.03%)</title><rect x="84.0512%" y="277" width="0.0286%" height="15" fill="rgb(211,200,8)" fg:x="88026" fg:w="30"/><text x="84.3012%" y="287.50"></text></g><g><title>ttwu_queue_wakelist (22 samples, 0.02%)</title><rect x="84.0799%" y="309" width="0.0210%" height="15" fill="rgb(228,204,44)" fg:x="88056" fg:w="22"/><text x="84.3299%" y="319.50"></text></g><g><title>__x64_sys_futex (840 samples, 0.80%)</title><rect x="83.3303%" y="389" width="0.8021%" height="15" fill="rgb(214,121,17)" fg:x="87271" fg:w="840"/><text x="83.5803%" y="399.50"></text></g><g><title>do_futex (829 samples, 0.79%)</title><rect x="83.3408%" y="373" width="0.7916%" height="15" fill="rgb(233,64,38)" fg:x="87282" fg:w="829"/><text x="83.5908%" y="383.50"></text></g><g><title>futex_wake (826 samples, 0.79%)</title><rect x="83.3437%" y="357" width="0.7887%" height="15" fill="rgb(253,54,19)" fg:x="87285" fg:w="826"/><text x="83.5937%" y="367.50"></text></g><g><title>wake_up_q (660 samples, 0.63%)</title><rect x="83.5022%" y="341" width="0.6302%" height="15" fill="rgb(253,94,18)" fg:x="87451" fg:w="660"/><text x="83.7522%" y="351.50"></text></g><g><title>try_to_wake_up (652 samples, 0.62%)</title><rect x="83.5098%" y="325" width="0.6226%" height="15" fill="rgb(227,57,52)" fg:x="87459" fg:w="652"/><text x="83.7598%" y="335.50"></text></g><g><title>update_rq_clock (33 samples, 0.03%)</title><rect x="84.1009%" y="309" width="0.0315%" height="15" fill="rgb(230,228,50)" fg:x="88078" fg:w="33"/><text x="84.3509%" y="319.50"></text></g><g><title>syscall_exit_to_user_mode (180 samples, 0.17%)</title><rect x="84.1362%" y="389" width="0.1719%" height="15" fill="rgb(217,205,27)" fg:x="88115" fg:w="180"/><text x="84.3862%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,038 samples, 0.99%)</title><rect x="83.3217%" y="421" width="0.9911%" height="15" fill="rgb(252,71,50)" fg:x="87262" fg:w="1038"/><text x="83.5717%" y="431.50"></text></g><g><title>do_syscall_64 (1,035 samples, 0.99%)</title><rect x="83.3246%" y="405" width="0.9883%" height="15" fill="rgb(209,86,4)" fg:x="87265" fg:w="1035"/><text x="83.5746%" y="415.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1,106 samples, 1.06%)</title><rect x="83.2635%" y="485" width="1.0561%" height="15" fill="rgb(229,94,0)" fg:x="87201" fg:w="1106"/><text x="83.5135%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1,106 samples, 1.06%)</title><rect x="83.2635%" y="469" width="1.0561%" height="15" fill="rgb(252,223,21)" fg:x="87201" fg:w="1106"/><text x="83.5135%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1,106 samples, 1.06%)</title><rect x="83.2635%" y="453" width="1.0561%" height="15" fill="rgb(230,210,4)" fg:x="87201" fg:w="1106"/><text x="83.5135%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (1,106 samples, 1.06%)</title><rect x="83.2635%" y="437" width="1.0561%" height="15" fill="rgb(240,149,38)" fg:x="87201" fg:w="1106"/><text x="83.5135%" y="447.50"></text></g><g><title>parking::Unparker::unpark (1,211 samples, 1.16%)</title><rect x="83.2043%" y="517" width="1.1563%" height="15" fill="rgb(254,105,20)" fg:x="87139" fg:w="1211"/><text x="83.4543%" y="527.50"></text></g><g><title>parking::Inner::unpark (1,197 samples, 1.14%)</title><rect x="83.2176%" y="501" width="1.1429%" height="15" fill="rgb(253,87,46)" fg:x="87153" fg:w="1197"/><text x="83.4676%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (43 samples, 0.04%)</title><rect x="84.3195%" y="485" width="0.0411%" height="15" fill="rgb(253,116,33)" fg:x="88307" fg:w="43"/><text x="84.5695%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (42 samples, 0.04%)</title><rect x="84.3205%" y="469" width="0.0401%" height="15" fill="rgb(229,198,5)" fg:x="88308" fg:w="42"/><text x="84.5705%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (41 samples, 0.04%)</title><rect x="84.3214%" y="453" width="0.0391%" height="15" fill="rgb(242,38,37)" fg:x="88309" fg:w="41"/><text x="84.5714%" y="463.50"></text></g><g><title>___pthread_mutex_lock (41 samples, 0.04%)</title><rect x="84.3214%" y="437" width="0.0391%" height="15" fill="rgb(242,69,53)" fg:x="88309" fg:w="41"/><text x="84.5714%" y="447.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (15 samples, 0.01%)</title><rect x="84.3606%" y="485" width="0.0143%" height="15" fill="rgb(249,80,16)" fg:x="88350" fg:w="15"/><text x="84.6106%" y="495.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="84.3606%" y="469" width="0.0143%" height="15" fill="rgb(206,128,11)" fg:x="88350" fg:w="15"/><text x="84.6106%" y="479.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="84.3625%" y="453" width="0.0124%" height="15" fill="rgb(212,35,20)" fg:x="88352" fg:w="13"/><text x="84.6125%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="84.3625%" y="437" width="0.0124%" height="15" fill="rgb(236,79,13)" fg:x="88352" fg:w="13"/><text x="84.6125%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (1,512 samples, 1.44%)</title><rect x="82.9321%" y="533" width="1.4437%" height="15" fill="rgb(233,123,3)" fg:x="86854" fg:w="1512"/><text x="83.1821%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="84.3606%" y="517" width="0.0153%" height="15" fill="rgb(214,93,52)" fg:x="88350" fg:w="16"/><text x="84.6106%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.02%)</title><rect x="84.3606%" y="501" width="0.0153%" height="15" fill="rgb(251,37,40)" fg:x="88350" fg:w="16"/><text x="84.6106%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (1,533 samples, 1.46%)</title><rect x="82.9321%" y="565" width="1.4638%" height="15" fill="rgb(227,80,54)" fg:x="86854" fg:w="1533"/><text x="83.1821%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1,533 samples, 1.46%)</title><rect x="82.9321%" y="549" width="1.4638%" height="15" fill="rgb(254,48,11)" fg:x="86854" fg:w="1533"/><text x="83.1821%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="84.3759%" y="533" width="0.0201%" height="15" fill="rgb(235,193,26)" fg:x="88366" fg:w="21"/><text x="84.6259%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="84.3759%" y="517" width="0.0201%" height="15" fill="rgb(229,99,21)" fg:x="88366" fg:w="21"/><text x="84.6259%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.02%)</title><rect x="84.3759%" y="501" width="0.0201%" height="15" fill="rgb(211,140,41)" fg:x="88366" fg:w="21"/><text x="84.6259%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (21 samples, 0.02%)</title><rect x="84.3759%" y="485" width="0.0201%" height="15" fill="rgb(240,227,30)" fg:x="88366" fg:w="21"/><text x="84.6259%" y="495.50"></text></g><g><title>async_executor::State::notify (1,585 samples, 1.51%)</title><rect x="82.8968%" y="581" width="1.5134%" height="15" fill="rgb(215,224,45)" fg:x="86817" fg:w="1585"/><text x="83.1468%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="84.3959%" y="565" width="0.0143%" height="15" fill="rgb(206,123,31)" fg:x="88387" fg:w="15"/><text x="84.6459%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="84.3959%" y="549" width="0.0143%" height="15" fill="rgb(210,138,16)" fg:x="88387" fg:w="15"/><text x="84.6459%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.01%)</title><rect x="84.3959%" y="533" width="0.0143%" height="15" fill="rgb(228,57,28)" fg:x="88387" fg:w="15"/><text x="84.6459%" y="543.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="84.3959%" y="517" width="0.0143%" height="15" fill="rgb(242,170,10)" fg:x="88387" fg:w="15"/><text x="84.6459%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="84.4188%" y="549" width="0.0477%" height="15" fill="rgb(228,214,39)" fg:x="88411" fg:w="50"/><text x="84.6688%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (49 samples, 0.05%)</title><rect x="84.4198%" y="533" width="0.0468%" height="15" fill="rgb(218,179,33)" fg:x="88412" fg:w="49"/><text x="84.6698%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 0.05%)</title><rect x="84.4207%" y="517" width="0.0458%" height="15" fill="rgb(235,193,39)" fg:x="88413" fg:w="48"/><text x="84.6707%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 0.05%)</title><rect x="84.4207%" y="501" width="0.0458%" height="15" fill="rgb(219,221,36)" fg:x="88413" fg:w="48"/><text x="84.6707%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (48 samples, 0.05%)</title><rect x="84.4207%" y="485" width="0.0458%" height="15" fill="rgb(248,218,19)" fg:x="88413" fg:w="48"/><text x="84.6707%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.05%)</title><rect x="84.4207%" y="469" width="0.0458%" height="15" fill="rgb(205,50,9)" fg:x="88413" fg:w="48"/><text x="84.6707%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (11 samples, 0.01%)</title><rect x="84.4666%" y="549" width="0.0105%" height="15" fill="rgb(238,81,28)" fg:x="88461" fg:w="11"/><text x="84.7166%" y="559.50"></text></g><g><title>async_executor::Sleepers::insert (74 samples, 0.07%)</title><rect x="84.4169%" y="565" width="0.0707%" height="15" fill="rgb(235,110,19)" fg:x="88409" fg:w="74"/><text x="84.6669%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="84.4771%" y="549" width="0.0105%" height="15" fill="rgb(214,7,14)" fg:x="88472" fg:w="11"/><text x="84.7271%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="84.5076%" y="549" width="0.0201%" height="15" fill="rgb(211,77,3)" fg:x="88504" fg:w="21"/><text x="84.7576%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (21 samples, 0.02%)</title><rect x="84.5076%" y="533" width="0.0201%" height="15" fill="rgb(229,5,9)" fg:x="88504" fg:w="21"/><text x="84.7576%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="84.5076%" y="517" width="0.0201%" height="15" fill="rgb(225,90,11)" fg:x="88504" fg:w="21"/><text x="84.7576%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="84.5076%" y="501" width="0.0201%" height="15" fill="rgb(242,56,8)" fg:x="88504" fg:w="21"/><text x="84.7576%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="84.5086%" y="485" width="0.0191%" height="15" fill="rgb(249,212,39)" fg:x="88505" fg:w="20"/><text x="84.7586%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="84.5086%" y="469" width="0.0191%" height="15" fill="rgb(236,90,9)" fg:x="88505" fg:w="20"/><text x="84.7586%" y="479.50"></text></g><g><title>async_executor::Sleepers::update (58 samples, 0.06%)</title><rect x="84.4885%" y="565" width="0.0554%" height="15" fill="rgb(206,88,35)" fg:x="88484" fg:w="58"/><text x="84.7385%" y="575.50"></text></g><g><title>__x64_sys_futex (28 samples, 0.03%)</title><rect x="84.6337%" y="437" width="0.0267%" height="15" fill="rgb(205,126,30)" fg:x="88636" fg:w="28"/><text x="84.8837%" y="447.50"></text></g><g><title>do_futex (25 samples, 0.02%)</title><rect x="84.6365%" y="421" width="0.0239%" height="15" fill="rgb(230,176,12)" fg:x="88639" fg:w="25"/><text x="84.8865%" y="431.50"></text></g><g><title>futex_wake (24 samples, 0.02%)</title><rect x="84.6375%" y="405" width="0.0229%" height="15" fill="rgb(243,19,9)" fg:x="88640" fg:w="24"/><text x="84.8875%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (46 samples, 0.04%)</title><rect x="84.6614%" y="437" width="0.0439%" height="15" fill="rgb(245,171,17)" fg:x="88665" fg:w="46"/><text x="84.9114%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (87 samples, 0.08%)</title><rect x="84.6260%" y="469" width="0.0831%" height="15" fill="rgb(227,52,21)" fg:x="88628" fg:w="87"/><text x="84.8760%" y="479.50"></text></g><g><title>do_syscall_64 (83 samples, 0.08%)</title><rect x="84.6299%" y="453" width="0.0793%" height="15" fill="rgb(238,69,14)" fg:x="88632" fg:w="83"/><text x="84.8799%" y="463.50"></text></g><g><title>__GI___lll_lock_wake (99 samples, 0.09%)</title><rect x="84.6194%" y="485" width="0.0945%" height="15" fill="rgb(241,156,39)" fg:x="88621" fg:w="99"/><text x="84.8694%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (179 samples, 0.17%)</title><rect x="84.5439%" y="565" width="0.1709%" height="15" fill="rgb(212,227,28)" fg:x="88542" fg:w="179"/><text x="84.7939%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (179 samples, 0.17%)</title><rect x="84.5439%" y="549" width="0.1709%" height="15" fill="rgb(209,118,27)" fg:x="88542" fg:w="179"/><text x="84.7939%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (176 samples, 0.17%)</title><rect x="84.5468%" y="533" width="0.1681%" height="15" fill="rgb(226,102,5)" fg:x="88545" fg:w="176"/><text x="84.7968%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (173 samples, 0.17%)</title><rect x="84.5496%" y="517" width="0.1652%" height="15" fill="rgb(223,34,3)" fg:x="88548" fg:w="173"/><text x="84.7996%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (173 samples, 0.17%)</title><rect x="84.5496%" y="501" width="0.1652%" height="15" fill="rgb(221,81,38)" fg:x="88548" fg:w="173"/><text x="84.7996%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (69 samples, 0.07%)</title><rect x="84.7148%" y="565" width="0.0659%" height="15" fill="rgb(236,219,28)" fg:x="88721" fg:w="69"/><text x="84.9648%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (69 samples, 0.07%)</title><rect x="84.7148%" y="549" width="0.0659%" height="15" fill="rgb(213,200,14)" fg:x="88721" fg:w="69"/><text x="84.9648%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (34 samples, 0.03%)</title><rect x="84.7807%" y="565" width="0.0325%" height="15" fill="rgb(240,33,19)" fg:x="88790" fg:w="34"/><text x="85.0307%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (34 samples, 0.03%)</title><rect x="84.7807%" y="549" width="0.0325%" height="15" fill="rgb(233,113,27)" fg:x="88790" fg:w="34"/><text x="85.0307%" y="559.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.02%)</title><rect x="84.9631%" y="453" width="0.0191%" height="15" fill="rgb(220,221,18)" fg:x="88981" fg:w="20"/><text x="85.2131%" y="463.50"></text></g><g><title>do_futex (20 samples, 0.02%)</title><rect x="84.9631%" y="437" width="0.0191%" height="15" fill="rgb(238,92,8)" fg:x="88981" fg:w="20"/><text x="85.2131%" y="447.50"></text></g><g><title>futex_wait (18 samples, 0.02%)</title><rect x="84.9650%" y="421" width="0.0172%" height="15" fill="rgb(222,164,16)" fg:x="88983" fg:w="18"/><text x="85.2150%" y="431.50"></text></g><g><title>futex_wait_setup (18 samples, 0.02%)</title><rect x="84.9650%" y="405" width="0.0172%" height="15" fill="rgb(241,119,3)" fg:x="88983" fg:w="18"/><text x="85.2150%" y="415.50"></text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.01%)</title><rect x="84.9822%" y="453" width="0.0124%" height="15" fill="rgb(241,44,8)" fg:x="89001" fg:w="13"/><text x="85.2322%" y="463.50"></text></g><g><title>async_executor::Ticker::sleep (614 samples, 0.59%)</title><rect x="84.4102%" y="581" width="0.5863%" height="15" fill="rgb(230,36,40)" fg:x="88402" fg:w="614"/><text x="84.6602%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (192 samples, 0.18%)</title><rect x="84.8132%" y="565" width="0.1833%" height="15" fill="rgb(243,16,36)" fg:x="88824" fg:w="192"/><text x="85.0632%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (187 samples, 0.18%)</title><rect x="84.8180%" y="549" width="0.1786%" height="15" fill="rgb(231,4,26)" fg:x="88829" fg:w="187"/><text x="85.0680%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (178 samples, 0.17%)</title><rect x="84.8266%" y="533" width="0.1700%" height="15" fill="rgb(240,9,31)" fg:x="88838" fg:w="178"/><text x="85.0766%" y="543.50"></text></g><g><title>___pthread_mutex_lock (178 samples, 0.17%)</title><rect x="84.8266%" y="517" width="0.1700%" height="15" fill="rgb(207,173,15)" fg:x="88838" fg:w="178"/><text x="85.0766%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (47 samples, 0.04%)</title><rect x="84.9516%" y="501" width="0.0449%" height="15" fill="rgb(224,192,53)" fg:x="88969" fg:w="47"/><text x="85.2016%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (36 samples, 0.03%)</title><rect x="84.9621%" y="485" width="0.0344%" height="15" fill="rgb(223,67,28)" fg:x="88980" fg:w="36"/><text x="85.2121%" y="495.50"></text></g><g><title>do_syscall_64 (36 samples, 0.03%)</title><rect x="84.9621%" y="469" width="0.0344%" height="15" fill="rgb(211,20,47)" fg:x="88980" fg:w="36"/><text x="85.2121%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (18 samples, 0.02%)</title><rect x="84.9984%" y="565" width="0.0172%" height="15" fill="rgb(240,228,2)" fg:x="89018" fg:w="18"/><text x="85.2484%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (42 samples, 0.04%)</title><rect x="85.0156%" y="501" width="0.0401%" height="15" fill="rgb(248,151,12)" fg:x="89036" fg:w="42"/><text x="85.2656%" y="511.50"></text></g><g><title>__GI___lll_lock_wake (26 samples, 0.02%)</title><rect x="85.0309%" y="485" width="0.0248%" height="15" fill="rgb(244,8,39)" fg:x="89052" fg:w="26"/><text x="85.2809%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.02%)</title><rect x="85.0404%" y="469" width="0.0153%" height="15" fill="rgb(222,26,8)" fg:x="89062" fg:w="16"/><text x="85.2904%" y="479.50"></text></g><g><title>do_syscall_64 (16 samples, 0.02%)</title><rect x="85.0404%" y="453" width="0.0153%" height="15" fill="rgb(213,106,44)" fg:x="89062" fg:w="16"/><text x="85.2904%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (43 samples, 0.04%)</title><rect x="85.0156%" y="565" width="0.0411%" height="15" fill="rgb(214,129,20)" fg:x="89036" fg:w="43"/><text x="85.2656%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="85.0156%" y="549" width="0.0411%" height="15" fill="rgb(212,32,13)" fg:x="89036" fg:w="43"/><text x="85.2656%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (43 samples, 0.04%)</title><rect x="85.0156%" y="533" width="0.0411%" height="15" fill="rgb(208,168,33)" fg:x="89036" fg:w="43"/><text x="85.2656%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (43 samples, 0.04%)</title><rect x="85.0156%" y="517" width="0.0411%" height="15" fill="rgb(231,207,8)" fg:x="89036" fg:w="43"/><text x="85.2656%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (26 samples, 0.02%)</title><rect x="85.0567%" y="565" width="0.0248%" height="15" fill="rgb(235,219,23)" fg:x="89079" fg:w="26"/><text x="85.3067%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (26 samples, 0.02%)</title><rect x="85.0567%" y="549" width="0.0248%" height="15" fill="rgb(226,216,26)" fg:x="89079" fg:w="26"/><text x="85.3067%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (28 samples, 0.03%)</title><rect x="85.0815%" y="565" width="0.0267%" height="15" fill="rgb(239,137,16)" fg:x="89105" fg:w="28"/><text x="85.3315%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (28 samples, 0.03%)</title><rect x="85.0815%" y="549" width="0.0267%" height="15" fill="rgb(207,12,36)" fg:x="89105" fg:w="28"/><text x="85.3315%" y="559.50"></text></g><g><title>__GI___lll_lock_wait (20 samples, 0.02%)</title><rect x="85.1378%" y="501" width="0.0191%" height="15" fill="rgb(210,214,24)" fg:x="89164" fg:w="20"/><text x="85.3878%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.02%)</title><rect x="85.1407%" y="485" width="0.0162%" height="15" fill="rgb(206,56,30)" fg:x="89167" fg:w="17"/><text x="85.3907%" y="495.50"></text></g><g><title>do_syscall_64 (17 samples, 0.02%)</title><rect x="85.1407%" y="469" width="0.0162%" height="15" fill="rgb(228,143,26)" fg:x="89167" fg:w="17"/><text x="85.3907%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,149 samples, 3.96%)</title><rect x="81.1962%" y="645" width="3.9617%" height="15" fill="rgb(216,218,46)" fg:x="85036" fg:w="4149"/><text x="81.4462%" y="655.50">&lt;cor..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (4,147 samples, 3.96%)</title><rect x="81.1981%" y="629" width="3.9597%" height="15" fill="rgb(206,6,19)" fg:x="85038" fg:w="4147"/><text x="81.4481%" y="639.50">asyn..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,145 samples, 3.96%)</title><rect x="81.2000%" y="613" width="3.9578%" height="15" fill="rgb(239,177,51)" fg:x="85040" fg:w="4145"/><text x="81.4500%" y="623.50">&lt;fut..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (4,144 samples, 3.96%)</title><rect x="81.2010%" y="597" width="3.9569%" height="15" fill="rgb(216,55,25)" fg:x="85041" fg:w="4144"/><text x="81.4510%" y="607.50">asyn..</text></g><g><title>async_executor::Ticker::wake (169 samples, 0.16%)</title><rect x="84.9965%" y="581" width="0.1614%" height="15" fill="rgb(231,163,29)" fg:x="89016" fg:w="169"/><text x="85.2465%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.05%)</title><rect x="85.1082%" y="565" width="0.0497%" height="15" fill="rgb(232,149,50)" fg:x="89133" fg:w="52"/><text x="85.3582%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (51 samples, 0.05%)</title><rect x="85.1092%" y="549" width="0.0487%" height="15" fill="rgb(223,142,48)" fg:x="89134" fg:w="51"/><text x="85.3592%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (50 samples, 0.05%)</title><rect x="85.1101%" y="533" width="0.0477%" height="15" fill="rgb(245,83,23)" fg:x="89135" fg:w="50"/><text x="85.3601%" y="543.50"></text></g><g><title>___pthread_mutex_lock (50 samples, 0.05%)</title><rect x="85.1101%" y="517" width="0.0477%" height="15" fill="rgb(224,63,2)" fg:x="89135" fg:w="50"/><text x="85.3601%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,177 samples, 3.99%)</title><rect x="81.1829%" y="677" width="3.9884%" height="15" fill="rgb(218,65,53)" fg:x="85022" fg:w="4177"/><text x="81.4329%" y="687.50">&lt;cor..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (4,174 samples, 3.99%)</title><rect x="81.1857%" y="661" width="3.9855%" height="15" fill="rgb(221,84,29)" fg:x="85025" fg:w="4174"/><text x="81.4357%" y="671.50">asyn..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.01%)</title><rect x="85.1579%" y="645" width="0.0134%" height="15" fill="rgb(234,0,32)" fg:x="89185" fg:w="14"/><text x="85.4079%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.01%)</title><rect x="85.1579%" y="629" width="0.0134%" height="15" fill="rgb(206,20,16)" fg:x="89185" fg:w="14"/><text x="85.4079%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (48 samples, 0.05%)</title><rect x="85.2314%" y="549" width="0.0458%" height="15" fill="rgb(244,172,18)" fg:x="89262" fg:w="48"/><text x="85.4814%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.04%)</title><rect x="85.2343%" y="533" width="0.0430%" height="15" fill="rgb(254,133,1)" fg:x="89265" fg:w="45"/><text x="85.4843%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="85.2791%" y="533" width="0.0201%" height="15" fill="rgb(222,206,41)" fg:x="89312" fg:w="21"/><text x="85.5291%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (21 samples, 0.02%)</title><rect x="85.3164%" y="485" width="0.0201%" height="15" fill="rgb(212,3,42)" fg:x="89351" fg:w="21"/><text x="85.5664%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="85.9084%" y="469" width="0.0115%" height="15" fill="rgb(241,11,4)" fg:x="89971" fg:w="12"/><text x="86.1584%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.01%)</title><rect x="85.9084%" y="453" width="0.0115%" height="15" fill="rgb(205,19,26)" fg:x="89971" fg:w="12"/><text x="86.1584%" y="463.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="85.9199%" y="469" width="0.0258%" height="15" fill="rgb(210,179,32)" fg:x="89983" fg:w="27"/><text x="86.1699%" y="479.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.01%)</title><rect x="85.9342%" y="453" width="0.0115%" height="15" fill="rgb(227,116,49)" fg:x="89998" fg:w="12"/><text x="86.1842%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="85.9676%" y="453" width="0.0162%" height="15" fill="rgb(211,146,6)" fg:x="90033" fg:w="17"/><text x="86.2176%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (18 samples, 0.02%)</title><rect x="86.2244%" y="421" width="0.0172%" height="15" fill="rgb(219,44,39)" fg:x="90302" fg:w="18"/><text x="86.4744%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (18 samples, 0.02%)</title><rect x="86.2244%" y="405" width="0.0172%" height="15" fill="rgb(234,128,11)" fg:x="90302" fg:w="18"/><text x="86.4744%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (18 samples, 0.02%)</title><rect x="86.2244%" y="389" width="0.0172%" height="15" fill="rgb(220,183,53)" fg:x="90302" fg:w="18"/><text x="86.4744%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="86.2244%" y="373" width="0.0172%" height="15" fill="rgb(213,219,32)" fg:x="90302" fg:w="18"/><text x="86.4744%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.02%)</title><rect x="86.2244%" y="357" width="0.0172%" height="15" fill="rgb(232,156,16)" fg:x="90302" fg:w="18"/><text x="86.4744%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (29 samples, 0.03%)</title><rect x="86.2416%" y="373" width="0.0277%" height="15" fill="rgb(246,135,34)" fg:x="90320" fg:w="29"/><text x="86.4916%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (18 samples, 0.02%)</title><rect x="86.2521%" y="357" width="0.0172%" height="15" fill="rgb(241,99,0)" fg:x="90331" fg:w="18"/><text x="86.5021%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (428 samples, 0.41%)</title><rect x="85.9456%" y="469" width="0.4087%" height="15" fill="rgb(222,103,45)" fg:x="90010" fg:w="428"/><text x="86.1956%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (388 samples, 0.37%)</title><rect x="85.9838%" y="453" width="0.3705%" height="15" fill="rgb(212,57,4)" fg:x="90050" fg:w="388"/><text x="86.2338%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (136 samples, 0.13%)</title><rect x="86.2244%" y="437" width="0.1299%" height="15" fill="rgb(215,68,47)" fg:x="90302" fg:w="136"/><text x="86.4744%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (118 samples, 0.11%)</title><rect x="86.2416%" y="421" width="0.1127%" height="15" fill="rgb(230,84,2)" fg:x="90320" fg:w="118"/><text x="86.4916%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (118 samples, 0.11%)</title><rect x="86.2416%" y="405" width="0.1127%" height="15" fill="rgb(220,102,14)" fg:x="90320" fg:w="118"/><text x="86.4916%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (118 samples, 0.11%)</title><rect x="86.2416%" y="389" width="0.1127%" height="15" fill="rgb(240,10,32)" fg:x="90320" fg:w="118"/><text x="86.4916%" y="399.50"></text></g><g><title>core::mem::drop (89 samples, 0.08%)</title><rect x="86.2693%" y="373" width="0.0850%" height="15" fill="rgb(215,47,27)" fg:x="90349" fg:w="89"/><text x="86.5193%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (89 samples, 0.08%)</title><rect x="86.2693%" y="357" width="0.0850%" height="15" fill="rgb(233,188,43)" fg:x="90349" fg:w="89"/><text x="86.5193%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.08%)</title><rect x="86.2693%" y="341" width="0.0850%" height="15" fill="rgb(253,190,1)" fg:x="90349" fg:w="89"/><text x="86.5193%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (50 samples, 0.05%)</title><rect x="86.3066%" y="325" width="0.0477%" height="15" fill="rgb(206,114,52)" fg:x="90388" fg:w="50"/><text x="86.5566%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (14 samples, 0.01%)</title><rect x="86.3409%" y="309" width="0.0134%" height="15" fill="rgb(233,120,37)" fg:x="90424" fg:w="14"/><text x="86.5909%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (14 samples, 0.01%)</title><rect x="86.3409%" y="293" width="0.0134%" height="15" fill="rgb(214,52,39)" fg:x="90424" fg:w="14"/><text x="86.5909%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (14 samples, 0.01%)</title><rect x="86.3409%" y="277" width="0.0134%" height="15" fill="rgb(223,80,29)" fg:x="90424" fg:w="14"/><text x="86.5909%" y="287.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="86.3409%" y="261" width="0.0134%" height="15" fill="rgb(230,101,40)" fg:x="90424" fg:w="14"/><text x="86.5909%" y="271.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="86.3419%" y="245" width="0.0124%" height="15" fill="rgb(219,211,8)" fg:x="90425" fg:w="13"/><text x="86.5919%" y="255.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (294 samples, 0.28%)</title><rect x="86.3572%" y="469" width="0.2807%" height="15" fill="rgb(252,126,28)" fg:x="90441" fg:w="294"/><text x="86.6072%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="86.6255%" y="453" width="0.0124%" height="15" fill="rgb(215,56,38)" fg:x="90722" fg:w="13"/><text x="86.8755%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (12 samples, 0.01%)</title><rect x="86.6264%" y="437" width="0.0115%" height="15" fill="rgb(249,55,44)" fg:x="90723" fg:w="12"/><text x="86.8764%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (237 samples, 0.23%)</title><rect x="86.6713%" y="437" width="0.2263%" height="15" fill="rgb(220,221,32)" fg:x="90770" fg:w="237"/><text x="86.9213%" y="447.50"></text></g><g><title>aligned_size (23 samples, 0.02%)</title><rect x="86.9005%" y="325" width="0.0220%" height="15" fill="rgb(212,216,41)" fg:x="91010" fg:w="23"/><text x="87.1505%" y="335.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="86.9272%" y="293" width="0.0124%" height="15" fill="rgb(228,213,43)" fg:x="91038" fg:w="13"/><text x="87.1772%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="86.9539%" y="213" width="0.0296%" height="15" fill="rgb(211,31,26)" fg:x="91066" fg:w="31"/><text x="87.2039%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="86.9539%" y="197" width="0.0296%" height="15" fill="rgb(229,202,19)" fg:x="91066" fg:w="31"/><text x="87.2039%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="86.9606%" y="181" width="0.0229%" height="15" fill="rgb(229,105,46)" fg:x="91073" fg:w="24"/><text x="87.2106%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (37 samples, 0.04%)</title><rect x="86.9539%" y="229" width="0.0353%" height="15" fill="rgb(235,108,1)" fg:x="91066" fg:w="37"/><text x="87.2039%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (54 samples, 0.05%)</title><rect x="86.9482%" y="245" width="0.0516%" height="15" fill="rgb(245,111,35)" fg:x="91060" fg:w="54"/><text x="87.1982%" y="255.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (29 samples, 0.03%)</title><rect x="87.0151%" y="229" width="0.0277%" height="15" fill="rgb(219,185,31)" fg:x="91130" fg:w="29"/><text x="87.2651%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (302 samples, 0.29%)</title><rect x="86.9482%" y="277" width="0.2884%" height="15" fill="rgb(214,4,43)" fg:x="91060" fg:w="302"/><text x="87.1982%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (302 samples, 0.29%)</title><rect x="86.9482%" y="261" width="0.2884%" height="15" fill="rgb(235,227,40)" fg:x="91060" fg:w="302"/><text x="87.1982%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (248 samples, 0.24%)</title><rect x="86.9998%" y="245" width="0.2368%" height="15" fill="rgb(230,88,30)" fg:x="91114" fg:w="248"/><text x="87.2498%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (203 samples, 0.19%)</title><rect x="87.0427%" y="229" width="0.1938%" height="15" fill="rgb(216,217,1)" fg:x="91159" fg:w="203"/><text x="87.2927%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (203 samples, 0.19%)</title><rect x="87.0427%" y="213" width="0.1938%" height="15" fill="rgb(248,139,50)" fg:x="91159" fg:w="203"/><text x="87.2927%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (203 samples, 0.19%)</title><rect x="87.0427%" y="197" width="0.1938%" height="15" fill="rgb(233,1,21)" fg:x="91159" fg:w="203"/><text x="87.2927%" y="207.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (13 samples, 0.01%)</title><rect x="87.2385%" y="261" width="0.0124%" height="15" fill="rgb(215,183,12)" fg:x="91364" fg:w="13"/><text x="87.4885%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (14 samples, 0.01%)</title><rect x="87.2519%" y="245" width="0.0134%" height="15" fill="rgb(229,104,42)" fg:x="91378" fg:w="14"/><text x="87.5019%" y="255.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (14 samples, 0.01%)</title><rect x="87.2519%" y="229" width="0.0134%" height="15" fill="rgb(243,34,48)" fg:x="91378" fg:w="14"/><text x="87.5019%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="87.2519%" y="213" width="0.0134%" height="15" fill="rgb(239,11,44)" fg:x="91378" fg:w="14"/><text x="87.5019%" y="223.50"></text></g><g><title>snmalloc::FreeListIter::take (14 samples, 0.01%)</title><rect x="87.2652%" y="245" width="0.0134%" height="15" fill="rgb(231,98,35)" fg:x="91392" fg:w="14"/><text x="87.5152%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (14 samples, 0.01%)</title><rect x="87.2652%" y="229" width="0.0134%" height="15" fill="rgb(233,28,25)" fg:x="91392" fg:w="14"/><text x="87.5152%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="87.2366%" y="277" width="0.0487%" height="15" fill="rgb(234,123,11)" fg:x="91362" fg:w="51"/><text x="87.4866%" y="287.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (36 samples, 0.03%)</title><rect x="87.2509%" y="261" width="0.0344%" height="15" fill="rgb(220,69,3)" fg:x="91377" fg:w="36"/><text x="87.5009%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (42 samples, 0.04%)</title><rect x="87.2862%" y="277" width="0.0401%" height="15" fill="rgb(214,64,36)" fg:x="91414" fg:w="42"/><text x="87.5362%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (42 samples, 0.04%)</title><rect x="87.2862%" y="261" width="0.0401%" height="15" fill="rgb(211,138,32)" fg:x="91414" fg:w="42"/><text x="87.5362%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (565 samples, 0.54%)</title><rect x="86.9224%" y="325" width="0.5395%" height="15" fill="rgb(213,118,47)" fg:x="91033" fg:w="565"/><text x="87.1724%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (565 samples, 0.54%)</title><rect x="86.9224%" y="309" width="0.5395%" height="15" fill="rgb(243,124,49)" fg:x="91033" fg:w="565"/><text x="87.1724%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (547 samples, 0.52%)</title><rect x="86.9396%" y="293" width="0.5223%" height="15" fill="rgb(221,30,28)" fg:x="91051" fg:w="547"/><text x="87.1896%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (142 samples, 0.14%)</title><rect x="87.3263%" y="277" width="0.1356%" height="15" fill="rgb(246,37,13)" fg:x="91456" fg:w="142"/><text x="87.5763%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (142 samples, 0.14%)</title><rect x="87.3263%" y="261" width="0.1356%" height="15" fill="rgb(249,66,14)" fg:x="91456" fg:w="142"/><text x="87.5763%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (876 samples, 0.84%)</title><rect x="86.6379%" y="453" width="0.8364%" height="15" fill="rgb(213,166,5)" fg:x="90735" fg:w="876"/><text x="86.8879%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (604 samples, 0.58%)</title><rect x="86.8976%" y="437" width="0.5767%" height="15" fill="rgb(221,66,24)" fg:x="91007" fg:w="604"/><text x="87.1476%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (604 samples, 0.58%)</title><rect x="86.8976%" y="421" width="0.5767%" height="15" fill="rgb(210,132,17)" fg:x="91007" fg:w="604"/><text x="87.1476%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (604 samples, 0.58%)</title><rect x="86.8976%" y="405" width="0.5767%" height="15" fill="rgb(243,202,5)" fg:x="91007" fg:w="604"/><text x="87.1476%" y="415.50"></text></g><g><title>alloc::alloc::alloc (602 samples, 0.57%)</title><rect x="86.8995%" y="389" width="0.5748%" height="15" fill="rgb(233,70,48)" fg:x="91009" fg:w="602"/><text x="87.1495%" y="399.50"></text></g><g><title>__rg_alloc (602 samples, 0.57%)</title><rect x="86.8995%" y="373" width="0.5748%" height="15" fill="rgb(238,41,26)" fg:x="91009" fg:w="602"/><text x="87.1495%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (602 samples, 0.57%)</title><rect x="86.8995%" y="357" width="0.5748%" height="15" fill="rgb(241,19,31)" fg:x="91009" fg:w="602"/><text x="87.1495%" y="367.50"></text></g><g><title>rust_alloc (601 samples, 0.57%)</title><rect x="86.9005%" y="341" width="0.5739%" height="15" fill="rgb(214,76,10)" fg:x="91010" fg:w="601"/><text x="87.1505%" y="351.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="87.4619%" y="325" width="0.0124%" height="15" fill="rgb(254,202,22)" fg:x="91598" fg:w="13"/><text x="87.7119%" y="335.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (887 samples, 0.85%)</title><rect x="86.6379%" y="469" width="0.8469%" height="15" fill="rgb(214,72,24)" fg:x="90735" fg:w="887"/><text x="86.8879%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (11 samples, 0.01%)</title><rect x="87.4743%" y="453" width="0.0105%" height="15" fill="rgb(221,92,46)" fg:x="91611" fg:w="11"/><text x="87.7243%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="87.5603%" y="373" width="0.0162%" height="15" fill="rgb(246,13,50)" fg:x="91701" fg:w="17"/><text x="87.8103%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (19 samples, 0.02%)</title><rect x="87.5784%" y="325" width="0.0181%" height="15" fill="rgb(240,165,38)" fg:x="91720" fg:w="19"/><text x="87.8284%" y="335.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (111 samples, 0.11%)</title><rect x="87.4973%" y="453" width="0.1060%" height="15" fill="rgb(241,24,51)" fg:x="91635" fg:w="111"/><text x="87.7473%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="87.5326%" y="437" width="0.0707%" height="15" fill="rgb(227,51,44)" fg:x="91672" fg:w="74"/><text x="87.7826%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45 samples, 0.04%)</title><rect x="87.5603%" y="421" width="0.0430%" height="15" fill="rgb(231,121,3)" fg:x="91701" fg:w="45"/><text x="87.8103%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (45 samples, 0.04%)</title><rect x="87.5603%" y="405" width="0.0430%" height="15" fill="rgb(245,3,41)" fg:x="91701" fg:w="45"/><text x="87.8103%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45 samples, 0.04%)</title><rect x="87.5603%" y="389" width="0.0430%" height="15" fill="rgb(214,13,26)" fg:x="91701" fg:w="45"/><text x="87.8103%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="87.5775%" y="373" width="0.0258%" height="15" fill="rgb(252,75,11)" fg:x="91719" fg:w="27"/><text x="87.8275%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="87.5775%" y="357" width="0.0258%" height="15" fill="rgb(218,226,17)" fg:x="91719" fg:w="27"/><text x="87.8275%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.02%)</title><rect x="87.5784%" y="341" width="0.0248%" height="15" fill="rgb(248,89,38)" fg:x="91720" fg:w="26"/><text x="87.8284%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="87.9546%" y="437" width="0.0229%" height="15" fill="rgb(237,73,46)" fg:x="92114" fg:w="24"/><text x="88.2046%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (13 samples, 0.01%)</title><rect x="87.9651%" y="421" width="0.0124%" height="15" fill="rgb(242,78,33)" fg:x="92125" fg:w="13"/><text x="88.2151%" y="431.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (518 samples, 0.49%)</title><rect x="87.4848%" y="469" width="0.4946%" height="15" fill="rgb(235,60,3)" fg:x="91622" fg:w="518"/><text x="87.7348%" y="479.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (394 samples, 0.38%)</title><rect x="87.6032%" y="453" width="0.3762%" height="15" fill="rgb(216,172,19)" fg:x="91746" fg:w="394"/><text x="87.8532%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2,216 samples, 2.12%)</title><rect x="87.9795%" y="469" width="2.1159%" height="15" fill="rgb(227,6,42)" fg:x="92140" fg:w="2216"/><text x="88.2295%" y="479.50">_..</text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="90.1326%" y="277" width="0.0105%" height="15" fill="rgb(223,207,42)" fg:x="94395" fg:w="11"/><text x="90.3826%" y="287.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="90.1555%" y="213" width="0.0115%" height="15" fill="rgb(246,138,30)" fg:x="94419" fg:w="12"/><text x="90.4055%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="90.1555%" y="197" width="0.0115%" height="15" fill="rgb(251,199,47)" fg:x="94419" fg:w="12"/><text x="90.4055%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (30 samples, 0.03%)</title><rect x="90.2310%" y="181" width="0.0286%" height="15" fill="rgb(228,218,44)" fg:x="94498" fg:w="30"/><text x="90.4810%" y="191.50"></text></g><g><title> (30 samples, 0.03%)</title><rect x="90.2310%" y="165" width="0.0286%" height="15" fill="rgb(220,68,6)" fg:x="94498" fg:w="30"/><text x="90.4810%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (117 samples, 0.11%)</title><rect x="90.1689%" y="213" width="0.1117%" height="15" fill="rgb(240,60,26)" fg:x="94433" fg:w="117"/><text x="90.4189%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (100 samples, 0.10%)</title><rect x="90.1851%" y="197" width="0.0955%" height="15" fill="rgb(211,200,19)" fg:x="94450" fg:w="100"/><text x="90.4351%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (18 samples, 0.02%)</title><rect x="90.2634%" y="181" width="0.0172%" height="15" fill="rgb(242,145,30)" fg:x="94532" fg:w="18"/><text x="90.5134%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (183 samples, 0.17%)</title><rect x="90.1431%" y="245" width="0.1747%" height="15" fill="rgb(225,64,13)" fg:x="94406" fg:w="183"/><text x="90.3931%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (183 samples, 0.17%)</title><rect x="90.1431%" y="229" width="0.1747%" height="15" fill="rgb(218,103,35)" fg:x="94406" fg:w="183"/><text x="90.3931%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (38 samples, 0.04%)</title><rect x="90.2816%" y="213" width="0.0363%" height="15" fill="rgb(216,93,46)" fg:x="94551" fg:w="38"/><text x="90.5316%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (185 samples, 0.18%)</title><rect x="90.1431%" y="277" width="0.1766%" height="15" fill="rgb(225,159,27)" fg:x="94406" fg:w="185"/><text x="90.3931%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (185 samples, 0.18%)</title><rect x="90.1431%" y="261" width="0.1766%" height="15" fill="rgb(225,204,11)" fg:x="94406" fg:w="185"/><text x="90.3931%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (209 samples, 0.20%)</title><rect x="90.1221%" y="293" width="0.1996%" height="15" fill="rgb(205,56,4)" fg:x="94384" fg:w="209"/><text x="90.3721%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (279 samples, 0.27%)</title><rect x="90.0963%" y="469" width="0.2664%" height="15" fill="rgb(206,6,35)" fg:x="94357" fg:w="279"/><text x="90.3463%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (279 samples, 0.27%)</title><rect x="90.0963%" y="453" width="0.2664%" height="15" fill="rgb(247,73,52)" fg:x="94357" fg:w="279"/><text x="90.3463%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (266 samples, 0.25%)</title><rect x="90.1088%" y="437" width="0.2540%" height="15" fill="rgb(246,97,4)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (266 samples, 0.25%)</title><rect x="90.1088%" y="421" width="0.2540%" height="15" fill="rgb(212,37,15)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (266 samples, 0.25%)</title><rect x="90.1088%" y="405" width="0.2540%" height="15" fill="rgb(208,130,40)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (266 samples, 0.25%)</title><rect x="90.1088%" y="389" width="0.2540%" height="15" fill="rgb(236,55,29)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (266 samples, 0.25%)</title><rect x="90.1088%" y="373" width="0.2540%" height="15" fill="rgb(209,156,45)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (266 samples, 0.25%)</title><rect x="90.1088%" y="357" width="0.2540%" height="15" fill="rgb(249,107,4)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="367.50"></text></g><g><title>__rg_dealloc (266 samples, 0.25%)</title><rect x="90.1088%" y="341" width="0.2540%" height="15" fill="rgb(227,7,13)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (266 samples, 0.25%)</title><rect x="90.1088%" y="325" width="0.2540%" height="15" fill="rgb(250,129,14)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="335.50"></text></g><g><title>rust_dealloc (266 samples, 0.25%)</title><rect x="90.1088%" y="309" width="0.2540%" height="15" fill="rgb(229,92,13)" fg:x="94370" fg:w="266"/><text x="90.3588%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (43 samples, 0.04%)</title><rect x="90.3217%" y="293" width="0.0411%" height="15" fill="rgb(245,98,39)" fg:x="94593" fg:w="43"/><text x="90.5717%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (39 samples, 0.04%)</title><rect x="90.3627%" y="453" width="0.0372%" height="15" fill="rgb(234,135,48)" fg:x="94636" fg:w="39"/><text x="90.6127%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (44 samples, 0.04%)</title><rect x="90.3627%" y="469" width="0.0420%" height="15" fill="rgb(230,98,28)" fg:x="94636" fg:w="44"/><text x="90.6127%" y="479.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="90.4315%" y="341" width="0.0134%" height="15" fill="rgb(223,121,0)" fg:x="94708" fg:w="14"/><text x="90.6815%" y="351.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="90.4449%" y="325" width="0.0115%" height="15" fill="rgb(234,173,33)" fg:x="94722" fg:w="12"/><text x="90.6949%" y="335.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="90.4563%" y="261" width="0.0181%" height="15" fill="rgb(245,47,8)" fg:x="94734" fg:w="19"/><text x="90.7063%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="90.4936%" y="213" width="0.0172%" height="15" fill="rgb(205,17,20)" fg:x="94773" fg:w="18"/><text x="90.7436%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="90.5002%" y="197" width="0.0105%" height="15" fill="rgb(232,151,16)" fg:x="94780" fg:w="11"/><text x="90.7502%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (43 samples, 0.04%)</title><rect x="90.4764%" y="261" width="0.0411%" height="15" fill="rgb(208,30,32)" fg:x="94755" fg:w="43"/><text x="90.7264%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (43 samples, 0.04%)</title><rect x="90.4764%" y="245" width="0.0411%" height="15" fill="rgb(254,26,3)" fg:x="94755" fg:w="43"/><text x="90.7264%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="90.4773%" y="229" width="0.0401%" height="15" fill="rgb(240,177,30)" fg:x="94756" fg:w="42"/><text x="90.7273%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (75 samples, 0.07%)</title><rect x="90.4563%" y="293" width="0.0716%" height="15" fill="rgb(248,76,44)" fg:x="94734" fg:w="75"/><text x="90.7063%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (75 samples, 0.07%)</title><rect x="90.4563%" y="277" width="0.0716%" height="15" fill="rgb(241,186,54)" fg:x="94734" fg:w="75"/><text x="90.7063%" y="287.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="90.5174%" y="261" width="0.0105%" height="15" fill="rgb(249,171,29)" fg:x="94798" fg:w="11"/><text x="90.7674%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (90 samples, 0.09%)</title><rect x="90.4563%" y="325" width="0.0859%" height="15" fill="rgb(237,151,44)" fg:x="94734" fg:w="90"/><text x="90.7063%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (90 samples, 0.09%)</title><rect x="90.4563%" y="309" width="0.0859%" height="15" fill="rgb(228,174,30)" fg:x="94734" fg:w="90"/><text x="90.7063%" y="319.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="90.5279%" y="293" width="0.0143%" height="15" fill="rgb(252,14,37)" fg:x="94809" fg:w="15"/><text x="90.7779%" y="303.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="90.5279%" y="277" width="0.0143%" height="15" fill="rgb(207,111,40)" fg:x="94809" fg:w="15"/><text x="90.7779%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="90.5279%" y="261" width="0.0143%" height="15" fill="rgb(248,171,54)" fg:x="94809" fg:w="15"/><text x="90.7779%" y="271.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="90.5279%" y="245" width="0.0143%" height="15" fill="rgb(211,127,2)" fg:x="94809" fg:w="15"/><text x="90.7779%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (111 samples, 0.11%)</title><rect x="90.4449%" y="341" width="0.1060%" height="15" fill="rgb(236,87,47)" fg:x="94722" fg:w="111"/><text x="90.6949%" y="351.50"></text></g><g><title>rust_dealloc (135 samples, 0.13%)</title><rect x="90.4305%" y="357" width="0.1289%" height="15" fill="rgb(223,190,45)" fg:x="94707" fg:w="135"/><text x="90.6805%" y="367.50"></text></g><g><title>alloc::alloc::box_free (167 samples, 0.16%)</title><rect x="90.4153%" y="437" width="0.1595%" height="15" fill="rgb(215,5,16)" fg:x="94691" fg:w="167"/><text x="90.6653%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (151 samples, 0.14%)</title><rect x="90.4305%" y="421" width="0.1442%" height="15" fill="rgb(252,82,33)" fg:x="94707" fg:w="151"/><text x="90.6805%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (151 samples, 0.14%)</title><rect x="90.4305%" y="405" width="0.1442%" height="15" fill="rgb(247,213,44)" fg:x="94707" fg:w="151"/><text x="90.6805%" y="415.50"></text></g><g><title>__rg_dealloc (151 samples, 0.14%)</title><rect x="90.4305%" y="389" width="0.1442%" height="15" fill="rgb(205,196,44)" fg:x="94707" fg:w="151"/><text x="90.6805%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (151 samples, 0.14%)</title><rect x="90.4305%" y="373" width="0.1442%" height="15" fill="rgb(237,96,54)" fg:x="94707" fg:w="151"/><text x="90.6805%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.02%)</title><rect x="90.5594%" y="357" width="0.0153%" height="15" fill="rgb(230,113,34)" fg:x="94842" fg:w="16"/><text x="90.8094%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (194 samples, 0.19%)</title><rect x="90.4048%" y="453" width="0.1852%" height="15" fill="rgb(221,224,12)" fg:x="94680" fg:w="194"/><text x="90.6548%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="90.5747%" y="437" width="0.0153%" height="15" fill="rgb(219,112,44)" fg:x="94858" fg:w="16"/><text x="90.8247%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt; (16 samples, 0.02%)</title><rect x="90.5747%" y="421" width="0.0153%" height="15" fill="rgb(210,31,13)" fg:x="94858" fg:w="16"/><text x="90.8247%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (195 samples, 0.19%)</title><rect x="90.4048%" y="469" width="0.1862%" height="15" fill="rgb(230,25,16)" fg:x="94680" fg:w="195"/><text x="90.6548%" y="479.50"></text></g><g><title>core::time::Duration::as_nanos (28 samples, 0.03%)</title><rect x="90.6817%" y="453" width="0.0267%" height="15" fill="rgb(246,108,53)" fg:x="94970" fg:w="28"/><text x="90.9317%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (166 samples, 0.16%)</title><rect x="90.8879%" y="405" width="0.1585%" height="15" fill="rgb(241,172,50)" fg:x="95186" fg:w="166"/><text x="91.1379%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (166 samples, 0.16%)</title><rect x="90.8879%" y="389" width="0.1585%" height="15" fill="rgb(235,141,10)" fg:x="95186" fg:w="166"/><text x="91.1379%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (163 samples, 0.16%)</title><rect x="90.8908%" y="373" width="0.1556%" height="15" fill="rgb(220,174,43)" fg:x="95189" fg:w="163"/><text x="91.1408%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (163 samples, 0.16%)</title><rect x="90.8908%" y="357" width="0.1556%" height="15" fill="rgb(215,181,40)" fg:x="95189" fg:w="163"/><text x="91.1408%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (163 samples, 0.16%)</title><rect x="90.8908%" y="341" width="0.1556%" height="15" fill="rgb(230,97,2)" fg:x="95189" fg:w="163"/><text x="91.1408%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (79 samples, 0.08%)</title><rect x="90.9710%" y="325" width="0.0754%" height="15" fill="rgb(211,25,27)" fg:x="95273" fg:w="79"/><text x="91.2210%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (430 samples, 0.41%)</title><rect x="90.7084%" y="437" width="0.4106%" height="15" fill="rgb(230,87,26)" fg:x="94998" fg:w="430"/><text x="90.9584%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (430 samples, 0.41%)</title><rect x="90.7084%" y="421" width="0.4106%" height="15" fill="rgb(227,160,17)" fg:x="94998" fg:w="430"/><text x="90.9584%" y="431.50"></text></g><g><title>core::time::Duration::new (76 samples, 0.07%)</title><rect x="91.0464%" y="405" width="0.0726%" height="15" fill="rgb(244,85,34)" fg:x="95352" fg:w="76"/><text x="91.2964%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (457 samples, 0.44%)</title><rect x="90.7084%" y="453" width="0.4364%" height="15" fill="rgb(207,70,0)" fg:x="94998" fg:w="457"/><text x="90.9584%" y="463.50"></text></g><g><title>tremor_common::time::nanotime (27 samples, 0.03%)</title><rect x="91.1190%" y="437" width="0.0258%" height="15" fill="rgb(223,129,7)" fg:x="95428" fg:w="27"/><text x="91.3690%" y="447.50"></text></g><g><title>__vdso_clock_gettime (1,302 samples, 1.24%)</title><rect x="91.5095%" y="389" width="1.2432%" height="15" fill="rgb(246,105,7)" fg:x="95837" fg:w="1302"/><text x="91.7595%" y="399.50"></text></g><g><title>[[vdso]] (804 samples, 0.77%)</title><rect x="91.9850%" y="373" width="0.7677%" height="15" fill="rgb(215,154,42)" fg:x="96335" fg:w="804"/><text x="92.2350%" y="383.50"></text></g><g><title>tremor_common::time::nanotime (2,265 samples, 2.16%)</title><rect x="90.5910%" y="469" width="2.1627%" height="15" fill="rgb(220,215,30)" fg:x="94875" fg:w="2265"/><text x="90.8410%" y="479.50">t..</text></g><g><title>std::time::SystemTime::now (1,685 samples, 1.61%)</title><rect x="91.1448%" y="453" width="1.6089%" height="15" fill="rgb(228,81,51)" fg:x="95455" fg:w="1685"/><text x="91.3948%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,685 samples, 1.61%)</title><rect x="91.1448%" y="437" width="1.6089%" height="15" fill="rgb(247,71,54)" fg:x="95455" fg:w="1685"/><text x="91.3948%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (1,685 samples, 1.61%)</title><rect x="91.1448%" y="421" width="1.6089%" height="15" fill="rgb(234,176,34)" fg:x="95455" fg:w="1685"/><text x="91.3948%" y="431.50"></text></g><g><title>__clock_gettime_2 (1,360 samples, 1.30%)</title><rect x="91.4551%" y="405" width="1.2986%" height="15" fill="rgb(241,103,54)" fg:x="95780" fg:w="1360"/><text x="91.7051%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.01%)</title><rect x="92.7775%" y="309" width="0.0143%" height="15" fill="rgb(228,22,34)" fg:x="97165" fg:w="15"/><text x="93.0275%" y="319.50"></text></g><g><title>core::mem::drop (34 samples, 0.03%)</title><rect x="92.7756%" y="405" width="0.0325%" height="15" fill="rgb(241,179,48)" fg:x="97163" fg:w="34"/><text x="93.0256%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (34 samples, 0.03%)</title><rect x="92.7756%" y="389" width="0.0325%" height="15" fill="rgb(235,167,37)" fg:x="97163" fg:w="34"/><text x="93.0256%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="92.7756%" y="373" width="0.0325%" height="15" fill="rgb(213,109,30)" fg:x="97163" fg:w="34"/><text x="93.0256%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (34 samples, 0.03%)</title><rect x="92.7756%" y="357" width="0.0325%" height="15" fill="rgb(222,172,16)" fg:x="97163" fg:w="34"/><text x="93.0256%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (32 samples, 0.03%)</title><rect x="92.7775%" y="341" width="0.0306%" height="15" fill="rgb(233,192,5)" fg:x="97165" fg:w="32"/><text x="93.0275%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (32 samples, 0.03%)</title><rect x="92.7775%" y="325" width="0.0306%" height="15" fill="rgb(247,189,41)" fg:x="97165" fg:w="32"/><text x="93.0275%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (17 samples, 0.02%)</title><rect x="92.7919%" y="309" width="0.0162%" height="15" fill="rgb(218,134,47)" fg:x="97180" fg:w="17"/><text x="93.0419%" y="319.50"></text></g><g><title>core::mem::replace (17 samples, 0.02%)</title><rect x="92.7919%" y="293" width="0.0162%" height="15" fill="rgb(216,29,3)" fg:x="97180" fg:w="17"/><text x="93.0419%" y="303.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="92.7919%" y="277" width="0.0162%" height="15" fill="rgb(246,140,12)" fg:x="97180" fg:w="17"/><text x="93.0419%" y="287.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (68 samples, 0.06%)</title><rect x="92.7537%" y="469" width="0.0649%" height="15" fill="rgb(230,136,11)" fg:x="97140" fg:w="68"/><text x="93.0037%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (55 samples, 0.05%)</title><rect x="92.7661%" y="453" width="0.0525%" height="15" fill="rgb(247,22,47)" fg:x="97153" fg:w="55"/><text x="93.0161%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (55 samples, 0.05%)</title><rect x="92.7661%" y="437" width="0.0525%" height="15" fill="rgb(218,84,22)" fg:x="97153" fg:w="55"/><text x="93.0161%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="92.7661%" y="421" width="0.0525%" height="15" fill="rgb(216,87,39)" fg:x="97153" fg:w="55"/><text x="93.0161%" y="431.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (24 samples, 0.02%)</title><rect x="92.8186%" y="469" width="0.0229%" height="15" fill="rgb(221,178,8)" fg:x="97208" fg:w="24"/><text x="93.0686%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (7,861 samples, 7.51%)</title><rect x="85.3364%" y="485" width="7.5060%" height="15" fill="rgb(230,42,11)" fg:x="89372" fg:w="7861"/><text x="85.5864%" y="495.50">tremor_run..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,894 samples, 7.54%)</title><rect x="85.3059%" y="517" width="7.5375%" height="15" fill="rgb(237,229,4)" fg:x="89340" fg:w="7894"/><text x="85.5559%" y="527.50">&lt;async_std..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,894 samples, 7.54%)</title><rect x="85.3059%" y="501" width="7.5375%" height="15" fill="rgb(222,31,33)" fg:x="89340" fg:w="7894"/><text x="85.5559%" y="511.50">&lt;core::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,000 samples, 7.64%)</title><rect x="85.2056%" y="629" width="7.6388%" height="15" fill="rgb(210,17,39)" fg:x="89235" fg:w="8000"/><text x="85.4556%" y="639.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (7,999 samples, 7.64%)</title><rect x="85.2066%" y="613" width="7.6378%" height="15" fill="rgb(244,93,20)" fg:x="89236" fg:w="7999"/><text x="85.4566%" y="623.50">async_exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7,975 samples, 7.61%)</title><rect x="85.2295%" y="597" width="7.6149%" height="15" fill="rgb(210,40,47)" fg:x="89260" fg:w="7975"/><text x="85.4795%" y="607.50">&lt;async_std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7,975 samples, 7.61%)</title><rect x="85.2295%" y="581" width="7.6149%" height="15" fill="rgb(239,211,47)" fg:x="89260" fg:w="7975"/><text x="85.4795%" y="591.50">async_std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,973 samples, 7.61%)</title><rect x="85.2314%" y="565" width="7.6130%" height="15" fill="rgb(251,223,49)" fg:x="89262" fg:w="7973"/><text x="85.4814%" y="575.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,925 samples, 7.57%)</title><rect x="85.2772%" y="549" width="7.5671%" height="15" fill="rgb(221,149,5)" fg:x="89310" fg:w="7925"/><text x="85.5272%" y="559.50">std::threa..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,896 samples, 7.54%)</title><rect x="85.3049%" y="533" width="7.5395%" height="15" fill="rgb(219,224,51)" fg:x="89339" fg:w="7896"/><text x="85.5549%" y="543.50">async_std:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,001 samples, 7.64%)</title><rect x="85.2056%" y="645" width="7.6397%" height="15" fill="rgb(223,7,8)" fg:x="89235" fg:w="8001"/><text x="85.4556%" y="655.50">&lt;core::pin..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (23 samples, 0.02%)</title><rect x="92.8453%" y="645" width="0.0220%" height="15" fill="rgb(241,217,22)" fg:x="97236" fg:w="23"/><text x="93.0953%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="92.8463%" y="629" width="0.0210%" height="15" fill="rgb(248,209,0)" fg:x="97237" fg:w="22"/><text x="93.0963%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="92.8463%" y="613" width="0.0210%" height="15" fill="rgb(217,205,4)" fg:x="97237" fg:w="22"/><text x="93.0963%" y="623.50"></text></g><g><title>ttwu_do_activate (16 samples, 0.02%)</title><rect x="92.8874%" y="309" width="0.0153%" height="15" fill="rgb(228,124,39)" fg:x="97280" fg:w="16"/><text x="93.1374%" y="319.50"></text></g><g><title>enqueue_task (16 samples, 0.02%)</title><rect x="92.8874%" y="293" width="0.0153%" height="15" fill="rgb(250,116,42)" fg:x="97280" fg:w="16"/><text x="93.1374%" y="303.50"></text></g><g><title>__wake_up_common_lock (29 samples, 0.03%)</title><rect x="92.8807%" y="373" width="0.0277%" height="15" fill="rgb(223,202,9)" fg:x="97273" fg:w="29"/><text x="93.1307%" y="383.50"></text></g><g><title>__wake_up_common (27 samples, 0.03%)</title><rect x="92.8826%" y="357" width="0.0258%" height="15" fill="rgb(242,222,40)" fg:x="97275" fg:w="27"/><text x="93.1326%" y="367.50"></text></g><g><title>autoremove_wake_function (26 samples, 0.02%)</title><rect x="92.8835%" y="341" width="0.0248%" height="15" fill="rgb(229,99,46)" fg:x="97276" fg:w="26"/><text x="93.1335%" y="351.50"></text></g><g><title>try_to_wake_up (25 samples, 0.02%)</title><rect x="92.8845%" y="325" width="0.0239%" height="15" fill="rgb(225,56,46)" fg:x="97277" fg:w="25"/><text x="93.1345%" y="335.50"></text></g><g><title>__wake_up_common (34 samples, 0.03%)</title><rect x="92.8778%" y="405" width="0.0325%" height="15" fill="rgb(227,94,5)" fg:x="97270" fg:w="34"/><text x="93.1278%" y="415.50"></text></g><g><title>ep_poll_callback (34 samples, 0.03%)</title><rect x="92.8778%" y="389" width="0.0325%" height="15" fill="rgb(205,112,38)" fg:x="97270" fg:w="34"/><text x="93.1278%" y="399.50"></text></g><g><title>async_io::reactor::Reactor::notify (46 samples, 0.04%)</title><rect x="92.8702%" y="549" width="0.0439%" height="15" fill="rgb(231,133,46)" fg:x="97262" fg:w="46"/><text x="93.1202%" y="559.50"></text></g><g><title>polling::Poller::notify (46 samples, 0.04%)</title><rect x="92.8702%" y="533" width="0.0439%" height="15" fill="rgb(217,16,9)" fg:x="97262" fg:w="46"/><text x="93.1202%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (45 samples, 0.04%)</title><rect x="92.8711%" y="517" width="0.0430%" height="15" fill="rgb(249,173,9)" fg:x="97263" fg:w="45"/><text x="93.1211%" y="527.50"></text></g><g><title>__GI___write (45 samples, 0.04%)</title><rect x="92.8711%" y="501" width="0.0430%" height="15" fill="rgb(205,163,53)" fg:x="97263" fg:w="45"/><text x="93.1211%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 0.04%)</title><rect x="92.8711%" y="485" width="0.0430%" height="15" fill="rgb(217,54,41)" fg:x="97263" fg:w="45"/><text x="93.1211%" y="495.50"></text></g><g><title>do_syscall_64 (45 samples, 0.04%)</title><rect x="92.8711%" y="469" width="0.0430%" height="15" fill="rgb(228,216,12)" fg:x="97263" fg:w="45"/><text x="93.1211%" y="479.50"></text></g><g><title>ksys_write (44 samples, 0.04%)</title><rect x="92.8721%" y="453" width="0.0420%" height="15" fill="rgb(244,228,15)" fg:x="97264" fg:w="44"/><text x="93.1221%" y="463.50"></text></g><g><title>vfs_write (39 samples, 0.04%)</title><rect x="92.8769%" y="437" width="0.0372%" height="15" fill="rgb(221,176,53)" fg:x="97269" fg:w="39"/><text x="93.1269%" y="447.50"></text></g><g><title>eventfd_write (39 samples, 0.04%)</title><rect x="92.8769%" y="421" width="0.0372%" height="15" fill="rgb(205,94,34)" fg:x="97269" fg:w="39"/><text x="93.1269%" y="431.50"></text></g><g><title>enqueue_task_fair (23 samples, 0.02%)</title><rect x="92.9618%" y="309" width="0.0220%" height="15" fill="rgb(213,110,48)" fg:x="97358" fg:w="23"/><text x="93.2118%" y="319.50"></text></g><g><title>enqueue_entity (11 samples, 0.01%)</title><rect x="92.9733%" y="293" width="0.0105%" height="15" fill="rgb(236,142,28)" fg:x="97370" fg:w="11"/><text x="93.2233%" y="303.50"></text></g><g><title>ttwu_do_activate (43 samples, 0.04%)</title><rect x="92.9590%" y="341" width="0.0411%" height="15" fill="rgb(225,135,29)" fg:x="97355" fg:w="43"/><text x="93.2090%" y="351.50"></text></g><g><title>enqueue_task (41 samples, 0.04%)</title><rect x="92.9609%" y="325" width="0.0391%" height="15" fill="rgb(252,45,31)" fg:x="97357" fg:w="41"/><text x="93.2109%" y="335.50"></text></g><g><title>psi_task_change (12 samples, 0.01%)</title><rect x="92.9886%" y="309" width="0.0115%" height="15" fill="rgb(211,187,50)" fg:x="97386" fg:w="12"/><text x="93.2386%" y="319.50"></text></g><g><title>__x64_sys_futex (77 samples, 0.07%)</title><rect x="92.9303%" y="421" width="0.0735%" height="15" fill="rgb(229,109,7)" fg:x="97325" fg:w="77"/><text x="93.1803%" y="431.50"></text></g><g><title>do_futex (76 samples, 0.07%)</title><rect x="92.9313%" y="405" width="0.0726%" height="15" fill="rgb(251,131,51)" fg:x="97326" fg:w="76"/><text x="93.1813%" y="415.50"></text></g><g><title>futex_wake (76 samples, 0.07%)</title><rect x="92.9313%" y="389" width="0.0726%" height="15" fill="rgb(251,180,35)" fg:x="97326" fg:w="76"/><text x="93.1813%" y="399.50"></text></g><g><title>wake_up_q (65 samples, 0.06%)</title><rect x="92.9418%" y="373" width="0.0621%" height="15" fill="rgb(211,46,32)" fg:x="97337" fg:w="65"/><text x="93.1918%" y="383.50"></text></g><g><title>try_to_wake_up (63 samples, 0.06%)</title><rect x="92.9437%" y="357" width="0.0602%" height="15" fill="rgb(248,123,17)" fg:x="97339" fg:w="63"/><text x="93.1937%" y="367.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.01%)</title><rect x="93.0038%" y="421" width="0.0143%" height="15" fill="rgb(227,141,18)" fg:x="97402" fg:w="15"/><text x="93.2538%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (93 samples, 0.09%)</title><rect x="92.9303%" y="453" width="0.0888%" height="15" fill="rgb(216,102,9)" fg:x="97325" fg:w="93"/><text x="93.1803%" y="463.50"></text></g><g><title>do_syscall_64 (93 samples, 0.09%)</title><rect x="92.9303%" y="437" width="0.0888%" height="15" fill="rgb(253,47,13)" fg:x="97325" fg:w="93"/><text x="93.1803%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (102 samples, 0.10%)</title><rect x="92.9227%" y="517" width="0.0974%" height="15" fill="rgb(226,93,23)" fg:x="97317" fg:w="102"/><text x="93.1727%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (102 samples, 0.10%)</title><rect x="92.9227%" y="501" width="0.0974%" height="15" fill="rgb(247,104,17)" fg:x="97317" fg:w="102"/><text x="93.1727%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (102 samples, 0.10%)</title><rect x="92.9227%" y="485" width="0.0974%" height="15" fill="rgb(233,203,26)" fg:x="97317" fg:w="102"/><text x="93.1727%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (102 samples, 0.10%)</title><rect x="92.9227%" y="469" width="0.0974%" height="15" fill="rgb(244,98,49)" fg:x="97317" fg:w="102"/><text x="93.1727%" y="479.50"></text></g><g><title>parking::Unparker::unpark (119 samples, 0.11%)</title><rect x="92.9141%" y="549" width="0.1136%" height="15" fill="rgb(235,134,22)" fg:x="97308" fg:w="119"/><text x="93.1641%" y="559.50"></text></g><g><title>parking::Inner::unpark (118 samples, 0.11%)</title><rect x="92.9150%" y="533" width="0.1127%" height="15" fill="rgb(221,70,32)" fg:x="97309" fg:w="118"/><text x="93.1650%" y="543.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (166 samples, 0.16%)</title><rect x="92.8702%" y="565" width="0.1585%" height="15" fill="rgb(238,15,50)" fg:x="97262" fg:w="166"/><text x="93.1202%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (168 samples, 0.16%)</title><rect x="92.8702%" y="597" width="0.1604%" height="15" fill="rgb(215,221,48)" fg:x="97262" fg:w="168"/><text x="93.1202%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (168 samples, 0.16%)</title><rect x="92.8702%" y="581" width="0.1604%" height="15" fill="rgb(236,73,3)" fg:x="97262" fg:w="168"/><text x="93.1202%" y="591.50"></text></g><g><title>async_executor::State::notify (174 samples, 0.17%)</title><rect x="92.8673%" y="613" width="0.1661%" height="15" fill="rgb(250,107,11)" fg:x="97259" fg:w="174"/><text x="93.1173%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (175 samples, 0.17%)</title><rect x="92.8673%" y="629" width="0.1671%" height="15" fill="rgb(242,39,14)" fg:x="97259" fg:w="175"/><text x="93.1173%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (177 samples, 0.17%)</title><rect x="92.8673%" y="645" width="0.1690%" height="15" fill="rgb(248,164,37)" fg:x="97259" fg:w="177"/><text x="93.1173%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (8,318 samples, 7.94%)</title><rect x="85.1741%" y="677" width="7.9424%" height="15" fill="rgb(217,60,12)" fg:x="89202" fg:w="8318"/><text x="85.4241%" y="687.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,310 samples, 7.93%)</title><rect x="85.1818%" y="661" width="7.9348%" height="15" fill="rgb(240,125,29)" fg:x="89210" fg:w="8310"/><text x="85.4318%" y="671.50">async_task:..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (84 samples, 0.08%)</title><rect x="93.0363%" y="645" width="0.0802%" height="15" fill="rgb(208,207,28)" fg:x="97436" fg:w="84"/><text x="93.2863%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (84 samples, 0.08%)</title><rect x="93.0363%" y="629" width="0.0802%" height="15" fill="rgb(209,159,27)" fg:x="97436" fg:w="84"/><text x="93.2863%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (12,507 samples, 11.94%)</title><rect x="81.1810%" y="741" width="11.9423%" height="15" fill="rgb(251,176,53)" fg:x="85020" fg:w="12507"/><text x="81.4310%" y="751.50">async_executor::Ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,507 samples, 11.94%)</title><rect x="81.1810%" y="725" width="11.9423%" height="15" fill="rgb(211,85,7)" fg:x="85020" fg:w="12507"/><text x="81.4310%" y="735.50">&lt;futures_lite::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,507 samples, 11.94%)</title><rect x="81.1810%" y="709" width="11.9423%" height="15" fill="rgb(216,64,54)" fg:x="85020" fg:w="12507"/><text x="81.4310%" y="719.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (12,507 samples, 11.94%)</title><rect x="81.1810%" y="693" width="11.9423%" height="15" fill="rgb(217,54,24)" fg:x="85020" fg:w="12507"/><text x="81.4310%" y="703.50">async_executor::Ex..</text></g><g><title>concurrent_queue::full_fence (18 samples, 0.02%)</title><rect x="93.1939%" y="501" width="0.0172%" height="15" fill="rgb(208,206,53)" fg:x="97601" fg:w="18"/><text x="93.4439%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (18 samples, 0.02%)</title><rect x="93.1939%" y="485" width="0.0172%" height="15" fill="rgb(251,74,39)" fg:x="97601" fg:w="18"/><text x="93.4439%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="93.1939%" y="469" width="0.0172%" height="15" fill="rgb(226,47,5)" fg:x="97601" fg:w="18"/><text x="93.4439%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="93.1939%" y="453" width="0.0172%" height="15" fill="rgb(234,111,33)" fg:x="97601" fg:w="18"/><text x="93.4439%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (73 samples, 0.07%)</title><rect x="93.1795%" y="517" width="0.0697%" height="15" fill="rgb(251,14,10)" fg:x="97586" fg:w="73"/><text x="93.4295%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (40 samples, 0.04%)</title><rect x="93.2110%" y="501" width="0.0382%" height="15" fill="rgb(232,43,0)" fg:x="97619" fg:w="40"/><text x="93.4610%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.04%)</title><rect x="93.2110%" y="485" width="0.0382%" height="15" fill="rgb(222,68,43)" fg:x="97619" fg:w="40"/><text x="93.4610%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (19 samples, 0.02%)</title><rect x="93.2559%" y="501" width="0.0181%" height="15" fill="rgb(217,24,23)" fg:x="97666" fg:w="19"/><text x="93.5059%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (19 samples, 0.02%)</title><rect x="93.2559%" y="485" width="0.0181%" height="15" fill="rgb(229,209,14)" fg:x="97666" fg:w="19"/><text x="93.5059%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.02%)</title><rect x="93.2559%" y="469" width="0.0181%" height="15" fill="rgb(250,149,48)" fg:x="97666" fg:w="19"/><text x="93.5059%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="93.2559%" y="453" width="0.0181%" height="15" fill="rgb(210,120,37)" fg:x="97666" fg:w="19"/><text x="93.5059%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (107 samples, 0.10%)</title><rect x="93.1729%" y="533" width="0.1022%" height="15" fill="rgb(210,21,8)" fg:x="97579" fg:w="107"/><text x="93.4229%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (27 samples, 0.03%)</title><rect x="93.2492%" y="517" width="0.0258%" height="15" fill="rgb(243,145,7)" fg:x="97659" fg:w="27"/><text x="93.4992%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="93.2760%" y="469" width="0.0115%" height="15" fill="rgb(238,178,32)" fg:x="97687" fg:w="12"/><text x="93.5260%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="93.2760%" y="453" width="0.0115%" height="15" fill="rgb(222,4,10)" fg:x="97687" fg:w="12"/><text x="93.5260%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="93.2750%" y="533" width="0.0306%" height="15" fill="rgb(239,7,37)" fg:x="97686" fg:w="32"/><text x="93.5250%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="93.2750%" y="517" width="0.0306%" height="15" fill="rgb(215,31,37)" fg:x="97686" fg:w="32"/><text x="93.5250%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (31 samples, 0.03%)</title><rect x="93.2760%" y="501" width="0.0296%" height="15" fill="rgb(224,83,33)" fg:x="97687" fg:w="31"/><text x="93.5260%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (31 samples, 0.03%)</title><rect x="93.2760%" y="485" width="0.0296%" height="15" fill="rgb(239,55,3)" fg:x="97687" fg:w="31"/><text x="93.5260%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (19 samples, 0.02%)</title><rect x="93.2874%" y="469" width="0.0181%" height="15" fill="rgb(247,92,11)" fg:x="97699" fg:w="19"/><text x="93.5374%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (19 samples, 0.02%)</title><rect x="93.2874%" y="453" width="0.0181%" height="15" fill="rgb(239,200,7)" fg:x="97699" fg:w="19"/><text x="93.5374%" y="463.50"></text></g><g><title>___pthread_rwlock_rdlock (29 samples, 0.03%)</title><rect x="93.3199%" y="485" width="0.0277%" height="15" fill="rgb(227,115,8)" fg:x="97733" fg:w="29"/><text x="93.5699%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (211 samples, 0.20%)</title><rect x="93.1643%" y="549" width="0.2015%" height="15" fill="rgb(215,189,27)" fg:x="97570" fg:w="211"/><text x="93.4143%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (53 samples, 0.05%)</title><rect x="93.3151%" y="533" width="0.0506%" height="15" fill="rgb(251,216,39)" fg:x="97728" fg:w="53"/><text x="93.5651%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (51 samples, 0.05%)</title><rect x="93.3170%" y="517" width="0.0487%" height="15" fill="rgb(207,29,47)" fg:x="97730" fg:w="51"/><text x="93.5670%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (51 samples, 0.05%)</title><rect x="93.3170%" y="501" width="0.0487%" height="15" fill="rgb(210,71,34)" fg:x="97730" fg:w="51"/><text x="93.5670%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (19 samples, 0.02%)</title><rect x="93.3476%" y="485" width="0.0181%" height="15" fill="rgb(253,217,51)" fg:x="97762" fg:w="19"/><text x="93.5976%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (19 samples, 0.02%)</title><rect x="93.3476%" y="469" width="0.0181%" height="15" fill="rgb(222,117,46)" fg:x="97762" fg:w="19"/><text x="93.5976%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="93.3772%" y="469" width="0.0334%" height="15" fill="rgb(226,132,6)" fg:x="97793" fg:w="35"/><text x="93.6272%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (42 samples, 0.04%)</title><rect x="93.3715%" y="533" width="0.0401%" height="15" fill="rgb(254,145,51)" fg:x="97787" fg:w="42"/><text x="93.6215%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="93.3715%" y="517" width="0.0401%" height="15" fill="rgb(231,199,27)" fg:x="97787" fg:w="42"/><text x="93.6215%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="93.3734%" y="501" width="0.0382%" height="15" fill="rgb(245,158,14)" fg:x="97789" fg:w="40"/><text x="93.6234%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (36 samples, 0.03%)</title><rect x="93.3772%" y="485" width="0.0344%" height="15" fill="rgb(240,113,14)" fg:x="97793" fg:w="36"/><text x="93.6272%" y="495.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (297 samples, 0.28%)</title><rect x="93.1499%" y="661" width="0.2836%" height="15" fill="rgb(210,20,13)" fg:x="97555" fg:w="297"/><text x="93.3999%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (296 samples, 0.28%)</title><rect x="93.1509%" y="645" width="0.2826%" height="15" fill="rgb(241,144,13)" fg:x="97556" fg:w="296"/><text x="93.4009%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (294 samples, 0.28%)</title><rect x="93.1528%" y="629" width="0.2807%" height="15" fill="rgb(235,43,34)" fg:x="97558" fg:w="294"/><text x="93.4028%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.28%)</title><rect x="93.1566%" y="613" width="0.2769%" height="15" fill="rgb(208,36,20)" fg:x="97562" fg:w="290"/><text x="93.4066%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (290 samples, 0.28%)</title><rect x="93.1566%" y="597" width="0.2769%" height="15" fill="rgb(239,204,10)" fg:x="97562" fg:w="290"/><text x="93.4066%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (288 samples, 0.27%)</title><rect x="93.1585%" y="581" width="0.2750%" height="15" fill="rgb(217,84,43)" fg:x="97564" fg:w="288"/><text x="93.4085%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (286 samples, 0.27%)</title><rect x="93.1604%" y="565" width="0.2731%" height="15" fill="rgb(241,170,50)" fg:x="97566" fg:w="286"/><text x="93.4104%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (71 samples, 0.07%)</title><rect x="93.3657%" y="549" width="0.0678%" height="15" fill="rgb(226,205,29)" fg:x="97781" fg:w="71"/><text x="93.6157%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="93.4116%" y="533" width="0.0220%" height="15" fill="rgb(233,113,1)" fg:x="97829" fg:w="23"/><text x="93.6616%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="93.4125%" y="517" width="0.0210%" height="15" fill="rgb(253,98,13)" fg:x="97830" fg:w="22"/><text x="93.6625%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.02%)</title><rect x="93.4125%" y="501" width="0.0210%" height="15" fill="rgb(211,115,12)" fg:x="97830" fg:w="22"/><text x="93.6625%" y="511.50"></text></g><g><title>___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="93.4125%" y="485" width="0.0210%" height="15" fill="rgb(208,12,16)" fg:x="97830" fg:w="22"/><text x="93.6625%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.01%)</title><rect x="93.4650%" y="613" width="0.0105%" height="15" fill="rgb(237,193,54)" fg:x="97885" fg:w="11"/><text x="93.7150%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="93.4775%" y="533" width="0.0191%" height="15" fill="rgb(243,22,42)" fg:x="97898" fg:w="20"/><text x="93.7275%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (23 samples, 0.02%)</title><rect x="93.4755%" y="613" width="0.0220%" height="15" fill="rgb(233,151,36)" fg:x="97896" fg:w="23"/><text x="93.7255%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.02%)</title><rect x="93.4755%" y="597" width="0.0220%" height="15" fill="rgb(237,57,45)" fg:x="97896" fg:w="23"/><text x="93.7255%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="93.4755%" y="581" width="0.0220%" height="15" fill="rgb(221,88,17)" fg:x="97896" fg:w="23"/><text x="93.7255%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="93.4765%" y="565" width="0.0210%" height="15" fill="rgb(230,79,15)" fg:x="97897" fg:w="22"/><text x="93.7265%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="93.4775%" y="549" width="0.0201%" height="15" fill="rgb(213,57,13)" fg:x="97898" fg:w="21"/><text x="93.7275%" y="559.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (102 samples, 0.10%)</title><rect x="93.4498%" y="629" width="0.0974%" height="15" fill="rgb(222,116,39)" fg:x="97869" fg:w="102"/><text x="93.6998%" y="639.50"></text></g><g><title>event_listener::Inner::lock (49 samples, 0.05%)</title><rect x="93.5004%" y="613" width="0.0468%" height="15" fill="rgb(245,107,2)" fg:x="97922" fg:w="49"/><text x="93.7504%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 0.05%)</title><rect x="93.5004%" y="597" width="0.0468%" height="15" fill="rgb(238,1,10)" fg:x="97922" fg:w="49"/><text x="93.7504%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (49 samples, 0.05%)</title><rect x="93.5004%" y="581" width="0.0468%" height="15" fill="rgb(249,4,48)" fg:x="97922" fg:w="49"/><text x="93.7504%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (45 samples, 0.04%)</title><rect x="93.5042%" y="565" width="0.0430%" height="15" fill="rgb(223,151,18)" fg:x="97926" fg:w="45"/><text x="93.7542%" y="575.50"></text></g><g><title>___pthread_mutex_lock (45 samples, 0.04%)</title><rect x="93.5042%" y="549" width="0.0430%" height="15" fill="rgb(227,65,43)" fg:x="97926" fg:w="45"/><text x="93.7542%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,015 samples, 12.43%)</title><rect x="81.1752%" y="773" width="12.4273%" height="15" fill="rgb(218,40,45)" fg:x="85014" fg:w="13015"/><text x="81.4252%" y="783.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,013 samples, 12.43%)</title><rect x="81.1771%" y="757" width="12.4254%" height="15" fill="rgb(252,121,31)" fg:x="85016" fg:w="13013"/><text x="81.4271%" y="767.50">&lt;core::future::from..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (502 samples, 0.48%)</title><rect x="93.1232%" y="741" width="0.4793%" height="15" fill="rgb(219,158,43)" fg:x="97527" fg:w="502"/><text x="93.3732%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (479 samples, 0.46%)</title><rect x="93.1452%" y="725" width="0.4574%" height="15" fill="rgb(231,162,42)" fg:x="97550" fg:w="479"/><text x="93.3952%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (478 samples, 0.46%)</title><rect x="93.1461%" y="709" width="0.4564%" height="15" fill="rgb(217,179,25)" fg:x="97551" fg:w="478"/><text x="93.3961%" y="719.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (477 samples, 0.46%)</title><rect x="93.1471%" y="693" width="0.4555%" height="15" fill="rgb(206,212,31)" fg:x="97552" fg:w="477"/><text x="93.3971%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (475 samples, 0.45%)</title><rect x="93.1490%" y="677" width="0.4536%" height="15" fill="rgb(235,144,12)" fg:x="97554" fg:w="475"/><text x="93.3990%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (177 samples, 0.17%)</title><rect x="93.4335%" y="661" width="0.1690%" height="15" fill="rgb(213,51,10)" fg:x="97852" fg:w="177"/><text x="93.6835%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (175 samples, 0.17%)</title><rect x="93.4354%" y="645" width="0.1671%" height="15" fill="rgb(231,145,14)" fg:x="97854" fg:w="175"/><text x="93.6854%" y="655.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (58 samples, 0.06%)</title><rect x="93.5472%" y="629" width="0.0554%" height="15" fill="rgb(235,15,28)" fg:x="97971" fg:w="58"/><text x="93.7972%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (58 samples, 0.06%)</title><rect x="93.5472%" y="613" width="0.0554%" height="15" fill="rgb(237,206,10)" fg:x="97971" fg:w="58"/><text x="93.7972%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (34 samples, 0.03%)</title><rect x="93.5701%" y="597" width="0.0325%" height="15" fill="rgb(236,227,27)" fg:x="97995" fg:w="34"/><text x="93.8201%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (34 samples, 0.03%)</title><rect x="93.5701%" y="581" width="0.0325%" height="15" fill="rgb(246,83,35)" fg:x="97995" fg:w="34"/><text x="93.8201%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (34 samples, 0.03%)</title><rect x="93.5701%" y="565" width="0.0325%" height="15" fill="rgb(220,136,24)" fg:x="97995" fg:w="34"/><text x="93.8201%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.03%)</title><rect x="93.5701%" y="549" width="0.0325%" height="15" fill="rgb(217,3,25)" fg:x="97995" fg:w="34"/><text x="93.8201%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::get (12 samples, 0.01%)</title><rect x="93.6025%" y="773" width="0.0115%" height="15" fill="rgb(239,24,14)" fg:x="98029" fg:w="12"/><text x="93.8525%" y="783.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="93.6025%" y="757" width="0.0115%" height="15" fill="rgb(244,16,53)" fg:x="98029" fg:w="12"/><text x="93.8525%" y="767.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (12 samples, 0.01%)</title><rect x="93.6025%" y="741" width="0.0115%" height="15" fill="rgb(208,175,44)" fg:x="98029" fg:w="12"/><text x="93.8525%" y="751.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (12 samples, 0.01%)</title><rect x="93.6025%" y="725" width="0.0115%" height="15" fill="rgb(252,18,48)" fg:x="98029" fg:w="12"/><text x="93.8525%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 0.01%)</title><rect x="93.6025%" y="709" width="0.0115%" height="15" fill="rgb(234,199,32)" fg:x="98029" fg:w="12"/><text x="93.8525%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (94 samples, 0.09%)</title><rect x="93.6140%" y="773" width="0.0898%" height="15" fill="rgb(225,77,54)" fg:x="98041" fg:w="94"/><text x="93.8640%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (94 samples, 0.09%)</title><rect x="93.6140%" y="757" width="0.0898%" height="15" fill="rgb(225,42,25)" fg:x="98041" fg:w="94"/><text x="93.8640%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (94 samples, 0.09%)</title><rect x="93.6140%" y="741" width="0.0898%" height="15" fill="rgb(242,227,46)" fg:x="98041" fg:w="94"/><text x="93.8640%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (92 samples, 0.09%)</title><rect x="93.6159%" y="725" width="0.0878%" height="15" fill="rgb(246,197,35)" fg:x="98043" fg:w="92"/><text x="93.8659%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (92 samples, 0.09%)</title><rect x="93.6159%" y="709" width="0.0878%" height="15" fill="rgb(215,159,26)" fg:x="98043" fg:w="92"/><text x="93.8659%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (12 samples, 0.01%)</title><rect x="93.7209%" y="581" width="0.0115%" height="15" fill="rgb(212,194,50)" fg:x="98153" fg:w="12"/><text x="93.9709%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (11 samples, 0.01%)</title><rect x="93.7219%" y="565" width="0.0105%" height="15" fill="rgb(246,132,1)" fg:x="98154" fg:w="11"/><text x="93.9719%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (11 samples, 0.01%)</title><rect x="93.7219%" y="549" width="0.0105%" height="15" fill="rgb(217,71,7)" fg:x="98154" fg:w="11"/><text x="93.9719%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (11 samples, 0.01%)</title><rect x="93.7219%" y="533" width="0.0105%" height="15" fill="rgb(252,59,32)" fg:x="98154" fg:w="11"/><text x="93.9719%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (11 samples, 0.01%)</title><rect x="93.7219%" y="517" width="0.0105%" height="15" fill="rgb(253,204,25)" fg:x="98154" fg:w="11"/><text x="93.9719%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="93.7209%" y="741" width="0.0143%" height="15" fill="rgb(232,21,16)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (15 samples, 0.01%)</title><rect x="93.7209%" y="725" width="0.0143%" height="15" fill="rgb(248,90,29)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (15 samples, 0.01%)</title><rect x="93.7209%" y="709" width="0.0143%" height="15" fill="rgb(249,223,7)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (15 samples, 0.01%)</title><rect x="93.7209%" y="693" width="0.0143%" height="15" fill="rgb(231,119,42)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (15 samples, 0.01%)</title><rect x="93.7209%" y="677" width="0.0143%" height="15" fill="rgb(215,41,35)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="93.7209%" y="661" width="0.0143%" height="15" fill="rgb(220,44,45)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="93.7209%" y="645" width="0.0143%" height="15" fill="rgb(253,197,36)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="655.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="93.7209%" y="629" width="0.0143%" height="15" fill="rgb(245,225,54)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="93.7209%" y="613" width="0.0143%" height="15" fill="rgb(239,94,37)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="623.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="93.7209%" y="597" width="0.0143%" height="15" fill="rgb(242,217,10)" fg:x="98153" fg:w="15"/><text x="93.9709%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="93.7591%" y="421" width="0.0134%" height="15" fill="rgb(250,193,7)" fg:x="98193" fg:w="14"/><text x="94.0091%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (69 samples, 0.07%)</title><rect x="93.7591%" y="453" width="0.0659%" height="15" fill="rgb(230,104,19)" fg:x="98193" fg:w="69"/><text x="94.0091%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (69 samples, 0.07%)</title><rect x="93.7591%" y="437" width="0.0659%" height="15" fill="rgb(230,181,4)" fg:x="98193" fg:w="69"/><text x="94.0091%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (55 samples, 0.05%)</title><rect x="93.7725%" y="421" width="0.0525%" height="15" fill="rgb(216,219,49)" fg:x="98207" fg:w="55"/><text x="94.0225%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (49 samples, 0.05%)</title><rect x="93.7782%" y="405" width="0.0468%" height="15" fill="rgb(254,144,0)" fg:x="98213" fg:w="49"/><text x="94.0282%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (49 samples, 0.05%)</title><rect x="93.7782%" y="389" width="0.0468%" height="15" fill="rgb(205,209,38)" fg:x="98213" fg:w="49"/><text x="94.0282%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (49 samples, 0.05%)</title><rect x="93.7782%" y="373" width="0.0468%" height="15" fill="rgb(240,21,42)" fg:x="98213" fg:w="49"/><text x="94.0282%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="93.7553%" y="501" width="0.0964%" height="15" fill="rgb(241,132,3)" fg:x="98189" fg:w="101"/><text x="94.0053%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="93.7553%" y="485" width="0.0964%" height="15" fill="rgb(225,14,2)" fg:x="98189" fg:w="101"/><text x="94.0053%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (99 samples, 0.09%)</title><rect x="93.7572%" y="469" width="0.0945%" height="15" fill="rgb(210,141,35)" fg:x="98191" fg:w="99"/><text x="94.0072%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (18 samples, 0.02%)</title><rect x="93.8346%" y="453" width="0.0172%" height="15" fill="rgb(251,14,44)" fg:x="98272" fg:w="18"/><text x="94.0846%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (18 samples, 0.02%)</title><rect x="93.8346%" y="437" width="0.0172%" height="15" fill="rgb(247,48,18)" fg:x="98272" fg:w="18"/><text x="94.0846%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (123 samples, 0.12%)</title><rect x="93.7381%" y="741" width="0.1174%" height="15" fill="rgb(225,0,40)" fg:x="98171" fg:w="123"/><text x="93.9881%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (121 samples, 0.12%)</title><rect x="93.7400%" y="725" width="0.1155%" height="15" fill="rgb(221,31,33)" fg:x="98173" fg:w="121"/><text x="93.9900%" y="735.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (105 samples, 0.10%)</title><rect x="93.7553%" y="709" width="0.1003%" height="15" fill="rgb(237,42,40)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (105 samples, 0.10%)</title><rect x="93.7553%" y="693" width="0.1003%" height="15" fill="rgb(233,51,29)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (105 samples, 0.10%)</title><rect x="93.7553%" y="677" width="0.1003%" height="15" fill="rgb(226,58,20)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (105 samples, 0.10%)</title><rect x="93.7553%" y="661" width="0.1003%" height="15" fill="rgb(208,98,7)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (105 samples, 0.10%)</title><rect x="93.7553%" y="645" width="0.1003%" height="15" fill="rgb(228,143,44)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (105 samples, 0.10%)</title><rect x="93.7553%" y="629" width="0.1003%" height="15" fill="rgb(246,55,38)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (105 samples, 0.10%)</title><rect x="93.7553%" y="613" width="0.1003%" height="15" fill="rgb(247,87,16)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (105 samples, 0.10%)</title><rect x="93.7553%" y="597" width="0.1003%" height="15" fill="rgb(234,129,42)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (105 samples, 0.10%)</title><rect x="93.7553%" y="581" width="0.1003%" height="15" fill="rgb(220,82,16)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="591.50"></text></g><g><title>alloc::alloc::alloc (105 samples, 0.10%)</title><rect x="93.7553%" y="565" width="0.1003%" height="15" fill="rgb(211,88,4)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="575.50"></text></g><g><title>__rg_alloc (105 samples, 0.10%)</title><rect x="93.7553%" y="549" width="0.1003%" height="15" fill="rgb(248,151,21)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (105 samples, 0.10%)</title><rect x="93.7553%" y="533" width="0.1003%" height="15" fill="rgb(238,163,6)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="543.50"></text></g><g><title>rust_alloc (105 samples, 0.10%)</title><rect x="93.7553%" y="517" width="0.1003%" height="15" fill="rgb(209,183,11)" fg:x="98189" fg:w="105"/><text x="94.0053%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (11 samples, 0.01%)</title><rect x="93.8556%" y="741" width="0.0105%" height="15" fill="rgb(219,37,20)" fg:x="98294" fg:w="11"/><text x="94.1056%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="93.8661%" y="709" width="0.0172%" height="15" fill="rgb(210,158,4)" fg:x="98305" fg:w="18"/><text x="94.1161%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="93.8661%" y="693" width="0.0172%" height="15" fill="rgb(221,167,53)" fg:x="98305" fg:w="18"/><text x="94.1161%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="93.8661%" y="677" width="0.0172%" height="15" fill="rgb(237,151,45)" fg:x="98305" fg:w="18"/><text x="94.1161%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="93.8661%" y="661" width="0.0172%" height="15" fill="rgb(231,39,3)" fg:x="98305" fg:w="18"/><text x="94.1161%" y="671.50"></text></g><g><title>core::mem::drop (19 samples, 0.02%)</title><rect x="93.8661%" y="741" width="0.0181%" height="15" fill="rgb(212,167,28)" fg:x="98305" fg:w="19"/><text x="94.1161%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="93.8661%" y="725" width="0.0181%" height="15" fill="rgb(232,178,8)" fg:x="98305" fg:w="19"/><text x="94.1161%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (225 samples, 0.21%)</title><rect x="93.7152%" y="757" width="0.2148%" height="15" fill="rgb(225,151,20)" fg:x="98147" fg:w="225"/><text x="93.9652%" y="767.50"></text></g><g><title>std::time::Instant::now (23 samples, 0.02%)</title><rect x="93.9081%" y="741" width="0.0220%" height="15" fill="rgb(238,3,37)" fg:x="98349" fg:w="23"/><text x="94.1581%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (23 samples, 0.02%)</title><rect x="93.9081%" y="725" width="0.0220%" height="15" fill="rgb(251,147,42)" fg:x="98349" fg:w="23"/><text x="94.1581%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (23 samples, 0.02%)</title><rect x="93.9081%" y="709" width="0.0220%" height="15" fill="rgb(208,173,10)" fg:x="98349" fg:w="23"/><text x="94.1581%" y="719.50"></text></g><g><title>__clock_gettime_2 (23 samples, 0.02%)</title><rect x="93.9081%" y="693" width="0.0220%" height="15" fill="rgb(246,225,4)" fg:x="98349" fg:w="23"/><text x="94.1581%" y="703.50"></text></g><g><title>__vdso_clock_gettime (21 samples, 0.02%)</title><rect x="93.9100%" y="677" width="0.0201%" height="15" fill="rgb(248,102,6)" fg:x="98351" fg:w="21"/><text x="94.1600%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="93.9491%" y="677" width="0.0105%" height="15" fill="rgb(232,6,21)" fg:x="98392" fg:w="11"/><text x="94.1991%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (17 samples, 0.02%)</title><rect x="93.9472%" y="741" width="0.0162%" height="15" fill="rgb(221,179,22)" fg:x="98390" fg:w="17"/><text x="94.1972%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="93.9472%" y="725" width="0.0162%" height="15" fill="rgb(252,50,20)" fg:x="98390" fg:w="17"/><text x="94.1972%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="93.9491%" y="709" width="0.0143%" height="15" fill="rgb(222,56,38)" fg:x="98392" fg:w="15"/><text x="94.1991%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="93.9491%" y="693" width="0.0143%" height="15" fill="rgb(206,193,29)" fg:x="98392" fg:w="15"/><text x="94.1991%" y="703.50"></text></g><g><title>__fdget_pos (23 samples, 0.02%)</title><rect x="94.0083%" y="661" width="0.0220%" height="15" fill="rgb(239,192,45)" fg:x="98454" fg:w="23"/><text x="94.2583%" y="671.50"></text></g><g><title>__fget_light (20 samples, 0.02%)</title><rect x="94.0112%" y="645" width="0.0191%" height="15" fill="rgb(254,18,36)" fg:x="98457" fg:w="20"/><text x="94.2612%" y="655.50"></text></g><g><title>fsnotify_perm.part.0 (11 samples, 0.01%)</title><rect x="94.0427%" y="645" width="0.0105%" height="15" fill="rgb(221,127,11)" fg:x="98490" fg:w="11"/><text x="94.2927%" y="655.50"></text></g><g><title>__wake_up_common (28 samples, 0.03%)</title><rect x="94.0695%" y="613" width="0.0267%" height="15" fill="rgb(234,146,35)" fg:x="98518" fg:w="28"/><text x="94.3195%" y="623.50"></text></g><g><title>ep_poll_callback (28 samples, 0.03%)</title><rect x="94.0695%" y="597" width="0.0267%" height="15" fill="rgb(254,201,37)" fg:x="98518" fg:w="28"/><text x="94.3195%" y="607.50"></text></g><g><title>_copy_to_iter (17 samples, 0.02%)</title><rect x="94.0962%" y="613" width="0.0162%" height="15" fill="rgb(211,202,23)" fg:x="98546" fg:w="17"/><text x="94.3462%" y="623.50"></text></g><g><title>_raw_spin_lock_irq (11 samples, 0.01%)</title><rect x="94.1124%" y="613" width="0.0105%" height="15" fill="rgb(237,91,2)" fg:x="98563" fg:w="11"/><text x="94.3624%" y="623.50"></text></g><g><title>new_sync_read (74 samples, 0.07%)</title><rect x="94.0532%" y="645" width="0.0707%" height="15" fill="rgb(226,228,36)" fg:x="98501" fg:w="74"/><text x="94.3032%" y="655.50"></text></g><g><title>eventfd_read (66 samples, 0.06%)</title><rect x="94.0609%" y="629" width="0.0630%" height="15" fill="rgb(213,63,50)" fg:x="98509" fg:w="66"/><text x="94.3109%" y="639.50"></text></g><g><title>ksys_read (132 samples, 0.13%)</title><rect x="94.0036%" y="677" width="0.1260%" height="15" fill="rgb(235,194,19)" fg:x="98449" fg:w="132"/><text x="94.2536%" y="687.50"></text></g><g><title>vfs_read (98 samples, 0.09%)</title><rect x="94.0360%" y="661" width="0.0936%" height="15" fill="rgb(207,204,18)" fg:x="98483" fg:w="98"/><text x="94.2860%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (79 samples, 0.08%)</title><rect x="94.1325%" y="677" width="0.0754%" height="15" fill="rgb(248,8,7)" fg:x="98584" fg:w="79"/><text x="94.3825%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (231 samples, 0.22%)</title><rect x="93.9940%" y="709" width="0.2206%" height="15" fill="rgb(223,145,47)" fg:x="98439" fg:w="231"/><text x="94.2440%" y="719.50"></text></g><g><title>do_syscall_64 (231 samples, 0.22%)</title><rect x="93.9940%" y="693" width="0.2206%" height="15" fill="rgb(228,84,11)" fg:x="98439" fg:w="231"/><text x="94.2440%" y="703.50"></text></g><g><title>__libc_read (244 samples, 0.23%)</title><rect x="93.9835%" y="725" width="0.2330%" height="15" fill="rgb(218,76,45)" fg:x="98428" fg:w="244"/><text x="94.2335%" y="735.50"></text></g><g><title>__entry_text_start (12 samples, 0.01%)</title><rect x="94.2318%" y="709" width="0.0115%" height="15" fill="rgb(223,80,15)" fg:x="98688" fg:w="12"/><text x="94.4818%" y="719.50"></text></g><g><title>__fget_light (11 samples, 0.01%)</title><rect x="94.3120%" y="645" width="0.0105%" height="15" fill="rgb(219,218,33)" fg:x="98772" fg:w="11"/><text x="94.5620%" y="655.50"></text></g><g><title>_raw_write_lock_irq (15 samples, 0.01%)</title><rect x="94.3359%" y="645" width="0.0143%" height="15" fill="rgb(208,51,11)" fg:x="98797" fg:w="15"/><text x="94.5859%" y="655.50"></text></g><g><title>ep_item_poll.isra.0 (44 samples, 0.04%)</title><rect x="94.3635%" y="645" width="0.0420%" height="15" fill="rgb(229,165,39)" fg:x="98826" fg:w="44"/><text x="94.6135%" y="655.50"></text></g><g><title>eventfd_poll (24 samples, 0.02%)</title><rect x="94.3826%" y="629" width="0.0229%" height="15" fill="rgb(241,100,24)" fg:x="98846" fg:w="24"/><text x="94.6326%" y="639.50"></text></g><g><title>mutex_lock (12 samples, 0.01%)</title><rect x="94.4094%" y="645" width="0.0115%" height="15" fill="rgb(228,14,23)" fg:x="98874" fg:w="12"/><text x="94.6594%" y="655.50"></text></g><g><title>__perf_event_task_sched_out (21 samples, 0.02%)</title><rect x="94.4657%" y="597" width="0.0201%" height="15" fill="rgb(247,116,52)" fg:x="98933" fg:w="21"/><text x="94.7157%" y="607.50"></text></g><g><title>__calc_delta (12 samples, 0.01%)</title><rect x="94.5345%" y="549" width="0.0115%" height="15" fill="rgb(216,149,33)" fg:x="99005" fg:w="12"/><text x="94.7845%" y="559.50"></text></g><g><title>cpuacct_charge (12 samples, 0.01%)</title><rect x="94.5497%" y="549" width="0.0115%" height="15" fill="rgb(238,142,29)" fg:x="99021" fg:w="12"/><text x="94.7997%" y="559.50"></text></g><g><title>update_curr (41 samples, 0.04%)</title><rect x="94.5249%" y="565" width="0.0391%" height="15" fill="rgb(224,83,40)" fg:x="98995" fg:w="41"/><text x="94.7749%" y="575.50"></text></g><g><title>dequeue_entity (89 samples, 0.08%)</title><rect x="94.5010%" y="581" width="0.0850%" height="15" fill="rgb(234,165,11)" fg:x="98970" fg:w="89"/><text x="94.7510%" y="591.50"></text></g><g><title>update_load_avg (23 samples, 0.02%)</title><rect x="94.5641%" y="565" width="0.0220%" height="15" fill="rgb(215,96,23)" fg:x="99036" fg:w="23"/><text x="94.8141%" y="575.50"></text></g><g><title>dequeue_task_fair (105 samples, 0.10%)</title><rect x="94.4867%" y="597" width="0.1003%" height="15" fill="rgb(233,179,26)" fg:x="98955" fg:w="105"/><text x="94.7367%" y="607.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (60 samples, 0.06%)</title><rect x="94.6070%" y="565" width="0.0573%" height="15" fill="rgb(225,129,33)" fg:x="99081" fg:w="60"/><text x="94.8570%" y="575.50"></text></g><g><title>native_write_msr (60 samples, 0.06%)</title><rect x="94.6070%" y="549" width="0.0573%" height="15" fill="rgb(237,49,13)" fg:x="99081" fg:w="60"/><text x="94.8570%" y="559.50"></text></g><g><title>__perf_event_task_sched_in (67 samples, 0.06%)</title><rect x="94.6042%" y="581" width="0.0640%" height="15" fill="rgb(211,3,31)" fg:x="99078" fg:w="67"/><text x="94.8542%" y="591.50"></text></g><g><title>finish_task_switch.isra.0 (90 samples, 0.09%)</title><rect x="94.5870%" y="597" width="0.0859%" height="15" fill="rgb(216,152,19)" fg:x="99060" fg:w="90"/><text x="94.8370%" y="607.50"></text></g><g><title>pick_next_task_fair (11 samples, 0.01%)</title><rect x="94.6739%" y="597" width="0.0105%" height="15" fill="rgb(251,121,35)" fg:x="99151" fg:w="11"/><text x="94.9239%" y="607.50"></text></g><g><title>psi_group_change (41 samples, 0.04%)</title><rect x="94.6997%" y="581" width="0.0391%" height="15" fill="rgb(210,217,47)" fg:x="99178" fg:w="41"/><text x="94.9497%" y="591.50"></text></g><g><title>psi_task_switch (58 samples, 0.06%)</title><rect x="94.6892%" y="597" width="0.0554%" height="15" fill="rgb(244,116,22)" fg:x="99167" fg:w="58"/><text x="94.9392%" y="607.50"></text></g><g><title>put_prev_task_fair (14 samples, 0.01%)</title><rect x="94.7445%" y="597" width="0.0134%" height="15" fill="rgb(228,17,21)" fg:x="99225" fg:w="14"/><text x="94.9945%" y="607.50"></text></g><g><title>do_epoll_wait (531 samples, 0.51%)</title><rect x="94.2747%" y="661" width="0.5070%" height="15" fill="rgb(240,149,34)" fg:x="98733" fg:w="531"/><text x="94.5247%" y="671.50"></text></g><g><title>schedule_hrtimeout_range_clock (372 samples, 0.36%)</title><rect x="94.4266%" y="645" width="0.3552%" height="15" fill="rgb(208,125,47)" fg:x="98892" fg:w="372"/><text x="94.6766%" y="655.50"></text></g><g><title>schedule (363 samples, 0.35%)</title><rect x="94.4352%" y="629" width="0.3466%" height="15" fill="rgb(249,186,39)" fg:x="98901" fg:w="363"/><text x="94.6852%" y="639.50"></text></g><g><title>__schedule (355 samples, 0.34%)</title><rect x="94.4428%" y="613" width="0.3390%" height="15" fill="rgb(240,220,33)" fg:x="98909" fg:w="355"/><text x="94.6928%" y="623.50"></text></g><g><title>update_rq_clock (21 samples, 0.02%)</title><rect x="94.7617%" y="597" width="0.0201%" height="15" fill="rgb(243,110,23)" fg:x="99243" fg:w="21"/><text x="95.0117%" y="607.50"></text></g><g><title>sched_clock_cpu (11 samples, 0.01%)</title><rect x="94.7713%" y="581" width="0.0105%" height="15" fill="rgb(219,163,46)" fg:x="99253" fg:w="11"/><text x="95.0213%" y="591.50"></text></g><g><title>native_sched_clock (11 samples, 0.01%)</title><rect x="94.7713%" y="565" width="0.0105%" height="15" fill="rgb(216,126,30)" fg:x="99253" fg:w="11"/><text x="95.0213%" y="575.50"></text></g><g><title>__x64_sys_epoll_wait (549 samples, 0.52%)</title><rect x="94.2623%" y="677" width="0.5242%" height="15" fill="rgb(208,139,11)" fg:x="98720" fg:w="549"/><text x="94.5123%" y="687.50"></text></g><g><title>__rseq_handle_notify_resume (14 samples, 0.01%)</title><rect x="94.8734%" y="645" width="0.0134%" height="15" fill="rgb(213,118,36)" fg:x="99360" fg:w="14"/><text x="95.1234%" y="655.50"></text></g><g><title>exit_to_user_mode_prepare (34 samples, 0.03%)</title><rect x="94.8629%" y="661" width="0.0325%" height="15" fill="rgb(226,43,17)" fg:x="99349" fg:w="34"/><text x="95.1129%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (122 samples, 0.12%)</title><rect x="94.7885%" y="677" width="0.1165%" height="15" fill="rgb(254,217,4)" fg:x="99271" fg:w="122"/><text x="95.0385%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (695 samples, 0.66%)</title><rect x="94.2451%" y="709" width="0.6636%" height="15" fill="rgb(210,134,47)" fg:x="98702" fg:w="695"/><text x="94.4951%" y="719.50"></text></g><g><title>do_syscall_64 (685 samples, 0.65%)</title><rect x="94.2547%" y="693" width="0.6541%" height="15" fill="rgb(237,24,49)" fg:x="98712" fg:w="685"/><text x="94.5047%" y="703.50"></text></g><g><title>epoll_wait (731 samples, 0.70%)</title><rect x="94.2165%" y="725" width="0.6980%" height="15" fill="rgb(251,39,46)" fg:x="98672" fg:w="731"/><text x="94.4665%" y="735.50"></text></g><g><title>__entry_text_start (18 samples, 0.02%)</title><rect x="94.9298%" y="677" width="0.0172%" height="15" fill="rgb(251,220,3)" fg:x="99419" fg:w="18"/><text x="95.1798%" y="687.50"></text></g><g><title>_copy_from_user (19 samples, 0.02%)</title><rect x="94.9718%" y="629" width="0.0181%" height="15" fill="rgb(228,105,12)" fg:x="99463" fg:w="19"/><text x="95.2218%" y="639.50"></text></g><g><title>copy_user_generic_unrolled (11 samples, 0.01%)</title><rect x="94.9794%" y="613" width="0.0105%" height="15" fill="rgb(215,196,1)" fg:x="99471" fg:w="11"/><text x="95.2294%" y="623.50"></text></g><g><title>__fget_light (36 samples, 0.03%)</title><rect x="95.0186%" y="613" width="0.0344%" height="15" fill="rgb(214,33,39)" fg:x="99512" fg:w="36"/><text x="95.2686%" y="623.50"></text></g><g><title>ep_item_poll.isra.0 (24 samples, 0.02%)</title><rect x="95.0529%" y="613" width="0.0229%" height="15" fill="rgb(220,19,52)" fg:x="99548" fg:w="24"/><text x="95.3029%" y="623.50"></text></g><g><title>timerfd_poll (19 samples, 0.02%)</title><rect x="95.0577%" y="597" width="0.0181%" height="15" fill="rgb(221,78,38)" fg:x="99553" fg:w="19"/><text x="95.3077%" y="607.50"></text></g><g><title>fput_many (11 samples, 0.01%)</title><rect x="95.0759%" y="613" width="0.0105%" height="15" fill="rgb(253,30,16)" fg:x="99572" fg:w="11"/><text x="95.3259%" y="623.50"></text></g><g><title>__x64_sys_epoll_ctl (152 samples, 0.15%)</title><rect x="94.9546%" y="645" width="0.1451%" height="15" fill="rgb(242,65,0)" fg:x="99445" fg:w="152"/><text x="95.2046%" y="655.50"></text></g><g><title>do_epoll_ctl (115 samples, 0.11%)</title><rect x="94.9899%" y="629" width="0.1098%" height="15" fill="rgb(235,201,12)" fg:x="99482" fg:w="115"/><text x="95.2399%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (162 samples, 0.15%)</title><rect x="95.1016%" y="645" width="0.1547%" height="15" fill="rgb(233,161,9)" fg:x="99599" fg:w="162"/><text x="95.3516%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (334 samples, 0.32%)</title><rect x="94.9479%" y="677" width="0.3189%" height="15" fill="rgb(241,207,41)" fg:x="99438" fg:w="334"/><text x="95.1979%" y="687.50"></text></g><g><title>do_syscall_64 (330 samples, 0.32%)</title><rect x="94.9517%" y="661" width="0.3151%" height="15" fill="rgb(212,69,46)" fg:x="99442" fg:w="330"/><text x="95.2017%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (11 samples, 0.01%)</title><rect x="95.2563%" y="645" width="0.0105%" height="15" fill="rgb(239,69,45)" fg:x="99761" fg:w="11"/><text x="95.5063%" y="655.50"></text></g><g><title>__GI_epoll_ctl (370 samples, 0.35%)</title><rect x="94.9193%" y="693" width="0.3533%" height="15" fill="rgb(242,117,48)" fg:x="99408" fg:w="370"/><text x="95.1693%" y="703.50"></text></g><g><title>polling::epoll::Poller::modify (375 samples, 0.36%)</title><rect x="94.9154%" y="725" width="0.3581%" height="15" fill="rgb(228,41,36)" fg:x="99404" fg:w="375"/><text x="95.1654%" y="735.50"></text></g><g><title>polling::epoll::Poller::ctl (371 samples, 0.35%)</title><rect x="94.9193%" y="709" width="0.3542%" height="15" fill="rgb(212,3,32)" fg:x="99408" fg:w="371"/><text x="95.1693%" y="719.50"></text></g><g><title>__entry_text_start (13 samples, 0.01%)</title><rect x="95.2754%" y="709" width="0.0124%" height="15" fill="rgb(233,41,49)" fg:x="99781" fg:w="13"/><text x="95.5254%" y="719.50"></text></g><g><title>__fget_light (27 samples, 0.03%)</title><rect x="95.3184%" y="645" width="0.0258%" height="15" fill="rgb(252,170,49)" fg:x="99826" fg:w="27"/><text x="95.5684%" y="655.50"></text></g><g><title>enqueue_hrtimer (15 samples, 0.01%)</title><rect x="95.3891%" y="629" width="0.0143%" height="15" fill="rgb(229,53,26)" fg:x="99900" fg:w="15"/><text x="95.6391%" y="639.50"></text></g><g><title>timerqueue_add (12 samples, 0.01%)</title><rect x="95.3919%" y="613" width="0.0115%" height="15" fill="rgb(217,157,12)" fg:x="99903" fg:w="12"/><text x="95.6419%" y="623.50"></text></g><g><title>hrtimer_start_range_ns (46 samples, 0.04%)</title><rect x="95.3757%" y="645" width="0.0439%" height="15" fill="rgb(227,17,9)" fg:x="99886" fg:w="46"/><text x="95.6257%" y="655.50"></text></g><g><title>ktime_get (13 samples, 0.01%)</title><rect x="95.4072%" y="629" width="0.0124%" height="15" fill="rgb(218,84,12)" fg:x="99919" fg:w="13"/><text x="95.6572%" y="639.50"></text></g><g><title>hrtimer_try_to_cancel (18 samples, 0.02%)</title><rect x="95.4196%" y="645" width="0.0172%" height="15" fill="rgb(212,79,24)" fg:x="99932" fg:w="18"/><text x="95.6696%" y="655.50"></text></g><g><title>ktime_get (25 samples, 0.02%)</title><rect x="95.4368%" y="645" width="0.0239%" height="15" fill="rgb(217,222,37)" fg:x="99950" fg:w="25"/><text x="95.6868%" y="655.50"></text></g><g><title>read_tsc (15 samples, 0.01%)</title><rect x="95.4463%" y="629" width="0.0143%" height="15" fill="rgb(246,208,8)" fg:x="99960" fg:w="15"/><text x="95.6963%" y="639.50"></text></g><g><title>do_timerfd_settime (164 samples, 0.16%)</title><rect x="95.3060%" y="661" width="0.1566%" height="15" fill="rgb(244,133,10)" fg:x="99813" fg:w="164"/><text x="95.5560%" y="671.50"></text></g><g><title>__x64_sys_timerfd_settime (195 samples, 0.19%)</title><rect x="95.2936%" y="677" width="0.1862%" height="15" fill="rgb(209,219,41)" fg:x="99800" fg:w="195"/><text x="95.5436%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (108 samples, 0.10%)</title><rect x="95.4817%" y="677" width="0.1031%" height="15" fill="rgb(253,175,45)" fg:x="99997" fg:w="108"/><text x="95.7317%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (320 samples, 0.31%)</title><rect x="95.2888%" y="709" width="0.3056%" height="15" fill="rgb(235,100,37)" fg:x="99795" fg:w="320"/><text x="95.5388%" y="719.50"></text></g><g><title>do_syscall_64 (320 samples, 0.31%)</title><rect x="95.2888%" y="693" width="0.3056%" height="15" fill="rgb(225,87,19)" fg:x="99795" fg:w="320"/><text x="95.5388%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (1,703 samples, 1.63%)</title><rect x="93.9730%" y="741" width="1.6261%" height="15" fill="rgb(217,152,17)" fg:x="98417" fg:w="1703"/><text x="94.2230%" y="751.50"></text></g><g><title>syscall (341 samples, 0.33%)</title><rect x="95.2735%" y="725" width="0.3256%" height="15" fill="rgb(235,72,13)" fg:x="99779" fg:w="341"/><text x="95.5235%" y="735.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,996 samples, 1.91%)</title><rect x="93.7037%" y="773" width="1.9059%" height="15" fill="rgb(233,140,18)" fg:x="98135" fg:w="1996"/><text x="93.9537%" y="783.50">a..</text></g><g><title>polling::Poller::wait (1,752 samples, 1.67%)</title><rect x="93.9367%" y="757" width="1.6729%" height="15" fill="rgb(207,212,28)" fg:x="98379" fg:w="1752"/><text x="94.1867%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (11 samples, 0.01%)</title><rect x="95.5991%" y="741" width="0.0105%" height="15" fill="rgb(220,130,25)" fg:x="100120" fg:w="11"/><text x="95.8491%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (11 samples, 0.01%)</title><rect x="95.5991%" y="725" width="0.0105%" height="15" fill="rgb(205,55,34)" fg:x="100120" fg:w="11"/><text x="95.8491%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (11 samples, 0.01%)</title><rect x="95.5991%" y="709" width="0.0105%" height="15" fill="rgb(237,54,35)" fg:x="100120" fg:w="11"/><text x="95.8491%" y="719.50"></text></g><g><title>__GI___pthread_mutex_trylock (11 samples, 0.01%)</title><rect x="95.5991%" y="693" width="0.0105%" height="15" fill="rgb(208,67,23)" fg:x="100120" fg:w="11"/><text x="95.8491%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (13 samples, 0.01%)</title><rect x="95.6173%" y="773" width="0.0124%" height="15" fill="rgb(206,207,50)" fg:x="100139" fg:w="13"/><text x="95.8673%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="95.6173%" y="757" width="0.0124%" height="15" fill="rgb(213,211,42)" fg:x="100139" fg:w="13"/><text x="95.8673%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="95.6173%" y="741" width="0.0124%" height="15" fill="rgb(252,197,50)" fg:x="100139" fg:w="13"/><text x="95.8673%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="95.6173%" y="725" width="0.0124%" height="15" fill="rgb(251,211,41)" fg:x="100139" fg:w="13"/><text x="95.8673%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="95.6173%" y="709" width="0.0124%" height="15" fill="rgb(229,211,5)" fg:x="100139" fg:w="13"/><text x="95.8673%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="95.6173%" y="693" width="0.0124%" height="15" fill="rgb(239,36,31)" fg:x="100139" fg:w="13"/><text x="95.8673%" y="703.50"></text></g><g><title>__GI___pthread_cond_wait (24 samples, 0.02%)</title><rect x="95.6383%" y="741" width="0.0229%" height="15" fill="rgb(248,67,31)" fg:x="100161" fg:w="24"/><text x="95.8883%" y="751.50"></text></g><g><title>__futex_abstimed_wait_common (24 samples, 0.02%)</title><rect x="95.6383%" y="725" width="0.0229%" height="15" fill="rgb(249,55,44)" fg:x="100161" fg:w="24"/><text x="95.8883%" y="735.50"></text></g><g><title>__entry_text_start (24 samples, 0.02%)</title><rect x="95.6383%" y="709" width="0.0229%" height="15" fill="rgb(216,82,12)" fg:x="100161" fg:w="24"/><text x="95.8883%" y="719.50"></text></g><g><title>__entry_text_start (21 samples, 0.02%)</title><rect x="95.6984%" y="709" width="0.0201%" height="15" fill="rgb(242,174,1)" fg:x="100224" fg:w="21"/><text x="95.9484%" y="719.50"></text></g><g><title>futex_hash (14 samples, 0.01%)</title><rect x="95.8216%" y="629" width="0.0134%" height="15" fill="rgb(208,120,29)" fg:x="100353" fg:w="14"/><text x="96.0716%" y="639.50"></text></g><g><title>__x64_sys_futex (108 samples, 0.10%)</title><rect x="95.7481%" y="677" width="0.1031%" height="15" fill="rgb(221,105,43)" fg:x="100276" fg:w="108"/><text x="95.9981%" y="687.50"></text></g><g><title>do_futex (77 samples, 0.07%)</title><rect x="95.7777%" y="661" width="0.0735%" height="15" fill="rgb(234,124,22)" fg:x="100307" fg:w="77"/><text x="96.0277%" y="671.50"></text></g><g><title>futex_wake (67 samples, 0.06%)</title><rect x="95.7872%" y="645" width="0.0640%" height="15" fill="rgb(212,23,30)" fg:x="100317" fg:w="67"/><text x="96.0372%" y="655.50"></text></g><g><title>get_futex_key (17 samples, 0.02%)</title><rect x="95.8350%" y="629" width="0.0162%" height="15" fill="rgb(219,122,53)" fg:x="100367" fg:w="17"/><text x="96.0850%" y="639.50"></text></g><g><title>exit_to_user_mode_prepare (19 samples, 0.02%)</title><rect x="96.1482%" y="661" width="0.0181%" height="15" fill="rgb(248,84,24)" fg:x="100695" fg:w="19"/><text x="96.3982%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (330 samples, 0.32%)</title><rect x="95.8560%" y="677" width="0.3151%" height="15" fill="rgb(245,115,18)" fg:x="100389" fg:w="330"/><text x="96.1060%" y="687.50"></text></g><g><title>__audit_syscall_entry (20 samples, 0.02%)</title><rect x="96.1787%" y="661" width="0.0191%" height="15" fill="rgb(227,176,51)" fg:x="100727" fg:w="20"/><text x="96.4287%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (509 samples, 0.49%)</title><rect x="95.7194%" y="709" width="0.4860%" height="15" fill="rgb(229,63,42)" fg:x="100246" fg:w="509"/><text x="95.9694%" y="719.50"></text></g><g><title>do_syscall_64 (494 samples, 0.47%)</title><rect x="95.7338%" y="693" width="0.4717%" height="15" fill="rgb(247,202,24)" fg:x="100261" fg:w="494"/><text x="95.9838%" y="703.50"></text></g><g><title>syscall_trace_enter.constprop.0 (36 samples, 0.03%)</title><rect x="96.1711%" y="677" width="0.0344%" height="15" fill="rgb(244,173,20)" fg:x="100719" fg:w="36"/><text x="96.4211%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (587 samples, 0.56%)</title><rect x="95.6612%" y="741" width="0.5605%" height="15" fill="rgb(242,81,47)" fg:x="100185" fg:w="587"/><text x="95.9112%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (571 samples, 0.55%)</title><rect x="95.6765%" y="725" width="0.5452%" height="15" fill="rgb(231,185,54)" fg:x="100201" fg:w="571"/><text x="95.9265%" y="735.50"></text></g><g><title>syscall_return_via_sysret (17 samples, 0.02%)</title><rect x="96.2054%" y="709" width="0.0162%" height="15" fill="rgb(243,55,32)" fg:x="100755" fg:w="17"/><text x="96.4554%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (56 samples, 0.05%)</title><rect x="96.2245%" y="741" width="0.0535%" height="15" fill="rgb(208,167,19)" fg:x="100775" fg:w="56"/><text x="96.4745%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (56 samples, 0.05%)</title><rect x="96.2245%" y="725" width="0.0535%" height="15" fill="rgb(231,72,35)" fg:x="100775" fg:w="56"/><text x="96.4745%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="96.3630%" y="677" width="0.0115%" height="15" fill="rgb(250,173,51)" fg:x="100920" fg:w="12"/><text x="96.6130%" y="687.50"></text></g><g><title>__condvar_confirm_wakeup (16 samples, 0.02%)</title><rect x="96.3745%" y="677" width="0.0153%" height="15" fill="rgb(209,5,22)" fg:x="100932" fg:w="16"/><text x="96.6245%" y="687.50"></text></g><g><title>__condvar_dec_grefs (80 samples, 0.08%)</title><rect x="96.3897%" y="677" width="0.0764%" height="15" fill="rgb(250,174,19)" fg:x="100948" fg:w="80"/><text x="96.6397%" y="687.50"></text></g><g><title>__GI___pthread_disable_asynccancel (23 samples, 0.02%)</title><rect x="96.5081%" y="661" width="0.0220%" height="15" fill="rgb(217,3,49)" fg:x="101072" fg:w="23"/><text x="96.7581%" y="671.50"></text></g><g><title>__entry_text_start (24 samples, 0.02%)</title><rect x="96.5349%" y="661" width="0.0229%" height="15" fill="rgb(218,225,5)" fg:x="101100" fg:w="24"/><text x="96.7849%" y="671.50"></text></g><g><title>futex_unqueue (38 samples, 0.04%)</title><rect x="96.7440%" y="581" width="0.0363%" height="15" fill="rgb(236,89,11)" fg:x="101319" fg:w="38"/><text x="96.9940%" y="591.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.01%)</title><rect x="96.9913%" y="517" width="0.0134%" height="15" fill="rgb(206,33,28)" fg:x="101578" fg:w="14"/><text x="97.2413%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (84 samples, 0.08%)</title><rect x="96.9388%" y="533" width="0.0802%" height="15" fill="rgb(241,56,42)" fg:x="101523" fg:w="84"/><text x="97.1888%" y="543.50"></text></g><g><title>x86_pmu_disable (14 samples, 0.01%)</title><rect x="97.0056%" y="517" width="0.0134%" height="15" fill="rgb(222,44,11)" fg:x="101593" fg:w="14"/><text x="97.2556%" y="527.50"></text></g><g><title>reweight_entity (38 samples, 0.04%)</title><rect x="97.1412%" y="501" width="0.0363%" height="15" fill="rgb(234,111,20)" fg:x="101735" fg:w="38"/><text x="97.3912%" y="511.50"></text></g><g><title>update_cfs_group (43 samples, 0.04%)</title><rect x="97.1775%" y="501" width="0.0411%" height="15" fill="rgb(237,77,6)" fg:x="101773" fg:w="43"/><text x="97.4275%" y="511.50"></text></g><g><title>__calc_delta (44 samples, 0.04%)</title><rect x="97.2777%" y="485" width="0.0420%" height="15" fill="rgb(235,111,23)" fg:x="101878" fg:w="44"/><text x="97.5277%" y="495.50"></text></g><g><title>__cgroup_account_cputime (19 samples, 0.02%)</title><rect x="97.3197%" y="485" width="0.0181%" height="15" fill="rgb(251,135,29)" fg:x="101922" fg:w="19"/><text x="97.5697%" y="495.50"></text></g><g><title>cpuacct_charge (39 samples, 0.04%)</title><rect x="97.3436%" y="485" width="0.0372%" height="15" fill="rgb(217,57,1)" fg:x="101947" fg:w="39"/><text x="97.5936%" y="495.50"></text></g><g><title>update_curr (181 samples, 0.17%)</title><rect x="97.2185%" y="501" width="0.1728%" height="15" fill="rgb(249,119,31)" fg:x="101816" fg:w="181"/><text x="97.4685%" y="511.50"></text></g><g><title>update_min_vruntime (11 samples, 0.01%)</title><rect x="97.3809%" y="485" width="0.0105%" height="15" fill="rgb(233,164,33)" fg:x="101986" fg:w="11"/><text x="97.6309%" y="495.50"></text></g><g><title>__update_load_avg_cfs_rq (38 samples, 0.04%)</title><rect x="97.4210%" y="485" width="0.0363%" height="15" fill="rgb(250,217,43)" fg:x="102028" fg:w="38"/><text x="97.6710%" y="495.50"></text></g><g><title>dequeue_entity (429 samples, 0.41%)</title><rect x="97.0887%" y="517" width="0.4096%" height="15" fill="rgb(232,154,50)" fg:x="101680" fg:w="429"/><text x="97.3387%" y="527.50"></text></g><g><title>update_load_avg (112 samples, 0.11%)</title><rect x="97.3914%" y="501" width="0.1069%" height="15" fill="rgb(227,190,8)" fg:x="101997" fg:w="112"/><text x="97.6414%" y="511.50"></text></g><g><title>__update_load_avg_se (43 samples, 0.04%)</title><rect x="97.4572%" y="485" width="0.0411%" height="15" fill="rgb(209,217,32)" fg:x="102066" fg:w="43"/><text x="97.7072%" y="495.50"></text></g><g><title>dequeue_task_fair (500 samples, 0.48%)</title><rect x="97.0285%" y="533" width="0.4774%" height="15" fill="rgb(243,203,50)" fg:x="101617" fg:w="500"/><text x="97.2785%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (203 samples, 0.19%)</title><rect x="97.5881%" y="501" width="0.1938%" height="15" fill="rgb(232,152,27)" fg:x="102203" fg:w="203"/><text x="97.8381%" y="511.50"></text></g><g><title>native_write_msr (201 samples, 0.19%)</title><rect x="97.5900%" y="485" width="0.1919%" height="15" fill="rgb(240,34,29)" fg:x="102205" fg:w="201"/><text x="97.8400%" y="495.50"></text></g><g><title>__perf_event_task_sched_in (223 samples, 0.21%)</title><rect x="97.5814%" y="517" width="0.2129%" height="15" fill="rgb(215,185,52)" fg:x="102196" fg:w="223"/><text x="97.8314%" y="527.50"></text></g><g><title>_raw_spin_unlock (13 samples, 0.01%)</title><rect x="97.7819%" y="501" width="0.0124%" height="15" fill="rgb(240,89,49)" fg:x="102406" fg:w="13"/><text x="98.0319%" y="511.50"></text></g><g><title>finish_task_switch.isra.0 (320 samples, 0.31%)</title><rect x="97.5059%" y="533" width="0.3056%" height="15" fill="rgb(225,12,52)" fg:x="102117" fg:w="320"/><text x="97.7559%" y="543.50"></text></g><g><title>pick_next_task_fair (67 samples, 0.06%)</title><rect x="97.8115%" y="533" width="0.0640%" height="15" fill="rgb(239,128,45)" fg:x="102437" fg:w="67"/><text x="98.0615%" y="543.50"></text></g><g><title>newidle_balance (56 samples, 0.05%)</title><rect x="97.8220%" y="517" width="0.0535%" height="15" fill="rgb(211,78,47)" fg:x="102448" fg:w="56"/><text x="98.0720%" y="527.50"></text></g><g><title>pick_next_task_idle (26 samples, 0.02%)</title><rect x="97.8755%" y="533" width="0.0248%" height="15" fill="rgb(232,31,21)" fg:x="102504" fg:w="26"/><text x="98.1255%" y="543.50"></text></g><g><title>set_next_task_idle (24 samples, 0.02%)</title><rect x="97.8774%" y="517" width="0.0229%" height="15" fill="rgb(222,168,14)" fg:x="102506" fg:w="24"/><text x="98.1274%" y="527.50"></text></g><g><title>__update_idle_core (21 samples, 0.02%)</title><rect x="97.8802%" y="501" width="0.0201%" height="15" fill="rgb(209,128,24)" fg:x="102509" fg:w="21"/><text x="98.1302%" y="511.50"></text></g><g><title>iterate_groups (38 samples, 0.04%)</title><rect x="97.9289%" y="517" width="0.0363%" height="15" fill="rgb(249,35,13)" fg:x="102560" fg:w="38"/><text x="98.1789%" y="527.50"></text></g><g><title>psi_group_change (194 samples, 0.19%)</title><rect x="97.9681%" y="517" width="0.1852%" height="15" fill="rgb(218,7,2)" fg:x="102601" fg:w="194"/><text x="98.2181%" y="527.50"></text></g><g><title>psi_task_switch (286 samples, 0.27%)</title><rect x="97.9003%" y="533" width="0.2731%" height="15" fill="rgb(238,107,27)" fg:x="102530" fg:w="286"/><text x="98.1503%" y="543.50"></text></g><g><title>sched_clock_cpu (21 samples, 0.02%)</title><rect x="98.1533%" y="517" width="0.0201%" height="15" fill="rgb(217,88,38)" fg:x="102795" fg:w="21"/><text x="98.4033%" y="527.50"></text></g><g><title>native_sched_clock (19 samples, 0.02%)</title><rect x="98.1552%" y="501" width="0.0181%" height="15" fill="rgb(230,207,0)" fg:x="102797" fg:w="19"/><text x="98.4052%" y="511.50"></text></g><g><title>put_prev_task_fair (26 samples, 0.02%)</title><rect x="98.1734%" y="533" width="0.0248%" height="15" fill="rgb(249,64,54)" fg:x="102816" fg:w="26"/><text x="98.4234%" y="543.50"></text></g><g><title>raw_spin_rq_lock_nested (23 samples, 0.02%)</title><rect x="98.1982%" y="533" width="0.0220%" height="15" fill="rgb(231,7,11)" fg:x="102842" fg:w="23"/><text x="98.4482%" y="543.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.02%)</title><rect x="98.2030%" y="517" width="0.0172%" height="15" fill="rgb(205,149,21)" fg:x="102847" fg:w="18"/><text x="98.4530%" y="527.50"></text></g><g><title>sched_clock_cpu (29 samples, 0.03%)</title><rect x="98.2517%" y="517" width="0.0277%" height="15" fill="rgb(215,126,34)" fg:x="102898" fg:w="29"/><text x="98.5017%" y="527.50"></text></g><g><title>native_sched_clock (28 samples, 0.03%)</title><rect x="98.2526%" y="501" width="0.0267%" height="15" fill="rgb(241,132,45)" fg:x="102899" fg:w="28"/><text x="98.5026%" y="511.50"></text></g><g><title>futex_wait_queue (1,582 samples, 1.51%)</title><rect x="96.7803%" y="581" width="1.5106%" height="15" fill="rgb(252,69,32)" fg:x="101357" fg:w="1582"/><text x="97.0303%" y="591.50"></text></g><g><title>schedule (1,536 samples, 1.47%)</title><rect x="96.8242%" y="565" width="1.4666%" height="15" fill="rgb(232,204,19)" fg:x="101403" fg:w="1536"/><text x="97.0742%" y="575.50"></text></g><g><title>__schedule (1,508 samples, 1.44%)</title><rect x="96.8509%" y="549" width="1.4399%" height="15" fill="rgb(249,15,47)" fg:x="101431" fg:w="1508"/><text x="97.1009%" y="559.50"></text></g><g><title>update_rq_clock (66 samples, 0.06%)</title><rect x="98.2278%" y="533" width="0.0630%" height="15" fill="rgb(209,227,23)" fg:x="102873" fg:w="66"/><text x="98.4778%" y="543.50"></text></g><g><title>update_irq_load_avg (12 samples, 0.01%)</title><rect x="98.2794%" y="517" width="0.0115%" height="15" fill="rgb(248,92,24)" fg:x="102927" fg:w="12"/><text x="98.5294%" y="527.50"></text></g><g><title>futex_get_value_locked (31 samples, 0.03%)</title><rect x="98.3071%" y="565" width="0.0296%" height="15" fill="rgb(247,59,2)" fg:x="102956" fg:w="31"/><text x="98.5571%" y="575.50"></text></g><g><title>__get_user_nocheck_4 (27 samples, 0.03%)</title><rect x="98.3109%" y="549" width="0.0258%" height="15" fill="rgb(221,30,5)" fg:x="102960" fg:w="27"/><text x="98.5609%" y="559.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.01%)</title><rect x="98.4140%" y="549" width="0.0115%" height="15" fill="rgb(208,108,53)" fg:x="103068" fg:w="12"/><text x="98.6640%" y="559.50"></text></g><g><title>futex_q_lock (124 samples, 0.12%)</title><rect x="98.3367%" y="565" width="0.1184%" height="15" fill="rgb(211,183,26)" fg:x="102987" fg:w="124"/><text x="98.5867%" y="575.50"></text></g><g><title>futex_hash (30 samples, 0.03%)</title><rect x="98.4264%" y="549" width="0.0286%" height="15" fill="rgb(232,132,4)" fg:x="103081" fg:w="30"/><text x="98.6764%" y="559.50"></text></g><g><title>__x64_sys_futex (1,958 samples, 1.87%)</title><rect x="96.5960%" y="629" width="1.8696%" height="15" fill="rgb(253,128,37)" fg:x="101164" fg:w="1958"/><text x="96.8460%" y="639.50">_..</text></g><g><title>do_futex (1,907 samples, 1.82%)</title><rect x="96.6447%" y="613" width="1.8209%" height="15" fill="rgb(221,58,24)" fg:x="101215" fg:w="1907"/><text x="96.8947%" y="623.50">d..</text></g><g><title>futex_wait (1,890 samples, 1.80%)</title><rect x="96.6609%" y="597" width="1.8047%" height="15" fill="rgb(230,54,45)" fg:x="101232" fg:w="1890"/><text x="96.9109%" y="607.50">f..</text></g><g><title>futex_wait_setup (183 samples, 0.17%)</title><rect x="98.2908%" y="581" width="0.1747%" height="15" fill="rgb(254,21,18)" fg:x="102939" fg:w="183"/><text x="98.5408%" y="591.50"></text></g><g><title>get_futex_key (11 samples, 0.01%)</title><rect x="98.4551%" y="565" width="0.0105%" height="15" fill="rgb(221,108,0)" fg:x="103111" fg:w="11"/><text x="98.7051%" y="575.50"></text></g><g><title>__get_user_8 (32 samples, 0.03%)</title><rect x="98.8618%" y="581" width="0.0306%" height="15" fill="rgb(206,95,1)" fg:x="103537" fg:w="32"/><text x="99.1118%" y="591.50"></text></g><g><title>__rseq_handle_notify_resume (89 samples, 0.08%)</title><rect x="98.8198%" y="597" width="0.0850%" height="15" fill="rgb(237,52,5)" fg:x="103493" fg:w="89"/><text x="99.0698%" y="607.50"></text></g><g><title>__put_user_nocheck_8 (13 samples, 0.01%)</title><rect x="98.8924%" y="581" width="0.0124%" height="15" fill="rgb(218,150,34)" fg:x="103569" fg:w="13"/><text x="99.1424%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (170 samples, 0.16%)</title><rect x="98.7673%" y="613" width="0.1623%" height="15" fill="rgb(235,194,28)" fg:x="103438" fg:w="170"/><text x="99.0173%" y="623.50"></text></g><g><title>switch_fpu_return (16 samples, 0.02%)</title><rect x="98.9143%" y="597" width="0.0153%" height="15" fill="rgb(245,92,18)" fg:x="103592" fg:w="16"/><text x="99.1643%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (537 samples, 0.51%)</title><rect x="98.4732%" y="629" width="0.5128%" height="15" fill="rgb(253,203,53)" fg:x="103130" fg:w="537"/><text x="98.7232%" y="639.50"></text></g><g><title>syscall_exit_work (59 samples, 0.06%)</title><rect x="98.9296%" y="613" width="0.0563%" height="15" fill="rgb(249,185,47)" fg:x="103608" fg:w="59"/><text x="99.1796%" y="623.50"></text></g><g><title>__audit_syscall_exit (15 samples, 0.01%)</title><rect x="98.9716%" y="597" width="0.0143%" height="15" fill="rgb(252,194,52)" fg:x="103652" fg:w="15"/><text x="99.2216%" y="607.50"></text></g><g><title>__audit_syscall_entry (12 samples, 0.01%)</title><rect x="98.9917%" y="613" width="0.0115%" height="15" fill="rgb(210,53,36)" fg:x="103673" fg:w="12"/><text x="99.2417%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,564 samples, 2.45%)</title><rect x="96.5616%" y="661" width="2.4482%" height="15" fill="rgb(237,37,25)" fg:x="101128" fg:w="2564"/><text x="96.8116%" y="671.50">en..</text></g><g><title>do_syscall_64 (2,556 samples, 2.44%)</title><rect x="96.5692%" y="645" width="2.4406%" height="15" fill="rgb(242,116,27)" fg:x="101136" fg:w="2556"/><text x="96.8192%" y="655.50">do..</text></g><g><title>syscall_trace_enter.constprop.0 (25 samples, 0.02%)</title><rect x="98.9860%" y="629" width="0.0239%" height="15" fill="rgb(213,185,26)" fg:x="103667" fg:w="25"/><text x="99.2360%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (2,688 samples, 2.57%)</title><rect x="96.4661%" y="677" width="2.5666%" height="15" fill="rgb(225,204,8)" fg:x="101028" fg:w="2688"/><text x="96.7161%" y="687.50">__..</text></g><g><title>syscall_return_via_sysret (24 samples, 0.02%)</title><rect x="99.0098%" y="661" width="0.0229%" height="15" fill="rgb(254,111,37)" fg:x="103692" fg:w="24"/><text x="99.2598%" y="671.50"></text></g><g><title>__pthread_cleanup_pop (13 samples, 0.01%)</title><rect x="99.0327%" y="677" width="0.0124%" height="15" fill="rgb(242,35,9)" fg:x="103716" fg:w="13"/><text x="99.2827%" y="687.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (2,914 samples, 2.78%)</title><rect x="96.2847%" y="709" width="2.7824%" height="15" fill="rgb(232,138,49)" fg:x="100838" fg:w="2914"/><text x="96.5347%" y="719.50">st..</text></g><g><title>__GI___pthread_cond_wait (2,914 samples, 2.78%)</title><rect x="96.2847%" y="693" width="2.7824%" height="15" fill="rgb(247,56,4)" fg:x="100838" fg:w="2914"/><text x="96.5347%" y="703.50">__..</text></g><g><title>__pthread_mutex_cond_lock (23 samples, 0.02%)</title><rect x="99.0452%" y="677" width="0.0220%" height="15" fill="rgb(226,179,17)" fg:x="103729" fg:w="23"/><text x="99.2952%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2,928 samples, 2.80%)</title><rect x="96.2780%" y="741" width="2.7958%" height="15" fill="rgb(216,163,45)" fg:x="100831" fg:w="2928"/><text x="96.5280%" y="751.50">st..</text></g><g><title>std::sys_common::condvar::Condvar::wait (2,921 samples, 2.79%)</title><rect x="96.2847%" y="725" width="2.7891%" height="15" fill="rgb(211,157,3)" fg:x="100838" fg:w="2921"/><text x="96.5347%" y="735.50">st..</text></g><g><title>parking::Parker::park (3,626 samples, 3.46%)</title><rect x="95.6335%" y="773" width="3.4623%" height="15" fill="rgb(234,44,20)" fg:x="100156" fg:w="3626"/><text x="95.8835%" y="783.50">par..</text></g><g><title>parking::Inner::park (3,625 samples, 3.46%)</title><rect x="95.6344%" y="757" width="3.4613%" height="15" fill="rgb(254,138,23)" fg:x="100157" fg:w="3625"/><text x="95.8844%" y="767.50">par..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="99.0738%" y="741" width="0.0220%" height="15" fill="rgb(206,119,39)" fg:x="103759" fg:w="23"/><text x="99.3238%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="99.0738%" y="725" width="0.0220%" height="15" fill="rgb(231,105,52)" fg:x="103759" fg:w="23"/><text x="99.3238%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="99.0738%" y="709" width="0.0220%" height="15" fill="rgb(250,20,5)" fg:x="103759" fg:w="23"/><text x="99.3238%" y="719.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="99.0738%" y="693" width="0.0220%" height="15" fill="rgb(215,198,30)" fg:x="103759" fg:w="23"/><text x="99.3238%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (73 samples, 0.07%)</title><rect x="99.0958%" y="773" width="0.0697%" height="15" fill="rgb(246,142,8)" fg:x="103782" fg:w="73"/><text x="99.3458%" y="783.50"></text></g><g><title>parking::Inner::park (71 samples, 0.07%)</title><rect x="99.0977%" y="757" width="0.0678%" height="15" fill="rgb(243,26,38)" fg:x="103784" fg:w="71"/><text x="99.3477%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (65 samples, 0.06%)</title><rect x="99.1034%" y="741" width="0.0621%" height="15" fill="rgb(205,133,28)" fg:x="103790" fg:w="65"/><text x="99.3534%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (65 samples, 0.06%)</title><rect x="99.1034%" y="725" width="0.0621%" height="15" fill="rgb(212,34,0)" fg:x="103790" fg:w="65"/><text x="99.3534%" y="735.50"></text></g><g><title>std::panic::catch_unwind (18,861 samples, 18.01%)</title><rect x="81.1666%" y="1061" width="18.0093%" height="15" fill="rgb(251,226,22)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18,861 samples, 18.01%)</title><rect x="81.1666%" y="1045" width="18.0093%" height="15" fill="rgb(252,119,9)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18,861 samples, 18.01%)</title><rect x="81.1666%" y="1029" width="18.0093%" height="15" fill="rgb(213,150,50)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="1039.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18,861 samples, 18.01%)</title><rect x="81.1666%" y="1013" width="18.0093%" height="15" fill="rgb(212,24,39)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="1023.50">&lt;core::panic::unwind_safe::A..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (18,861 samples, 18.01%)</title><rect x="81.1666%" y="997" width="18.0093%" height="15" fill="rgb(213,46,39)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="1007.50">std::thread::Builder::spawn_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18,861 samples, 18.01%)</title><rect x="81.1666%" y="981" width="18.0093%" height="15" fill="rgb(239,106,12)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="991.50">std::sys_common::backtrace::..</text></g><g><title>core::ops::function::FnOnce::call_once (18,861 samples, 18.01%)</title><rect x="81.1666%" y="965" width="18.0093%" height="15" fill="rgb(249,229,21)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="975.50">core::ops::function::FnOnce:..</text></g><g><title>async_global_executor::threading::thread_main_loop (18,861 samples, 18.01%)</title><rect x="81.1666%" y="949" width="18.0093%" height="15" fill="rgb(212,158,3)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="959.50">async_global_executor::threa..</text></g><g><title>std::panic::catch_unwind (18,861 samples, 18.01%)</title><rect x="81.1666%" y="933" width="18.0093%" height="15" fill="rgb(253,26,48)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18,861 samples, 18.01%)</title><rect x="81.1666%" y="917" width="18.0093%" height="15" fill="rgb(238,178,20)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18,861 samples, 18.01%)</title><rect x="81.1666%" y="901" width="18.0093%" height="15" fill="rgb(208,86,15)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="911.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (18,861 samples, 18.01%)</title><rect x="81.1666%" y="885" width="18.0093%" height="15" fill="rgb(239,42,53)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="895.50">async_global_executor::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,861 samples, 18.01%)</title><rect x="81.1666%" y="869" width="18.0093%" height="15" fill="rgb(245,226,8)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="879.50">std::thread::local::LocalKey..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,861 samples, 18.01%)</title><rect x="81.1666%" y="853" width="18.0093%" height="15" fill="rgb(216,176,32)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="863.50">std::thread::local::LocalKey..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (18,861 samples, 18.01%)</title><rect x="81.1666%" y="837" width="18.0093%" height="15" fill="rgb(231,186,21)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="847.50">async_global_executor::threa..</text></g><g><title>async_global_executor::reactor::block_on (18,861 samples, 18.01%)</title><rect x="81.1666%" y="821" width="18.0093%" height="15" fill="rgb(205,95,49)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="831.50">async_global_executor::react..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (18,861 samples, 18.01%)</title><rect x="81.1666%" y="805" width="18.0093%" height="15" fill="rgb(217,145,8)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="815.50">async_global_executor::react..</text></g><g><title>async_io::driver::block_on (18,861 samples, 18.01%)</title><rect x="81.1666%" y="789" width="18.0093%" height="15" fill="rgb(239,144,48)" fg:x="85005" fg:w="18861"/><text x="81.4166%" y="799.50">async_io::driver::block_on</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18,866 samples, 18.01%)</title><rect x="81.1666%" y="1125" width="18.0141%" height="15" fill="rgb(214,189,23)" fg:x="85005" fg:w="18866"/><text x="81.4166%" y="1135.50">&lt;alloc::boxed::Box&lt;F,A&gt; as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18,866 samples, 18.01%)</title><rect x="81.1666%" y="1109" width="18.0141%" height="15" fill="rgb(229,157,17)" fg:x="85005" fg:w="18866"/><text x="81.4166%" y="1119.50">&lt;alloc::boxed::Box&lt;F,A&gt; as c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18,866 samples, 18.01%)</title><rect x="81.1666%" y="1093" width="18.0141%" height="15" fill="rgb(230,5,48)" fg:x="85005" fg:w="18866"/><text x="81.4166%" y="1103.50">core::ops::function::FnOnce:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (18,866 samples, 18.01%)</title><rect x="81.1666%" y="1077" width="18.0141%" height="15" fill="rgb(224,156,48)" fg:x="85005" fg:w="18866"/><text x="81.4166%" y="1087.50">std::thread::Builder::spawn_..</text></g><g><title>__GI___clone (18,884 samples, 18.03%)</title><rect x="81.1523%" y="1173" width="18.0313%" height="15" fill="rgb(223,14,29)" fg:x="84990" fg:w="18884"/><text x="81.4023%" y="1183.50">__GI___clone</text></g><g><title>start_thread (18,869 samples, 18.02%)</title><rect x="81.1666%" y="1157" width="18.0170%" height="15" fill="rgb(229,96,36)" fg:x="85005" fg:w="18869"/><text x="81.4166%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18,869 samples, 18.02%)</title><rect x="81.1666%" y="1141" width="18.0170%" height="15" fill="rgb(231,102,53)" fg:x="85005" fg:w="18869"/><text x="81.4166%" y="1151.50">std::sys::unix::thread::Thre..</text></g><g><title>__clock_gettime_2 (20 samples, 0.02%)</title><rect x="99.1970%" y="1173" width="0.0191%" height="15" fill="rgb(210,77,38)" fg:x="103888" fg:w="20"/><text x="99.4470%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (16 samples, 0.02%)</title><rect x="99.2313%" y="1157" width="0.0153%" height="15" fill="rgb(235,131,6)" fg:x="103924" fg:w="16"/><text x="99.4813%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (16 samples, 0.02%)</title><rect x="99.2313%" y="1141" width="0.0153%" height="15" fill="rgb(252,55,38)" fg:x="103924" fg:w="16"/><text x="99.4813%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (16 samples, 0.02%)</title><rect x="99.2313%" y="1125" width="0.0153%" height="15" fill="rgb(246,38,14)" fg:x="103924" fg:w="16"/><text x="99.4813%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="99.2313%" y="1109" width="0.0153%" height="15" fill="rgb(242,27,5)" fg:x="103924" fg:w="16"/><text x="99.4813%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="99.2313%" y="1093" width="0.0153%" height="15" fill="rgb(228,65,35)" fg:x="103924" fg:w="16"/><text x="99.4813%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="99.2313%" y="1077" width="0.0153%" height="15" fill="rgb(245,93,11)" fg:x="103924" fg:w="16"/><text x="99.4813%" y="1087.50"></text></g><g><title>__rg_dealloc (16 samples, 0.02%)</title><rect x="99.2313%" y="1061" width="0.0153%" height="15" fill="rgb(213,1,31)" fg:x="103924" fg:w="16"/><text x="99.4813%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.02%)</title><rect x="99.2313%" y="1045" width="0.0153%" height="15" fill="rgb(237,205,14)" fg:x="103924" fg:w="16"/><text x="99.4813%" y="1055.50"></text></g><g><title>__vdso_clock_gettime (46 samples, 0.04%)</title><rect x="99.2266%" y="1173" width="0.0439%" height="15" fill="rgb(232,118,45)" fg:x="103919" fg:w="46"/><text x="99.4766%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (25 samples, 0.02%)</title><rect x="99.2466%" y="1157" width="0.0239%" height="15" fill="rgb(218,5,6)" fg:x="103940" fg:w="25"/><text x="99.4966%" y="1167.50"></text></g><g><title>async_executor::steal (27 samples, 0.03%)</title><rect x="99.2925%" y="1173" width="0.0258%" height="15" fill="rgb(251,87,51)" fg:x="103988" fg:w="27"/><text x="99.5425%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (23 samples, 0.02%)</title><rect x="99.3182%" y="1173" width="0.0220%" height="15" fill="rgb(207,225,20)" fg:x="104015" fg:w="23"/><text x="99.5682%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (15 samples, 0.01%)</title><rect x="99.3421%" y="1173" width="0.0143%" height="15" fill="rgb(222,78,54)" fg:x="104040" fg:w="15"/><text x="99.5921%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (23 samples, 0.02%)</title><rect x="99.3564%" y="1173" width="0.0220%" height="15" fill="rgb(232,85,16)" fg:x="104055" fg:w="23"/><text x="99.6064%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="99.3822%" y="1173" width="0.0153%" height="15" fill="rgb(244,25,33)" fg:x="104082" fg:w="16"/><text x="99.6322%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="99.3975%" y="1173" width="0.0134%" height="15" fill="rgb(233,24,36)" fg:x="104098" fg:w="14"/><text x="99.6475%" y="1183.50"></text></g><g><title>futex_wait_queue (16 samples, 0.02%)</title><rect x="99.4491%" y="1093" width="0.0153%" height="15" fill="rgb(253,49,54)" fg:x="104152" fg:w="16"/><text x="99.6991%" y="1103.50"></text></g><g><title>schedule (14 samples, 0.01%)</title><rect x="99.4510%" y="1077" width="0.0134%" height="15" fill="rgb(245,12,22)" fg:x="104154" fg:w="14"/><text x="99.7010%" y="1087.50"></text></g><g><title>__schedule (14 samples, 0.01%)</title><rect x="99.4510%" y="1061" width="0.0134%" height="15" fill="rgb(253,141,28)" fg:x="104154" fg:w="14"/><text x="99.7010%" y="1071.50"></text></g><g><title>futex_wait (19 samples, 0.02%)</title><rect x="99.4471%" y="1109" width="0.0181%" height="15" fill="rgb(225,207,27)" fg:x="104150" fg:w="19"/><text x="99.6971%" y="1119.50"></text></g><g><title>__x64_sys_futex (29 samples, 0.03%)</title><rect x="99.4462%" y="1141" width="0.0277%" height="15" fill="rgb(220,84,2)" fg:x="104149" fg:w="29"/><text x="99.6962%" y="1151.50"></text></g><g><title>do_futex (28 samples, 0.03%)</title><rect x="99.4471%" y="1125" width="0.0267%" height="15" fill="rgb(224,37,37)" fg:x="104150" fg:w="28"/><text x="99.6971%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (88 samples, 0.08%)</title><rect x="99.4109%" y="1173" width="0.0840%" height="15" fill="rgb(220,143,18)" fg:x="104112" fg:w="88"/><text x="99.6609%" y="1183.50"></text></g><g><title>do_syscall_64 (56 samples, 0.05%)</title><rect x="99.4414%" y="1157" width="0.0535%" height="15" fill="rgb(210,88,33)" fg:x="104144" fg:w="56"/><text x="99.6914%" y="1167.50"></text></g><g><title>syscall_exit_to_user_mode (19 samples, 0.02%)</title><rect x="99.4767%" y="1141" width="0.0181%" height="15" fill="rgb(219,87,51)" fg:x="104181" fg:w="19"/><text x="99.7267%" y="1151.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (58 samples, 0.06%)</title><rect x="99.4949%" y="1173" width="0.0554%" height="15" fill="rgb(211,7,35)" fg:x="104200" fg:w="58"/><text x="99.7449%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (15 samples, 0.01%)</title><rect x="99.5522%" y="1173" width="0.0143%" height="15" fill="rgb(232,77,2)" fg:x="104260" fg:w="15"/><text x="99.8022%" y="1183.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (11 samples, 0.01%)</title><rect x="99.5665%" y="1173" width="0.0105%" height="15" fill="rgb(249,94,25)" fg:x="104275" fg:w="11"/><text x="99.8165%" y="1183.50"></text></g><g><title>syscall_return_via_sysret (13 samples, 0.01%)</title><rect x="99.5780%" y="1173" width="0.0124%" height="15" fill="rgb(215,112,2)" fg:x="104287" fg:w="13"/><text x="99.8280%" y="1183.50"></text></g><g><title>async-std/runti (104,219 samples, 99.51%)</title><rect x="0.0869%" y="1189" width="99.5130%" height="15" fill="rgb(226,115,48)" fg:x="91" fg:w="104219"/><text x="0.3369%" y="1199.50">async-std/runti</text></g><g><title>blocking-1 (23 samples, 0.02%)</title><rect x="99.5999%" y="1189" width="0.0220%" height="15" fill="rgb(249,196,10)" fg:x="104310" fg:w="23"/><text x="99.8499%" y="1199.50"></text></g><g><title>__GI___clone (23 samples, 0.02%)</title><rect x="99.5999%" y="1173" width="0.0220%" height="15" fill="rgb(237,109,14)" fg:x="104310" fg:w="23"/><text x="99.8499%" y="1183.50"></text></g><g><title>start_thread (18 samples, 0.02%)</title><rect x="99.6047%" y="1157" width="0.0172%" height="15" fill="rgb(217,103,53)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 0.02%)</title><rect x="99.6047%" y="1141" width="0.0172%" height="15" fill="rgb(244,137,9)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.6047%" y="1125" width="0.0172%" height="15" fill="rgb(227,201,3)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.6047%" y="1109" width="0.0172%" height="15" fill="rgb(243,94,6)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18 samples, 0.02%)</title><rect x="99.6047%" y="1093" width="0.0172%" height="15" fill="rgb(235,118,5)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (18 samples, 0.02%)</title><rect x="99.6047%" y="1077" width="0.0172%" height="15" fill="rgb(247,10,30)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.6047%" y="1061" width="0.0172%" height="15" fill="rgb(205,26,28)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1071.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.6047%" y="1045" width="0.0172%" height="15" fill="rgb(206,99,35)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.6047%" y="1029" width="0.0172%" height="15" fill="rgb(238,130,40)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.6047%" y="1013" width="0.0172%" height="15" fill="rgb(224,126,31)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="99.6047%" y="997" width="0.0172%" height="15" fill="rgb(254,105,17)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.02%)</title><rect x="99.6047%" y="981" width="0.0172%" height="15" fill="rgb(216,87,36)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (18 samples, 0.02%)</title><rect x="99.6047%" y="965" width="0.0172%" height="15" fill="rgb(240,21,12)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (18 samples, 0.02%)</title><rect x="99.6047%" y="949" width="0.0172%" height="15" fill="rgb(245,192,34)" fg:x="104315" fg:w="18"/><text x="99.8547%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.6076%" y="933" width="0.0143%" height="15" fill="rgb(226,100,49)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.6076%" y="917" width="0.0143%" height="15" fill="rgb(245,188,27)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (15 samples, 0.01%)</title><rect x="99.6076%" y="901" width="0.0143%" height="15" fill="rgb(212,170,8)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (15 samples, 0.01%)</title><rect x="99.6076%" y="885" width="0.0143%" height="15" fill="rgb(217,113,29)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common (15 samples, 0.01%)</title><rect x="99.6076%" y="869" width="0.0143%" height="15" fill="rgb(237,30,3)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="99.6076%" y="853" width="0.0143%" height="15" fill="rgb(227,19,28)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="863.50"></text></g><g><title>do_syscall_64 (15 samples, 0.01%)</title><rect x="99.6076%" y="837" width="0.0143%" height="15" fill="rgb(239,172,45)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="847.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="99.6076%" y="821" width="0.0143%" height="15" fill="rgb(254,55,39)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="831.50"></text></g><g><title>do_futex (15 samples, 0.01%)</title><rect x="99.6076%" y="805" width="0.0143%" height="15" fill="rgb(249,208,12)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="815.50"></text></g><g><title>futex_wait (15 samples, 0.01%)</title><rect x="99.6076%" y="789" width="0.0143%" height="15" fill="rgb(240,52,13)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="799.50"></text></g><g><title>futex_wait_queue (15 samples, 0.01%)</title><rect x="99.6076%" y="773" width="0.0143%" height="15" fill="rgb(252,149,13)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="783.50"></text></g><g><title>schedule (15 samples, 0.01%)</title><rect x="99.6076%" y="757" width="0.0143%" height="15" fill="rgb(232,81,48)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="767.50"></text></g><g><title>__schedule (15 samples, 0.01%)</title><rect x="99.6076%" y="741" width="0.0143%" height="15" fill="rgb(222,144,2)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (15 samples, 0.01%)</title><rect x="99.6076%" y="725" width="0.0143%" height="15" fill="rgb(216,81,32)" fg:x="104318" fg:w="15"/><text x="99.8576%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.01%)</title><rect x="99.6095%" y="709" width="0.0124%" height="15" fill="rgb(244,78,51)" fg:x="104320" fg:w="13"/><text x="99.8595%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (13 samples, 0.01%)</title><rect x="99.6095%" y="693" width="0.0124%" height="15" fill="rgb(217,66,21)" fg:x="104320" fg:w="13"/><text x="99.8595%" y="703.50"></text></g><g><title>native_write_msr (12 samples, 0.01%)</title><rect x="99.6104%" y="677" width="0.0115%" height="15" fill="rgb(247,101,42)" fg:x="104321" fg:w="12"/><text x="99.8604%" y="687.50"></text></g><g><title>futex_wait_queue (15 samples, 0.01%)</title><rect x="99.6247%" y="773" width="0.0143%" height="15" fill="rgb(227,81,39)" fg:x="104336" fg:w="15"/><text x="99.8747%" y="783.50"></text></g><g><title>schedule (15 samples, 0.01%)</title><rect x="99.6247%" y="757" width="0.0143%" height="15" fill="rgb(220,223,44)" fg:x="104336" fg:w="15"/><text x="99.8747%" y="767.50"></text></g><g><title>__schedule (15 samples, 0.01%)</title><rect x="99.6247%" y="741" width="0.0143%" height="15" fill="rgb(205,218,2)" fg:x="104336" fg:w="15"/><text x="99.8747%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (15 samples, 0.01%)</title><rect x="99.6247%" y="725" width="0.0143%" height="15" fill="rgb(212,207,28)" fg:x="104336" fg:w="15"/><text x="99.8747%" y="735.50"></text></g><g><title>__perf_event_task_sched_in (14 samples, 0.01%)</title><rect x="99.6257%" y="709" width="0.0134%" height="15" fill="rgb(224,12,41)" fg:x="104337" fg:w="14"/><text x="99.8757%" y="719.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (14 samples, 0.01%)</title><rect x="99.6257%" y="693" width="0.0134%" height="15" fill="rgb(216,118,12)" fg:x="104337" fg:w="14"/><text x="99.8757%" y="703.50"></text></g><g><title>native_write_msr (14 samples, 0.01%)</title><rect x="99.6257%" y="677" width="0.0134%" height="15" fill="rgb(252,97,46)" fg:x="104337" fg:w="14"/><text x="99.8757%" y="687.50"></text></g><g><title>blocking-2 (19 samples, 0.02%)</title><rect x="99.6219%" y="1189" width="0.0181%" height="15" fill="rgb(244,206,19)" fg:x="104333" fg:w="19"/><text x="99.8719%" y="1199.50"></text></g><g><title>__GI___clone (18 samples, 0.02%)</title><rect x="99.6228%" y="1173" width="0.0172%" height="15" fill="rgb(231,84,31)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1183.50"></text></g><g><title>start_thread (18 samples, 0.02%)</title><rect x="99.6228%" y="1157" width="0.0172%" height="15" fill="rgb(244,133,0)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 0.02%)</title><rect x="99.6228%" y="1141" width="0.0172%" height="15" fill="rgb(223,15,50)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.6228%" y="1125" width="0.0172%" height="15" fill="rgb(250,118,49)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.6228%" y="1109" width="0.0172%" height="15" fill="rgb(248,25,38)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18 samples, 0.02%)</title><rect x="99.6228%" y="1093" width="0.0172%" height="15" fill="rgb(215,70,14)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (18 samples, 0.02%)</title><rect x="99.6228%" y="1077" width="0.0172%" height="15" fill="rgb(215,28,15)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.6228%" y="1061" width="0.0172%" height="15" fill="rgb(243,6,28)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1071.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.6228%" y="1045" width="0.0172%" height="15" fill="rgb(222,130,1)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.6228%" y="1029" width="0.0172%" height="15" fill="rgb(236,166,44)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.02%)</title><rect x="99.6228%" y="1013" width="0.0172%" height="15" fill="rgb(221,108,14)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="99.6228%" y="997" width="0.0172%" height="15" fill="rgb(252,3,45)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.02%)</title><rect x="99.6228%" y="981" width="0.0172%" height="15" fill="rgb(237,68,30)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (18 samples, 0.02%)</title><rect x="99.6228%" y="965" width="0.0172%" height="15" fill="rgb(211,79,22)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (18 samples, 0.02%)</title><rect x="99.6228%" y="949" width="0.0172%" height="15" fill="rgb(252,185,21)" fg:x="104334" fg:w="18"/><text x="99.8728%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (16 samples, 0.02%)</title><rect x="99.6247%" y="933" width="0.0153%" height="15" fill="rgb(225,189,26)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (16 samples, 0.02%)</title><rect x="99.6247%" y="917" width="0.0153%" height="15" fill="rgb(241,30,40)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (16 samples, 0.02%)</title><rect x="99.6247%" y="901" width="0.0153%" height="15" fill="rgb(235,215,44)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (16 samples, 0.02%)</title><rect x="99.6247%" y="885" width="0.0153%" height="15" fill="rgb(205,8,29)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common (16 samples, 0.02%)</title><rect x="99.6247%" y="869" width="0.0153%" height="15" fill="rgb(241,137,42)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.02%)</title><rect x="99.6247%" y="853" width="0.0153%" height="15" fill="rgb(237,155,2)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="863.50"></text></g><g><title>do_syscall_64 (16 samples, 0.02%)</title><rect x="99.6247%" y="837" width="0.0153%" height="15" fill="rgb(245,29,42)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="847.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.02%)</title><rect x="99.6247%" y="821" width="0.0153%" height="15" fill="rgb(234,101,35)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="831.50"></text></g><g><title>do_futex (16 samples, 0.02%)</title><rect x="99.6247%" y="805" width="0.0153%" height="15" fill="rgb(228,64,37)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="815.50"></text></g><g><title>futex_wait (16 samples, 0.02%)</title><rect x="99.6247%" y="789" width="0.0153%" height="15" fill="rgb(217,214,36)" fg:x="104336" fg:w="16"/><text x="99.8747%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="99.6477%" y="837" width="0.0115%" height="15" fill="rgb(243,70,3)" fg:x="104360" fg:w="12"/><text x="99.8977%" y="847.50"></text></g><g><title>blocking::unblock::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="99.6477%" y="821" width="0.0115%" height="15" fill="rgb(253,158,52)" fg:x="104360" fg:w="12"/><text x="99.8977%" y="831.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.01%)</title><rect x="99.6477%" y="933" width="0.0143%" height="15" fill="rgb(234,111,54)" fg:x="104360" fg:w="15"/><text x="99.8977%" y="943.50"></text></g><g><title>std::panicking::try (15 samples, 0.01%)</title><rect x="99.6477%" y="917" width="0.0143%" height="15" fill="rgb(217,70,32)" fg:x="104360" fg:w="15"/><text x="99.8977%" y="927.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.01%)</title><rect x="99.6477%" y="901" width="0.0143%" height="15" fill="rgb(234,18,33)" fg:x="104360" fg:w="15"/><text x="99.8977%" y="911.50"></text></g><g><title>blocking::Executor::main_loop::{{closure}} (15 samples, 0.01%)</title><rect x="99.6477%" y="885" width="0.0143%" height="15" fill="rgb(234,12,49)" fg:x="104360" fg:w="15"/><text x="99.8977%" y="895.50"></text></g><g><title>async_task::runnable::Runnable::run (15 samples, 0.01%)</title><rect x="99.6477%" y="869" width="0.0143%" height="15" fill="rgb(236,10,21)" fg:x="104360" fg:w="15"/><text x="99.8977%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15 samples, 0.01%)</title><rect x="99.6477%" y="853" width="0.0143%" height="15" fill="rgb(248,182,45)" fg:x="104360" fg:w="15"/><text x="99.8977%" y="863.50"></text></g><g><title>blocking-4 (17 samples, 0.02%)</title><rect x="99.6467%" y="1189" width="0.0162%" height="15" fill="rgb(217,95,36)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1199.50"></text></g><g><title>__GI___clone (17 samples, 0.02%)</title><rect x="99.6467%" y="1173" width="0.0162%" height="15" fill="rgb(212,110,31)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1183.50"></text></g><g><title>start_thread (17 samples, 0.02%)</title><rect x="99.6467%" y="1157" width="0.0162%" height="15" fill="rgb(206,32,53)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.02%)</title><rect x="99.6467%" y="1141" width="0.0162%" height="15" fill="rgb(246,141,37)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.6467%" y="1125" width="0.0162%" height="15" fill="rgb(219,16,7)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.6467%" y="1109" width="0.0162%" height="15" fill="rgb(230,205,45)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.02%)</title><rect x="99.6467%" y="1093" width="0.0162%" height="15" fill="rgb(231,43,49)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (17 samples, 0.02%)</title><rect x="99.6467%" y="1077" width="0.0162%" height="15" fill="rgb(212,106,34)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.02%)</title><rect x="99.6467%" y="1061" width="0.0162%" height="15" fill="rgb(206,83,17)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1071.50"></text></g><g><title>std::panicking::try (17 samples, 0.02%)</title><rect x="99.6467%" y="1045" width="0.0162%" height="15" fill="rgb(244,154,49)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.02%)</title><rect x="99.6467%" y="1029" width="0.0162%" height="15" fill="rgb(244,149,49)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.02%)</title><rect x="99.6467%" y="1013" width="0.0162%" height="15" fill="rgb(227,134,18)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="99.6467%" y="997" width="0.0162%" height="15" fill="rgb(237,116,36)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.02%)</title><rect x="99.6467%" y="981" width="0.0162%" height="15" fill="rgb(205,129,40)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (17 samples, 0.02%)</title><rect x="99.6467%" y="965" width="0.0162%" height="15" fill="rgb(236,178,4)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (17 samples, 0.02%)</title><rect x="99.6467%" y="949" width="0.0162%" height="15" fill="rgb(251,76,53)" fg:x="104359" fg:w="17"/><text x="99.8967%" y="959.50"></text></g><g><title>__x64_sys_futex (62 samples, 0.06%)</title><rect x="99.6687%" y="805" width="0.0592%" height="15" fill="rgb(242,92,40)" fg:x="104382" fg:w="62"/><text x="99.9187%" y="815.50"></text></g><g><title>do_futex (62 samples, 0.06%)</title><rect x="99.6687%" y="789" width="0.0592%" height="15" fill="rgb(209,45,30)" fg:x="104382" fg:w="62"/><text x="99.9187%" y="799.50"></text></g><g><title>futex_wait (61 samples, 0.06%)</title><rect x="99.6696%" y="773" width="0.0582%" height="15" fill="rgb(218,157,36)" fg:x="104383" fg:w="61"/><text x="99.9196%" y="783.50"></text></g><g><title>futex_wait_queue (59 samples, 0.06%)</title><rect x="99.6715%" y="757" width="0.0563%" height="15" fill="rgb(222,186,16)" fg:x="104385" fg:w="59"/><text x="99.9215%" y="767.50"></text></g><g><title>schedule (58 samples, 0.06%)</title><rect x="99.6725%" y="741" width="0.0554%" height="15" fill="rgb(254,72,35)" fg:x="104386" fg:w="58"/><text x="99.9225%" y="751.50"></text></g><g><title>__schedule (58 samples, 0.06%)</title><rect x="99.6725%" y="725" width="0.0554%" height="15" fill="rgb(224,25,35)" fg:x="104386" fg:w="58"/><text x="99.9225%" y="735.50"></text></g><g><title>finish_task_switch.isra.0 (58 samples, 0.06%)</title><rect x="99.6725%" y="709" width="0.0554%" height="15" fill="rgb(206,135,52)" fg:x="104386" fg:w="58"/><text x="99.9225%" y="719.50"></text></g><g><title>__perf_event_task_sched_in (55 samples, 0.05%)</title><rect x="99.6754%" y="693" width="0.0525%" height="15" fill="rgb(229,174,47)" fg:x="104389" fg:w="55"/><text x="99.9254%" y="703.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (55 samples, 0.05%)</title><rect x="99.6754%" y="677" width="0.0525%" height="15" fill="rgb(242,184,21)" fg:x="104389" fg:w="55"/><text x="99.9254%" y="687.50"></text></g><g><title>native_write_msr (55 samples, 0.05%)</title><rect x="99.6754%" y="661" width="0.0525%" height="15" fill="rgb(213,22,45)" fg:x="104389" fg:w="55"/><text x="99.9254%" y="671.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="99.6687%" y="933" width="0.0611%" height="15" fill="rgb(237,81,54)" fg:x="104382" fg:w="64"/><text x="99.9187%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="99.6687%" y="917" width="0.0611%" height="15" fill="rgb(248,177,18)" fg:x="104382" fg:w="64"/><text x="99.9187%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (64 samples, 0.06%)</title><rect x="99.6687%" y="901" width="0.0611%" height="15" fill="rgb(254,31,16)" fg:x="104382" fg:w="64"/><text x="99.9187%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (64 samples, 0.06%)</title><rect x="99.6687%" y="885" width="0.0611%" height="15" fill="rgb(235,20,31)" fg:x="104382" fg:w="64"/><text x="99.9187%" y="895.50"></text></g><g><title>___pthread_mutex_lock (64 samples, 0.06%)</title><rect x="99.6687%" y="869" width="0.0611%" height="15" fill="rgb(240,56,43)" fg:x="104382" fg:w="64"/><text x="99.9187%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (64 samples, 0.06%)</title><rect x="99.6687%" y="853" width="0.0611%" height="15" fill="rgb(237,197,51)" fg:x="104382" fg:w="64"/><text x="99.9187%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (64 samples, 0.06%)</title><rect x="99.6687%" y="837" width="0.0611%" height="15" fill="rgb(241,162,44)" fg:x="104382" fg:w="64"/><text x="99.9187%" y="847.50"></text></g><g><title>do_syscall_64 (64 samples, 0.06%)</title><rect x="99.6687%" y="821" width="0.0611%" height="15" fill="rgb(224,23,20)" fg:x="104382" fg:w="64"/><text x="99.9187%" y="831.50"></text></g><g><title>std::panic::catch_unwind (75 samples, 0.07%)</title><rect x="99.6677%" y="1061" width="0.0716%" height="15" fill="rgb(250,109,34)" fg:x="104381" fg:w="75"/><text x="99.9177%" y="1071.50"></text></g><g><title>std::panicking::try (75 samples, 0.07%)</title><rect x="99.6677%" y="1045" width="0.0716%" height="15" fill="rgb(214,175,50)" fg:x="104381" fg:w="75"/><text x="99.9177%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (75 samples, 0.07%)</title><rect x="99.6677%" y="1029" width="0.0716%" height="15" fill="rgb(213,182,5)" fg:x="104381" fg:w="75"/><text x="99.9177%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 0.07%)</title><rect x="99.6677%" y="1013" width="0.0716%" height="15" fill="rgb(209,199,19)" fg:x="104381" fg:w="75"/><text x="99.9177%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (75 samples, 0.07%)</title><rect x="99.6677%" y="997" width="0.0716%" height="15" fill="rgb(236,224,42)" fg:x="104381" fg:w="75"/><text x="99.9177%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (75 samples, 0.07%)</title><rect x="99.6677%" y="981" width="0.0716%" height="15" fill="rgb(246,226,29)" fg:x="104381" fg:w="75"/><text x="99.9177%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (75 samples, 0.07%)</title><rect x="99.6677%" y="965" width="0.0716%" height="15" fill="rgb(227,223,11)" fg:x="104381" fg:w="75"/><text x="99.9177%" y="975.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (75 samples, 0.07%)</title><rect x="99.6677%" y="949" width="0.0716%" height="15" fill="rgb(219,7,51)" fg:x="104381" fg:w="75"/><text x="99.9177%" y="959.50"></text></g><g><title>__GI___clone (86 samples, 0.08%)</title><rect x="99.6677%" y="1173" width="0.0821%" height="15" fill="rgb(245,167,10)" fg:x="104381" fg:w="86"/><text x="99.9177%" y="1183.50"></text></g><g><title>start_thread (86 samples, 0.08%)</title><rect x="99.6677%" y="1157" width="0.0821%" height="15" fill="rgb(237,224,16)" fg:x="104381" fg:w="86"/><text x="99.9177%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (86 samples, 0.08%)</title><rect x="99.6677%" y="1141" width="0.0821%" height="15" fill="rgb(226,132,13)" fg:x="104381" fg:w="86"/><text x="99.9177%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (86 samples, 0.08%)</title><rect x="99.6677%" y="1125" width="0.0821%" height="15" fill="rgb(214,140,3)" fg:x="104381" fg:w="86"/><text x="99.9177%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (86 samples, 0.08%)</title><rect x="99.6677%" y="1109" width="0.0821%" height="15" fill="rgb(221,177,4)" fg:x="104381" fg:w="86"/><text x="99.9177%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (86 samples, 0.08%)</title><rect x="99.6677%" y="1093" width="0.0821%" height="15" fill="rgb(238,139,3)" fg:x="104381" fg:w="86"/><text x="99.9177%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (86 samples, 0.08%)</title><rect x="99.6677%" y="1077" width="0.0821%" height="15" fill="rgb(216,17,39)" fg:x="104381" fg:w="86"/><text x="99.9177%" y="1087.50"></text></g><g><title>tokio-runtime-w (89 samples, 0.08%)</title><rect x="99.6677%" y="1189" width="0.0850%" height="15" fill="rgb(238,120,9)" fg:x="104381" fg:w="89"/><text x="99.9177%" y="1199.50"></text></g><g><title>async_io::driver::block_on (16 samples, 0.02%)</title><rect x="99.7565%" y="1157" width="0.0153%" height="15" fill="rgb(244,92,53)" fg:x="104474" fg:w="16"/><text x="100.0065%" y="1167.50"></text></g><g><title>parking::Parker::park (16 samples, 0.02%)</title><rect x="99.7565%" y="1141" width="0.0153%" height="15" fill="rgb(224,148,33)" fg:x="104474" fg:w="16"/><text x="100.0065%" y="1151.50"></text></g><g><title>parking::Inner::park (16 samples, 0.02%)</title><rect x="99.7565%" y="1125" width="0.0153%" height="15" fill="rgb(243,6,36)" fg:x="104474" fg:w="16"/><text x="100.0065%" y="1135.50"></text></g><g><title>std::sync::condvar::Condvar::wait (16 samples, 0.02%)</title><rect x="99.7565%" y="1109" width="0.0153%" height="15" fill="rgb(230,102,11)" fg:x="104474" fg:w="16"/><text x="100.0065%" y="1119.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (16 samples, 0.02%)</title><rect x="99.7565%" y="1093" width="0.0153%" height="15" fill="rgb(234,148,36)" fg:x="104474" fg:w="16"/><text x="100.0065%" y="1103.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (16 samples, 0.02%)</title><rect x="99.7565%" y="1077" width="0.0153%" height="15" fill="rgb(251,153,25)" fg:x="104474" fg:w="16"/><text x="100.0065%" y="1087.50"></text></g><g><title>__GI___pthread_cond_wait (16 samples, 0.02%)</title><rect x="99.7565%" y="1061" width="0.0153%" height="15" fill="rgb(215,129,8)" fg:x="104474" fg:w="16"/><text x="100.0065%" y="1071.50"></text></g><g><title>__futex_abstimed_wait_common (16 samples, 0.02%)</title><rect x="99.7565%" y="1045" width="0.0153%" height="15" fill="rgb(224,128,35)" fg:x="104474" fg:w="16"/><text x="100.0065%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="99.7575%" y="1029" width="0.0143%" height="15" fill="rgb(237,56,52)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="1039.50"></text></g><g><title>do_syscall_64 (15 samples, 0.01%)</title><rect x="99.7575%" y="1013" width="0.0143%" height="15" fill="rgb(234,213,19)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="1023.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.01%)</title><rect x="99.7575%" y="997" width="0.0143%" height="15" fill="rgb(252,82,23)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="1007.50"></text></g><g><title>do_futex (15 samples, 0.01%)</title><rect x="99.7575%" y="981" width="0.0143%" height="15" fill="rgb(254,201,21)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="991.50"></text></g><g><title>futex_wait (15 samples, 0.01%)</title><rect x="99.7575%" y="965" width="0.0143%" height="15" fill="rgb(250,186,11)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="975.50"></text></g><g><title>futex_wait_queue (15 samples, 0.01%)</title><rect x="99.7575%" y="949" width="0.0143%" height="15" fill="rgb(211,174,5)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="959.50"></text></g><g><title>schedule (15 samples, 0.01%)</title><rect x="99.7575%" y="933" width="0.0143%" height="15" fill="rgb(214,121,10)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="943.50"></text></g><g><title>__schedule (15 samples, 0.01%)</title><rect x="99.7575%" y="917" width="0.0143%" height="15" fill="rgb(241,66,2)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="927.50"></text></g><g><title>finish_task_switch.isra.0 (15 samples, 0.01%)</title><rect x="99.7575%" y="901" width="0.0143%" height="15" fill="rgb(220,167,19)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="911.50"></text></g><g><title>__perf_event_task_sched_in (15 samples, 0.01%)</title><rect x="99.7575%" y="885" width="0.0143%" height="15" fill="rgb(231,54,50)" fg:x="104475" fg:w="15"/><text x="100.0075%" y="895.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (14 samples, 0.01%)</title><rect x="99.7584%" y="869" width="0.0134%" height="15" fill="rgb(239,217,53)" fg:x="104476" fg:w="14"/><text x="100.0084%" y="879.50"></text></g><g><title>native_write_msr (14 samples, 0.01%)</title><rect x="99.7584%" y="853" width="0.0134%" height="15" fill="rgb(248,8,0)" fg:x="104476" fg:w="14"/><text x="100.0084%" y="863.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="99.7527%" y="1173" width="0.0248%" height="15" fill="rgb(229,118,37)" fg:x="104470" fg:w="26"/><text x="100.0027%" y="1183.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (184 samples, 0.18%)</title><rect x="99.7909%" y="1093" width="0.1757%" height="15" fill="rgb(253,223,43)" fg:x="104510" fg:w="184"/><text x="100.0409%" y="1103.50"></text></g><g><title>native_write_msr (184 samples, 0.18%)</title><rect x="99.7909%" y="1077" width="0.1757%" height="15" fill="rgb(211,77,36)" fg:x="104510" fg:w="184"/><text x="100.0409%" y="1087.50"></text></g><g><title>__perf_event_task_sched_in (186 samples, 0.18%)</title><rect x="99.7909%" y="1109" width="0.1776%" height="15" fill="rgb(219,3,53)" fg:x="104510" fg:w="186"/><text x="100.0409%" y="1119.50"></text></g><g><title>schedule_tail (200 samples, 0.19%)</title><rect x="99.7813%" y="1141" width="0.1910%" height="15" fill="rgb(244,45,42)" fg:x="104500" fg:w="200"/><text x="100.0313%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (195 samples, 0.19%)</title><rect x="99.7861%" y="1125" width="0.1862%" height="15" fill="rgb(225,95,27)" fg:x="104505" fg:w="195"/><text x="100.0361%" y="1135.50"></text></g><g><title>ret_from_fork (210 samples, 0.20%)</title><rect x="99.7775%" y="1157" width="0.2005%" height="15" fill="rgb(207,74,8)" fg:x="104496" fg:w="210"/><text x="100.0275%" y="1167.50"></text></g><g><title>__GI___clone (229 samples, 0.22%)</title><rect x="99.7775%" y="1173" width="0.2187%" height="15" fill="rgb(243,63,36)" fg:x="104496" fg:w="229"/><text x="100.0275%" y="1183.50"></text></g><g><title>start_thread (19 samples, 0.02%)</title><rect x="99.9780%" y="1157" width="0.0181%" height="15" fill="rgb(211,180,12)" fg:x="104706" fg:w="19"/><text x="100.2280%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (18 samples, 0.02%)</title><rect x="99.9790%" y="1141" width="0.0172%" height="15" fill="rgb(254,166,49)" fg:x="104707" fg:w="18"/><text x="100.2290%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (17 samples, 0.02%)</title><rect x="99.9799%" y="1125" width="0.0162%" height="15" fill="rgb(205,19,0)" fg:x="104708" fg:w="17"/><text x="100.2299%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (17 samples, 0.02%)</title><rect x="99.9799%" y="1109" width="0.0162%" height="15" fill="rgb(224,172,32)" fg:x="104708" fg:w="17"/><text x="100.2299%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (16 samples, 0.02%)</title><rect x="99.9809%" y="1093" width="0.0153%" height="15" fill="rgb(254,136,30)" fg:x="104709" fg:w="16"/><text x="100.2309%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (16 samples, 0.02%)</title><rect x="99.9809%" y="1077" width="0.0153%" height="15" fill="rgb(246,19,35)" fg:x="104709" fg:w="16"/><text x="100.2309%" y="1087.50"></text></g><g><title>all (104,729 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(219,24,36)" fg:x="0" fg:w="104729"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor-connecto (259 samples, 0.25%)</title><rect x="99.7527%" y="1189" width="0.2473%" height="15" fill="rgb(251,55,1)" fg:x="104470" fg:w="259"/><text x="100.0027%" y="1199.50"></text></g></svg></svg>