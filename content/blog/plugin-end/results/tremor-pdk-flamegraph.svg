<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1205.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="115750"><g><title>__perf_event_task_sched_in (30 samples, 0.03%)</title><rect x="0.0328%" y="645" width="0.0259%" height="15" fill="rgb(227,0,7)" fg:x="38" fg:w="30"/><text x="0.2828%" y="655.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (30 samples, 0.03%)</title><rect x="0.0328%" y="629" width="0.0259%" height="15" fill="rgb(217,0,24)" fg:x="38" fg:w="30"/><text x="0.2828%" y="639.50"></text></g><g><title>native_write_msr (30 samples, 0.03%)</title><rect x="0.0328%" y="613" width="0.0259%" height="15" fill="rgb(221,193,54)" fg:x="38" fg:w="30"/><text x="0.2828%" y="623.50"></text></g><g><title>finish_task_switch.isra.0 (32 samples, 0.03%)</title><rect x="0.0328%" y="661" width="0.0276%" height="15" fill="rgb(248,212,6)" fg:x="38" fg:w="32"/><text x="0.2828%" y="671.50"></text></g><g><title>__x64_sys_futex (51 samples, 0.04%)</title><rect x="0.0207%" y="757" width="0.0441%" height="15" fill="rgb(208,68,35)" fg:x="24" fg:w="51"/><text x="0.2707%" y="767.50"></text></g><g><title>do_futex (51 samples, 0.04%)</title><rect x="0.0207%" y="741" width="0.0441%" height="15" fill="rgb(232,128,0)" fg:x="24" fg:w="51"/><text x="0.2707%" y="751.50"></text></g><g><title>futex_wait (51 samples, 0.04%)</title><rect x="0.0207%" y="725" width="0.0441%" height="15" fill="rgb(207,160,47)" fg:x="24" fg:w="51"/><text x="0.2707%" y="735.50"></text></g><g><title>futex_wait_queue (51 samples, 0.04%)</title><rect x="0.0207%" y="709" width="0.0441%" height="15" fill="rgb(228,23,34)" fg:x="24" fg:w="51"/><text x="0.2707%" y="719.50"></text></g><g><title>schedule (44 samples, 0.04%)</title><rect x="0.0268%" y="693" width="0.0380%" height="15" fill="rgb(218,30,26)" fg:x="31" fg:w="44"/><text x="0.2768%" y="703.50"></text></g><g><title>__schedule (44 samples, 0.04%)</title><rect x="0.0268%" y="677" width="0.0380%" height="15" fill="rgb(220,122,19)" fg:x="31" fg:w="44"/><text x="0.2768%" y="687.50"></text></g><g><title>__GI___clone (79 samples, 0.07%)</title><rect x="0.0000%" y="1141" width="0.0683%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1151.50"></text></g><g><title>start_thread (79 samples, 0.07%)</title><rect x="0.0000%" y="1125" width="0.0683%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (79 samples, 0.07%)</title><rect x="0.0000%" y="1109" width="0.0683%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (79 samples, 0.07%)</title><rect x="0.0000%" y="1093" width="0.0683%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (79 samples, 0.07%)</title><rect x="0.0000%" y="1077" width="0.0683%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (79 samples, 0.07%)</title><rect x="0.0000%" y="1061" width="0.0683%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (79 samples, 0.07%)</title><rect x="0.0000%" y="1045" width="0.0683%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (79 samples, 0.07%)</title><rect x="0.0000%" y="1029" width="0.0683%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1039.50"></text></g><g><title>std::panicking::try (79 samples, 0.07%)</title><rect x="0.0000%" y="1013" width="0.0683%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (79 samples, 0.07%)</title><rect x="0.0000%" y="997" width="0.0683%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="79"/><text x="0.2500%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79 samples, 0.07%)</title><rect x="0.0000%" y="981" width="0.0683%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="79"/><text x="0.2500%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (79 samples, 0.07%)</title><rect x="0.0000%" y="965" width="0.0683%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="79"/><text x="0.2500%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (79 samples, 0.07%)</title><rect x="0.0000%" y="949" width="0.0683%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="79"/><text x="0.2500%" y="959.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (79 samples, 0.07%)</title><rect x="0.0000%" y="933" width="0.0683%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="79"/><text x="0.2500%" y="943.50"></text></g><g><title>async_io::driver::main_loop (79 samples, 0.07%)</title><rect x="0.0000%" y="917" width="0.0683%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="79"/><text x="0.2500%" y="927.50"></text></g><g><title>parking::Parker::park_timeout (66 samples, 0.06%)</title><rect x="0.0112%" y="901" width="0.0570%" height="15" fill="rgb(249,31,29)" fg:x="13" fg:w="66"/><text x="0.2612%" y="911.50"></text></g><g><title>parking::Inner::park (66 samples, 0.06%)</title><rect x="0.0112%" y="885" width="0.0570%" height="15" fill="rgb(225,111,53)" fg:x="13" fg:w="66"/><text x="0.2612%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (62 samples, 0.05%)</title><rect x="0.0147%" y="869" width="0.0536%" height="15" fill="rgb(238,160,17)" fg:x="17" fg:w="62"/><text x="0.2647%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (59 samples, 0.05%)</title><rect x="0.0173%" y="853" width="0.0510%" height="15" fill="rgb(214,148,48)" fg:x="20" fg:w="59"/><text x="0.2673%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (59 samples, 0.05%)</title><rect x="0.0173%" y="837" width="0.0510%" height="15" fill="rgb(232,36,49)" fg:x="20" fg:w="59"/><text x="0.2673%" y="847.50"></text></g><g><title>___pthread_cond_timedwait (57 samples, 0.05%)</title><rect x="0.0190%" y="821" width="0.0492%" height="15" fill="rgb(209,103,24)" fg:x="22" fg:w="57"/><text x="0.2690%" y="831.50"></text></g><g><title>__futex_abstimed_wait_common (55 samples, 0.05%)</title><rect x="0.0207%" y="805" width="0.0475%" height="15" fill="rgb(229,88,8)" fg:x="24" fg:w="55"/><text x="0.2707%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (55 samples, 0.05%)</title><rect x="0.0207%" y="789" width="0.0475%" height="15" fill="rgb(213,181,19)" fg:x="24" fg:w="55"/><text x="0.2707%" y="799.50"></text></g><g><title>do_syscall_64 (55 samples, 0.05%)</title><rect x="0.0207%" y="773" width="0.0475%" height="15" fill="rgb(254,191,54)" fg:x="24" fg:w="55"/><text x="0.2707%" y="783.50"></text></g><g><title>async-io (80 samples, 0.07%)</title><rect x="0.0000%" y="1157" width="0.0691%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="80"/><text x="0.2500%" y="1167.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="0.2825%" y="1141" width="0.0130%" height="15" fill="rgb(233,36,39)" fg:x="327" fg:w="15"/><text x="0.5325%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="0.3093%" y="1141" width="0.0190%" height="15" fill="rgb(226,3,54)" fg:x="358" fg:w="22"/><text x="0.5593%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.04%)</title><rect x="0.3283%" y="1141" width="0.0423%" height="15" fill="rgb(245,192,40)" fg:x="380" fg:w="49"/><text x="0.5783%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="0.3706%" y="1141" width="0.0276%" height="15" fill="rgb(238,167,29)" fg:x="429" fg:w="32"/><text x="0.6206%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (32 samples, 0.03%)</title><rect x="0.3706%" y="1125" width="0.0276%" height="15" fill="rgb(232,182,51)" fg:x="429" fg:w="32"/><text x="0.6206%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (70 samples, 0.06%)</title><rect x="0.3983%" y="1141" width="0.0605%" height="15" fill="rgb(231,60,39)" fg:x="461" fg:w="70"/><text x="0.6483%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (64 samples, 0.06%)</title><rect x="0.4035%" y="1125" width="0.0553%" height="15" fill="rgb(208,69,12)" fg:x="467" fg:w="64"/><text x="0.6535%" y="1135.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.02%)</title><rect x="0.4397%" y="1109" width="0.0190%" height="15" fill="rgb(235,93,37)" fg:x="509" fg:w="22"/><text x="0.6897%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (76 samples, 0.07%)</title><rect x="0.4674%" y="1125" width="0.0657%" height="15" fill="rgb(213,116,39)" fg:x="541" fg:w="76"/><text x="0.7174%" y="1135.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19 samples, 0.02%)</title><rect x="0.5166%" y="1109" width="0.0164%" height="15" fill="rgb(222,207,29)" fg:x="598" fg:w="19"/><text x="0.7666%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="0.5330%" y="1125" width="0.0156%" height="15" fill="rgb(206,96,30)" fg:x="617" fg:w="18"/><text x="0.7830%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.5486%" y="1125" width="0.0164%" height="15" fill="rgb(218,138,4)" fg:x="635" fg:w="19"/><text x="0.7986%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="0.5650%" y="1125" width="0.0251%" height="15" fill="rgb(250,191,14)" fg:x="654" fg:w="29"/><text x="0.8150%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="0.5901%" y="1125" width="0.0380%" height="15" fill="rgb(239,60,40)" fg:x="683" fg:w="44"/><text x="0.8401%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.01%)</title><rect x="0.6281%" y="1125" width="0.0147%" height="15" fill="rgb(206,27,48)" fg:x="727" fg:w="17"/><text x="0.8781%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="0.6428%" y="1125" width="0.0233%" height="15" fill="rgb(225,35,8)" fg:x="744" fg:w="27"/><text x="0.8928%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (19 samples, 0.02%)</title><rect x="0.6497%" y="1109" width="0.0164%" height="15" fill="rgb(250,213,24)" fg:x="752" fg:w="19"/><text x="0.8997%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.6497%" y="1093" width="0.0164%" height="15" fill="rgb(247,123,22)" fg:x="752" fg:w="19"/><text x="0.8997%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (19 samples, 0.02%)</title><rect x="0.6497%" y="1077" width="0.0164%" height="15" fill="rgb(231,138,38)" fg:x="752" fg:w="19"/><text x="0.8997%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.6497%" y="1061" width="0.0164%" height="15" fill="rgb(231,145,46)" fg:x="752" fg:w="19"/><text x="0.8997%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="0.6497%" y="1045" width="0.0164%" height="15" fill="rgb(251,118,11)" fg:x="752" fg:w="19"/><text x="0.8997%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="0.6497%" y="1029" width="0.0164%" height="15" fill="rgb(217,147,25)" fg:x="752" fg:w="19"/><text x="0.8997%" y="1039.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="0.6497%" y="1013" width="0.0164%" height="15" fill="rgb(247,81,37)" fg:x="752" fg:w="19"/><text x="0.8997%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="0.6497%" y="997" width="0.0164%" height="15" fill="rgb(209,12,38)" fg:x="752" fg:w="19"/><text x="0.8997%" y="1007.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (153 samples, 0.13%)</title><rect x="0.6661%" y="1125" width="0.1322%" height="15" fill="rgb(227,1,9)" fg:x="771" fg:w="153"/><text x="0.9161%" y="1135.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (28 samples, 0.02%)</title><rect x="0.8717%" y="1109" width="0.0242%" height="15" fill="rgb(248,47,43)" fg:x="1009" fg:w="28"/><text x="1.1217%" y="1119.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (17 samples, 0.01%)</title><rect x="0.8812%" y="1093" width="0.0147%" height="15" fill="rgb(221,10,30)" fg:x="1020" fg:w="17"/><text x="1.1312%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (77 samples, 0.07%)</title><rect x="0.8959%" y="1109" width="0.0665%" height="15" fill="rgb(210,229,1)" fg:x="1037" fg:w="77"/><text x="1.1459%" y="1119.50"></text></g><g><title>core::mem::replace (77 samples, 0.07%)</title><rect x="0.8959%" y="1093" width="0.0665%" height="15" fill="rgb(222,148,37)" fg:x="1037" fg:w="77"/><text x="1.1459%" y="1103.50"></text></g><g><title>core::ptr::read (77 samples, 0.07%)</title><rect x="0.8959%" y="1077" width="0.0665%" height="15" fill="rgb(234,67,33)" fg:x="1037" fg:w="77"/><text x="1.1459%" y="1087.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (182 samples, 0.16%)</title><rect x="0.8060%" y="1125" width="0.1572%" height="15" fill="rgb(247,98,35)" fg:x="933" fg:w="182"/><text x="1.0560%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (33 samples, 0.03%)</title><rect x="1.2873%" y="1093" width="0.0285%" height="15" fill="rgb(247,138,52)" fg:x="1490" fg:w="33"/><text x="1.5373%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (33 samples, 0.03%)</title><rect x="1.2873%" y="1077" width="0.0285%" height="15" fill="rgb(213,79,30)" fg:x="1490" fg:w="33"/><text x="1.5373%" y="1087.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (85 samples, 0.07%)</title><rect x="1.2458%" y="1109" width="0.0734%" height="15" fill="rgb(246,177,23)" fg:x="1442" fg:w="85"/><text x="1.4958%" y="1119.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="1.3192%" y="1093" width="0.0302%" height="15" fill="rgb(230,62,27)" fg:x="1527" fg:w="35"/><text x="1.5692%" y="1103.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="1.3279%" y="1077" width="0.0216%" height="15" fill="rgb(216,154,8)" fg:x="1537" fg:w="25"/><text x="1.5779%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (25 samples, 0.02%)</title><rect x="1.3279%" y="1061" width="0.0216%" height="15" fill="rgb(244,35,45)" fg:x="1537" fg:w="25"/><text x="1.5779%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (25 samples, 0.02%)</title><rect x="1.3279%" y="1045" width="0.0216%" height="15" fill="rgb(251,115,12)" fg:x="1537" fg:w="25"/><text x="1.5779%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (25 samples, 0.02%)</title><rect x="1.3279%" y="1029" width="0.0216%" height="15" fill="rgb(240,54,50)" fg:x="1537" fg:w="25"/><text x="1.5779%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.02%)</title><rect x="1.3279%" y="1013" width="0.0216%" height="15" fill="rgb(233,84,52)" fg:x="1537" fg:w="25"/><text x="1.5779%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.02%)</title><rect x="1.3279%" y="997" width="0.0216%" height="15" fill="rgb(207,117,47)" fg:x="1537" fg:w="25"/><text x="1.5779%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.02%)</title><rect x="1.3279%" y="981" width="0.0216%" height="15" fill="rgb(249,43,39)" fg:x="1537" fg:w="25"/><text x="1.5779%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20 samples, 0.02%)</title><rect x="1.3322%" y="965" width="0.0173%" height="15" fill="rgb(209,38,44)" fg:x="1542" fg:w="20"/><text x="1.5822%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="1.3322%" y="949" width="0.0173%" height="15" fill="rgb(236,212,23)" fg:x="1542" fg:w="20"/><text x="1.5822%" y="959.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (47 samples, 0.04%)</title><rect x="1.3192%" y="1109" width="0.0406%" height="15" fill="rgb(242,79,21)" fg:x="1527" fg:w="47"/><text x="1.5692%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (12 samples, 0.01%)</title><rect x="1.3495%" y="1093" width="0.0104%" height="15" fill="rgb(211,96,35)" fg:x="1562" fg:w="12"/><text x="1.5995%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="1.3495%" y="1077" width="0.0104%" height="15" fill="rgb(253,215,40)" fg:x="1562" fg:w="12"/><text x="1.5995%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="1.3495%" y="1061" width="0.0104%" height="15" fill="rgb(211,81,21)" fg:x="1562" fg:w="12"/><text x="1.5995%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="1.3495%" y="1045" width="0.0104%" height="15" fill="rgb(208,190,38)" fg:x="1562" fg:w="12"/><text x="1.5995%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.3495%" y="1029" width="0.0104%" height="15" fill="rgb(235,213,38)" fg:x="1562" fg:w="12"/><text x="1.5995%" y="1039.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (13 samples, 0.01%)</title><rect x="1.3702%" y="1109" width="0.0112%" height="15" fill="rgb(237,122,38)" fg:x="1586" fg:w="13"/><text x="1.6202%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.3702%" y="1093" width="0.0112%" height="15" fill="rgb(244,218,35)" fg:x="1586" fg:w="13"/><text x="1.6202%" y="1103.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (13 samples, 0.01%)</title><rect x="1.3702%" y="1077" width="0.0112%" height="15" fill="rgb(240,68,47)" fg:x="1586" fg:w="13"/><text x="1.6202%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="1.4307%" y="1093" width="0.0164%" height="15" fill="rgb(210,16,53)" fg:x="1656" fg:w="19"/><text x="1.6807%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (75 samples, 0.06%)</title><rect x="1.3901%" y="1109" width="0.0648%" height="15" fill="rgb(235,124,12)" fg:x="1609" fg:w="75"/><text x="1.6401%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (21 samples, 0.02%)</title><rect x="1.4549%" y="1109" width="0.0181%" height="15" fill="rgb(224,169,11)" fg:x="1684" fg:w="21"/><text x="1.7049%" y="1119.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (46 samples, 0.04%)</title><rect x="1.4730%" y="1109" width="0.0397%" height="15" fill="rgb(250,166,2)" fg:x="1705" fg:w="46"/><text x="1.7230%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (711 samples, 0.61%)</title><rect x="0.9633%" y="1125" width="0.6143%" height="15" fill="rgb(242,216,29)" fg:x="1115" fg:w="711"/><text x="1.2133%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (75 samples, 0.06%)</title><rect x="1.5127%" y="1109" width="0.0648%" height="15" fill="rgb(230,116,27)" fg:x="1751" fg:w="75"/><text x="1.7627%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.01%)</title><rect x="1.5775%" y="1125" width="0.0138%" height="15" fill="rgb(228,99,48)" fg:x="1826" fg:w="16"/><text x="1.8275%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (26 samples, 0.02%)</title><rect x="1.6622%" y="1109" width="0.0225%" height="15" fill="rgb(253,11,6)" fg:x="1924" fg:w="26"/><text x="1.9122%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (26 samples, 0.02%)</title><rect x="1.6622%" y="1093" width="0.0225%" height="15" fill="rgb(247,143,39)" fg:x="1924" fg:w="26"/><text x="1.9122%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="1.6622%" y="1077" width="0.0225%" height="15" fill="rgb(236,97,10)" fg:x="1924" fg:w="26"/><text x="1.9122%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (26 samples, 0.02%)</title><rect x="1.6622%" y="1061" width="0.0225%" height="15" fill="rgb(233,208,19)" fg:x="1924" fg:w="26"/><text x="1.9122%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.02%)</title><rect x="1.6622%" y="1045" width="0.0225%" height="15" fill="rgb(216,164,2)" fg:x="1924" fg:w="26"/><text x="1.9122%" y="1055.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (120 samples, 0.10%)</title><rect x="1.5914%" y="1125" width="0.1037%" height="15" fill="rgb(220,129,5)" fg:x="1842" fg:w="120"/><text x="1.8414%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (12 samples, 0.01%)</title><rect x="1.6847%" y="1109" width="0.0104%" height="15" fill="rgb(242,17,10)" fg:x="1950" fg:w="12"/><text x="1.9347%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="1.6847%" y="1093" width="0.0104%" height="15" fill="rgb(242,107,0)" fg:x="1950" fg:w="12"/><text x="1.9347%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="1.6847%" y="1077" width="0.0104%" height="15" fill="rgb(251,28,31)" fg:x="1950" fg:w="12"/><text x="1.9347%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="1.6847%" y="1061" width="0.0104%" height="15" fill="rgb(233,223,10)" fg:x="1950" fg:w="12"/><text x="1.9347%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="1.6994%" y="1109" width="0.0112%" height="15" fill="rgb(215,21,27)" fg:x="1967" fg:w="13"/><text x="1.9494%" y="1119.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="1.6994%" y="1093" width="0.0112%" height="15" fill="rgb(232,23,21)" fg:x="1967" fg:w="13"/><text x="1.9494%" y="1103.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="1.6994%" y="1077" width="0.0112%" height="15" fill="rgb(244,5,23)" fg:x="1967" fg:w="13"/><text x="1.9494%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="1.6950%" y="1125" width="0.0233%" height="15" fill="rgb(226,81,46)" fg:x="1962" fg:w="27"/><text x="1.9450%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (30 samples, 0.03%)</title><rect x="1.7555%" y="1077" width="0.0259%" height="15" fill="rgb(247,70,30)" fg:x="2032" fg:w="30"/><text x="2.0055%" y="1087.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (47 samples, 0.04%)</title><rect x="1.7469%" y="1093" width="0.0406%" height="15" fill="rgb(212,68,19)" fg:x="2022" fg:w="47"/><text x="1.9969%" y="1103.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (85 samples, 0.07%)</title><rect x="1.7184%" y="1125" width="0.0734%" height="15" fill="rgb(240,187,13)" fg:x="1989" fg:w="85"/><text x="1.9684%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (68 samples, 0.06%)</title><rect x="1.7330%" y="1109" width="0.0587%" height="15" fill="rgb(223,113,26)" fg:x="2006" fg:w="68"/><text x="1.9830%" y="1119.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (67 samples, 0.06%)</title><rect x="1.7918%" y="1125" width="0.0579%" height="15" fill="rgb(206,192,2)" fg:x="2074" fg:w="67"/><text x="2.0418%" y="1135.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="1.8367%" y="1109" width="0.0130%" height="15" fill="rgb(241,108,4)" fg:x="2126" fg:w="15"/><text x="2.0867%" y="1119.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (15 samples, 0.01%)</title><rect x="1.8367%" y="1093" width="0.0130%" height="15" fill="rgb(247,173,49)" fg:x="2126" fg:w="15"/><text x="2.0867%" y="1103.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="1.8367%" y="1077" width="0.0130%" height="15" fill="rgb(224,114,35)" fg:x="2126" fg:w="15"/><text x="2.0867%" y="1087.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (15 samples, 0.01%)</title><rect x="1.8367%" y="1061" width="0.0130%" height="15" fill="rgb(245,159,27)" fg:x="2126" fg:w="15"/><text x="2.0867%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="1.8367%" y="1045" width="0.0130%" height="15" fill="rgb(245,172,44)" fg:x="2126" fg:w="15"/><text x="2.0867%" y="1055.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (35 samples, 0.03%)</title><rect x="1.8497%" y="1125" width="0.0302%" height="15" fill="rgb(236,23,11)" fg:x="2141" fg:w="35"/><text x="2.0997%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (15 samples, 0.01%)</title><rect x="1.8799%" y="1125" width="0.0130%" height="15" fill="rgb(205,117,38)" fg:x="2176" fg:w="15"/><text x="2.1299%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (212 samples, 0.18%)</title><rect x="1.8929%" y="1125" width="0.1832%" height="15" fill="rgb(237,72,25)" fg:x="2191" fg:w="212"/><text x="2.1429%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (100 samples, 0.09%)</title><rect x="1.9896%" y="1109" width="0.0864%" height="15" fill="rgb(244,70,9)" fg:x="2303" fg:w="100"/><text x="2.2396%" y="1119.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (76 samples, 0.07%)</title><rect x="2.0104%" y="1093" width="0.0657%" height="15" fill="rgb(217,125,39)" fg:x="2327" fg:w="76"/><text x="2.2604%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="2.0587%" y="1077" width="0.0173%" height="15" fill="rgb(235,36,10)" fg:x="2383" fg:w="20"/><text x="2.3087%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.01%)</title><rect x="2.0657%" y="1061" width="0.0104%" height="15" fill="rgb(251,123,47)" fg:x="2391" fg:w="12"/><text x="2.3157%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="2.0657%" y="1045" width="0.0104%" height="15" fill="rgb(221,13,13)" fg:x="2391" fg:w="12"/><text x="2.3157%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="2.0657%" y="1029" width="0.0104%" height="15" fill="rgb(238,131,9)" fg:x="2391" fg:w="12"/><text x="2.3157%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="2.0657%" y="1013" width="0.0104%" height="15" fill="rgb(211,50,8)" fg:x="2391" fg:w="12"/><text x="2.3157%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="2.0657%" y="997" width="0.0104%" height="15" fill="rgb(245,182,24)" fg:x="2391" fg:w="12"/><text x="2.3157%" y="1007.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="2.0657%" y="981" width="0.0104%" height="15" fill="rgb(242,14,37)" fg:x="2391" fg:w="12"/><text x="2.3157%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="2.0657%" y="965" width="0.0104%" height="15" fill="rgb(246,228,12)" fg:x="2391" fg:w="12"/><text x="2.3157%" y="975.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (46 samples, 0.04%)</title><rect x="2.0760%" y="1125" width="0.0397%" height="15" fill="rgb(213,55,15)" fg:x="2403" fg:w="46"/><text x="2.3260%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (52 samples, 0.04%)</title><rect x="2.1158%" y="1125" width="0.0449%" height="15" fill="rgb(209,9,3)" fg:x="2449" fg:w="52"/><text x="2.3658%" y="1135.50"></text></g><g><title>__GI___lll_lock_wake (14 samples, 0.01%)</title><rect x="2.1641%" y="1125" width="0.0121%" height="15" fill="rgb(230,59,30)" fg:x="2505" fg:w="14"/><text x="2.4141%" y="1135.50"></text></g><g><title>__GI___pthread_mutex_trylock (14 samples, 0.01%)</title><rect x="2.1918%" y="1125" width="0.0121%" height="15" fill="rgb(209,121,21)" fg:x="2537" fg:w="14"/><text x="2.4418%" y="1135.50"></text></g><g><title>___pthread_mutex_lock (49 samples, 0.04%)</title><rect x="2.2134%" y="1125" width="0.0423%" height="15" fill="rgb(220,109,13)" fg:x="2562" fg:w="49"/><text x="2.4634%" y="1135.50"></text></g><g><title>___pthread_rwlock_unlock (13 samples, 0.01%)</title><rect x="2.2600%" y="1125" width="0.0112%" height="15" fill="rgb(232,18,1)" fg:x="2616" fg:w="13"/><text x="2.5100%" y="1135.50"></text></g><g><title>__clock_gettime_2 (16 samples, 0.01%)</title><rect x="2.2713%" y="1125" width="0.0138%" height="15" fill="rgb(215,41,42)" fg:x="2629" fg:w="16"/><text x="2.5213%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.03%)</title><rect x="2.2886%" y="1125" width="0.0328%" height="15" fill="rgb(224,123,36)" fg:x="2649" fg:w="38"/><text x="2.5386%" y="1135.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (39 samples, 0.03%)</title><rect x="2.3387%" y="1125" width="0.0337%" height="15" fill="rgb(240,125,3)" fg:x="2707" fg:w="39"/><text x="2.5887%" y="1135.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (12 samples, 0.01%)</title><rect x="2.4164%" y="1061" width="0.0104%" height="15" fill="rgb(205,98,50)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.4164%" y="1045" width="0.0104%" height="15" fill="rgb(205,185,37)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="2.4164%" y="1029" width="0.0104%" height="15" fill="rgb(238,207,15)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="2.4164%" y="1013" width="0.0104%" height="15" fill="rgb(213,199,42)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.4164%" y="997" width="0.0104%" height="15" fill="rgb(235,201,11)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.4164%" y="981" width="0.0104%" height="15" fill="rgb(207,46,11)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="991.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.4164%" y="965" width="0.0104%" height="15" fill="rgb(241,35,35)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="975.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="2.4164%" y="949" width="0.0104%" height="15" fill="rgb(243,32,47)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="2.4164%" y="933" width="0.0104%" height="15" fill="rgb(247,202,23)" fg:x="2797" fg:w="12"/><text x="2.6664%" y="943.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (106 samples, 0.09%)</title><rect x="2.3724%" y="1125" width="0.0916%" height="15" fill="rgb(219,102,11)" fg:x="2746" fg:w="106"/><text x="2.6224%" y="1135.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (61 samples, 0.05%)</title><rect x="2.4112%" y="1109" width="0.0527%" height="15" fill="rgb(243,110,44)" fg:x="2791" fg:w="61"/><text x="2.6612%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (61 samples, 0.05%)</title><rect x="2.4112%" y="1093" width="0.0527%" height="15" fill="rgb(222,74,54)" fg:x="2791" fg:w="61"/><text x="2.6612%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (61 samples, 0.05%)</title><rect x="2.4112%" y="1077" width="0.0527%" height="15" fill="rgb(216,99,12)" fg:x="2791" fg:w="61"/><text x="2.6612%" y="1087.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (43 samples, 0.04%)</title><rect x="2.4268%" y="1061" width="0.0371%" height="15" fill="rgb(226,22,26)" fg:x="2809" fg:w="43"/><text x="2.6768%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (43 samples, 0.04%)</title><rect x="2.4268%" y="1045" width="0.0371%" height="15" fill="rgb(217,163,10)" fg:x="2809" fg:w="43"/><text x="2.6768%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (43 samples, 0.04%)</title><rect x="2.4268%" y="1029" width="0.0371%" height="15" fill="rgb(213,25,53)" fg:x="2809" fg:w="43"/><text x="2.6768%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (43 samples, 0.04%)</title><rect x="2.4268%" y="1013" width="0.0371%" height="15" fill="rgb(252,105,26)" fg:x="2809" fg:w="43"/><text x="2.6768%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (115 samples, 0.10%)</title><rect x="2.4648%" y="1125" width="0.0994%" height="15" fill="rgb(220,39,43)" fg:x="2853" fg:w="115"/><text x="2.7148%" y="1135.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (100 samples, 0.09%)</title><rect x="2.4778%" y="1109" width="0.0864%" height="15" fill="rgb(229,68,48)" fg:x="2868" fg:w="100"/><text x="2.7278%" y="1119.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (100 samples, 0.09%)</title><rect x="2.4778%" y="1093" width="0.0864%" height="15" fill="rgb(252,8,32)" fg:x="2868" fg:w="100"/><text x="2.7278%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="2.6013%" y="917" width="0.0190%" height="15" fill="rgb(223,20,43)" fg:x="3011" fg:w="22"/><text x="2.8513%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="2.6013%" y="901" width="0.0190%" height="15" fill="rgb(229,81,49)" fg:x="3011" fg:w="22"/><text x="2.8513%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="2.6013%" y="885" width="0.0190%" height="15" fill="rgb(236,28,36)" fg:x="3011" fg:w="22"/><text x="2.8513%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="2.6013%" y="869" width="0.0190%" height="15" fill="rgb(249,185,26)" fg:x="3011" fg:w="22"/><text x="2.8513%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="2.6013%" y="853" width="0.0190%" height="15" fill="rgb(249,174,33)" fg:x="3011" fg:w="22"/><text x="2.8513%" y="863.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="2.6013%" y="837" width="0.0190%" height="15" fill="rgb(233,201,37)" fg:x="3011" fg:w="22"/><text x="2.8513%" y="847.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="2.6013%" y="821" width="0.0190%" height="15" fill="rgb(221,78,26)" fg:x="3011" fg:w="22"/><text x="2.8513%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="2.6013%" y="805" width="0.0190%" height="15" fill="rgb(250,127,30)" fg:x="3011" fg:w="22"/><text x="2.8513%" y="815.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (28 samples, 0.02%)</title><rect x="2.6013%" y="1029" width="0.0242%" height="15" fill="rgb(230,49,44)" fg:x="3011" fg:w="28"/><text x="2.8513%" y="1039.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (28 samples, 0.02%)</title><rect x="2.6013%" y="1013" width="0.0242%" height="15" fill="rgb(229,67,23)" fg:x="3011" fg:w="28"/><text x="2.8513%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (28 samples, 0.02%)</title><rect x="2.6013%" y="997" width="0.0242%" height="15" fill="rgb(249,83,47)" fg:x="3011" fg:w="28"/><text x="2.8513%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.02%)</title><rect x="2.6013%" y="981" width="0.0242%" height="15" fill="rgb(215,43,3)" fg:x="3011" fg:w="28"/><text x="2.8513%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.02%)</title><rect x="2.6013%" y="965" width="0.0242%" height="15" fill="rgb(238,154,13)" fg:x="3011" fg:w="28"/><text x="2.8513%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.02%)</title><rect x="2.6013%" y="949" width="0.0242%" height="15" fill="rgb(219,56,2)" fg:x="3011" fg:w="28"/><text x="2.8513%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.02%)</title><rect x="2.6013%" y="933" width="0.0242%" height="15" fill="rgb(233,0,4)" fg:x="3011" fg:w="28"/><text x="2.8513%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (80 samples, 0.07%)</title><rect x="2.5641%" y="1125" width="0.0691%" height="15" fill="rgb(235,30,7)" fg:x="2968" fg:w="80"/><text x="2.8141%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (37 samples, 0.03%)</title><rect x="2.6013%" y="1109" width="0.0320%" height="15" fill="rgb(250,79,13)" fg:x="3011" fg:w="37"/><text x="2.8513%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (37 samples, 0.03%)</title><rect x="2.6013%" y="1093" width="0.0320%" height="15" fill="rgb(211,146,34)" fg:x="3011" fg:w="37"/><text x="2.8513%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.03%)</title><rect x="2.6013%" y="1077" width="0.0320%" height="15" fill="rgb(228,22,38)" fg:x="3011" fg:w="37"/><text x="2.8513%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.03%)</title><rect x="2.6013%" y="1061" width="0.0320%" height="15" fill="rgb(235,168,5)" fg:x="3011" fg:w="37"/><text x="2.8513%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.03%)</title><rect x="2.6013%" y="1045" width="0.0320%" height="15" fill="rgb(221,155,16)" fg:x="3011" fg:w="37"/><text x="2.8513%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.06%)</title><rect x="2.6972%" y="1061" width="0.0570%" height="15" fill="rgb(215,215,53)" fg:x="3122" fg:w="66"/><text x="2.9472%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (66 samples, 0.06%)</title><rect x="2.6972%" y="1045" width="0.0570%" height="15" fill="rgb(223,4,10)" fg:x="3122" fg:w="66"/><text x="2.9472%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (66 samples, 0.06%)</title><rect x="2.6972%" y="1029" width="0.0570%" height="15" fill="rgb(234,103,6)" fg:x="3122" fg:w="66"/><text x="2.9472%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (66 samples, 0.06%)</title><rect x="2.6972%" y="1013" width="0.0570%" height="15" fill="rgb(227,97,0)" fg:x="3122" fg:w="66"/><text x="2.9472%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (74 samples, 0.06%)</title><rect x="2.6972%" y="1077" width="0.0639%" height="15" fill="rgb(234,150,53)" fg:x="3122" fg:w="74"/><text x="2.9472%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="2.7611%" y="1061" width="0.0389%" height="15" fill="rgb(228,201,54)" fg:x="3196" fg:w="45"/><text x="3.0111%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (45 samples, 0.04%)</title><rect x="2.7611%" y="1045" width="0.0389%" height="15" fill="rgb(222,22,37)" fg:x="3196" fg:w="45"/><text x="3.0111%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (45 samples, 0.04%)</title><rect x="2.7611%" y="1029" width="0.0389%" height="15" fill="rgb(237,53,32)" fg:x="3196" fg:w="45"/><text x="3.0111%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (45 samples, 0.04%)</title><rect x="2.7611%" y="1013" width="0.0389%" height="15" fill="rgb(233,25,53)" fg:x="3196" fg:w="45"/><text x="3.0111%" y="1023.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (45 samples, 0.04%)</title><rect x="2.7611%" y="997" width="0.0389%" height="15" fill="rgb(210,40,34)" fg:x="3196" fg:w="45"/><text x="3.0111%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (55 samples, 0.05%)</title><rect x="2.7611%" y="1077" width="0.0475%" height="15" fill="rgb(241,220,44)" fg:x="3196" fg:w="55"/><text x="3.0111%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (211 samples, 0.18%)</title><rect x="2.6333%" y="1125" width="0.1823%" height="15" fill="rgb(235,28,35)" fg:x="3048" fg:w="211"/><text x="2.8833%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (137 samples, 0.12%)</title><rect x="2.6972%" y="1109" width="0.1184%" height="15" fill="rgb(210,56,17)" fg:x="3122" fg:w="137"/><text x="2.9472%" y="1119.50"></text></g><g><title>core::mem::drop (137 samples, 0.12%)</title><rect x="2.6972%" y="1093" width="0.1184%" height="15" fill="rgb(224,130,29)" fg:x="3122" fg:w="137"/><text x="2.9472%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (50 samples, 0.04%)</title><rect x="2.8156%" y="1125" width="0.0432%" height="15" fill="rgb(235,212,8)" fg:x="3259" fg:w="50"/><text x="3.0656%" y="1135.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 0.01%)</title><rect x="2.8631%" y="1125" width="0.0138%" height="15" fill="rgb(223,33,50)" fg:x="3314" fg:w="16"/><text x="3.1131%" y="1135.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (12 samples, 0.01%)</title><rect x="2.8769%" y="1125" width="0.0104%" height="15" fill="rgb(219,149,13)" fg:x="3330" fg:w="12"/><text x="3.1269%" y="1135.50"></text></g><g><title>async_executor::Ticker::sleep (35 samples, 0.03%)</title><rect x="2.8950%" y="1125" width="0.0302%" height="15" fill="rgb(250,156,29)" fg:x="3351" fg:w="35"/><text x="3.1450%" y="1135.50"></text></g><g><title>async_executor::steal (105 samples, 0.09%)</title><rect x="2.9322%" y="1125" width="0.0907%" height="15" fill="rgb(216,193,19)" fg:x="3394" fg:w="105"/><text x="3.1822%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (33 samples, 0.03%)</title><rect x="3.0315%" y="1125" width="0.0285%" height="15" fill="rgb(216,135,14)" fg:x="3509" fg:w="33"/><text x="3.2815%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (23 samples, 0.02%)</title><rect x="3.0695%" y="1125" width="0.0199%" height="15" fill="rgb(241,47,5)" fg:x="3553" fg:w="23"/><text x="3.3195%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (107 samples, 0.09%)</title><rect x="3.0894%" y="1125" width="0.0924%" height="15" fill="rgb(233,42,35)" fg:x="3576" fg:w="107"/><text x="3.3394%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (13 samples, 0.01%)</title><rect x="3.1706%" y="1109" width="0.0112%" height="15" fill="rgb(231,13,6)" fg:x="3670" fg:w="13"/><text x="3.4206%" y="1119.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="3.1706%" y="1093" width="0.0112%" height="15" fill="rgb(207,181,40)" fg:x="3670" fg:w="13"/><text x="3.4206%" y="1103.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (71 samples, 0.06%)</title><rect x="3.1819%" y="1125" width="0.0613%" height="15" fill="rgb(254,173,49)" fg:x="3683" fg:w="71"/><text x="3.4319%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (12 samples, 0.01%)</title><rect x="3.2432%" y="1125" width="0.0104%" height="15" fill="rgb(221,1,38)" fg:x="3754" fg:w="12"/><text x="3.4932%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (76 samples, 0.07%)</title><rect x="3.2631%" y="1125" width="0.0657%" height="15" fill="rgb(206,124,46)" fg:x="3777" fg:w="76"/><text x="3.5131%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="3.2829%" y="1109" width="0.0458%" height="15" fill="rgb(249,21,11)" fg:x="3800" fg:w="53"/><text x="3.5329%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (35 samples, 0.03%)</title><rect x="3.3287%" y="1125" width="0.0302%" height="15" fill="rgb(222,201,40)" fg:x="3853" fg:w="35"/><text x="3.5787%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt; (35 samples, 0.03%)</title><rect x="3.3287%" y="1109" width="0.0302%" height="15" fill="rgb(235,61,29)" fg:x="3853" fg:w="35"/><text x="3.5787%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="3.3590%" y="1125" width="0.0173%" height="15" fill="rgb(219,207,3)" fg:x="3888" fg:w="20"/><text x="3.6090%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="3.3762%" y="1125" width="0.0164%" height="15" fill="rgb(222,56,46)" fg:x="3908" fg:w="19"/><text x="3.6262%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="3.3927%" y="1125" width="0.0207%" height="15" fill="rgb(239,76,54)" fg:x="3927" fg:w="24"/><text x="3.6427%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (26 samples, 0.02%)</title><rect x="3.4134%" y="1125" width="0.0225%" height="15" fill="rgb(231,124,27)" fg:x="3951" fg:w="26"/><text x="3.6634%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (26 samples, 0.02%)</title><rect x="3.4134%" y="1109" width="0.0225%" height="15" fill="rgb(249,195,6)" fg:x="3951" fg:w="26"/><text x="3.6634%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (149 samples, 0.13%)</title><rect x="3.4540%" y="1125" width="0.1287%" height="15" fill="rgb(237,174,47)" fg:x="3998" fg:w="149"/><text x="3.7040%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (12 samples, 0.01%)</title><rect x="3.5844%" y="1077" width="0.0104%" height="15" fill="rgb(206,201,31)" fg:x="4149" fg:w="12"/><text x="3.8344%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="3.5844%" y="1061" width="0.0104%" height="15" fill="rgb(231,57,52)" fg:x="4149" fg:w="12"/><text x="3.8344%" y="1071.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (12 samples, 0.01%)</title><rect x="3.5844%" y="1045" width="0.0104%" height="15" fill="rgb(248,177,22)" fg:x="4149" fg:w="12"/><text x="3.8344%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (22 samples, 0.02%)</title><rect x="3.5844%" y="1109" width="0.0190%" height="15" fill="rgb(215,211,37)" fg:x="4149" fg:w="22"/><text x="3.8344%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (22 samples, 0.02%)</title><rect x="3.5844%" y="1093" width="0.0190%" height="15" fill="rgb(241,128,51)" fg:x="4149" fg:w="22"/><text x="3.8344%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (16 samples, 0.01%)</title><rect x="3.6035%" y="1109" width="0.0138%" height="15" fill="rgb(227,165,31)" fg:x="4171" fg:w="16"/><text x="3.8535%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (16 samples, 0.01%)</title><rect x="3.6035%" y="1093" width="0.0138%" height="15" fill="rgb(228,167,24)" fg:x="4171" fg:w="16"/><text x="3.8535%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="3.6035%" y="1077" width="0.0138%" height="15" fill="rgb(228,143,12)" fg:x="4171" fg:w="16"/><text x="3.8535%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="3.6173%" y="1093" width="0.0173%" height="15" fill="rgb(249,149,8)" fg:x="4187" fg:w="20"/><text x="3.8673%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (20 samples, 0.02%)</title><rect x="3.6173%" y="1077" width="0.0173%" height="15" fill="rgb(243,35,44)" fg:x="4187" fg:w="20"/><text x="3.8673%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (75 samples, 0.06%)</title><rect x="3.5827%" y="1125" width="0.0648%" height="15" fill="rgb(246,89,9)" fg:x="4147" fg:w="75"/><text x="3.8327%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (35 samples, 0.03%)</title><rect x="3.6173%" y="1109" width="0.0302%" height="15" fill="rgb(233,213,13)" fg:x="4187" fg:w="35"/><text x="3.8673%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (15 samples, 0.01%)</title><rect x="3.6346%" y="1093" width="0.0130%" height="15" fill="rgb(233,141,41)" fg:x="4207" fg:w="15"/><text x="3.8846%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (205 samples, 0.18%)</title><rect x="3.6475%" y="1125" width="0.1771%" height="15" fill="rgb(239,167,4)" fg:x="4222" fg:w="205"/><text x="3.8975%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="3.7996%" y="1109" width="0.0251%" height="15" fill="rgb(209,217,16)" fg:x="4398" fg:w="29"/><text x="4.0496%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="3.7996%" y="1093" width="0.0251%" height="15" fill="rgb(219,88,35)" fg:x="4398" fg:w="29"/><text x="4.0496%" y="1103.50"></text></g><g><title>event_listener::Event::listen (16 samples, 0.01%)</title><rect x="3.8246%" y="1125" width="0.0138%" height="15" fill="rgb(220,193,23)" fg:x="4427" fg:w="16"/><text x="4.0746%" y="1135.50"></text></g><g><title>event_listener::Event::notify (159 samples, 0.14%)</title><rect x="3.8384%" y="1125" width="0.1374%" height="15" fill="rgb(230,90,52)" fg:x="4443" fg:w="159"/><text x="4.0884%" y="1135.50"></text></g><g><title>event_listener::full_fence (59 samples, 0.05%)</title><rect x="3.9248%" y="1109" width="0.0510%" height="15" fill="rgb(252,106,19)" fg:x="4543" fg:w="59"/><text x="4.1748%" y="1119.50"></text></g><g><title>event_listener::List::notify (23 samples, 0.02%)</title><rect x="3.9758%" y="1125" width="0.0199%" height="15" fill="rgb(206,74,20)" fg:x="4602" fg:w="23"/><text x="4.2258%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (53 samples, 0.05%)</title><rect x="3.9957%" y="1125" width="0.0458%" height="15" fill="rgb(230,138,44)" fg:x="4625" fg:w="53"/><text x="4.2457%" y="1135.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (19 samples, 0.02%)</title><rect x="4.0415%" y="1125" width="0.0164%" height="15" fill="rgb(235,182,43)" fg:x="4678" fg:w="19"/><text x="4.2915%" y="1135.50"></text></g><g><title>parking::Inner::park (62 samples, 0.05%)</title><rect x="4.0579%" y="1125" width="0.0536%" height="15" fill="rgb(242,16,51)" fg:x="4697" fg:w="62"/><text x="4.3079%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (20 samples, 0.02%)</title><rect x="4.1114%" y="1125" width="0.0173%" height="15" fill="rgb(248,9,4)" fg:x="4759" fg:w="20"/><text x="4.3614%" y="1135.50"></text></g><g><title>rust_alloc (51 samples, 0.04%)</title><rect x="4.1425%" y="1125" width="0.0441%" height="15" fill="rgb(210,31,22)" fg:x="4795" fg:w="51"/><text x="4.3925%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (31 samples, 0.03%)</title><rect x="4.2117%" y="1125" width="0.0268%" height="15" fill="rgb(239,54,39)" fg:x="4875" fg:w="31"/><text x="4.4617%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (33 samples, 0.03%)</title><rect x="4.2393%" y="1125" width="0.0285%" height="15" fill="rgb(230,99,41)" fg:x="4907" fg:w="33"/><text x="4.4893%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29 samples, 0.03%)</title><rect x="4.2678%" y="1125" width="0.0251%" height="15" fill="rgb(253,106,12)" fg:x="4940" fg:w="29"/><text x="4.5178%" y="1135.50"></text></g><g><title>tremor_common::time::nanotime (34 samples, 0.03%)</title><rect x="4.2929%" y="1125" width="0.0294%" height="15" fill="rgb(213,46,41)" fg:x="4969" fg:w="34"/><text x="4.5429%" y="1135.50"></text></g><g><title>std::time::SystemTime::now (34 samples, 0.03%)</title><rect x="4.2929%" y="1109" width="0.0294%" height="15" fill="rgb(215,133,35)" fg:x="4969" fg:w="34"/><text x="4.5429%" y="1119.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (34 samples, 0.03%)</title><rect x="4.2929%" y="1093" width="0.0294%" height="15" fill="rgb(213,28,5)" fg:x="4969" fg:w="34"/><text x="4.5429%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::now (34 samples, 0.03%)</title><rect x="4.2929%" y="1077" width="0.0294%" height="15" fill="rgb(215,77,49)" fg:x="4969" fg:w="34"/><text x="4.5429%" y="1087.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (77 samples, 0.07%)</title><rect x="4.3222%" y="1125" width="0.0665%" height="15" fill="rgb(248,100,22)" fg:x="5003" fg:w="77"/><text x="4.5722%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (17 samples, 0.01%)</title><rect x="4.3888%" y="1125" width="0.0147%" height="15" fill="rgb(208,67,9)" fg:x="5080" fg:w="17"/><text x="4.6388%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (36 samples, 0.03%)</title><rect x="4.4035%" y="1125" width="0.0311%" height="15" fill="rgb(219,133,21)" fg:x="5097" fg:w="36"/><text x="4.6535%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (14 samples, 0.01%)</title><rect x="4.4225%" y="1109" width="0.0121%" height="15" fill="rgb(246,46,29)" fg:x="5119" fg:w="14"/><text x="4.6725%" y="1119.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (14 samples, 0.01%)</title><rect x="4.4225%" y="1093" width="0.0121%" height="15" fill="rgb(246,185,52)" fg:x="5119" fg:w="14"/><text x="4.6725%" y="1103.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="4.4225%" y="1077" width="0.0121%" height="15" fill="rgb(252,136,11)" fg:x="5119" fg:w="14"/><text x="4.6725%" y="1087.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="4.4225%" y="1061" width="0.0121%" height="15" fill="rgb(219,138,53)" fg:x="5119" fg:w="14"/><text x="4.6725%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="4.4225%" y="1045" width="0.0121%" height="15" fill="rgb(211,51,23)" fg:x="5119" fg:w="14"/><text x="4.6725%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="4.4898%" y="1109" width="0.0242%" height="15" fill="rgb(247,221,28)" fg:x="5197" fg:w="28"/><text x="4.7398%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (28 samples, 0.02%)</title><rect x="4.4898%" y="1093" width="0.0242%" height="15" fill="rgb(251,222,45)" fg:x="5197" fg:w="28"/><text x="4.7398%" y="1103.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (114 samples, 0.10%)</title><rect x="4.4346%" y="1125" width="0.0985%" height="15" fill="rgb(217,162,53)" fg:x="5133" fg:w="114"/><text x="4.6846%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (19 samples, 0.02%)</title><rect x="4.5330%" y="1125" width="0.0164%" height="15" fill="rgb(229,93,14)" fg:x="5247" fg:w="19"/><text x="4.7830%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.01%)</title><rect x="4.6333%" y="981" width="0.0147%" height="15" fill="rgb(209,67,49)" fg:x="5363" fg:w="17"/><text x="4.8833%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.01%)</title><rect x="4.6333%" y="965" width="0.0147%" height="15" fill="rgb(213,87,29)" fg:x="5363" fg:w="17"/><text x="4.8833%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.01%)</title><rect x="4.6333%" y="949" width="0.0147%" height="15" fill="rgb(205,151,52)" fg:x="5363" fg:w="17"/><text x="4.8833%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.01%)</title><rect x="4.6333%" y="933" width="0.0147%" height="15" fill="rgb(253,215,39)" fg:x="5363" fg:w="17"/><text x="4.8833%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.01%)</title><rect x="4.6333%" y="917" width="0.0147%" height="15" fill="rgb(221,220,41)" fg:x="5363" fg:w="17"/><text x="4.8833%" y="927.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.01%)</title><rect x="4.6333%" y="901" width="0.0147%" height="15" fill="rgb(218,133,21)" fg:x="5363" fg:w="17"/><text x="4.8833%" y="911.50"></text></g><g><title>__rg_alloc (17 samples, 0.01%)</title><rect x="4.6333%" y="885" width="0.0147%" height="15" fill="rgb(221,193,43)" fg:x="5363" fg:w="17"/><text x="4.8833%" y="895.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.01%)</title><rect x="4.6333%" y="869" width="0.0147%" height="15" fill="rgb(240,128,52)" fg:x="5363" fg:w="17"/><text x="4.8833%" y="879.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (28 samples, 0.02%)</title><rect x="4.6333%" y="1109" width="0.0242%" height="15" fill="rgb(253,114,12)" fg:x="5363" fg:w="28"/><text x="4.8833%" y="1119.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (28 samples, 0.02%)</title><rect x="4.6333%" y="1093" width="0.0242%" height="15" fill="rgb(215,223,47)" fg:x="5363" fg:w="28"/><text x="4.8833%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (28 samples, 0.02%)</title><rect x="4.6333%" y="1077" width="0.0242%" height="15" fill="rgb(248,225,23)" fg:x="5363" fg:w="28"/><text x="4.8833%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (28 samples, 0.02%)</title><rect x="4.6333%" y="1061" width="0.0242%" height="15" fill="rgb(250,108,0)" fg:x="5363" fg:w="28"/><text x="4.8833%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 0.02%)</title><rect x="4.6333%" y="1045" width="0.0242%" height="15" fill="rgb(228,208,7)" fg:x="5363" fg:w="28"/><text x="4.8833%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.02%)</title><rect x="4.6333%" y="1029" width="0.0242%" height="15" fill="rgb(244,45,10)" fg:x="5363" fg:w="28"/><text x="4.8833%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.02%)</title><rect x="4.6333%" y="1013" width="0.0242%" height="15" fill="rgb(207,125,25)" fg:x="5363" fg:w="28"/><text x="4.8833%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.02%)</title><rect x="4.6333%" y="997" width="0.0242%" height="15" fill="rgb(210,195,18)" fg:x="5363" fg:w="28"/><text x="4.8833%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (18 samples, 0.02%)</title><rect x="4.6782%" y="1093" width="0.0156%" height="15" fill="rgb(249,80,12)" fg:x="5415" fg:w="18"/><text x="4.9282%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="4.6782%" y="1077" width="0.0156%" height="15" fill="rgb(221,65,9)" fg:x="5415" fg:w="18"/><text x="4.9282%" y="1087.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="4.6782%" y="1061" width="0.0156%" height="15" fill="rgb(235,49,36)" fg:x="5415" fg:w="18"/><text x="4.9282%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (168 samples, 0.15%)</title><rect x="4.5598%" y="1125" width="0.1451%" height="15" fill="rgb(225,32,20)" fg:x="5278" fg:w="168"/><text x="4.8098%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (31 samples, 0.03%)</title><rect x="4.6782%" y="1109" width="0.0268%" height="15" fill="rgb(215,141,46)" fg:x="5415" fg:w="31"/><text x="4.9282%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (13 samples, 0.01%)</title><rect x="4.6937%" y="1093" width="0.0112%" height="15" fill="rgb(250,160,47)" fg:x="5433" fg:w="13"/><text x="4.9437%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (13 samples, 0.01%)</title><rect x="4.6937%" y="1077" width="0.0112%" height="15" fill="rgb(216,222,40)" fg:x="5433" fg:w="13"/><text x="4.9437%" y="1087.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (26 samples, 0.02%)</title><rect x="4.7050%" y="1125" width="0.0225%" height="15" fill="rgb(234,217,39)" fg:x="5446" fg:w="26"/><text x="4.9550%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="4.7758%" y="1109" width="0.0112%" height="15" fill="rgb(207,178,40)" fg:x="5528" fg:w="13"/><text x="5.0258%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.02%)</title><rect x="4.7974%" y="1077" width="0.0156%" height="15" fill="rgb(221,136,13)" fg:x="5553" fg:w="18"/><text x="5.0474%" y="1087.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="4.7974%" y="1061" width="0.0156%" height="15" fill="rgb(249,199,10)" fg:x="5553" fg:w="18"/><text x="5.0474%" y="1071.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (116 samples, 0.10%)</title><rect x="4.7292%" y="1125" width="0.1002%" height="15" fill="rgb(249,222,13)" fg:x="5474" fg:w="116"/><text x="4.9792%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="4.7870%" y="1109" width="0.0423%" height="15" fill="rgb(244,185,38)" fg:x="5541" fg:w="49"/><text x="5.0370%" y="1119.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (49 samples, 0.04%)</title><rect x="4.7870%" y="1093" width="0.0423%" height="15" fill="rgb(236,202,9)" fg:x="5541" fg:w="49"/><text x="5.0370%" y="1103.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (13 samples, 0.01%)</title><rect x="4.8181%" y="1077" width="0.0112%" height="15" fill="rgb(250,229,37)" fg:x="5577" fg:w="13"/><text x="5.0681%" y="1087.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (13 samples, 0.01%)</title><rect x="4.8181%" y="1061" width="0.0112%" height="15" fill="rgb(206,174,23)" fg:x="5577" fg:w="13"/><text x="5.0681%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="4.8181%" y="1045" width="0.0112%" height="15" fill="rgb(211,33,43)" fg:x="5577" fg:w="13"/><text x="5.0681%" y="1055.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="4.8181%" y="1029" width="0.0112%" height="15" fill="rgb(245,58,50)" fg:x="5577" fg:w="13"/><text x="5.0681%" y="1039.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (12 samples, 0.01%)</title><rect x="4.8570%" y="1109" width="0.0104%" height="15" fill="rgb(244,68,36)" fg:x="5622" fg:w="12"/><text x="5.1070%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="4.8570%" y="1093" width="0.0104%" height="15" fill="rgb(232,229,15)" fg:x="5622" fg:w="12"/><text x="5.1070%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="4.8570%" y="1077" width="0.0104%" height="15" fill="rgb(254,30,23)" fg:x="5622" fg:w="12"/><text x="5.1070%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="4.8570%" y="1061" width="0.0104%" height="15" fill="rgb(235,160,14)" fg:x="5622" fg:w="12"/><text x="5.1070%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="4.8570%" y="1045" width="0.0104%" height="15" fill="rgb(212,155,44)" fg:x="5622" fg:w="12"/><text x="5.1070%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="4.8570%" y="1029" width="0.0104%" height="15" fill="rgb(226,2,50)" fg:x="5622" fg:w="12"/><text x="5.1070%" y="1039.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="4.8570%" y="1013" width="0.0104%" height="15" fill="rgb(234,177,6)" fg:x="5622" fg:w="12"/><text x="5.1070%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="4.8570%" y="997" width="0.0104%" height="15" fill="rgb(217,24,9)" fg:x="5622" fg:w="12"/><text x="5.1070%" y="1007.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (75 samples, 0.06%)</title><rect x="4.8380%" y="1125" width="0.0648%" height="15" fill="rgb(220,13,46)" fg:x="5600" fg:w="75"/><text x="5.0880%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (36 samples, 0.03%)</title><rect x="4.8717%" y="1109" width="0.0311%" height="15" fill="rgb(239,221,27)" fg:x="5639" fg:w="36"/><text x="5.1217%" y="1119.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (29 samples, 0.03%)</title><rect x="4.9702%" y="1109" width="0.0251%" height="15" fill="rgb(222,198,25)" fg:x="5753" fg:w="29"/><text x="5.2202%" y="1119.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (29 samples, 0.03%)</title><rect x="4.9702%" y="1093" width="0.0251%" height="15" fill="rgb(211,99,13)" fg:x="5753" fg:w="29"/><text x="5.2202%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="5.0013%" y="1077" width="0.0104%" height="15" fill="rgb(232,111,31)" fg:x="5789" fg:w="12"/><text x="5.2513%" y="1087.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (12 samples, 0.01%)</title><rect x="5.0013%" y="1061" width="0.0104%" height="15" fill="rgb(245,82,37)" fg:x="5789" fg:w="12"/><text x="5.2513%" y="1071.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (12 samples, 0.01%)</title><rect x="5.0013%" y="1045" width="0.0104%" height="15" fill="rgb(227,149,46)" fg:x="5789" fg:w="12"/><text x="5.2513%" y="1055.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (133 samples, 0.11%)</title><rect x="4.9028%" y="1125" width="0.1149%" height="15" fill="rgb(218,36,50)" fg:x="5675" fg:w="133"/><text x="5.1528%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.02%)</title><rect x="5.0013%" y="1109" width="0.0164%" height="15" fill="rgb(226,80,48)" fg:x="5789" fg:w="19"/><text x="5.2513%" y="1119.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="5.0013%" y="1093" width="0.0164%" height="15" fill="rgb(238,224,15)" fg:x="5789" fg:w="19"/><text x="5.2513%" y="1103.50"></text></g><g><title>[anon] (5,292 samples, 4.57%)</title><rect x="0.4674%" y="1141" width="4.5719%" height="15" fill="rgb(241,136,10)" fg:x="541" fg:w="5292"/><text x="0.7174%" y="1151.50">[anon]</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (22 samples, 0.02%)</title><rect x="5.0203%" y="1125" width="0.0190%" height="15" fill="rgb(208,32,45)" fg:x="5811" fg:w="22"/><text x="5.2703%" y="1135.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (14 samples, 0.01%)</title><rect x="5.0272%" y="1109" width="0.0121%" height="15" fill="rgb(207,135,9)" fg:x="5819" fg:w="14"/><text x="5.2772%" y="1119.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="5.0393%" y="1141" width="0.0181%" height="15" fill="rgb(206,86,44)" fg:x="5833" fg:w="21"/><text x="5.2893%" y="1151.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (26 samples, 0.02%)</title><rect x="5.0678%" y="1125" width="0.0225%" height="15" fill="rgb(245,177,15)" fg:x="5866" fg:w="26"/><text x="5.3178%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (26 samples, 0.02%)</title><rect x="5.0678%" y="1109" width="0.0225%" height="15" fill="rgb(206,64,50)" fg:x="5866" fg:w="26"/><text x="5.3178%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="5.0678%" y="1093" width="0.0225%" height="15" fill="rgb(234,36,40)" fg:x="5866" fg:w="26"/><text x="5.3178%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (26 samples, 0.02%)</title><rect x="5.0678%" y="1077" width="0.0225%" height="15" fill="rgb(213,64,8)" fg:x="5866" fg:w="26"/><text x="5.3178%" y="1087.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (13 samples, 0.01%)</title><rect x="5.0929%" y="1125" width="0.0112%" height="15" fill="rgb(210,75,36)" fg:x="5895" fg:w="13"/><text x="5.3429%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (15 samples, 0.01%)</title><rect x="5.1067%" y="1125" width="0.0130%" height="15" fill="rgb(229,88,21)" fg:x="5911" fg:w="15"/><text x="5.3567%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (15 samples, 0.01%)</title><rect x="5.1205%" y="1125" width="0.0130%" height="15" fill="rgb(252,204,47)" fg:x="5927" fg:w="15"/><text x="5.3705%" y="1135.50"></text></g><g><title>[tremor-pdk] (101 samples, 0.09%)</title><rect x="5.0575%" y="1141" width="0.0873%" height="15" fill="rgb(208,77,27)" fg:x="5854" fg:w="101"/><text x="5.3075%" y="1151.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="5.2052%" y="1109" width="0.0104%" height="15" fill="rgb(221,76,26)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="1119.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (12 samples, 0.01%)</title><rect x="5.2052%" y="1093" width="0.0104%" height="15" fill="rgb(225,139,18)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="1103.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (12 samples, 0.01%)</title><rect x="5.2052%" y="1077" width="0.0104%" height="15" fill="rgb(230,137,11)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="1087.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (12 samples, 0.01%)</title><rect x="5.2052%" y="1061" width="0.0104%" height="15" fill="rgb(212,28,1)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="1071.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="5.2052%" y="1045" width="0.0104%" height="15" fill="rgb(248,164,17)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="5.2052%" y="1029" width="0.0104%" height="15" fill="rgb(222,171,42)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="5.2052%" y="1013" width="0.0104%" height="15" fill="rgb(243,84,45)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="5.2052%" y="997" width="0.0104%" height="15" fill="rgb(252,49,23)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="5.2052%" y="981" width="0.0104%" height="15" fill="rgb(215,19,7)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="991.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="5.2052%" y="965" width="0.0104%" height="15" fill="rgb(238,81,41)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="975.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="5.2052%" y="949" width="0.0104%" height="15" fill="rgb(210,199,37)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="5.2052%" y="933" width="0.0104%" height="15" fill="rgb(244,192,49)" fg:x="6025" fg:w="12"/><text x="5.4552%" y="943.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (90 samples, 0.08%)</title><rect x="5.1447%" y="1125" width="0.0778%" height="15" fill="rgb(226,211,11)" fg:x="5955" fg:w="90"/><text x="5.3947%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="5.2259%" y="1125" width="0.0328%" height="15" fill="rgb(236,162,54)" fg:x="6049" fg:w="38"/><text x="5.4759%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.07%)</title><rect x="5.2587%" y="1125" width="0.0691%" height="15" fill="rgb(220,229,9)" fg:x="6087" fg:w="80"/><text x="5.5087%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="5.3279%" y="1125" width="0.0112%" height="15" fill="rgb(250,87,22)" fg:x="6167" fg:w="13"/><text x="5.5779%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (78 samples, 0.07%)</title><rect x="5.3391%" y="1125" width="0.0674%" height="15" fill="rgb(239,43,17)" fg:x="6180" fg:w="78"/><text x="5.5891%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.01%)</title><rect x="5.3961%" y="1109" width="0.0104%" height="15" fill="rgb(231,177,25)" fg:x="6246" fg:w="12"/><text x="5.6461%" y="1119.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (122 samples, 0.11%)</title><rect x="5.4091%" y="1125" width="0.1054%" height="15" fill="rgb(219,179,1)" fg:x="6261" fg:w="122"/><text x="5.6591%" y="1135.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (28 samples, 0.02%)</title><rect x="5.4903%" y="1109" width="0.0242%" height="15" fill="rgb(238,219,53)" fg:x="6355" fg:w="28"/><text x="5.7403%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="5.7417%" y="293" width="0.0138%" height="15" fill="rgb(232,167,36)" fg:x="6646" fg:w="16"/><text x="5.9917%" y="303.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="5.7771%" y="117" width="0.0121%" height="15" fill="rgb(244,19,51)" fg:x="6687" fg:w="14"/><text x="6.0271%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (20 samples, 0.02%)</title><rect x="5.7987%" y="69" width="0.0173%" height="15" fill="rgb(224,6,22)" fg:x="6712" fg:w="20"/><text x="6.0487%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (20 samples, 0.02%)</title><rect x="5.7987%" y="53" width="0.0173%" height="15" fill="rgb(224,145,5)" fg:x="6712" fg:w="20"/><text x="6.0487%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (60 samples, 0.05%)</title><rect x="5.7676%" y="261" width="0.0518%" height="15" fill="rgb(234,130,49)" fg:x="6676" fg:w="60"/><text x="6.0176%" y="271.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.05%)</title><rect x="5.7676%" y="245" width="0.0518%" height="15" fill="rgb(254,6,2)" fg:x="6676" fg:w="60"/><text x="6.0176%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (60 samples, 0.05%)</title><rect x="5.7676%" y="229" width="0.0518%" height="15" fill="rgb(208,96,46)" fg:x="6676" fg:w="60"/><text x="6.0176%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.05%)</title><rect x="5.7676%" y="213" width="0.0518%" height="15" fill="rgb(239,3,39)" fg:x="6676" fg:w="60"/><text x="6.0176%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (60 samples, 0.05%)</title><rect x="5.7676%" y="197" width="0.0518%" height="15" fill="rgb(233,210,1)" fg:x="6676" fg:w="60"/><text x="6.0176%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.05%)</title><rect x="5.7702%" y="181" width="0.0492%" height="15" fill="rgb(244,137,37)" fg:x="6679" fg:w="57"/><text x="6.0202%" y="191.50"></text></g><g><title>__rg_dealloc (57 samples, 0.05%)</title><rect x="5.7702%" y="165" width="0.0492%" height="15" fill="rgb(240,136,2)" fg:x="6679" fg:w="57"/><text x="6.0202%" y="175.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (57 samples, 0.05%)</title><rect x="5.7702%" y="149" width="0.0492%" height="15" fill="rgb(239,18,37)" fg:x="6679" fg:w="57"/><text x="6.0202%" y="159.50"></text></g><g><title>rust_dealloc (49 samples, 0.04%)</title><rect x="5.7771%" y="133" width="0.0423%" height="15" fill="rgb(218,185,22)" fg:x="6687" fg:w="49"/><text x="6.0271%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (35 samples, 0.03%)</title><rect x="5.7892%" y="117" width="0.0302%" height="15" fill="rgb(225,218,4)" fg:x="6701" fg:w="35"/><text x="6.0392%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (24 samples, 0.02%)</title><rect x="5.7987%" y="101" width="0.0207%" height="15" fill="rgb(230,182,32)" fg:x="6712" fg:w="24"/><text x="6.0487%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (24 samples, 0.02%)</title><rect x="5.7987%" y="85" width="0.0207%" height="15" fill="rgb(242,56,43)" fg:x="6712" fg:w="24"/><text x="6.0487%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (106 samples, 0.09%)</title><rect x="5.7296%" y="341" width="0.0916%" height="15" fill="rgb(233,99,24)" fg:x="6632" fg:w="106"/><text x="5.9796%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 0.09%)</title><rect x="5.7348%" y="325" width="0.0864%" height="15" fill="rgb(234,209,42)" fg:x="6638" fg:w="100"/><text x="5.9848%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (92 samples, 0.08%)</title><rect x="5.7417%" y="309" width="0.0795%" height="15" fill="rgb(227,7,12)" fg:x="6646" fg:w="92"/><text x="5.9917%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (68 samples, 0.06%)</title><rect x="5.7624%" y="293" width="0.0587%" height="15" fill="rgb(245,203,43)" fg:x="6670" fg:w="68"/><text x="6.0124%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.06%)</title><rect x="5.7624%" y="277" width="0.0587%" height="15" fill="rgb(238,205,33)" fg:x="6670" fg:w="68"/><text x="6.0124%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (123 samples, 0.11%)</title><rect x="5.7201%" y="357" width="0.1063%" height="15" fill="rgb(231,56,7)" fg:x="6621" fg:w="123"/><text x="5.9701%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (82 samples, 0.07%)</title><rect x="5.8263%" y="357" width="0.0708%" height="15" fill="rgb(244,186,29)" fg:x="6744" fg:w="82"/><text x="6.0763%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (57 samples, 0.05%)</title><rect x="5.8479%" y="341" width="0.0492%" height="15" fill="rgb(234,111,31)" fg:x="6769" fg:w="57"/><text x="6.0979%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (57 samples, 0.05%)</title><rect x="5.8479%" y="325" width="0.0492%" height="15" fill="rgb(241,149,10)" fg:x="6769" fg:w="57"/><text x="6.0979%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.02%)</title><rect x="5.9032%" y="309" width="0.0216%" height="15" fill="rgb(249,206,44)" fg:x="6833" fg:w="25"/><text x="6.1532%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (21 samples, 0.02%)</title><rect x="5.9067%" y="293" width="0.0181%" height="15" fill="rgb(251,153,30)" fg:x="6837" fg:w="21"/><text x="6.1567%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (15 samples, 0.01%)</title><rect x="5.9119%" y="277" width="0.0130%" height="15" fill="rgb(239,152,38)" fg:x="6843" fg:w="15"/><text x="6.1619%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (15 samples, 0.01%)</title><rect x="5.9119%" y="261" width="0.0130%" height="15" fill="rgb(249,139,47)" fg:x="6843" fg:w="15"/><text x="6.1619%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (37 samples, 0.03%)</title><rect x="5.8972%" y="357" width="0.0320%" height="15" fill="rgb(244,64,35)" fg:x="6826" fg:w="37"/><text x="6.1472%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.03%)</title><rect x="5.8972%" y="341" width="0.0320%" height="15" fill="rgb(216,46,15)" fg:x="6826" fg:w="37"/><text x="6.1472%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.03%)</title><rect x="5.9032%" y="325" width="0.0259%" height="15" fill="rgb(250,74,19)" fg:x="6833" fg:w="30"/><text x="6.1532%" y="335.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (358 samples, 0.31%)</title><rect x="5.6207%" y="853" width="0.3093%" height="15" fill="rgb(249,42,33)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (358 samples, 0.31%)</title><rect x="5.6207%" y="837" width="0.3093%" height="15" fill="rgb(242,149,17)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="847.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (358 samples, 0.31%)</title><rect x="5.6207%" y="821" width="0.3093%" height="15" fill="rgb(244,29,21)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="831.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (358 samples, 0.31%)</title><rect x="5.6207%" y="805" width="0.3093%" height="15" fill="rgb(220,130,37)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="815.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (358 samples, 0.31%)</title><rect x="5.6207%" y="789" width="0.3093%" height="15" fill="rgb(211,67,2)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="799.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (358 samples, 0.31%)</title><rect x="5.6207%" y="773" width="0.3093%" height="15" fill="rgb(235,68,52)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (358 samples, 0.31%)</title><rect x="5.6207%" y="757" width="0.3093%" height="15" fill="rgb(246,142,3)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (358 samples, 0.31%)</title><rect x="5.6207%" y="741" width="0.3093%" height="15" fill="rgb(241,25,7)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="751.50"></text></g><g><title>std::panic::catch_unwind (358 samples, 0.31%)</title><rect x="5.6207%" y="725" width="0.3093%" height="15" fill="rgb(242,119,39)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="735.50"></text></g><g><title>std::panicking::try (358 samples, 0.31%)</title><rect x="5.6207%" y="709" width="0.3093%" height="15" fill="rgb(241,98,45)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="719.50"></text></g><g><title>std::panicking::try::do_call (358 samples, 0.31%)</title><rect x="5.6207%" y="693" width="0.3093%" height="15" fill="rgb(254,28,30)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (358 samples, 0.31%)</title><rect x="5.6207%" y="677" width="0.3093%" height="15" fill="rgb(241,142,54)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (358 samples, 0.31%)</title><rect x="5.6207%" y="661" width="0.3093%" height="15" fill="rgb(222,85,15)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="671.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (358 samples, 0.31%)</title><rect x="5.6207%" y="645" width="0.3093%" height="15" fill="rgb(210,85,47)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="655.50"></text></g><g><title>async_ffi::FfiContext::with_context (358 samples, 0.31%)</title><rect x="5.6207%" y="629" width="0.3093%" height="15" fill="rgb(224,206,25)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="639.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (358 samples, 0.31%)</title><rect x="5.6207%" y="613" width="0.3093%" height="15" fill="rgb(243,201,19)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (358 samples, 0.31%)</title><rect x="5.6207%" y="597" width="0.3093%" height="15" fill="rgb(236,59,4)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (358 samples, 0.31%)</title><rect x="5.6207%" y="581" width="0.3093%" height="15" fill="rgb(254,179,45)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (358 samples, 0.31%)</title><rect x="5.6207%" y="565" width="0.3093%" height="15" fill="rgb(226,14,10)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (358 samples, 0.31%)</title><rect x="5.6207%" y="549" width="0.3093%" height="15" fill="rgb(244,27,41)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="559.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (358 samples, 0.31%)</title><rect x="5.6207%" y="533" width="0.3093%" height="15" fill="rgb(235,35,32)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (358 samples, 0.31%)</title><rect x="5.6207%" y="517" width="0.3093%" height="15" fill="rgb(218,68,31)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (358 samples, 0.31%)</title><rect x="5.6207%" y="501" width="0.3093%" height="15" fill="rgb(207,120,37)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (358 samples, 0.31%)</title><rect x="5.6207%" y="485" width="0.3093%" height="15" fill="rgb(227,98,0)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (358 samples, 0.31%)</title><rect x="5.6207%" y="469" width="0.3093%" height="15" fill="rgb(207,7,3)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (358 samples, 0.31%)</title><rect x="5.6207%" y="453" width="0.3093%" height="15" fill="rgb(206,98,19)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="463.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (358 samples, 0.31%)</title><rect x="5.6207%" y="437" width="0.3093%" height="15" fill="rgb(217,5,26)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (358 samples, 0.31%)</title><rect x="5.6207%" y="421" width="0.3093%" height="15" fill="rgb(235,190,38)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (358 samples, 0.31%)</title><rect x="5.6207%" y="405" width="0.3093%" height="15" fill="rgb(247,86,24)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="415.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (358 samples, 0.31%)</title><rect x="5.6207%" y="389" width="0.3093%" height="15" fill="rgb(205,101,16)" fg:x="6506" fg:w="358"/><text x="5.8707%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (243 samples, 0.21%)</title><rect x="5.7201%" y="373" width="0.2099%" height="15" fill="rgb(246,168,33)" fg:x="6621" fg:w="243"/><text x="5.9701%" y="383.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (32 samples, 0.03%)</title><rect x="5.9948%" y="725" width="0.0276%" height="15" fill="rgb(231,114,1)" fg:x="6939" fg:w="32"/><text x="6.2448%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (497 samples, 0.43%)</title><rect x="5.6207%" y="1109" width="0.4294%" height="15" fill="rgb(207,184,53)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (497 samples, 0.43%)</title><rect x="5.6207%" y="1093" width="0.4294%" height="15" fill="rgb(224,95,51)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (497 samples, 0.43%)</title><rect x="5.6207%" y="1077" width="0.4294%" height="15" fill="rgb(212,188,45)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (497 samples, 0.43%)</title><rect x="5.6207%" y="1061" width="0.4294%" height="15" fill="rgb(223,154,38)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="1071.50"></text></g><g><title>async_task::runnable::Runnable::run (497 samples, 0.43%)</title><rect x="5.6207%" y="1045" width="0.4294%" height="15" fill="rgb(251,22,52)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (497 samples, 0.43%)</title><rect x="5.6207%" y="1029" width="0.4294%" height="15" fill="rgb(229,209,22)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (497 samples, 0.43%)</title><rect x="5.6207%" y="1013" width="0.4294%" height="15" fill="rgb(234,138,34)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (497 samples, 0.43%)</title><rect x="5.6207%" y="997" width="0.4294%" height="15" fill="rgb(212,95,11)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="1007.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (497 samples, 0.43%)</title><rect x="5.6207%" y="981" width="0.4294%" height="15" fill="rgb(240,179,47)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="991.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (497 samples, 0.43%)</title><rect x="5.6207%" y="965" width="0.4294%" height="15" fill="rgb(240,163,11)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (497 samples, 0.43%)</title><rect x="5.6207%" y="949" width="0.4294%" height="15" fill="rgb(236,37,12)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (497 samples, 0.43%)</title><rect x="5.6207%" y="933" width="0.4294%" height="15" fill="rgb(232,164,16)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (497 samples, 0.43%)</title><rect x="5.6207%" y="917" width="0.4294%" height="15" fill="rgb(244,205,15)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (497 samples, 0.43%)</title><rect x="5.6207%" y="901" width="0.4294%" height="15" fill="rgb(223,117,47)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="911.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (497 samples, 0.43%)</title><rect x="5.6207%" y="885" width="0.4294%" height="15" fill="rgb(244,107,35)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (497 samples, 0.43%)</title><rect x="5.6207%" y="869" width="0.4294%" height="15" fill="rgb(205,140,8)" fg:x="6506" fg:w="497"/><text x="5.8707%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (139 samples, 0.12%)</title><rect x="5.9300%" y="853" width="0.1201%" height="15" fill="rgb(228,84,46)" fg:x="6864" fg:w="139"/><text x="6.1800%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (139 samples, 0.12%)</title><rect x="5.9300%" y="837" width="0.1201%" height="15" fill="rgb(254,188,9)" fg:x="6864" fg:w="139"/><text x="6.1800%" y="847.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (139 samples, 0.12%)</title><rect x="5.9300%" y="821" width="0.1201%" height="15" fill="rgb(206,112,54)" fg:x="6864" fg:w="139"/><text x="6.1800%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (139 samples, 0.12%)</title><rect x="5.9300%" y="805" width="0.1201%" height="15" fill="rgb(216,84,49)" fg:x="6864" fg:w="139"/><text x="6.1800%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (113 samples, 0.10%)</title><rect x="5.9525%" y="789" width="0.0976%" height="15" fill="rgb(214,194,35)" fg:x="6890" fg:w="113"/><text x="6.2025%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (99 samples, 0.09%)</title><rect x="5.9646%" y="773" width="0.0855%" height="15" fill="rgb(249,28,3)" fg:x="6904" fg:w="99"/><text x="6.2146%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (99 samples, 0.09%)</title><rect x="5.9646%" y="757" width="0.0855%" height="15" fill="rgb(222,56,52)" fg:x="6904" fg:w="99"/><text x="6.2146%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (99 samples, 0.09%)</title><rect x="5.9646%" y="741" width="0.0855%" height="15" fill="rgb(245,217,50)" fg:x="6904" fg:w="99"/><text x="6.2146%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (32 samples, 0.03%)</title><rect x="6.0225%" y="725" width="0.0276%" height="15" fill="rgb(213,201,24)" fg:x="6971" fg:w="32"/><text x="6.2725%" y="735.50"></text></g><g><title>event_listener::Inner::lock (34 samples, 0.03%)</title><rect x="6.0631%" y="869" width="0.0294%" height="15" fill="rgb(248,116,28)" fg:x="7018" fg:w="34"/><text x="6.3131%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (34 samples, 0.03%)</title><rect x="6.0631%" y="853" width="0.0294%" height="15" fill="rgb(219,72,43)" fg:x="7018" fg:w="34"/><text x="6.3131%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.03%)</title><rect x="6.0639%" y="837" width="0.0285%" height="15" fill="rgb(209,138,14)" fg:x="7019" fg:w="33"/><text x="6.3139%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="6.0665%" y="821" width="0.0259%" height="15" fill="rgb(222,18,33)" fg:x="7022" fg:w="30"/><text x="6.3165%" y="831.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="6.0665%" y="805" width="0.0259%" height="15" fill="rgb(213,199,7)" fg:x="7022" fg:w="30"/><text x="6.3165%" y="815.50"></text></g><g><title>__GI___lll_lock_wait (12 samples, 0.01%)</title><rect x="6.0821%" y="789" width="0.0104%" height="15" fill="rgb(250,110,10)" fg:x="7040" fg:w="12"/><text x="6.3321%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="6.0821%" y="773" width="0.0104%" height="15" fill="rgb(248,123,6)" fg:x="7040" fg:w="12"/><text x="6.3321%" y="783.50"></text></g><g><title>do_syscall_64 (12 samples, 0.01%)</title><rect x="6.0821%" y="757" width="0.0104%" height="15" fill="rgb(206,91,31)" fg:x="7040" fg:w="12"/><text x="6.3321%" y="767.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (51 samples, 0.04%)</title><rect x="6.0501%" y="885" width="0.0441%" height="15" fill="rgb(211,154,13)" fg:x="7003" fg:w="51"/><text x="6.3001%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned_erms (234 samples, 0.20%)</title><rect x="6.1935%" y="837" width="0.2022%" height="15" fill="rgb(225,148,7)" fg:x="7169" fg:w="234"/><text x="6.4435%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (272 samples, 0.23%)</title><rect x="6.4026%" y="837" width="0.2350%" height="15" fill="rgb(220,160,43)" fg:x="7411" fg:w="272"/><text x="6.6526%" y="847.50"></text></g><g><title>core::ptr::read (272 samples, 0.23%)</title><rect x="6.4026%" y="821" width="0.2350%" height="15" fill="rgb(213,52,39)" fg:x="7411" fg:w="272"/><text x="6.6526%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (272 samples, 0.23%)</title><rect x="6.4026%" y="805" width="0.2350%" height="15" fill="rgb(243,137,7)" fg:x="7411" fg:w="272"/><text x="6.6526%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (294 samples, 0.25%)</title><rect x="6.6376%" y="837" width="0.2540%" height="15" fill="rgb(230,79,13)" fg:x="7683" fg:w="294"/><text x="6.8876%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (294 samples, 0.25%)</title><rect x="6.6376%" y="821" width="0.2540%" height="15" fill="rgb(247,105,23)" fg:x="7683" fg:w="294"/><text x="6.8876%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (404 samples, 0.35%)</title><rect x="6.8916%" y="837" width="0.3490%" height="15" fill="rgb(223,179,41)" fg:x="7977" fg:w="404"/><text x="7.1416%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (403 samples, 0.35%)</title><rect x="6.8924%" y="821" width="0.3482%" height="15" fill="rgb(218,9,34)" fg:x="7978" fg:w="403"/><text x="7.1424%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,328 samples, 1.15%)</title><rect x="6.0942%" y="869" width="1.1473%" height="15" fill="rgb(222,106,8)" fg:x="7054" fg:w="1328"/><text x="6.3442%" y="879.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,328 samples, 1.15%)</title><rect x="6.0942%" y="853" width="1.1473%" height="15" fill="rgb(211,220,0)" fg:x="7054" fg:w="1328"/><text x="6.3442%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (21 samples, 0.02%)</title><rect x="7.2553%" y="805" width="0.0181%" height="15" fill="rgb(229,52,16)" fg:x="8398" fg:w="21"/><text x="7.5053%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="7.2562%" y="789" width="0.0173%" height="15" fill="rgb(212,155,18)" fg:x="8399" fg:w="20"/><text x="7.5062%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="7.2562%" y="773" width="0.0173%" height="15" fill="rgb(242,21,14)" fg:x="8399" fg:w="20"/><text x="7.5062%" y="783.50"></text></g><g><title>__x64_sys_futex (23 samples, 0.02%)</title><rect x="7.3400%" y="629" width="0.0199%" height="15" fill="rgb(222,19,48)" fg:x="8496" fg:w="23"/><text x="7.5900%" y="639.50"></text></g><g><title>do_futex (19 samples, 0.02%)</title><rect x="7.3434%" y="613" width="0.0164%" height="15" fill="rgb(232,45,27)" fg:x="8500" fg:w="19"/><text x="7.5934%" y="623.50"></text></g><g><title>futex_wake (18 samples, 0.02%)</title><rect x="7.3443%" y="597" width="0.0156%" height="15" fill="rgb(249,103,42)" fg:x="8501" fg:w="18"/><text x="7.5943%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (50 samples, 0.04%)</title><rect x="7.3598%" y="629" width="0.0432%" height="15" fill="rgb(246,81,33)" fg:x="8519" fg:w="50"/><text x="7.6098%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (83 samples, 0.07%)</title><rect x="7.3374%" y="661" width="0.0717%" height="15" fill="rgb(252,33,42)" fg:x="8493" fg:w="83"/><text x="7.5874%" y="671.50"></text></g><g><title>do_syscall_64 (81 samples, 0.07%)</title><rect x="7.3391%" y="645" width="0.0700%" height="15" fill="rgb(209,212,41)" fg:x="8495" fg:w="81"/><text x="7.5891%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (146 samples, 0.13%)</title><rect x="7.2847%" y="693" width="0.1261%" height="15" fill="rgb(207,154,6)" fg:x="8432" fg:w="146"/><text x="7.5347%" y="703.50"></text></g><g><title>__GI___lll_lock_wake (93 samples, 0.08%)</title><rect x="7.3305%" y="677" width="0.0803%" height="15" fill="rgb(223,64,47)" fg:x="8485" fg:w="93"/><text x="7.5805%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (148 samples, 0.13%)</title><rect x="7.2847%" y="757" width="0.1279%" height="15" fill="rgb(211,161,38)" fg:x="8432" fg:w="148"/><text x="7.5347%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.13%)</title><rect x="7.2847%" y="741" width="0.1279%" height="15" fill="rgb(219,138,40)" fg:x="8432" fg:w="148"/><text x="7.5347%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (148 samples, 0.13%)</title><rect x="7.2847%" y="725" width="0.1279%" height="15" fill="rgb(241,228,46)" fg:x="8432" fg:w="148"/><text x="7.5347%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (148 samples, 0.13%)</title><rect x="7.2847%" y="709" width="0.1279%" height="15" fill="rgb(223,209,38)" fg:x="8432" fg:w="148"/><text x="7.5347%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (42 samples, 0.04%)</title><rect x="7.4125%" y="757" width="0.0363%" height="15" fill="rgb(236,164,45)" fg:x="8580" fg:w="42"/><text x="7.6625%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.04%)</title><rect x="7.4125%" y="741" width="0.0363%" height="15" fill="rgb(231,15,5)" fg:x="8580" fg:w="42"/><text x="7.6625%" y="751.50"></text></g><g><title>__fdget_pos (16 samples, 0.01%)</title><rect x="7.4739%" y="597" width="0.0138%" height="15" fill="rgb(252,35,15)" fg:x="8651" fg:w="16"/><text x="7.7239%" y="607.50"></text></g><g><title>__fget_light (15 samples, 0.01%)</title><rect x="7.4747%" y="581" width="0.0130%" height="15" fill="rgb(248,181,18)" fg:x="8652" fg:w="15"/><text x="7.7247%" y="591.50"></text></g><g><title>enqueue_task_fair (21 samples, 0.02%)</title><rect x="7.5430%" y="437" width="0.0181%" height="15" fill="rgb(233,39,42)" fg:x="8731" fg:w="21"/><text x="7.7930%" y="447.50"></text></g><g><title>ttwu_do_activate (41 samples, 0.04%)</title><rect x="7.5430%" y="469" width="0.0354%" height="15" fill="rgb(238,110,33)" fg:x="8731" fg:w="41"/><text x="7.7930%" y="479.50"></text></g><g><title>enqueue_task (41 samples, 0.04%)</title><rect x="7.5430%" y="453" width="0.0354%" height="15" fill="rgb(233,195,10)" fg:x="8731" fg:w="41"/><text x="7.7930%" y="463.50"></text></g><g><title>psi_task_change (17 samples, 0.01%)</title><rect x="7.5637%" y="437" width="0.0147%" height="15" fill="rgb(254,105,3)" fg:x="8755" fg:w="17"/><text x="7.8137%" y="447.50"></text></g><g><title>__wake_up_common (85 samples, 0.07%)</title><rect x="7.5171%" y="517" width="0.0734%" height="15" fill="rgb(221,225,9)" fg:x="8701" fg:w="85"/><text x="7.7671%" y="527.50"></text></g><g><title>autoremove_wake_function (80 samples, 0.07%)</title><rect x="7.5214%" y="501" width="0.0691%" height="15" fill="rgb(224,227,45)" fg:x="8706" fg:w="80"/><text x="7.7714%" y="511.50"></text></g><g><title>try_to_wake_up (76 samples, 0.07%)</title><rect x="7.5248%" y="485" width="0.0657%" height="15" fill="rgb(229,198,43)" fg:x="8710" fg:w="76"/><text x="7.7748%" y="495.50"></text></g><g><title>__wake_up_common_lock (90 samples, 0.08%)</title><rect x="7.5171%" y="533" width="0.0778%" height="15" fill="rgb(206,209,35)" fg:x="8701" fg:w="90"/><text x="7.7671%" y="543.50"></text></g><g><title>__wake_up_common (120 samples, 0.10%)</title><rect x="7.5015%" y="565" width="0.1037%" height="15" fill="rgb(245,195,53)" fg:x="8683" fg:w="120"/><text x="7.7515%" y="575.50"></text></g><g><title>ep_poll_callback (119 samples, 0.10%)</title><rect x="7.5024%" y="549" width="0.1028%" height="15" fill="rgb(240,92,26)" fg:x="8684" fg:w="119"/><text x="7.7524%" y="559.50"></text></g><g><title>eventfd_write (136 samples, 0.12%)</title><rect x="7.4972%" y="581" width="0.1175%" height="15" fill="rgb(207,40,23)" fg:x="8678" fg:w="136"/><text x="7.7472%" y="591.50"></text></g><g><title>ksys_write (170 samples, 0.15%)</title><rect x="7.4704%" y="613" width="0.1469%" height="15" fill="rgb(223,111,35)" fg:x="8647" fg:w="170"/><text x="7.7204%" y="623.50"></text></g><g><title>vfs_write (145 samples, 0.13%)</title><rect x="7.4920%" y="597" width="0.1253%" height="15" fill="rgb(229,147,28)" fg:x="8672" fg:w="145"/><text x="7.7420%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (35 samples, 0.03%)</title><rect x="7.6181%" y="613" width="0.0302%" height="15" fill="rgb(211,29,28)" fg:x="8818" fg:w="35"/><text x="7.8681%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (218 samples, 0.19%)</title><rect x="7.4635%" y="645" width="0.1883%" height="15" fill="rgb(228,72,33)" fg:x="8639" fg:w="218"/><text x="7.7135%" y="655.50"></text></g><g><title>do_syscall_64 (217 samples, 0.19%)</title><rect x="7.4644%" y="629" width="0.1875%" height="15" fill="rgb(205,214,31)" fg:x="8640" fg:w="217"/><text x="7.7144%" y="639.50"></text></g><g><title>__GI___write (228 samples, 0.20%)</title><rect x="7.4557%" y="661" width="0.1970%" height="15" fill="rgb(224,111,15)" fg:x="8630" fg:w="228"/><text x="7.7057%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::notify (234 samples, 0.20%)</title><rect x="7.4514%" y="709" width="0.2022%" height="15" fill="rgb(253,21,26)" fg:x="8625" fg:w="234"/><text x="7.7014%" y="719.50"></text></g><g><title>polling::Poller::notify (234 samples, 0.20%)</title><rect x="7.4514%" y="693" width="0.2022%" height="15" fill="rgb(245,139,43)" fg:x="8625" fg:w="234"/><text x="7.7014%" y="703.50"></text></g><g><title>polling::epoll::Poller::notify (229 samples, 0.20%)</title><rect x="7.4557%" y="677" width="0.1978%" height="15" fill="rgb(252,170,7)" fg:x="8630" fg:w="229"/><text x="7.7057%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (29 samples, 0.03%)</title><rect x="7.6803%" y="677" width="0.0251%" height="15" fill="rgb(231,118,14)" fg:x="8890" fg:w="29"/><text x="7.9303%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.03%)</title><rect x="7.6803%" y="661" width="0.0251%" height="15" fill="rgb(238,83,0)" fg:x="8890" fg:w="29"/><text x="7.9303%" y="671.50"></text></g><g><title>_raw_spin_lock (14 samples, 0.01%)</title><rect x="7.7866%" y="533" width="0.0121%" height="15" fill="rgb(221,39,39)" fg:x="9013" fg:w="14"/><text x="8.0366%" y="543.50"></text></g><g><title>futex_wake_mark (34 samples, 0.03%)</title><rect x="7.7996%" y="533" width="0.0294%" height="15" fill="rgb(222,119,46)" fg:x="9028" fg:w="34"/><text x="8.0496%" y="543.50"></text></g><g><title>select_task_rq_fair (31 samples, 0.03%)</title><rect x="7.8652%" y="501" width="0.0268%" height="15" fill="rgb(222,165,49)" fg:x="9104" fg:w="31"/><text x="8.1152%" y="511.50"></text></g><g><title>enqueue_task_fair (80 samples, 0.07%)</title><rect x="7.8963%" y="469" width="0.0691%" height="15" fill="rgb(219,113,52)" fg:x="9140" fg:w="80"/><text x="8.1463%" y="479.50"></text></g><g><title>enqueue_entity (48 samples, 0.04%)</title><rect x="7.9240%" y="453" width="0.0415%" height="15" fill="rgb(214,7,15)" fg:x="9172" fg:w="48"/><text x="8.1740%" y="463.50"></text></g><g><title>update_load_avg (12 samples, 0.01%)</title><rect x="7.9551%" y="437" width="0.0104%" height="15" fill="rgb(235,32,4)" fg:x="9208" fg:w="12"/><text x="8.2051%" y="447.50"></text></g><g><title>psi_group_change (49 samples, 0.04%)</title><rect x="8.0000%" y="453" width="0.0423%" height="15" fill="rgb(238,90,54)" fg:x="9260" fg:w="49"/><text x="8.2500%" y="463.50"></text></g><g><title>ttwu_do_activate (178 samples, 0.15%)</title><rect x="7.8920%" y="501" width="0.1538%" height="15" fill="rgb(213,208,19)" fg:x="9135" fg:w="178"/><text x="8.1420%" y="511.50"></text></g><g><title>enqueue_task (175 samples, 0.15%)</title><rect x="7.8946%" y="485" width="0.1512%" height="15" fill="rgb(233,156,4)" fg:x="9138" fg:w="175"/><text x="8.1446%" y="495.50"></text></g><g><title>psi_task_change (82 samples, 0.07%)</title><rect x="7.9749%" y="469" width="0.0708%" height="15" fill="rgb(207,194,5)" fg:x="9231" fg:w="82"/><text x="8.2249%" y="479.50"></text></g><g><title>ttwu_do_wakeup (16 samples, 0.01%)</title><rect x="8.0458%" y="501" width="0.0138%" height="15" fill="rgb(206,111,30)" fg:x="9313" fg:w="16"/><text x="8.2958%" y="511.50"></text></g><g><title>check_preempt_curr (14 samples, 0.01%)</title><rect x="8.0475%" y="485" width="0.0121%" height="15" fill="rgb(243,70,54)" fg:x="9315" fg:w="14"/><text x="8.2975%" y="495.50"></text></g><g><title>ttwu_queue_wakelist (29 samples, 0.03%)</title><rect x="8.0596%" y="501" width="0.0251%" height="15" fill="rgb(242,28,8)" fg:x="9329" fg:w="29"/><text x="8.3096%" y="511.50"></text></g><g><title>__x64_sys_futex (399 samples, 0.34%)</title><rect x="7.7495%" y="581" width="0.3447%" height="15" fill="rgb(219,106,18)" fg:x="8970" fg:w="399"/><text x="7.9995%" y="591.50"></text></g><g><title>do_futex (387 samples, 0.33%)</title><rect x="7.7598%" y="565" width="0.3343%" height="15" fill="rgb(244,222,10)" fg:x="8982" fg:w="387"/><text x="8.0098%" y="575.50"></text></g><g><title>futex_wake (387 samples, 0.33%)</title><rect x="7.7598%" y="549" width="0.3343%" height="15" fill="rgb(236,179,52)" fg:x="8982" fg:w="387"/><text x="8.0098%" y="559.50"></text></g><g><title>wake_up_q (298 samples, 0.26%)</title><rect x="7.8367%" y="533" width="0.2575%" height="15" fill="rgb(213,23,39)" fg:x="9071" fg:w="298"/><text x="8.0867%" y="543.50"></text></g><g><title>try_to_wake_up (292 samples, 0.25%)</title><rect x="7.8419%" y="517" width="0.2523%" height="15" fill="rgb(238,48,10)" fg:x="9077" fg:w="292"/><text x="8.0919%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (76 samples, 0.07%)</title><rect x="8.1002%" y="581" width="0.0657%" height="15" fill="rgb(251,196,23)" fg:x="9376" fg:w="76"/><text x="8.3502%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (500 samples, 0.43%)</title><rect x="7.7443%" y="613" width="0.4320%" height="15" fill="rgb(250,152,24)" fg:x="8964" fg:w="500"/><text x="7.9943%" y="623.50"></text></g><g><title>do_syscall_64 (499 samples, 0.43%)</title><rect x="7.7451%" y="597" width="0.4311%" height="15" fill="rgb(209,150,17)" fg:x="8965" fg:w="499"/><text x="7.9951%" y="607.50"></text></g><g><title>syscall_trace_enter.constprop.0 (12 samples, 0.01%)</title><rect x="8.1659%" y="581" width="0.0104%" height="15" fill="rgb(234,202,34)" fg:x="9452" fg:w="12"/><text x="8.4159%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (550 samples, 0.48%)</title><rect x="7.7054%" y="677" width="0.4752%" height="15" fill="rgb(253,148,53)" fg:x="8919" fg:w="550"/><text x="7.9554%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (550 samples, 0.48%)</title><rect x="7.7054%" y="661" width="0.4752%" height="15" fill="rgb(218,129,16)" fg:x="8919" fg:w="550"/><text x="7.9554%" y="671.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (550 samples, 0.48%)</title><rect x="7.7054%" y="645" width="0.4752%" height="15" fill="rgb(216,85,19)" fg:x="8919" fg:w="550"/><text x="7.9554%" y="655.50"></text></g><g><title>__GI___pthread_cond_signal (550 samples, 0.48%)</title><rect x="7.7054%" y="629" width="0.4752%" height="15" fill="rgb(235,228,7)" fg:x="8919" fg:w="550"/><text x="7.9554%" y="639.50"></text></g><g><title>parking::Inner::unpark (610 samples, 0.53%)</title><rect x="7.6726%" y="693" width="0.5270%" height="15" fill="rgb(245,175,0)" fg:x="8881" fg:w="610"/><text x="7.9226%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="8.1806%" y="677" width="0.0190%" height="15" fill="rgb(208,168,36)" fg:x="9469" fg:w="22"/><text x="8.4306%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="8.1806%" y="661" width="0.0190%" height="15" fill="rgb(246,171,24)" fg:x="9469" fg:w="22"/><text x="8.4306%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (21 samples, 0.02%)</title><rect x="8.1814%" y="645" width="0.0181%" height="15" fill="rgb(215,142,24)" fg:x="9470" fg:w="21"/><text x="8.4314%" y="655.50"></text></g><g><title>___pthread_mutex_lock (21 samples, 0.02%)</title><rect x="8.1814%" y="629" width="0.0181%" height="15" fill="rgb(250,187,7)" fg:x="9470" fg:w="21"/><text x="8.4314%" y="639.50"></text></g><g><title>parking::Unparker::unpark (629 samples, 0.54%)</title><rect x="7.6570%" y="709" width="0.5434%" height="15" fill="rgb(228,66,33)" fg:x="8863" fg:w="629"/><text x="7.9070%" y="719.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (876 samples, 0.76%)</title><rect x="7.4488%" y="725" width="0.7568%" height="15" fill="rgb(234,215,21)" fg:x="8622" fg:w="876"/><text x="7.6988%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="8.2056%" y="725" width="0.0251%" height="15" fill="rgb(222,191,20)" fg:x="9498" fg:w="29"/><text x="8.4556%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="8.2056%" y="709" width="0.0251%" height="15" fill="rgb(245,79,54)" fg:x="9498" fg:w="29"/><text x="8.4556%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.02%)</title><rect x="8.2065%" y="693" width="0.0242%" height="15" fill="rgb(240,10,37)" fg:x="9499" fg:w="28"/><text x="8.4565%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.02%)</title><rect x="8.2065%" y="677" width="0.0242%" height="15" fill="rgb(214,192,32)" fg:x="9499" fg:w="28"/><text x="8.4565%" y="687.50"></text></g><g><title>core::task::wake::Waker::wake (906 samples, 0.78%)</title><rect x="7.4488%" y="757" width="0.7827%" height="15" fill="rgb(209,36,54)" fg:x="8622" fg:w="906"/><text x="7.6988%" y="767.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (906 samples, 0.78%)</title><rect x="7.4488%" y="741" width="0.7827%" height="15" fill="rgb(220,10,11)" fg:x="8622" fg:w="906"/><text x="7.6988%" y="751.50"></text></g><g><title>futex_get_value_locked (13 samples, 0.01%)</title><rect x="8.3197%" y="581" width="0.0112%" height="15" fill="rgb(221,106,17)" fg:x="9630" fg:w="13"/><text x="8.5697%" y="591.50"></text></g><g><title>__get_user_nocheck_4 (13 samples, 0.01%)</title><rect x="8.3197%" y="565" width="0.0112%" height="15" fill="rgb(251,142,44)" fg:x="9630" fg:w="13"/><text x="8.5697%" y="575.50"></text></g><g><title>futex_q_lock (12 samples, 0.01%)</title><rect x="8.3309%" y="581" width="0.0104%" height="15" fill="rgb(238,13,15)" fg:x="9643" fg:w="12"/><text x="8.5809%" y="591.50"></text></g><g><title>__x64_sys_futex (50 samples, 0.04%)</title><rect x="8.3032%" y="645" width="0.0432%" height="15" fill="rgb(208,107,27)" fg:x="9611" fg:w="50"/><text x="8.5532%" y="655.50"></text></g><g><title>do_futex (46 samples, 0.04%)</title><rect x="8.3067%" y="629" width="0.0397%" height="15" fill="rgb(205,136,37)" fg:x="9615" fg:w="46"/><text x="8.5567%" y="639.50"></text></g><g><title>futex_wait (45 samples, 0.04%)</title><rect x="8.3076%" y="613" width="0.0389%" height="15" fill="rgb(250,205,27)" fg:x="9616" fg:w="45"/><text x="8.5576%" y="623.50"></text></g><g><title>futex_wait_setup (32 samples, 0.03%)</title><rect x="8.3188%" y="597" width="0.0276%" height="15" fill="rgb(210,80,43)" fg:x="9629" fg:w="32"/><text x="8.5688%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (45 samples, 0.04%)</title><rect x="8.3482%" y="645" width="0.0389%" height="15" fill="rgb(247,160,36)" fg:x="9663" fg:w="45"/><text x="8.5982%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (107 samples, 0.09%)</title><rect x="8.3024%" y="677" width="0.0924%" height="15" fill="rgb(234,13,49)" fg:x="9610" fg:w="107"/><text x="8.5524%" y="687.50"></text></g><g><title>do_syscall_64 (107 samples, 0.09%)</title><rect x="8.3024%" y="661" width="0.0924%" height="15" fill="rgb(234,122,0)" fg:x="9610" fg:w="107"/><text x="8.5524%" y="671.50"></text></g><g><title>async_executor::State::notify (1,298 samples, 1.12%)</title><rect x="7.2760%" y="773" width="1.1214%" height="15" fill="rgb(207,146,38)" fg:x="8422" fg:w="1298"/><text x="7.5260%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (192 samples, 0.17%)</title><rect x="8.2315%" y="757" width="0.1659%" height="15" fill="rgb(207,177,25)" fg:x="9528" fg:w="192"/><text x="8.4815%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (190 samples, 0.16%)</title><rect x="8.2333%" y="741" width="0.1641%" height="15" fill="rgb(211,178,42)" fg:x="9530" fg:w="190"/><text x="8.4833%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (182 samples, 0.16%)</title><rect x="8.2402%" y="725" width="0.1572%" height="15" fill="rgb(230,69,54)" fg:x="9538" fg:w="182"/><text x="8.4902%" y="735.50"></text></g><g><title>___pthread_mutex_lock (182 samples, 0.16%)</title><rect x="8.2402%" y="709" width="0.1572%" height="15" fill="rgb(214,135,41)" fg:x="9538" fg:w="182"/><text x="8.4902%" y="719.50"></text></g><g><title>__GI___lll_lock_wait (127 samples, 0.11%)</title><rect x="8.2877%" y="693" width="0.1097%" height="15" fill="rgb(237,67,25)" fg:x="9593" fg:w="127"/><text x="8.5377%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (55 samples, 0.05%)</title><rect x="8.4121%" y="741" width="0.0475%" height="15" fill="rgb(222,189,50)" fg:x="9737" fg:w="55"/><text x="8.6621%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (55 samples, 0.05%)</title><rect x="8.4121%" y="725" width="0.0475%" height="15" fill="rgb(245,148,34)" fg:x="9737" fg:w="55"/><text x="8.6621%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (20 samples, 0.02%)</title><rect x="8.4596%" y="741" width="0.0173%" height="15" fill="rgb(222,29,6)" fg:x="9792" fg:w="20"/><text x="8.7096%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_or (20 samples, 0.02%)</title><rect x="8.4596%" y="725" width="0.0173%" height="15" fill="rgb(221,189,43)" fg:x="9792" fg:w="20"/><text x="8.7096%" y="735.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1,394 samples, 1.20%)</title><rect x="7.2760%" y="789" width="1.2043%" height="15" fill="rgb(207,36,27)" fg:x="8422" fg:w="1394"/><text x="7.5260%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (96 samples, 0.08%)</title><rect x="8.3974%" y="773" width="0.0829%" height="15" fill="rgb(217,90,24)" fg:x="9720" fg:w="96"/><text x="8.6474%" y="783.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (88 samples, 0.08%)</title><rect x="8.4043%" y="757" width="0.0760%" height="15" fill="rgb(224,66,35)" fg:x="9728" fg:w="88"/><text x="8.6543%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (90 samples, 0.08%)</title><rect x="8.4803%" y="789" width="0.0778%" height="15" fill="rgb(221,13,50)" fg:x="9816" fg:w="90"/><text x="8.7303%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (90 samples, 0.08%)</title><rect x="8.4803%" y="773" width="0.0778%" height="15" fill="rgb(236,68,49)" fg:x="9816" fg:w="90"/><text x="8.7303%" y="783.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,858 samples, 2.47%)</title><rect x="6.0942%" y="885" width="2.4691%" height="15" fill="rgb(229,146,28)" fg:x="7054" fg:w="2858"/><text x="6.3442%" y="895.50">as..</text></g><g><title>event_listener::Event::notify (1,530 samples, 1.32%)</title><rect x="7.2415%" y="869" width="1.3218%" height="15" fill="rgb(225,31,38)" fg:x="8382" fg:w="1530"/><text x="7.4915%" y="879.50"></text></g><g><title>event_listener::List::notify (1,523 samples, 1.32%)</title><rect x="7.2475%" y="853" width="1.3158%" height="15" fill="rgb(250,208,3)" fg:x="8389" fg:w="1523"/><text x="7.4975%" y="863.50"></text></g><g><title>core::task::wake::Waker::wake (1,514 samples, 1.31%)</title><rect x="7.2553%" y="837" width="1.3080%" height="15" fill="rgb(246,54,23)" fg:x="8398" fg:w="1514"/><text x="7.5053%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (1,514 samples, 1.31%)</title><rect x="7.2553%" y="821" width="1.3080%" height="15" fill="rgb(243,76,11)" fg:x="8398" fg:w="1514"/><text x="7.5053%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1,493 samples, 1.29%)</title><rect x="7.2734%" y="805" width="1.2898%" height="15" fill="rgb(245,21,50)" fg:x="8419" fg:w="1493"/><text x="7.5234%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,928 samples, 2.53%)</title><rect x="6.0501%" y="965" width="2.5296%" height="15" fill="rgb(228,9,43)" fg:x="7003" fg:w="2928"/><text x="6.3001%" y="975.50">&lt;a..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,928 samples, 2.53%)</title><rect x="6.0501%" y="949" width="2.5296%" height="15" fill="rgb(208,100,47)" fg:x="7003" fg:w="2928"/><text x="6.3001%" y="959.50">&lt;t..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,928 samples, 2.53%)</title><rect x="6.0501%" y="933" width="2.5296%" height="15" fill="rgb(232,26,8)" fg:x="7003" fg:w="2928"/><text x="6.3001%" y="943.50">&lt;a..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,928 samples, 2.53%)</title><rect x="6.0501%" y="917" width="2.5296%" height="15" fill="rgb(216,166,38)" fg:x="7003" fg:w="2928"/><text x="6.3001%" y="927.50">&lt;a..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,928 samples, 2.53%)</title><rect x="6.0501%" y="901" width="2.5296%" height="15" fill="rgb(251,202,51)" fg:x="7003" fg:w="2928"/><text x="6.3001%" y="911.50">&lt;a..</text></g><g><title>event_listener::Event::listen (19 samples, 0.02%)</title><rect x="8.5633%" y="885" width="0.0164%" height="15" fill="rgb(254,216,34)" fg:x="9912" fg:w="19"/><text x="8.8133%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.13%)</title><rect x="8.7006%" y="485" width="0.1313%" height="15" fill="rgb(251,32,27)" fg:x="10071" fg:w="152"/><text x="8.9506%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (152 samples, 0.13%)</title><rect x="8.7006%" y="469" width="0.1313%" height="15" fill="rgb(208,127,28)" fg:x="10071" fg:w="152"/><text x="8.9506%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (143 samples, 0.12%)</title><rect x="8.7084%" y="453" width="0.1235%" height="15" fill="rgb(224,137,22)" fg:x="10080" fg:w="143"/><text x="8.9584%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (135 samples, 0.12%)</title><rect x="8.7153%" y="437" width="0.1166%" height="15" fill="rgb(254,70,32)" fg:x="10088" fg:w="135"/><text x="8.9653%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (135 samples, 0.12%)</title><rect x="8.7153%" y="421" width="0.1166%" height="15" fill="rgb(229,75,37)" fg:x="10088" fg:w="135"/><text x="8.9653%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (162 samples, 0.14%)</title><rect x="8.6955%" y="597" width="0.1400%" height="15" fill="rgb(252,64,23)" fg:x="10065" fg:w="162"/><text x="8.9455%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (162 samples, 0.14%)</title><rect x="8.6955%" y="581" width="0.1400%" height="15" fill="rgb(232,162,48)" fg:x="10065" fg:w="162"/><text x="8.9455%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (162 samples, 0.14%)</title><rect x="8.6955%" y="565" width="0.1400%" height="15" fill="rgb(246,160,12)" fg:x="10065" fg:w="162"/><text x="8.9455%" y="575.50"></text></g><g><title>alloc::alloc::alloc (160 samples, 0.14%)</title><rect x="8.6972%" y="549" width="0.1382%" height="15" fill="rgb(247,166,0)" fg:x="10067" fg:w="160"/><text x="8.9472%" y="559.50"></text></g><g><title>__rg_alloc (160 samples, 0.14%)</title><rect x="8.6972%" y="533" width="0.1382%" height="15" fill="rgb(249,219,21)" fg:x="10067" fg:w="160"/><text x="8.9472%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (160 samples, 0.14%)</title><rect x="8.6972%" y="517" width="0.1382%" height="15" fill="rgb(205,209,3)" fg:x="10067" fg:w="160"/><text x="8.9472%" y="527.50"></text></g><g><title>rust_alloc (159 samples, 0.14%)</title><rect x="8.6981%" y="501" width="0.1374%" height="15" fill="rgb(243,44,1)" fg:x="10068" fg:w="159"/><text x="8.9481%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (35 samples, 0.03%)</title><rect x="8.9114%" y="533" width="0.0302%" height="15" fill="rgb(206,159,16)" fg:x="10315" fg:w="35"/><text x="9.1614%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::ge (35 samples, 0.03%)</title><rect x="8.9114%" y="517" width="0.0302%" height="15" fill="rgb(244,77,30)" fg:x="10315" fg:w="35"/><text x="9.1614%" y="527.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (35 samples, 0.03%)</title><rect x="8.9114%" y="501" width="0.0302%" height="15" fill="rgb(218,69,12)" fg:x="10315" fg:w="35"/><text x="9.1614%" y="511.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (35 samples, 0.03%)</title><rect x="8.9114%" y="485" width="0.0302%" height="15" fill="rgb(212,87,7)" fg:x="10315" fg:w="35"/><text x="9.1614%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (35 samples, 0.03%)</title><rect x="8.9114%" y="469" width="0.0302%" height="15" fill="rgb(245,114,25)" fg:x="10315" fg:w="35"/><text x="9.1614%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (15 samples, 0.01%)</title><rect x="8.9287%" y="453" width="0.0130%" height="15" fill="rgb(210,61,42)" fg:x="10335" fg:w="15"/><text x="9.1787%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (96 samples, 0.08%)</title><rect x="8.8700%" y="565" width="0.0829%" height="15" fill="rgb(211,52,33)" fg:x="10267" fg:w="96"/><text x="9.1200%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (96 samples, 0.08%)</title><rect x="8.8700%" y="549" width="0.0829%" height="15" fill="rgb(234,58,33)" fg:x="10267" fg:w="96"/><text x="9.1200%" y="559.50"></text></g><g><title>core::time::Duration::new (13 samples, 0.01%)</title><rect x="8.9417%" y="533" width="0.0112%" height="15" fill="rgb(220,115,36)" fg:x="10350" fg:w="13"/><text x="9.1917%" y="543.50"></text></g><g><title>std::time::SystemTime::duration_since (106 samples, 0.09%)</title><rect x="8.8700%" y="581" width="0.0916%" height="15" fill="rgb(243,153,54)" fg:x="10267" fg:w="106"/><text x="9.1200%" y="591.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,800 samples, 3.28%)</title><rect x="6.0501%" y="981" width="3.2829%" height="15" fill="rgb(251,47,18)" fg:x="7003" fg:w="3800"/><text x="6.3001%" y="991.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (872 samples, 0.75%)</title><rect x="8.5797%" y="965" width="0.7533%" height="15" fill="rgb(242,102,42)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="975.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (872 samples, 0.75%)</title><rect x="8.5797%" y="949" width="0.7533%" height="15" fill="rgb(234,31,38)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (872 samples, 0.75%)</title><rect x="8.5797%" y="933" width="0.7533%" height="15" fill="rgb(221,117,51)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (872 samples, 0.75%)</title><rect x="8.5797%" y="917" width="0.7533%" height="15" fill="rgb(212,20,18)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (872 samples, 0.75%)</title><rect x="8.5797%" y="901" width="0.7533%" height="15" fill="rgb(245,133,36)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (872 samples, 0.75%)</title><rect x="8.5797%" y="885" width="0.7533%" height="15" fill="rgb(212,6,19)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (872 samples, 0.75%)</title><rect x="8.5797%" y="869" width="0.7533%" height="15" fill="rgb(218,1,36)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="879.50"></text></g><g><title>std::panic::catch_unwind (872 samples, 0.75%)</title><rect x="8.5797%" y="853" width="0.7533%" height="15" fill="rgb(246,84,54)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="863.50"></text></g><g><title>std::panicking::try (872 samples, 0.75%)</title><rect x="8.5797%" y="837" width="0.7533%" height="15" fill="rgb(242,110,6)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="847.50"></text></g><g><title>std::panicking::try::do_call (872 samples, 0.75%)</title><rect x="8.5797%" y="821" width="0.7533%" height="15" fill="rgb(214,47,5)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (872 samples, 0.75%)</title><rect x="8.5797%" y="805" width="0.7533%" height="15" fill="rgb(218,159,25)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (872 samples, 0.75%)</title><rect x="8.5797%" y="789" width="0.7533%" height="15" fill="rgb(215,211,28)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (872 samples, 0.75%)</title><rect x="8.5797%" y="773" width="0.7533%" height="15" fill="rgb(238,59,32)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (872 samples, 0.75%)</title><rect x="8.5797%" y="757" width="0.7533%" height="15" fill="rgb(226,82,3)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (872 samples, 0.75%)</title><rect x="8.5797%" y="741" width="0.7533%" height="15" fill="rgb(240,164,32)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (872 samples, 0.75%)</title><rect x="8.5797%" y="725" width="0.7533%" height="15" fill="rgb(232,46,7)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (872 samples, 0.75%)</title><rect x="8.5797%" y="709" width="0.7533%" height="15" fill="rgb(229,129,53)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="719.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (872 samples, 0.75%)</title><rect x="8.5797%" y="693" width="0.7533%" height="15" fill="rgb(234,188,29)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (872 samples, 0.75%)</title><rect x="8.5797%" y="677" width="0.7533%" height="15" fill="rgb(246,141,4)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="687.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (872 samples, 0.75%)</title><rect x="8.5797%" y="661" width="0.7533%" height="15" fill="rgb(229,23,39)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (872 samples, 0.75%)</title><rect x="8.5797%" y="645" width="0.7533%" height="15" fill="rgb(206,12,3)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (872 samples, 0.75%)</title><rect x="8.5797%" y="629" width="0.7533%" height="15" fill="rgb(252,226,20)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="639.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (872 samples, 0.75%)</title><rect x="8.5797%" y="613" width="0.7533%" height="15" fill="rgb(216,123,35)" fg:x="9931" fg:w="872"/><text x="8.8297%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (555 samples, 0.48%)</title><rect x="8.8536%" y="597" width="0.4795%" height="15" fill="rgb(212,68,40)" fg:x="10248" fg:w="555"/><text x="9.1036%" y="607.50"></text></g><g><title>std::time::SystemTime::now (430 samples, 0.37%)</title><rect x="8.9616%" y="581" width="0.3715%" height="15" fill="rgb(254,125,32)" fg:x="10373" fg:w="430"/><text x="9.2116%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (430 samples, 0.37%)</title><rect x="8.9616%" y="565" width="0.3715%" height="15" fill="rgb(253,97,22)" fg:x="10373" fg:w="430"/><text x="9.2116%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (430 samples, 0.37%)</title><rect x="8.9616%" y="549" width="0.3715%" height="15" fill="rgb(241,101,14)" fg:x="10373" fg:w="430"/><text x="9.2116%" y="559.50"></text></g><g><title>__clock_gettime_2 (350 samples, 0.30%)</title><rect x="9.0307%" y="533" width="0.3024%" height="15" fill="rgb(238,103,29)" fg:x="10453" fg:w="350"/><text x="9.2807%" y="543.50"></text></g><g><title>__vdso_clock_gettime (328 samples, 0.28%)</title><rect x="9.0497%" y="517" width="0.2834%" height="15" fill="rgb(233,195,47)" fg:x="10475" fg:w="328"/><text x="9.2997%" y="527.50"></text></g><g><title>[[vdso]] (219 samples, 0.19%)</title><rect x="9.1438%" y="501" width="0.1892%" height="15" fill="rgb(246,218,30)" fg:x="10584" fg:w="219"/><text x="9.3938%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="9.3330%" y="229" width="0.0112%" height="15" fill="rgb(219,145,47)" fg:x="10803" fg:w="13"/><text x="9.5830%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (17 samples, 0.01%)</title><rect x="9.3330%" y="245" width="0.0147%" height="15" fill="rgb(243,12,26)" fg:x="10803" fg:w="17"/><text x="9.5830%" y="255.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (83 samples, 0.07%)</title><rect x="9.3330%" y="581" width="0.0717%" height="15" fill="rgb(214,87,16)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (83 samples, 0.07%)</title><rect x="9.3330%" y="565" width="0.0717%" height="15" fill="rgb(208,99,42)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (83 samples, 0.07%)</title><rect x="9.3330%" y="549" width="0.0717%" height="15" fill="rgb(253,99,2)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (83 samples, 0.07%)</title><rect x="9.3330%" y="533" width="0.0717%" height="15" fill="rgb(220,168,23)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (83 samples, 0.07%)</title><rect x="9.3330%" y="517" width="0.0717%" height="15" fill="rgb(242,38,24)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (83 samples, 0.07%)</title><rect x="9.3330%" y="501" width="0.0717%" height="15" fill="rgb(225,182,9)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (83 samples, 0.07%)</title><rect x="9.3330%" y="485" width="0.0717%" height="15" fill="rgb(243,178,37)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (83 samples, 0.07%)</title><rect x="9.3330%" y="469" width="0.0717%" height="15" fill="rgb(232,139,19)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (83 samples, 0.07%)</title><rect x="9.3330%" y="453" width="0.0717%" height="15" fill="rgb(225,201,24)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (83 samples, 0.07%)</title><rect x="9.3330%" y="437" width="0.0717%" height="15" fill="rgb(221,47,46)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.07%)</title><rect x="9.3330%" y="421" width="0.0717%" height="15" fill="rgb(249,23,13)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.07%)</title><rect x="9.3330%" y="405" width="0.0717%" height="15" fill="rgb(219,9,5)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="415.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.07%)</title><rect x="9.3330%" y="389" width="0.0717%" height="15" fill="rgb(254,171,16)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="399.50"></text></g><g><title>__rg_alloc (83 samples, 0.07%)</title><rect x="9.3330%" y="373" width="0.0717%" height="15" fill="rgb(230,171,20)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (83 samples, 0.07%)</title><rect x="9.3330%" y="357" width="0.0717%" height="15" fill="rgb(210,71,41)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="367.50"></text></g><g><title>rust_alloc (83 samples, 0.07%)</title><rect x="9.3330%" y="341" width="0.0717%" height="15" fill="rgb(206,173,20)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="9.3330%" y="325" width="0.0717%" height="15" fill="rgb(233,88,34)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="9.3330%" y="309" width="0.0717%" height="15" fill="rgb(223,209,46)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="9.3330%" y="293" width="0.0717%" height="15" fill="rgb(250,43,18)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (83 samples, 0.07%)</title><rect x="9.3330%" y="277" width="0.0717%" height="15" fill="rgb(208,13,10)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (83 samples, 0.07%)</title><rect x="9.3330%" y="261" width="0.0717%" height="15" fill="rgb(212,200,36)" fg:x="10803" fg:w="83"/><text x="9.5830%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (66 samples, 0.06%)</title><rect x="9.3477%" y="245" width="0.0570%" height="15" fill="rgb(225,90,30)" fg:x="10820" fg:w="66"/><text x="9.5977%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (53 samples, 0.05%)</title><rect x="9.3590%" y="229" width="0.0458%" height="15" fill="rgb(236,182,39)" fg:x="10833" fg:w="53"/><text x="9.6090%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="9.3590%" y="213" width="0.0458%" height="15" fill="rgb(212,144,35)" fg:x="10833" fg:w="53"/><text x="9.6090%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (53 samples, 0.05%)</title><rect x="9.3590%" y="197" width="0.0458%" height="15" fill="rgb(228,63,44)" fg:x="10833" fg:w="53"/><text x="9.6090%" y="207.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (132 samples, 0.11%)</title><rect x="9.3330%" y="693" width="0.1140%" height="15" fill="rgb(228,109,6)" fg:x="10803" fg:w="132"/><text x="9.5830%" y="703.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (132 samples, 0.11%)</title><rect x="9.3330%" y="677" width="0.1140%" height="15" fill="rgb(238,117,24)" fg:x="10803" fg:w="132"/><text x="9.5830%" y="687.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (132 samples, 0.11%)</title><rect x="9.3330%" y="661" width="0.1140%" height="15" fill="rgb(242,26,26)" fg:x="10803" fg:w="132"/><text x="9.5830%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (132 samples, 0.11%)</title><rect x="9.3330%" y="645" width="0.1140%" height="15" fill="rgb(221,92,48)" fg:x="10803" fg:w="132"/><text x="9.5830%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (132 samples, 0.11%)</title><rect x="9.3330%" y="629" width="0.1140%" height="15" fill="rgb(209,209,32)" fg:x="10803" fg:w="132"/><text x="9.5830%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (132 samples, 0.11%)</title><rect x="9.3330%" y="613" width="0.1140%" height="15" fill="rgb(221,70,22)" fg:x="10803" fg:w="132"/><text x="9.5830%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (132 samples, 0.11%)</title><rect x="9.3330%" y="597" width="0.1140%" height="15" fill="rgb(248,145,5)" fg:x="10803" fg:w="132"/><text x="9.5830%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (49 samples, 0.04%)</title><rect x="9.4048%" y="581" width="0.0423%" height="15" fill="rgb(226,116,26)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (49 samples, 0.04%)</title><rect x="9.4048%" y="565" width="0.0423%" height="15" fill="rgb(244,5,17)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (49 samples, 0.04%)</title><rect x="9.4048%" y="549" width="0.0423%" height="15" fill="rgb(252,159,33)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.04%)</title><rect x="9.4048%" y="533" width="0.0423%" height="15" fill="rgb(206,71,0)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.04%)</title><rect x="9.4048%" y="517" width="0.0423%" height="15" fill="rgb(233,118,54)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="527.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.04%)</title><rect x="9.4048%" y="501" width="0.0423%" height="15" fill="rgb(234,83,48)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="511.50"></text></g><g><title>__rg_alloc (49 samples, 0.04%)</title><rect x="9.4048%" y="485" width="0.0423%" height="15" fill="rgb(228,3,54)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (49 samples, 0.04%)</title><rect x="9.4048%" y="469" width="0.0423%" height="15" fill="rgb(226,155,13)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="479.50"></text></g><g><title>rust_alloc (49 samples, 0.04%)</title><rect x="9.4048%" y="453" width="0.0423%" height="15" fill="rgb(241,28,37)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="9.4048%" y="437" width="0.0423%" height="15" fill="rgb(233,93,10)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="9.4048%" y="421" width="0.0423%" height="15" fill="rgb(225,113,19)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="9.4048%" y="405" width="0.0423%" height="15" fill="rgb(241,2,18)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (49 samples, 0.04%)</title><rect x="9.4048%" y="389" width="0.0423%" height="15" fill="rgb(228,207,21)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (49 samples, 0.04%)</title><rect x="9.4048%" y="373" width="0.0423%" height="15" fill="rgb(213,211,35)" fg:x="10886" fg:w="49"/><text x="9.6548%" y="383.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (41 samples, 0.04%)</title><rect x="9.4117%" y="357" width="0.0354%" height="15" fill="rgb(209,83,10)" fg:x="10894" fg:w="41"/><text x="9.6617%" y="367.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="9.4177%" y="341" width="0.0294%" height="15" fill="rgb(209,164,1)" fg:x="10901" fg:w="34"/><text x="9.6677%" y="351.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="9.4177%" y="325" width="0.0294%" height="15" fill="rgb(213,184,43)" fg:x="10901" fg:w="34"/><text x="9.6677%" y="335.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="9.4177%" y="309" width="0.0294%" height="15" fill="rgb(231,61,34)" fg:x="10901" fg:w="34"/><text x="9.6677%" y="319.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (133 samples, 0.11%)</title><rect x="9.3330%" y="949" width="0.1149%" height="15" fill="rgb(235,75,3)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="959.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (133 samples, 0.11%)</title><rect x="9.3330%" y="933" width="0.1149%" height="15" fill="rgb(220,106,47)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="943.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (133 samples, 0.11%)</title><rect x="9.3330%" y="917" width="0.1149%" height="15" fill="rgb(210,196,33)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="927.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (133 samples, 0.11%)</title><rect x="9.3330%" y="901" width="0.1149%" height="15" fill="rgb(229,154,42)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (133 samples, 0.11%)</title><rect x="9.3330%" y="885" width="0.1149%" height="15" fill="rgb(228,114,26)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="895.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (133 samples, 0.11%)</title><rect x="9.3330%" y="869" width="0.1149%" height="15" fill="rgb(208,144,1)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="879.50"></text></g><g><title>std::panic::catch_unwind (133 samples, 0.11%)</title><rect x="9.3330%" y="853" width="0.1149%" height="15" fill="rgb(239,112,37)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="863.50"></text></g><g><title>std::panicking::try (133 samples, 0.11%)</title><rect x="9.3330%" y="837" width="0.1149%" height="15" fill="rgb(210,96,50)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="847.50"></text></g><g><title>std::panicking::try::do_call (133 samples, 0.11%)</title><rect x="9.3330%" y="821" width="0.1149%" height="15" fill="rgb(222,178,2)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (133 samples, 0.11%)</title><rect x="9.3330%" y="805" width="0.1149%" height="15" fill="rgb(226,74,18)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (133 samples, 0.11%)</title><rect x="9.3330%" y="789" width="0.1149%" height="15" fill="rgb(225,67,54)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="799.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (133 samples, 0.11%)</title><rect x="9.3330%" y="773" width="0.1149%" height="15" fill="rgb(251,92,32)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="783.50"></text></g><g><title>async_ffi::FfiContext::with_context (133 samples, 0.11%)</title><rect x="9.3330%" y="757" width="0.1149%" height="15" fill="rgb(228,149,22)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (133 samples, 0.11%)</title><rect x="9.3330%" y="741" width="0.1149%" height="15" fill="rgb(243,54,13)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (133 samples, 0.11%)</title><rect x="9.3330%" y="725" width="0.1149%" height="15" fill="rgb(243,180,28)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="735.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (133 samples, 0.11%)</title><rect x="9.3330%" y="709" width="0.1149%" height="15" fill="rgb(208,167,24)" fg:x="10803" fg:w="133"/><text x="9.5830%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (116 samples, 0.10%)</title><rect x="9.4661%" y="885" width="0.1002%" height="15" fill="rgb(245,73,45)" fg:x="10957" fg:w="116"/><text x="9.7161%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="9.6708%" y="853" width="0.0121%" height="15" fill="rgb(237,203,48)" fg:x="11194" fg:w="14"/><text x="9.9208%" y="863.50"></text></g><g><title>concurrent_queue::full_fence (30 samples, 0.03%)</title><rect x="9.8911%" y="805" width="0.0259%" height="15" fill="rgb(211,197,16)" fg:x="11449" fg:w="30"/><text x="10.1411%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (30 samples, 0.03%)</title><rect x="9.8911%" y="789" width="0.0259%" height="15" fill="rgb(243,99,51)" fg:x="11449" fg:w="30"/><text x="10.1411%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (30 samples, 0.03%)</title><rect x="9.8911%" y="773" width="0.0259%" height="15" fill="rgb(215,123,29)" fg:x="11449" fg:w="30"/><text x="10.1411%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.03%)</title><rect x="9.8911%" y="757" width="0.0259%" height="15" fill="rgb(239,186,37)" fg:x="11449" fg:w="30"/><text x="10.1411%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (312 samples, 0.27%)</title><rect x="9.9222%" y="805" width="0.2695%" height="15" fill="rgb(252,136,39)" fg:x="11485" fg:w="312"/><text x="10.1722%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (312 samples, 0.27%)</title><rect x="9.9222%" y="789" width="0.2695%" height="15" fill="rgb(223,213,32)" fg:x="11485" fg:w="312"/><text x="10.1722%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (481 samples, 0.42%)</title><rect x="10.1918%" y="805" width="0.4156%" height="15" fill="rgb(233,115,5)" fg:x="11797" fg:w="481"/><text x="10.4418%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (473 samples, 0.41%)</title><rect x="10.1987%" y="789" width="0.4086%" height="15" fill="rgb(207,226,44)" fg:x="11805" fg:w="473"/><text x="10.4487%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,051 samples, 0.91%)</title><rect x="9.7063%" y="837" width="0.9080%" height="15" fill="rgb(208,126,0)" fg:x="11235" fg:w="1051"/><text x="9.9563%" y="847.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (965 samples, 0.83%)</title><rect x="9.7806%" y="821" width="0.8337%" height="15" fill="rgb(244,66,21)" fg:x="11321" fg:w="965"/><text x="10.0306%" y="831.50"></text></g><g><title>futex_wake_mark (18 samples, 0.02%)</title><rect x="10.7222%" y="629" width="0.0156%" height="15" fill="rgb(222,97,12)" fg:x="12411" fg:w="18"/><text x="10.9722%" y="639.50"></text></g><g><title>ttwu_do_activate (21 samples, 0.02%)</title><rect x="10.7654%" y="597" width="0.0181%" height="15" fill="rgb(219,213,19)" fg:x="12461" fg:w="21"/><text x="11.0154%" y="607.50"></text></g><g><title>enqueue_task (21 samples, 0.02%)</title><rect x="10.7654%" y="581" width="0.0181%" height="15" fill="rgb(252,169,30)" fg:x="12461" fg:w="21"/><text x="11.0154%" y="591.50"></text></g><g><title>__smp_call_single_queue (21 samples, 0.02%)</title><rect x="10.7922%" y="581" width="0.0181%" height="15" fill="rgb(206,32,51)" fg:x="12492" fg:w="21"/><text x="11.0422%" y="591.50"></text></g><g><title>llist_add_batch (21 samples, 0.02%)</title><rect x="10.7922%" y="565" width="0.0181%" height="15" fill="rgb(250,172,42)" fg:x="12492" fg:w="21"/><text x="11.0422%" y="575.50"></text></g><g><title>__x2apic_send_IPI_dest (18 samples, 0.02%)</title><rect x="10.8104%" y="581" width="0.0156%" height="15" fill="rgb(209,34,43)" fg:x="12513" fg:w="18"/><text x="11.0604%" y="591.50"></text></g><g><title>native_write_msr (17 samples, 0.01%)</title><rect x="10.8112%" y="565" width="0.0147%" height="15" fill="rgb(223,11,35)" fg:x="12514" fg:w="17"/><text x="11.0612%" y="575.50"></text></g><g><title>ttwu_queue_wakelist (80 samples, 0.07%)</title><rect x="10.7853%" y="597" width="0.0691%" height="15" fill="rgb(251,219,26)" fg:x="12484" fg:w="80"/><text x="11.0353%" y="607.50"></text></g><g><title>x2apic_send_IPI (16 samples, 0.01%)</title><rect x="10.8406%" y="581" width="0.0138%" height="15" fill="rgb(231,119,3)" fg:x="12548" fg:w="16"/><text x="11.0906%" y="591.50"></text></g><g><title>__x64_sys_futex (213 samples, 0.18%)</title><rect x="10.6721%" y="677" width="0.1840%" height="15" fill="rgb(216,97,11)" fg:x="12353" fg:w="213"/><text x="10.9221%" y="687.50"></text></g><g><title>do_futex (204 samples, 0.18%)</title><rect x="10.6799%" y="661" width="0.1762%" height="15" fill="rgb(223,59,9)" fg:x="12362" fg:w="204"/><text x="10.9299%" y="671.50"></text></g><g><title>futex_wake (202 samples, 0.17%)</title><rect x="10.6816%" y="645" width="0.1745%" height="15" fill="rgb(233,93,31)" fg:x="12364" fg:w="202"/><text x="10.9316%" y="655.50"></text></g><g><title>wake_up_q (131 samples, 0.11%)</title><rect x="10.7430%" y="629" width="0.1132%" height="15" fill="rgb(239,81,33)" fg:x="12435" fg:w="131"/><text x="10.9930%" y="639.50"></text></g><g><title>try_to_wake_up (123 samples, 0.11%)</title><rect x="10.7499%" y="613" width="0.1063%" height="15" fill="rgb(213,120,34)" fg:x="12443" fg:w="123"/><text x="10.9999%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (109 samples, 0.09%)</title><rect x="10.8579%" y="677" width="0.0942%" height="15" fill="rgb(243,49,53)" fg:x="12568" fg:w="109"/><text x="11.1079%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (338 samples, 0.29%)</title><rect x="10.6661%" y="709" width="0.2920%" height="15" fill="rgb(247,216,33)" fg:x="12346" fg:w="338"/><text x="10.9161%" y="719.50"></text></g><g><title>do_syscall_64 (336 samples, 0.29%)</title><rect x="10.6678%" y="693" width="0.2903%" height="15" fill="rgb(226,26,14)" fg:x="12348" fg:w="336"/><text x="10.9178%" y="703.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (381 samples, 0.33%)</title><rect x="10.6341%" y="741" width="0.3292%" height="15" fill="rgb(215,49,53)" fg:x="12309" fg:w="381"/><text x="10.8841%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (358 samples, 0.31%)</title><rect x="10.6540%" y="725" width="0.3093%" height="15" fill="rgb(245,162,40)" fg:x="12332" fg:w="358"/><text x="10.9040%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (385 samples, 0.33%)</title><rect x="10.6315%" y="821" width="0.3326%" height="15" fill="rgb(229,68,17)" fg:x="12306" fg:w="385"/><text x="10.8815%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (384 samples, 0.33%)</title><rect x="10.6324%" y="805" width="0.3317%" height="15" fill="rgb(213,182,10)" fg:x="12307" fg:w="384"/><text x="10.8824%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (384 samples, 0.33%)</title><rect x="10.6324%" y="789" width="0.3317%" height="15" fill="rgb(245,125,30)" fg:x="12307" fg:w="384"/><text x="10.8824%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (384 samples, 0.33%)</title><rect x="10.6324%" y="773" width="0.3317%" height="15" fill="rgb(232,202,2)" fg:x="12307" fg:w="384"/><text x="10.8824%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (382 samples, 0.33%)</title><rect x="10.6341%" y="757" width="0.3300%" height="15" fill="rgb(237,140,51)" fg:x="12309" fg:w="382"/><text x="10.8841%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="10.9641%" y="821" width="0.0130%" height="15" fill="rgb(236,157,25)" fg:x="12691" fg:w="15"/><text x="11.2141%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="10.9641%" y="805" width="0.0130%" height="15" fill="rgb(219,209,0)" fg:x="12691" fg:w="15"/><text x="11.2141%" y="815.50"></text></g><g><title>event_listener::Inner::lock (91 samples, 0.08%)</title><rect x="10.9788%" y="821" width="0.0786%" height="15" fill="rgb(240,116,54)" fg:x="12708" fg:w="91"/><text x="11.2288%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (89 samples, 0.08%)</title><rect x="10.9806%" y="805" width="0.0769%" height="15" fill="rgb(216,10,36)" fg:x="12710" fg:w="89"/><text x="11.2306%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (84 samples, 0.07%)</title><rect x="10.9849%" y="789" width="0.0726%" height="15" fill="rgb(222,72,44)" fg:x="12715" fg:w="84"/><text x="11.2349%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (81 samples, 0.07%)</title><rect x="10.9875%" y="773" width="0.0700%" height="15" fill="rgb(232,159,9)" fg:x="12718" fg:w="81"/><text x="11.2375%" y="783.50"></text></g><g><title>___pthread_mutex_lock (81 samples, 0.07%)</title><rect x="10.9875%" y="757" width="0.0700%" height="15" fill="rgb(210,39,32)" fg:x="12718" fg:w="81"/><text x="11.2375%" y="767.50"></text></g><g><title>__GI___lll_lock_wait (33 samples, 0.03%)</title><rect x="11.0289%" y="741" width="0.0285%" height="15" fill="rgb(216,194,45)" fg:x="12766" fg:w="33"/><text x="11.2789%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="11.0393%" y="725" width="0.0181%" height="15" fill="rgb(218,18,35)" fg:x="12778" fg:w="21"/><text x="11.2893%" y="735.50"></text></g><g><title>do_syscall_64 (20 samples, 0.02%)</title><rect x="11.0402%" y="709" width="0.0173%" height="15" fill="rgb(207,83,51)" fg:x="12779" fg:w="20"/><text x="11.2902%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (35 samples, 0.03%)</title><rect x="11.0695%" y="757" width="0.0302%" height="15" fill="rgb(225,63,43)" fg:x="12813" fg:w="35"/><text x="11.3195%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (35 samples, 0.03%)</title><rect x="11.0695%" y="741" width="0.0302%" height="15" fill="rgb(207,57,36)" fg:x="12813" fg:w="35"/><text x="11.3195%" y="751.50"></text></g><g><title>event_listener::List::notify (54 samples, 0.05%)</title><rect x="11.0575%" y="821" width="0.0467%" height="15" fill="rgb(216,99,33)" fg:x="12799" fg:w="54"/><text x="11.3075%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (49 samples, 0.04%)</title><rect x="11.0618%" y="805" width="0.0423%" height="15" fill="rgb(225,42,16)" fg:x="12804" fg:w="49"/><text x="11.3118%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (49 samples, 0.04%)</title><rect x="11.0618%" y="789" width="0.0423%" height="15" fill="rgb(220,201,45)" fg:x="12804" fg:w="49"/><text x="11.3118%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (44 samples, 0.04%)</title><rect x="11.0661%" y="773" width="0.0380%" height="15" fill="rgb(225,33,4)" fg:x="12809" fg:w="44"/><text x="11.3161%" y="783.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,263 samples, 1.96%)</title><rect x="9.6829%" y="853" width="1.9551%" height="15" fill="rgb(224,33,50)" fg:x="11208" fg:w="2263"/><text x="9.9329%" y="863.50">a..</text></g><g><title>event_listener::Event::notify (1,185 samples, 1.02%)</title><rect x="10.6143%" y="837" width="1.0238%" height="15" fill="rgb(246,198,51)" fg:x="12286" fg:w="1185"/><text x="10.8643%" y="847.50"></text></g><g><title>event_listener::full_fence (618 samples, 0.53%)</title><rect x="11.1041%" y="821" width="0.5339%" height="15" fill="rgb(205,22,4)" fg:x="12853" fg:w="618"/><text x="11.3541%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (613 samples, 0.53%)</title><rect x="11.1084%" y="805" width="0.5296%" height="15" fill="rgb(206,3,8)" fg:x="12858" fg:w="613"/><text x="11.3584%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (613 samples, 0.53%)</title><rect x="11.1084%" y="789" width="0.5296%" height="15" fill="rgb(251,23,15)" fg:x="12858" fg:w="613"/><text x="11.3584%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (29 samples, 0.03%)</title><rect x="11.6380%" y="853" width="0.0251%" height="15" fill="rgb(252,88,28)" fg:x="13471" fg:w="29"/><text x="11.8880%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="11.6778%" y="837" width="0.0112%" height="15" fill="rgb(212,127,14)" fg:x="13517" fg:w="13"/><text x="11.9278%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.01%)</title><rect x="11.6778%" y="821" width="0.0112%" height="15" fill="rgb(247,145,37)" fg:x="13517" fg:w="13"/><text x="11.9278%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="11.6778%" y="805" width="0.0112%" height="15" fill="rgb(209,117,53)" fg:x="13517" fg:w="13"/><text x="11.9278%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="11.6890%" y="757" width="0.0156%" height="15" fill="rgb(212,90,42)" fg:x="13530" fg:w="18"/><text x="11.9390%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (19 samples, 0.02%)</title><rect x="11.6890%" y="837" width="0.0164%" height="15" fill="rgb(218,164,37)" fg:x="13530" fg:w="19"/><text x="11.9390%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (19 samples, 0.02%)</title><rect x="11.6890%" y="821" width="0.0164%" height="15" fill="rgb(246,65,34)" fg:x="13530" fg:w="19"/><text x="11.9390%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="11.6890%" y="805" width="0.0164%" height="15" fill="rgb(231,100,33)" fg:x="13530" fg:w="19"/><text x="11.9390%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="11.6890%" y="789" width="0.0164%" height="15" fill="rgb(228,126,14)" fg:x="13530" fg:w="19"/><text x="11.9390%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="11.6890%" y="773" width="0.0164%" height="15" fill="rgb(215,173,21)" fg:x="13530" fg:w="19"/><text x="11.9390%" y="783.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.01%)</title><rect x="11.7080%" y="837" width="0.0112%" height="15" fill="rgb(210,6,40)" fg:x="13552" fg:w="13"/><text x="11.9580%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="11.7080%" y="821" width="0.0112%" height="15" fill="rgb(212,48,18)" fg:x="13552" fg:w="13"/><text x="11.9580%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="11.7089%" y="805" width="0.0104%" height="15" fill="rgb(230,214,11)" fg:x="13553" fg:w="12"/><text x="11.9589%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="11.7089%" y="789" width="0.0104%" height="15" fill="rgb(254,105,39)" fg:x="13553" fg:w="12"/><text x="11.9589%" y="799.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="11.7089%" y="773" width="0.0104%" height="15" fill="rgb(245,158,5)" fg:x="13553" fg:w="12"/><text x="11.9589%" y="783.50"></text></g><g><title>event_listener::Event::listen (59 samples, 0.05%)</title><rect x="11.6760%" y="853" width="0.0510%" height="15" fill="rgb(249,208,11)" fg:x="13515" fg:w="59"/><text x="11.9260%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="11.7296%" y="837" width="0.0112%" height="15" fill="rgb(210,39,28)" fg:x="13577" fg:w="13"/><text x="11.9796%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="11.7296%" y="821" width="0.0112%" height="15" fill="rgb(211,56,53)" fg:x="13577" fg:w="13"/><text x="11.9796%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="11.7296%" y="805" width="0.0112%" height="15" fill="rgb(226,201,30)" fg:x="13577" fg:w="13"/><text x="11.9796%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="11.7296%" y="789" width="0.0112%" height="15" fill="rgb(239,101,34)" fg:x="13577" fg:w="13"/><text x="11.9796%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="11.7296%" y="773" width="0.0112%" height="15" fill="rgb(226,209,5)" fg:x="13577" fg:w="13"/><text x="11.9796%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="11.7296%" y="757" width="0.0112%" height="15" fill="rgb(250,105,47)" fg:x="13577" fg:w="13"/><text x="11.9796%" y="767.50"></text></g><g><title>__GI___lll_lock_wake (13 samples, 0.01%)</title><rect x="11.7296%" y="741" width="0.0112%" height="15" fill="rgb(230,72,3)" fg:x="13577" fg:w="13"/><text x="11.9796%" y="751.50"></text></g><g><title>futex_wait_queue (22 samples, 0.02%)</title><rect x="11.7529%" y="661" width="0.0190%" height="15" fill="rgb(232,218,39)" fg:x="13604" fg:w="22"/><text x="12.0029%" y="671.50"></text></g><g><title>schedule (20 samples, 0.02%)</title><rect x="11.7546%" y="645" width="0.0173%" height="15" fill="rgb(248,166,6)" fg:x="13606" fg:w="20"/><text x="12.0046%" y="655.50"></text></g><g><title>__schedule (19 samples, 0.02%)</title><rect x="11.7555%" y="629" width="0.0164%" height="15" fill="rgb(247,89,20)" fg:x="13607" fg:w="19"/><text x="12.0055%" y="639.50"></text></g><g><title>__x64_sys_futex (28 samples, 0.02%)</title><rect x="11.7521%" y="709" width="0.0242%" height="15" fill="rgb(248,130,54)" fg:x="13603" fg:w="28"/><text x="12.0021%" y="719.50"></text></g><g><title>do_futex (28 samples, 0.02%)</title><rect x="11.7521%" y="693" width="0.0242%" height="15" fill="rgb(234,196,4)" fg:x="13603" fg:w="28"/><text x="12.0021%" y="703.50"></text></g><g><title>futex_wait (28 samples, 0.02%)</title><rect x="11.7521%" y="677" width="0.0242%" height="15" fill="rgb(250,143,31)" fg:x="13603" fg:w="28"/><text x="12.0021%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (41 samples, 0.04%)</title><rect x="11.7503%" y="741" width="0.0354%" height="15" fill="rgb(211,110,34)" fg:x="13601" fg:w="41"/><text x="12.0003%" y="751.50"></text></g><g><title>do_syscall_64 (40 samples, 0.03%)</title><rect x="11.7512%" y="725" width="0.0346%" height="15" fill="rgb(215,124,48)" fg:x="13602" fg:w="40"/><text x="12.0012%" y="735.50"></text></g><g><title>event_listener::Inner::lock (49 samples, 0.04%)</title><rect x="11.7451%" y="837" width="0.0423%" height="15" fill="rgb(216,46,13)" fg:x="13595" fg:w="49"/><text x="11.9951%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 0.04%)</title><rect x="11.7451%" y="821" width="0.0423%" height="15" fill="rgb(205,184,25)" fg:x="13595" fg:w="49"/><text x="11.9951%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (47 samples, 0.04%)</title><rect x="11.7469%" y="805" width="0.0406%" height="15" fill="rgb(228,1,10)" fg:x="13597" fg:w="47"/><text x="11.9969%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (47 samples, 0.04%)</title><rect x="11.7469%" y="789" width="0.0406%" height="15" fill="rgb(213,116,27)" fg:x="13597" fg:w="47"/><text x="11.9969%" y="799.50"></text></g><g><title>___pthread_mutex_lock (47 samples, 0.04%)</title><rect x="11.7469%" y="773" width="0.0406%" height="15" fill="rgb(241,95,50)" fg:x="13597" fg:w="47"/><text x="11.9969%" y="783.50"></text></g><g><title>__GI___lll_lock_wait (47 samples, 0.04%)</title><rect x="11.7469%" y="757" width="0.0406%" height="15" fill="rgb(238,48,32)" fg:x="13597" fg:w="47"/><text x="11.9969%" y="767.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,682 samples, 2.32%)</title><rect x="9.6285%" y="869" width="2.3171%" height="15" fill="rgb(235,113,49)" fg:x="11145" fg:w="2682"/><text x="9.8785%" y="879.50">&lt;..</text></g><g><title>event_listener::Event::notify (253 samples, 0.22%)</title><rect x="11.7270%" y="853" width="0.2186%" height="15" fill="rgb(205,127,43)" fg:x="13574" fg:w="253"/><text x="11.9770%" y="863.50"></text></g><g><title>event_listener::full_fence (183 samples, 0.16%)</title><rect x="11.7875%" y="837" width="0.1581%" height="15" fill="rgb(250,162,2)" fg:x="13644" fg:w="183"/><text x="12.0375%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (177 samples, 0.15%)</title><rect x="11.7927%" y="821" width="0.1529%" height="15" fill="rgb(220,13,41)" fg:x="13650" fg:w="177"/><text x="12.0427%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (177 samples, 0.15%)</title><rect x="11.7927%" y="805" width="0.1529%" height="15" fill="rgb(249,221,25)" fg:x="13650" fg:w="177"/><text x="12.0427%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (14 samples, 0.01%)</title><rect x="11.9568%" y="805" width="0.0121%" height="15" fill="rgb(215,208,19)" fg:x="13840" fg:w="14"/><text x="12.2068%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="11.9577%" y="789" width="0.0112%" height="15" fill="rgb(236,175,2)" fg:x="13841" fg:w="13"/><text x="12.2077%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="11.9577%" y="773" width="0.0112%" height="15" fill="rgb(241,52,2)" fg:x="13841" fg:w="13"/><text x="12.2077%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="11.9585%" y="757" width="0.0104%" height="15" fill="rgb(248,140,14)" fg:x="13842" fg:w="12"/><text x="12.2085%" y="767.50"></text></g><g><title>event_listener::Inner::lock (24 samples, 0.02%)</title><rect x="11.9689%" y="805" width="0.0207%" height="15" fill="rgb(253,22,42)" fg:x="13854" fg:w="24"/><text x="12.2189%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="11.9698%" y="789" width="0.0199%" height="15" fill="rgb(234,61,47)" fg:x="13855" fg:w="23"/><text x="12.2198%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="11.9706%" y="773" width="0.0190%" height="15" fill="rgb(208,226,15)" fg:x="13856" fg:w="22"/><text x="12.2206%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.02%)</title><rect x="11.9706%" y="757" width="0.0190%" height="15" fill="rgb(217,221,4)" fg:x="13856" fg:w="22"/><text x="12.2206%" y="767.50"></text></g><g><title>___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="11.9706%" y="741" width="0.0190%" height="15" fill="rgb(212,174,34)" fg:x="13856" fg:w="22"/><text x="12.2206%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="11.9559%" y="821" width="0.0371%" height="15" fill="rgb(253,83,4)" fg:x="13839" fg:w="43"/><text x="12.2059%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,949 samples, 2.55%)</title><rect x="9.4479%" y="901" width="2.5477%" height="15" fill="rgb(250,195,49)" fg:x="10936" fg:w="2949"/><text x="9.6979%" y="911.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,812 samples, 2.43%)</title><rect x="9.5663%" y="885" width="2.4294%" height="15" fill="rgb(241,192,25)" fg:x="11073" fg:w="2812"/><text x="9.8163%" y="895.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (58 samples, 0.05%)</title><rect x="11.9456%" y="869" width="0.0501%" height="15" fill="rgb(208,124,10)" fg:x="13827" fg:w="58"/><text x="12.1956%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (46 samples, 0.04%)</title><rect x="11.9559%" y="853" width="0.0397%" height="15" fill="rgb(222,33,0)" fg:x="13839" fg:w="46"/><text x="12.2059%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (46 samples, 0.04%)</title><rect x="11.9559%" y="837" width="0.0397%" height="15" fill="rgb(234,209,28)" fg:x="13839" fg:w="46"/><text x="12.2059%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,963 samples, 2.56%)</title><rect x="9.4479%" y="933" width="2.5598%" height="15" fill="rgb(224,11,23)" fg:x="10936" fg:w="2963"/><text x="9.6979%" y="943.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (2,963 samples, 2.56%)</title><rect x="9.4479%" y="917" width="2.5598%" height="15" fill="rgb(232,99,1)" fg:x="10936" fg:w="2963"/><text x="9.6979%" y="927.50">tr..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="12.5883%" y="917" width="0.0268%" height="15" fill="rgb(237,95,45)" fg:x="14571" fg:w="31"/><text x="12.8383%" y="927.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="12.6151%" y="917" width="0.0104%" height="15" fill="rgb(208,109,11)" fg:x="14602" fg:w="12"/><text x="12.8651%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.02%)</title><rect x="13.0350%" y="869" width="0.0190%" height="15" fill="rgb(216,190,48)" fg:x="15088" fg:w="22"/><text x="13.2850%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (17 samples, 0.01%)</title><rect x="13.0393%" y="853" width="0.0147%" height="15" fill="rgb(251,171,36)" fg:x="15093" fg:w="17"/><text x="13.2893%" y="863.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="13.0886%" y="645" width="0.0112%" height="15" fill="rgb(230,62,22)" fg:x="15150" fg:w="13"/><text x="13.3386%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.21%)</title><rect x="13.1084%" y="645" width="0.2073%" height="15" fill="rgb(225,114,35)" fg:x="15173" fg:w="240"/><text x="13.3584%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.21%)</title><rect x="13.1084%" y="629" width="0.2073%" height="15" fill="rgb(215,118,42)" fg:x="15173" fg:w="240"/><text x="13.3584%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (227 samples, 0.20%)</title><rect x="13.1197%" y="613" width="0.1961%" height="15" fill="rgb(243,119,21)" fg:x="15186" fg:w="227"/><text x="13.3697%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::take (211 samples, 0.18%)</title><rect x="13.1335%" y="597" width="0.1823%" height="15" fill="rgb(252,177,53)" fg:x="15202" fg:w="211"/><text x="13.3835%" y="607.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (211 samples, 0.18%)</title><rect x="13.1335%" y="581" width="0.1823%" height="15" fill="rgb(237,209,29)" fg:x="15202" fg:w="211"/><text x="13.3835%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (312 samples, 0.27%)</title><rect x="13.0540%" y="757" width="0.2695%" height="15" fill="rgb(212,65,23)" fg:x="15110" fg:w="312"/><text x="13.3040%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (312 samples, 0.27%)</title><rect x="13.0540%" y="741" width="0.2695%" height="15" fill="rgb(230,222,46)" fg:x="15110" fg:w="312"/><text x="13.3040%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (312 samples, 0.27%)</title><rect x="13.0540%" y="725" width="0.2695%" height="15" fill="rgb(215,135,32)" fg:x="15110" fg:w="312"/><text x="13.3040%" y="735.50"></text></g><g><title>alloc::alloc::alloc (304 samples, 0.26%)</title><rect x="13.0609%" y="709" width="0.2626%" height="15" fill="rgb(246,101,22)" fg:x="15118" fg:w="304"/><text x="13.3109%" y="719.50"></text></g><g><title>__rg_alloc (304 samples, 0.26%)</title><rect x="13.0609%" y="693" width="0.2626%" height="15" fill="rgb(206,107,13)" fg:x="15118" fg:w="304"/><text x="13.3109%" y="703.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (304 samples, 0.26%)</title><rect x="13.0609%" y="677" width="0.2626%" height="15" fill="rgb(250,100,44)" fg:x="15118" fg:w="304"/><text x="13.3109%" y="687.50"></text></g><g><title>rust_alloc (272 samples, 0.23%)</title><rect x="13.0886%" y="661" width="0.2350%" height="15" fill="rgb(231,147,38)" fg:x="15150" fg:w="272"/><text x="13.3386%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (319 samples, 0.28%)</title><rect x="13.0540%" y="789" width="0.2756%" height="15" fill="rgb(229,8,40)" fg:x="15110" fg:w="319"/><text x="13.3040%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (319 samples, 0.28%)</title><rect x="13.0540%" y="773" width="0.2756%" height="15" fill="rgb(221,135,30)" fg:x="15110" fg:w="319"/><text x="13.3040%" y="783.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (417 samples, 0.36%)</title><rect x="13.0186%" y="901" width="0.3603%" height="15" fill="rgb(249,193,18)" fg:x="15069" fg:w="417"/><text x="13.2686%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (405 samples, 0.35%)</title><rect x="13.0289%" y="885" width="0.3499%" height="15" fill="rgb(209,133,39)" fg:x="15081" fg:w="405"/><text x="13.2789%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (376 samples, 0.32%)</title><rect x="13.0540%" y="869" width="0.3248%" height="15" fill="rgb(232,100,14)" fg:x="15110" fg:w="376"/><text x="13.3040%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (376 samples, 0.32%)</title><rect x="13.0540%" y="853" width="0.3248%" height="15" fill="rgb(224,185,1)" fg:x="15110" fg:w="376"/><text x="13.3040%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (376 samples, 0.32%)</title><rect x="13.0540%" y="837" width="0.3248%" height="15" fill="rgb(223,139,8)" fg:x="15110" fg:w="376"/><text x="13.3040%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (376 samples, 0.32%)</title><rect x="13.0540%" y="821" width="0.3248%" height="15" fill="rgb(232,213,38)" fg:x="15110" fg:w="376"/><text x="13.3040%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (376 samples, 0.32%)</title><rect x="13.0540%" y="805" width="0.3248%" height="15" fill="rgb(207,94,22)" fg:x="15110" fg:w="376"/><text x="13.3040%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (57 samples, 0.05%)</title><rect x="13.3296%" y="789" width="0.0492%" height="15" fill="rgb(219,183,54)" fg:x="15429" fg:w="57"/><text x="13.5796%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.05%)</title><rect x="13.3296%" y="773" width="0.0492%" height="15" fill="rgb(216,185,54)" fg:x="15429" fg:w="57"/><text x="13.5796%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (42 samples, 0.04%)</title><rect x="13.3425%" y="757" width="0.0363%" height="15" fill="rgb(254,217,39)" fg:x="15444" fg:w="42"/><text x="13.5925%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (13 samples, 0.01%)</title><rect x="13.4073%" y="869" width="0.0112%" height="15" fill="rgb(240,178,23)" fg:x="15519" fg:w="13"/><text x="13.6573%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (32 samples, 0.03%)</title><rect x="13.3918%" y="885" width="0.0276%" height="15" fill="rgb(218,11,47)" fg:x="15501" fg:w="32"/><text x="13.6418%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="13.4514%" y="549" width="0.0700%" height="15" fill="rgb(218,51,51)" fg:x="15570" fg:w="81"/><text x="13.7014%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="13.4514%" y="533" width="0.0700%" height="15" fill="rgb(238,126,27)" fg:x="15570" fg:w="81"/><text x="13.7014%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="13.4557%" y="517" width="0.0657%" height="15" fill="rgb(249,202,22)" fg:x="15575" fg:w="76"/><text x="13.7057%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (63 samples, 0.05%)</title><rect x="13.4670%" y="501" width="0.0544%" height="15" fill="rgb(254,195,49)" fg:x="15588" fg:w="63"/><text x="13.7170%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (63 samples, 0.05%)</title><rect x="13.4670%" y="485" width="0.0544%" height="15" fill="rgb(208,123,14)" fg:x="15588" fg:w="63"/><text x="13.7170%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (122 samples, 0.11%)</title><rect x="13.4229%" y="693" width="0.1054%" height="15" fill="rgb(224,200,8)" fg:x="15537" fg:w="122"/><text x="13.6729%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (122 samples, 0.11%)</title><rect x="13.4229%" y="677" width="0.1054%" height="15" fill="rgb(217,61,36)" fg:x="15537" fg:w="122"/><text x="13.6729%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (112 samples, 0.10%)</title><rect x="13.4315%" y="661" width="0.0968%" height="15" fill="rgb(206,35,45)" fg:x="15547" fg:w="112"/><text x="13.6815%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 0.10%)</title><rect x="13.4315%" y="645" width="0.0968%" height="15" fill="rgb(217,65,33)" fg:x="15547" fg:w="112"/><text x="13.6815%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 0.10%)</title><rect x="13.4315%" y="629" width="0.0968%" height="15" fill="rgb(222,158,48)" fg:x="15547" fg:w="112"/><text x="13.6815%" y="639.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.09%)</title><rect x="13.4350%" y="613" width="0.0933%" height="15" fill="rgb(254,2,54)" fg:x="15551" fg:w="108"/><text x="13.6850%" y="623.50"></text></g><g><title>__rg_alloc (108 samples, 0.09%)</title><rect x="13.4350%" y="597" width="0.0933%" height="15" fill="rgb(250,143,38)" fg:x="15551" fg:w="108"/><text x="13.6850%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (108 samples, 0.09%)</title><rect x="13.4350%" y="581" width="0.0933%" height="15" fill="rgb(248,25,0)" fg:x="15551" fg:w="108"/><text x="13.6850%" y="591.50"></text></g><g><title>rust_alloc (100 samples, 0.09%)</title><rect x="13.4419%" y="565" width="0.0864%" height="15" fill="rgb(206,152,27)" fg:x="15559" fg:w="100"/><text x="13.6919%" y="575.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (160 samples, 0.14%)</title><rect x="13.4194%" y="805" width="0.1382%" height="15" fill="rgb(240,77,30)" fg:x="15533" fg:w="160"/><text x="13.6694%" y="815.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (160 samples, 0.14%)</title><rect x="13.4194%" y="789" width="0.1382%" height="15" fill="rgb(231,5,3)" fg:x="15533" fg:w="160"/><text x="13.6694%" y="799.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (156 samples, 0.13%)</title><rect x="13.4229%" y="773" width="0.1348%" height="15" fill="rgb(207,226,32)" fg:x="15537" fg:w="156"/><text x="13.6729%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (156 samples, 0.13%)</title><rect x="13.4229%" y="757" width="0.1348%" height="15" fill="rgb(222,207,47)" fg:x="15537" fg:w="156"/><text x="13.6729%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (156 samples, 0.13%)</title><rect x="13.4229%" y="741" width="0.1348%" height="15" fill="rgb(229,115,45)" fg:x="15537" fg:w="156"/><text x="13.6729%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (156 samples, 0.13%)</title><rect x="13.4229%" y="725" width="0.1348%" height="15" fill="rgb(224,191,6)" fg:x="15537" fg:w="156"/><text x="13.6729%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (156 samples, 0.13%)</title><rect x="13.4229%" y="709" width="0.1348%" height="15" fill="rgb(230,227,24)" fg:x="15537" fg:w="156"/><text x="13.6729%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34 samples, 0.03%)</title><rect x="13.5283%" y="693" width="0.0294%" height="15" fill="rgb(228,80,19)" fg:x="15659" fg:w="34"/><text x="13.7783%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.03%)</title><rect x="13.5326%" y="677" width="0.0251%" height="15" fill="rgb(247,229,0)" fg:x="15664" fg:w="29"/><text x="13.7826%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24 samples, 0.02%)</title><rect x="13.5369%" y="661" width="0.0207%" height="15" fill="rgb(237,194,15)" fg:x="15669" fg:w="24"/><text x="13.7869%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="13.5577%" y="805" width="0.0112%" height="15" fill="rgb(219,203,20)" fg:x="15693" fg:w="13"/><text x="13.8077%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.08%)</title><rect x="13.5844%" y="661" width="0.0803%" height="15" fill="rgb(234,128,8)" fg:x="15724" fg:w="93"/><text x="13.8344%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.08%)</title><rect x="13.5844%" y="645" width="0.0803%" height="15" fill="rgb(248,202,8)" fg:x="15724" fg:w="93"/><text x="13.8344%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="13.5896%" y="629" width="0.0752%" height="15" fill="rgb(206,104,37)" fg:x="15730" fg:w="87"/><text x="13.8396%" y="639.50"></text></g><g><title>snmalloc::FreeListIter::take (77 samples, 0.07%)</title><rect x="13.5983%" y="613" width="0.0665%" height="15" fill="rgb(223,8,27)" fg:x="15740" fg:w="77"/><text x="13.8483%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (77 samples, 0.07%)</title><rect x="13.5983%" y="597" width="0.0665%" height="15" fill="rgb(216,217,28)" fg:x="15740" fg:w="77"/><text x="13.8483%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (107 samples, 0.09%)</title><rect x="13.5749%" y="757" width="0.0924%" height="15" fill="rgb(249,199,1)" fg:x="15713" fg:w="107"/><text x="13.8249%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (107 samples, 0.09%)</title><rect x="13.5749%" y="741" width="0.0924%" height="15" fill="rgb(240,85,17)" fg:x="15713" fg:w="107"/><text x="13.8249%" y="751.50"></text></g><g><title>alloc::alloc::alloc (100 samples, 0.09%)</title><rect x="13.5810%" y="725" width="0.0864%" height="15" fill="rgb(206,108,45)" fg:x="15720" fg:w="100"/><text x="13.8310%" y="735.50"></text></g><g><title>__rg_alloc (100 samples, 0.09%)</title><rect x="13.5810%" y="709" width="0.0864%" height="15" fill="rgb(245,210,41)" fg:x="15720" fg:w="100"/><text x="13.8310%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (100 samples, 0.09%)</title><rect x="13.5810%" y="693" width="0.0864%" height="15" fill="rgb(206,13,37)" fg:x="15720" fg:w="100"/><text x="13.8310%" y="703.50"></text></g><g><title>rust_alloc (100 samples, 0.09%)</title><rect x="13.5810%" y="677" width="0.0864%" height="15" fill="rgb(250,61,18)" fg:x="15720" fg:w="100"/><text x="13.8310%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (128 samples, 0.11%)</title><rect x="13.5689%" y="805" width="0.1106%" height="15" fill="rgb(235,172,48)" fg:x="15706" fg:w="128"/><text x="13.8189%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (122 samples, 0.11%)</title><rect x="13.5741%" y="789" width="0.1054%" height="15" fill="rgb(249,201,17)" fg:x="15712" fg:w="122"/><text x="13.8241%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (121 samples, 0.10%)</title><rect x="13.5749%" y="773" width="0.1045%" height="15" fill="rgb(219,208,6)" fg:x="15713" fg:w="121"/><text x="13.8249%" y="783.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.01%)</title><rect x="13.6674%" y="757" width="0.0121%" height="15" fill="rgb(248,31,23)" fg:x="15820" fg:w="14"/><text x="13.9174%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (14 samples, 0.01%)</title><rect x="13.6674%" y="741" width="0.0121%" height="15" fill="rgb(245,15,42)" fg:x="15820" fg:w="14"/><text x="13.9174%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (14 samples, 0.01%)</title><rect x="13.6674%" y="725" width="0.0121%" height="15" fill="rgb(222,217,39)" fg:x="15820" fg:w="14"/><text x="13.9174%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (309 samples, 0.27%)</title><rect x="13.4194%" y="821" width="0.2670%" height="15" fill="rgb(210,219,27)" fg:x="15533" fg:w="309"/><text x="13.6694%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (375 samples, 0.32%)</title><rect x="13.3788%" y="901" width="0.3240%" height="15" fill="rgb(252,166,36)" fg:x="15486" fg:w="375"/><text x="13.6288%" y="911.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (328 samples, 0.28%)</title><rect x="13.4194%" y="885" width="0.2834%" height="15" fill="rgb(245,132,34)" fg:x="15533" fg:w="328"/><text x="13.6694%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (328 samples, 0.28%)</title><rect x="13.4194%" y="869" width="0.2834%" height="15" fill="rgb(236,54,3)" fg:x="15533" fg:w="328"/><text x="13.6694%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (328 samples, 0.28%)</title><rect x="13.4194%" y="853" width="0.2834%" height="15" fill="rgb(241,173,43)" fg:x="15533" fg:w="328"/><text x="13.6694%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (328 samples, 0.28%)</title><rect x="13.4194%" y="837" width="0.2834%" height="15" fill="rgb(215,190,9)" fg:x="15533" fg:w="328"/><text x="13.6694%" y="847.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (19 samples, 0.02%)</title><rect x="13.6864%" y="821" width="0.0164%" height="15" fill="rgb(242,101,16)" fg:x="15842" fg:w="19"/><text x="13.9364%" y="831.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,255 samples, 1.08%)</title><rect x="12.6255%" y="917" width="1.0842%" height="15" fill="rgb(223,190,21)" fg:x="14614" fg:w="1255"/><text x="12.8755%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (179 samples, 0.15%)</title><rect x="13.7097%" y="917" width="0.1546%" height="15" fill="rgb(215,228,25)" fg:x="15869" fg:w="179"/><text x="13.9597%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (16 samples, 0.01%)</title><rect x="13.8644%" y="917" width="0.0138%" height="15" fill="rgb(225,36,22)" fg:x="16048" fg:w="16"/><text x="14.1144%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.01%)</title><rect x="13.8644%" y="901" width="0.0138%" height="15" fill="rgb(251,106,46)" fg:x="16048" fg:w="16"/><text x="14.1144%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.01%)</title><rect x="13.8670%" y="885" width="0.0112%" height="15" fill="rgb(208,90,1)" fg:x="16051" fg:w="13"/><text x="14.1170%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (380 samples, 0.33%)</title><rect x="13.8782%" y="917" width="0.3283%" height="15" fill="rgb(243,10,4)" fg:x="16064" fg:w="380"/><text x="14.1282%" y="927.50"></text></g><g><title>core::ptr::write (354 samples, 0.31%)</title><rect x="13.9006%" y="901" width="0.3058%" height="15" fill="rgb(212,137,27)" fg:x="16090" fg:w="354"/><text x="14.1506%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (347 samples, 0.30%)</title><rect x="13.9067%" y="885" width="0.2998%" height="15" fill="rgb(231,220,49)" fg:x="16097" fg:w="347"/><text x="14.1567%" y="895.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (13 samples, 0.01%)</title><rect x="14.2479%" y="677" width="0.0112%" height="15" fill="rgb(237,96,20)" fg:x="16492" fg:w="13"/><text x="14.4979%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (12 samples, 0.01%)</title><rect x="14.2488%" y="661" width="0.0104%" height="15" fill="rgb(239,229,30)" fg:x="16493" fg:w="12"/><text x="14.4988%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="14.2488%" y="645" width="0.0104%" height="15" fill="rgb(219,65,33)" fg:x="16493" fg:w="12"/><text x="14.4988%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::take (25 samples, 0.02%)</title><rect x="14.2592%" y="677" width="0.0216%" height="15" fill="rgb(243,134,7)" fg:x="16505" fg:w="25"/><text x="14.5092%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (25 samples, 0.02%)</title><rect x="14.2592%" y="661" width="0.0216%" height="15" fill="rgb(216,177,54)" fg:x="16505" fg:w="25"/><text x="14.5092%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="14.2428%" y="709" width="0.0397%" height="15" fill="rgb(211,160,20)" fg:x="16486" fg:w="46"/><text x="14.4928%" y="719.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (41 samples, 0.04%)</title><rect x="14.2471%" y="693" width="0.0354%" height="15" fill="rgb(239,85,39)" fg:x="16491" fg:w="41"/><text x="14.4971%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="14.2825%" y="709" width="0.0181%" height="15" fill="rgb(232,125,22)" fg:x="16532" fg:w="21"/><text x="14.5325%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="14.2842%" y="693" width="0.0164%" height="15" fill="rgb(244,57,34)" fg:x="16534" fg:w="19"/><text x="14.5342%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="14.2860%" y="677" width="0.0147%" height="15" fill="rgb(214,203,32)" fg:x="16536" fg:w="17"/><text x="14.5360%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="14.2894%" y="661" width="0.0112%" height="15" fill="rgb(207,58,43)" fg:x="16540" fg:w="13"/><text x="14.5394%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (286 samples, 0.25%)</title><rect x="14.2108%" y="853" width="0.2471%" height="15" fill="rgb(215,193,15)" fg:x="16449" fg:w="286"/><text x="14.4608%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (286 samples, 0.25%)</title><rect x="14.2108%" y="837" width="0.2471%" height="15" fill="rgb(232,15,44)" fg:x="16449" fg:w="286"/><text x="14.4608%" y="847.50"></text></g><g><title>alloc::alloc::alloc (279 samples, 0.24%)</title><rect x="14.2168%" y="821" width="0.2410%" height="15" fill="rgb(212,3,48)" fg:x="16456" fg:w="279"/><text x="14.4668%" y="831.50"></text></g><g><title>__rg_alloc (279 samples, 0.24%)</title><rect x="14.2168%" y="805" width="0.2410%" height="15" fill="rgb(218,128,7)" fg:x="16456" fg:w="279"/><text x="14.4668%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (279 samples, 0.24%)</title><rect x="14.2168%" y="789" width="0.2410%" height="15" fill="rgb(226,216,39)" fg:x="16456" fg:w="279"/><text x="14.4668%" y="799.50"></text></g><g><title>rust_alloc (279 samples, 0.24%)</title><rect x="14.2168%" y="773" width="0.2410%" height="15" fill="rgb(243,47,51)" fg:x="16456" fg:w="279"/><text x="14.4668%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (274 samples, 0.24%)</title><rect x="14.2212%" y="757" width="0.2367%" height="15" fill="rgb(241,183,40)" fg:x="16461" fg:w="274"/><text x="14.4712%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (274 samples, 0.24%)</title><rect x="14.2212%" y="741" width="0.2367%" height="15" fill="rgb(231,217,32)" fg:x="16461" fg:w="274"/><text x="14.4712%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (264 samples, 0.23%)</title><rect x="14.2298%" y="725" width="0.2281%" height="15" fill="rgb(229,61,38)" fg:x="16471" fg:w="264"/><text x="14.4798%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::take (177 samples, 0.15%)</title><rect x="14.3050%" y="709" width="0.1529%" height="15" fill="rgb(225,210,5)" fg:x="16558" fg:w="177"/><text x="14.5550%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (177 samples, 0.15%)</title><rect x="14.3050%" y="693" width="0.1529%" height="15" fill="rgb(231,79,45)" fg:x="16558" fg:w="177"/><text x="14.5550%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (305 samples, 0.26%)</title><rect x="14.2108%" y="869" width="0.2635%" height="15" fill="rgb(224,100,7)" fg:x="16449" fg:w="305"/><text x="14.4608%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (320 samples, 0.28%)</title><rect x="14.2065%" y="917" width="0.2765%" height="15" fill="rgb(241,198,18)" fg:x="16444" fg:w="320"/><text x="14.4565%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (320 samples, 0.28%)</title><rect x="14.2065%" y="901" width="0.2765%" height="15" fill="rgb(252,97,53)" fg:x="16444" fg:w="320"/><text x="14.4565%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (315 samples, 0.27%)</title><rect x="14.2108%" y="885" width="0.2721%" height="15" fill="rgb(220,88,7)" fg:x="16449" fg:w="315"/><text x="14.4608%" y="895.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="14.4959%" y="661" width="0.0104%" height="15" fill="rgb(213,176,14)" fg:x="16779" fg:w="12"/><text x="14.7459%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="14.5339%" y="613" width="0.0285%" height="15" fill="rgb(246,73,7)" fg:x="16823" fg:w="33"/><text x="14.7839%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (28 samples, 0.02%)</title><rect x="14.5382%" y="597" width="0.0242%" height="15" fill="rgb(245,64,36)" fg:x="16828" fg:w="28"/><text x="14.7882%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (69 samples, 0.06%)</title><rect x="14.5089%" y="661" width="0.0596%" height="15" fill="rgb(245,80,10)" fg:x="16794" fg:w="69"/><text x="14.7589%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (69 samples, 0.06%)</title><rect x="14.5089%" y="645" width="0.0596%" height="15" fill="rgb(232,107,50)" fg:x="16794" fg:w="69"/><text x="14.7589%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (68 samples, 0.06%)</title><rect x="14.5097%" y="629" width="0.0587%" height="15" fill="rgb(253,3,0)" fg:x="16795" fg:w="68"/><text x="14.7597%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (94 samples, 0.08%)</title><rect x="14.4959%" y="693" width="0.0812%" height="15" fill="rgb(212,99,53)" fg:x="16779" fg:w="94"/><text x="14.7459%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (94 samples, 0.08%)</title><rect x="14.4959%" y="677" width="0.0812%" height="15" fill="rgb(249,111,54)" fg:x="16779" fg:w="94"/><text x="14.7459%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (99 samples, 0.09%)</title><rect x="14.4959%" y="725" width="0.0855%" height="15" fill="rgb(249,55,30)" fg:x="16779" fg:w="99"/><text x="14.7459%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (99 samples, 0.09%)</title><rect x="14.4959%" y="709" width="0.0855%" height="15" fill="rgb(237,47,42)" fg:x="16779" fg:w="99"/><text x="14.7459%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (119 samples, 0.10%)</title><rect x="14.4881%" y="741" width="0.1028%" height="15" fill="rgb(211,20,18)" fg:x="16770" fg:w="119"/><text x="14.7381%" y="751.50"></text></g><g><title>rust_dealloc (131 samples, 0.11%)</title><rect x="14.4847%" y="757" width="0.1132%" height="15" fill="rgb(231,203,46)" fg:x="16766" fg:w="131"/><text x="14.7347%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (134 samples, 0.12%)</title><rect x="14.4829%" y="821" width="0.1158%" height="15" fill="rgb(237,142,3)" fg:x="16764" fg:w="134"/><text x="14.7329%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (134 samples, 0.12%)</title><rect x="14.4829%" y="805" width="0.1158%" height="15" fill="rgb(241,107,1)" fg:x="16764" fg:w="134"/><text x="14.7329%" y="815.50"></text></g><g><title>__rg_dealloc (134 samples, 0.12%)</title><rect x="14.4829%" y="789" width="0.1158%" height="15" fill="rgb(229,83,13)" fg:x="16764" fg:w="134"/><text x="14.7329%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (134 samples, 0.12%)</title><rect x="14.4829%" y="773" width="0.1158%" height="15" fill="rgb(241,91,40)" fg:x="16764" fg:w="134"/><text x="14.7329%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (145 samples, 0.13%)</title><rect x="14.4829%" y="885" width="0.1253%" height="15" fill="rgb(225,3,45)" fg:x="16764" fg:w="145"/><text x="14.7329%" y="895.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.13%)</title><rect x="14.4829%" y="869" width="0.1253%" height="15" fill="rgb(244,223,14)" fg:x="16764" fg:w="145"/><text x="14.7329%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (145 samples, 0.13%)</title><rect x="14.4829%" y="853" width="0.1253%" height="15" fill="rgb(224,124,37)" fg:x="16764" fg:w="145"/><text x="14.7329%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.13%)</title><rect x="14.4829%" y="837" width="0.1253%" height="15" fill="rgb(251,171,30)" fg:x="16764" fg:w="145"/><text x="14.7329%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.13%)</title><rect x="14.4829%" y="901" width="0.1305%" height="15" fill="rgb(236,46,54)" fg:x="16764" fg:w="151"/><text x="14.7329%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (152 samples, 0.13%)</title><rect x="14.4829%" y="917" width="0.1313%" height="15" fill="rgb(245,213,5)" fg:x="16764" fg:w="152"/><text x="14.7329%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="14.6255%" y="757" width="0.0130%" height="15" fill="rgb(230,144,27)" fg:x="16929" fg:w="15"/><text x="14.8755%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="14.6255%" y="741" width="0.0130%" height="15" fill="rgb(220,86,6)" fg:x="16929" fg:w="15"/><text x="14.8755%" y="751.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="14.6255%" y="725" width="0.0130%" height="15" fill="rgb(240,20,13)" fg:x="16929" fg:w="15"/><text x="14.8755%" y="735.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="14.6255%" y="709" width="0.0130%" height="15" fill="rgb(217,89,34)" fg:x="16929" fg:w="15"/><text x="14.8755%" y="719.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (30 samples, 0.03%)</title><rect x="14.6212%" y="853" width="0.0259%" height="15" fill="rgb(229,13,5)" fg:x="16924" fg:w="30"/><text x="14.8712%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (30 samples, 0.03%)</title><rect x="14.6212%" y="837" width="0.0259%" height="15" fill="rgb(244,67,35)" fg:x="16924" fg:w="30"/><text x="14.8712%" y="847.50"></text></g><g><title>core::mem::drop (25 samples, 0.02%)</title><rect x="14.6255%" y="821" width="0.0216%" height="15" fill="rgb(221,40,2)" fg:x="16929" fg:w="25"/><text x="14.8755%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (25 samples, 0.02%)</title><rect x="14.6255%" y="805" width="0.0216%" height="15" fill="rgb(237,157,21)" fg:x="16929" fg:w="25"/><text x="14.8755%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (25 samples, 0.02%)</title><rect x="14.6255%" y="789" width="0.0216%" height="15" fill="rgb(222,94,11)" fg:x="16929" fg:w="25"/><text x="14.8755%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="14.6255%" y="773" width="0.0216%" height="15" fill="rgb(249,113,6)" fg:x="16929" fg:w="25"/><text x="14.8755%" y="783.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (35 samples, 0.03%)</title><rect x="14.7240%" y="709" width="0.0302%" height="15" fill="rgb(238,137,36)" fg:x="17043" fg:w="35"/><text x="14.9740%" y="719.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="14.7274%" y="693" width="0.0268%" height="15" fill="rgb(210,102,26)" fg:x="17047" fg:w="31"/><text x="14.9774%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (82 samples, 0.07%)</title><rect x="14.6981%" y="757" width="0.0708%" height="15" fill="rgb(218,30,30)" fg:x="17013" fg:w="82"/><text x="14.9481%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (82 samples, 0.07%)</title><rect x="14.6981%" y="741" width="0.0708%" height="15" fill="rgb(214,67,26)" fg:x="17013" fg:w="82"/><text x="14.9481%" y="751.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (82 samples, 0.07%)</title><rect x="14.6981%" y="725" width="0.0708%" height="15" fill="rgb(251,9,53)" fg:x="17013" fg:w="82"/><text x="14.9481%" y="735.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.01%)</title><rect x="14.7542%" y="709" width="0.0147%" height="15" fill="rgb(228,204,25)" fg:x="17078" fg:w="17"/><text x="15.0042%" y="719.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.01%)</title><rect x="14.7542%" y="693" width="0.0147%" height="15" fill="rgb(207,153,8)" fg:x="17078" fg:w="17"/><text x="15.0042%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (132 samples, 0.11%)</title><rect x="14.6765%" y="789" width="0.1140%" height="15" fill="rgb(242,9,16)" fg:x="16988" fg:w="132"/><text x="14.9265%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (132 samples, 0.11%)</title><rect x="14.6765%" y="773" width="0.1140%" height="15" fill="rgb(217,211,10)" fg:x="16988" fg:w="132"/><text x="14.9265%" y="783.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (25 samples, 0.02%)</title><rect x="14.7689%" y="757" width="0.0216%" height="15" fill="rgb(219,228,52)" fg:x="17095" fg:w="25"/><text x="15.0189%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (138 samples, 0.12%)</title><rect x="14.6765%" y="821" width="0.1192%" height="15" fill="rgb(231,92,29)" fg:x="16988" fg:w="138"/><text x="14.9265%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (138 samples, 0.12%)</title><rect x="14.6765%" y="805" width="0.1192%" height="15" fill="rgb(232,8,23)" fg:x="16988" fg:w="138"/><text x="14.9265%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (157 samples, 0.14%)</title><rect x="14.6670%" y="837" width="0.1356%" height="15" fill="rgb(216,211,34)" fg:x="16977" fg:w="157"/><text x="14.9170%" y="847.50"></text></g><g><title>rust_dealloc (183 samples, 0.16%)</title><rect x="14.6479%" y="853" width="0.1581%" height="15" fill="rgb(236,151,0)" fg:x="16955" fg:w="183"/><text x="14.8979%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (228 samples, 0.20%)</title><rect x="14.6143%" y="901" width="0.1970%" height="15" fill="rgb(209,168,3)" fg:x="16916" fg:w="228"/><text x="14.8643%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (228 samples, 0.20%)</title><rect x="14.6143%" y="885" width="0.1970%" height="15" fill="rgb(208,129,28)" fg:x="16916" fg:w="228"/><text x="14.8643%" y="895.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (228 samples, 0.20%)</title><rect x="14.6143%" y="869" width="0.1970%" height="15" fill="rgb(229,78,22)" fg:x="16916" fg:w="228"/><text x="14.8643%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (18 samples, 0.02%)</title><rect x="14.8207%" y="837" width="0.0156%" height="15" fill="rgb(228,187,13)" fg:x="17155" fg:w="18"/><text x="15.0707%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (18 samples, 0.02%)</title><rect x="14.8207%" y="821" width="0.0156%" height="15" fill="rgb(240,119,24)" fg:x="17155" fg:w="18"/><text x="15.0707%" y="831.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (21 samples, 0.02%)</title><rect x="14.8596%" y="725" width="0.0181%" height="15" fill="rgb(209,194,42)" fg:x="17200" fg:w="21"/><text x="15.1096%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (21 samples, 0.02%)</title><rect x="14.8596%" y="709" width="0.0181%" height="15" fill="rgb(247,200,46)" fg:x="17200" fg:w="21"/><text x="15.1096%" y="719.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="14.8657%" y="693" width="0.0121%" height="15" fill="rgb(218,76,16)" fg:x="17207" fg:w="14"/><text x="15.1157%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="14.8657%" y="677" width="0.0121%" height="15" fill="rgb(225,21,48)" fg:x="17207" fg:w="14"/><text x="15.1157%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="14.8657%" y="661" width="0.0121%" height="15" fill="rgb(239,223,50)" fg:x="17207" fg:w="14"/><text x="15.1157%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="14.8657%" y="645" width="0.0121%" height="15" fill="rgb(244,45,21)" fg:x="17207" fg:w="14"/><text x="15.1157%" y="655.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="14.8950%" y="629" width="0.0104%" height="15" fill="rgb(232,33,43)" fg:x="17241" fg:w="12"/><text x="15.1450%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="14.9261%" y="581" width="0.0199%" height="15" fill="rgb(209,8,3)" fg:x="17277" fg:w="23"/><text x="15.1761%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="14.9279%" y="565" width="0.0181%" height="15" fill="rgb(214,25,53)" fg:x="17279" fg:w="21"/><text x="15.1779%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (55 samples, 0.05%)</title><rect x="14.9080%" y="629" width="0.0475%" height="15" fill="rgb(254,186,54)" fg:x="17256" fg:w="55"/><text x="15.1580%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (55 samples, 0.05%)</title><rect x="14.9080%" y="613" width="0.0475%" height="15" fill="rgb(208,174,49)" fg:x="17256" fg:w="55"/><text x="15.1580%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (54 samples, 0.05%)</title><rect x="14.9089%" y="597" width="0.0467%" height="15" fill="rgb(233,191,51)" fg:x="17257" fg:w="54"/><text x="15.1589%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (78 samples, 0.07%)</title><rect x="14.8933%" y="661" width="0.0674%" height="15" fill="rgb(222,134,10)" fg:x="17239" fg:w="78"/><text x="15.1433%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (78 samples, 0.07%)</title><rect x="14.8933%" y="645" width="0.0674%" height="15" fill="rgb(230,226,20)" fg:x="17239" fg:w="78"/><text x="15.1433%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (84 samples, 0.07%)</title><rect x="14.8933%" y="693" width="0.0726%" height="15" fill="rgb(251,111,25)" fg:x="17239" fg:w="84"/><text x="15.1433%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (84 samples, 0.07%)</title><rect x="14.8933%" y="677" width="0.0726%" height="15" fill="rgb(224,40,46)" fg:x="17239" fg:w="84"/><text x="15.1433%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (100 samples, 0.09%)</title><rect x="14.8838%" y="709" width="0.0864%" height="15" fill="rgb(236,108,47)" fg:x="17228" fg:w="100"/><text x="15.1338%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (159 samples, 0.14%)</title><rect x="14.8363%" y="805" width="0.1374%" height="15" fill="rgb(234,93,0)" fg:x="17173" fg:w="159"/><text x="15.0863%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (155 samples, 0.13%)</title><rect x="14.8397%" y="789" width="0.1339%" height="15" fill="rgb(224,213,32)" fg:x="17177" fg:w="155"/><text x="15.0897%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (144 samples, 0.12%)</title><rect x="14.8492%" y="773" width="0.1244%" height="15" fill="rgb(251,11,48)" fg:x="17188" fg:w="144"/><text x="15.0992%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (144 samples, 0.12%)</title><rect x="14.8492%" y="757" width="0.1244%" height="15" fill="rgb(236,173,5)" fg:x="17188" fg:w="144"/><text x="15.0992%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (144 samples, 0.12%)</title><rect x="14.8492%" y="741" width="0.1244%" height="15" fill="rgb(230,95,12)" fg:x="17188" fg:w="144"/><text x="15.0992%" y="751.50"></text></g><g><title>rust_dealloc (111 samples, 0.10%)</title><rect x="14.8778%" y="725" width="0.0959%" height="15" fill="rgb(232,209,1)" fg:x="17221" fg:w="111"/><text x="15.1278%" y="735.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (203 samples, 0.18%)</title><rect x="14.8112%" y="869" width="0.1754%" height="15" fill="rgb(232,6,1)" fg:x="17144" fg:w="203"/><text x="15.0612%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (200 samples, 0.17%)</title><rect x="14.8138%" y="853" width="0.1728%" height="15" fill="rgb(210,224,50)" fg:x="17147" fg:w="200"/><text x="15.0638%" y="863.50"></text></g><g><title>core::mem::drop (174 samples, 0.15%)</title><rect x="14.8363%" y="837" width="0.1503%" height="15" fill="rgb(228,127,35)" fg:x="17173" fg:w="174"/><text x="15.0863%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (174 samples, 0.15%)</title><rect x="14.8363%" y="821" width="0.1503%" height="15" fill="rgb(245,102,45)" fg:x="17173" fg:w="174"/><text x="15.0863%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;abi_stable::std_types::string::RString&gt;&gt; (15 samples, 0.01%)</title><rect x="14.9737%" y="805" width="0.0130%" height="15" fill="rgb(214,1,49)" fg:x="17332" fg:w="15"/><text x="15.2237%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="14.9737%" y="789" width="0.0130%" height="15" fill="rgb(226,163,40)" fg:x="17332" fg:w="15"/><text x="15.2237%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="14.9737%" y="773" width="0.0130%" height="15" fill="rgb(239,212,28)" fg:x="17332" fg:w="15"/><text x="15.2237%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="14.9737%" y="757" width="0.0130%" height="15" fill="rgb(220,20,13)" fg:x="17332" fg:w="15"/><text x="15.2237%" y="767.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="14.9737%" y="741" width="0.0130%" height="15" fill="rgb(210,164,35)" fg:x="17332" fg:w="15"/><text x="15.2237%" y="751.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="14.9737%" y="725" width="0.0130%" height="15" fill="rgb(248,109,41)" fg:x="17332" fg:w="15"/><text x="15.2237%" y="735.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="15.0324%" y="725" width="0.0121%" height="15" fill="rgb(238,23,50)" fg:x="17400" fg:w="14"/><text x="15.2824%" y="735.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="15.0324%" y="709" width="0.0121%" height="15" fill="rgb(211,48,49)" fg:x="17400" fg:w="14"/><text x="15.2824%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (47 samples, 0.04%)</title><rect x="15.0073%" y="773" width="0.0406%" height="15" fill="rgb(223,36,21)" fg:x="17371" fg:w="47"/><text x="15.2573%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (47 samples, 0.04%)</title><rect x="15.0073%" y="757" width="0.0406%" height="15" fill="rgb(207,123,46)" fg:x="17371" fg:w="47"/><text x="15.2573%" y="767.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (47 samples, 0.04%)</title><rect x="15.0073%" y="741" width="0.0406%" height="15" fill="rgb(240,218,32)" fg:x="17371" fg:w="47"/><text x="15.2573%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (64 samples, 0.06%)</title><rect x="14.9996%" y="805" width="0.0553%" height="15" fill="rgb(252,5,43)" fg:x="17362" fg:w="64"/><text x="15.2496%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (64 samples, 0.06%)</title><rect x="14.9996%" y="789" width="0.0553%" height="15" fill="rgb(252,84,19)" fg:x="17362" fg:w="64"/><text x="15.2496%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (79 samples, 0.07%)</title><rect x="14.9927%" y="853" width="0.0683%" height="15" fill="rgb(243,152,39)" fg:x="17354" fg:w="79"/><text x="15.2427%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (71 samples, 0.06%)</title><rect x="14.9996%" y="837" width="0.0613%" height="15" fill="rgb(234,160,15)" fg:x="17362" fg:w="71"/><text x="15.2496%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (71 samples, 0.06%)</title><rect x="14.9996%" y="821" width="0.0613%" height="15" fill="rgb(237,34,20)" fg:x="17362" fg:w="71"/><text x="15.2496%" y="831.50"></text></g><g><title>rust_dealloc (89 samples, 0.08%)</title><rect x="14.9866%" y="869" width="0.0769%" height="15" fill="rgb(229,97,13)" fg:x="17347" fg:w="89"/><text x="15.2366%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (295 samples, 0.25%)</title><rect x="14.8112%" y="885" width="0.2549%" height="15" fill="rgb(234,71,50)" fg:x="17144" fg:w="295"/><text x="15.0612%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (526 samples, 0.45%)</title><rect x="14.6143%" y="917" width="0.4544%" height="15" fill="rgb(253,155,4)" fg:x="16916" fg:w="526"/><text x="14.8643%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (298 samples, 0.26%)</title><rect x="14.8112%" y="901" width="0.2575%" height="15" fill="rgb(222,185,37)" fg:x="17144" fg:w="298"/><text x="15.0612%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (50 samples, 0.04%)</title><rect x="15.0687%" y="917" width="0.0432%" height="15" fill="rgb(251,177,13)" fg:x="17442" fg:w="50"/><text x="15.3187%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (6,704 samples, 5.79%)</title><rect x="9.3330%" y="981" width="5.7918%" height="15" fill="rgb(250,179,40)" fg:x="10803" fg:w="6704"/><text x="9.5830%" y="991.50">tremor_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,704 samples, 5.79%)</title><rect x="9.3330%" y="965" width="5.7918%" height="15" fill="rgb(242,44,2)" fg:x="10803" fg:w="6704"/><text x="9.5830%" y="975.50">&lt;core::..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (6,571 samples, 5.68%)</title><rect x="9.4479%" y="949" width="5.6769%" height="15" fill="rgb(216,177,13)" fg:x="10936" fg:w="6571"/><text x="9.6979%" y="959.50">tremor_..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,608 samples, 3.12%)</title><rect x="12.0078%" y="933" width="3.1171%" height="15" fill="rgb(216,106,43)" fg:x="13899" fg:w="3608"/><text x="12.2578%" y="943.50">tre..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (156 samples, 0.13%)</title><rect x="15.2562%" y="853" width="0.1348%" height="15" fill="rgb(216,183,2)" fg:x="17659" fg:w="156"/><text x="15.5062%" y="863.50"></text></g><g><title>core::mem::replace (156 samples, 0.13%)</title><rect x="15.2562%" y="837" width="0.1348%" height="15" fill="rgb(249,75,3)" fg:x="17659" fg:w="156"/><text x="15.5062%" y="847.50"></text></g><g><title>core::ptr::read (156 samples, 0.13%)</title><rect x="15.2562%" y="821" width="0.1348%" height="15" fill="rgb(219,67,39)" fg:x="17659" fg:w="156"/><text x="15.5062%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (243 samples, 0.21%)</title><rect x="15.2130%" y="869" width="0.2099%" height="15" fill="rgb(253,228,2)" fg:x="17609" fg:w="243"/><text x="15.4630%" y="879.50"></text></g><g><title>core::mem::drop (37 samples, 0.03%)</title><rect x="15.3909%" y="853" width="0.0320%" height="15" fill="rgb(235,138,27)" fg:x="17815" fg:w="37"/><text x="15.6409%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (37 samples, 0.03%)</title><rect x="15.3909%" y="837" width="0.0320%" height="15" fill="rgb(236,97,51)" fg:x="17815" fg:w="37"/><text x="15.6409%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="15.4229%" y="853" width="0.0130%" height="15" fill="rgb(240,80,30)" fg:x="17852" fg:w="15"/><text x="15.6729%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="15.4497%" y="805" width="0.0130%" height="15" fill="rgb(230,178,19)" fg:x="17883" fg:w="15"/><text x="15.6997%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (233 samples, 0.20%)</title><rect x="15.4626%" y="789" width="0.2013%" height="15" fill="rgb(210,190,27)" fg:x="17898" fg:w="233"/><text x="15.7126%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (285 samples, 0.25%)</title><rect x="15.4229%" y="869" width="0.2462%" height="15" fill="rgb(222,107,31)" fg:x="17852" fg:w="285"/><text x="15.6729%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (270 samples, 0.23%)</title><rect x="15.4359%" y="853" width="0.2333%" height="15" fill="rgb(216,127,34)" fg:x="17867" fg:w="270"/><text x="15.6859%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (270 samples, 0.23%)</title><rect x="15.4359%" y="837" width="0.2333%" height="15" fill="rgb(234,116,52)" fg:x="17867" fg:w="270"/><text x="15.6859%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (254 samples, 0.22%)</title><rect x="15.4497%" y="821" width="0.2194%" height="15" fill="rgb(222,124,15)" fg:x="17883" fg:w="254"/><text x="15.6997%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (239 samples, 0.21%)</title><rect x="15.4626%" y="805" width="0.2065%" height="15" fill="rgb(231,179,28)" fg:x="17898" fg:w="239"/><text x="15.7126%" y="815.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (35 samples, 0.03%)</title><rect x="15.6821%" y="821" width="0.0302%" height="15" fill="rgb(226,93,45)" fg:x="18152" fg:w="35"/><text x="15.9321%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (58 samples, 0.05%)</title><rect x="15.6708%" y="869" width="0.0501%" height="15" fill="rgb(215,8,51)" fg:x="18139" fg:w="58"/><text x="15.9208%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (58 samples, 0.05%)</title><rect x="15.6708%" y="853" width="0.0501%" height="15" fill="rgb(223,106,5)" fg:x="18139" fg:w="58"/><text x="15.9208%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (45 samples, 0.04%)</title><rect x="15.6821%" y="837" width="0.0389%" height="15" fill="rgb(250,191,5)" fg:x="18152" fg:w="45"/><text x="15.9321%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,423 samples, 1.23%)</title><rect x="15.1248%" y="965" width="1.2294%" height="15" fill="rgb(242,132,44)" fg:x="17507" fg:w="1423"/><text x="15.3748%" y="975.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,423 samples, 1.23%)</title><rect x="15.1248%" y="949" width="1.2294%" height="15" fill="rgb(251,152,29)" fg:x="17507" fg:w="1423"/><text x="15.3748%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,423 samples, 1.23%)</title><rect x="15.1248%" y="933" width="1.2294%" height="15" fill="rgb(218,179,5)" fg:x="17507" fg:w="1423"/><text x="15.3748%" y="943.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,423 samples, 1.23%)</title><rect x="15.1248%" y="917" width="1.2294%" height="15" fill="rgb(227,67,19)" fg:x="17507" fg:w="1423"/><text x="15.3748%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,423 samples, 1.23%)</title><rect x="15.1248%" y="901" width="1.2294%" height="15" fill="rgb(233,119,31)" fg:x="17507" fg:w="1423"/><text x="15.3748%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,423 samples, 1.23%)</title><rect x="15.1248%" y="885" width="1.2294%" height="15" fill="rgb(241,120,22)" fg:x="17507" fg:w="1423"/><text x="15.3748%" y="895.50"></text></g><g><title>event_listener::Inner::lock (733 samples, 0.63%)</title><rect x="15.7210%" y="869" width="0.6333%" height="15" fill="rgb(224,102,30)" fg:x="18197" fg:w="733"/><text x="15.9710%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (725 samples, 0.63%)</title><rect x="15.7279%" y="853" width="0.6263%" height="15" fill="rgb(210,164,37)" fg:x="18205" fg:w="725"/><text x="15.9779%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (715 samples, 0.62%)</title><rect x="15.7365%" y="837" width="0.6177%" height="15" fill="rgb(226,191,16)" fg:x="18215" fg:w="715"/><text x="15.9865%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (646 samples, 0.56%)</title><rect x="15.7961%" y="821" width="0.5581%" height="15" fill="rgb(214,40,45)" fg:x="18284" fg:w="646"/><text x="16.0461%" y="831.50"></text></g><g><title>___pthread_mutex_lock (646 samples, 0.56%)</title><rect x="15.7961%" y="805" width="0.5581%" height="15" fill="rgb(244,29,26)" fg:x="18284" fg:w="646"/><text x="16.0461%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="16.3706%" y="917" width="0.0181%" height="15" fill="rgb(216,16,5)" fg:x="18949" fg:w="21"/><text x="16.6206%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (288 samples, 0.25%)</title><rect x="16.3888%" y="917" width="0.2488%" height="15" fill="rgb(249,76,35)" fg:x="18970" fg:w="288"/><text x="16.6388%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (646 samples, 0.56%)</title><rect x="16.7559%" y="901" width="0.5581%" height="15" fill="rgb(207,11,44)" fg:x="19395" fg:w="646"/><text x="17.0059%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (81 samples, 0.07%)</title><rect x="17.3382%" y="837" width="0.0700%" height="15" fill="rgb(228,190,49)" fg:x="20069" fg:w="81"/><text x="17.5882%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (77 samples, 0.07%)</title><rect x="17.3417%" y="821" width="0.0665%" height="15" fill="rgb(214,173,12)" fg:x="20073" fg:w="77"/><text x="17.5917%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.07%)</title><rect x="17.3417%" y="805" width="0.0665%" height="15" fill="rgb(218,26,35)" fg:x="20073" fg:w="77"/><text x="17.5917%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (71 samples, 0.06%)</title><rect x="17.3469%" y="789" width="0.0613%" height="15" fill="rgb(220,200,19)" fg:x="20079" fg:w="71"/><text x="17.5969%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (70 samples, 0.06%)</title><rect x="17.3477%" y="773" width="0.0605%" height="15" fill="rgb(239,95,49)" fg:x="20080" fg:w="70"/><text x="17.5977%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (70 samples, 0.06%)</title><rect x="17.3477%" y="757" width="0.0605%" height="15" fill="rgb(235,85,53)" fg:x="20080" fg:w="70"/><text x="17.5977%" y="767.50"></text></g><g><title>event_listener::Inner::lock (89 samples, 0.08%)</title><rect x="17.4091%" y="837" width="0.0769%" height="15" fill="rgb(233,133,31)" fg:x="20151" fg:w="89"/><text x="17.6591%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (86 samples, 0.07%)</title><rect x="17.4117%" y="821" width="0.0743%" height="15" fill="rgb(218,25,20)" fg:x="20154" fg:w="86"/><text x="17.6617%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (85 samples, 0.07%)</title><rect x="17.4125%" y="805" width="0.0734%" height="15" fill="rgb(252,210,38)" fg:x="20155" fg:w="85"/><text x="17.6625%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (85 samples, 0.07%)</title><rect x="17.4125%" y="789" width="0.0734%" height="15" fill="rgb(242,134,21)" fg:x="20155" fg:w="85"/><text x="17.6625%" y="799.50"></text></g><g><title>___pthread_mutex_lock (85 samples, 0.07%)</title><rect x="17.4125%" y="773" width="0.0734%" height="15" fill="rgb(213,28,48)" fg:x="20155" fg:w="85"/><text x="17.6625%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (210 samples, 0.18%)</title><rect x="17.3235%" y="853" width="0.1814%" height="15" fill="rgb(250,196,2)" fg:x="20052" fg:w="210"/><text x="17.5735%" y="863.50"></text></g><g><title>event_listener::List::remove (16 samples, 0.01%)</title><rect x="17.4911%" y="837" width="0.0138%" height="15" fill="rgb(227,5,17)" fg:x="20246" fg:w="16"/><text x="17.7411%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (243 samples, 0.21%)</title><rect x="17.3149%" y="885" width="0.2099%" height="15" fill="rgb(221,226,24)" fg:x="20042" fg:w="243"/><text x="17.5649%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (233 samples, 0.20%)</title><rect x="17.3235%" y="869" width="0.2013%" height="15" fill="rgb(211,5,48)" fg:x="20052" fg:w="233"/><text x="17.5735%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (23 samples, 0.02%)</title><rect x="17.5050%" y="853" width="0.0199%" height="15" fill="rgb(219,150,6)" fg:x="20262" fg:w="23"/><text x="17.7550%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="17.5050%" y="837" width="0.0199%" height="15" fill="rgb(251,46,16)" fg:x="20262" fg:w="23"/><text x="17.7550%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="17.5050%" y="821" width="0.0199%" height="15" fill="rgb(220,204,40)" fg:x="20262" fg:w="23"/><text x="17.7550%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="17.5050%" y="805" width="0.0199%" height="15" fill="rgb(211,85,2)" fg:x="20262" fg:w="23"/><text x="17.7550%" y="815.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (13,293 samples, 11.48%)</title><rect x="6.0501%" y="1109" width="11.4842%" height="15" fill="rgb(229,17,7)" fg:x="7003" fg:w="13293"/><text x="6.3001%" y="1119.50">async_executor::E..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13,293 samples, 11.48%)</title><rect x="6.0501%" y="1093" width="11.4842%" height="15" fill="rgb(239,72,28)" fg:x="7003" fg:w="13293"/><text x="6.3001%" y="1103.50">&lt;async_std::task:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13,293 samples, 11.48%)</title><rect x="6.0501%" y="1077" width="11.4842%" height="15" fill="rgb(230,47,54)" fg:x="7003" fg:w="13293"/><text x="6.3001%" y="1087.50">async_std::task::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,293 samples, 11.48%)</title><rect x="6.0501%" y="1061" width="11.4842%" height="15" fill="rgb(214,50,8)" fg:x="7003" fg:w="13293"/><text x="6.3001%" y="1071.50">std::thread::loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,293 samples, 11.48%)</title><rect x="6.0501%" y="1045" width="11.4842%" height="15" fill="rgb(216,198,43)" fg:x="7003" fg:w="13293"/><text x="6.3001%" y="1055.50">std::thread::loca..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13,293 samples, 11.48%)</title><rect x="6.0501%" y="1029" width="11.4842%" height="15" fill="rgb(234,20,35)" fg:x="7003" fg:w="13293"/><text x="6.3001%" y="1039.50">async_std::task::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13,293 samples, 11.48%)</title><rect x="6.0501%" y="1013" width="11.4842%" height="15" fill="rgb(254,45,19)" fg:x="7003" fg:w="13293"/><text x="6.3001%" y="1023.50">&lt;async_std::task:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,293 samples, 11.48%)</title><rect x="6.0501%" y="997" width="11.4842%" height="15" fill="rgb(219,14,44)" fg:x="7003" fg:w="13293"/><text x="6.3001%" y="1007.50">&lt;core::future::fr..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,789 samples, 2.41%)</title><rect x="15.1248%" y="981" width="2.4095%" height="15" fill="rgb(217,220,26)" fg:x="17507" fg:w="2789"/><text x="15.3748%" y="991.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,366 samples, 1.18%)</title><rect x="16.3542%" y="965" width="1.1801%" height="15" fill="rgb(213,158,28)" fg:x="18930" fg:w="1366"/><text x="16.6042%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,366 samples, 1.18%)</title><rect x="16.3542%" y="949" width="1.1801%" height="15" fill="rgb(252,51,52)" fg:x="18930" fg:w="1366"/><text x="16.6042%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,366 samples, 1.18%)</title><rect x="16.3542%" y="933" width="1.1801%" height="15" fill="rgb(246,89,16)" fg:x="18930" fg:w="1366"/><text x="16.6042%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,038 samples, 0.90%)</title><rect x="16.6376%" y="917" width="0.8968%" height="15" fill="rgb(216,158,49)" fg:x="19258" fg:w="1038"/><text x="16.8876%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (254 samples, 0.22%)</title><rect x="17.3149%" y="901" width="0.2194%" height="15" fill="rgb(236,107,19)" fg:x="20042" fg:w="254"/><text x="17.5649%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,946 samples, 12.05%)</title><rect x="5.5153%" y="1125" width="12.0484%" height="15" fill="rgb(228,185,30)" fg:x="6384" fg:w="13946"/><text x="5.7653%" y="1135.50">&lt;core::future::fro..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (34 samples, 0.03%)</title><rect x="17.5343%" y="1109" width="0.0294%" height="15" fill="rgb(246,134,8)" fg:x="20296" fg:w="34"/><text x="17.7843%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (34 samples, 0.03%)</title><rect x="17.5343%" y="1093" width="0.0294%" height="15" fill="rgb(214,143,50)" fg:x="20296" fg:w="34"/><text x="17.7843%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (26 samples, 0.02%)</title><rect x="17.5413%" y="1077" width="0.0225%" height="15" fill="rgb(228,75,8)" fg:x="20304" fg:w="26"/><text x="17.7913%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (26 samples, 0.02%)</title><rect x="17.5413%" y="1061" width="0.0225%" height="15" fill="rgb(207,175,4)" fg:x="20304" fg:w="26"/><text x="17.7913%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="17.5413%" y="1045" width="0.0225%" height="15" fill="rgb(205,108,24)" fg:x="20304" fg:w="26"/><text x="17.7913%" y="1055.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (26 samples, 0.02%)</title><rect x="17.5413%" y="1029" width="0.0225%" height="15" fill="rgb(244,120,49)" fg:x="20304" fg:w="26"/><text x="17.7913%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.03%)</title><rect x="17.5637%" y="1125" width="0.0302%" height="15" fill="rgb(223,47,38)" fg:x="20330" fg:w="35"/><text x="17.8137%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.02%)</title><rect x="17.5715%" y="1109" width="0.0225%" height="15" fill="rgb(229,179,11)" fg:x="20339" fg:w="26"/><text x="17.8215%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (25 samples, 0.02%)</title><rect x="17.5724%" y="1093" width="0.0216%" height="15" fill="rgb(231,122,1)" fg:x="20340" fg:w="25"/><text x="17.8224%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="17.5724%" y="1077" width="0.0216%" height="15" fill="rgb(245,119,9)" fg:x="20340" fg:w="25"/><text x="17.8224%" y="1087.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="17.5724%" y="1061" width="0.0216%" height="15" fill="rgb(241,163,25)" fg:x="20340" fg:w="25"/><text x="17.8224%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="17.5940%" y="1125" width="0.0138%" height="15" fill="rgb(217,214,3)" fg:x="20365" fg:w="16"/><text x="17.8440%" y="1135.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (14 samples, 0.01%)</title><rect x="17.6112%" y="1125" width="0.0121%" height="15" fill="rgb(240,86,28)" fg:x="20385" fg:w="14"/><text x="17.8612%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (20 samples, 0.02%)</title><rect x="17.6233%" y="1125" width="0.0173%" height="15" fill="rgb(215,47,9)" fg:x="20399" fg:w="20"/><text x="17.8733%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (33 samples, 0.03%)</title><rect x="17.6475%" y="1125" width="0.0285%" height="15" fill="rgb(252,25,45)" fg:x="20427" fg:w="33"/><text x="17.8975%" y="1135.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (20 samples, 0.02%)</title><rect x="17.6760%" y="1125" width="0.0173%" height="15" fill="rgb(251,164,9)" fg:x="20460" fg:w="20"/><text x="17.9260%" y="1135.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="17.6933%" y="1125" width="0.0173%" height="15" fill="rgb(233,194,0)" fg:x="20480" fg:w="20"/><text x="17.9433%" y="1135.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="17.7106%" y="1125" width="0.0104%" height="15" fill="rgb(249,111,24)" fg:x="20500" fg:w="12"/><text x="17.9606%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="17.7106%" y="1109" width="0.0104%" height="15" fill="rgb(250,223,3)" fg:x="20500" fg:w="12"/><text x="17.9606%" y="1119.50"></text></g><g><title>___pthread_mutex_lock (15 samples, 0.01%)</title><rect x="17.7546%" y="1125" width="0.0130%" height="15" fill="rgb(236,178,37)" fg:x="20551" fg:w="15"/><text x="18.0046%" y="1135.50"></text></g><g><title>__clock_gettime_2 (101 samples, 0.09%)</title><rect x="17.7676%" y="1125" width="0.0873%" height="15" fill="rgb(241,158,50)" fg:x="20566" fg:w="101"/><text x="18.0176%" y="1135.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.03%)</title><rect x="17.8609%" y="1125" width="0.0346%" height="15" fill="rgb(213,121,41)" fg:x="20674" fg:w="40"/><text x="18.1109%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.01%)</title><rect x="17.8963%" y="1125" width="0.0112%" height="15" fill="rgb(240,92,3)" fg:x="20715" fg:w="13"/><text x="18.1463%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;abi_stable::std_types::map::BoxedHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="17.9343%" y="1109" width="0.0138%" height="15" fill="rgb(205,123,3)" fg:x="20759" fg:w="16"/><text x="18.1843%" y="1119.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.01%)</title><rect x="17.9343%" y="1093" width="0.0138%" height="15" fill="rgb(205,97,47)" fg:x="20759" fg:w="16"/><text x="18.1843%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="17.9343%" y="1077" width="0.0138%" height="15" fill="rgb(247,152,14)" fg:x="20759" fg:w="16"/><text x="18.1843%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="17.9343%" y="1061" width="0.0138%" height="15" fill="rgb(248,195,53)" fg:x="20759" fg:w="16"/><text x="18.1843%" y="1071.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="17.9343%" y="1045" width="0.0138%" height="15" fill="rgb(226,201,16)" fg:x="20759" fg:w="16"/><text x="18.1843%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="17.9343%" y="1029" width="0.0138%" height="15" fill="rgb(205,98,0)" fg:x="20759" fg:w="16"/><text x="18.1843%" y="1039.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (36 samples, 0.03%)</title><rect x="17.9222%" y="1125" width="0.0311%" height="15" fill="rgb(214,191,48)" fg:x="20745" fg:w="36"/><text x="18.1722%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (24 samples, 0.02%)</title><rect x="17.9542%" y="1125" width="0.0207%" height="15" fill="rgb(237,112,39)" fg:x="20782" fg:w="24"/><text x="18.2042%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (67 samples, 0.06%)</title><rect x="17.9749%" y="1125" width="0.0579%" height="15" fill="rgb(247,203,27)" fg:x="20806" fg:w="67"/><text x="18.2249%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (16 samples, 0.01%)</title><rect x="18.0190%" y="1109" width="0.0138%" height="15" fill="rgb(235,124,28)" fg:x="20857" fg:w="16"/><text x="18.2690%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.01%)</title><rect x="18.0190%" y="1093" width="0.0138%" height="15" fill="rgb(208,207,46)" fg:x="20857" fg:w="16"/><text x="18.2690%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="18.0190%" y="1077" width="0.0138%" height="15" fill="rgb(234,176,4)" fg:x="20857" fg:w="16"/><text x="18.2690%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="18.0190%" y="1061" width="0.0138%" height="15" fill="rgb(230,133,28)" fg:x="20857" fg:w="16"/><text x="18.2690%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="18.0190%" y="1045" width="0.0138%" height="15" fill="rgb(211,137,40)" fg:x="20857" fg:w="16"/><text x="18.2690%" y="1055.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (47 samples, 0.04%)</title><rect x="18.0328%" y="1125" width="0.0406%" height="15" fill="rgb(254,35,13)" fg:x="20873" fg:w="47"/><text x="18.2828%" y="1135.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (16 samples, 0.01%)</title><rect x="18.0596%" y="1109" width="0.0138%" height="15" fill="rgb(225,49,51)" fg:x="20904" fg:w="16"/><text x="18.3096%" y="1119.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="18.0596%" y="1093" width="0.0138%" height="15" fill="rgb(251,10,15)" fg:x="20904" fg:w="16"/><text x="18.3096%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (21 samples, 0.02%)</title><rect x="18.0734%" y="1125" width="0.0181%" height="15" fill="rgb(228,207,15)" fg:x="20920" fg:w="21"/><text x="18.3234%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (20 samples, 0.02%)</title><rect x="18.0942%" y="1125" width="0.0173%" height="15" fill="rgb(241,99,19)" fg:x="20944" fg:w="20"/><text x="18.3442%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="18.0994%" y="1109" width="0.0121%" height="15" fill="rgb(207,104,49)" fg:x="20950" fg:w="14"/><text x="18.3494%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="18.0994%" y="1093" width="0.0121%" height="15" fill="rgb(234,99,18)" fg:x="20950" fg:w="14"/><text x="18.3494%" y="1103.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (14 samples, 0.01%)</title><rect x="18.0994%" y="1077" width="0.0121%" height="15" fill="rgb(213,191,49)" fg:x="20950" fg:w="14"/><text x="18.3494%" y="1087.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (35 samples, 0.03%)</title><rect x="18.1114%" y="1125" width="0.0302%" height="15" fill="rgb(210,226,19)" fg:x="20964" fg:w="35"/><text x="18.3614%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (18 samples, 0.02%)</title><rect x="18.1261%" y="1109" width="0.0156%" height="15" fill="rgb(229,97,18)" fg:x="20981" fg:w="18"/><text x="18.3761%" y="1119.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (14 samples, 0.01%)</title><rect x="18.1434%" y="1125" width="0.0121%" height="15" fill="rgb(211,167,15)" fg:x="21001" fg:w="14"/><text x="18.3934%" y="1135.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (23 samples, 0.02%)</title><rect x="18.1555%" y="1125" width="0.0199%" height="15" fill="rgb(210,169,34)" fg:x="21015" fg:w="23"/><text x="18.4055%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (37 samples, 0.03%)</title><rect x="18.1840%" y="629" width="0.0320%" height="15" fill="rgb(241,121,31)" fg:x="21048" fg:w="37"/><text x="18.4340%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new (37 samples, 0.03%)</title><rect x="18.1840%" y="613" width="0.0320%" height="15" fill="rgb(232,40,11)" fg:x="21048" fg:w="37"/><text x="18.4340%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (37 samples, 0.03%)</title><rect x="18.1840%" y="597" width="0.0320%" height="15" fill="rgb(205,86,26)" fg:x="21048" fg:w="37"/><text x="18.4340%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.03%)</title><rect x="18.1840%" y="581" width="0.0320%" height="15" fill="rgb(231,126,28)" fg:x="21048" fg:w="37"/><text x="18.4340%" y="591.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (27 samples, 0.02%)</title><rect x="18.1927%" y="565" width="0.0233%" height="15" fill="rgb(219,221,18)" fg:x="21058" fg:w="27"/><text x="18.4427%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.01%)</title><rect x="18.2661%" y="389" width="0.0138%" height="15" fill="rgb(211,40,0)" fg:x="21143" fg:w="16"/><text x="18.5161%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.07%)</title><rect x="18.2497%" y="437" width="0.0708%" height="15" fill="rgb(239,85,43)" fg:x="21124" fg:w="82"/><text x="18.4997%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.07%)</title><rect x="18.2497%" y="421" width="0.0708%" height="15" fill="rgb(231,55,21)" fg:x="21124" fg:w="82"/><text x="18.4997%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (74 samples, 0.06%)</title><rect x="18.2566%" y="405" width="0.0639%" height="15" fill="rgb(225,184,43)" fg:x="21132" fg:w="74"/><text x="18.5066%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (47 samples, 0.04%)</title><rect x="18.2799%" y="389" width="0.0406%" height="15" fill="rgb(251,158,41)" fg:x="21159" fg:w="47"/><text x="18.5299%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (47 samples, 0.04%)</title><rect x="18.2799%" y="373" width="0.0406%" height="15" fill="rgb(234,159,37)" fg:x="21159" fg:w="47"/><text x="18.5299%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (96 samples, 0.08%)</title><rect x="18.2436%" y="549" width="0.0829%" height="15" fill="rgb(216,204,22)" fg:x="21117" fg:w="96"/><text x="18.4936%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.08%)</title><rect x="18.2436%" y="533" width="0.0829%" height="15" fill="rgb(214,17,3)" fg:x="21117" fg:w="96"/><text x="18.4936%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.08%)</title><rect x="18.2436%" y="517" width="0.0829%" height="15" fill="rgb(212,111,17)" fg:x="21117" fg:w="96"/><text x="18.4936%" y="527.50"></text></g><g><title>alloc::alloc::alloc (92 samples, 0.08%)</title><rect x="18.2471%" y="501" width="0.0795%" height="15" fill="rgb(221,157,24)" fg:x="21121" fg:w="92"/><text x="18.4971%" y="511.50"></text></g><g><title>__rg_alloc (92 samples, 0.08%)</title><rect x="18.2471%" y="485" width="0.0795%" height="15" fill="rgb(252,16,13)" fg:x="21121" fg:w="92"/><text x="18.4971%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (92 samples, 0.08%)</title><rect x="18.2471%" y="469" width="0.0795%" height="15" fill="rgb(221,62,2)" fg:x="21121" fg:w="92"/><text x="18.4971%" y="479.50"></text></g><g><title>rust_alloc (92 samples, 0.08%)</title><rect x="18.2471%" y="453" width="0.0795%" height="15" fill="rgb(247,87,22)" fg:x="21121" fg:w="92"/><text x="18.4971%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (166 samples, 0.14%)</title><rect x="18.1840%" y="645" width="0.1434%" height="15" fill="rgb(215,73,9)" fg:x="21048" fg:w="166"/><text x="18.4340%" y="655.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (129 samples, 0.11%)</title><rect x="18.2160%" y="629" width="0.1114%" height="15" fill="rgb(207,175,33)" fg:x="21085" fg:w="129"/><text x="18.4660%" y="639.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (129 samples, 0.11%)</title><rect x="18.2160%" y="613" width="0.1114%" height="15" fill="rgb(243,129,54)" fg:x="21085" fg:w="129"/><text x="18.4660%" y="623.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (121 samples, 0.10%)</title><rect x="18.2229%" y="597" width="0.1045%" height="15" fill="rgb(227,119,45)" fg:x="21093" fg:w="121"/><text x="18.4729%" y="607.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (121 samples, 0.10%)</title><rect x="18.2229%" y="581" width="0.1045%" height="15" fill="rgb(205,109,36)" fg:x="21093" fg:w="121"/><text x="18.4729%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (117 samples, 0.10%)</title><rect x="18.2263%" y="565" width="0.1011%" height="15" fill="rgb(205,6,39)" fg:x="21097" fg:w="117"/><text x="18.4763%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (13 samples, 0.01%)</title><rect x="18.4346%" y="597" width="0.0112%" height="15" fill="rgb(221,32,16)" fg:x="21338" fg:w="13"/><text x="18.6846%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="18.4190%" y="613" width="0.0285%" height="15" fill="rgb(228,144,50)" fg:x="21320" fg:w="33"/><text x="18.6690%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.03%)</title><rect x="18.4147%" y="629" width="0.0346%" height="15" fill="rgb(229,201,53)" fg:x="21315" fg:w="40"/><text x="18.6647%" y="639.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (183 samples, 0.16%)</title><rect x="18.3274%" y="645" width="0.1581%" height="15" fill="rgb(249,153,27)" fg:x="21214" fg:w="183"/><text x="18.5774%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;,&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from::{{closure}}&gt;&gt; (32 samples, 0.03%)</title><rect x="18.4579%" y="629" width="0.0276%" height="15" fill="rgb(227,106,25)" fg:x="21365" fg:w="32"/><text x="18.7079%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (32 samples, 0.03%)</title><rect x="18.4579%" y="613" width="0.0276%" height="15" fill="rgb(230,65,29)" fg:x="21365" fg:w="32"/><text x="18.7079%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="18.4665%" y="597" width="0.0190%" height="15" fill="rgb(221,57,46)" fg:x="21375" fg:w="22"/><text x="18.7165%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (22 samples, 0.02%)</title><rect x="18.4665%" y="581" width="0.0190%" height="15" fill="rgb(229,161,17)" fg:x="21375" fg:w="22"/><text x="18.7165%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (17 samples, 0.01%)</title><rect x="18.4708%" y="565" width="0.0147%" height="15" fill="rgb(222,213,11)" fg:x="21380" fg:w="17"/><text x="18.7208%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (17 samples, 0.01%)</title><rect x="18.4708%" y="549" width="0.0147%" height="15" fill="rgb(235,35,13)" fg:x="21380" fg:w="17"/><text x="18.7208%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (16 samples, 0.01%)</title><rect x="18.4717%" y="533" width="0.0138%" height="15" fill="rgb(233,158,34)" fg:x="21381" fg:w="16"/><text x="18.7217%" y="543.50"></text></g><g><title>core::mem::replace (16 samples, 0.01%)</title><rect x="18.4717%" y="517" width="0.0138%" height="15" fill="rgb(215,151,48)" fg:x="21381" fg:w="16"/><text x="18.7217%" y="527.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (363 samples, 0.31%)</title><rect x="18.1754%" y="693" width="0.3136%" height="15" fill="rgb(229,84,14)" fg:x="21038" fg:w="363"/><text x="18.4254%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (363 samples, 0.31%)</title><rect x="18.1754%" y="677" width="0.3136%" height="15" fill="rgb(229,68,14)" fg:x="21038" fg:w="363"/><text x="18.4254%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (363 samples, 0.31%)</title><rect x="18.1754%" y="661" width="0.3136%" height="15" fill="rgb(243,106,26)" fg:x="21038" fg:w="363"/><text x="18.4254%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (18 samples, 0.02%)</title><rect x="18.9114%" y="421" width="0.0156%" height="15" fill="rgb(206,45,38)" fg:x="21890" fg:w="18"/><text x="19.1614%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (18 samples, 0.02%)</title><rect x="18.9114%" y="405" width="0.0156%" height="15" fill="rgb(226,6,15)" fg:x="21890" fg:w="18"/><text x="19.1614%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (170 samples, 0.15%)</title><rect x="18.8976%" y="469" width="0.1469%" height="15" fill="rgb(232,22,54)" fg:x="21874" fg:w="170"/><text x="19.1476%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (166 samples, 0.14%)</title><rect x="18.9011%" y="453" width="0.1434%" height="15" fill="rgb(229,222,32)" fg:x="21878" fg:w="166"/><text x="19.1511%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (163 samples, 0.14%)</title><rect x="18.9037%" y="437" width="0.1408%" height="15" fill="rgb(228,62,29)" fg:x="21881" fg:w="163"/><text x="19.1537%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (136 samples, 0.12%)</title><rect x="18.9270%" y="421" width="0.1175%" height="15" fill="rgb(251,103,34)" fg:x="21908" fg:w="136"/><text x="19.1770%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (136 samples, 0.12%)</title><rect x="18.9270%" y="405" width="0.1175%" height="15" fill="rgb(233,12,30)" fg:x="21908" fg:w="136"/><text x="19.1770%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (201 samples, 0.17%)</title><rect x="18.8812%" y="613" width="0.1737%" height="15" fill="rgb(238,52,0)" fg:x="21855" fg:w="201"/><text x="19.1312%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (201 samples, 0.17%)</title><rect x="18.8812%" y="597" width="0.1737%" height="15" fill="rgb(223,98,5)" fg:x="21855" fg:w="201"/><text x="19.1312%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (191 samples, 0.17%)</title><rect x="18.8898%" y="581" width="0.1650%" height="15" fill="rgb(228,75,37)" fg:x="21865" fg:w="191"/><text x="19.1398%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (191 samples, 0.17%)</title><rect x="18.8898%" y="565" width="0.1650%" height="15" fill="rgb(205,115,49)" fg:x="21865" fg:w="191"/><text x="19.1398%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (191 samples, 0.17%)</title><rect x="18.8898%" y="549" width="0.1650%" height="15" fill="rgb(250,154,43)" fg:x="21865" fg:w="191"/><text x="19.1398%" y="559.50"></text></g><g><title>alloc::alloc::alloc (191 samples, 0.17%)</title><rect x="18.8898%" y="533" width="0.1650%" height="15" fill="rgb(226,43,29)" fg:x="21865" fg:w="191"/><text x="19.1398%" y="543.50"></text></g><g><title>__rg_alloc (191 samples, 0.17%)</title><rect x="18.8898%" y="517" width="0.1650%" height="15" fill="rgb(249,228,39)" fg:x="21865" fg:w="191"/><text x="19.1398%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (191 samples, 0.17%)</title><rect x="18.8898%" y="501" width="0.1650%" height="15" fill="rgb(216,79,43)" fg:x="21865" fg:w="191"/><text x="19.1398%" y="511.50"></text></g><g><title>rust_alloc (183 samples, 0.16%)</title><rect x="18.8968%" y="485" width="0.1581%" height="15" fill="rgb(228,95,12)" fg:x="21873" fg:w="183"/><text x="19.1468%" y="495.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="19.0445%" y="469" width="0.0104%" height="15" fill="rgb(249,221,15)" fg:x="22044" fg:w="12"/><text x="19.2945%" y="479.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="19.1032%" y="405" width="0.0156%" height="15" fill="rgb(233,34,13)" fg:x="22112" fg:w="18"/><text x="19.3532%" y="415.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="19.1032%" y="389" width="0.0156%" height="15" fill="rgb(214,103,39)" fg:x="22112" fg:w="18"/><text x="19.3532%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (70 samples, 0.06%)</title><rect x="19.0661%" y="437" width="0.0605%" height="15" fill="rgb(251,126,39)" fg:x="22069" fg:w="70"/><text x="19.3161%" y="447.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (63 samples, 0.05%)</title><rect x="19.0721%" y="421" width="0.0544%" height="15" fill="rgb(214,216,36)" fg:x="22076" fg:w="63"/><text x="19.3221%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (89 samples, 0.08%)</title><rect x="19.0600%" y="469" width="0.0769%" height="15" fill="rgb(220,221,8)" fg:x="22062" fg:w="89"/><text x="19.3100%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (89 samples, 0.08%)</title><rect x="19.0600%" y="453" width="0.0769%" height="15" fill="rgb(240,216,3)" fg:x="22062" fg:w="89"/><text x="19.3100%" y="463.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="19.1266%" y="437" width="0.0104%" height="15" fill="rgb(232,218,17)" fg:x="22139" fg:w="12"/><text x="19.3766%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (96 samples, 0.08%)</title><rect x="19.0600%" y="501" width="0.0829%" height="15" fill="rgb(229,163,45)" fg:x="22062" fg:w="96"/><text x="19.3100%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (96 samples, 0.08%)</title><rect x="19.0600%" y="485" width="0.0829%" height="15" fill="rgb(231,110,42)" fg:x="22062" fg:w="96"/><text x="19.3100%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (105 samples, 0.09%)</title><rect x="19.0600%" y="517" width="0.0907%" height="15" fill="rgb(208,170,48)" fg:x="22062" fg:w="105"/><text x="19.3100%" y="527.50"></text></g><g><title>alloc::alloc::box_free (117 samples, 0.10%)</title><rect x="19.0549%" y="613" width="0.1011%" height="15" fill="rgb(239,116,25)" fg:x="22056" fg:w="117"/><text x="19.3049%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (117 samples, 0.10%)</title><rect x="19.0549%" y="597" width="0.1011%" height="15" fill="rgb(219,200,50)" fg:x="22056" fg:w="117"/><text x="19.3049%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (117 samples, 0.10%)</title><rect x="19.0549%" y="581" width="0.1011%" height="15" fill="rgb(245,200,0)" fg:x="22056" fg:w="117"/><text x="19.3049%" y="591.50"></text></g><g><title>__rg_dealloc (117 samples, 0.10%)</title><rect x="19.0549%" y="565" width="0.1011%" height="15" fill="rgb(245,119,33)" fg:x="22056" fg:w="117"/><text x="19.3049%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (117 samples, 0.10%)</title><rect x="19.0549%" y="549" width="0.1011%" height="15" fill="rgb(231,125,12)" fg:x="22056" fg:w="117"/><text x="19.3049%" y="559.50"></text></g><g><title>rust_dealloc (116 samples, 0.10%)</title><rect x="19.0557%" y="533" width="0.1002%" height="15" fill="rgb(216,96,41)" fg:x="22057" fg:w="116"/><text x="19.3057%" y="543.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (22 samples, 0.02%)</title><rect x="19.1965%" y="501" width="0.0190%" height="15" fill="rgb(248,43,45)" fg:x="22220" fg:w="22"/><text x="19.4465%" y="511.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="19.2043%" y="485" width="0.0112%" height="15" fill="rgb(217,222,7)" fg:x="22229" fg:w="13"/><text x="19.4543%" y="495.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="19.2052%" y="469" width="0.0104%" height="15" fill="rgb(233,28,6)" fg:x="22230" fg:w="12"/><text x="19.4552%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="19.2052%" y="453" width="0.0104%" height="15" fill="rgb(231,218,15)" fg:x="22230" fg:w="12"/><text x="19.4552%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (36 samples, 0.03%)</title><rect x="19.1940%" y="565" width="0.0311%" height="15" fill="rgb(226,171,48)" fg:x="22217" fg:w="36"/><text x="19.4440%" y="575.50"></text></g><g><title>std::collections::hash::map::RandomState::new (36 samples, 0.03%)</title><rect x="19.1940%" y="549" width="0.0311%" height="15" fill="rgb(235,201,9)" fg:x="22217" fg:w="36"/><text x="19.4440%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.03%)</title><rect x="19.1940%" y="533" width="0.0311%" height="15" fill="rgb(217,80,15)" fg:x="22217" fg:w="36"/><text x="19.4440%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.03%)</title><rect x="19.1940%" y="517" width="0.0311%" height="15" fill="rgb(219,152,8)" fg:x="22217" fg:w="36"/><text x="19.4440%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::empty (14 samples, 0.01%)</title><rect x="19.2795%" y="325" width="0.0121%" height="15" fill="rgb(243,107,38)" fg:x="22316" fg:w="14"/><text x="19.5295%" y="335.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (14 samples, 0.01%)</title><rect x="19.2795%" y="309" width="0.0121%" height="15" fill="rgb(231,17,5)" fg:x="22316" fg:w="14"/><text x="19.5295%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.07%)</title><rect x="19.2553%" y="373" width="0.0734%" height="15" fill="rgb(209,25,54)" fg:x="22288" fg:w="85"/><text x="19.5053%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (81 samples, 0.07%)</title><rect x="19.2587%" y="357" width="0.0700%" height="15" fill="rgb(219,0,2)" fg:x="22292" fg:w="81"/><text x="19.5087%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.06%)</title><rect x="19.2657%" y="341" width="0.0631%" height="15" fill="rgb(246,9,5)" fg:x="22300" fg:w="73"/><text x="19.5157%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::take (43 samples, 0.04%)</title><rect x="19.2916%" y="325" width="0.0371%" height="15" fill="rgb(226,159,4)" fg:x="22330" fg:w="43"/><text x="19.5416%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (43 samples, 0.04%)</title><rect x="19.2916%" y="309" width="0.0371%" height="15" fill="rgb(219,175,34)" fg:x="22330" fg:w="43"/><text x="19.5416%" y="319.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (164 samples, 0.14%)</title><rect x="19.1940%" y="581" width="0.1417%" height="15" fill="rgb(236,10,46)" fg:x="22217" fg:w="164"/><text x="19.4440%" y="591.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (128 samples, 0.11%)</title><rect x="19.2251%" y="565" width="0.1106%" height="15" fill="rgb(240,211,16)" fg:x="22253" fg:w="128"/><text x="19.4751%" y="575.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (128 samples, 0.11%)</title><rect x="19.2251%" y="549" width="0.1106%" height="15" fill="rgb(205,3,43)" fg:x="22253" fg:w="128"/><text x="19.4751%" y="559.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (124 samples, 0.11%)</title><rect x="19.2285%" y="533" width="0.1071%" height="15" fill="rgb(245,7,22)" fg:x="22257" fg:w="124"/><text x="19.4785%" y="543.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (124 samples, 0.11%)</title><rect x="19.2285%" y="517" width="0.1071%" height="15" fill="rgb(239,132,32)" fg:x="22257" fg:w="124"/><text x="19.4785%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (116 samples, 0.10%)</title><rect x="19.2354%" y="501" width="0.1002%" height="15" fill="rgb(228,202,34)" fg:x="22265" fg:w="116"/><text x="19.4854%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (101 samples, 0.09%)</title><rect x="19.2484%" y="485" width="0.0873%" height="15" fill="rgb(254,200,22)" fg:x="22280" fg:w="101"/><text x="19.4984%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.09%)</title><rect x="19.2484%" y="469" width="0.0873%" height="15" fill="rgb(219,10,39)" fg:x="22280" fg:w="101"/><text x="19.4984%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 0.09%)</title><rect x="19.2484%" y="453" width="0.0873%" height="15" fill="rgb(226,210,39)" fg:x="22280" fg:w="101"/><text x="19.4984%" y="463.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.09%)</title><rect x="19.2484%" y="437" width="0.0873%" height="15" fill="rgb(208,219,16)" fg:x="22280" fg:w="101"/><text x="19.4984%" y="447.50"></text></g><g><title>__rg_alloc (101 samples, 0.09%)</title><rect x="19.2484%" y="421" width="0.0873%" height="15" fill="rgb(216,158,51)" fg:x="22280" fg:w="101"/><text x="19.4984%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (101 samples, 0.09%)</title><rect x="19.2484%" y="405" width="0.0873%" height="15" fill="rgb(233,14,44)" fg:x="22280" fg:w="101"/><text x="19.4984%" y="415.50"></text></g><g><title>rust_alloc (96 samples, 0.08%)</title><rect x="19.2527%" y="389" width="0.0829%" height="15" fill="rgb(237,97,39)" fg:x="22285" fg:w="96"/><text x="19.5027%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="19.3935%" y="565" width="0.0268%" height="15" fill="rgb(218,198,43)" fg:x="22448" fg:w="31"/><text x="19.6435%" y="575.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="19.4030%" y="549" width="0.0173%" height="15" fill="rgb(231,104,20)" fg:x="22459" fg:w="20"/><text x="19.6530%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (31 samples, 0.03%)</title><rect x="19.4454%" y="533" width="0.0268%" height="15" fill="rgb(254,36,13)" fg:x="22508" fg:w="31"/><text x="19.6954%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (31 samples, 0.03%)</title><rect x="19.4454%" y="517" width="0.0268%" height="15" fill="rgb(248,14,50)" fg:x="22508" fg:w="31"/><text x="19.6954%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (61 samples, 0.05%)</title><rect x="19.4203%" y="565" width="0.0527%" height="15" fill="rgb(217,107,29)" fg:x="22479" fg:w="61"/><text x="19.6703%" y="575.50"></text></g><g><title>&lt;halfbrown::iter::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (61 samples, 0.05%)</title><rect x="19.4203%" y="549" width="0.0527%" height="15" fill="rgb(251,169,33)" fg:x="22479" fg:w="61"/><text x="19.6703%" y="559.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::reserve (56 samples, 0.05%)</title><rect x="19.4730%" y="565" width="0.0484%" height="15" fill="rgb(217,108,32)" fg:x="22540" fg:w="56"/><text x="19.7230%" y="575.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve (56 samples, 0.05%)</title><rect x="19.4730%" y="549" width="0.0484%" height="15" fill="rgb(219,66,42)" fg:x="22540" fg:w="56"/><text x="19.7230%" y="559.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut (56 samples, 0.05%)</title><rect x="19.4730%" y="533" width="0.0484%" height="15" fill="rgb(206,180,7)" fg:x="22540" fg:w="56"/><text x="19.7230%" y="543.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_mut::{{closure}} (56 samples, 0.05%)</title><rect x="19.4730%" y="517" width="0.0484%" height="15" fill="rgb(208,226,31)" fg:x="22540" fg:w="56"/><text x="19.7230%" y="527.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::reserve::{{closure}} (56 samples, 0.05%)</title><rect x="19.4730%" y="501" width="0.0484%" height="15" fill="rgb(218,26,49)" fg:x="22540" fg:w="56"/><text x="19.7230%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::reserve (56 samples, 0.05%)</title><rect x="19.4730%" y="485" width="0.0484%" height="15" fill="rgb(233,197,48)" fg:x="22540" fg:w="56"/><text x="19.7230%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (56 samples, 0.05%)</title><rect x="19.4730%" y="469" width="0.0484%" height="15" fill="rgb(252,181,51)" fg:x="22540" fg:w="56"/><text x="19.7230%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (56 samples, 0.05%)</title><rect x="19.4730%" y="453" width="0.0484%" height="15" fill="rgb(253,90,19)" fg:x="22540" fg:w="56"/><text x="19.7230%" y="463.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (12 samples, 0.01%)</title><rect x="19.5473%" y="485" width="0.0104%" height="15" fill="rgb(215,171,30)" fg:x="22626" fg:w="12"/><text x="19.7973%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (481 samples, 0.42%)</title><rect x="19.1559%" y="613" width="0.4156%" height="15" fill="rgb(214,222,9)" fg:x="22173" fg:w="481"/><text x="19.4059%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (455 samples, 0.39%)</title><rect x="19.1784%" y="597" width="0.3931%" height="15" fill="rgb(223,3,22)" fg:x="22199" fg:w="455"/><text x="19.4284%" y="607.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (273 samples, 0.24%)</title><rect x="19.3356%" y="581" width="0.2359%" height="15" fill="rgb(225,196,46)" fg:x="22381" fg:w="273"/><text x="19.5856%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;halfbrown::iter::IntoIter&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;,&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from::{{closure}}&gt;&gt; (58 samples, 0.05%)</title><rect x="19.5214%" y="565" width="0.0501%" height="15" fill="rgb(209,110,37)" fg:x="22596" fg:w="58"/><text x="19.7714%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIter&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (58 samples, 0.05%)</title><rect x="19.5214%" y="549" width="0.0501%" height="15" fill="rgb(249,89,12)" fg:x="22596" fg:w="58"/><text x="19.7714%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::iter::IntoIterInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (58 samples, 0.05%)</title><rect x="19.5214%" y="533" width="0.0501%" height="15" fill="rgb(226,27,33)" fg:x="22596" fg:w="58"/><text x="19.7714%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (54 samples, 0.05%)</title><rect x="19.5248%" y="517" width="0.0467%" height="15" fill="rgb(213,82,22)" fg:x="22600" fg:w="54"/><text x="19.7748%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="19.5456%" y="501" width="0.0259%" height="15" fill="rgb(248,140,0)" fg:x="22624" fg:w="30"/><text x="19.7956%" y="511.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::HashMap&lt;K,V,S&gt;&gt;::into_iter (30 samples, 0.03%)</title><rect x="19.5715%" y="613" width="0.0259%" height="15" fill="rgb(228,106,3)" fg:x="22654" fg:w="30"/><text x="19.8215%" y="623.50"></text></g><g><title>halfbrown::vecmap::iter::&lt;impl core::iter::traits::collect::IntoIterator for halfbrown::vecmap::VecMap&lt;K,V,S&gt;&gt;::into_iter (26 samples, 0.02%)</title><rect x="19.5749%" y="597" width="0.0225%" height="15" fill="rgb(209,23,37)" fg:x="22658" fg:w="26"/><text x="19.8249%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (26 samples, 0.02%)</title><rect x="19.5749%" y="581" width="0.0225%" height="15" fill="rgb(241,93,50)" fg:x="22658" fg:w="26"/><text x="19.8249%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (26 samples, 0.02%)</title><rect x="19.5749%" y="565" width="0.0225%" height="15" fill="rgb(253,46,43)" fg:x="22658" fg:w="26"/><text x="19.8249%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (25 samples, 0.02%)</title><rect x="19.5758%" y="549" width="0.0216%" height="15" fill="rgb(226,206,43)" fg:x="22659" fg:w="25"/><text x="19.8258%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,657 samples, 1.43%)</title><rect x="18.1754%" y="741" width="1.4315%" height="15" fill="rgb(217,54,7)" fg:x="21038" fg:w="1657"/><text x="18.4254%" y="751.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (1,657 samples, 1.43%)</title><rect x="18.1754%" y="725" width="1.4315%" height="15" fill="rgb(223,5,52)" fg:x="21038" fg:w="1657"/><text x="18.4254%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,657 samples, 1.43%)</title><rect x="18.1754%" y="709" width="1.4315%" height="15" fill="rgb(206,52,46)" fg:x="21038" fg:w="1657"/><text x="18.4254%" y="719.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (1,294 samples, 1.12%)</title><rect x="18.4890%" y="693" width="1.1179%" height="15" fill="rgb(253,136,11)" fg:x="21401" fg:w="1294"/><text x="18.7390%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,294 samples, 1.12%)</title><rect x="18.4890%" y="677" width="1.1179%" height="15" fill="rgb(208,106,33)" fg:x="21401" fg:w="1294"/><text x="18.7390%" y="687.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (1,294 samples, 1.12%)</title><rect x="18.4890%" y="661" width="1.1179%" height="15" fill="rgb(206,54,4)" fg:x="21401" fg:w="1294"/><text x="18.7390%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,294 samples, 1.12%)</title><rect x="18.4890%" y="645" width="1.1179%" height="15" fill="rgb(213,3,15)" fg:x="21401" fg:w="1294"/><text x="18.7390%" y="655.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (1,294 samples, 1.12%)</title><rect x="18.4890%" y="629" width="1.1179%" height="15" fill="rgb(252,211,39)" fg:x="21401" fg:w="1294"/><text x="18.7390%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="19.6207%" y="517" width="0.0294%" height="15" fill="rgb(223,6,36)" fg:x="22711" fg:w="34"/><text x="19.8707%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (211 samples, 0.18%)</title><rect x="19.8721%" y="501" width="0.1823%" height="15" fill="rgb(252,169,45)" fg:x="23002" fg:w="211"/><text x="20.1221%" y="511.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::convert::From&lt;tremor_value::value::Value&gt;&gt;::from (66 samples, 0.06%)</title><rect x="19.9974%" y="485" width="0.0570%" height="15" fill="rgb(212,48,26)" fg:x="23147" fg:w="66"/><text x="20.2474%" y="495.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="20.0648%" y="485" width="0.0130%" height="15" fill="rgb(251,102,48)" fg:x="23225" fg:w="15"/><text x="20.3148%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (15 samples, 0.01%)</title><rect x="20.0648%" y="469" width="0.0130%" height="15" fill="rgb(243,208,16)" fg:x="23225" fg:w="15"/><text x="20.3148%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="20.0648%" y="453" width="0.0130%" height="15" fill="rgb(219,96,24)" fg:x="23225" fg:w="15"/><text x="20.3148%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (15 samples, 0.01%)</title><rect x="20.0648%" y="437" width="0.0130%" height="15" fill="rgb(219,33,29)" fg:x="23225" fg:w="15"/><text x="20.3148%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="20.0544%" y="501" width="0.0285%" height="15" fill="rgb(223,176,5)" fg:x="23213" fg:w="33"/><text x="20.3044%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="20.0890%" y="501" width="0.0251%" height="15" fill="rgb(228,140,14)" fg:x="23253" fg:w="29"/><text x="20.3390%" y="511.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (66 samples, 0.06%)</title><rect x="20.1140%" y="501" width="0.0570%" height="15" fill="rgb(217,179,31)" fg:x="23282" fg:w="66"/><text x="20.3640%" y="511.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="20.1590%" y="485" width="0.0121%" height="15" fill="rgb(230,9,30)" fg:x="23334" fg:w="14"/><text x="20.4090%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (132 samples, 0.11%)</title><rect x="20.1711%" y="501" width="0.1140%" height="15" fill="rgb(230,136,20)" fg:x="23348" fg:w="132"/><text x="20.4211%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::deref::Deref for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::deref (28 samples, 0.02%)</title><rect x="20.2851%" y="501" width="0.0242%" height="15" fill="rgb(215,210,22)" fg:x="23480" fg:w="28"/><text x="20.5351%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (28 samples, 0.02%)</title><rect x="20.2851%" y="485" width="0.0242%" height="15" fill="rgb(218,43,5)" fg:x="23480" fg:w="28"/><text x="20.5351%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="20.3102%" y="437" width="0.0285%" height="15" fill="rgb(216,11,5)" fg:x="23509" fg:w="33"/><text x="20.5602%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (44 samples, 0.04%)</title><rect x="20.3102%" y="501" width="0.0380%" height="15" fill="rgb(209,82,29)" fg:x="23509" fg:w="44"/><text x="20.5602%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (44 samples, 0.04%)</title><rect x="20.3102%" y="485" width="0.0380%" height="15" fill="rgb(244,115,12)" fg:x="23509" fg:w="44"/><text x="20.5602%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (44 samples, 0.04%)</title><rect x="20.3102%" y="469" width="0.0380%" height="15" fill="rgb(222,82,18)" fg:x="23509" fg:w="44"/><text x="20.5602%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (44 samples, 0.04%)</title><rect x="20.3102%" y="453" width="0.0380%" height="15" fill="rgb(249,227,8)" fg:x="23509" fg:w="44"/><text x="20.5602%" y="463.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (28 samples, 0.02%)</title><rect x="20.4302%" y="197" width="0.0242%" height="15" fill="rgb(253,141,45)" fg:x="23648" fg:w="28"/><text x="20.6802%" y="207.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (25 samples, 0.02%)</title><rect x="20.4328%" y="181" width="0.0216%" height="15" fill="rgb(234,184,4)" fg:x="23651" fg:w="25"/><text x="20.6828%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (73 samples, 0.06%)</title><rect x="20.3965%" y="245" width="0.0631%" height="15" fill="rgb(218,194,23)" fg:x="23609" fg:w="73"/><text x="20.6465%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (73 samples, 0.06%)</title><rect x="20.3965%" y="229" width="0.0631%" height="15" fill="rgb(235,66,41)" fg:x="23609" fg:w="73"/><text x="20.6465%" y="239.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (66 samples, 0.06%)</title><rect x="20.4026%" y="213" width="0.0570%" height="15" fill="rgb(245,217,1)" fg:x="23616" fg:w="66"/><text x="20.6526%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (85 samples, 0.07%)</title><rect x="20.3931%" y="277" width="0.0734%" height="15" fill="rgb(229,91,1)" fg:x="23605" fg:w="85"/><text x="20.6431%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (85 samples, 0.07%)</title><rect x="20.3931%" y="261" width="0.0734%" height="15" fill="rgb(207,101,30)" fg:x="23605" fg:w="85"/><text x="20.6431%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (93 samples, 0.08%)</title><rect x="20.3931%" y="309" width="0.0803%" height="15" fill="rgb(223,82,49)" fg:x="23605" fg:w="93"/><text x="20.6431%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (93 samples, 0.08%)</title><rect x="20.3931%" y="293" width="0.0803%" height="15" fill="rgb(218,167,17)" fg:x="23605" fg:w="93"/><text x="20.6431%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (97 samples, 0.08%)</title><rect x="20.3931%" y="325" width="0.0838%" height="15" fill="rgb(208,103,14)" fg:x="23605" fg:w="97"/><text x="20.6431%" y="335.50"></text></g><g><title>rust_dealloc (110 samples, 0.10%)</title><rect x="20.3853%" y="341" width="0.0950%" height="15" fill="rgb(238,20,8)" fg:x="23596" fg:w="110"/><text x="20.6353%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (30 samples, 0.03%)</title><rect x="20.4821%" y="325" width="0.0259%" height="15" fill="rgb(218,80,54)" fg:x="23708" fg:w="30"/><text x="20.7321%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.15%)</title><rect x="20.3646%" y="405" width="0.1486%" height="15" fill="rgb(240,144,17)" fg:x="23572" fg:w="172"/><text x="20.6146%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::vec::private::RVec&lt;u8&gt;]&gt; (166 samples, 0.14%)</title><rect x="20.3698%" y="389" width="0.1434%" height="15" fill="rgb(245,27,50)" fg:x="23578" fg:w="166"/><text x="20.6198%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (159 samples, 0.14%)</title><rect x="20.3758%" y="373" width="0.1374%" height="15" fill="rgb(251,51,7)" fg:x="23585" fg:w="159"/><text x="20.6258%" y="383.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (159 samples, 0.14%)</title><rect x="20.3758%" y="357" width="0.1374%" height="15" fill="rgb(245,217,29)" fg:x="23585" fg:w="159"/><text x="20.6258%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (38 samples, 0.03%)</title><rect x="20.4803%" y="341" width="0.0328%" height="15" fill="rgb(221,176,29)" fg:x="23706" fg:w="38"/><text x="20.7303%" y="351.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (196 samples, 0.17%)</title><rect x="20.3533%" y="469" width="0.1693%" height="15" fill="rgb(212,180,24)" fg:x="23559" fg:w="196"/><text x="20.6033%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (190 samples, 0.16%)</title><rect x="20.3585%" y="453" width="0.1641%" height="15" fill="rgb(254,24,2)" fg:x="23565" fg:w="190"/><text x="20.6085%" y="463.50"></text></g><g><title>core::mem::drop (183 samples, 0.16%)</title><rect x="20.3646%" y="437" width="0.1581%" height="15" fill="rgb(230,100,2)" fg:x="23572" fg:w="183"/><text x="20.6146%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (183 samples, 0.16%)</title><rect x="20.3646%" y="421" width="0.1581%" height="15" fill="rgb(219,142,25)" fg:x="23572" fg:w="183"/><text x="20.6146%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="20.5425%" y="373" width="0.0130%" height="15" fill="rgb(240,73,43)" fg:x="23778" fg:w="15"/><text x="20.7925%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="20.5425%" y="357" width="0.0130%" height="15" fill="rgb(214,114,15)" fg:x="23778" fg:w="15"/><text x="20.7925%" y="367.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (15 samples, 0.01%)</title><rect x="20.5425%" y="341" width="0.0130%" height="15" fill="rgb(207,130,4)" fg:x="23778" fg:w="15"/><text x="20.7925%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (32 samples, 0.03%)</title><rect x="20.5365%" y="405" width="0.0276%" height="15" fill="rgb(221,25,40)" fg:x="23771" fg:w="32"/><text x="20.7865%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (32 samples, 0.03%)</title><rect x="20.5365%" y="389" width="0.0276%" height="15" fill="rgb(241,184,7)" fg:x="23771" fg:w="32"/><text x="20.7865%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (37 samples, 0.03%)</title><rect x="20.5365%" y="437" width="0.0320%" height="15" fill="rgb(235,159,4)" fg:x="23771" fg:w="37"/><text x="20.7865%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (37 samples, 0.03%)</title><rect x="20.5365%" y="421" width="0.0320%" height="15" fill="rgb(214,87,48)" fg:x="23771" fg:w="37"/><text x="20.7865%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (46 samples, 0.04%)</title><rect x="20.5296%" y="453" width="0.0397%" height="15" fill="rgb(246,198,24)" fg:x="23763" fg:w="46"/><text x="20.7796%" y="463.50"></text></g><g><title>rust_dealloc (54 samples, 0.05%)</title><rect x="20.5235%" y="469" width="0.0467%" height="15" fill="rgb(209,66,40)" fg:x="23756" fg:w="54"/><text x="20.7735%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (258 samples, 0.22%)</title><rect x="20.3482%" y="501" width="0.2229%" height="15" fill="rgb(233,147,39)" fg:x="23553" fg:w="258"/><text x="20.5982%" y="511.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (258 samples, 0.22%)</title><rect x="20.3482%" y="485" width="0.2229%" height="15" fill="rgb(231,145,52)" fg:x="23553" fg:w="258"/><text x="20.5982%" y="495.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (25 samples, 0.02%)</title><rect x="20.5875%" y="405" width="0.0216%" height="15" fill="rgb(206,20,26)" fg:x="23830" fg:w="25"/><text x="20.8375%" y="415.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (25 samples, 0.02%)</title><rect x="20.5875%" y="389" width="0.0216%" height="15" fill="rgb(238,220,4)" fg:x="23830" fg:w="25"/><text x="20.8375%" y="399.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="20.5918%" y="373" width="0.0173%" height="15" fill="rgb(252,195,42)" fg:x="23835" fg:w="20"/><text x="20.8418%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="20.5918%" y="357" width="0.0173%" height="15" fill="rgb(209,10,6)" fg:x="23835" fg:w="20"/><text x="20.8418%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.02%)</title><rect x="20.5918%" y="341" width="0.0173%" height="15" fill="rgb(229,3,52)" fg:x="23835" fg:w="20"/><text x="20.8418%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="20.5918%" y="325" width="0.0173%" height="15" fill="rgb(253,49,37)" fg:x="23835" fg:w="20"/><text x="20.8418%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="20.5987%" y="309" width="0.0104%" height="15" fill="rgb(240,103,49)" fg:x="23843" fg:w="12"/><text x="20.8487%" y="319.50"></text></g><g><title>snmalloc::Remote::set_info (12 samples, 0.01%)</title><rect x="20.7058%" y="277" width="0.0104%" height="15" fill="rgb(250,182,30)" fg:x="23967" fg:w="12"/><text x="20.9558%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (79 samples, 0.07%)</title><rect x="20.6575%" y="309" width="0.0683%" height="15" fill="rgb(248,8,30)" fg:x="23911" fg:w="79"/><text x="20.9075%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (64 samples, 0.06%)</title><rect x="20.6704%" y="293" width="0.0553%" height="15" fill="rgb(237,120,30)" fg:x="23926" fg:w="64"/><text x="20.9204%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (108 samples, 0.09%)</title><rect x="20.6376%" y="341" width="0.0933%" height="15" fill="rgb(221,146,34)" fg:x="23888" fg:w="108"/><text x="20.8876%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (108 samples, 0.09%)</title><rect x="20.6376%" y="325" width="0.0933%" height="15" fill="rgb(242,55,13)" fg:x="23888" fg:w="108"/><text x="20.8876%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (110 samples, 0.10%)</title><rect x="20.6376%" y="373" width="0.0950%" height="15" fill="rgb(242,112,31)" fg:x="23888" fg:w="110"/><text x="20.8876%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (110 samples, 0.10%)</title><rect x="20.6376%" y="357" width="0.0950%" height="15" fill="rgb(249,192,27)" fg:x="23888" fg:w="110"/><text x="20.8876%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (134 samples, 0.12%)</title><rect x="20.6186%" y="389" width="0.1158%" height="15" fill="rgb(208,204,44)" fg:x="23866" fg:w="134"/><text x="20.8686%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (184 samples, 0.16%)</title><rect x="20.5857%" y="453" width="0.1590%" height="15" fill="rgb(208,93,54)" fg:x="23828" fg:w="184"/><text x="20.8357%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (184 samples, 0.16%)</title><rect x="20.5857%" y="437" width="0.1590%" height="15" fill="rgb(242,1,31)" fg:x="23828" fg:w="184"/><text x="20.8357%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (184 samples, 0.16%)</title><rect x="20.5857%" y="421" width="0.1590%" height="15" fill="rgb(241,83,25)" fg:x="23828" fg:w="184"/><text x="20.8357%" y="431.50"></text></g><g><title>rust_dealloc (157 samples, 0.14%)</title><rect x="20.6091%" y="405" width="0.1356%" height="15" fill="rgb(205,169,50)" fg:x="23855" fg:w="157"/><text x="20.8591%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="20.7343%" y="389" width="0.0104%" height="15" fill="rgb(239,186,37)" fg:x="24000" fg:w="12"/><text x="20.9843%" y="399.50"></text></g><g><title>rust_dealloc (25 samples, 0.02%)</title><rect x="21.0782%" y="181" width="0.0216%" height="15" fill="rgb(205,221,10)" fg:x="24398" fg:w="25"/><text x="21.3282%" y="191.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="21.1516%" y="149" width="0.0130%" height="15" fill="rgb(218,196,15)" fg:x="24483" fg:w="15"/><text x="21.4016%" y="159.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="21.1516%" y="133" width="0.0130%" height="15" fill="rgb(218,196,35)" fg:x="24483" fg:w="15"/><text x="21.4016%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (81 samples, 0.07%)</title><rect x="21.1041%" y="181" width="0.0700%" height="15" fill="rgb(233,63,24)" fg:x="24428" fg:w="81"/><text x="21.3541%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (72 samples, 0.06%)</title><rect x="21.1119%" y="165" width="0.0622%" height="15" fill="rgb(225,8,4)" fg:x="24437" fg:w="72"/><text x="21.3619%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (126 samples, 0.11%)</title><rect x="21.0773%" y="213" width="0.1089%" height="15" fill="rgb(234,105,35)" fg:x="24397" fg:w="126"/><text x="21.3273%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (126 samples, 0.11%)</title><rect x="21.0773%" y="197" width="0.1089%" height="15" fill="rgb(236,21,32)" fg:x="24397" fg:w="126"/><text x="21.3273%" y="207.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="21.1741%" y="181" width="0.0121%" height="15" fill="rgb(228,109,6)" fg:x="24509" fg:w="14"/><text x="21.4241%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (128 samples, 0.11%)</title><rect x="21.0773%" y="245" width="0.1106%" height="15" fill="rgb(229,215,31)" fg:x="24397" fg:w="128"/><text x="21.3273%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (128 samples, 0.11%)</title><rect x="21.0773%" y="229" width="0.1106%" height="15" fill="rgb(221,52,54)" fg:x="24397" fg:w="128"/><text x="21.3273%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (145 samples, 0.13%)</title><rect x="21.0678%" y="261" width="0.1253%" height="15" fill="rgb(252,129,43)" fg:x="24386" fg:w="145"/><text x="21.3178%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (503 samples, 0.43%)</title><rect x="20.7620%" y="357" width="0.4346%" height="15" fill="rgb(248,183,27)" fg:x="24032" fg:w="503"/><text x="21.0120%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::string::RString]&gt; (500 samples, 0.43%)</title><rect x="20.7646%" y="341" width="0.4320%" height="15" fill="rgb(250,0,22)" fg:x="24035" fg:w="500"/><text x="21.0146%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::string::RString&gt; (486 samples, 0.42%)</title><rect x="20.7767%" y="325" width="0.4199%" height="15" fill="rgb(213,166,10)" fg:x="24049" fg:w="486"/><text x="21.0267%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (486 samples, 0.42%)</title><rect x="20.7767%" y="309" width="0.4199%" height="15" fill="rgb(207,163,36)" fg:x="24049" fg:w="486"/><text x="21.0267%" y="319.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (486 samples, 0.42%)</title><rect x="20.7767%" y="293" width="0.4199%" height="15" fill="rgb(208,122,22)" fg:x="24049" fg:w="486"/><text x="21.0267%" y="303.50"></text></g><g><title>rust_dealloc (159 samples, 0.14%)</title><rect x="21.0592%" y="277" width="0.1374%" height="15" fill="rgb(207,104,49)" fg:x="24376" fg:w="159"/><text x="21.3092%" y="287.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (528 samples, 0.46%)</title><rect x="20.7473%" y="421" width="0.4562%" height="15" fill="rgb(248,211,50)" fg:x="24015" fg:w="528"/><text x="20.9973%" y="431.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (527 samples, 0.46%)</title><rect x="20.7482%" y="405" width="0.4553%" height="15" fill="rgb(217,13,45)" fg:x="24016" fg:w="527"/><text x="20.9982%" y="415.50"></text></g><g><title>core::mem::drop (511 samples, 0.44%)</title><rect x="20.7620%" y="389" width="0.4415%" height="15" fill="rgb(211,216,49)" fg:x="24032" fg:w="511"/><text x="21.0120%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::string::RString&gt;&gt; (511 samples, 0.44%)</title><rect x="20.7620%" y="373" width="0.4415%" height="15" fill="rgb(221,58,53)" fg:x="24032" fg:w="511"/><text x="21.0120%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (35 samples, 0.03%)</title><rect x="21.2216%" y="325" width="0.0302%" height="15" fill="rgb(220,112,41)" fg:x="24564" fg:w="35"/><text x="21.4716%" y="335.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (27 samples, 0.02%)</title><rect x="21.2285%" y="309" width="0.0233%" height="15" fill="rgb(236,38,28)" fg:x="24572" fg:w="27"/><text x="21.4785%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (48 samples, 0.04%)</title><rect x="21.2181%" y="357" width="0.0415%" height="15" fill="rgb(227,195,22)" fg:x="24560" fg:w="48"/><text x="21.4681%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (48 samples, 0.04%)</title><rect x="21.2181%" y="341" width="0.0415%" height="15" fill="rgb(214,55,33)" fg:x="24560" fg:w="48"/><text x="21.4681%" y="351.50"></text></g><g><title>rust_dealloc (75 samples, 0.06%)</title><rect x="21.2035%" y="421" width="0.0648%" height="15" fill="rgb(248,80,13)" fg:x="24543" fg:w="75"/><text x="21.4535%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (63 samples, 0.05%)</title><rect x="21.2138%" y="405" width="0.0544%" height="15" fill="rgb(238,52,6)" fg:x="24555" fg:w="63"/><text x="21.4638%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (58 samples, 0.05%)</title><rect x="21.2181%" y="389" width="0.0501%" height="15" fill="rgb(224,198,47)" fg:x="24560" fg:w="58"/><text x="21.4681%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (58 samples, 0.05%)</title><rect x="21.2181%" y="373" width="0.0501%" height="15" fill="rgb(233,171,20)" fg:x="24560" fg:w="58"/><text x="21.4681%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (802 samples, 0.69%)</title><rect x="20.5762%" y="485" width="0.6929%" height="15" fill="rgb(241,30,25)" fg:x="23817" fg:w="802"/><text x="20.8262%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (791 samples, 0.68%)</title><rect x="20.5857%" y="469" width="0.6834%" height="15" fill="rgb(207,171,38)" fg:x="23828" fg:w="791"/><text x="20.8357%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::string::RString&gt;&gt; (607 samples, 0.52%)</title><rect x="20.7447%" y="453" width="0.5244%" height="15" fill="rgb(234,70,1)" fg:x="24012" fg:w="607"/><text x="20.9947%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (607 samples, 0.52%)</title><rect x="20.7447%" y="437" width="0.5244%" height="15" fill="rgb(232,178,18)" fg:x="24012" fg:w="607"/><text x="20.9947%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (18 samples, 0.02%)</title><rect x="21.2691%" y="485" width="0.0156%" height="15" fill="rgb(241,78,40)" fg:x="24619" fg:w="18"/><text x="21.5191%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (18 samples, 0.02%)</title><rect x="21.2691%" y="469" width="0.0156%" height="15" fill="rgb(222,35,25)" fg:x="24619" fg:w="18"/><text x="21.5191%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (18 samples, 0.02%)</title><rect x="21.2691%" y="453" width="0.0156%" height="15" fill="rgb(207,92,16)" fg:x="24619" fg:w="18"/><text x="21.5191%" y="463.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (18 samples, 0.02%)</title><rect x="21.2691%" y="437" width="0.0156%" height="15" fill="rgb(216,59,51)" fg:x="24619" fg:w="18"/><text x="21.5191%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (18 samples, 0.02%)</title><rect x="21.2691%" y="421" width="0.0156%" height="15" fill="rgb(213,80,28)" fg:x="24619" fg:w="18"/><text x="21.5191%" y="431.50"></text></g><g><title>abi_stable::std_types::arc::private::RArc&lt;T&gt;::data (224 samples, 0.19%)</title><rect x="21.3443%" y="309" width="0.1935%" height="15" fill="rgb(220,93,7)" fg:x="24706" fg:w="224"/><text x="21.5943%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="21.5594%" y="181" width="0.0199%" height="15" fill="rgb(225,24,44)" fg:x="24955" fg:w="23"/><text x="21.8094%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="21.5594%" y="165" width="0.0199%" height="15" fill="rgb(243,74,40)" fg:x="24955" fg:w="23"/><text x="21.8094%" y="175.50"></text></g><g><title>__rg_dealloc (23 samples, 0.02%)</title><rect x="21.5594%" y="149" width="0.0199%" height="15" fill="rgb(228,39,7)" fg:x="24955" fg:w="23"/><text x="21.8094%" y="159.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (23 samples, 0.02%)</title><rect x="21.5594%" y="133" width="0.0199%" height="15" fill="rgb(227,79,8)" fg:x="24955" fg:w="23"/><text x="21.8094%" y="143.50"></text></g><g><title>core::mem::drop (380 samples, 0.33%)</title><rect x="21.5585%" y="229" width="0.3283%" height="15" fill="rgb(236,58,11)" fg:x="24954" fg:w="380"/><text x="21.8085%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (380 samples, 0.33%)</title><rect x="21.5585%" y="213" width="0.3283%" height="15" fill="rgb(249,63,35)" fg:x="24954" fg:w="380"/><text x="21.8085%" y="223.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (380 samples, 0.33%)</title><rect x="21.5585%" y="197" width="0.3283%" height="15" fill="rgb(252,114,16)" fg:x="24954" fg:w="380"/><text x="21.8085%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (356 samples, 0.31%)</title><rect x="21.5793%" y="181" width="0.3076%" height="15" fill="rgb(254,151,24)" fg:x="24978" fg:w="356"/><text x="21.8293%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_sub (356 samples, 0.31%)</title><rect x="21.5793%" y="165" width="0.3076%" height="15" fill="rgb(253,54,39)" fg:x="24978" fg:w="356"/><text x="21.8293%" y="175.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (14 samples, 0.01%)</title><rect x="21.8989%" y="181" width="0.0121%" height="15" fill="rgb(243,25,45)" fg:x="25348" fg:w="14"/><text x="22.1489%" y="191.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (14 samples, 0.01%)</title><rect x="21.8989%" y="165" width="0.0121%" height="15" fill="rgb(234,134,9)" fg:x="25348" fg:w="14"/><text x="22.1489%" y="175.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="21.8998%" y="149" width="0.0112%" height="15" fill="rgb(227,166,31)" fg:x="25349" fg:w="13"/><text x="22.1498%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="21.8998%" y="133" width="0.0112%" height="15" fill="rgb(245,143,41)" fg:x="25349" fg:w="13"/><text x="22.1498%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="21.8998%" y="117" width="0.0112%" height="15" fill="rgb(238,181,32)" fg:x="25349" fg:w="13"/><text x="22.1498%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="21.8998%" y="101" width="0.0112%" height="15" fill="rgb(224,113,18)" fg:x="25349" fg:w="13"/><text x="22.1498%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="21.8998%" y="85" width="0.0112%" height="15" fill="rgb(240,229,28)" fg:x="25349" fg:w="13"/><text x="22.1498%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="21.8998%" y="69" width="0.0112%" height="15" fill="rgb(250,185,3)" fg:x="25349" fg:w="13"/><text x="22.1498%" y="79.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="21.8998%" y="53" width="0.0112%" height="15" fill="rgb(212,59,25)" fg:x="25349" fg:w="13"/><text x="22.1498%" y="63.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="21.8998%" y="37" width="0.0112%" height="15" fill="rgb(221,87,20)" fg:x="25349" fg:w="13"/><text x="22.1498%" y="47.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="21.9205%" y="85" width="0.0130%" height="15" fill="rgb(213,74,28)" fg:x="25373" fg:w="15"/><text x="22.1705%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.01%)</title><rect x="21.9654%" y="53" width="0.0138%" height="15" fill="rgb(224,132,34)" fg:x="25425" fg:w="16"/><text x="22.2154%" y="63.50"></text></g><g><title> (16 samples, 0.01%)</title><rect x="21.9654%" y="37" width="0.0138%" height="15" fill="rgb(222,101,24)" fg:x="25425" fg:w="16"/><text x="22.2154%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (63 samples, 0.05%)</title><rect x="21.9335%" y="85" width="0.0544%" height="15" fill="rgb(254,142,4)" fg:x="25388" fg:w="63"/><text x="22.1835%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (53 samples, 0.05%)</title><rect x="21.9421%" y="69" width="0.0458%" height="15" fill="rgb(230,229,49)" fg:x="25398" fg:w="53"/><text x="22.1921%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (87 samples, 0.08%)</title><rect x="21.9205%" y="117" width="0.0752%" height="15" fill="rgb(238,70,47)" fg:x="25373" fg:w="87"/><text x="22.1705%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (87 samples, 0.08%)</title><rect x="21.9205%" y="101" width="0.0752%" height="15" fill="rgb(231,160,17)" fg:x="25373" fg:w="87"/><text x="22.1705%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (95 samples, 0.08%)</title><rect x="21.9205%" y="149" width="0.0821%" height="15" fill="rgb(218,68,53)" fg:x="25373" fg:w="95"/><text x="22.1705%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (95 samples, 0.08%)</title><rect x="21.9205%" y="133" width="0.0821%" height="15" fill="rgb(236,111,10)" fg:x="25373" fg:w="95"/><text x="22.1705%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (105 samples, 0.09%)</title><rect x="21.9162%" y="165" width="0.0907%" height="15" fill="rgb(224,34,41)" fg:x="25368" fg:w="105"/><text x="22.1662%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (535 samples, 0.46%)</title><rect x="21.5482%" y="245" width="0.4622%" height="15" fill="rgb(241,118,19)" fg:x="24942" fg:w="535"/><text x="21.7982%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt; (143 samples, 0.12%)</title><rect x="21.8868%" y="229" width="0.1235%" height="15" fill="rgb(238,129,25)" fg:x="25334" fg:w="143"/><text x="22.1368%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt; (143 samples, 0.12%)</title><rect x="21.8868%" y="213" width="0.1235%" height="15" fill="rgb(238,22,31)" fg:x="25334" fg:w="143"/><text x="22.1368%" y="223.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (143 samples, 0.12%)</title><rect x="21.8868%" y="197" width="0.1235%" height="15" fill="rgb(222,174,48)" fg:x="25334" fg:w="143"/><text x="22.1368%" y="207.50"></text></g><g><title>rust_dealloc (115 samples, 0.10%)</title><rect x="21.9110%" y="181" width="0.0994%" height="15" fill="rgb(206,152,40)" fg:x="25362" fg:w="115"/><text x="22.1610%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (455 samples, 0.39%)</title><rect x="22.0121%" y="245" width="0.3931%" height="15" fill="rgb(218,99,54)" fg:x="25479" fg:w="455"/><text x="22.2621%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_sub (455 samples, 0.39%)</title><rect x="22.0121%" y="229" width="0.3931%" height="15" fill="rgb(220,174,26)" fg:x="25479" fg:w="455"/><text x="22.2621%" y="239.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (12 samples, 0.01%)</title><rect x="22.4475%" y="117" width="0.0104%" height="15" fill="rgb(245,116,9)" fg:x="25983" fg:w="12"/><text x="22.6975%" y="127.50"></text></g><g><title> (12 samples, 0.01%)</title><rect x="22.4475%" y="101" width="0.0104%" height="15" fill="rgb(209,72,35)" fg:x="25983" fg:w="12"/><text x="22.6975%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (69 samples, 0.06%)</title><rect x="22.4095%" y="229" width="0.0596%" height="15" fill="rgb(226,126,21)" fg:x="25939" fg:w="69"/><text x="22.6595%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (57 samples, 0.05%)</title><rect x="22.4199%" y="213" width="0.0492%" height="15" fill="rgb(227,192,1)" fg:x="25951" fg:w="57"/><text x="22.6699%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (57 samples, 0.05%)</title><rect x="22.4199%" y="197" width="0.0492%" height="15" fill="rgb(237,180,29)" fg:x="25951" fg:w="57"/><text x="22.6699%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (57 samples, 0.05%)</title><rect x="22.4199%" y="181" width="0.0492%" height="15" fill="rgb(230,197,35)" fg:x="25951" fg:w="57"/><text x="22.6699%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (57 samples, 0.05%)</title><rect x="22.4199%" y="165" width="0.0492%" height="15" fill="rgb(246,193,31)" fg:x="25951" fg:w="57"/><text x="22.6699%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (44 samples, 0.04%)</title><rect x="22.4311%" y="149" width="0.0380%" height="15" fill="rgb(241,36,4)" fg:x="25964" fg:w="44"/><text x="22.6811%" y="159.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (33 samples, 0.03%)</title><rect x="22.4406%" y="133" width="0.0285%" height="15" fill="rgb(241,130,17)" fg:x="25975" fg:w="33"/><text x="22.6906%" y="143.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (13 samples, 0.01%)</title><rect x="22.4579%" y="117" width="0.0112%" height="15" fill="rgb(206,137,32)" fg:x="25995" fg:w="13"/><text x="22.7079%" y="127.50"></text></g><g><title>rust_dealloc (75 samples, 0.06%)</title><rect x="22.4052%" y="245" width="0.0648%" height="15" fill="rgb(237,228,51)" fg:x="25934" fg:w="75"/><text x="22.6552%" y="255.50"></text></g><g><title>abi_stable::std_types::arc::vtable_mod::destructor_arc (1,085 samples, 0.94%)</title><rect x="21.5378%" y="309" width="0.9374%" height="15" fill="rgb(243,6,42)" fg:x="24930" fg:w="1085"/><text x="21.7878%" y="319.50"></text></g><g><title>core::mem::drop (1,074 samples, 0.93%)</title><rect x="21.5473%" y="293" width="0.9279%" height="15" fill="rgb(251,74,28)" fg:x="24941" fg:w="1074"/><text x="21.7973%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,074 samples, 0.93%)</title><rect x="21.5473%" y="277" width="0.9279%" height="15" fill="rgb(218,20,49)" fg:x="24941" fg:w="1074"/><text x="21.7973%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,074 samples, 0.93%)</title><rect x="21.5473%" y="261" width="0.9279%" height="15" fill="rgb(238,28,14)" fg:x="24941" fg:w="1074"/><text x="21.7973%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,354 samples, 1.17%)</title><rect x="21.3063%" y="373" width="1.1698%" height="15" fill="rgb(229,40,46)" fg:x="24662" fg:w="1354"/><text x="21.5563%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;]&gt; (1,350 samples, 1.17%)</title><rect x="21.3097%" y="357" width="1.1663%" height="15" fill="rgb(244,195,20)" fg:x="24666" fg:w="1350"/><text x="21.5597%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt; (1,335 samples, 1.15%)</title><rect x="21.3227%" y="341" width="1.1533%" height="15" fill="rgb(253,56,35)" fg:x="24681" fg:w="1335"/><text x="21.5727%" y="351.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl core::ops::drop::Drop for abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::drop (1,335 samples, 1.15%)</title><rect x="21.3227%" y="325" width="1.1533%" height="15" fill="rgb(210,149,44)" fg:x="24681" fg:w="1335"/><text x="21.5727%" y="335.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (1,376 samples, 1.19%)</title><rect x="21.2968%" y="421" width="1.1888%" height="15" fill="rgb(240,135,12)" fg:x="24651" fg:w="1376"/><text x="21.5468%" y="431.50"></text></g><g><title>core::mem::drop (1,365 samples, 1.18%)</title><rect x="21.3063%" y="405" width="1.1793%" height="15" fill="rgb(251,24,50)" fg:x="24662" fg:w="1365"/><text x="21.5563%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,365 samples, 1.18%)</title><rect x="21.3063%" y="389" width="1.1793%" height="15" fill="rgb(243,200,47)" fg:x="24662" fg:w="1365"/><text x="21.5563%" y="399.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (1,383 samples, 1.19%)</title><rect x="21.2916%" y="437" width="1.1948%" height="15" fill="rgb(224,166,26)" fg:x="24645" fg:w="1383"/><text x="21.5416%" y="447.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="22.4950%" y="341" width="0.0104%" height="15" fill="rgb(233,0,47)" fg:x="26038" fg:w="12"/><text x="22.7450%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (49 samples, 0.04%)</title><rect x="22.5063%" y="341" width="0.0423%" height="15" fill="rgb(253,80,5)" fg:x="26051" fg:w="49"/><text x="22.7563%" y="351.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (37 samples, 0.03%)</title><rect x="22.5166%" y="325" width="0.0320%" height="15" fill="rgb(214,133,25)" fg:x="26063" fg:w="37"/><text x="22.7666%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (64 samples, 0.06%)</title><rect x="22.4950%" y="373" width="0.0553%" height="15" fill="rgb(209,27,14)" fg:x="26038" fg:w="64"/><text x="22.7450%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (64 samples, 0.06%)</title><rect x="22.4950%" y="357" width="0.0553%" height="15" fill="rgb(219,102,51)" fg:x="26038" fg:w="64"/><text x="22.7450%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (67 samples, 0.06%)</title><rect x="22.4950%" y="405" width="0.0579%" height="15" fill="rgb(237,18,16)" fg:x="26038" fg:w="67"/><text x="22.7450%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (67 samples, 0.06%)</title><rect x="22.4950%" y="389" width="0.0579%" height="15" fill="rgb(241,85,17)" fg:x="26038" fg:w="67"/><text x="22.7450%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (71 samples, 0.06%)</title><rect x="22.4950%" y="421" width="0.0613%" height="15" fill="rgb(236,90,42)" fg:x="26038" fg:w="71"/><text x="22.7450%" y="431.50"></text></g><g><title>rust_dealloc (87 samples, 0.08%)</title><rect x="22.4864%" y="437" width="0.0752%" height="15" fill="rgb(249,57,21)" fg:x="26028" fg:w="87"/><text x="22.7364%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (1,471 samples, 1.27%)</title><rect x="21.2916%" y="469" width="1.2708%" height="15" fill="rgb(243,12,36)" fg:x="24645" fg:w="1471"/><text x="21.5416%" y="479.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (1,471 samples, 1.27%)</title><rect x="21.2916%" y="453" width="1.2708%" height="15" fill="rgb(253,128,47)" fg:x="24645" fg:w="1471"/><text x="21.5416%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (93 samples, 0.08%)</title><rect x="22.5633%" y="453" width="0.0803%" height="15" fill="rgb(207,33,20)" fg:x="26117" fg:w="93"/><text x="22.8133%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (37 samples, 0.03%)</title><rect x="22.6117%" y="437" width="0.0320%" height="15" fill="rgb(233,215,35)" fg:x="26173" fg:w="37"/><text x="22.8617%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (24 samples, 0.02%)</title><rect x="22.6229%" y="421" width="0.0207%" height="15" fill="rgb(249,188,52)" fg:x="26186" fg:w="24"/><text x="22.8729%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (24 samples, 0.02%)</title><rect x="22.6229%" y="405" width="0.0207%" height="15" fill="rgb(225,12,32)" fg:x="26186" fg:w="24"/><text x="22.8729%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="22.6333%" y="389" width="0.0104%" height="15" fill="rgb(247,98,14)" fg:x="26198" fg:w="12"/><text x="22.8833%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::inner::RawTable&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (12 samples, 0.01%)</title><rect x="22.6333%" y="373" width="0.0104%" height="15" fill="rgb(247,219,48)" fg:x="26198" fg:w="12"/><text x="22.8833%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="22.6333%" y="357" width="0.0104%" height="15" fill="rgb(253,60,48)" fg:x="26198" fg:w="12"/><text x="22.8833%" y="367.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="22.6531%" y="421" width="0.0130%" height="15" fill="rgb(245,15,52)" fg:x="26221" fg:w="15"/><text x="22.9031%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="22.7153%" y="309" width="0.0199%" height="15" fill="rgb(220,133,28)" fg:x="26293" fg:w="23"/><text x="22.9653%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="22.7179%" y="293" width="0.0173%" height="15" fill="rgb(217,180,4)" fg:x="26296" fg:w="20"/><text x="22.9679%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (88 samples, 0.08%)</title><rect x="22.6739%" y="357" width="0.0760%" height="15" fill="rgb(251,24,1)" fg:x="26245" fg:w="88"/><text x="22.9239%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (88 samples, 0.08%)</title><rect x="22.6739%" y="341" width="0.0760%" height="15" fill="rgb(212,185,49)" fg:x="26245" fg:w="88"/><text x="22.9239%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (88 samples, 0.08%)</title><rect x="22.6739%" y="325" width="0.0760%" height="15" fill="rgb(215,175,22)" fg:x="26245" fg:w="88"/><text x="22.9239%" y="335.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.01%)</title><rect x="22.7352%" y="309" width="0.0147%" height="15" fill="rgb(250,205,14)" fg:x="26316" fg:w="17"/><text x="22.9852%" y="319.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.01%)</title><rect x="22.7352%" y="293" width="0.0147%" height="15" fill="rgb(225,211,22)" fg:x="26316" fg:w="17"/><text x="22.9852%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (118 samples, 0.10%)</title><rect x="22.6661%" y="389" width="0.1019%" height="15" fill="rgb(251,179,42)" fg:x="26236" fg:w="118"/><text x="22.9161%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (118 samples, 0.10%)</title><rect x="22.6661%" y="373" width="0.1019%" height="15" fill="rgb(208,216,51)" fg:x="26236" fg:w="118"/><text x="22.9161%" y="383.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (21 samples, 0.02%)</title><rect x="22.7499%" y="357" width="0.0181%" height="15" fill="rgb(235,36,11)" fg:x="26333" fg:w="21"/><text x="22.9999%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (119 samples, 0.10%)</title><rect x="22.6661%" y="421" width="0.1028%" height="15" fill="rgb(213,189,28)" fg:x="26236" fg:w="119"/><text x="22.9161%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (119 samples, 0.10%)</title><rect x="22.6661%" y="405" width="0.1028%" height="15" fill="rgb(227,203,42)" fg:x="26236" fg:w="119"/><text x="22.9161%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (139 samples, 0.12%)</title><rect x="22.6497%" y="437" width="0.1201%" height="15" fill="rgb(244,72,36)" fg:x="26217" fg:w="139"/><text x="22.8997%" y="447.50"></text></g><g><title>rust_dealloc (154 samples, 0.13%)</title><rect x="22.6436%" y="453" width="0.1330%" height="15" fill="rgb(213,53,17)" fg:x="26210" fg:w="154"/><text x="22.8936%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (2,555 samples, 2.21%)</title><rect x="20.5711%" y="501" width="2.2073%" height="15" fill="rgb(207,167,3)" fg:x="23811" fg:w="2555"/><text x="20.8211%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (1,721 samples, 1.49%)</title><rect x="21.2916%" y="485" width="1.4868%" height="15" fill="rgb(216,98,30)" fg:x="24645" fg:w="1721"/><text x="21.5416%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (250 samples, 0.22%)</title><rect x="22.5624%" y="469" width="0.2160%" height="15" fill="rgb(236,123,15)" fg:x="26116" fg:w="250"/><text x="22.8124%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::pdk::PdkValue&gt; (14 samples, 0.01%)</title><rect x="22.7784%" y="501" width="0.0121%" height="15" fill="rgb(248,81,50)" fg:x="26366" fg:w="14"/><text x="23.0284%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (12 samples, 0.01%)</title><rect x="22.8795%" y="421" width="0.0104%" height="15" fill="rgb(214,120,4)" fg:x="26483" fg:w="12"/><text x="23.1295%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (39 samples, 0.03%)</title><rect x="22.8648%" y="437" width="0.0337%" height="15" fill="rgb(208,179,34)" fg:x="26466" fg:w="39"/><text x="23.1148%" y="447.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (51 samples, 0.04%)</title><rect x="22.8631%" y="453" width="0.0441%" height="15" fill="rgb(227,140,7)" fg:x="26464" fg:w="51"/><text x="23.1131%" y="463.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (138 samples, 0.12%)</title><rect x="22.7974%" y="501" width="0.1192%" height="15" fill="rgb(214,22,6)" fg:x="26388" fg:w="138"/><text x="23.0474%" y="511.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (131 samples, 0.11%)</title><rect x="22.8035%" y="485" width="0.1132%" height="15" fill="rgb(207,137,27)" fg:x="26395" fg:w="131"/><text x="23.0535%" y="495.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (131 samples, 0.11%)</title><rect x="22.8035%" y="469" width="0.1132%" height="15" fill="rgb(210,8,46)" fg:x="26395" fg:w="131"/><text x="23.0535%" y="479.50"></text></g><g><title>core::time::Duration::as_nanos (12 samples, 0.01%)</title><rect x="22.9348%" y="485" width="0.0104%" height="15" fill="rgb(240,16,54)" fg:x="26547" fg:w="12"/><text x="23.1848%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (64 samples, 0.06%)</title><rect x="22.9788%" y="437" width="0.0553%" height="15" fill="rgb(211,209,29)" fg:x="26598" fg:w="64"/><text x="23.2288%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::ge (64 samples, 0.06%)</title><rect x="22.9788%" y="421" width="0.0553%" height="15" fill="rgb(226,228,24)" fg:x="26598" fg:w="64"/><text x="23.2288%" y="431.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (61 samples, 0.05%)</title><rect x="22.9814%" y="405" width="0.0527%" height="15" fill="rgb(222,84,9)" fg:x="26601" fg:w="61"/><text x="23.2314%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (61 samples, 0.05%)</title><rect x="22.9814%" y="389" width="0.0527%" height="15" fill="rgb(234,203,30)" fg:x="26601" fg:w="61"/><text x="23.2314%" y="399.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (61 samples, 0.05%)</title><rect x="22.9814%" y="373" width="0.0527%" height="15" fill="rgb(238,109,14)" fg:x="26601" fg:w="61"/><text x="23.2314%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (35 samples, 0.03%)</title><rect x="23.0039%" y="357" width="0.0302%" height="15" fill="rgb(233,206,34)" fg:x="26627" fg:w="35"/><text x="23.2539%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (112 samples, 0.10%)</title><rect x="22.9451%" y="469" width="0.0968%" height="15" fill="rgb(220,167,47)" fg:x="26559" fg:w="112"/><text x="23.1951%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (112 samples, 0.10%)</title><rect x="22.9451%" y="453" width="0.0968%" height="15" fill="rgb(238,105,10)" fg:x="26559" fg:w="112"/><text x="23.1951%" y="463.50"></text></g><g><title>std::time::SystemTime::duration_since (122 samples, 0.11%)</title><rect x="22.9451%" y="485" width="0.1054%" height="15" fill="rgb(213,227,17)" fg:x="26559" fg:w="122"/><text x="23.1951%" y="495.50"></text></g><g><title>__clock_gettime_2 (423 samples, 0.37%)</title><rect x="23.1361%" y="437" width="0.3654%" height="15" fill="rgb(217,132,38)" fg:x="26780" fg:w="423"/><text x="23.3861%" y="447.50"></text></g><g><title>__vdso_clock_gettime (404 samples, 0.35%)</title><rect x="23.1525%" y="421" width="0.3490%" height="15" fill="rgb(242,146,4)" fg:x="26799" fg:w="404"/><text x="23.4025%" y="431.50"></text></g><g><title>[[vdso]] (246 samples, 0.21%)</title><rect x="23.2890%" y="405" width="0.2125%" height="15" fill="rgb(212,61,9)" fg:x="26957" fg:w="246"/><text x="23.5390%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (678 samples, 0.59%)</title><rect x="22.9166%" y="501" width="0.5857%" height="15" fill="rgb(247,126,22)" fg:x="26526" fg:w="678"/><text x="23.1666%" y="511.50"></text></g><g><title>std::time::SystemTime::now (523 samples, 0.45%)</title><rect x="23.0505%" y="485" width="0.4518%" height="15" fill="rgb(220,196,2)" fg:x="26681" fg:w="523"/><text x="23.3005%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (523 samples, 0.45%)</title><rect x="23.0505%" y="469" width="0.4518%" height="15" fill="rgb(208,46,4)" fg:x="26681" fg:w="523"/><text x="23.3005%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::now (523 samples, 0.45%)</title><rect x="23.0505%" y="453" width="0.4518%" height="15" fill="rgb(252,104,46)" fg:x="26681" fg:w="523"/><text x="23.3005%" y="463.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (164 samples, 0.14%)</title><rect x="23.6708%" y="469" width="0.1417%" height="15" fill="rgb(237,152,48)" fg:x="27399" fg:w="164"/><text x="23.9208%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.01%)</title><rect x="23.8911%" y="453" width="0.0112%" height="15" fill="rgb(221,59,37)" fg:x="27654" fg:w="13"/><text x="24.1411%" y="463.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (251 samples, 0.22%)</title><rect x="23.8125%" y="469" width="0.2168%" height="15" fill="rgb(209,202,51)" fg:x="27563" fg:w="251"/><text x="24.0625%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (147 samples, 0.13%)</title><rect x="23.9024%" y="453" width="0.1270%" height="15" fill="rgb(228,81,30)" fg:x="27667" fg:w="147"/><text x="24.1524%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (440 samples, 0.38%)</title><rect x="24.0553%" y="453" width="0.3801%" height="15" fill="rgb(227,42,39)" fg:x="27844" fg:w="440"/><text x="24.3053%" y="463.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (410 samples, 0.35%)</title><rect x="24.0812%" y="437" width="0.3542%" height="15" fill="rgb(221,26,2)" fg:x="27874" fg:w="410"/><text x="24.3312%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (189 samples, 0.16%)</title><rect x="24.2721%" y="421" width="0.1633%" height="15" fill="rgb(254,61,31)" fg:x="28095" fg:w="189"/><text x="24.5221%" y="431.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (1,081 samples, 0.93%)</title><rect x="23.5024%" y="501" width="0.9339%" height="15" fill="rgb(222,173,38)" fg:x="27204" fg:w="1081"/><text x="23.7524%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (937 samples, 0.81%)</title><rect x="23.6268%" y="485" width="0.8095%" height="15" fill="rgb(218,50,12)" fg:x="27348" fg:w="937"/><text x="23.8768%" y="495.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (471 samples, 0.41%)</title><rect x="24.0294%" y="469" width="0.4069%" height="15" fill="rgb(223,88,40)" fg:x="27814" fg:w="471"/><text x="24.2794%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (113 samples, 0.10%)</title><rect x="24.4449%" y="485" width="0.0976%" height="15" fill="rgb(237,54,19)" fg:x="28295" fg:w="113"/><text x="24.6949%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (7,383 samples, 6.38%)</title><rect x="18.1754%" y="757" width="6.3784%" height="15" fill="rgb(251,129,25)" fg:x="21038" fg:w="7383"/><text x="18.4254%" y="767.50">tremor_r..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,726 samples, 4.95%)</title><rect x="19.6069%" y="741" width="4.9469%" height="15" fill="rgb(238,97,19)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="751.50">&lt;async..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,726 samples, 4.95%)</title><rect x="19.6069%" y="725" width="4.9469%" height="15" fill="rgb(240,169,18)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="735.50">&lt;async..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (5,726 samples, 4.95%)</title><rect x="19.6069%" y="709" width="4.9469%" height="15" fill="rgb(230,187,49)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="719.50">&lt;core:..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,726 samples, 4.95%)</title><rect x="19.6069%" y="693" width="4.9469%" height="15" fill="rgb(209,44,26)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="703.50">&lt;async..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (5,726 samples, 4.95%)</title><rect x="19.6069%" y="677" width="4.9469%" height="15" fill="rgb(244,0,6)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="687.50">async_..</text></g><g><title>std::panic::catch_unwind (5,726 samples, 4.95%)</title><rect x="19.6069%" y="661" width="4.9469%" height="15" fill="rgb(248,18,21)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="671.50">std::p..</text></g><g><title>std::panicking::try (5,726 samples, 4.95%)</title><rect x="19.6069%" y="645" width="4.9469%" height="15" fill="rgb(245,180,19)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="655.50">std::p..</text></g><g><title>std::panicking::try::do_call (5,726 samples, 4.95%)</title><rect x="19.6069%" y="629" width="4.9469%" height="15" fill="rgb(252,118,36)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="639.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,726 samples, 4.95%)</title><rect x="19.6069%" y="613" width="4.9469%" height="15" fill="rgb(210,224,19)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="623.50">&lt;core:..</text></g><g><title>core::ops::function::FnOnce::call_once (5,726 samples, 4.95%)</title><rect x="19.6069%" y="597" width="4.9469%" height="15" fill="rgb(218,30,24)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="607.50">core::..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (5,726 samples, 4.95%)</title><rect x="19.6069%" y="581" width="4.9469%" height="15" fill="rgb(219,75,50)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="591.50">async_..</text></g><g><title>async_ffi::FfiContext::with_context (5,726 samples, 4.95%)</title><rect x="19.6069%" y="565" width="4.9469%" height="15" fill="rgb(234,72,50)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="575.50">async_..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (5,726 samples, 4.95%)</title><rect x="19.6069%" y="549" width="4.9469%" height="15" fill="rgb(219,100,48)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="559.50">async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,726 samples, 4.95%)</title><rect x="19.6069%" y="533" width="4.9469%" height="15" fill="rgb(253,5,41)" fg:x="22695" fg:w="5726"/><text x="19.8569%" y="543.50">&lt;core:..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (5,676 samples, 4.90%)</title><rect x="19.6501%" y="517" width="4.9037%" height="15" fill="rgb(247,181,11)" fg:x="22745" fg:w="5676"/><text x="19.9001%" y="527.50">&lt;tremo..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (136 samples, 0.12%)</title><rect x="24.4363%" y="501" width="0.1175%" height="15" fill="rgb(222,223,25)" fg:x="28285" fg:w="136"/><text x="24.6863%" y="511.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::_::&lt;impl tremor_runtime::connectors::sink::EventSerializerOpaque_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::serialize (13 samples, 0.01%)</title><rect x="24.5425%" y="485" width="0.0112%" height="15" fill="rgb(214,198,28)" fg:x="28408" fg:w="13"/><text x="24.7925%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,393 samples, 6.39%)</title><rect x="18.1754%" y="773" width="6.3870%" height="15" fill="rgb(230,46,43)" fg:x="21038" fg:w="7393"/><text x="18.4254%" y="783.50">&lt;core::f..</text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 0.01%)</title><rect x="24.5685%" y="597" width="0.0121%" height="15" fill="rgb(233,65,53)" fg:x="28438" fg:w="14"/><text x="24.8185%" y="607.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (22 samples, 0.02%)</title><rect x="24.5685%" y="613" width="0.0190%" height="15" fill="rgb(221,121,27)" fg:x="28438" fg:w="22"/><text x="24.8185%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (41 samples, 0.04%)</title><rect x="24.5685%" y="677" width="0.0354%" height="15" fill="rgb(247,70,47)" fg:x="28438" fg:w="41"/><text x="24.8185%" y="687.50"></text></g><g><title>std::collections::hash::map::RandomState::new (41 samples, 0.04%)</title><rect x="24.5685%" y="661" width="0.0354%" height="15" fill="rgb(228,85,35)" fg:x="28438" fg:w="41"/><text x="24.8185%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.04%)</title><rect x="24.5685%" y="645" width="0.0354%" height="15" fill="rgb(209,50,18)" fg:x="28438" fg:w="41"/><text x="24.8185%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.04%)</title><rect x="24.5685%" y="629" width="0.0354%" height="15" fill="rgb(250,19,35)" fg:x="28438" fg:w="41"/><text x="24.8185%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (19 samples, 0.02%)</title><rect x="24.5875%" y="613" width="0.0164%" height="15" fill="rgb(253,107,29)" fg:x="28460" fg:w="19"/><text x="24.8375%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::empty (25 samples, 0.02%)</title><rect x="24.6402%" y="437" width="0.0216%" height="15" fill="rgb(252,179,29)" fg:x="28521" fg:w="25"/><text x="24.8902%" y="447.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (25 samples, 0.02%)</title><rect x="24.6402%" y="421" width="0.0216%" height="15" fill="rgb(238,194,6)" fg:x="28521" fg:w="25"/><text x="24.8902%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.10%)</title><rect x="24.6272%" y="485" width="0.0968%" height="15" fill="rgb(238,164,29)" fg:x="28506" fg:w="112"/><text x="24.8772%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.10%)</title><rect x="24.6272%" y="469" width="0.0968%" height="15" fill="rgb(224,25,9)" fg:x="28506" fg:w="112"/><text x="24.8772%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (102 samples, 0.09%)</title><rect x="24.6359%" y="453" width="0.0881%" height="15" fill="rgb(244,153,23)" fg:x="28516" fg:w="102"/><text x="24.8859%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::take (72 samples, 0.06%)</title><rect x="24.6618%" y="437" width="0.0622%" height="15" fill="rgb(212,203,14)" fg:x="28546" fg:w="72"/><text x="24.9118%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (72 samples, 0.06%)</title><rect x="24.6618%" y="421" width="0.0622%" height="15" fill="rgb(220,164,20)" fg:x="28546" fg:w="72"/><text x="24.9118%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (191 samples, 0.17%)</title><rect x="24.5685%" y="693" width="0.1650%" height="15" fill="rgb(222,203,48)" fg:x="28438" fg:w="191"/><text x="24.8185%" y="703.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_hasher (150 samples, 0.13%)</title><rect x="24.6039%" y="677" width="0.1296%" height="15" fill="rgb(215,159,22)" fg:x="28479" fg:w="150"/><text x="24.8539%" y="687.50"></text></g><g><title>abi_stable::std_types::map::RHashMap&lt;K,V,S&gt;::with_capacity_and_hasher (150 samples, 0.13%)</title><rect x="24.6039%" y="661" width="0.1296%" height="15" fill="rgb(216,183,47)" fg:x="28479" fg:w="150"/><text x="24.8539%" y="671.50"></text></g><g><title>abi_stable::std_types::map::VTable&lt;K,V,S&gt;::erased_map (146 samples, 0.13%)</title><rect x="24.6073%" y="645" width="0.1261%" height="15" fill="rgb(229,195,25)" fg:x="28483" fg:w="146"/><text x="24.8573%" y="655.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (146 samples, 0.13%)</title><rect x="24.6073%" y="629" width="0.1261%" height="15" fill="rgb(224,132,51)" fg:x="28483" fg:w="146"/><text x="24.8573%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (142 samples, 0.12%)</title><rect x="24.6108%" y="613" width="0.1227%" height="15" fill="rgb(240,63,7)" fg:x="28487" fg:w="142"/><text x="24.8608%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (132 samples, 0.11%)</title><rect x="24.6194%" y="597" width="0.1140%" height="15" fill="rgb(249,182,41)" fg:x="28497" fg:w="132"/><text x="24.8694%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (132 samples, 0.11%)</title><rect x="24.6194%" y="581" width="0.1140%" height="15" fill="rgb(243,47,26)" fg:x="28497" fg:w="132"/><text x="24.8694%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (132 samples, 0.11%)</title><rect x="24.6194%" y="565" width="0.1140%" height="15" fill="rgb(233,48,2)" fg:x="28497" fg:w="132"/><text x="24.8694%" y="575.50"></text></g><g><title>alloc::alloc::alloc (129 samples, 0.11%)</title><rect x="24.6220%" y="549" width="0.1114%" height="15" fill="rgb(244,165,34)" fg:x="28500" fg:w="129"/><text x="24.8720%" y="559.50"></text></g><g><title>__rg_alloc (129 samples, 0.11%)</title><rect x="24.6220%" y="533" width="0.1114%" height="15" fill="rgb(207,89,7)" fg:x="28500" fg:w="129"/><text x="24.8720%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (129 samples, 0.11%)</title><rect x="24.6220%" y="517" width="0.1114%" height="15" fill="rgb(244,117,36)" fg:x="28500" fg:w="129"/><text x="24.8720%" y="527.50"></text></g><g><title>rust_alloc (129 samples, 0.11%)</title><rect x="24.6220%" y="501" width="0.1114%" height="15" fill="rgb(226,144,34)" fg:x="28500" fg:w="129"/><text x="24.8720%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (15 samples, 0.01%)</title><rect x="24.8104%" y="645" width="0.0130%" height="15" fill="rgb(213,23,19)" fg:x="28718" fg:w="15"/><text x="25.0604%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="24.7948%" y="661" width="0.0311%" height="15" fill="rgb(217,75,12)" fg:x="28700" fg:w="36"/><text x="25.0448%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.04%)</title><rect x="24.7896%" y="677" width="0.0441%" height="15" fill="rgb(224,159,17)" fg:x="28694" fg:w="51"/><text x="25.0396%" y="687.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (158 samples, 0.14%)</title><rect x="24.7335%" y="693" width="0.1365%" height="15" fill="rgb(217,118,1)" fg:x="28629" fg:w="158"/><text x="24.9835%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;,&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from::{{closure}}&gt;&gt; (34 samples, 0.03%)</title><rect x="24.8406%" y="677" width="0.0294%" height="15" fill="rgb(232,180,48)" fg:x="28753" fg:w="34"/><text x="25.0906%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (34 samples, 0.03%)</title><rect x="24.8406%" y="661" width="0.0294%" height="15" fill="rgb(230,27,33)" fg:x="28753" fg:w="34"/><text x="25.0906%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="24.8501%" y="645" width="0.0199%" height="15" fill="rgb(205,31,21)" fg:x="28764" fg:w="23"/><text x="25.1001%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (22 samples, 0.02%)</title><rect x="24.8510%" y="629" width="0.0190%" height="15" fill="rgb(253,59,4)" fg:x="28765" fg:w="22"/><text x="25.1010%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (15 samples, 0.01%)</title><rect x="24.8570%" y="613" width="0.0130%" height="15" fill="rgb(224,201,9)" fg:x="28772" fg:w="15"/><text x="25.1070%" y="623.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (15 samples, 0.01%)</title><rect x="24.8570%" y="597" width="0.0130%" height="15" fill="rgb(229,206,30)" fg:x="28772" fg:w="15"/><text x="25.1070%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.01%)</title><rect x="24.8570%" y="581" width="0.0130%" height="15" fill="rgb(212,67,47)" fg:x="28772" fg:w="15"/><text x="25.1070%" y="591.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="24.8570%" y="565" width="0.0130%" height="15" fill="rgb(211,96,50)" fg:x="28772" fg:w="15"/><text x="25.1070%" y="575.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="24.8587%" y="549" width="0.0112%" height="15" fill="rgb(252,114,18)" fg:x="28774" fg:w="13"/><text x="25.1087%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (7,756 samples, 6.70%)</title><rect x="18.1754%" y="789" width="6.7006%" height="15" fill="rgb(223,58,37)" fg:x="21038" fg:w="7756"/><text x="18.4254%" y="799.50">tremor_ru..</text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (363 samples, 0.31%)</title><rect x="24.5624%" y="773" width="0.3136%" height="15" fill="rgb(237,70,4)" fg:x="28431" fg:w="363"/><text x="24.8124%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (363 samples, 0.31%)</title><rect x="24.5624%" y="757" width="0.3136%" height="15" fill="rgb(244,85,46)" fg:x="28431" fg:w="363"/><text x="24.8124%" y="767.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (363 samples, 0.31%)</title><rect x="24.5624%" y="741" width="0.3136%" height="15" fill="rgb(223,39,52)" fg:x="28431" fg:w="363"/><text x="24.8124%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (363 samples, 0.31%)</title><rect x="24.5624%" y="725" width="0.3136%" height="15" fill="rgb(218,200,14)" fg:x="28431" fg:w="363"/><text x="24.8124%" y="735.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (363 samples, 0.31%)</title><rect x="24.5624%" y="709" width="0.3136%" height="15" fill="rgb(208,171,16)" fg:x="28431" fg:w="363"/><text x="24.8124%" y="719.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="24.9564%" y="741" width="0.0121%" height="15" fill="rgb(234,200,18)" fg:x="28887" fg:w="14"/><text x="25.2064%" y="751.50"></text></g><g><title>rust_dealloc (35 samples, 0.03%)</title><rect x="24.9685%" y="677" width="0.0302%" height="15" fill="rgb(228,45,11)" fg:x="28901" fg:w="35"/><text x="25.2185%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (87 samples, 0.08%)</title><rect x="25.0030%" y="677" width="0.0752%" height="15" fill="rgb(237,182,11)" fg:x="28941" fg:w="87"/><text x="25.2530%" y="687.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (71 samples, 0.06%)</title><rect x="25.0168%" y="661" width="0.0613%" height="15" fill="rgb(241,175,49)" fg:x="28957" fg:w="71"/><text x="25.2668%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="25.0782%" y="677" width="0.0112%" height="15" fill="rgb(247,38,35)" fg:x="29028" fg:w="13"/><text x="25.3282%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="25.0782%" y="661" width="0.0112%" height="15" fill="rgb(228,39,49)" fg:x="29028" fg:w="13"/><text x="25.3282%" y="671.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="25.0782%" y="645" width="0.0112%" height="15" fill="rgb(226,101,26)" fg:x="29028" fg:w="13"/><text x="25.3282%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (164 samples, 0.14%)</title><rect x="24.9685%" y="741" width="0.1417%" height="15" fill="rgb(206,141,19)" fg:x="28901" fg:w="164"/><text x="25.2185%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (164 samples, 0.14%)</title><rect x="24.9685%" y="725" width="0.1417%" height="15" fill="rgb(211,200,13)" fg:x="28901" fg:w="164"/><text x="25.2185%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (164 samples, 0.14%)</title><rect x="24.9685%" y="709" width="0.1417%" height="15" fill="rgb(241,121,6)" fg:x="28901" fg:w="164"/><text x="25.2185%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (164 samples, 0.14%)</title><rect x="24.9685%" y="693" width="0.1417%" height="15" fill="rgb(234,221,29)" fg:x="28901" fg:w="164"/><text x="25.2185%" y="703.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (24 samples, 0.02%)</title><rect x="25.0894%" y="677" width="0.0207%" height="15" fill="rgb(229,136,5)" fg:x="29041" fg:w="24"/><text x="25.3394%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (184 samples, 0.16%)</title><rect x="24.9564%" y="757" width="0.1590%" height="15" fill="rgb(238,36,11)" fg:x="28887" fg:w="184"/><text x="25.2064%" y="767.50"></text></g><g><title>rust_dealloc (212 samples, 0.18%)</title><rect x="24.9521%" y="773" width="0.1832%" height="15" fill="rgb(251,55,41)" fg:x="28882" fg:w="212"/><text x="25.2021%" y="783.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (23 samples, 0.02%)</title><rect x="25.1153%" y="757" width="0.0199%" height="15" fill="rgb(242,34,40)" fg:x="29071" fg:w="23"/><text x="25.3653%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (36 samples, 0.03%)</title><rect x="25.1352%" y="757" width="0.0311%" height="15" fill="rgb(215,42,17)" fg:x="29094" fg:w="36"/><text x="25.3852%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (36 samples, 0.03%)</title><rect x="25.1352%" y="741" width="0.0311%" height="15" fill="rgb(207,44,46)" fg:x="29094" fg:w="36"/><text x="25.3852%" y="751.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (28 samples, 0.02%)</title><rect x="25.1421%" y="725" width="0.0242%" height="15" fill="rgb(211,206,28)" fg:x="29102" fg:w="28"/><text x="25.3921%" y="735.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (24 samples, 0.02%)</title><rect x="25.1456%" y="709" width="0.0207%" height="15" fill="rgb(237,167,16)" fg:x="29106" fg:w="24"/><text x="25.3956%" y="719.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="25.1456%" y="693" width="0.0207%" height="15" fill="rgb(233,66,6)" fg:x="29106" fg:w="24"/><text x="25.3956%" y="703.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (24 samples, 0.02%)</title><rect x="25.1456%" y="677" width="0.0207%" height="15" fill="rgb(246,123,29)" fg:x="29106" fg:w="24"/><text x="25.3956%" y="687.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (337 samples, 0.29%)</title><rect x="24.8760%" y="789" width="0.2911%" height="15" fill="rgb(209,62,40)" fg:x="28794" fg:w="337"/><text x="25.1260%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (37 samples, 0.03%)</title><rect x="25.1352%" y="773" width="0.0320%" height="15" fill="rgb(218,4,25)" fg:x="29094" fg:w="37"/><text x="25.3852%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="25.8125%" y="773" width="0.0121%" height="15" fill="rgb(253,91,49)" fg:x="29878" fg:w="14"/><text x="26.0625%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (502 samples, 0.43%)</title><rect x="26.1244%" y="741" width="0.4337%" height="15" fill="rgb(228,155,29)" fg:x="30239" fg:w="502"/><text x="26.3744%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (375 samples, 0.32%)</title><rect x="26.5581%" y="741" width="0.3240%" height="15" fill="rgb(243,57,37)" fg:x="30741" fg:w="375"/><text x="26.8081%" y="751.50"></text></g><g><title>core::ptr::write (344 samples, 0.30%)</title><rect x="26.5849%" y="725" width="0.2972%" height="15" fill="rgb(244,167,17)" fg:x="30772" fg:w="344"/><text x="26.8349%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (344 samples, 0.30%)</title><rect x="26.5849%" y="709" width="0.2972%" height="15" fill="rgb(207,181,38)" fg:x="30772" fg:w="344"/><text x="26.8349%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.02%)</title><rect x="26.8829%" y="741" width="0.0207%" height="15" fill="rgb(211,8,23)" fg:x="31117" fg:w="24"/><text x="27.1329%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (12 samples, 0.01%)</title><rect x="26.9201%" y="709" width="0.0104%" height="15" fill="rgb(235,11,44)" fg:x="31160" fg:w="12"/><text x="27.1701%" y="719.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (12 samples, 0.01%)</title><rect x="26.9201%" y="693" width="0.0104%" height="15" fill="rgb(248,18,52)" fg:x="31160" fg:w="12"/><text x="27.1701%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (598 samples, 0.52%)</title><rect x="26.9313%" y="645" width="0.5166%" height="15" fill="rgb(208,4,7)" fg:x="31173" fg:w="598"/><text x="27.1813%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (532 samples, 0.46%)</title><rect x="26.9883%" y="629" width="0.4596%" height="15" fill="rgb(240,17,39)" fg:x="31239" fg:w="532"/><text x="27.2383%" y="639.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (619 samples, 0.53%)</title><rect x="26.9184%" y="725" width="0.5348%" height="15" fill="rgb(207,170,3)" fg:x="31158" fg:w="619"/><text x="27.1684%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (604 samples, 0.52%)</title><rect x="26.9313%" y="709" width="0.5218%" height="15" fill="rgb(236,100,52)" fg:x="31173" fg:w="604"/><text x="27.1813%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (604 samples, 0.52%)</title><rect x="26.9313%" y="693" width="0.5218%" height="15" fill="rgb(246,78,51)" fg:x="31173" fg:w="604"/><text x="27.1813%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (604 samples, 0.52%)</title><rect x="26.9313%" y="677" width="0.5218%" height="15" fill="rgb(211,17,15)" fg:x="31173" fg:w="604"/><text x="27.1813%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (604 samples, 0.52%)</title><rect x="26.9313%" y="661" width="0.5218%" height="15" fill="rgb(209,59,46)" fg:x="31173" fg:w="604"/><text x="27.1813%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (650 samples, 0.56%)</title><rect x="26.9037%" y="741" width="0.5616%" height="15" fill="rgb(210,92,25)" fg:x="31141" fg:w="650"/><text x="27.1537%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (14 samples, 0.01%)</title><rect x="27.4531%" y="725" width="0.0121%" height="15" fill="rgb(238,174,52)" fg:x="31777" fg:w="14"/><text x="27.7031%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="27.9620%" y="709" width="0.0104%" height="15" fill="rgb(230,73,7)" fg:x="32366" fg:w="12"/><text x="28.2120%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (12 samples, 0.01%)</title><rect x="27.9620%" y="693" width="0.0104%" height="15" fill="rgb(243,124,40)" fg:x="32366" fg:w="12"/><text x="28.2120%" y="703.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="27.9724%" y="709" width="0.0199%" height="15" fill="rgb(244,170,11)" fg:x="32378" fg:w="23"/><text x="28.2224%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (19 samples, 0.02%)</title><rect x="27.9948%" y="709" width="0.0164%" height="15" fill="rgb(207,114,54)" fg:x="32404" fg:w="19"/><text x="28.2448%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (315 samples, 0.27%)</title><rect x="28.0112%" y="709" width="0.2721%" height="15" fill="rgb(205,42,20)" fg:x="32423" fg:w="315"/><text x="28.2612%" y="719.50"></text></g><g><title>core::ptr::write (307 samples, 0.27%)</title><rect x="28.0181%" y="693" width="0.2652%" height="15" fill="rgb(230,30,28)" fg:x="32431" fg:w="307"/><text x="28.2681%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (300 samples, 0.26%)</title><rect x="28.0242%" y="677" width="0.2592%" height="15" fill="rgb(205,73,54)" fg:x="32438" fg:w="300"/><text x="28.2742%" y="687.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (943 samples, 0.81%)</title><rect x="27.4704%" y="725" width="0.8147%" height="15" fill="rgb(254,227,23)" fg:x="31797" fg:w="943"/><text x="27.7204%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (964 samples, 0.83%)</title><rect x="27.4652%" y="741" width="0.8328%" height="15" fill="rgb(228,202,34)" fg:x="31791" fg:w="964"/><text x="27.7152%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (15 samples, 0.01%)</title><rect x="28.2851%" y="725" width="0.0130%" height="15" fill="rgb(222,225,37)" fg:x="32740" fg:w="15"/><text x="28.5351%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (2,761 samples, 2.39%)</title><rect x="25.9326%" y="757" width="2.3853%" height="15" fill="rgb(221,14,54)" fg:x="30017" fg:w="2761"/><text x="26.1826%" y="767.50">tr..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (23 samples, 0.02%)</title><rect x="28.2981%" y="741" width="0.0199%" height="15" fill="rgb(254,102,2)" fg:x="32755" fg:w="23"/><text x="28.5481%" y="751.50"></text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (119 samples, 0.10%)</title><rect x="28.3179%" y="757" width="0.1028%" height="15" fill="rgb(232,104,17)" fg:x="32778" fg:w="119"/><text x="28.5679%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,034 samples, 2.62%)</title><rect x="25.8246%" y="773" width="2.6212%" height="15" fill="rgb(250,220,14)" fg:x="29892" fg:w="3034"/><text x="26.0746%" y="783.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (29 samples, 0.03%)</title><rect x="28.4207%" y="757" width="0.0251%" height="15" fill="rgb(241,158,9)" fg:x="32897" fg:w="29"/><text x="28.6707%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,235 samples, 1.07%)</title><rect x="28.4458%" y="773" width="1.0670%" height="15" fill="rgb(246,9,43)" fg:x="32926" fg:w="1235"/><text x="28.6958%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (34 samples, 0.03%)</title><rect x="29.5171%" y="773" width="0.0294%" height="15" fill="rgb(206,73,33)" fg:x="34166" fg:w="34"/><text x="29.7671%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="29.5171%" y="757" width="0.0294%" height="15" fill="rgb(222,79,8)" fg:x="34166" fg:w="34"/><text x="29.7671%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::maybe_send (12 samples, 0.01%)</title><rect x="29.5559%" y="773" width="0.0104%" height="15" fill="rgb(234,8,54)" fg:x="34211" fg:w="12"/><text x="29.8059%" y="783.50"></text></g><g><title>async_global_executor::reactor::block_on (13,186 samples, 11.39%)</title><rect x="18.1754%" y="1125" width="11.3918%" height="15" fill="rgb(209,134,38)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1135.50">async_global_exec..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (13,186 samples, 11.39%)</title><rect x="18.1754%" y="1109" width="11.3918%" height="15" fill="rgb(230,127,29)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1119.50">async_global_exec..</text></g><g><title>async_io::driver::block_on (13,186 samples, 11.39%)</title><rect x="18.1754%" y="1093" width="11.3918%" height="15" fill="rgb(242,44,41)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1103.50">async_io::driver:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,186 samples, 11.39%)</title><rect x="18.1754%" y="1077" width="11.3918%" height="15" fill="rgb(222,56,43)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1087.50">&lt;futures_lite::fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,186 samples, 11.39%)</title><rect x="18.1754%" y="1061" width="11.3918%" height="15" fill="rgb(238,39,47)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1071.50">&lt;core::future::fr..</text></g><g><title>async_executor::Executor::run::{{closure}} (13,186 samples, 11.39%)</title><rect x="18.1754%" y="1045" width="11.3918%" height="15" fill="rgb(226,79,43)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1055.50">async_executor::E..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,186 samples, 11.39%)</title><rect x="18.1754%" y="1029" width="11.3918%" height="15" fill="rgb(242,105,53)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1039.50">&lt;futures_lite::fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,186 samples, 11.39%)</title><rect x="18.1754%" y="1013" width="11.3918%" height="15" fill="rgb(251,132,46)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1023.50">&lt;core::future::fr..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13,186 samples, 11.39%)</title><rect x="18.1754%" y="997" width="11.3918%" height="15" fill="rgb(231,77,14)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="1007.50">async_executor::E..</text></g><g><title>async_task::runnable::Runnable::run (13,186 samples, 11.39%)</title><rect x="18.1754%" y="981" width="11.3918%" height="15" fill="rgb(240,135,9)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="991.50">async_task::runna..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13,186 samples, 11.39%)</title><rect x="18.1754%" y="965" width="11.3918%" height="15" fill="rgb(248,109,14)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="975.50">async_task::raw::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13,186 samples, 11.39%)</title><rect x="18.1754%" y="949" width="11.3918%" height="15" fill="rgb(227,146,52)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="959.50">&lt;core::pin::Pin&lt;P..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,186 samples, 11.39%)</title><rect x="18.1754%" y="933" width="11.3918%" height="15" fill="rgb(232,54,3)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="943.50">&lt;core::future::fr..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (13,186 samples, 11.39%)</title><rect x="18.1754%" y="917" width="11.3918%" height="15" fill="rgb(229,201,43)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="927.50">async_executor::E..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13,186 samples, 11.39%)</title><rect x="18.1754%" y="901" width="11.3918%" height="15" fill="rgb(252,161,33)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="911.50">&lt;async_std::task:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13,186 samples, 11.39%)</title><rect x="18.1754%" y="885" width="11.3918%" height="15" fill="rgb(226,146,40)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="895.50">async_std::task::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,186 samples, 11.39%)</title><rect x="18.1754%" y="869" width="11.3918%" height="15" fill="rgb(219,47,25)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="879.50">std::thread::loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,186 samples, 11.39%)</title><rect x="18.1754%" y="853" width="11.3918%" height="15" fill="rgb(250,135,13)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="863.50">std::thread::loca..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13,186 samples, 11.39%)</title><rect x="18.1754%" y="837" width="11.3918%" height="15" fill="rgb(219,229,18)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="847.50">async_std::task::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13,186 samples, 11.39%)</title><rect x="18.1754%" y="821" width="11.3918%" height="15" fill="rgb(217,152,27)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="831.50">&lt;async_std::task:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,186 samples, 11.39%)</title><rect x="18.1754%" y="805" width="11.3918%" height="15" fill="rgb(225,71,47)" fg:x="21038" fg:w="13186"/><text x="18.4254%" y="815.50">&lt;core::future::fr..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,093 samples, 4.40%)</title><rect x="25.1672%" y="789" width="4.4000%" height="15" fill="rgb(220,139,14)" fg:x="29131" fg:w="5093"/><text x="25.4172%" y="799.50">tremo..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::_{{closure}} (28 samples, 0.02%)</title><rect x="29.5680%" y="661" width="0.0242%" height="15" fill="rgb(247,54,32)" fg:x="34225" fg:w="28"/><text x="29.8180%" y="671.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="29.8436%" y="645" width="0.0112%" height="15" fill="rgb(252,131,39)" fg:x="34544" fg:w="13"/><text x="30.0936%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::as_slice (13 samples, 0.01%)</title><rect x="29.8436%" y="629" width="0.0112%" height="15" fill="rgb(210,108,39)" fg:x="34544" fg:w="13"/><text x="30.0936%" y="639.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (44 samples, 0.04%)</title><rect x="30.8898%" y="565" width="0.0380%" height="15" fill="rgb(205,23,29)" fg:x="35755" fg:w="44"/><text x="31.1398%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.02%)</title><rect x="30.9054%" y="549" width="0.0225%" height="15" fill="rgb(246,139,46)" fg:x="35773" fg:w="26"/><text x="31.1554%" y="559.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkEvent as core::convert::From&lt;tremor_pipeline::event::Event&gt;&gt;::from (720 samples, 0.62%)</title><rect x="30.6816%" y="597" width="0.6220%" height="15" fill="rgb(250,81,26)" fg:x="35514" fg:w="720"/><text x="30.9316%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (516 samples, 0.45%)</title><rect x="30.8579%" y="581" width="0.4458%" height="15" fill="rgb(214,104,7)" fg:x="35718" fg:w="516"/><text x="31.1079%" y="591.50"></text></g><g><title>&lt;tremor_script::pdk::PdkEventPayload as core::convert::From&lt;tremor_script::srs::EventPayload&gt;&gt;::from (435 samples, 0.38%)</title><rect x="30.9279%" y="565" width="0.3758%" height="15" fill="rgb(233,189,8)" fg:x="35799" fg:w="435"/><text x="31.1779%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (114 samples, 0.10%)</title><rect x="31.2052%" y="549" width="0.0985%" height="15" fill="rgb(228,141,17)" fg:x="36120" fg:w="114"/><text x="31.4552%" y="559.50"></text></g><g><title>&lt;tremor_script::pdk::PdkValueAndMeta as core::convert::From&lt;tremor_script::srs::ValueAndMeta&gt;&gt;::from (106 samples, 0.09%)</title><rect x="31.2121%" y="533" width="0.0916%" height="15" fill="rgb(247,157,1)" fg:x="36128" fg:w="106"/><text x="31.4621%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (29 samples, 0.03%)</title><rect x="31.2786%" y="517" width="0.0251%" height="15" fill="rgb(249,225,5)" fg:x="36205" fg:w="29"/><text x="31.5286%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (278 samples, 0.24%)</title><rect x="31.3037%" y="597" width="0.2402%" height="15" fill="rgb(242,55,13)" fg:x="36234" fg:w="278"/><text x="31.5537%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,039 samples, 0.90%)</title><rect x="30.6747%" y="613" width="0.8976%" height="15" fill="rgb(230,49,50)" fg:x="35506" fg:w="1039"/><text x="30.9247%" y="623.50"></text></g><g><title>abi_stable::std_types::result::&lt;impl core::convert::From&lt;abi_stable::std_types::result::RResult&lt;T,E&gt;&gt; for core::result::Result&lt;T,E&gt;&gt;::from (33 samples, 0.03%)</title><rect x="31.5438%" y="597" width="0.0285%" height="15" fill="rgb(241,111,38)" fg:x="36512" fg:w="33"/><text x="31.7938%" y="607.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (140 samples, 0.12%)</title><rect x="31.5724%" y="581" width="0.1210%" height="15" fill="rgb(252,155,4)" fg:x="36545" fg:w="140"/><text x="31.8224%" y="591.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (137 samples, 0.12%)</title><rect x="31.5749%" y="565" width="0.1184%" height="15" fill="rgb(212,69,32)" fg:x="36548" fg:w="137"/><text x="31.8249%" y="575.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (137 samples, 0.12%)</title><rect x="31.5749%" y="549" width="0.1184%" height="15" fill="rgb(243,107,47)" fg:x="36548" fg:w="137"/><text x="31.8249%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (38 samples, 0.03%)</title><rect x="31.7123%" y="533" width="0.0328%" height="15" fill="rgb(247,130,12)" fg:x="36707" fg:w="38"/><text x="31.9623%" y="543.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (38 samples, 0.03%)</title><rect x="31.7123%" y="517" width="0.0328%" height="15" fill="rgb(233,74,16)" fg:x="36707" fg:w="38"/><text x="31.9623%" y="527.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (38 samples, 0.03%)</title><rect x="31.7123%" y="501" width="0.0328%" height="15" fill="rgb(208,58,18)" fg:x="36707" fg:w="38"/><text x="31.9623%" y="511.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (806 samples, 0.70%)</title><rect x="31.6985%" y="565" width="0.6963%" height="15" fill="rgb(242,225,1)" fg:x="36691" fg:w="806"/><text x="31.9485%" y="575.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (797 samples, 0.69%)</title><rect x="31.7063%" y="549" width="0.6886%" height="15" fill="rgb(249,39,40)" fg:x="36700" fg:w="797"/><text x="31.9563%" y="559.50"></text></g><g><title>std::panic::catch_unwind (752 samples, 0.65%)</title><rect x="31.7451%" y="533" width="0.6497%" height="15" fill="rgb(207,72,44)" fg:x="36745" fg:w="752"/><text x="31.9951%" y="543.50"></text></g><g><title>std::panicking::try (752 samples, 0.65%)</title><rect x="31.7451%" y="517" width="0.6497%" height="15" fill="rgb(215,193,12)" fg:x="36745" fg:w="752"/><text x="31.9951%" y="527.50"></text></g><g><title>std::panicking::try::do_call (752 samples, 0.65%)</title><rect x="31.7451%" y="501" width="0.6497%" height="15" fill="rgb(248,41,39)" fg:x="36745" fg:w="752"/><text x="31.9951%" y="511.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (742 samples, 0.64%)</title><rect x="31.7538%" y="485" width="0.6410%" height="15" fill="rgb(253,85,4)" fg:x="36755" fg:w="742"/><text x="32.0038%" y="495.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (819 samples, 0.71%)</title><rect x="31.6933%" y="581" width="0.7076%" height="15" fill="rgb(243,70,31)" fg:x="36685" fg:w="819"/><text x="31.9433%" y="591.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,112 samples, 0.96%)</title><rect x="31.5724%" y="613" width="0.9607%" height="15" fill="rgb(253,195,26)" fg:x="36545" fg:w="1112"/><text x="31.8224%" y="623.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,112 samples, 0.96%)</title><rect x="31.5724%" y="597" width="0.9607%" height="15" fill="rgb(243,42,11)" fg:x="36545" fg:w="1112"/><text x="31.8224%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (153 samples, 0.13%)</title><rect x="32.4009%" y="581" width="0.1322%" height="15" fill="rgb(239,66,17)" fg:x="37504" fg:w="153"/><text x="32.6509%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (184 samples, 0.16%)</title><rect x="32.5330%" y="613" width="0.1590%" height="15" fill="rgb(217,132,21)" fg:x="37657" fg:w="184"/><text x="32.7830%" y="623.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (59 samples, 0.05%)</title><rect x="32.6920%" y="613" width="0.0510%" height="15" fill="rgb(252,202,21)" fg:x="37841" fg:w="59"/><text x="32.9420%" y="623.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (15 samples, 0.01%)</title><rect x="32.7438%" y="565" width="0.0130%" height="15" fill="rgb(233,98,36)" fg:x="37901" fg:w="15"/><text x="32.9938%" y="575.50"></text></g><g><title>async_ffi::DropBomb::with (15 samples, 0.01%)</title><rect x="32.7438%" y="549" width="0.0130%" height="15" fill="rgb(216,153,54)" fg:x="37901" fg:w="15"/><text x="32.9938%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (34 samples, 0.03%)</title><rect x="32.7637%" y="501" width="0.0294%" height="15" fill="rgb(250,99,7)" fg:x="37924" fg:w="34"/><text x="33.0137%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (34 samples, 0.03%)</title><rect x="32.7637%" y="485" width="0.0294%" height="15" fill="rgb(207,56,50)" fg:x="37924" fg:w="34"/><text x="33.0137%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (26 samples, 0.02%)</title><rect x="32.7706%" y="469" width="0.0225%" height="15" fill="rgb(244,61,34)" fg:x="37932" fg:w="26"/><text x="33.0206%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (26 samples, 0.02%)</title><rect x="32.7706%" y="453" width="0.0225%" height="15" fill="rgb(241,50,38)" fg:x="37932" fg:w="26"/><text x="33.0206%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (26 samples, 0.02%)</title><rect x="32.7706%" y="437" width="0.0225%" height="15" fill="rgb(212,166,30)" fg:x="37932" fg:w="26"/><text x="33.0206%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (36 samples, 0.03%)</title><rect x="32.7637%" y="533" width="0.0311%" height="15" fill="rgb(249,127,32)" fg:x="37924" fg:w="36"/><text x="33.0137%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (36 samples, 0.03%)</title><rect x="32.7637%" y="517" width="0.0311%" height="15" fill="rgb(209,103,0)" fg:x="37924" fg:w="36"/><text x="33.0137%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (44 samples, 0.04%)</title><rect x="32.7637%" y="549" width="0.0380%" height="15" fill="rgb(238,209,51)" fg:x="37924" fg:w="44"/><text x="33.0137%" y="559.50"></text></g><g><title>rust_dealloc (60 samples, 0.05%)</title><rect x="32.7568%" y="565" width="0.0518%" height="15" fill="rgb(237,56,23)" fg:x="37916" fg:w="60"/><text x="33.0068%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (14 samples, 0.01%)</title><rect x="32.8104%" y="549" width="0.0121%" height="15" fill="rgb(215,153,46)" fg:x="37978" fg:w="14"/><text x="33.0604%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (93 samples, 0.08%)</title><rect x="32.7438%" y="613" width="0.0803%" height="15" fill="rgb(224,49,31)" fg:x="37901" fg:w="93"/><text x="32.9938%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::sink::SinkReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (93 samples, 0.08%)</title><rect x="32.7438%" y="597" width="0.0803%" height="15" fill="rgb(250,18,42)" fg:x="37901" fg:w="93"/><text x="32.9938%" y="607.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.08%)</title><rect x="32.7438%" y="581" width="0.0803%" height="15" fill="rgb(215,176,39)" fg:x="37901" fg:w="93"/><text x="32.9938%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (18 samples, 0.02%)</title><rect x="32.8086%" y="565" width="0.0156%" height="15" fill="rgb(223,77,29)" fg:x="37976" fg:w="18"/><text x="33.0586%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (295 samples, 0.25%)</title><rect x="33.1102%" y="597" width="0.2549%" height="15" fill="rgb(234,94,52)" fg:x="38325" fg:w="295"/><text x="33.3602%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (139 samples, 0.12%)</title><rect x="33.3961%" y="501" width="0.1201%" height="15" fill="rgb(220,154,50)" fg:x="38656" fg:w="139"/><text x="33.6461%" y="511.50"></text></g><g><title>rust_alloc (17 samples, 0.01%)</title><rect x="33.5317%" y="357" width="0.0147%" height="15" fill="rgb(212,11,10)" fg:x="38813" fg:w="17"/><text x="33.7817%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="33.5577%" y="309" width="0.0104%" height="15" fill="rgb(205,166,19)" fg:x="38843" fg:w="12"/><text x="33.8077%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (74 samples, 0.06%)</title><rect x="33.5577%" y="341" width="0.0639%" height="15" fill="rgb(244,198,16)" fg:x="38843" fg:w="74"/><text x="33.8077%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (74 samples, 0.06%)</title><rect x="33.5577%" y="325" width="0.0639%" height="15" fill="rgb(219,69,12)" fg:x="38843" fg:w="74"/><text x="33.8077%" y="335.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (62 samples, 0.05%)</title><rect x="33.5680%" y="309" width="0.0536%" height="15" fill="rgb(245,30,7)" fg:x="38855" fg:w="62"/><text x="33.8180%" y="319.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (54 samples, 0.05%)</title><rect x="33.5749%" y="293" width="0.0467%" height="15" fill="rgb(218,221,48)" fg:x="38863" fg:w="54"/><text x="33.8249%" y="303.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="33.5749%" y="277" width="0.0467%" height="15" fill="rgb(216,66,15)" fg:x="38863" fg:w="54"/><text x="33.8249%" y="287.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="33.5749%" y="261" width="0.0467%" height="15" fill="rgb(226,122,50)" fg:x="38863" fg:w="54"/><text x="33.8249%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (12 samples, 0.01%)</title><rect x="33.6346%" y="293" width="0.0104%" height="15" fill="rgb(239,156,16)" fg:x="38932" fg:w="12"/><text x="33.8846%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="33.6449%" y="293" width="0.0104%" height="15" fill="rgb(224,27,38)" fg:x="38944" fg:w="12"/><text x="33.8949%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="33.6259%" y="341" width="0.0302%" height="15" fill="rgb(224,39,27)" fg:x="38922" fg:w="35"/><text x="33.8759%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="33.6268%" y="325" width="0.0294%" height="15" fill="rgb(215,92,29)" fg:x="38923" fg:w="34"/><text x="33.8768%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (29 samples, 0.03%)</title><rect x="33.6311%" y="309" width="0.0251%" height="15" fill="rgb(207,159,16)" fg:x="38928" fg:w="29"/><text x="33.8811%" y="319.50"></text></g><g><title>snmalloc::FreeListIter::empty (45 samples, 0.04%)</title><rect x="33.6562%" y="341" width="0.0389%" height="15" fill="rgb(238,163,47)" fg:x="38957" fg:w="45"/><text x="33.9062%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (45 samples, 0.04%)</title><rect x="33.6562%" y="325" width="0.0389%" height="15" fill="rgb(219,91,49)" fg:x="38957" fg:w="45"/><text x="33.9062%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (308 samples, 0.27%)</title><rect x="33.5309%" y="389" width="0.2661%" height="15" fill="rgb(227,167,31)" fg:x="38812" fg:w="308"/><text x="33.7809%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (307 samples, 0.27%)</title><rect x="33.5317%" y="373" width="0.2652%" height="15" fill="rgb(234,80,54)" fg:x="38813" fg:w="307"/><text x="33.7817%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (289 samples, 0.25%)</title><rect x="33.5473%" y="357" width="0.2497%" height="15" fill="rgb(212,114,2)" fg:x="38831" fg:w="289"/><text x="33.7973%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (118 samples, 0.10%)</title><rect x="33.6950%" y="341" width="0.1019%" height="15" fill="rgb(234,50,24)" fg:x="39002" fg:w="118"/><text x="33.9450%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (118 samples, 0.10%)</title><rect x="33.6950%" y="325" width="0.1019%" height="15" fill="rgb(221,68,8)" fg:x="39002" fg:w="118"/><text x="33.9450%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (485 samples, 0.42%)</title><rect x="33.3806%" y="517" width="0.4190%" height="15" fill="rgb(254,180,31)" fg:x="38638" fg:w="485"/><text x="33.6306%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (328 samples, 0.28%)</title><rect x="33.5162%" y="501" width="0.2834%" height="15" fill="rgb(247,130,50)" fg:x="38795" fg:w="328"/><text x="33.7662%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (328 samples, 0.28%)</title><rect x="33.5162%" y="485" width="0.2834%" height="15" fill="rgb(211,109,4)" fg:x="38795" fg:w="328"/><text x="33.7662%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (328 samples, 0.28%)</title><rect x="33.5162%" y="469" width="0.2834%" height="15" fill="rgb(238,50,21)" fg:x="38795" fg:w="328"/><text x="33.7662%" y="479.50"></text></g><g><title>alloc::alloc::alloc (328 samples, 0.28%)</title><rect x="33.5162%" y="453" width="0.2834%" height="15" fill="rgb(225,57,45)" fg:x="38795" fg:w="328"/><text x="33.7662%" y="463.50"></text></g><g><title>__rg_alloc (328 samples, 0.28%)</title><rect x="33.5162%" y="437" width="0.2834%" height="15" fill="rgb(209,196,50)" fg:x="38795" fg:w="328"/><text x="33.7662%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (328 samples, 0.28%)</title><rect x="33.5162%" y="421" width="0.2834%" height="15" fill="rgb(242,140,13)" fg:x="38795" fg:w="328"/><text x="33.7662%" y="431.50"></text></g><g><title>rust_alloc (320 samples, 0.28%)</title><rect x="33.5231%" y="405" width="0.2765%" height="15" fill="rgb(217,111,7)" fg:x="38803" fg:w="320"/><text x="33.7731%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event (493 samples, 0.43%)</title><rect x="33.3806%" y="581" width="0.4259%" height="15" fill="rgb(253,193,51)" fg:x="38638" fg:w="493"/><text x="33.6306%" y="591.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (493 samples, 0.43%)</title><rect x="33.3806%" y="565" width="0.4259%" height="15" fill="rgb(252,70,29)" fg:x="38638" fg:w="493"/><text x="33.6306%" y="575.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (493 samples, 0.43%)</title><rect x="33.3806%" y="549" width="0.4259%" height="15" fill="rgb(232,127,12)" fg:x="38638" fg:w="493"/><text x="33.6306%" y="559.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (493 samples, 0.43%)</title><rect x="33.3806%" y="533" width="0.4259%" height="15" fill="rgb(211,180,21)" fg:x="38638" fg:w="493"/><text x="33.6306%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::on_event (507 samples, 0.44%)</title><rect x="33.3693%" y="597" width="0.4380%" height="15" fill="rgb(229,72,13)" fg:x="38625" fg:w="507"/><text x="33.6193%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (4,340 samples, 3.75%)</title><rect x="30.1045%" y="629" width="3.7495%" height="15" fill="rgb(240,211,49)" fg:x="34846" fg:w="4340"/><text x="30.3545%" y="639.50">trem..</text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::RawSink_TO&lt;_ErasedPtr&gt;::on_event (1,192 samples, 1.03%)</title><rect x="32.8242%" y="613" width="1.0298%" height="15" fill="rgb(219,149,40)" fg:x="37994" fg:w="1192"/><text x="33.0742%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::RawSink_trait::_::&lt;impl tremor_runtime::connectors::sink::RawSink_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::on_event (51 samples, 0.04%)</title><rect x="33.8099%" y="597" width="0.0441%" height="15" fill="rgb(210,127,46)" fg:x="39135" fg:w="51"/><text x="34.0599%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (16 samples, 0.01%)</title><rect x="34.0294%" y="597" width="0.0138%" height="15" fill="rgb(220,106,7)" fg:x="39389" fg:w="16"/><text x="34.2794%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (16 samples, 0.01%)</title><rect x="34.0294%" y="581" width="0.0138%" height="15" fill="rgb(249,31,22)" fg:x="39389" fg:w="16"/><text x="34.2794%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (16 samples, 0.01%)</title><rect x="34.0294%" y="565" width="0.0138%" height="15" fill="rgb(253,1,49)" fg:x="39389" fg:w="16"/><text x="34.2794%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (20 samples, 0.02%)</title><rect x="34.0492%" y="533" width="0.0173%" height="15" fill="rgb(227,144,33)" fg:x="39412" fg:w="20"/><text x="34.2992%" y="543.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="34.0803%" y="437" width="0.0130%" height="15" fill="rgb(249,163,44)" fg:x="39448" fg:w="15"/><text x="34.3303%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="34.1097%" y="389" width="0.0181%" height="15" fill="rgb(234,15,39)" fg:x="39482" fg:w="21"/><text x="34.3597%" y="399.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="34.1106%" y="373" width="0.0173%" height="15" fill="rgb(207,66,16)" fg:x="39483" fg:w="20"/><text x="34.3606%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (42 samples, 0.04%)</title><rect x="34.0985%" y="437" width="0.0363%" height="15" fill="rgb(233,112,24)" fg:x="39469" fg:w="42"/><text x="34.3485%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (42 samples, 0.04%)</title><rect x="34.0985%" y="421" width="0.0363%" height="15" fill="rgb(230,90,22)" fg:x="39469" fg:w="42"/><text x="34.3485%" y="431.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (42 samples, 0.04%)</title><rect x="34.0985%" y="405" width="0.0363%" height="15" fill="rgb(229,61,13)" fg:x="39469" fg:w="42"/><text x="34.3485%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (69 samples, 0.06%)</title><rect x="34.0803%" y="469" width="0.0596%" height="15" fill="rgb(225,57,24)" fg:x="39448" fg:w="69"/><text x="34.3303%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (69 samples, 0.06%)</title><rect x="34.0803%" y="453" width="0.0596%" height="15" fill="rgb(208,169,48)" fg:x="39448" fg:w="69"/><text x="34.3303%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (70 samples, 0.06%)</title><rect x="34.0803%" y="501" width="0.0605%" height="15" fill="rgb(244,218,51)" fg:x="39448" fg:w="70"/><text x="34.3303%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (70 samples, 0.06%)</title><rect x="34.0803%" y="485" width="0.0605%" height="15" fill="rgb(214,148,10)" fg:x="39448" fg:w="70"/><text x="34.3303%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (87 samples, 0.08%)</title><rect x="34.0717%" y="517" width="0.0752%" height="15" fill="rgb(225,174,27)" fg:x="39438" fg:w="87"/><text x="34.3217%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,959 samples, 4.28%)</title><rect x="29.8704%" y="645" width="4.2842%" height="15" fill="rgb(230,96,26)" fg:x="34575" fg:w="4959"/><text x="30.1204%" y="655.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (344 samples, 0.30%)</title><rect x="33.8575%" y="629" width="0.2972%" height="15" fill="rgb(232,10,30)" fg:x="39190" fg:w="344"/><text x="34.1075%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (145 samples, 0.13%)</title><rect x="34.0294%" y="613" width="0.1253%" height="15" fill="rgb(222,8,50)" fg:x="39389" fg:w="145"/><text x="34.2794%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::pdk::PdkOpMeta&gt; (129 samples, 0.11%)</title><rect x="34.0432%" y="597" width="0.1114%" height="15" fill="rgb(213,81,27)" fg:x="39405" fg:w="129"/><text x="34.2932%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::RHashMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (129 samples, 0.11%)</title><rect x="34.0432%" y="581" width="0.1114%" height="15" fill="rgb(245,50,10)" fg:x="39405" fg:w="129"/><text x="34.2932%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;abi_stable::std_types::map::ErasedMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue,std::collections::hash::map::RandomState&gt;&gt;&gt; (129 samples, 0.11%)</title><rect x="34.0432%" y="565" width="0.1114%" height="15" fill="rgb(216,100,18)" fg:x="39405" fg:w="129"/><text x="34.2932%" y="575.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (129 samples, 0.11%)</title><rect x="34.0432%" y="549" width="0.1114%" height="15" fill="rgb(236,147,54)" fg:x="39405" fg:w="129"/><text x="34.2932%" y="559.50"></text></g><g><title>rust_dealloc (102 samples, 0.09%)</title><rect x="34.0665%" y="533" width="0.0881%" height="15" fill="rgb(205,143,26)" fg:x="39432" fg:w="102"/><text x="34.3165%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="34.2886%" y="629" width="0.0181%" height="15" fill="rgb(236,26,9)" fg:x="39689" fg:w="21"/><text x="34.5386%" y="639.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (178 samples, 0.15%)</title><rect x="34.1546%" y="645" width="0.1538%" height="15" fill="rgb(221,165,53)" fg:x="39534" fg:w="178"/><text x="34.4046%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (59 samples, 0.05%)</title><rect x="34.3300%" y="629" width="0.0510%" height="15" fill="rgb(214,110,17)" fg:x="39737" fg:w="59"/><text x="34.5800%" y="639.50"></text></g><g><title>&lt;tremor_pipeline::pdk::PdkOpMeta as core::convert::From&lt;tremor_pipeline::OpMeta&gt;&gt;::from (59 samples, 0.05%)</title><rect x="34.3300%" y="613" width="0.0510%" height="15" fill="rgb(237,197,12)" fg:x="39737" fg:w="59"/><text x="34.5800%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.03%)</title><rect x="34.3542%" y="597" width="0.0268%" height="15" fill="rgb(205,84,17)" fg:x="39765" fg:w="31"/><text x="34.6042%" y="607.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (208 samples, 0.18%)</title><rect x="34.3810%" y="629" width="0.1797%" height="15" fill="rgb(237,18,45)" fg:x="39796" fg:w="208"/><text x="34.6310%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (58 samples, 0.05%)</title><rect x="34.5106%" y="613" width="0.0501%" height="15" fill="rgb(221,87,14)" fg:x="39946" fg:w="58"/><text x="34.7606%" y="623.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (31 samples, 0.03%)</title><rect x="34.5339%" y="597" width="0.0268%" height="15" fill="rgb(238,186,15)" fg:x="39973" fg:w="31"/><text x="34.7839%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (31 samples, 0.03%)</title><rect x="34.5339%" y="581" width="0.0268%" height="15" fill="rgb(208,115,11)" fg:x="39973" fg:w="31"/><text x="34.7839%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.03%)</title><rect x="34.5339%" y="565" width="0.0268%" height="15" fill="rgb(254,175,0)" fg:x="39973" fg:w="31"/><text x="34.7839%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.03%)</title><rect x="34.5339%" y="549" width="0.0268%" height="15" fill="rgb(227,24,42)" fg:x="39973" fg:w="31"/><text x="34.7839%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.03%)</title><rect x="34.5339%" y="533" width="0.0268%" height="15" fill="rgb(223,211,37)" fg:x="39973" fg:w="31"/><text x="34.7839%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.03%)</title><rect x="34.5339%" y="517" width="0.0268%" height="15" fill="rgb(235,49,27)" fg:x="39973" fg:w="31"/><text x="34.7839%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="34.5486%" y="501" width="0.0121%" height="15" fill="rgb(254,97,51)" fg:x="39990" fg:w="14"/><text x="34.7986%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (305 samples, 0.26%)</title><rect x="34.3084%" y="645" width="0.2635%" height="15" fill="rgb(249,51,40)" fg:x="39712" fg:w="305"/><text x="34.5584%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,481 samples, 1.28%)</title><rect x="34.5719%" y="645" width="1.2795%" height="15" fill="rgb(210,128,45)" fg:x="40017" fg:w="1481"/><text x="34.8219%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (51 samples, 0.04%)</title><rect x="35.9404%" y="357" width="0.0441%" height="15" fill="rgb(224,137,50)" fg:x="41601" fg:w="51"/><text x="36.1904%" y="367.50"></text></g><g><title> (51 samples, 0.04%)</title><rect x="35.9404%" y="341" width="0.0441%" height="15" fill="rgb(242,15,9)" fg:x="41601" fg:w="51"/><text x="36.1904%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (142 samples, 0.12%)</title><rect x="35.8765%" y="389" width="0.1227%" height="15" fill="rgb(233,187,41)" fg:x="41527" fg:w="142"/><text x="36.1265%" y="399.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (135 samples, 0.12%)</title><rect x="35.8825%" y="373" width="0.1166%" height="15" fill="rgb(227,2,29)" fg:x="41534" fg:w="135"/><text x="36.1325%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (14 samples, 0.01%)</title><rect x="35.9870%" y="357" width="0.0121%" height="15" fill="rgb(222,70,3)" fg:x="41655" fg:w="14"/><text x="36.2370%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (198 samples, 0.17%)</title><rect x="35.8695%" y="421" width="0.1711%" height="15" fill="rgb(213,11,42)" fg:x="41519" fg:w="198"/><text x="36.1195%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (198 samples, 0.17%)</title><rect x="35.8695%" y="405" width="0.1711%" height="15" fill="rgb(225,150,9)" fg:x="41519" fg:w="198"/><text x="36.1195%" y="415.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (47 samples, 0.04%)</title><rect x="36.0000%" y="389" width="0.0406%" height="15" fill="rgb(230,162,45)" fg:x="41670" fg:w="47"/><text x="36.2500%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (209 samples, 0.18%)</title><rect x="35.8626%" y="469" width="0.1806%" height="15" fill="rgb(222,14,52)" fg:x="41511" fg:w="209"/><text x="36.1126%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (201 samples, 0.17%)</title><rect x="35.8695%" y="453" width="0.1737%" height="15" fill="rgb(254,198,14)" fg:x="41519" fg:w="201"/><text x="36.1195%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (201 samples, 0.17%)</title><rect x="35.8695%" y="437" width="0.1737%" height="15" fill="rgb(220,217,30)" fg:x="41519" fg:w="201"/><text x="36.1195%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (225 samples, 0.19%)</title><rect x="35.8514%" y="645" width="0.1944%" height="15" fill="rgb(215,146,41)" fg:x="41498" fg:w="225"/><text x="36.1014%" y="655.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (225 samples, 0.19%)</title><rect x="35.8514%" y="629" width="0.1944%" height="15" fill="rgb(217,27,36)" fg:x="41498" fg:w="225"/><text x="36.1014%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (218 samples, 0.19%)</title><rect x="35.8575%" y="613" width="0.1883%" height="15" fill="rgb(219,218,39)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (218 samples, 0.19%)</title><rect x="35.8575%" y="597" width="0.1883%" height="15" fill="rgb(219,4,42)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (218 samples, 0.19%)</title><rect x="35.8575%" y="581" width="0.1883%" height="15" fill="rgb(249,119,36)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (218 samples, 0.19%)</title><rect x="35.8575%" y="565" width="0.1883%" height="15" fill="rgb(209,23,33)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (218 samples, 0.19%)</title><rect x="35.8575%" y="549" width="0.1883%" height="15" fill="rgb(211,10,0)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (218 samples, 0.19%)</title><rect x="35.8575%" y="533" width="0.1883%" height="15" fill="rgb(208,99,37)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="543.50"></text></g><g><title>__rg_dealloc (218 samples, 0.19%)</title><rect x="35.8575%" y="517" width="0.1883%" height="15" fill="rgb(213,132,31)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (218 samples, 0.19%)</title><rect x="35.8575%" y="501" width="0.1883%" height="15" fill="rgb(243,129,40)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="511.50"></text></g><g><title>rust_dealloc (218 samples, 0.19%)</title><rect x="35.8575%" y="485" width="0.1883%" height="15" fill="rgb(210,66,33)" fg:x="41505" fg:w="218"/><text x="36.1075%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="36.0458%" y="629" width="0.0268%" height="15" fill="rgb(209,189,4)" fg:x="41723" fg:w="31"/><text x="36.2958%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (39 samples, 0.03%)</title><rect x="36.0458%" y="645" width="0.0337%" height="15" fill="rgb(214,107,37)" fg:x="41723" fg:w="39"/><text x="36.2958%" y="655.50"></text></g><g><title>core::time::Duration::as_nanos (16 samples, 0.01%)</title><rect x="36.1261%" y="629" width="0.0138%" height="15" fill="rgb(245,88,54)" fg:x="41816" fg:w="16"/><text x="36.3761%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (117 samples, 0.10%)</title><rect x="36.2160%" y="581" width="0.1011%" height="15" fill="rgb(205,146,20)" fg:x="41920" fg:w="117"/><text x="36.4660%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (117 samples, 0.10%)</title><rect x="36.2160%" y="565" width="0.1011%" height="15" fill="rgb(220,161,25)" fg:x="41920" fg:w="117"/><text x="36.4660%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (116 samples, 0.10%)</title><rect x="36.2168%" y="549" width="0.1002%" height="15" fill="rgb(215,152,15)" fg:x="41921" fg:w="116"/><text x="36.4668%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (116 samples, 0.10%)</title><rect x="36.2168%" y="533" width="0.1002%" height="15" fill="rgb(233,192,44)" fg:x="41921" fg:w="116"/><text x="36.4668%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (116 samples, 0.10%)</title><rect x="36.2168%" y="517" width="0.1002%" height="15" fill="rgb(240,170,46)" fg:x="41921" fg:w="116"/><text x="36.4668%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (54 samples, 0.05%)</title><rect x="36.2704%" y="501" width="0.0467%" height="15" fill="rgb(207,104,33)" fg:x="41983" fg:w="54"/><text x="36.5204%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (248 samples, 0.21%)</title><rect x="36.1400%" y="613" width="0.2143%" height="15" fill="rgb(219,21,39)" fg:x="41832" fg:w="248"/><text x="36.3900%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (248 samples, 0.21%)</title><rect x="36.1400%" y="597" width="0.2143%" height="15" fill="rgb(214,133,29)" fg:x="41832" fg:w="248"/><text x="36.3900%" y="607.50"></text></g><g><title>core::time::Duration::new (43 samples, 0.04%)</title><rect x="36.3171%" y="581" width="0.0371%" height="15" fill="rgb(226,93,6)" fg:x="42037" fg:w="43"/><text x="36.5671%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (263 samples, 0.23%)</title><rect x="36.1400%" y="629" width="0.2272%" height="15" fill="rgb(252,222,34)" fg:x="41832" fg:w="263"/><text x="36.3900%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (15 samples, 0.01%)</title><rect x="36.3542%" y="613" width="0.0130%" height="15" fill="rgb(252,92,48)" fg:x="42080" fg:w="15"/><text x="36.6042%" y="623.50"></text></g><g><title>[[vdso]] (500 samples, 0.43%)</title><rect x="36.8648%" y="549" width="0.4320%" height="15" fill="rgb(245,223,24)" fg:x="42671" fg:w="500"/><text x="37.1148%" y="559.50"></text></g><g><title>tremor_common::time::nanotime (1,410 samples, 1.22%)</title><rect x="36.0795%" y="645" width="1.2181%" height="15" fill="rgb(205,176,3)" fg:x="41762" fg:w="1410"/><text x="36.3295%" y="655.50"></text></g><g><title>std::time::SystemTime::now (1,077 samples, 0.93%)</title><rect x="36.3672%" y="629" width="0.9305%" height="15" fill="rgb(235,151,15)" fg:x="42095" fg:w="1077"/><text x="36.6172%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,077 samples, 0.93%)</title><rect x="36.3672%" y="613" width="0.9305%" height="15" fill="rgb(237,209,11)" fg:x="42095" fg:w="1077"/><text x="36.6172%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (1,077 samples, 0.93%)</title><rect x="36.3672%" y="597" width="0.9305%" height="15" fill="rgb(243,227,24)" fg:x="42095" fg:w="1077"/><text x="36.6172%" y="607.50"></text></g><g><title>__clock_gettime_2 (891 samples, 0.77%)</title><rect x="36.5279%" y="581" width="0.7698%" height="15" fill="rgb(239,193,16)" fg:x="42281" fg:w="891"/><text x="36.7779%" y="591.50"></text></g><g><title>__vdso_clock_gettime (802 samples, 0.69%)</title><rect x="36.6048%" y="565" width="0.6929%" height="15" fill="rgb(231,27,9)" fg:x="42370" fg:w="802"/><text x="36.8548%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.01%)</title><rect x="37.3045%" y="581" width="0.0138%" height="15" fill="rgb(219,169,10)" fg:x="43180" fg:w="16"/><text x="37.5545%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (13 samples, 0.01%)</title><rect x="37.3071%" y="565" width="0.0112%" height="15" fill="rgb(244,229,43)" fg:x="43183" fg:w="13"/><text x="37.5571%" y="575.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="37.3184%" y="581" width="0.0138%" height="15" fill="rgb(254,38,20)" fg:x="43196" fg:w="16"/><text x="37.5684%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (16 samples, 0.01%)</title><rect x="37.3184%" y="565" width="0.0138%" height="15" fill="rgb(250,47,30)" fg:x="43196" fg:w="16"/><text x="37.5684%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="37.3184%" y="549" width="0.0138%" height="15" fill="rgb(224,124,36)" fg:x="43196" fg:w="16"/><text x="37.5684%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (15 samples, 0.01%)</title><rect x="37.3192%" y="533" width="0.0130%" height="15" fill="rgb(246,68,51)" fg:x="43197" fg:w="15"/><text x="37.5692%" y="543.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (49 samples, 0.04%)</title><rect x="37.2976%" y="645" width="0.0423%" height="15" fill="rgb(253,43,49)" fg:x="43172" fg:w="49"/><text x="37.5476%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (41 samples, 0.04%)</title><rect x="37.3045%" y="629" width="0.0354%" height="15" fill="rgb(219,54,36)" fg:x="43180" fg:w="41"/><text x="37.5545%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (41 samples, 0.04%)</title><rect x="37.3045%" y="613" width="0.0354%" height="15" fill="rgb(227,133,34)" fg:x="43180" fg:w="41"/><text x="37.5545%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="37.3045%" y="597" width="0.0354%" height="15" fill="rgb(247,227,15)" fg:x="43180" fg:w="41"/><text x="37.5545%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies (28 samples, 0.02%)</title><rect x="37.3400%" y="645" width="0.0242%" height="15" fill="rgb(229,96,14)" fg:x="43221" fg:w="28"/><text x="37.5900%" y="655.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (13 samples, 0.01%)</title><rect x="37.3641%" y="645" width="0.0112%" height="15" fill="rgb(220,79,17)" fg:x="43249" fg:w="13"/><text x="37.6141%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (9,016 samples, 7.79%)</title><rect x="29.5922%" y="661" width="7.7892%" height="15" fill="rgb(205,131,53)" fg:x="34253" fg:w="9016"/><text x="29.8422%" y="671.50">tremor_runt..</text></g><g><title>async_global_executor::threading::thread_main_loop (9,061 samples, 7.83%)</title><rect x="29.5672%" y="1125" width="7.8281%" height="15" fill="rgb(209,50,29)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1135.50">async_globa..</text></g><g><title>std::panic::catch_unwind (9,061 samples, 7.83%)</title><rect x="29.5672%" y="1109" width="7.8281%" height="15" fill="rgb(245,86,46)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1119.50">std::panic:..</text></g><g><title>std::panicking::try (9,061 samples, 7.83%)</title><rect x="29.5672%" y="1093" width="7.8281%" height="15" fill="rgb(235,66,46)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1103.50">std::panick..</text></g><g><title>std::panicking::try::do_call (9,061 samples, 7.83%)</title><rect x="29.5672%" y="1077" width="7.8281%" height="15" fill="rgb(232,148,31)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1087.50">std::panick..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (9,061 samples, 7.83%)</title><rect x="29.5672%" y="1061" width="7.8281%" height="15" fill="rgb(217,149,8)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1071.50">async_globa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,061 samples, 7.83%)</title><rect x="29.5672%" y="1045" width="7.8281%" height="15" fill="rgb(209,183,11)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1055.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,061 samples, 7.83%)</title><rect x="29.5672%" y="1029" width="7.8281%" height="15" fill="rgb(208,55,20)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1039.50">std::thread..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (9,061 samples, 7.83%)</title><rect x="29.5672%" y="1013" width="7.8281%" height="15" fill="rgb(218,39,14)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1023.50">async_globa..</text></g><g><title>async_global_executor::reactor::block_on (9,061 samples, 7.83%)</title><rect x="29.5672%" y="997" width="7.8281%" height="15" fill="rgb(216,169,33)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="1007.50">async_globa..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (9,061 samples, 7.83%)</title><rect x="29.5672%" y="981" width="7.8281%" height="15" fill="rgb(233,80,24)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="991.50">async_globa..</text></g><g><title>async_io::driver::block_on (9,061 samples, 7.83%)</title><rect x="29.5672%" y="965" width="7.8281%" height="15" fill="rgb(213,179,31)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="975.50">async_io::d..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,061 samples, 7.83%)</title><rect x="29.5672%" y="949" width="7.8281%" height="15" fill="rgb(209,19,5)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="959.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,061 samples, 7.83%)</title><rect x="29.5672%" y="933" width="7.8281%" height="15" fill="rgb(219,18,35)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="943.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}} (9,061 samples, 7.83%)</title><rect x="29.5672%" y="917" width="7.8281%" height="15" fill="rgb(209,169,16)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="927.50">async_execu..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,061 samples, 7.83%)</title><rect x="29.5672%" y="901" width="7.8281%" height="15" fill="rgb(245,90,51)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="911.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,061 samples, 7.83%)</title><rect x="29.5672%" y="885" width="7.8281%" height="15" fill="rgb(220,99,45)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="895.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (9,061 samples, 7.83%)</title><rect x="29.5672%" y="869" width="7.8281%" height="15" fill="rgb(249,89,25)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="879.50">async_execu..</text></g><g><title>async_task::runnable::Runnable::run (9,061 samples, 7.83%)</title><rect x="29.5672%" y="853" width="7.8281%" height="15" fill="rgb(239,193,0)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="863.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,061 samples, 7.83%)</title><rect x="29.5672%" y="837" width="7.8281%" height="15" fill="rgb(231,126,1)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="847.50">async_task:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,061 samples, 7.83%)</title><rect x="29.5672%" y="821" width="7.8281%" height="15" fill="rgb(243,166,3)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="831.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,061 samples, 7.83%)</title><rect x="29.5672%" y="805" width="7.8281%" height="15" fill="rgb(223,22,34)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="815.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,061 samples, 7.83%)</title><rect x="29.5672%" y="789" width="7.8281%" height="15" fill="rgb(251,52,51)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="799.50">async_execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,061 samples, 7.83%)</title><rect x="29.5672%" y="773" width="7.8281%" height="15" fill="rgb(221,165,28)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="783.50">&lt;async_std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,061 samples, 7.83%)</title><rect x="29.5672%" y="757" width="7.8281%" height="15" fill="rgb(218,121,47)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="767.50">async_std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,061 samples, 7.83%)</title><rect x="29.5672%" y="741" width="7.8281%" height="15" fill="rgb(209,120,9)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="751.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,061 samples, 7.83%)</title><rect x="29.5672%" y="725" width="7.8281%" height="15" fill="rgb(236,68,12)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="735.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,061 samples, 7.83%)</title><rect x="29.5672%" y="709" width="7.8281%" height="15" fill="rgb(225,194,26)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="719.50">async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,061 samples, 7.83%)</title><rect x="29.5672%" y="693" width="7.8281%" height="15" fill="rgb(231,84,39)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="703.50">&lt;async_std:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,061 samples, 7.83%)</title><rect x="29.5672%" y="677" width="7.8281%" height="15" fill="rgb(210,11,45)" fg:x="34224" fg:w="9061"/><text x="29.8172%" y="687.50">&lt;core::futu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (12 samples, 0.01%)</title><rect x="37.3849%" y="661" width="0.0104%" height="15" fill="rgb(224,54,52)" fg:x="43273" fg:w="12"/><text x="37.6349%" y="671.50"></text></g><g><title>__rust_probestack (12 samples, 0.01%)</title><rect x="37.3849%" y="645" width="0.0104%" height="15" fill="rgb(238,102,14)" fg:x="43273" fg:w="12"/><text x="37.6349%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (512 samples, 0.44%)</title><rect x="37.4566%" y="741" width="0.4423%" height="15" fill="rgb(243,160,52)" fg:x="43356" fg:w="512"/><text x="37.7066%" y="751.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (541 samples, 0.47%)</title><rect x="37.4359%" y="757" width="0.4674%" height="15" fill="rgb(216,114,19)" fg:x="43332" fg:w="541"/><text x="37.6859%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (779 samples, 0.67%)</title><rect x="37.4160%" y="773" width="0.6730%" height="15" fill="rgb(244,166,37)" fg:x="43309" fg:w="779"/><text x="37.6660%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (215 samples, 0.19%)</title><rect x="37.9032%" y="757" width="0.1857%" height="15" fill="rgb(246,29,44)" fg:x="43873" fg:w="215"/><text x="38.1532%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (802 samples, 0.69%)</title><rect x="37.4013%" y="805" width="0.6929%" height="15" fill="rgb(215,56,53)" fg:x="43292" fg:w="802"/><text x="37.6513%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (802 samples, 0.69%)</title><rect x="37.4013%" y="789" width="0.6929%" height="15" fill="rgb(217,60,2)" fg:x="43292" fg:w="802"/><text x="37.6513%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (12 samples, 0.01%)</title><rect x="38.4536%" y="357" width="0.0104%" height="15" fill="rgb(207,26,24)" fg:x="44510" fg:w="12"/><text x="38.7036%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (41 samples, 0.04%)</title><rect x="38.4648%" y="325" width="0.0354%" height="15" fill="rgb(252,210,15)" fg:x="44523" fg:w="41"/><text x="38.7148%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (41 samples, 0.04%)</title><rect x="38.4648%" y="309" width="0.0354%" height="15" fill="rgb(253,209,26)" fg:x="44523" fg:w="41"/><text x="38.7148%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (13 samples, 0.01%)</title><rect x="38.5002%" y="309" width="0.0112%" height="15" fill="rgb(238,170,14)" fg:x="44564" fg:w="13"/><text x="38.7502%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (69 samples, 0.06%)</title><rect x="38.4648%" y="341" width="0.0596%" height="15" fill="rgb(216,178,15)" fg:x="44523" fg:w="69"/><text x="38.7148%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (28 samples, 0.02%)</title><rect x="38.5002%" y="325" width="0.0242%" height="15" fill="rgb(250,197,2)" fg:x="44564" fg:w="28"/><text x="38.7502%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (15 samples, 0.01%)</title><rect x="38.5114%" y="309" width="0.0130%" height="15" fill="rgb(212,70,42)" fg:x="44577" fg:w="15"/><text x="38.7614%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (15 samples, 0.01%)</title><rect x="38.5114%" y="293" width="0.0130%" height="15" fill="rgb(227,213,9)" fg:x="44577" fg:w="15"/><text x="38.7614%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (106 samples, 0.09%)</title><rect x="38.4467%" y="373" width="0.0916%" height="15" fill="rgb(245,99,25)" fg:x="44502" fg:w="106"/><text x="38.6967%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (86 samples, 0.07%)</title><rect x="38.4639%" y="357" width="0.0743%" height="15" fill="rgb(250,82,29)" fg:x="44522" fg:w="86"/><text x="38.7139%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (16 samples, 0.01%)</title><rect x="38.5244%" y="341" width="0.0138%" height="15" fill="rgb(241,226,54)" fg:x="44592" fg:w="16"/><text x="38.7744%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (509 samples, 0.44%)</title><rect x="38.1002%" y="405" width="0.4397%" height="15" fill="rgb(221,99,41)" fg:x="44101" fg:w="509"/><text x="38.3502%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (459 samples, 0.40%)</title><rect x="38.1434%" y="389" width="0.3965%" height="15" fill="rgb(213,90,21)" fg:x="44151" fg:w="459"/><text x="38.3934%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="38.5529%" y="245" width="0.0156%" height="15" fill="rgb(205,208,24)" fg:x="44625" fg:w="18"/><text x="38.8029%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="38.5529%" y="229" width="0.0156%" height="15" fill="rgb(246,31,12)" fg:x="44625" fg:w="18"/><text x="38.8029%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="38.5555%" y="213" width="0.0130%" height="15" fill="rgb(213,154,6)" fg:x="44628" fg:w="15"/><text x="38.8055%" y="223.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (42 samples, 0.04%)</title><rect x="38.5400%" y="405" width="0.0363%" height="15" fill="rgb(222,163,29)" fg:x="44610" fg:w="42"/><text x="38.7900%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (42 samples, 0.04%)</title><rect x="38.5400%" y="389" width="0.0363%" height="15" fill="rgb(227,201,8)" fg:x="44610" fg:w="42"/><text x="38.7900%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (42 samples, 0.04%)</title><rect x="38.5400%" y="373" width="0.0363%" height="15" fill="rgb(233,9,32)" fg:x="44610" fg:w="42"/><text x="38.7900%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (40 samples, 0.03%)</title><rect x="38.5417%" y="357" width="0.0346%" height="15" fill="rgb(217,54,24)" fg:x="44612" fg:w="40"/><text x="38.7917%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.03%)</title><rect x="38.5417%" y="341" width="0.0346%" height="15" fill="rgb(235,192,0)" fg:x="44612" fg:w="40"/><text x="38.7917%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.03%)</title><rect x="38.5417%" y="325" width="0.0346%" height="15" fill="rgb(235,45,9)" fg:x="44612" fg:w="40"/><text x="38.7917%" y="335.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.03%)</title><rect x="38.5425%" y="309" width="0.0337%" height="15" fill="rgb(246,42,40)" fg:x="44613" fg:w="39"/><text x="38.7925%" y="319.50"></text></g><g><title>__rg_alloc (39 samples, 0.03%)</title><rect x="38.5425%" y="293" width="0.0337%" height="15" fill="rgb(248,111,24)" fg:x="44613" fg:w="39"/><text x="38.7925%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (39 samples, 0.03%)</title><rect x="38.5425%" y="277" width="0.0337%" height="15" fill="rgb(249,65,22)" fg:x="44613" fg:w="39"/><text x="38.7925%" y="287.50"></text></g><g><title>rust_alloc (34 samples, 0.03%)</title><rect x="38.5469%" y="261" width="0.0294%" height="15" fill="rgb(238,111,51)" fg:x="44618" fg:w="34"/><text x="38.7969%" y="271.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (23 samples, 0.02%)</title><rect x="38.5892%" y="341" width="0.0199%" height="15" fill="rgb(250,118,22)" fg:x="44667" fg:w="23"/><text x="38.8392%" y="351.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="38.6384%" y="197" width="0.0121%" height="15" fill="rgb(234,84,26)" fg:x="44724" fg:w="14"/><text x="38.8884%" y="207.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="38.6384%" y="181" width="0.0121%" height="15" fill="rgb(243,172,12)" fg:x="44724" fg:w="14"/><text x="38.8884%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="38.6376%" y="245" width="0.0207%" height="15" fill="rgb(236,150,49)" fg:x="44723" fg:w="24"/><text x="38.8876%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="38.6376%" y="229" width="0.0207%" height="15" fill="rgb(225,197,26)" fg:x="44723" fg:w="24"/><text x="38.8876%" y="239.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="38.6376%" y="213" width="0.0207%" height="15" fill="rgb(214,17,42)" fg:x="44723" fg:w="24"/><text x="38.8876%" y="223.50"></text></g><g><title>rust_dealloc (58 samples, 0.05%)</title><rect x="38.6091%" y="341" width="0.0501%" height="15" fill="rgb(224,165,40)" fg:x="44690" fg:w="58"/><text x="38.8591%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (50 samples, 0.04%)</title><rect x="38.6160%" y="325" width="0.0432%" height="15" fill="rgb(246,100,4)" fg:x="44698" fg:w="50"/><text x="38.8660%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (37 samples, 0.03%)</title><rect x="38.6272%" y="309" width="0.0320%" height="15" fill="rgb(222,103,0)" fg:x="44711" fg:w="37"/><text x="38.8772%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (37 samples, 0.03%)</title><rect x="38.6272%" y="293" width="0.0320%" height="15" fill="rgb(227,189,26)" fg:x="44711" fg:w="37"/><text x="38.8772%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (37 samples, 0.03%)</title><rect x="38.6272%" y="277" width="0.0320%" height="15" fill="rgb(214,202,17)" fg:x="44711" fg:w="37"/><text x="38.8772%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (37 samples, 0.03%)</title><rect x="38.6272%" y="261" width="0.0320%" height="15" fill="rgb(229,111,3)" fg:x="44711" fg:w="37"/><text x="38.8772%" y="271.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (89 samples, 0.08%)</title><rect x="38.5849%" y="357" width="0.0769%" height="15" fill="rgb(229,172,15)" fg:x="44662" fg:w="89"/><text x="38.8349%" y="367.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (676 samples, 0.58%)</title><rect x="38.0942%" y="485" width="0.5840%" height="15" fill="rgb(230,224,35)" fg:x="44094" fg:w="676"/><text x="38.3442%" y="495.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (676 samples, 0.58%)</title><rect x="38.0942%" y="469" width="0.5840%" height="15" fill="rgb(251,141,6)" fg:x="44094" fg:w="676"/><text x="38.3442%" y="479.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (669 samples, 0.58%)</title><rect x="38.1002%" y="453" width="0.5780%" height="15" fill="rgb(225,208,6)" fg:x="44101" fg:w="669"/><text x="38.3502%" y="463.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (669 samples, 0.58%)</title><rect x="38.1002%" y="437" width="0.5780%" height="15" fill="rgb(246,181,16)" fg:x="44101" fg:w="669"/><text x="38.3502%" y="447.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (669 samples, 0.58%)</title><rect x="38.1002%" y="421" width="0.5780%" height="15" fill="rgb(227,129,36)" fg:x="44101" fg:w="669"/><text x="38.3502%" y="431.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (108 samples, 0.09%)</title><rect x="38.5849%" y="405" width="0.0933%" height="15" fill="rgb(248,117,24)" fg:x="44662" fg:w="108"/><text x="38.8349%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (108 samples, 0.09%)</title><rect x="38.5849%" y="389" width="0.0933%" height="15" fill="rgb(214,185,35)" fg:x="44662" fg:w="108"/><text x="38.8349%" y="399.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (108 samples, 0.09%)</title><rect x="38.5849%" y="373" width="0.0933%" height="15" fill="rgb(236,150,34)" fg:x="44662" fg:w="108"/><text x="38.8349%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (19 samples, 0.02%)</title><rect x="38.6618%" y="357" width="0.0164%" height="15" fill="rgb(243,228,27)" fg:x="44751" fg:w="19"/><text x="38.9118%" y="367.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="38.6618%" y="341" width="0.0164%" height="15" fill="rgb(245,77,44)" fg:x="44751" fg:w="19"/><text x="38.9118%" y="351.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (13 samples, 0.01%)</title><rect x="38.7222%" y="341" width="0.0112%" height="15" fill="rgb(235,214,42)" fg:x="44821" fg:w="13"/><text x="38.9722%" y="351.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.01%)</title><rect x="38.7222%" y="325" width="0.0112%" height="15" fill="rgb(221,74,3)" fg:x="44821" fg:w="13"/><text x="38.9722%" y="335.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (13 samples, 0.01%)</title><rect x="38.7222%" y="309" width="0.0112%" height="15" fill="rgb(206,121,29)" fg:x="44821" fg:w="13"/><text x="38.9722%" y="319.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;::sabi_erased_mut (15 samples, 0.01%)</title><rect x="38.7335%" y="341" width="0.0130%" height="15" fill="rgb(249,131,53)" fg:x="44834" fg:w="15"/><text x="38.9835%" y="351.50"></text></g><g><title>&lt;abi_stable::std_types::boxed::private::RBox&lt;T&gt; as abi_stable::pointer_trait::AsMutPtr&gt;::as_mut_ptr (15 samples, 0.01%)</title><rect x="38.7335%" y="325" width="0.0130%" height="15" fill="rgb(236,170,29)" fg:x="44834" fg:w="15"/><text x="38.9835%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="38.7620%" y="309" width="0.0294%" height="15" fill="rgb(247,96,15)" fg:x="44867" fg:w="34"/><text x="39.0120%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="38.7620%" y="293" width="0.0294%" height="15" fill="rgb(211,210,7)" fg:x="44867" fg:w="34"/><text x="39.0120%" y="303.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="38.7620%" y="277" width="0.0294%" height="15" fill="rgb(240,88,50)" fg:x="44867" fg:w="34"/><text x="39.0120%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="38.7620%" y="261" width="0.0294%" height="15" fill="rgb(209,229,26)" fg:x="44867" fg:w="34"/><text x="39.0120%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="38.7620%" y="245" width="0.0294%" height="15" fill="rgb(210,68,23)" fg:x="44867" fg:w="34"/><text x="39.0120%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="38.7620%" y="229" width="0.0294%" height="15" fill="rgb(229,180,13)" fg:x="44867" fg:w="34"/><text x="39.0120%" y="239.50"></text></g><g><title>abi_stable::erased_types::iterator::next (60 samples, 0.05%)</title><rect x="38.7464%" y="341" width="0.0518%" height="15" fill="rgb(236,53,44)" fg:x="44849" fg:w="60"/><text x="38.9964%" y="351.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (42 samples, 0.04%)</title><rect x="38.7620%" y="325" width="0.0363%" height="15" fill="rgb(244,214,29)" fg:x="44867" fg:w="42"/><text x="39.0120%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.08%)</title><rect x="38.7222%" y="389" width="0.0821%" height="15" fill="rgb(220,75,29)" fg:x="44821" fg:w="95"/><text x="38.9722%" y="399.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.08%)</title><rect x="38.7222%" y="373" width="0.0821%" height="15" fill="rgb(214,183,37)" fg:x="44821" fg:w="95"/><text x="38.9722%" y="383.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (95 samples, 0.08%)</title><rect x="38.7222%" y="357" width="0.0821%" height="15" fill="rgb(239,117,29)" fg:x="44821" fg:w="95"/><text x="38.9722%" y="367.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (33 samples, 0.03%)</title><rect x="38.8268%" y="261" width="0.0285%" height="15" fill="rgb(237,171,35)" fg:x="44942" fg:w="33"/><text x="39.0768%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (17 samples, 0.01%)</title><rect x="38.8406%" y="245" width="0.0147%" height="15" fill="rgb(229,178,53)" fg:x="44958" fg:w="17"/><text x="39.0906%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (17 samples, 0.01%)</title><rect x="38.8406%" y="229" width="0.0147%" height="15" fill="rgb(210,102,19)" fg:x="44958" fg:w="17"/><text x="39.0906%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (17 samples, 0.01%)</title><rect x="38.8406%" y="213" width="0.0147%" height="15" fill="rgb(235,127,22)" fg:x="44958" fg:w="17"/><text x="39.0906%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (17 samples, 0.01%)</title><rect x="38.8406%" y="197" width="0.0147%" height="15" fill="rgb(244,31,31)" fg:x="44958" fg:w="17"/><text x="39.0906%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="38.8406%" y="181" width="0.0147%" height="15" fill="rgb(231,43,21)" fg:x="44958" fg:w="17"/><text x="39.0906%" y="191.50"></text></g><g><title>hashbrown::raw::RawIter&lt;T&gt;::drop_elements (12 samples, 0.01%)</title><rect x="38.8449%" y="165" width="0.0104%" height="15" fill="rgb(217,131,35)" fg:x="44963" fg:w="12"/><text x="39.0949%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (31 samples, 0.03%)</title><rect x="38.8717%" y="165" width="0.0268%" height="15" fill="rgb(221,149,4)" fg:x="44994" fg:w="31"/><text x="39.1217%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (31 samples, 0.03%)</title><rect x="38.8717%" y="149" width="0.0268%" height="15" fill="rgb(232,170,28)" fg:x="44994" fg:w="31"/><text x="39.1217%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="38.8717%" y="133" width="0.0268%" height="15" fill="rgb(238,56,10)" fg:x="44994" fg:w="31"/><text x="39.1217%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (42 samples, 0.04%)</title><rect x="38.8648%" y="197" width="0.0363%" height="15" fill="rgb(235,196,14)" fg:x="44986" fg:w="42"/><text x="39.1148%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (42 samples, 0.04%)</title><rect x="38.8648%" y="181" width="0.0363%" height="15" fill="rgb(216,45,48)" fg:x="44986" fg:w="42"/><text x="39.1148%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (45 samples, 0.04%)</title><rect x="38.8648%" y="229" width="0.0389%" height="15" fill="rgb(238,213,17)" fg:x="44986" fg:w="45"/><text x="39.1148%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (45 samples, 0.04%)</title><rect x="38.8648%" y="213" width="0.0389%" height="15" fill="rgb(212,13,2)" fg:x="44986" fg:w="45"/><text x="39.1148%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (56 samples, 0.05%)</title><rect x="38.8570%" y="245" width="0.0484%" height="15" fill="rgb(240,114,20)" fg:x="44977" fg:w="56"/><text x="39.1070%" y="255.50"></text></g><g><title>rust_dealloc (60 samples, 0.05%)</title><rect x="38.8553%" y="261" width="0.0518%" height="15" fill="rgb(228,41,40)" fg:x="44975" fg:w="60"/><text x="39.1053%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (259 samples, 0.22%)</title><rect x="38.6842%" y="453" width="0.2238%" height="15" fill="rgb(244,132,35)" fg:x="44777" fg:w="259"/><text x="38.9342%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (259 samples, 0.22%)</title><rect x="38.6842%" y="437" width="0.2238%" height="15" fill="rgb(253,189,4)" fg:x="44777" fg:w="259"/><text x="38.9342%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (233 samples, 0.20%)</title><rect x="38.7067%" y="421" width="0.2013%" height="15" fill="rgb(224,37,19)" fg:x="44803" fg:w="233"/><text x="38.9567%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (215 samples, 0.19%)</title><rect x="38.7222%" y="405" width="0.1857%" height="15" fill="rgb(235,223,18)" fg:x="44821" fg:w="215"/><text x="38.9722%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;,tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from::{{closure}}&gt;&gt; (114 samples, 0.10%)</title><rect x="38.8095%" y="389" width="0.0985%" height="15" fill="rgb(235,163,25)" fg:x="44922" fg:w="114"/><text x="39.0595%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,tremor_value::pdk::PdkValue&gt;&gt; (114 samples, 0.10%)</title><rect x="38.8095%" y="373" width="0.0985%" height="15" fill="rgb(217,145,28)" fg:x="44922" fg:w="114"/><text x="39.0595%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (114 samples, 0.10%)</title><rect x="38.8095%" y="357" width="0.0985%" height="15" fill="rgb(223,223,32)" fg:x="44922" fg:w="114"/><text x="39.0595%" y="367.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.10%)</title><rect x="38.8095%" y="341" width="0.0985%" height="15" fill="rgb(227,189,39)" fg:x="44922" fg:w="114"/><text x="39.0595%" y="351.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (105 samples, 0.09%)</title><rect x="38.8173%" y="325" width="0.0907%" height="15" fill="rgb(248,10,22)" fg:x="44931" fg:w="105"/><text x="39.0673%" y="335.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (99 samples, 0.09%)</title><rect x="38.8225%" y="309" width="0.0855%" height="15" fill="rgb(248,46,39)" fg:x="44937" fg:w="99"/><text x="39.0725%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;abi_stable::std_types::map::map_key::MapKey&lt;tremor_pipeline::PrimStr&lt;u64&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_ref&lt;tremor_pipeline::PrimStr&lt;u64&gt;,&amp;tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (99 samples, 0.09%)</title><rect x="38.8225%" y="293" width="0.0855%" height="15" fill="rgb(248,113,48)" fg:x="44937" fg:w="99"/><text x="39.0725%" y="303.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (99 samples, 0.09%)</title><rect x="38.8225%" y="277" width="0.0855%" height="15" fill="rgb(245,16,25)" fg:x="44937" fg:w="99"/><text x="39.0725%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="38.9080%" y="437" width="0.0199%" height="15" fill="rgb(249,152,16)" fg:x="45036" fg:w="23"/><text x="39.1580%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value)]&gt; (15 samples, 0.01%)</title><rect x="38.9149%" y="421" width="0.0130%" height="15" fill="rgb(250,16,1)" fg:x="45044" fg:w="15"/><text x="39.1649%" y="431.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkOpMeta&gt; for tremor_pipeline::OpMeta&gt;::from (973 samples, 0.84%)</title><rect x="38.0942%" y="501" width="0.8406%" height="15" fill="rgb(249,138,3)" fg:x="44094" fg:w="973"/><text x="38.3442%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (297 samples, 0.26%)</title><rect x="38.6782%" y="485" width="0.2566%" height="15" fill="rgb(227,71,41)" fg:x="44770" fg:w="297"/><text x="38.9282%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (297 samples, 0.26%)</title><rect x="38.6782%" y="469" width="0.2566%" height="15" fill="rgb(209,184,23)" fg:x="44770" fg:w="297"/><text x="38.9282%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value)&gt;&gt; (31 samples, 0.03%)</title><rect x="38.9080%" y="453" width="0.0268%" height="15" fill="rgb(223,215,31)" fg:x="45036" fg:w="31"/><text x="39.1580%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (14 samples, 0.01%)</title><rect x="39.0255%" y="261" width="0.0121%" height="15" fill="rgb(210,146,28)" fg:x="45172" fg:w="14"/><text x="39.2755%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (21 samples, 0.02%)</title><rect x="39.0246%" y="309" width="0.0181%" height="15" fill="rgb(209,183,41)" fg:x="45171" fg:w="21"/><text x="39.2746%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (20 samples, 0.02%)</title><rect x="39.0255%" y="293" width="0.0173%" height="15" fill="rgb(209,224,45)" fg:x="45172" fg:w="20"/><text x="39.2755%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="39.0255%" y="277" width="0.0173%" height="15" fill="rgb(224,209,51)" fg:x="45172" fg:w="20"/><text x="39.2755%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (64 samples, 0.06%)</title><rect x="39.0168%" y="341" width="0.0553%" height="15" fill="rgb(223,17,39)" fg:x="45162" fg:w="64"/><text x="39.2668%" y="351.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (55 samples, 0.05%)</title><rect x="39.0246%" y="325" width="0.0475%" height="15" fill="rgb(234,204,37)" fg:x="45171" fg:w="55"/><text x="39.2746%" y="335.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (34 samples, 0.03%)</title><rect x="39.0428%" y="309" width="0.0294%" height="15" fill="rgb(236,120,5)" fg:x="45192" fg:w="34"/><text x="39.2928%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (116 samples, 0.10%)</title><rect x="39.0929%" y="181" width="0.1002%" height="15" fill="rgb(248,97,27)" fg:x="45250" fg:w="116"/><text x="39.3429%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (109 samples, 0.09%)</title><rect x="39.0989%" y="165" width="0.0942%" height="15" fill="rgb(240,66,17)" fg:x="45257" fg:w="109"/><text x="39.3489%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (105 samples, 0.09%)</title><rect x="39.1024%" y="149" width="0.0907%" height="15" fill="rgb(210,79,3)" fg:x="45261" fg:w="105"/><text x="39.3524%" y="159.50"></text></g><g><title>snmalloc::FreeListIter::take (82 samples, 0.07%)</title><rect x="39.1222%" y="133" width="0.0708%" height="15" fill="rgb(214,176,27)" fg:x="45284" fg:w="82"/><text x="39.3722%" y="143.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (82 samples, 0.07%)</title><rect x="39.1222%" y="117" width="0.0708%" height="15" fill="rgb(235,185,3)" fg:x="45284" fg:w="82"/><text x="39.3722%" y="127.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::sabi_types::rref::RRef&lt;()&gt;,()&gt;::from_borrowing_value (148 samples, 0.13%)</title><rect x="39.0721%" y="341" width="0.1279%" height="15" fill="rgb(227,24,12)" fg:x="45226" fg:w="148"/><text x="39.3221%" y="351.50"></text></g><g><title>abi_stable::std_types::boxed::private::RBox&lt;T&gt;::new (148 samples, 0.13%)</title><rect x="39.0721%" y="325" width="0.1279%" height="15" fill="rgb(252,169,48)" fg:x="45226" fg:w="148"/><text x="39.3221%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (148 samples, 0.13%)</title><rect x="39.0721%" y="309" width="0.1279%" height="15" fill="rgb(212,65,1)" fg:x="45226" fg:w="148"/><text x="39.3221%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (135 samples, 0.12%)</title><rect x="39.0834%" y="293" width="0.1166%" height="15" fill="rgb(242,39,24)" fg:x="45239" fg:w="135"/><text x="39.3334%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (135 samples, 0.12%)</title><rect x="39.0834%" y="277" width="0.1166%" height="15" fill="rgb(249,32,23)" fg:x="45239" fg:w="135"/><text x="39.3334%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (135 samples, 0.12%)</title><rect x="39.0834%" y="261" width="0.1166%" height="15" fill="rgb(251,195,23)" fg:x="45239" fg:w="135"/><text x="39.3334%" y="271.50"></text></g><g><title>alloc::alloc::alloc (135 samples, 0.12%)</title><rect x="39.0834%" y="245" width="0.1166%" height="15" fill="rgb(236,174,8)" fg:x="45239" fg:w="135"/><text x="39.3334%" y="255.50"></text></g><g><title>__rg_alloc (135 samples, 0.12%)</title><rect x="39.0834%" y="229" width="0.1166%" height="15" fill="rgb(220,197,8)" fg:x="45239" fg:w="135"/><text x="39.3334%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (135 samples, 0.12%)</title><rect x="39.0834%" y="213" width="0.1166%" height="15" fill="rgb(240,108,37)" fg:x="45239" fg:w="135"/><text x="39.3334%" y="223.50"></text></g><g><title>rust_alloc (132 samples, 0.11%)</title><rect x="39.0860%" y="197" width="0.1140%" height="15" fill="rgb(232,176,24)" fg:x="45242" fg:w="132"/><text x="39.3360%" y="207.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (26 samples, 0.02%)</title><rect x="39.2251%" y="277" width="0.0225%" height="15" fill="rgb(243,35,29)" fg:x="45403" fg:w="26"/><text x="39.4751%" y="287.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (12 samples, 0.01%)</title><rect x="39.2752%" y="133" width="0.0104%" height="15" fill="rgb(210,37,18)" fg:x="45461" fg:w="12"/><text x="39.5252%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (34 samples, 0.03%)</title><rect x="39.2622%" y="181" width="0.0294%" height="15" fill="rgb(224,184,40)" fg:x="45446" fg:w="34"/><text x="39.5122%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (34 samples, 0.03%)</title><rect x="39.2622%" y="165" width="0.0294%" height="15" fill="rgb(236,39,29)" fg:x="45446" fg:w="34"/><text x="39.5122%" y="175.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="39.2648%" y="149" width="0.0268%" height="15" fill="rgb(232,48,39)" fg:x="45449" fg:w="31"/><text x="39.5148%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (43 samples, 0.04%)</title><rect x="39.2553%" y="213" width="0.0371%" height="15" fill="rgb(236,34,42)" fg:x="45438" fg:w="43"/><text x="39.5053%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (43 samples, 0.04%)</title><rect x="39.2553%" y="197" width="0.0371%" height="15" fill="rgb(243,106,37)" fg:x="45438" fg:w="43"/><text x="39.5053%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (52 samples, 0.04%)</title><rect x="39.2553%" y="245" width="0.0449%" height="15" fill="rgb(218,96,6)" fg:x="45438" fg:w="52"/><text x="39.5053%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (52 samples, 0.04%)</title><rect x="39.2553%" y="229" width="0.0449%" height="15" fill="rgb(235,130,12)" fg:x="45438" fg:w="52"/><text x="39.5053%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (58 samples, 0.05%)</title><rect x="39.2536%" y="261" width="0.0501%" height="15" fill="rgb(231,95,0)" fg:x="45436" fg:w="58"/><text x="39.5036%" y="271.50"></text></g><g><title>rust_dealloc (71 samples, 0.06%)</title><rect x="39.2475%" y="277" width="0.0613%" height="15" fill="rgb(228,12,23)" fg:x="45429" fg:w="71"/><text x="39.4975%" y="287.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (114 samples, 0.10%)</title><rect x="39.2147%" y="293" width="0.0985%" height="15" fill="rgb(216,12,1)" fg:x="45391" fg:w="114"/><text x="39.4647%" y="303.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val (371 samples, 0.32%)</title><rect x="39.0108%" y="389" width="0.3205%" height="15" fill="rgb(219,59,3)" fg:x="45155" fg:w="371"/><text x="39.2608%" y="399.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::run_val::{{closure}} (364 samples, 0.31%)</title><rect x="39.0168%" y="373" width="0.3145%" height="15" fill="rgb(215,208,46)" fg:x="45162" fg:w="364"/><text x="39.2668%" y="383.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val::{{closure}} (364 samples, 0.31%)</title><rect x="39.0168%" y="357" width="0.3145%" height="15" fill="rgb(254,224,29)" fg:x="45162" fg:w="364"/><text x="39.2668%" y="367.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (135 samples, 0.12%)</title><rect x="39.2147%" y="341" width="0.1166%" height="15" fill="rgb(232,14,29)" fg:x="45391" fg:w="135"/><text x="39.4647%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (135 samples, 0.12%)</title><rect x="39.2147%" y="325" width="0.1166%" height="15" fill="rgb(208,45,52)" fg:x="45391" fg:w="135"/><text x="39.4647%" y="335.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (135 samples, 0.12%)</title><rect x="39.2147%" y="309" width="0.1166%" height="15" fill="rgb(234,191,28)" fg:x="45391" fg:w="135"/><text x="39.4647%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (21 samples, 0.02%)</title><rect x="39.3132%" y="293" width="0.0181%" height="15" fill="rgb(244,67,43)" fg:x="45505" fg:w="21"/><text x="39.5632%" y="303.50"></text></g><g><title>core::ptr::read (21 samples, 0.02%)</title><rect x="39.3132%" y="277" width="0.0181%" height="15" fill="rgb(236,189,24)" fg:x="45505" fg:w="21"/><text x="39.5632%" y="287.50"></text></g><g><title>&lt;abi_stable::std_types::map::RHashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (379 samples, 0.33%)</title><rect x="39.0048%" y="421" width="0.3274%" height="15" fill="rgb(239,214,33)" fg:x="45148" fg:w="379"/><text x="39.2548%" y="431.50"></text></g><g><title>abi_stable::std_types::map::extern_fns::&lt;impl abi_stable::std_types::map::ErasedMap&lt;K,V,S&gt;&gt;::iter_val (379 samples, 0.33%)</title><rect x="39.0048%" y="405" width="0.3274%" height="15" fill="rgb(226,176,41)" fg:x="45148" fg:w="379"/><text x="39.2548%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (21 samples, 0.02%)</title><rect x="39.3348%" y="389" width="0.0181%" height="15" fill="rgb(248,47,8)" fg:x="45530" fg:w="21"/><text x="39.5848%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (63 samples, 0.05%)</title><rect x="39.3987%" y="245" width="0.0544%" height="15" fill="rgb(218,81,44)" fg:x="45604" fg:w="63"/><text x="39.6487%" y="255.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (61 samples, 0.05%)</title><rect x="39.4004%" y="229" width="0.0527%" height="15" fill="rgb(213,98,6)" fg:x="45606" fg:w="61"/><text x="39.6504%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (107 samples, 0.09%)</title><rect x="39.3702%" y="293" width="0.0924%" height="15" fill="rgb(222,85,22)" fg:x="45571" fg:w="107"/><text x="39.6202%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (107 samples, 0.09%)</title><rect x="39.3702%" y="277" width="0.0924%" height="15" fill="rgb(239,46,39)" fg:x="45571" fg:w="107"/><text x="39.6202%" y="287.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (107 samples, 0.09%)</title><rect x="39.3702%" y="261" width="0.0924%" height="15" fill="rgb(237,12,29)" fg:x="45571" fg:w="107"/><text x="39.6202%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (135 samples, 0.12%)</title><rect x="39.3616%" y="325" width="0.1166%" height="15" fill="rgb(214,77,8)" fg:x="45561" fg:w="135"/><text x="39.6116%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (135 samples, 0.12%)</title><rect x="39.3616%" y="309" width="0.1166%" height="15" fill="rgb(217,168,37)" fg:x="45561" fg:w="135"/><text x="39.6116%" y="319.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="39.4626%" y="293" width="0.0156%" height="15" fill="rgb(221,217,23)" fg:x="45678" fg:w="18"/><text x="39.7126%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (143 samples, 0.12%)</title><rect x="39.3616%" y="357" width="0.1235%" height="15" fill="rgb(243,229,36)" fg:x="45561" fg:w="143"/><text x="39.6116%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (143 samples, 0.12%)</title><rect x="39.3616%" y="341" width="0.1235%" height="15" fill="rgb(251,163,40)" fg:x="45561" fg:w="143"/><text x="39.6116%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (155 samples, 0.13%)</title><rect x="39.3572%" y="373" width="0.1339%" height="15" fill="rgb(237,222,12)" fg:x="45556" fg:w="155"/><text x="39.6072%" y="383.50"></text></g><g><title>rust_dealloc (168 samples, 0.15%)</title><rect x="39.3529%" y="389" width="0.1451%" height="15" fill="rgb(248,132,6)" fg:x="45551" fg:w="168"/><text x="39.6029%" y="399.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::pointer_trait::OwnedPointer for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop_allocation (193 samples, 0.17%)</title><rect x="39.3322%" y="405" width="0.1667%" height="15" fill="rgb(227,167,50)" fg:x="45527" fg:w="193"/><text x="39.5822%" y="415.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::into_inner (215 samples, 0.19%)</title><rect x="39.3322%" y="421" width="0.1857%" height="15" fill="rgb(242,84,37)" fg:x="45527" fg:w="215"/><text x="39.5822%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (22 samples, 0.02%)</title><rect x="39.4989%" y="405" width="0.0190%" height="15" fill="rgb(212,4,50)" fg:x="45720" fg:w="22"/><text x="39.7489%" y="415.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="39.4989%" y="389" width="0.0190%" height="15" fill="rgb(230,228,32)" fg:x="45720" fg:w="22"/><text x="39.7489%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (257 samples, 0.22%)</title><rect x="39.5179%" y="421" width="0.2220%" height="15" fill="rgb(248,217,23)" fg:x="45742" fg:w="257"/><text x="39.7679%" y="431.50"></text></g><g><title>alloc::alloc::exchange_malloc (231 samples, 0.20%)</title><rect x="39.5404%" y="405" width="0.1996%" height="15" fill="rgb(238,197,32)" fg:x="45768" fg:w="231"/><text x="39.7904%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (231 samples, 0.20%)</title><rect x="39.5404%" y="389" width="0.1996%" height="15" fill="rgb(236,106,1)" fg:x="45768" fg:w="231"/><text x="39.7904%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (231 samples, 0.20%)</title><rect x="39.5404%" y="373" width="0.1996%" height="15" fill="rgb(219,228,13)" fg:x="45768" fg:w="231"/><text x="39.7904%" y="383.50"></text></g><g><title>alloc::alloc::alloc (231 samples, 0.20%)</title><rect x="39.5404%" y="357" width="0.1996%" height="15" fill="rgb(238,30,35)" fg:x="45768" fg:w="231"/><text x="39.7904%" y="367.50"></text></g><g><title>__rg_alloc (231 samples, 0.20%)</title><rect x="39.5404%" y="341" width="0.1996%" height="15" fill="rgb(236,70,23)" fg:x="45768" fg:w="231"/><text x="39.7904%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (231 samples, 0.20%)</title><rect x="39.5404%" y="325" width="0.1996%" height="15" fill="rgb(249,104,48)" fg:x="45768" fg:w="231"/><text x="39.7904%" y="335.50"></text></g><g><title>rust_alloc (231 samples, 0.20%)</title><rect x="39.5404%" y="309" width="0.1996%" height="15" fill="rgb(254,117,50)" fg:x="45768" fg:w="231"/><text x="39.7904%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (228 samples, 0.20%)</title><rect x="39.5430%" y="293" width="0.1970%" height="15" fill="rgb(223,152,4)" fg:x="45771" fg:w="228"/><text x="39.7930%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.19%)</title><rect x="39.5473%" y="277" width="0.1927%" height="15" fill="rgb(245,6,2)" fg:x="45776" fg:w="223"/><text x="39.7973%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (216 samples, 0.19%)</title><rect x="39.5533%" y="261" width="0.1866%" height="15" fill="rgb(249,150,24)" fg:x="45783" fg:w="216"/><text x="39.8033%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::take (199 samples, 0.17%)</title><rect x="39.5680%" y="245" width="0.1719%" height="15" fill="rgb(228,185,42)" fg:x="45800" fg:w="199"/><text x="39.8180%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (199 samples, 0.17%)</title><rect x="39.5680%" y="229" width="0.1719%" height="15" fill="rgb(226,39,33)" fg:x="45800" fg:w="199"/><text x="39.8180%" y="239.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint (83 samples, 0.07%)</title><rect x="39.9102%" y="341" width="0.0717%" height="15" fill="rgb(221,166,19)" fg:x="46196" fg:w="83"/><text x="40.1602%" y="351.50"></text></g><g><title>abi_stable::erased_types::iterator::size_hint::{{closure}} (68 samples, 0.06%)</title><rect x="39.9231%" y="325" width="0.0587%" height="15" fill="rgb(209,109,2)" fg:x="46211" fg:w="68"/><text x="40.1731%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="39.9447%" y="309" width="0.0371%" height="15" fill="rgb(252,216,26)" fg:x="46236" fg:w="43"/><text x="40.1947%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="39.9447%" y="293" width="0.0371%" height="15" fill="rgb(227,173,36)" fg:x="46236" fg:w="43"/><text x="40.1947%" y="303.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="39.9447%" y="277" width="0.0371%" height="15" fill="rgb(209,90,7)" fg:x="46236" fg:w="43"/><text x="40.1947%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="39.9447%" y="261" width="0.0371%" height="15" fill="rgb(250,194,11)" fg:x="46236" fg:w="43"/><text x="40.1947%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (43 samples, 0.04%)</title><rect x="39.9447%" y="245" width="0.0371%" height="15" fill="rgb(220,72,50)" fg:x="46236" fg:w="43"/><text x="40.1947%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (110 samples, 0.10%)</title><rect x="39.9006%" y="389" width="0.0950%" height="15" fill="rgb(222,106,48)" fg:x="46185" fg:w="110"/><text x="40.1506%" y="399.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (110 samples, 0.10%)</title><rect x="39.9006%" y="373" width="0.0950%" height="15" fill="rgb(216,220,45)" fg:x="46185" fg:w="110"/><text x="40.1506%" y="383.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::size_hint (110 samples, 0.10%)</title><rect x="39.9006%" y="357" width="0.0950%" height="15" fill="rgb(234,112,18)" fg:x="46185" fg:w="110"/><text x="40.1506%" y="367.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (16 samples, 0.01%)</title><rect x="39.9819%" y="341" width="0.0138%" height="15" fill="rgb(206,179,9)" fg:x="46279" fg:w="16"/><text x="40.2319%" y="351.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (16 samples, 0.01%)</title><rect x="39.9819%" y="325" width="0.0138%" height="15" fill="rgb(215,115,40)" fg:x="46279" fg:w="16"/><text x="40.2319%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (340 samples, 0.29%)</title><rect x="39.7408%" y="421" width="0.2937%" height="15" fill="rgb(222,69,34)" fg:x="46000" fg:w="340"/><text x="39.9908%" y="431.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (340 samples, 0.29%)</title><rect x="39.7408%" y="405" width="0.2937%" height="15" fill="rgb(209,161,10)" fg:x="46000" fg:w="340"/><text x="39.9908%" y="415.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (34 samples, 0.03%)</title><rect x="40.0052%" y="389" width="0.0294%" height="15" fill="rgb(217,6,38)" fg:x="46306" fg:w="34"/><text x="40.2552%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (20 samples, 0.02%)</title><rect x="40.0173%" y="373" width="0.0173%" height="15" fill="rgb(229,229,48)" fg:x="46320" fg:w="20"/><text x="40.2673%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::with_capacity (20 samples, 0.02%)</title><rect x="40.0173%" y="357" width="0.0173%" height="15" fill="rgb(225,21,28)" fg:x="46320" fg:w="20"/><text x="40.2673%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="40.0173%" y="341" width="0.0173%" height="15" fill="rgb(206,33,13)" fg:x="46320" fg:w="20"/><text x="40.2673%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::fallible_with_capacity (20 samples, 0.02%)</title><rect x="40.0173%" y="325" width="0.0173%" height="15" fill="rgb(242,178,17)" fg:x="46320" fg:w="20"/><text x="40.2673%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (16 samples, 0.01%)</title><rect x="40.0207%" y="309" width="0.0138%" height="15" fill="rgb(220,162,5)" fg:x="46324" fg:w="16"/><text x="40.2707%" y="319.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (2,254 samples, 1.95%)</title><rect x="38.0942%" y="533" width="1.9473%" height="15" fill="rgb(210,33,43)" fg:x="44094" fg:w="2254"/><text x="38.3442%" y="543.50">t..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,254 samples, 1.95%)</title><rect x="38.0942%" y="517" width="1.9473%" height="15" fill="rgb(216,116,54)" fg:x="44094" fg:w="2254"/><text x="38.3442%" y="527.50">&lt;..</text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (1,281 samples, 1.11%)</title><rect x="38.9348%" y="501" width="1.1067%" height="15" fill="rgb(249,92,24)" fg:x="45067" fg:w="1281"/><text x="39.1848%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,281 samples, 1.11%)</title><rect x="38.9348%" y="485" width="1.1067%" height="15" fill="rgb(231,189,14)" fg:x="45067" fg:w="1281"/><text x="39.1848%" y="495.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (1,281 samples, 1.11%)</title><rect x="38.9348%" y="469" width="1.1067%" height="15" fill="rgb(230,8,41)" fg:x="45067" fg:w="1281"/><text x="39.1848%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,281 samples, 1.11%)</title><rect x="38.9348%" y="453" width="1.1067%" height="15" fill="rgb(249,7,27)" fg:x="45067" fg:w="1281"/><text x="39.1848%" y="463.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (1,281 samples, 1.11%)</title><rect x="38.9348%" y="437" width="1.1067%" height="15" fill="rgb(232,86,5)" fg:x="45067" fg:w="1281"/><text x="39.1848%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16 samples, 0.01%)</title><rect x="40.0467%" y="469" width="0.0138%" height="15" fill="rgb(224,175,18)" fg:x="46354" fg:w="16"/><text x="40.2967%" y="479.50"></text></g><g><title>&lt;abi_stable::std_types::result::RResult&lt;T,E&gt; as core::convert::From&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::from (16 samples, 0.01%)</title><rect x="40.0467%" y="453" width="0.0138%" height="15" fill="rgb(220,129,12)" fg:x="46354" fg:w="16"/><text x="40.2967%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (47 samples, 0.04%)</title><rect x="40.0605%" y="469" width="0.0406%" height="15" fill="rgb(210,19,36)" fg:x="46370" fg:w="47"/><text x="40.3105%" y="479.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (46 samples, 0.04%)</title><rect x="40.0613%" y="453" width="0.0397%" height="15" fill="rgb(219,96,14)" fg:x="46371" fg:w="46"/><text x="40.3113%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (37 samples, 0.03%)</title><rect x="40.0691%" y="437" width="0.0320%" height="15" fill="rgb(249,106,1)" fg:x="46380" fg:w="37"/><text x="40.3191%" y="447.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (37 samples, 0.03%)</title><rect x="40.0691%" y="421" width="0.0320%" height="15" fill="rgb(249,155,20)" fg:x="46380" fg:w="37"/><text x="40.3191%" y="431.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (37 samples, 0.03%)</title><rect x="40.0691%" y="405" width="0.0320%" height="15" fill="rgb(244,168,9)" fg:x="46380" fg:w="37"/><text x="40.3191%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.02%)</title><rect x="40.0847%" y="389" width="0.0164%" height="15" fill="rgb(216,23,50)" fg:x="46398" fg:w="19"/><text x="40.3347%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.02%)</title><rect x="40.0847%" y="373" width="0.0164%" height="15" fill="rgb(224,219,20)" fg:x="46398" fg:w="19"/><text x="40.3347%" y="383.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (120 samples, 0.10%)</title><rect x="40.1218%" y="453" width="0.1037%" height="15" fill="rgb(222,156,15)" fg:x="46441" fg:w="120"/><text x="40.3718%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (422 samples, 0.36%)</title><rect x="40.2333%" y="453" width="0.3646%" height="15" fill="rgb(231,97,17)" fg:x="46570" fg:w="422"/><text x="40.4833%" y="463.50"></text></g><g><title>&lt;tremor_value::pdk::PdkValue as core::clone::Clone&gt;::clone (50 samples, 0.04%)</title><rect x="40.6030%" y="453" width="0.0432%" height="15" fill="rgb(218,70,48)" fg:x="46998" fg:w="50"/><text x="40.8530%" y="463.50"></text></g><g><title>&lt;abi_stable::std_types::cow::RCow&lt;B&gt; as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="40.6151%" y="437" width="0.0311%" height="15" fill="rgb(212,196,52)" fg:x="47012" fg:w="36"/><text x="40.8651%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (12 samples, 0.01%)</title><rect x="40.6462%" y="453" width="0.0104%" height="15" fill="rgb(243,203,18)" fg:x="47048" fg:w="12"/><text x="40.8962%" y="463.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,774 samples, 3.26%)</title><rect x="37.4013%" y="821" width="3.2605%" height="15" fill="rgb(252,125,41)" fg:x="43292" fg:w="3774"/><text x="37.6513%" y="831.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,972 samples, 2.57%)</title><rect x="38.0942%" y="805" width="2.5676%" height="15" fill="rgb(223,180,33)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="815.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (2,972 samples, 2.57%)</title><rect x="38.0942%" y="789" width="2.5676%" height="15" fill="rgb(254,159,46)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="799.50">tr..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,972 samples, 2.57%)</title><rect x="38.0942%" y="773" width="2.5676%" height="15" fill="rgb(254,38,10)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="783.50">&lt;a..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,972 samples, 2.57%)</title><rect x="38.0942%" y="757" width="2.5676%" height="15" fill="rgb(208,217,32)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="767.50">&lt;a..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (2,972 samples, 2.57%)</title><rect x="38.0942%" y="741" width="2.5676%" height="15" fill="rgb(221,120,13)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="751.50">&lt;c..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,972 samples, 2.57%)</title><rect x="38.0942%" y="725" width="2.5676%" height="15" fill="rgb(246,54,52)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="735.50">&lt;a..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (2,972 samples, 2.57%)</title><rect x="38.0942%" y="709" width="2.5676%" height="15" fill="rgb(242,34,25)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="719.50">as..</text></g><g><title>std::panic::catch_unwind (2,972 samples, 2.57%)</title><rect x="38.0942%" y="693" width="2.5676%" height="15" fill="rgb(247,209,9)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="703.50">st..</text></g><g><title>std::panicking::try (2,972 samples, 2.57%)</title><rect x="38.0942%" y="677" width="2.5676%" height="15" fill="rgb(228,71,26)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="687.50">st..</text></g><g><title>std::panicking::try::do_call (2,972 samples, 2.57%)</title><rect x="38.0942%" y="661" width="2.5676%" height="15" fill="rgb(222,145,49)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="671.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,972 samples, 2.57%)</title><rect x="38.0942%" y="645" width="2.5676%" height="15" fill="rgb(218,121,17)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="655.50">&lt;c..</text></g><g><title>core::ops::function::FnOnce::call_once (2,972 samples, 2.57%)</title><rect x="38.0942%" y="629" width="2.5676%" height="15" fill="rgb(244,50,7)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="639.50">co..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (2,972 samples, 2.57%)</title><rect x="38.0942%" y="613" width="2.5676%" height="15" fill="rgb(246,229,37)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="623.50">as..</text></g><g><title>async_ffi::FfiContext::with_context (2,972 samples, 2.57%)</title><rect x="38.0942%" y="597" width="2.5676%" height="15" fill="rgb(225,18,5)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="607.50">as..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (2,972 samples, 2.57%)</title><rect x="38.0942%" y="581" width="2.5676%" height="15" fill="rgb(213,204,8)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="591.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,972 samples, 2.57%)</title><rect x="38.0942%" y="565" width="2.5676%" height="15" fill="rgb(238,103,6)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="575.50">&lt;c..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (2,972 samples, 2.57%)</title><rect x="38.0942%" y="549" width="2.5676%" height="15" fill="rgb(222,25,35)" fg:x="44094" fg:w="2972"/><text x="38.3442%" y="559.50">&lt;t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (717 samples, 0.62%)</title><rect x="40.0423%" y="533" width="0.6194%" height="15" fill="rgb(213,203,35)" fg:x="46349" fg:w="717"/><text x="40.2923%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (717 samples, 0.62%)</title><rect x="40.0423%" y="517" width="0.6194%" height="15" fill="rgb(221,79,53)" fg:x="46349" fg:w="717"/><text x="40.2923%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (717 samples, 0.62%)</title><rect x="40.0423%" y="501" width="0.6194%" height="15" fill="rgb(243,200,35)" fg:x="46349" fg:w="717"/><text x="40.2923%" y="511.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (717 samples, 0.62%)</title><rect x="40.0423%" y="485" width="0.6194%" height="15" fill="rgb(248,60,25)" fg:x="46349" fg:w="717"/><text x="40.2923%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (649 samples, 0.56%)</title><rect x="40.1011%" y="469" width="0.5607%" height="15" fill="rgb(227,53,46)" fg:x="46417" fg:w="649"/><text x="40.3511%" y="479.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (43 samples, 0.04%)</title><rect x="40.6618%" y="821" width="0.0371%" height="15" fill="rgb(216,120,32)" fg:x="47066" fg:w="43"/><text x="40.9118%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (237 samples, 0.20%)</title><rect x="41.8782%" y="773" width="0.2048%" height="15" fill="rgb(220,134,1)" fg:x="48474" fg:w="237"/><text x="42.1282%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (228 samples, 0.20%)</title><rect x="41.8860%" y="757" width="0.1970%" height="15" fill="rgb(237,168,5)" fg:x="48483" fg:w="228"/><text x="42.1360%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (208 samples, 0.18%)</title><rect x="41.9032%" y="741" width="0.1797%" height="15" fill="rgb(231,100,33)" fg:x="48503" fg:w="208"/><text x="42.1532%" y="751.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::try_into_poll (261 samples, 0.23%)</title><rect x="42.0898%" y="709" width="0.2255%" height="15" fill="rgb(236,177,47)" fg:x="48719" fg:w="261"/><text x="42.3398%" y="719.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (281 samples, 0.24%)</title><rect x="42.0829%" y="741" width="0.2428%" height="15" fill="rgb(235,7,49)" fg:x="48711" fg:w="281"/><text x="42.3329%" y="751.50"></text></g><g><title>async_ffi::&lt;impl core::convert::TryFrom&lt;async_ffi::FfiPoll&lt;T&gt;&gt; for core::task::poll::Poll&lt;T&gt;&gt;::try_from (273 samples, 0.24%)</title><rect x="42.0898%" y="725" width="0.2359%" height="15" fill="rgb(232,119,22)" fg:x="48719" fg:w="273"/><text x="42.3398%" y="735.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (12 samples, 0.01%)</title><rect x="42.3153%" y="709" width="0.0104%" height="15" fill="rgb(254,73,53)" fg:x="48980" fg:w="12"/><text x="42.5653%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (251 samples, 0.22%)</title><rect x="42.3767%" y="693" width="0.2168%" height="15" fill="rgb(251,35,20)" fg:x="49051" fg:w="251"/><text x="42.6267%" y="703.50"></text></g><g><title>&lt;async_ffi::FfiPoll&lt;T&gt; as core::convert::From&lt;core::task::poll::Poll&lt;T&gt;&gt;&gt;::from (251 samples, 0.22%)</title><rect x="42.3767%" y="677" width="0.2168%" height="15" fill="rgb(241,119,20)" fg:x="49051" fg:w="251"/><text x="42.6267%" y="687.50"></text></g><g><title>async_ffi::FfiPoll&lt;T&gt;::from_poll (251 samples, 0.22%)</title><rect x="42.3767%" y="661" width="0.2168%" height="15" fill="rgb(207,102,14)" fg:x="49051" fg:w="251"/><text x="42.6267%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (226 samples, 0.20%)</title><rect x="42.3983%" y="645" width="0.1952%" height="15" fill="rgb(248,201,50)" fg:x="49076" fg:w="226"/><text x="42.6483%" y="655.50"></text></g><g><title>async_ffi::FfiContext::with_context (13 samples, 0.01%)</title><rect x="42.5935%" y="597" width="0.0112%" height="15" fill="rgb(222,185,44)" fg:x="49302" fg:w="13"/><text x="42.8435%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="42.5935%" y="645" width="0.0216%" height="15" fill="rgb(218,107,18)" fg:x="49302" fg:w="25"/><text x="42.8435%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 0.02%)</title><rect x="42.5935%" y="629" width="0.0216%" height="15" fill="rgb(237,177,39)" fg:x="49302" fg:w="25"/><text x="42.8435%" y="639.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (25 samples, 0.02%)</title><rect x="42.5935%" y="613" width="0.0216%" height="15" fill="rgb(246,69,6)" fg:x="49302" fg:w="25"/><text x="42.8435%" y="623.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (12 samples, 0.01%)</title><rect x="42.6048%" y="597" width="0.0104%" height="15" fill="rgb(234,208,37)" fg:x="49315" fg:w="12"/><text x="42.8548%" y="607.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (735 samples, 0.63%)</title><rect x="42.3421%" y="725" width="0.6350%" height="15" fill="rgb(225,4,6)" fg:x="49011" fg:w="735"/><text x="42.5921%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (718 samples, 0.62%)</title><rect x="42.3568%" y="709" width="0.6203%" height="15" fill="rgb(233,45,0)" fg:x="49028" fg:w="718"/><text x="42.6068%" y="719.50"></text></g><g><title>std::panic::catch_unwind (444 samples, 0.38%)</title><rect x="42.5935%" y="693" width="0.3836%" height="15" fill="rgb(226,136,5)" fg:x="49302" fg:w="444"/><text x="42.8435%" y="703.50"></text></g><g><title>std::panicking::try (444 samples, 0.38%)</title><rect x="42.5935%" y="677" width="0.3836%" height="15" fill="rgb(211,91,47)" fg:x="49302" fg:w="444"/><text x="42.8435%" y="687.50"></text></g><g><title>std::panicking::try::do_call (444 samples, 0.38%)</title><rect x="42.5935%" y="661" width="0.3836%" height="15" fill="rgb(242,88,51)" fg:x="49302" fg:w="444"/><text x="42.8435%" y="671.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (419 samples, 0.36%)</title><rect x="42.6151%" y="645" width="0.3620%" height="15" fill="rgb(230,91,28)" fg:x="49327" fg:w="419"/><text x="42.8651%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (119 samples, 0.10%)</title><rect x="42.8743%" y="629" width="0.1028%" height="15" fill="rgb(254,186,29)" fg:x="49627" fg:w="119"/><text x="43.1243%" y="639.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (755 samples, 0.65%)</title><rect x="42.3257%" y="741" width="0.6523%" height="15" fill="rgb(238,6,4)" fg:x="48992" fg:w="755"/><text x="42.5757%" y="751.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,267 samples, 1.09%)</title><rect x="42.0829%" y="773" width="1.0946%" height="15" fill="rgb(221,151,16)" fg:x="48711" fg:w="1267"/><text x="42.3329%" y="783.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,267 samples, 1.09%)</title><rect x="42.0829%" y="757" width="1.0946%" height="15" fill="rgb(251,143,52)" fg:x="48711" fg:w="1267"/><text x="42.3329%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (231 samples, 0.20%)</title><rect x="42.9780%" y="741" width="0.1996%" height="15" fill="rgb(206,90,15)" fg:x="49747" fg:w="231"/><text x="43.2280%" y="751.50"></text></g><g><title>abi_stable::std_types::result::RResult&lt;T,E&gt;::map_err (50 samples, 0.04%)</title><rect x="43.1775%" y="773" width="0.0432%" height="15" fill="rgb(218,35,8)" fg:x="49978" fg:w="50"/><text x="43.4275%" y="783.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::drop_fn (19 samples, 0.02%)</title><rect x="43.2389%" y="725" width="0.0164%" height="15" fill="rgb(239,215,6)" fg:x="50049" fg:w="19"/><text x="43.4889%" y="735.50"></text></g><g><title>rust_dealloc (16 samples, 0.01%)</title><rect x="43.2622%" y="629" width="0.0138%" height="15" fill="rgb(245,116,39)" fg:x="50076" fg:w="16"/><text x="43.5122%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (28 samples, 0.02%)</title><rect x="43.2760%" y="629" width="0.0242%" height="15" fill="rgb(242,65,28)" fg:x="50092" fg:w="28"/><text x="43.5260%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (28 samples, 0.02%)</title><rect x="43.2760%" y="613" width="0.0242%" height="15" fill="rgb(252,132,53)" fg:x="50092" fg:w="28"/><text x="43.5260%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (27 samples, 0.02%)</title><rect x="43.2769%" y="597" width="0.0233%" height="15" fill="rgb(224,159,50)" fg:x="50093" fg:w="27"/><text x="43.5269%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (48 samples, 0.04%)</title><rect x="43.2622%" y="661" width="0.0415%" height="15" fill="rgb(224,93,4)" fg:x="50076" fg:w="48"/><text x="43.5122%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (48 samples, 0.04%)</title><rect x="43.2622%" y="645" width="0.0415%" height="15" fill="rgb(208,81,34)" fg:x="50076" fg:w="48"/><text x="43.5122%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (56 samples, 0.05%)</title><rect x="43.2622%" y="693" width="0.0484%" height="15" fill="rgb(233,92,54)" fg:x="50076" fg:w="56"/><text x="43.5122%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (56 samples, 0.05%)</title><rect x="43.2622%" y="677" width="0.0484%" height="15" fill="rgb(237,21,14)" fg:x="50076" fg:w="56"/><text x="43.5122%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (65 samples, 0.06%)</title><rect x="43.2613%" y="709" width="0.0562%" height="15" fill="rgb(249,128,51)" fg:x="50075" fg:w="65"/><text x="43.5113%" y="719.50"></text></g><g><title>rust_dealloc (76 samples, 0.07%)</title><rect x="43.2553%" y="725" width="0.0657%" height="15" fill="rgb(223,129,24)" fg:x="50068" fg:w="76"/><text x="43.5053%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::BorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (127 samples, 0.11%)</title><rect x="43.2225%" y="773" width="0.1097%" height="15" fill="rgb(231,168,25)" fg:x="50030" fg:w="127"/><text x="43.4725%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_ffi::LocalBorrowingFfiFuture&lt;abi_stable::std_types::result::RResult&lt;tremor_runtime::connectors::source::SourceReply,abi_stable::std_types::std_error::RBoxError_&lt;abi_stable::marker_type::UnsyncSend&gt;&gt;&gt;&gt; (127 samples, 0.11%)</title><rect x="43.2225%" y="757" width="0.1097%" height="15" fill="rgb(224,39,20)" fg:x="50030" fg:w="127"/><text x="43.4725%" y="767.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::ops::drop::Drop&gt;::drop (127 samples, 0.11%)</title><rect x="43.2225%" y="741" width="0.1097%" height="15" fill="rgb(225,152,53)" fg:x="50030" fg:w="127"/><text x="43.4725%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (13 samples, 0.01%)</title><rect x="43.3210%" y="725" width="0.0112%" height="15" fill="rgb(252,17,24)" fg:x="50144" fg:w="13"/><text x="43.5710%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="43.4013%" y="437" width="0.0112%" height="15" fill="rgb(250,114,30)" fg:x="50237" fg:w="13"/><text x="43.6513%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="43.4013%" y="421" width="0.0112%" height="15" fill="rgb(229,5,4)" fg:x="50237" fg:w="13"/><text x="43.6513%" y="431.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (12 samples, 0.01%)</title><rect x="43.4022%" y="405" width="0.0104%" height="15" fill="rgb(225,176,49)" fg:x="50238" fg:w="12"/><text x="43.6522%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (17 samples, 0.01%)</title><rect x="43.4013%" y="453" width="0.0147%" height="15" fill="rgb(224,221,49)" fg:x="50237" fg:w="17"/><text x="43.6513%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (28 samples, 0.02%)</title><rect x="43.3961%" y="469" width="0.0242%" height="15" fill="rgb(253,169,27)" fg:x="50231" fg:w="28"/><text x="43.6461%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (106 samples, 0.09%)</title><rect x="43.3961%" y="501" width="0.0916%" height="15" fill="rgb(211,206,16)" fg:x="50231" fg:w="106"/><text x="43.6461%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (106 samples, 0.09%)</title><rect x="43.3961%" y="485" width="0.0916%" height="15" fill="rgb(244,87,35)" fg:x="50231" fg:w="106"/><text x="43.6461%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (78 samples, 0.07%)</title><rect x="43.4203%" y="469" width="0.0674%" height="15" fill="rgb(246,28,10)" fg:x="50259" fg:w="78"/><text x="43.6703%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (61 samples, 0.05%)</title><rect x="43.4350%" y="453" width="0.0527%" height="15" fill="rgb(229,12,44)" fg:x="50276" fg:w="61"/><text x="43.6850%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (61 samples, 0.05%)</title><rect x="43.4350%" y="437" width="0.0527%" height="15" fill="rgb(210,145,37)" fg:x="50276" fg:w="61"/><text x="43.6850%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (61 samples, 0.05%)</title><rect x="43.4350%" y="421" width="0.0527%" height="15" fill="rgb(227,112,52)" fg:x="50276" fg:w="61"/><text x="43.6850%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="43.4929%" y="501" width="0.0181%" height="15" fill="rgb(238,155,34)" fg:x="50343" fg:w="21"/><text x="43.7429%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="43.4937%" y="485" width="0.0173%" height="15" fill="rgb(239,226,36)" fg:x="50344" fg:w="20"/><text x="43.7437%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="43.4955%" y="469" width="0.0156%" height="15" fill="rgb(230,16,23)" fg:x="50346" fg:w="18"/><text x="43.7455%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="43.4981%" y="453" width="0.0130%" height="15" fill="rgb(236,171,36)" fg:x="50349" fg:w="15"/><text x="43.7481%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (15 samples, 0.01%)</title><rect x="43.4981%" y="437" width="0.0130%" height="15" fill="rgb(221,22,14)" fg:x="50349" fg:w="15"/><text x="43.7481%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.19%)</title><rect x="43.3814%" y="549" width="0.1927%" height="15" fill="rgb(242,43,11)" fg:x="50214" fg:w="223"/><text x="43.6314%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (223 samples, 0.19%)</title><rect x="43.3814%" y="533" width="0.1927%" height="15" fill="rgb(232,69,23)" fg:x="50214" fg:w="223"/><text x="43.6314%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (209 samples, 0.18%)</title><rect x="43.3935%" y="517" width="0.1806%" height="15" fill="rgb(216,180,54)" fg:x="50228" fg:w="209"/><text x="43.6435%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (67 samples, 0.06%)</title><rect x="43.5162%" y="501" width="0.0579%" height="15" fill="rgb(216,5,24)" fg:x="50370" fg:w="67"/><text x="43.7662%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (67 samples, 0.06%)</title><rect x="43.5162%" y="485" width="0.0579%" height="15" fill="rgb(225,89,9)" fg:x="50370" fg:w="67"/><text x="43.7662%" y="495.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::pull_data (269 samples, 0.23%)</title><rect x="43.3451%" y="757" width="0.2324%" height="15" fill="rgb(243,75,33)" fg:x="50172" fg:w="269"/><text x="43.5951%" y="767.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data (244 samples, 0.21%)</title><rect x="43.3667%" y="741" width="0.2108%" height="15" fill="rgb(247,141,45)" fg:x="50197" fg:w="244"/><text x="43.6167%" y="751.50"></text></g><g><title>async_ffi::FutureExt::into_ffi (244 samples, 0.21%)</title><rect x="43.3667%" y="725" width="0.2108%" height="15" fill="rgb(232,177,36)" fg:x="50197" fg:w="244"/><text x="43.6167%" y="735.50"></text></g><g><title>async_ffi::BorrowingFfiFuture&lt;T&gt;::new (244 samples, 0.21%)</title><rect x="43.3667%" y="709" width="0.2108%" height="15" fill="rgb(219,125,36)" fg:x="50197" fg:w="244"/><text x="43.6167%" y="719.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new (244 samples, 0.21%)</title><rect x="43.3667%" y="693" width="0.2108%" height="15" fill="rgb(227,94,9)" fg:x="50197" fg:w="244"/><text x="43.6167%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (244 samples, 0.21%)</title><rect x="43.3667%" y="677" width="0.2108%" height="15" fill="rgb(240,34,52)" fg:x="50197" fg:w="244"/><text x="43.6167%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (236 samples, 0.20%)</title><rect x="43.3737%" y="661" width="0.2039%" height="15" fill="rgb(216,45,12)" fg:x="50205" fg:w="236"/><text x="43.6237%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (236 samples, 0.20%)</title><rect x="43.3737%" y="645" width="0.2039%" height="15" fill="rgb(246,21,19)" fg:x="50205" fg:w="236"/><text x="43.6237%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (236 samples, 0.20%)</title><rect x="43.3737%" y="629" width="0.2039%" height="15" fill="rgb(213,98,42)" fg:x="50205" fg:w="236"/><text x="43.6237%" y="639.50"></text></g><g><title>alloc::alloc::alloc (236 samples, 0.20%)</title><rect x="43.3737%" y="613" width="0.2039%" height="15" fill="rgb(250,136,47)" fg:x="50205" fg:w="236"/><text x="43.6237%" y="623.50"></text></g><g><title>__rg_alloc (236 samples, 0.20%)</title><rect x="43.3737%" y="597" width="0.2039%" height="15" fill="rgb(251,124,27)" fg:x="50205" fg:w="236"/><text x="43.6237%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (236 samples, 0.20%)</title><rect x="43.3737%" y="581" width="0.2039%" height="15" fill="rgb(229,180,14)" fg:x="50205" fg:w="236"/><text x="43.6237%" y="591.50"></text></g><g><title>rust_alloc (236 samples, 0.20%)</title><rect x="43.3737%" y="565" width="0.2039%" height="15" fill="rgb(245,216,25)" fg:x="50205" fg:w="236"/><text x="43.6237%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (2,664 samples, 2.30%)</title><rect x="41.2959%" y="789" width="2.3015%" height="15" fill="rgb(251,43,5)" fg:x="47800" fg:w="2664"/><text x="41.5459%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::RawSource_TO&lt;_ErasedPtr&gt;::pull_data (307 samples, 0.27%)</title><rect x="43.3322%" y="773" width="0.2652%" height="15" fill="rgb(250,128,24)" fg:x="50157" fg:w="307"/><text x="43.5822%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::RawSource_trait::_::&lt;impl tremor_runtime::connectors::source::RawSource_trait::VTableInner_Ref&lt;_Self,_ErasedPtr&gt;&gt;::pull_data (21 samples, 0.02%)</title><rect x="43.5793%" y="757" width="0.0181%" height="15" fill="rgb(217,117,27)" fg:x="50443" fg:w="21"/><text x="43.8293%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::control_plane::{{closure}} (373 samples, 0.32%)</title><rect x="43.5974%" y="789" width="0.3222%" height="15" fill="rgb(245,147,4)" fg:x="50464" fg:w="373"/><text x="43.8474%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::needs_control_plane_msg (310 samples, 0.27%)</title><rect x="43.6518%" y="773" width="0.2678%" height="15" fill="rgb(242,201,35)" fg:x="50527" fg:w="310"/><text x="43.9018%" y="783.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (296 samples, 0.26%)</title><rect x="43.6639%" y="757" width="0.2557%" height="15" fill="rgb(218,181,1)" fg:x="50541" fg:w="296"/><text x="43.9139%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (292 samples, 0.25%)</title><rect x="43.6674%" y="741" width="0.2523%" height="15" fill="rgb(222,6,29)" fg:x="50545" fg:w="292"/><text x="43.9174%" y="751.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (197 samples, 0.17%)</title><rect x="43.7495%" y="725" width="0.1702%" height="15" fill="rgb(208,186,3)" fg:x="50640" fg:w="197"/><text x="43.9995%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (182 samples, 0.16%)</title><rect x="43.7624%" y="709" width="0.1572%" height="15" fill="rgb(216,36,26)" fg:x="50655" fg:w="182"/><text x="44.0124%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (182 samples, 0.16%)</title><rect x="43.7624%" y="693" width="0.1572%" height="15" fill="rgb(248,201,23)" fg:x="50655" fg:w="182"/><text x="44.0124%" y="703.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (16 samples, 0.01%)</title><rect x="44.6747%" y="757" width="0.0138%" height="15" fill="rgb(251,170,31)" fg:x="51711" fg:w="16"/><text x="44.9247%" y="767.50"></text></g><g><title>&lt;abi_stable::std_types::utypeid::UTypeId as core::cmp::PartialEq&gt;::eq (208 samples, 0.18%)</title><rect x="44.7378%" y="709" width="0.1797%" height="15" fill="rgb(207,110,25)" fg:x="51784" fg:w="208"/><text x="44.9878%" y="719.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (204 samples, 0.18%)</title><rect x="44.7413%" y="693" width="0.1762%" height="15" fill="rgb(250,54,15)" fg:x="51788" fg:w="204"/><text x="44.9913%" y="703.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (204 samples, 0.18%)</title><rect x="44.7413%" y="677" width="0.1762%" height="15" fill="rgb(227,68,33)" fg:x="51788" fg:w="204"/><text x="44.9913%" y="687.50"></text></g><g><title>abi_stable::sabi_types::constructor::Constructor&lt;T&gt;::get (49 samples, 0.04%)</title><rect x="44.9175%" y="709" width="0.0423%" height="15" fill="rgb(238,34,41)" fg:x="51992" fg:w="49"/><text x="45.1675%" y="719.50"></text></g><g><title>abi_stable::std_types::utypeid::new_utypeid (40 samples, 0.03%)</title><rect x="44.9253%" y="693" width="0.0346%" height="15" fill="rgb(220,11,15)" fg:x="52001" fg:w="40"/><text x="45.1753%" y="703.50"></text></g><g><title>abi_stable::std_types::utypeid::UTypeId::new (26 samples, 0.02%)</title><rect x="44.9374%" y="677" width="0.0225%" height="15" fill="rgb(246,111,35)" fg:x="52015" fg:w="26"/><text x="45.1874%" y="687.50"></text></g><g><title>&lt;abi_stable::sabi_types::constructor::Constructor&lt;T&gt; as core::cmp::PartialEq&gt;::eq (264 samples, 0.23%)</title><rect x="44.7378%" y="725" width="0.2281%" height="15" fill="rgb(209,88,53)" fg:x="51784" fg:w="264"/><text x="44.9878%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::from_raw_parts (12 samples, 0.01%)</title><rect x="44.9659%" y="725" width="0.0104%" height="15" fill="rgb(231,185,47)" fg:x="52048" fg:w="12"/><text x="45.2159%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (12 samples, 0.01%)</title><rect x="44.9659%" y="709" width="0.0104%" height="15" fill="rgb(233,154,1)" fg:x="52048" fg:w="12"/><text x="45.2159%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (373 samples, 0.32%)</title><rect x="44.6575%" y="773" width="0.3222%" height="15" fill="rgb(225,15,46)" fg:x="51691" fg:w="373"/><text x="44.9075%" y="783.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::convert::From&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from (337 samples, 0.29%)</title><rect x="44.6886%" y="757" width="0.2911%" height="15" fill="rgb(211,135,41)" fg:x="51727" fg:w="337"/><text x="44.9386%" y="767.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::into_vec (312 samples, 0.27%)</title><rect x="44.7102%" y="741" width="0.2695%" height="15" fill="rgb(208,54,0)" fg:x="51752" fg:w="312"/><text x="44.9602%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (766 samples, 0.66%)</title><rect x="44.9918%" y="773" width="0.6618%" height="15" fill="rgb(244,136,14)" fg:x="52078" fg:w="766"/><text x="45.2418%" y="783.50"></text></g><g><title>abi_stable::std_types::option::ROption&lt;T&gt;::map (18 samples, 0.02%)</title><rect x="45.6536%" y="773" width="0.0156%" height="15" fill="rgb(241,56,14)" fg:x="52844" fg:w="18"/><text x="45.9036%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="45.7132%" y="469" width="0.0104%" height="15" fill="rgb(205,80,24)" fg:x="52913" fg:w="12"/><text x="45.9632%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="45.7132%" y="453" width="0.0104%" height="15" fill="rgb(220,57,4)" fg:x="52913" fg:w="12"/><text x="45.9632%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="45.7132%" y="485" width="0.0130%" height="15" fill="rgb(226,193,50)" fg:x="52913" fg:w="15"/><text x="45.9632%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (24 samples, 0.02%)</title><rect x="45.7106%" y="501" width="0.0207%" height="15" fill="rgb(231,168,22)" fg:x="52910" fg:w="24"/><text x="45.9606%" y="511.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="45.7400%" y="485" width="0.0104%" height="15" fill="rgb(254,215,14)" fg:x="52944" fg:w="12"/><text x="45.9900%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.08%)</title><rect x="45.7106%" y="533" width="0.0847%" height="15" fill="rgb(211,115,16)" fg:x="52910" fg:w="98"/><text x="45.9606%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (98 samples, 0.08%)</title><rect x="45.7106%" y="517" width="0.0847%" height="15" fill="rgb(236,210,16)" fg:x="52910" fg:w="98"/><text x="45.9606%" y="527.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (74 samples, 0.06%)</title><rect x="45.7313%" y="501" width="0.0639%" height="15" fill="rgb(221,94,12)" fg:x="52934" fg:w="74"/><text x="45.9813%" y="511.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (52 samples, 0.04%)</title><rect x="45.7503%" y="485" width="0.0449%" height="15" fill="rgb(235,218,49)" fg:x="52956" fg:w="52"/><text x="46.0003%" y="495.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (52 samples, 0.04%)</title><rect x="45.7503%" y="469" width="0.0449%" height="15" fill="rgb(217,114,14)" fg:x="52956" fg:w="52"/><text x="46.0003%" y="479.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (52 samples, 0.04%)</title><rect x="45.7503%" y="453" width="0.0449%" height="15" fill="rgb(216,145,22)" fg:x="52956" fg:w="52"/><text x="46.0003%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (238 samples, 0.21%)</title><rect x="45.6994%" y="581" width="0.2056%" height="15" fill="rgb(217,112,39)" fg:x="52897" fg:w="238"/><text x="45.9494%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (238 samples, 0.21%)</title><rect x="45.6994%" y="565" width="0.2056%" height="15" fill="rgb(225,85,32)" fg:x="52897" fg:w="238"/><text x="45.9494%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (226 samples, 0.20%)</title><rect x="45.7097%" y="549" width="0.1952%" height="15" fill="rgb(245,209,47)" fg:x="52909" fg:w="226"/><text x="45.9597%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::take (108 samples, 0.09%)</title><rect x="45.8117%" y="533" width="0.0933%" height="15" fill="rgb(218,220,15)" fg:x="53027" fg:w="108"/><text x="46.0617%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (108 samples, 0.09%)</title><rect x="45.8117%" y="517" width="0.0933%" height="15" fill="rgb(222,202,31)" fg:x="53027" fg:w="108"/><text x="46.0617%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (265 samples, 0.23%)</title><rect x="45.6803%" y="709" width="0.2289%" height="15" fill="rgb(243,203,4)" fg:x="52875" fg:w="265"/><text x="45.9303%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (259 samples, 0.22%)</title><rect x="45.6855%" y="693" width="0.2238%" height="15" fill="rgb(237,92,17)" fg:x="52881" fg:w="259"/><text x="45.9355%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (259 samples, 0.22%)</title><rect x="45.6855%" y="677" width="0.2238%" height="15" fill="rgb(231,119,7)" fg:x="52881" fg:w="259"/><text x="45.9355%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (259 samples, 0.22%)</title><rect x="45.6855%" y="661" width="0.2238%" height="15" fill="rgb(237,82,41)" fg:x="52881" fg:w="259"/><text x="45.9355%" y="671.50"></text></g><g><title>alloc::alloc::alloc (256 samples, 0.22%)</title><rect x="45.6881%" y="645" width="0.2212%" height="15" fill="rgb(226,81,48)" fg:x="52884" fg:w="256"/><text x="45.9381%" y="655.50"></text></g><g><title>__rg_alloc (256 samples, 0.22%)</title><rect x="45.6881%" y="629" width="0.2212%" height="15" fill="rgb(234,70,51)" fg:x="52884" fg:w="256"/><text x="45.9381%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (256 samples, 0.22%)</title><rect x="45.6881%" y="613" width="0.2212%" height="15" fill="rgb(251,86,4)" fg:x="52884" fg:w="256"/><text x="45.9381%" y="623.50"></text></g><g><title>rust_alloc (250 samples, 0.22%)</title><rect x="45.6933%" y="597" width="0.2160%" height="15" fill="rgb(244,144,28)" fg:x="52890" fg:w="250"/><text x="45.9433%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (294 samples, 0.25%)</title><rect x="45.6700%" y="773" width="0.2540%" height="15" fill="rgb(232,161,39)" fg:x="52863" fg:w="294"/><text x="45.9200%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (282 samples, 0.24%)</title><rect x="45.6803%" y="757" width="0.2436%" height="15" fill="rgb(247,34,51)" fg:x="52875" fg:w="282"/><text x="45.9303%" y="767.50"></text></g><g><title>value_trait::Builder::object (282 samples, 0.24%)</title><rect x="45.6803%" y="741" width="0.2436%" height="15" fill="rgb(225,132,2)" fg:x="52875" fg:w="282"/><text x="45.9303%" y="751.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (282 samples, 0.24%)</title><rect x="45.6803%" y="725" width="0.2436%" height="15" fill="rgb(209,159,44)" fg:x="52875" fg:w="282"/><text x="45.9303%" y="735.50"></text></g><g><title>tremor_value::value::Value::Object (17 samples, 0.01%)</title><rect x="45.9093%" y="709" width="0.0147%" height="15" fill="rgb(251,214,1)" fg:x="53140" fg:w="17"/><text x="46.1593%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="45.9300%" y="773" width="0.0130%" height="15" fill="rgb(247,84,47)" fg:x="53164" fg:w="15"/><text x="46.1800%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="46.0164%" y="677" width="0.0138%" height="15" fill="rgb(240,111,43)" fg:x="53264" fg:w="16"/><text x="46.2664%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (15 samples, 0.01%)</title><rect x="46.0173%" y="661" width="0.0130%" height="15" fill="rgb(215,214,35)" fg:x="53265" fg:w="15"/><text x="46.2673%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (112 samples, 0.10%)</title><rect x="45.9430%" y="773" width="0.0968%" height="15" fill="rgb(248,207,23)" fg:x="53179" fg:w="112"/><text x="46.1930%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (53 samples, 0.05%)</title><rect x="45.9940%" y="757" width="0.0458%" height="15" fill="rgb(214,186,4)" fg:x="53238" fg:w="53"/><text x="46.2440%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (43 samples, 0.04%)</title><rect x="46.0026%" y="741" width="0.0371%" height="15" fill="rgb(220,133,22)" fg:x="53248" fg:w="43"/><text x="46.2526%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (43 samples, 0.04%)</title><rect x="46.0026%" y="725" width="0.0371%" height="15" fill="rgb(239,134,19)" fg:x="53248" fg:w="43"/><text x="46.2526%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (27 samples, 0.02%)</title><rect x="46.0164%" y="709" width="0.0233%" height="15" fill="rgb(250,140,9)" fg:x="53264" fg:w="27"/><text x="46.2664%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (27 samples, 0.02%)</title><rect x="46.0164%" y="693" width="0.0233%" height="15" fill="rgb(225,59,14)" fg:x="53264" fg:w="27"/><text x="46.2664%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.02%)</title><rect x="46.0916%" y="629" width="0.0233%" height="15" fill="rgb(214,152,51)" fg:x="53351" fg:w="27"/><text x="46.3416%" y="639.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (26 samples, 0.02%)</title><rect x="46.0924%" y="613" width="0.0225%" height="15" fill="rgb(251,227,43)" fg:x="53352" fg:w="26"/><text x="46.3424%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (53 samples, 0.05%)</title><rect x="46.0778%" y="677" width="0.0458%" height="15" fill="rgb(241,96,17)" fg:x="53335" fg:w="53"/><text x="46.3278%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (53 samples, 0.05%)</title><rect x="46.0778%" y="661" width="0.0458%" height="15" fill="rgb(234,198,43)" fg:x="53335" fg:w="53"/><text x="46.3278%" y="671.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (52 samples, 0.04%)</title><rect x="46.0786%" y="645" width="0.0449%" height="15" fill="rgb(220,108,29)" fg:x="53336" fg:w="52"/><text x="46.3286%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (92 samples, 0.08%)</title><rect x="46.0449%" y="757" width="0.0795%" height="15" fill="rgb(226,163,33)" fg:x="53297" fg:w="92"/><text x="46.2949%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (76 samples, 0.07%)</title><rect x="46.0587%" y="741" width="0.0657%" height="15" fill="rgb(205,194,45)" fg:x="53313" fg:w="76"/><text x="46.3087%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (76 samples, 0.07%)</title><rect x="46.0587%" y="725" width="0.0657%" height="15" fill="rgb(206,143,44)" fg:x="53313" fg:w="76"/><text x="46.3087%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (76 samples, 0.07%)</title><rect x="46.0587%" y="709" width="0.0657%" height="15" fill="rgb(236,136,36)" fg:x="53313" fg:w="76"/><text x="46.3087%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (76 samples, 0.07%)</title><rect x="46.0587%" y="693" width="0.0657%" height="15" fill="rgb(249,172,42)" fg:x="53313" fg:w="76"/><text x="46.3087%" y="703.50"></text></g><g><title>rust_dealloc (101 samples, 0.09%)</title><rect x="46.0397%" y="773" width="0.0873%" height="15" fill="rgb(216,139,23)" fg:x="53291" fg:w="101"/><text x="46.2897%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (70 samples, 0.06%)</title><rect x="46.2022%" y="709" width="0.0605%" height="15" fill="rgb(207,166,20)" fg:x="53479" fg:w="70"/><text x="46.4522%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (70 samples, 0.06%)</title><rect x="46.2022%" y="693" width="0.0605%" height="15" fill="rgb(210,209,22)" fg:x="53479" fg:w="70"/><text x="46.4522%" y="703.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (70 samples, 0.06%)</title><rect x="46.2022%" y="677" width="0.0605%" height="15" fill="rgb(232,118,20)" fg:x="53479" fg:w="70"/><text x="46.4522%" y="687.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (70 samples, 0.06%)</title><rect x="46.2022%" y="661" width="0.0605%" height="15" fill="rgb(238,113,42)" fg:x="53479" fg:w="70"/><text x="46.4522%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (70 samples, 0.06%)</title><rect x="46.2022%" y="645" width="0.0605%" height="15" fill="rgb(231,42,5)" fg:x="53479" fg:w="70"/><text x="46.4522%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (34 samples, 0.03%)</title><rect x="46.2333%" y="629" width="0.0294%" height="15" fill="rgb(243,166,24)" fg:x="53515" fg:w="34"/><text x="46.4833%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (141 samples, 0.12%)</title><rect x="46.1616%" y="741" width="0.1218%" height="15" fill="rgb(237,226,12)" fg:x="53432" fg:w="141"/><text x="46.4116%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (141 samples, 0.12%)</title><rect x="46.1616%" y="725" width="0.1218%" height="15" fill="rgb(229,133,24)" fg:x="53432" fg:w="141"/><text x="46.4116%" y="735.50"></text></g><g><title>core::time::Duration::new (24 samples, 0.02%)</title><rect x="46.2626%" y="709" width="0.0207%" height="15" fill="rgb(238,33,43)" fg:x="53549" fg:w="24"/><text x="46.5126%" y="719.50"></text></g><g><title>std::time::SystemTime::duration_since (147 samples, 0.13%)</title><rect x="46.1616%" y="757" width="0.1270%" height="15" fill="rgb(227,59,38)" fg:x="53432" fg:w="147"/><text x="46.4116%" y="767.50"></text></g><g><title>__vdso_clock_gettime (441 samples, 0.38%)</title><rect x="46.4251%" y="693" width="0.3810%" height="15" fill="rgb(230,97,0)" fg:x="53737" fg:w="441"/><text x="46.6751%" y="703.50"></text></g><g><title>[[vdso]] (299 samples, 0.26%)</title><rect x="46.5477%" y="677" width="0.2583%" height="15" fill="rgb(250,173,50)" fg:x="53879" fg:w="299"/><text x="46.7977%" y="687.50"></text></g><g><title>tremor_common::time::nanotime (780 samples, 0.67%)</title><rect x="46.1339%" y="773" width="0.6739%" height="15" fill="rgb(240,15,50)" fg:x="53400" fg:w="780"/><text x="46.3839%" y="783.50"></text></g><g><title>std::time::SystemTime::now (601 samples, 0.52%)</title><rect x="46.2886%" y="757" width="0.5192%" height="15" fill="rgb(221,93,22)" fg:x="53579" fg:w="601"/><text x="46.5386%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (601 samples, 0.52%)</title><rect x="46.2886%" y="741" width="0.5192%" height="15" fill="rgb(245,180,53)" fg:x="53579" fg:w="601"/><text x="46.5386%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::now (601 samples, 0.52%)</title><rect x="46.2886%" y="725" width="0.5192%" height="15" fill="rgb(231,88,51)" fg:x="53579" fg:w="601"/><text x="46.5386%" y="735.50"></text></g><g><title>__clock_gettime_2 (484 samples, 0.42%)</title><rect x="46.3896%" y="709" width="0.4181%" height="15" fill="rgb(240,58,21)" fg:x="53696" fg:w="484"/><text x="46.6396%" y="719.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,356 samples, 2.90%)</title><rect x="43.9197%" y="789" width="2.8994%" height="15" fill="rgb(237,21,10)" fg:x="50837" fg:w="3356"/><text x="44.1697%" y="799.50">tr..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (13 samples, 0.01%)</title><rect x="46.8078%" y="773" width="0.0112%" height="15" fill="rgb(218,43,11)" fg:x="54180" fg:w="13"/><text x="47.0578%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,678 samples, 5.77%)</title><rect x="41.0886%" y="805" width="5.7693%" height="15" fill="rgb(218,221,29)" fg:x="47560" fg:w="6678"/><text x="41.3386%" y="815.50">&lt;core::..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::_{{closure}} (45 samples, 0.04%)</title><rect x="46.8190%" y="789" width="0.0389%" height="15" fill="rgb(214,118,42)" fg:x="54193" fg:w="45"/><text x="47.0690%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (687 samples, 0.59%)</title><rect x="46.8631%" y="805" width="0.5935%" height="15" fill="rgb(251,200,26)" fg:x="54244" fg:w="687"/><text x="47.1131%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (31 samples, 0.03%)</title><rect x="47.4583%" y="789" width="0.0268%" height="15" fill="rgb(237,101,39)" fg:x="54933" fg:w="31"/><text x="47.7083%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (38 samples, 0.03%)</title><rect x="47.4583%" y="805" width="0.0328%" height="15" fill="rgb(251,117,11)" fg:x="54933" fg:w="38"/><text x="47.7083%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,898 samples, 6.82%)</title><rect x="40.6989%" y="821" width="6.8233%" height="15" fill="rgb(216,223,23)" fg:x="47109" fg:w="7898"/><text x="40.9489%" y="831.50">tremor_ru..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::should_pull_data (36 samples, 0.03%)</title><rect x="47.4911%" y="805" width="0.0311%" height="15" fill="rgb(251,54,12)" fg:x="54971" fg:w="36"/><text x="47.7411%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="47.5654%" y="789" width="0.0104%" height="15" fill="rgb(254,176,54)" fg:x="55057" fg:w="12"/><text x="47.8154%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (302 samples, 0.26%)</title><rect x="47.5758%" y="789" width="0.2609%" height="15" fill="rgb(210,32,8)" fg:x="55069" fg:w="302"/><text x="47.8258%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.03%)</title><rect x="48.0579%" y="757" width="0.0328%" height="15" fill="rgb(235,52,38)" fg:x="55627" fg:w="38"/><text x="48.3079%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (345 samples, 0.30%)</title><rect x="48.0579%" y="773" width="0.2981%" height="15" fill="rgb(231,4,44)" fg:x="55627" fg:w="345"/><text x="48.3079%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (307 samples, 0.27%)</title><rect x="48.0907%" y="757" width="0.2652%" height="15" fill="rgb(249,2,32)" fg:x="55665" fg:w="307"/><text x="48.3407%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (300 samples, 0.26%)</title><rect x="48.0968%" y="741" width="0.2592%" height="15" fill="rgb(224,65,26)" fg:x="55672" fg:w="300"/><text x="48.3468%" y="751.50"></text></g><g><title>core::ptr::read (300 samples, 0.26%)</title><rect x="48.0968%" y="725" width="0.2592%" height="15" fill="rgb(250,73,40)" fg:x="55672" fg:w="300"/><text x="48.3468%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (290 samples, 0.25%)</title><rect x="48.1054%" y="709" width="0.2505%" height="15" fill="rgb(253,177,16)" fg:x="55682" fg:w="290"/><text x="48.3554%" y="719.50"></text></g><g><title>rust_alloc (32 samples, 0.03%)</title><rect x="48.3844%" y="469" width="0.0276%" height="15" fill="rgb(217,32,34)" fg:x="56005" fg:w="32"/><text x="48.6344%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="48.4242%" y="389" width="0.0199%" height="15" fill="rgb(212,7,10)" fg:x="56051" fg:w="23"/><text x="48.6742%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="48.4242%" y="373" width="0.0199%" height="15" fill="rgb(245,89,8)" fg:x="56051" fg:w="23"/><text x="48.6742%" y="383.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="48.4259%" y="357" width="0.0181%" height="15" fill="rgb(237,16,53)" fg:x="56053" fg:w="21"/><text x="48.6759%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (26 samples, 0.02%)</title><rect x="48.4242%" y="405" width="0.0225%" height="15" fill="rgb(250,204,30)" fg:x="56051" fg:w="26"/><text x="48.6742%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (39 samples, 0.03%)</title><rect x="48.4199%" y="421" width="0.0337%" height="15" fill="rgb(208,77,27)" fg:x="56046" fg:w="39"/><text x="48.6699%" y="431.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (24 samples, 0.02%)</title><rect x="48.4613%" y="405" width="0.0207%" height="15" fill="rgb(250,204,28)" fg:x="56094" fg:w="24"/><text x="48.7113%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (197 samples, 0.17%)</title><rect x="48.4199%" y="453" width="0.1702%" height="15" fill="rgb(244,63,21)" fg:x="56046" fg:w="197"/><text x="48.6699%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (197 samples, 0.17%)</title><rect x="48.4199%" y="437" width="0.1702%" height="15" fill="rgb(236,85,44)" fg:x="56046" fg:w="197"/><text x="48.6699%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (158 samples, 0.14%)</title><rect x="48.4536%" y="421" width="0.1365%" height="15" fill="rgb(215,98,4)" fg:x="56085" fg:w="158"/><text x="48.7036%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (125 samples, 0.11%)</title><rect x="48.4821%" y="405" width="0.1080%" height="15" fill="rgb(235,38,11)" fg:x="56118" fg:w="125"/><text x="48.7321%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (125 samples, 0.11%)</title><rect x="48.4821%" y="389" width="0.1080%" height="15" fill="rgb(254,186,25)" fg:x="56118" fg:w="125"/><text x="48.7321%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (125 samples, 0.11%)</title><rect x="48.4821%" y="373" width="0.1080%" height="15" fill="rgb(225,55,31)" fg:x="56118" fg:w="125"/><text x="48.7321%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (95 samples, 0.08%)</title><rect x="48.5944%" y="453" width="0.0821%" height="15" fill="rgb(211,15,21)" fg:x="56248" fg:w="95"/><text x="48.8444%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (95 samples, 0.08%)</title><rect x="48.5944%" y="437" width="0.0821%" height="15" fill="rgb(215,187,41)" fg:x="56248" fg:w="95"/><text x="48.8444%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (829 samples, 0.72%)</title><rect x="48.3836%" y="501" width="0.7162%" height="15" fill="rgb(248,69,32)" fg:x="56004" fg:w="829"/><text x="48.6336%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (828 samples, 0.72%)</title><rect x="48.3844%" y="485" width="0.7153%" height="15" fill="rgb(252,102,52)" fg:x="56005" fg:w="828"/><text x="48.6344%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (791 samples, 0.68%)</title><rect x="48.4164%" y="469" width="0.6834%" height="15" fill="rgb(253,140,32)" fg:x="56042" fg:w="791"/><text x="48.6664%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (490 samples, 0.42%)</title><rect x="48.6765%" y="453" width="0.4233%" height="15" fill="rgb(216,56,42)" fg:x="56343" fg:w="490"/><text x="48.9265%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (490 samples, 0.42%)</title><rect x="48.6765%" y="437" width="0.4233%" height="15" fill="rgb(216,184,14)" fg:x="56343" fg:w="490"/><text x="48.9265%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (861 samples, 0.74%)</title><rect x="48.3637%" y="645" width="0.7438%" height="15" fill="rgb(237,187,27)" fg:x="55981" fg:w="861"/><text x="48.6137%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (861 samples, 0.74%)</title><rect x="48.3637%" y="629" width="0.7438%" height="15" fill="rgb(219,65,3)" fg:x="55981" fg:w="861"/><text x="48.6137%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (852 samples, 0.74%)</title><rect x="48.3715%" y="613" width="0.7361%" height="15" fill="rgb(245,83,25)" fg:x="55990" fg:w="852"/><text x="48.6215%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (852 samples, 0.74%)</title><rect x="48.3715%" y="597" width="0.7361%" height="15" fill="rgb(214,205,45)" fg:x="55990" fg:w="852"/><text x="48.6215%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (852 samples, 0.74%)</title><rect x="48.3715%" y="581" width="0.7361%" height="15" fill="rgb(241,20,18)" fg:x="55990" fg:w="852"/><text x="48.6215%" y="591.50"></text></g><g><title>alloc::alloc::alloc (845 samples, 0.73%)</title><rect x="48.3775%" y="565" width="0.7300%" height="15" fill="rgb(232,163,23)" fg:x="55997" fg:w="845"/><text x="48.6275%" y="575.50"></text></g><g><title>__rg_alloc (845 samples, 0.73%)</title><rect x="48.3775%" y="549" width="0.7300%" height="15" fill="rgb(214,5,46)" fg:x="55997" fg:w="845"/><text x="48.6275%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (845 samples, 0.73%)</title><rect x="48.3775%" y="533" width="0.7300%" height="15" fill="rgb(229,78,17)" fg:x="55997" fg:w="845"/><text x="48.6275%" y="543.50"></text></g><g><title>rust_alloc (843 samples, 0.73%)</title><rect x="48.3793%" y="517" width="0.7283%" height="15" fill="rgb(248,89,10)" fg:x="55999" fg:w="843"/><text x="48.6293%" y="527.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (901 samples, 0.78%)</title><rect x="48.3637%" y="773" width="0.7784%" height="15" fill="rgb(248,54,15)" fg:x="55981" fg:w="901"/><text x="48.6137%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (901 samples, 0.78%)</title><rect x="48.3637%" y="757" width="0.7784%" height="15" fill="rgb(223,116,6)" fg:x="55981" fg:w="901"/><text x="48.6137%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (901 samples, 0.78%)</title><rect x="48.3637%" y="741" width="0.7784%" height="15" fill="rgb(205,125,38)" fg:x="55981" fg:w="901"/><text x="48.6137%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (901 samples, 0.78%)</title><rect x="48.3637%" y="725" width="0.7784%" height="15" fill="rgb(251,78,38)" fg:x="55981" fg:w="901"/><text x="48.6137%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (901 samples, 0.78%)</title><rect x="48.3637%" y="709" width="0.7784%" height="15" fill="rgb(253,78,28)" fg:x="55981" fg:w="901"/><text x="48.6137%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (901 samples, 0.78%)</title><rect x="48.3637%" y="693" width="0.7784%" height="15" fill="rgb(209,120,3)" fg:x="55981" fg:w="901"/><text x="48.6137%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (901 samples, 0.78%)</title><rect x="48.3637%" y="677" width="0.7784%" height="15" fill="rgb(238,229,9)" fg:x="55981" fg:w="901"/><text x="48.6137%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (901 samples, 0.78%)</title><rect x="48.3637%" y="661" width="0.7784%" height="15" fill="rgb(253,159,18)" fg:x="55981" fg:w="901"/><text x="48.6137%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (40 samples, 0.03%)</title><rect x="49.1076%" y="645" width="0.0346%" height="15" fill="rgb(244,42,34)" fg:x="56842" fg:w="40"/><text x="49.3576%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.03%)</title><rect x="49.1076%" y="629" width="0.0346%" height="15" fill="rgb(224,8,7)" fg:x="56842" fg:w="40"/><text x="49.3576%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (32 samples, 0.03%)</title><rect x="49.1145%" y="613" width="0.0276%" height="15" fill="rgb(210,201,45)" fg:x="56850" fg:w="32"/><text x="49.3645%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (948 samples, 0.82%)</title><rect x="49.1421%" y="773" width="0.8190%" height="15" fill="rgb(252,185,21)" fg:x="56882" fg:w="948"/><text x="49.3921%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (22 samples, 0.02%)</title><rect x="49.9611%" y="773" width="0.0190%" height="15" fill="rgb(223,131,1)" fg:x="57830" fg:w="22"/><text x="50.2111%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (15 samples, 0.01%)</title><rect x="49.9672%" y="757" width="0.0130%" height="15" fill="rgb(245,141,16)" fg:x="57837" fg:w="15"/><text x="50.2172%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="49.9672%" y="741" width="0.0130%" height="15" fill="rgb(229,55,45)" fg:x="57837" fg:w="15"/><text x="50.2172%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (15 samples, 0.01%)</title><rect x="49.9672%" y="725" width="0.0130%" height="15" fill="rgb(208,92,15)" fg:x="57837" fg:w="15"/><text x="50.2172%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (15 samples, 0.01%)</title><rect x="49.9672%" y="709" width="0.0130%" height="15" fill="rgb(234,185,47)" fg:x="57837" fg:w="15"/><text x="50.2172%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (19 samples, 0.02%)</title><rect x="49.9810%" y="773" width="0.0164%" height="15" fill="rgb(253,104,50)" fg:x="57853" fg:w="19"/><text x="50.2310%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="49.9810%" y="757" width="0.0164%" height="15" fill="rgb(205,70,7)" fg:x="57853" fg:w="19"/><text x="50.2310%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (28 samples, 0.02%)</title><rect x="49.9974%" y="773" width="0.0242%" height="15" fill="rgb(240,178,43)" fg:x="57872" fg:w="28"/><text x="50.2474%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.02%)</title><rect x="49.9974%" y="757" width="0.0242%" height="15" fill="rgb(214,112,2)" fg:x="57872" fg:w="28"/><text x="50.2474%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="50.0216%" y="773" width="0.0112%" height="15" fill="rgb(206,46,17)" fg:x="57900" fg:w="13"/><text x="50.2716%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (18 samples, 0.02%)</title><rect x="50.0328%" y="773" width="0.0156%" height="15" fill="rgb(225,220,16)" fg:x="57913" fg:w="18"/><text x="50.2828%" y="783.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (22 samples, 0.02%)</title><rect x="50.0691%" y="725" width="0.0190%" height="15" fill="rgb(238,65,40)" fg:x="57955" fg:w="22"/><text x="50.3191%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (196 samples, 0.17%)</title><rect x="50.0691%" y="741" width="0.1693%" height="15" fill="rgb(230,151,21)" fg:x="57955" fg:w="196"/><text x="50.3191%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (174 samples, 0.15%)</title><rect x="50.0881%" y="725" width="0.1503%" height="15" fill="rgb(218,58,49)" fg:x="57977" fg:w="174"/><text x="50.3381%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (174 samples, 0.15%)</title><rect x="50.0881%" y="709" width="0.1503%" height="15" fill="rgb(219,179,14)" fg:x="57977" fg:w="174"/><text x="50.3381%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (174 samples, 0.15%)</title><rect x="50.0881%" y="693" width="0.1503%" height="15" fill="rgb(223,72,1)" fg:x="57977" fg:w="174"/><text x="50.3381%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (174 samples, 0.15%)</title><rect x="50.0881%" y="677" width="0.1503%" height="15" fill="rgb(238,126,10)" fg:x="57977" fg:w="174"/><text x="50.3381%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (174 samples, 0.15%)</title><rect x="50.0881%" y="661" width="0.1503%" height="15" fill="rgb(224,206,38)" fg:x="57977" fg:w="174"/><text x="50.3381%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (107 samples, 0.09%)</title><rect x="50.1460%" y="645" width="0.0924%" height="15" fill="rgb(212,201,54)" fg:x="58044" fg:w="107"/><text x="50.3960%" y="655.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (221 samples, 0.19%)</title><rect x="50.0484%" y="773" width="0.1909%" height="15" fill="rgb(218,154,48)" fg:x="57931" fg:w="221"/><text x="50.2984%" y="783.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (197 samples, 0.17%)</title><rect x="50.0691%" y="757" width="0.1702%" height="15" fill="rgb(232,93,24)" fg:x="57955" fg:w="197"/><text x="50.3191%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,224 samples, 2.79%)</title><rect x="47.5222%" y="805" width="2.7853%" height="15" fill="rgb(245,30,21)" fg:x="55007" fg:w="3224"/><text x="47.7722%" y="815.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (2,860 samples, 2.47%)</title><rect x="47.8367%" y="789" width="2.4708%" height="15" fill="rgb(242,148,29)" fg:x="55371" fg:w="2860"/><text x="48.0867%" y="799.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (79 samples, 0.07%)</title><rect x="50.2393%" y="773" width="0.0683%" height="15" fill="rgb(244,153,54)" fg:x="58152" fg:w="79"/><text x="50.4893%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (79 samples, 0.07%)</title><rect x="50.2393%" y="757" width="0.0683%" height="15" fill="rgb(252,87,22)" fg:x="58152" fg:w="79"/><text x="50.4893%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (79 samples, 0.07%)</title><rect x="50.2393%" y="741" width="0.0683%" height="15" fill="rgb(210,51,29)" fg:x="58152" fg:w="79"/><text x="50.4893%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (66 samples, 0.06%)</title><rect x="50.2505%" y="725" width="0.0570%" height="15" fill="rgb(242,136,47)" fg:x="58165" fg:w="66"/><text x="50.5005%" y="735.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (14,951 samples, 12.92%)</title><rect x="37.3970%" y="1109" width="12.9166%" height="15" fill="rgb(238,68,4)" fg:x="43287" fg:w="14951"/><text x="37.6470%" y="1119.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,946 samples, 12.91%)</title><rect x="37.4013%" y="1093" width="12.9123%" height="15" fill="rgb(242,161,30)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="1103.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::run::{{closure}} (14,946 samples, 12.91%)</title><rect x="37.4013%" y="1077" width="12.9123%" height="15" fill="rgb(218,58,44)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="1087.50">async_executor::Exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (14,946 samples, 12.91%)</title><rect x="37.4013%" y="1061" width="12.9123%" height="15" fill="rgb(252,125,32)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="1071.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,946 samples, 12.91%)</title><rect x="37.4013%" y="1045" width="12.9123%" height="15" fill="rgb(219,178,0)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="1055.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (14,946 samples, 12.91%)</title><rect x="37.4013%" y="1029" width="12.9123%" height="15" fill="rgb(213,152,7)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="1039.50">async_executor::Exe..</text></g><g><title>async_task::runnable::Runnable::run (14,946 samples, 12.91%)</title><rect x="37.4013%" y="1013" width="12.9123%" height="15" fill="rgb(249,109,34)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="1023.50">async_task::runnabl..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14,946 samples, 12.91%)</title><rect x="37.4013%" y="997" width="12.9123%" height="15" fill="rgb(232,96,21)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="1007.50">async_task::raw::Ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14,946 samples, 12.91%)</title><rect x="37.4013%" y="981" width="12.9123%" height="15" fill="rgb(228,27,39)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="991.50">&lt;core::pin::Pin&lt;P&gt; ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,946 samples, 12.91%)</title><rect x="37.4013%" y="965" width="12.9123%" height="15" fill="rgb(211,182,52)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="975.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (14,946 samples, 12.91%)</title><rect x="37.4013%" y="949" width="12.9123%" height="15" fill="rgb(234,178,38)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="959.50">async_executor::Exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (14,946 samples, 12.91%)</title><rect x="37.4013%" y="933" width="12.9123%" height="15" fill="rgb(221,111,3)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="943.50">&lt;async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (14,946 samples, 12.91%)</title><rect x="37.4013%" y="917" width="12.9123%" height="15" fill="rgb(228,175,21)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="927.50">async_std::task::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,946 samples, 12.91%)</title><rect x="37.4013%" y="901" width="12.9123%" height="15" fill="rgb(228,174,43)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="911.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,946 samples, 12.91%)</title><rect x="37.4013%" y="885" width="12.9123%" height="15" fill="rgb(211,191,0)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="895.50">std::thread::local:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (14,946 samples, 12.91%)</title><rect x="37.4013%" y="869" width="12.9123%" height="15" fill="rgb(253,117,3)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="879.50">async_std::task::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (14,946 samples, 12.91%)</title><rect x="37.4013%" y="853" width="12.9123%" height="15" fill="rgb(241,127,19)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="863.50">&lt;async_std::task::b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,946 samples, 12.91%)</title><rect x="37.4013%" y="837" width="12.9123%" height="15" fill="rgb(218,103,12)" fg:x="43292" fg:w="14946"/><text x="37.6513%" y="847.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,231 samples, 2.79%)</title><rect x="47.5222%" y="821" width="2.7914%" height="15" fill="rgb(236,214,43)" fg:x="55007" fg:w="3231"/><text x="47.7722%" y="831.50">tr..</text></g><g><title>async_io::driver::block_on (14,961 samples, 12.93%)</title><rect x="37.3952%" y="1125" width="12.9253%" height="15" fill="rgb(244,144,19)" fg:x="43285" fg:w="14961"/><text x="37.6452%" y="1135.50">async_io::driver::b..</text></g><g><title>__memcpy_avx_unaligned_erms (486 samples, 0.42%)</title><rect x="50.3568%" y="853" width="0.4199%" height="15" fill="rgb(246,188,10)" fg:x="58288" fg:w="486"/><text x="50.6068%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (571 samples, 0.49%)</title><rect x="50.8095%" y="837" width="0.4933%" height="15" fill="rgb(212,193,33)" fg:x="58812" fg:w="571"/><text x="51.0595%" y="847.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (49 samples, 0.04%)</title><rect x="51.3028%" y="837" width="0.0423%" height="15" fill="rgb(241,51,29)" fg:x="59383" fg:w="49"/><text x="51.5528%" y="847.50"></text></g><g><title>__entry_text_start (13 samples, 0.01%)</title><rect x="51.4073%" y="709" width="0.0112%" height="15" fill="rgb(211,58,19)" fg:x="59504" fg:w="13"/><text x="51.6573%" y="719.50"></text></g><g><title>_raw_spin_lock (19 samples, 0.02%)</title><rect x="51.4609%" y="629" width="0.0164%" height="15" fill="rgb(229,111,26)" fg:x="59566" fg:w="19"/><text x="51.7109%" y="639.50"></text></g><g><title>futex_wake_mark (32 samples, 0.03%)</title><rect x="51.4842%" y="629" width="0.0276%" height="15" fill="rgb(213,115,40)" fg:x="59593" fg:w="32"/><text x="51.7342%" y="639.50"></text></g><g><title>ttwu_do_activate (16 samples, 0.01%)</title><rect x="51.5568%" y="597" width="0.0138%" height="15" fill="rgb(209,56,44)" fg:x="59677" fg:w="16"/><text x="51.8068%" y="607.50"></text></g><g><title>enqueue_task (16 samples, 0.01%)</title><rect x="51.5568%" y="581" width="0.0138%" height="15" fill="rgb(230,108,32)" fg:x="59677" fg:w="16"/><text x="51.8068%" y="591.50"></text></g><g><title>__smp_call_single_queue (16 samples, 0.01%)</title><rect x="51.5870%" y="581" width="0.0138%" height="15" fill="rgb(216,165,31)" fg:x="59712" fg:w="16"/><text x="51.8370%" y="591.50"></text></g><g><title>llist_add_batch (16 samples, 0.01%)</title><rect x="51.5870%" y="565" width="0.0138%" height="15" fill="rgb(218,122,21)" fg:x="59712" fg:w="16"/><text x="51.8370%" y="575.50"></text></g><g><title>__x2apic_send_IPI_dest (21 samples, 0.02%)</title><rect x="51.6009%" y="581" width="0.0181%" height="15" fill="rgb(223,224,47)" fg:x="59728" fg:w="21"/><text x="51.8509%" y="591.50"></text></g><g><title>native_write_msr (19 samples, 0.02%)</title><rect x="51.6026%" y="565" width="0.0164%" height="15" fill="rgb(238,102,44)" fg:x="59730" fg:w="19"/><text x="51.8526%" y="575.50"></text></g><g><title>ttwu_queue_wakelist (82 samples, 0.07%)</title><rect x="51.5741%" y="597" width="0.0708%" height="15" fill="rgb(236,46,40)" fg:x="59697" fg:w="82"/><text x="51.8241%" y="607.50"></text></g><g><title>x2apic_send_IPI (17 samples, 0.01%)</title><rect x="51.6302%" y="581" width="0.0147%" height="15" fill="rgb(247,202,50)" fg:x="59762" fg:w="17"/><text x="51.8802%" y="591.50"></text></g><g><title>__x64_sys_futex (262 samples, 0.23%)</title><rect x="51.4194%" y="677" width="0.2263%" height="15" fill="rgb(209,99,20)" fg:x="59518" fg:w="262"/><text x="51.6694%" y="687.50"></text></g><g><title>do_futex (256 samples, 0.22%)</title><rect x="51.4246%" y="661" width="0.2212%" height="15" fill="rgb(252,27,34)" fg:x="59524" fg:w="256"/><text x="51.6746%" y="671.50"></text></g><g><title>futex_wake (251 samples, 0.22%)</title><rect x="51.4289%" y="645" width="0.2168%" height="15" fill="rgb(215,206,23)" fg:x="59529" fg:w="251"/><text x="51.6789%" y="655.50"></text></g><g><title>wake_up_q (141 samples, 0.12%)</title><rect x="51.5240%" y="629" width="0.1218%" height="15" fill="rgb(212,135,36)" fg:x="59639" fg:w="141"/><text x="51.7740%" y="639.50"></text></g><g><title>try_to_wake_up (131 samples, 0.11%)</title><rect x="51.5326%" y="613" width="0.1132%" height="15" fill="rgb(240,189,1)" fg:x="59649" fg:w="131"/><text x="51.7826%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (89 samples, 0.08%)</title><rect x="51.6492%" y="677" width="0.0769%" height="15" fill="rgb(242,56,20)" fg:x="59784" fg:w="89"/><text x="51.8992%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (364 samples, 0.31%)</title><rect x="51.4186%" y="709" width="0.3145%" height="15" fill="rgb(247,132,33)" fg:x="59517" fg:w="364"/><text x="51.6686%" y="719.50"></text></g><g><title>do_syscall_64 (364 samples, 0.31%)</title><rect x="51.4186%" y="693" width="0.3145%" height="15" fill="rgb(208,149,11)" fg:x="59517" fg:w="364"/><text x="51.6686%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (449 samples, 0.39%)</title><rect x="51.3495%" y="821" width="0.3879%" height="15" fill="rgb(211,33,11)" fg:x="59437" fg:w="449"/><text x="51.5995%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (446 samples, 0.39%)</title><rect x="51.3521%" y="805" width="0.3853%" height="15" fill="rgb(221,29,38)" fg:x="59440" fg:w="446"/><text x="51.6021%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (446 samples, 0.39%)</title><rect x="51.3521%" y="789" width="0.3853%" height="15" fill="rgb(206,182,49)" fg:x="59440" fg:w="446"/><text x="51.6021%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (445 samples, 0.38%)</title><rect x="51.3529%" y="773" width="0.3844%" height="15" fill="rgb(216,140,1)" fg:x="59441" fg:w="445"/><text x="51.6029%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (445 samples, 0.38%)</title><rect x="51.3529%" y="757" width="0.3844%" height="15" fill="rgb(232,57,40)" fg:x="59441" fg:w="445"/><text x="51.6029%" y="767.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (445 samples, 0.38%)</title><rect x="51.3529%" y="741" width="0.3844%" height="15" fill="rgb(224,186,18)" fg:x="59441" fg:w="445"/><text x="51.6029%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (395 samples, 0.34%)</title><rect x="51.3961%" y="725" width="0.3413%" height="15" fill="rgb(215,121,11)" fg:x="59491" fg:w="395"/><text x="51.6461%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (28 samples, 0.02%)</title><rect x="51.7374%" y="821" width="0.0242%" height="15" fill="rgb(245,147,10)" fg:x="59886" fg:w="28"/><text x="51.9874%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (28 samples, 0.02%)</title><rect x="51.7374%" y="805" width="0.0242%" height="15" fill="rgb(238,153,13)" fg:x="59886" fg:w="28"/><text x="51.9874%" y="815.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.01%)</title><rect x="51.9188%" y="693" width="0.0121%" height="15" fill="rgb(233,108,0)" fg:x="60096" fg:w="14"/><text x="52.1688%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.02%)</title><rect x="51.9188%" y="725" width="0.0190%" height="15" fill="rgb(212,157,17)" fg:x="60096" fg:w="22"/><text x="52.1688%" y="735.50"></text></g><g><title>do_syscall_64 (22 samples, 0.02%)</title><rect x="51.9188%" y="709" width="0.0190%" height="15" fill="rgb(225,213,38)" fg:x="60096" fg:w="22"/><text x="52.1688%" y="719.50"></text></g><g><title>event_listener::Inner::lock (203 samples, 0.18%)</title><rect x="51.7633%" y="821" width="0.1754%" height="15" fill="rgb(248,16,11)" fg:x="59916" fg:w="203"/><text x="52.0133%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (200 samples, 0.17%)</title><rect x="51.7659%" y="805" width="0.1728%" height="15" fill="rgb(241,33,4)" fg:x="59919" fg:w="200"/><text x="52.0159%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (199 samples, 0.17%)</title><rect x="51.7667%" y="789" width="0.1719%" height="15" fill="rgb(222,26,43)" fg:x="59920" fg:w="199"/><text x="52.0167%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (190 samples, 0.16%)</title><rect x="51.7745%" y="773" width="0.1641%" height="15" fill="rgb(243,29,36)" fg:x="59929" fg:w="190"/><text x="52.0245%" y="783.50"></text></g><g><title>___pthread_mutex_lock (190 samples, 0.16%)</title><rect x="51.7745%" y="757" width="0.1641%" height="15" fill="rgb(241,9,27)" fg:x="59929" fg:w="190"/><text x="52.0245%" y="767.50"></text></g><g><title>__GI___lll_lock_wait (24 samples, 0.02%)</title><rect x="51.9179%" y="741" width="0.0207%" height="15" fill="rgb(205,117,26)" fg:x="60095" fg:w="24"/><text x="52.1679%" y="751.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,543 samples, 1.33%)</title><rect x="50.7775%" y="853" width="1.3330%" height="15" fill="rgb(209,80,39)" fg:x="58775" fg:w="1543"/><text x="51.0275%" y="863.50"></text></g><g><title>event_listener::Event::notify (886 samples, 0.77%)</title><rect x="51.3451%" y="837" width="0.7654%" height="15" fill="rgb(239,155,6)" fg:x="59432" fg:w="886"/><text x="51.5951%" y="847.50"></text></g><g><title>event_listener::full_fence (199 samples, 0.17%)</title><rect x="51.9387%" y="821" width="0.1719%" height="15" fill="rgb(212,104,12)" fg:x="60119" fg:w="199"/><text x="52.1887%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (190 samples, 0.16%)</title><rect x="51.9464%" y="805" width="0.1641%" height="15" fill="rgb(234,204,3)" fg:x="60128" fg:w="190"/><text x="52.1964%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (190 samples, 0.16%)</title><rect x="51.9464%" y="789" width="0.1641%" height="15" fill="rgb(251,218,7)" fg:x="60128" fg:w="190"/><text x="52.1964%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,081 samples, 1.80%)</title><rect x="50.3240%" y="933" width="1.7978%" height="15" fill="rgb(221,81,32)" fg:x="58250" fg:w="2081"/><text x="50.5740%" y="943.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,081 samples, 1.80%)</title><rect x="50.3240%" y="917" width="1.7978%" height="15" fill="rgb(214,152,26)" fg:x="58250" fg:w="2081"/><text x="50.5740%" y="927.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,081 samples, 1.80%)</title><rect x="50.3240%" y="901" width="1.7978%" height="15" fill="rgb(223,22,3)" fg:x="58250" fg:w="2081"/><text x="50.5740%" y="911.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,081 samples, 1.80%)</title><rect x="50.3240%" y="885" width="1.7978%" height="15" fill="rgb(207,174,7)" fg:x="58250" fg:w="2081"/><text x="50.5740%" y="895.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,081 samples, 1.80%)</title><rect x="50.3240%" y="869" width="1.7978%" height="15" fill="rgb(224,19,52)" fg:x="58250" fg:w="2081"/><text x="50.5740%" y="879.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.02%)</title><rect x="52.1296%" y="485" width="0.0164%" height="15" fill="rgb(228,24,14)" fg:x="60340" fg:w="19"/><text x="52.3796%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::option::ROption&lt;T&gt; as abi_stable::traits::IntoReprRust&gt;::into_rust (14 samples, 0.01%)</title><rect x="52.1521%" y="437" width="0.0121%" height="15" fill="rgb(230,153,43)" fg:x="60366" fg:w="14"/><text x="52.4021%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14 samples, 0.01%)</title><rect x="52.1521%" y="421" width="0.0121%" height="15" fill="rgb(231,106,12)" fg:x="60366" fg:w="14"/><text x="52.4021%" y="431.50"></text></g><g><title>abi_stable::std_types::option::&lt;impl core::convert::From&lt;abi_stable::std_types::option::ROption&lt;T&gt;&gt; for core::option::Option&lt;T&gt;&gt;::from (14 samples, 0.01%)</title><rect x="52.1521%" y="405" width="0.0121%" height="15" fill="rgb(215,92,2)" fg:x="60366" fg:w="14"/><text x="52.4021%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="52.1806%" y="405" width="0.0112%" height="15" fill="rgb(249,143,25)" fg:x="60399" fg:w="13"/><text x="52.4306%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="52.1806%" y="389" width="0.0112%" height="15" fill="rgb(252,7,35)" fg:x="60399" fg:w="13"/><text x="52.4306%" y="399.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="52.1806%" y="373" width="0.0112%" height="15" fill="rgb(216,69,40)" fg:x="60399" fg:w="13"/><text x="52.4306%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="52.1806%" y="357" width="0.0112%" height="15" fill="rgb(240,36,33)" fg:x="60399" fg:w="13"/><text x="52.4306%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="52.1806%" y="341" width="0.0112%" height="15" fill="rgb(231,128,14)" fg:x="60399" fg:w="13"/><text x="52.4306%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="52.1806%" y="325" width="0.0112%" height="15" fill="rgb(245,143,14)" fg:x="60399" fg:w="13"/><text x="52.4306%" y="335.50"></text></g><g><title>abi_stable::erased_types::iterator::next (27 samples, 0.02%)</title><rect x="52.1702%" y="437" width="0.0233%" height="15" fill="rgb(222,130,28)" fg:x="60387" fg:w="27"/><text x="52.4202%" y="447.50"></text></g><g><title>abi_stable::erased_types::iterator::next::{{closure}} (15 samples, 0.01%)</title><rect x="52.1806%" y="421" width="0.0130%" height="15" fill="rgb(212,10,48)" fg:x="60399" fg:w="15"/><text x="52.4306%" y="431.50"></text></g><g><title>&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.08%)</title><rect x="52.1460%" y="469" width="0.0778%" height="15" fill="rgb(254,118,45)" fg:x="60359" fg:w="90"/><text x="52.3960%" y="479.50"></text></g><g><title>abi_stable::erased_types::dyn_trait::&lt;impl core::iter::traits::iterator::Iterator for abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt;&gt;::next (90 samples, 0.08%)</title><rect x="52.1460%" y="453" width="0.0778%" height="15" fill="rgb(228,6,45)" fg:x="60359" fg:w="90"/><text x="52.3960%" y="463.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::iter (35 samples, 0.03%)</title><rect x="52.1935%" y="437" width="0.0302%" height="15" fill="rgb(241,18,35)" fg:x="60414" fg:w="35"/><text x="52.4435%" y="447.50"></text></g><g><title>abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;::erased_iter (35 samples, 0.03%)</title><rect x="52.1935%" y="421" width="0.0302%" height="15" fill="rgb(227,214,53)" fg:x="60414" fg:w="35"/><text x="52.4435%" y="431.50"></text></g><g><title>abi_stable::erased_types::vtable::_::&lt;impl abi_stable::erased_types::vtable::VTable_Ref&lt;ErasedPtr,I&gt;&gt;::_iter (26 samples, 0.02%)</title><rect x="52.2013%" y="405" width="0.0225%" height="15" fill="rgb(224,107,51)" fg:x="60423" fg:w="26"/><text x="52.4513%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::mem::manually_drop::ManuallyDrop&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="52.2488%" y="341" width="0.0104%" height="15" fill="rgb(248,60,28)" fg:x="60478" fg:w="12"/><text x="52.4988%" y="351.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.01%)</title><rect x="52.2488%" y="325" width="0.0104%" height="15" fill="rgb(249,101,23)" fg:x="60478" fg:w="12"/><text x="52.4988%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="52.2488%" y="309" width="0.0104%" height="15" fill="rgb(228,51,19)" fg:x="60478" fg:w="12"/><text x="52.4988%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="52.2488%" y="293" width="0.0104%" height="15" fill="rgb(213,20,6)" fg:x="60478" fg:w="12"/><text x="52.4988%" y="303.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="52.2488%" y="277" width="0.0104%" height="15" fill="rgb(212,124,10)" fg:x="60478" fg:w="12"/><text x="52.4988%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="52.2488%" y="261" width="0.0104%" height="15" fill="rgb(248,3,40)" fg:x="60478" fg:w="12"/><text x="52.4988%" y="271.50"></text></g><g><title>abi_stable::std_types::boxed::destroy_box (36 samples, 0.03%)</title><rect x="52.2384%" y="357" width="0.0311%" height="15" fill="rgb(223,178,23)" fg:x="60466" fg:w="36"/><text x="52.4884%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="52.2592%" y="341" width="0.0104%" height="15" fill="rgb(240,132,45)" fg:x="60490" fg:w="12"/><text x="52.5092%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (12 samples, 0.01%)</title><rect x="52.2592%" y="325" width="0.0104%" height="15" fill="rgb(245,164,36)" fg:x="60490" fg:w="12"/><text x="52.5092%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;&gt; (12 samples, 0.01%)</title><rect x="52.2592%" y="309" width="0.0104%" height="15" fill="rgb(231,188,53)" fg:x="60490" fg:w="12"/><text x="52.5092%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue)&gt;&gt; (12 samples, 0.01%)</title><rect x="52.2592%" y="293" width="0.0104%" height="15" fill="rgb(237,198,39)" fg:x="60490" fg:w="12"/><text x="52.5092%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="52.2592%" y="277" width="0.0104%" height="15" fill="rgb(223,120,35)" fg:x="60490" fg:w="12"/><text x="52.5092%" y="287.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="52.3136%" y="213" width="0.0121%" height="15" fill="rgb(253,107,49)" fg:x="60553" fg:w="14"/><text x="52.5636%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="52.3136%" y="197" width="0.0121%" height="15" fill="rgb(216,44,31)" fg:x="60553" fg:w="14"/><text x="52.5636%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="52.2963%" y="261" width="0.0389%" height="15" fill="rgb(253,87,21)" fg:x="60533" fg:w="45"/><text x="52.5463%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="52.2963%" y="245" width="0.0389%" height="15" fill="rgb(226,18,2)" fg:x="60533" fg:w="45"/><text x="52.5463%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (45 samples, 0.04%)</title><rect x="52.2963%" y="229" width="0.0389%" height="15" fill="rgb(216,8,46)" fg:x="60533" fg:w="45"/><text x="52.5463%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.05%)</title><rect x="52.2842%" y="293" width="0.0527%" height="15" fill="rgb(226,140,39)" fg:x="60519" fg:w="61"/><text x="52.5342%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.05%)</title><rect x="52.2842%" y="277" width="0.0527%" height="15" fill="rgb(221,194,54)" fg:x="60519" fg:w="61"/><text x="52.5342%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (62 samples, 0.05%)</title><rect x="52.2842%" y="325" width="0.0536%" height="15" fill="rgb(213,92,11)" fg:x="60519" fg:w="62"/><text x="52.5342%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (62 samples, 0.05%)</title><rect x="52.2842%" y="309" width="0.0536%" height="15" fill="rgb(229,162,46)" fg:x="60519" fg:w="62"/><text x="52.5342%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (73 samples, 0.06%)</title><rect x="52.2773%" y="341" width="0.0631%" height="15" fill="rgb(214,111,36)" fg:x="60511" fg:w="73"/><text x="52.5273%" y="351.50"></text></g><g><title>rust_dealloc (89 samples, 0.08%)</title><rect x="52.2695%" y="357" width="0.0769%" height="15" fill="rgb(207,6,21)" fg:x="60502" fg:w="89"/><text x="52.5195%" y="367.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (133 samples, 0.11%)</title><rect x="52.2333%" y="405" width="0.1149%" height="15" fill="rgb(213,127,38)" fg:x="60460" fg:w="133"/><text x="52.4833%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (133 samples, 0.11%)</title><rect x="52.2333%" y="389" width="0.1149%" height="15" fill="rgb(238,118,32)" fg:x="60460" fg:w="133"/><text x="52.4833%" y="399.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (133 samples, 0.11%)</title><rect x="52.2333%" y="373" width="0.1149%" height="15" fill="rgb(240,139,39)" fg:x="60460" fg:w="133"/><text x="52.4833%" y="383.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (263 samples, 0.23%)</title><rect x="52.1218%" y="661" width="0.2272%" height="15" fill="rgb(235,10,37)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (263 samples, 0.23%)</title><rect x="52.1218%" y="645" width="0.2272%" height="15" fill="rgb(249,171,38)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="655.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkEventPayload&gt; for tremor_script::srs::EventPayload&gt;::from (263 samples, 0.23%)</title><rect x="52.1218%" y="629" width="0.2272%" height="15" fill="rgb(242,144,32)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (263 samples, 0.23%)</title><rect x="52.1218%" y="613" width="0.2272%" height="15" fill="rgb(217,117,21)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="623.50"></text></g><g><title>tremor_script::pdk::&lt;impl core::convert::From&lt;tremor_script::pdk::PdkValueAndMeta&gt; for tremor_script::srs::ValueAndMeta&gt;::from (263 samples, 0.23%)</title><rect x="52.1218%" y="597" width="0.2272%" height="15" fill="rgb(249,87,1)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (263 samples, 0.23%)</title><rect x="52.1218%" y="581" width="0.2272%" height="15" fill="rgb(248,196,48)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="591.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (263 samples, 0.23%)</title><rect x="52.1218%" y="565" width="0.2272%" height="15" fill="rgb(251,206,33)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (263 samples, 0.23%)</title><rect x="52.1218%" y="549" width="0.2272%" height="15" fill="rgb(232,141,28)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="559.50"></text></g><g><title>halfbrown::iter::&lt;impl core::iter::traits::collect::FromIterator&lt;(K,V)&gt; for halfbrown::HashMap&lt;K,V,S&gt;&gt;::from_iter (263 samples, 0.23%)</title><rect x="52.1218%" y="533" width="0.2272%" height="15" fill="rgb(209,167,14)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (263 samples, 0.23%)</title><rect x="52.1218%" y="517" width="0.2272%" height="15" fill="rgb(225,11,50)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (263 samples, 0.23%)</title><rect x="52.1218%" y="501" width="0.2272%" height="15" fill="rgb(209,50,20)" fg:x="60331" fg:w="263"/><text x="52.3718%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (235 samples, 0.20%)</title><rect x="52.1460%" y="485" width="0.2030%" height="15" fill="rgb(212,17,46)" fg:x="60359" fg:w="235"/><text x="52.3960%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::map::iterator_stuff::IntoIter&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt; (145 samples, 0.13%)</title><rect x="52.2238%" y="469" width="0.1253%" height="15" fill="rgb(216,101,39)" fg:x="60449" fg:w="145"/><text x="52.4738%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;abi_stable::std_types::boxed::private::RBox&lt;()&gt;,abi_stable::std_types::map::iterator_stuff::ValIterInterface&lt;u32,u32&gt;&gt;&gt; (145 samples, 0.13%)</title><rect x="52.2238%" y="453" width="0.1253%" height="15" fill="rgb(212,228,48)" fg:x="60449" fg:w="145"/><text x="52.4738%" y="463.50"></text></g><g><title>&lt;abi_stable::erased_types::dyn_trait::priv_::DynTrait&lt;P,I,EV&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.13%)</title><rect x="52.2238%" y="437" width="0.1253%" height="15" fill="rgb(250,6,50)" fg:x="60449" fg:w="145"/><text x="52.4738%" y="447.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (138 samples, 0.12%)</title><rect x="52.2298%" y="421" width="0.1192%" height="15" fill="rgb(250,160,48)" fg:x="60456" fg:w="138"/><text x="52.4798%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::empty (33 samples, 0.03%)</title><rect x="52.3749%" y="245" width="0.0285%" height="15" fill="rgb(244,216,33)" fg:x="60624" fg:w="33"/><text x="52.6249%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (33 samples, 0.03%)</title><rect x="52.3749%" y="229" width="0.0285%" height="15" fill="rgb(207,157,5)" fg:x="60624" fg:w="33"/><text x="52.6249%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.21%)</title><rect x="52.3533%" y="293" width="0.2134%" height="15" fill="rgb(228,199,8)" fg:x="60599" fg:w="247"/><text x="52.6033%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (247 samples, 0.21%)</title><rect x="52.3533%" y="277" width="0.2134%" height="15" fill="rgb(227,80,20)" fg:x="60599" fg:w="247"/><text x="52.6033%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (232 samples, 0.20%)</title><rect x="52.3663%" y="261" width="0.2004%" height="15" fill="rgb(222,9,33)" fg:x="60614" fg:w="232"/><text x="52.6163%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::take (189 samples, 0.16%)</title><rect x="52.4035%" y="245" width="0.1633%" height="15" fill="rgb(239,44,28)" fg:x="60657" fg:w="189"/><text x="52.6535%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (189 samples, 0.16%)</title><rect x="52.4035%" y="229" width="0.1633%" height="15" fill="rgb(249,187,43)" fg:x="60657" fg:w="189"/><text x="52.6535%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (259 samples, 0.22%)</title><rect x="52.3490%" y="597" width="0.2238%" height="15" fill="rgb(216,141,28)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="607.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream::{{closure}} (259 samples, 0.22%)</title><rect x="52.3490%" y="581" width="0.2238%" height="15" fill="rgb(230,154,53)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (259 samples, 0.22%)</title><rect x="52.3490%" y="565" width="0.2238%" height="15" fill="rgb(227,82,4)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="575.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::iter::traits::collect::FromIterator&lt;T&gt; for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::from_iter (259 samples, 0.22%)</title><rect x="52.3490%" y="549" width="0.2238%" height="15" fill="rgb(220,107,16)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="559.50"></text></g><g><title>core_extensions::self_ops::SelfOps::piped (259 samples, 0.22%)</title><rect x="52.3490%" y="533" width="0.2238%" height="15" fill="rgb(207,187,2)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (259 samples, 0.22%)</title><rect x="52.3490%" y="517" width="0.2238%" height="15" fill="rgb(210,162,52)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (259 samples, 0.22%)</title><rect x="52.3490%" y="501" width="0.2238%" height="15" fill="rgb(217,216,49)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="511.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (259 samples, 0.22%)</title><rect x="52.3490%" y="485" width="0.2238%" height="15" fill="rgb(218,146,49)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (259 samples, 0.22%)</title><rect x="52.3490%" y="469" width="0.2238%" height="15" fill="rgb(216,55,40)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (259 samples, 0.22%)</title><rect x="52.3490%" y="453" width="0.2238%" height="15" fill="rgb(208,196,21)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (259 samples, 0.22%)</title><rect x="52.3490%" y="437" width="0.2238%" height="15" fill="rgb(242,117,42)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (259 samples, 0.22%)</title><rect x="52.3490%" y="421" width="0.2238%" height="15" fill="rgb(210,11,23)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (259 samples, 0.22%)</title><rect x="52.3490%" y="405" width="0.2238%" height="15" fill="rgb(217,110,2)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (259 samples, 0.22%)</title><rect x="52.3490%" y="389" width="0.2238%" height="15" fill="rgb(229,77,54)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (259 samples, 0.22%)</title><rect x="52.3490%" y="373" width="0.2238%" height="15" fill="rgb(218,53,16)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="383.50"></text></g><g><title>alloc::alloc::alloc (259 samples, 0.22%)</title><rect x="52.3490%" y="357" width="0.2238%" height="15" fill="rgb(215,38,13)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="367.50"></text></g><g><title>__rg_alloc (259 samples, 0.22%)</title><rect x="52.3490%" y="341" width="0.2238%" height="15" fill="rgb(235,42,18)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (259 samples, 0.22%)</title><rect x="52.3490%" y="325" width="0.2238%" height="15" fill="rgb(219,66,54)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="335.50"></text></g><g><title>rust_alloc (259 samples, 0.22%)</title><rect x="52.3490%" y="309" width="0.2238%" height="15" fill="rgb(222,205,4)" fg:x="60594" fg:w="259"/><text x="52.5990%" y="319.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (23 samples, 0.02%)</title><rect x="52.5728%" y="581" width="0.0199%" height="15" fill="rgb(227,213,46)" fg:x="60853" fg:w="23"/><text x="52.8228%" y="591.50"></text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (23 samples, 0.02%)</title><rect x="52.5728%" y="565" width="0.0199%" height="15" fill="rgb(250,145,42)" fg:x="60853" fg:w="23"/><text x="52.8228%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (478 samples, 0.41%)</title><rect x="52.6263%" y="565" width="0.4130%" height="15" fill="rgb(219,15,2)" fg:x="60915" fg:w="478"/><text x="52.8763%" y="575.50"></text></g><g><title>rust_alloc (18 samples, 0.02%)</title><rect x="53.0479%" y="517" width="0.0156%" height="15" fill="rgb(231,181,52)" fg:x="61403" fg:w="18"/><text x="53.2979%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.04%)</title><rect x="53.0773%" y="501" width="0.0449%" height="15" fill="rgb(235,1,42)" fg:x="61437" fg:w="52"/><text x="53.3273%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (52 samples, 0.04%)</title><rect x="53.0773%" y="485" width="0.0449%" height="15" fill="rgb(249,88,27)" fg:x="61437" fg:w="52"/><text x="53.3273%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (44 samples, 0.04%)</title><rect x="53.0842%" y="469" width="0.0380%" height="15" fill="rgb(235,145,16)" fg:x="61445" fg:w="44"/><text x="53.3342%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (38 samples, 0.03%)</title><rect x="53.0894%" y="453" width="0.0328%" height="15" fill="rgb(237,114,19)" fg:x="61451" fg:w="38"/><text x="53.3394%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (38 samples, 0.03%)</title><rect x="53.0894%" y="437" width="0.0328%" height="15" fill="rgb(238,51,50)" fg:x="61451" fg:w="38"/><text x="53.3394%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (38 samples, 0.03%)</title><rect x="53.0894%" y="421" width="0.0328%" height="15" fill="rgb(205,194,25)" fg:x="61451" fg:w="38"/><text x="53.3394%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="53.1222%" y="501" width="0.0181%" height="15" fill="rgb(215,203,17)" fg:x="61489" fg:w="21"/><text x="53.3722%" y="511.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (14 samples, 0.01%)</title><rect x="53.1283%" y="485" width="0.0121%" height="15" fill="rgb(233,112,49)" fg:x="61496" fg:w="14"/><text x="53.3783%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (16 samples, 0.01%)</title><rect x="53.1447%" y="453" width="0.0138%" height="15" fill="rgb(241,130,26)" fg:x="61515" fg:w="16"/><text x="53.3947%" y="463.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (14 samples, 0.01%)</title><rect x="53.1464%" y="437" width="0.0121%" height="15" fill="rgb(252,223,19)" fg:x="61517" fg:w="14"/><text x="53.3964%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (12 samples, 0.01%)</title><rect x="53.1482%" y="421" width="0.0104%" height="15" fill="rgb(211,95,25)" fg:x="61519" fg:w="12"/><text x="53.3982%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (35 samples, 0.03%)</title><rect x="53.1404%" y="501" width="0.0302%" height="15" fill="rgb(251,182,27)" fg:x="61510" fg:w="35"/><text x="53.3904%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="53.1413%" y="485" width="0.0294%" height="15" fill="rgb(238,24,4)" fg:x="61511" fg:w="34"/><text x="53.3913%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="53.1447%" y="469" width="0.0259%" height="15" fill="rgb(224,220,25)" fg:x="61515" fg:w="30"/><text x="53.3947%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="53.1585%" y="453" width="0.0121%" height="15" fill="rgb(239,133,26)" fg:x="61531" fg:w="14"/><text x="53.4085%" y="463.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="53.1594%" y="437" width="0.0112%" height="15" fill="rgb(211,94,48)" fg:x="61532" fg:w="13"/><text x="53.4094%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (44 samples, 0.04%)</title><rect x="53.1706%" y="501" width="0.0380%" height="15" fill="rgb(239,87,6)" fg:x="61545" fg:w="44"/><text x="53.4206%" y="511.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (44 samples, 0.04%)</title><rect x="53.1706%" y="485" width="0.0380%" height="15" fill="rgb(227,62,0)" fg:x="61545" fg:w="44"/><text x="53.4206%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (351 samples, 0.30%)</title><rect x="53.0479%" y="549" width="0.3032%" height="15" fill="rgb(211,226,4)" fg:x="61403" fg:w="351"/><text x="53.2979%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (351 samples, 0.30%)</title><rect x="53.0479%" y="533" width="0.3032%" height="15" fill="rgb(253,38,52)" fg:x="61403" fg:w="351"/><text x="53.2979%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (332 samples, 0.29%)</title><rect x="53.0644%" y="517" width="0.2868%" height="15" fill="rgb(229,126,40)" fg:x="61422" fg:w="332"/><text x="53.3144%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::take (165 samples, 0.14%)</title><rect x="53.2086%" y="501" width="0.1425%" height="15" fill="rgb(229,165,44)" fg:x="61589" fg:w="165"/><text x="53.4586%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (165 samples, 0.14%)</title><rect x="53.2086%" y="485" width="0.1425%" height="15" fill="rgb(247,95,47)" fg:x="61589" fg:w="165"/><text x="53.4586%" y="495.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager::run::{{closure}} (3,510 samples, 3.03%)</title><rect x="50.3240%" y="949" width="3.0324%" height="15" fill="rgb(216,140,30)" fg:x="58250" fg:w="3510"/><text x="50.5740%" y="959.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,429 samples, 1.23%)</title><rect x="52.1218%" y="933" width="1.2346%" height="15" fill="rgb(246,214,8)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="943.50"></text></g><g><title>tremor_runtime::connectors::sink::Sink::on_event::{{closure}} (1,429 samples, 1.23%)</title><rect x="52.1218%" y="917" width="1.2346%" height="15" fill="rgb(227,224,15)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="927.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,429 samples, 1.23%)</title><rect x="52.1218%" y="901" width="1.2346%" height="15" fill="rgb(233,175,4)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="911.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,429 samples, 1.23%)</title><rect x="52.1218%" y="885" width="1.2346%" height="15" fill="rgb(221,66,45)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="895.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (1,429 samples, 1.23%)</title><rect x="52.1218%" y="869" width="1.2346%" height="15" fill="rgb(221,178,18)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="879.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,429 samples, 1.23%)</title><rect x="52.1218%" y="853" width="1.2346%" height="15" fill="rgb(213,81,29)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="863.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (1,429 samples, 1.23%)</title><rect x="52.1218%" y="837" width="1.2346%" height="15" fill="rgb(220,89,49)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1,429 samples, 1.23%)</title><rect x="52.1218%" y="821" width="1.2346%" height="15" fill="rgb(227,60,33)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="831.50"></text></g><g><title>std::panicking::try (1,429 samples, 1.23%)</title><rect x="52.1218%" y="805" width="1.2346%" height="15" fill="rgb(205,113,12)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1,429 samples, 1.23%)</title><rect x="52.1218%" y="789" width="1.2346%" height="15" fill="rgb(211,32,1)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,429 samples, 1.23%)</title><rect x="52.1218%" y="773" width="1.2346%" height="15" fill="rgb(246,2,12)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,429 samples, 1.23%)</title><rect x="52.1218%" y="757" width="1.2346%" height="15" fill="rgb(243,37,27)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="767.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (1,429 samples, 1.23%)</title><rect x="52.1218%" y="741" width="1.2346%" height="15" fill="rgb(248,211,31)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="751.50"></text></g><g><title>async_ffi::FfiContext::with_context (1,429 samples, 1.23%)</title><rect x="52.1218%" y="725" width="1.2346%" height="15" fill="rgb(242,146,47)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="735.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (1,429 samples, 1.23%)</title><rect x="52.1218%" y="709" width="1.2346%" height="15" fill="rgb(206,70,20)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,429 samples, 1.23%)</title><rect x="52.1218%" y="693" width="1.2346%" height="15" fill="rgb(215,10,51)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="703.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::RawSink_trait::RawSink&gt;::on_event::{{closure}} (1,429 samples, 1.23%)</title><rect x="52.1218%" y="677" width="1.2346%" height="15" fill="rgb(243,178,53)" fg:x="60331" fg:w="1429"/><text x="52.3718%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_TO&lt;_ErasedPtr&gt;::serialize (1,166 samples, 1.01%)</title><rect x="52.3490%" y="661" width="1.0073%" height="15" fill="rgb(233,221,20)" fg:x="60594" fg:w="1166"/><text x="52.5990%" y="671.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque_MV&lt;IA,_Self,_ErasedPtr,_OrigPtr&gt;::serialize (1,166 samples, 1.01%)</title><rect x="52.3490%" y="645" width="1.0073%" height="15" fill="rgb(218,95,35)" fg:x="60594" fg:w="1166"/><text x="52.5990%" y="655.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize (1,166 samples, 1.01%)</title><rect x="52.3490%" y="629" width="1.0073%" height="15" fill="rgb(229,13,5)" fg:x="60594" fg:w="1166"/><text x="52.5990%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::EventSerializer as tremor_runtime::connectors::sink::EventSerializerOpaque_trait::EventSerializerOpaque&gt;::serialize_for_stream (1,166 samples, 1.01%)</title><rect x="52.3490%" y="613" width="1.0073%" height="15" fill="rgb(252,164,30)" fg:x="60594" fg:w="1166"/><text x="52.5990%" y="623.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_inner (907 samples, 0.78%)</title><rect x="52.5728%" y="597" width="0.7836%" height="15" fill="rgb(232,68,36)" fg:x="60853" fg:w="907"/><text x="52.8228%" y="607.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (884 samples, 0.76%)</title><rect x="52.5927%" y="581" width="0.7637%" height="15" fill="rgb(219,59,54)" fg:x="60876" fg:w="884"/><text x="52.8427%" y="591.50"></text></g><g><title>rust_alloc (361 samples, 0.31%)</title><rect x="53.0445%" y="565" width="0.3119%" height="15" fill="rgb(250,92,33)" fg:x="61399" fg:w="361"/><text x="53.2945%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.01%)</title><rect x="54.6937%" y="613" width="0.0130%" height="15" fill="rgb(229,162,54)" fg:x="63308" fg:w="15"/><text x="54.9437%" y="623.50"></text></g><g><title>&lt;abi_stable::std_types::vec::private::RVec&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (15 samples, 0.01%)</title><rect x="54.6937%" y="597" width="0.0130%" height="15" fill="rgb(244,114,52)" fg:x="63308" fg:w="15"/><text x="54.9437%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (46 samples, 0.04%)</title><rect x="54.7741%" y="341" width="0.0397%" height="15" fill="rgb(212,211,43)" fg:x="63401" fg:w="46"/><text x="55.0241%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (46 samples, 0.04%)</title><rect x="54.7741%" y="325" width="0.0397%" height="15" fill="rgb(226,147,8)" fg:x="63401" fg:w="46"/><text x="55.0241%" y="335.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (42 samples, 0.04%)</title><rect x="54.7775%" y="309" width="0.0363%" height="15" fill="rgb(226,23,13)" fg:x="63405" fg:w="42"/><text x="55.0275%" y="319.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (29 samples, 0.03%)</title><rect x="54.7888%" y="293" width="0.0251%" height="15" fill="rgb(240,63,4)" fg:x="63418" fg:w="29"/><text x="55.0388%" y="303.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="54.7888%" y="277" width="0.0251%" height="15" fill="rgb(221,1,32)" fg:x="63418" fg:w="29"/><text x="55.0388%" y="287.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (29 samples, 0.03%)</title><rect x="54.7888%" y="261" width="0.0251%" height="15" fill="rgb(242,117,10)" fg:x="63418" fg:w="29"/><text x="55.0388%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (45 samples, 0.04%)</title><rect x="54.8156%" y="341" width="0.0389%" height="15" fill="rgb(249,172,44)" fg:x="63449" fg:w="45"/><text x="55.0656%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (45 samples, 0.04%)</title><rect x="54.8156%" y="325" width="0.0389%" height="15" fill="rgb(244,46,45)" fg:x="63449" fg:w="45"/><text x="55.0656%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (594 samples, 0.51%)</title><rect x="54.7413%" y="389" width="0.5132%" height="15" fill="rgb(206,43,17)" fg:x="63363" fg:w="594"/><text x="54.9913%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (583 samples, 0.50%)</title><rect x="54.7508%" y="373" width="0.5037%" height="15" fill="rgb(239,218,39)" fg:x="63374" fg:w="583"/><text x="55.0008%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (565 samples, 0.49%)</title><rect x="54.7663%" y="357" width="0.4881%" height="15" fill="rgb(208,169,54)" fg:x="63392" fg:w="565"/><text x="55.0163%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (463 samples, 0.40%)</title><rect x="54.8544%" y="341" width="0.4000%" height="15" fill="rgb(247,25,42)" fg:x="63494" fg:w="463"/><text x="55.1044%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (463 samples, 0.40%)</title><rect x="54.8544%" y="325" width="0.4000%" height="15" fill="rgb(226,23,31)" fg:x="63494" fg:w="463"/><text x="55.1044%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (647 samples, 0.56%)</title><rect x="54.7067%" y="533" width="0.5590%" height="15" fill="rgb(247,16,28)" fg:x="63323" fg:w="647"/><text x="54.9567%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (647 samples, 0.56%)</title><rect x="54.7067%" y="517" width="0.5590%" height="15" fill="rgb(231,147,38)" fg:x="63323" fg:w="647"/><text x="54.9567%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (646 samples, 0.56%)</title><rect x="54.7076%" y="501" width="0.5581%" height="15" fill="rgb(253,81,48)" fg:x="63324" fg:w="646"/><text x="54.9576%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (646 samples, 0.56%)</title><rect x="54.7076%" y="485" width="0.5581%" height="15" fill="rgb(249,222,43)" fg:x="63324" fg:w="646"/><text x="54.9576%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (646 samples, 0.56%)</title><rect x="54.7076%" y="469" width="0.5581%" height="15" fill="rgb(221,3,27)" fg:x="63324" fg:w="646"/><text x="54.9576%" y="479.50"></text></g><g><title>alloc::alloc::alloc (637 samples, 0.55%)</title><rect x="54.7153%" y="453" width="0.5503%" height="15" fill="rgb(228,180,5)" fg:x="63333" fg:w="637"/><text x="54.9653%" y="463.50"></text></g><g><title>__rg_alloc (637 samples, 0.55%)</title><rect x="54.7153%" y="437" width="0.5503%" height="15" fill="rgb(227,131,42)" fg:x="63333" fg:w="637"/><text x="54.9653%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (637 samples, 0.55%)</title><rect x="54.7153%" y="421" width="0.5503%" height="15" fill="rgb(212,3,39)" fg:x="63333" fg:w="637"/><text x="54.9653%" y="431.50"></text></g><g><title>rust_alloc (614 samples, 0.53%)</title><rect x="54.7352%" y="405" width="0.5305%" height="15" fill="rgb(226,45,5)" fg:x="63356" fg:w="614"/><text x="54.9852%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="55.2544%" y="389" width="0.0112%" height="15" fill="rgb(215,167,45)" fg:x="63957" fg:w="13"/><text x="55.5044%" y="399.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (751 samples, 0.65%)</title><rect x="54.6600%" y="645" width="0.6488%" height="15" fill="rgb(250,218,53)" fg:x="63269" fg:w="751"/><text x="54.9100%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (734 samples, 0.63%)</title><rect x="54.6747%" y="629" width="0.6341%" height="15" fill="rgb(207,140,0)" fg:x="63286" fg:w="734"/><text x="54.9247%" y="639.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (697 samples, 0.60%)</title><rect x="54.7067%" y="613" width="0.6022%" height="15" fill="rgb(238,133,51)" fg:x="63323" fg:w="697"/><text x="54.9567%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (697 samples, 0.60%)</title><rect x="54.7067%" y="597" width="0.6022%" height="15" fill="rgb(218,203,53)" fg:x="63323" fg:w="697"/><text x="54.9567%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (697 samples, 0.60%)</title><rect x="54.7067%" y="581" width="0.6022%" height="15" fill="rgb(226,184,25)" fg:x="63323" fg:w="697"/><text x="54.9567%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (697 samples, 0.60%)</title><rect x="54.7067%" y="565" width="0.6022%" height="15" fill="rgb(231,121,21)" fg:x="63323" fg:w="697"/><text x="54.9567%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (697 samples, 0.60%)</title><rect x="54.7067%" y="549" width="0.6022%" height="15" fill="rgb(251,14,34)" fg:x="63323" fg:w="697"/><text x="54.9567%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (50 samples, 0.04%)</title><rect x="55.2657%" y="533" width="0.0432%" height="15" fill="rgb(249,193,11)" fg:x="63970" fg:w="50"/><text x="55.5157%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.04%)</title><rect x="55.2657%" y="517" width="0.0432%" height="15" fill="rgb(220,172,37)" fg:x="63970" fg:w="50"/><text x="55.5157%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (50 samples, 0.04%)</title><rect x="55.2657%" y="501" width="0.0432%" height="15" fill="rgb(231,229,43)" fg:x="63970" fg:w="50"/><text x="55.5157%" y="511.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.02%)</title><rect x="55.3192%" y="629" width="0.0207%" height="15" fill="rgb(250,161,5)" fg:x="64032" fg:w="24"/><text x="55.5692%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.08%)</title><rect x="55.3546%" y="293" width="0.0795%" height="15" fill="rgb(218,225,18)" fg:x="64073" fg:w="92"/><text x="55.6046%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.08%)</title><rect x="55.3546%" y="277" width="0.0795%" height="15" fill="rgb(245,45,42)" fg:x="64073" fg:w="92"/><text x="55.6046%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (84 samples, 0.07%)</title><rect x="55.3616%" y="261" width="0.0726%" height="15" fill="rgb(211,115,1)" fg:x="64081" fg:w="84"/><text x="55.6116%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::take (68 samples, 0.06%)</title><rect x="55.3754%" y="245" width="0.0587%" height="15" fill="rgb(248,133,52)" fg:x="64097" fg:w="68"/><text x="55.6254%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (68 samples, 0.06%)</title><rect x="55.3754%" y="229" width="0.0587%" height="15" fill="rgb(238,100,21)" fg:x="64097" fg:w="68"/><text x="55.6254%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (114 samples, 0.10%)</title><rect x="55.3434%" y="437" width="0.0985%" height="15" fill="rgb(247,144,11)" fg:x="64060" fg:w="114"/><text x="55.5934%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (114 samples, 0.10%)</title><rect x="55.3434%" y="421" width="0.0985%" height="15" fill="rgb(206,164,16)" fg:x="64060" fg:w="114"/><text x="55.5934%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (112 samples, 0.10%)</title><rect x="55.3451%" y="405" width="0.0968%" height="15" fill="rgb(222,34,3)" fg:x="64062" fg:w="112"/><text x="55.5951%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 0.10%)</title><rect x="55.3451%" y="389" width="0.0968%" height="15" fill="rgb(248,82,4)" fg:x="64062" fg:w="112"/><text x="55.5951%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 0.10%)</title><rect x="55.3451%" y="373" width="0.0968%" height="15" fill="rgb(228,81,46)" fg:x="64062" fg:w="112"/><text x="55.5951%" y="383.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.10%)</title><rect x="55.3451%" y="357" width="0.0968%" height="15" fill="rgb(227,67,47)" fg:x="64062" fg:w="112"/><text x="55.5951%" y="367.50"></text></g><g><title>__rg_alloc (112 samples, 0.10%)</title><rect x="55.3451%" y="341" width="0.0968%" height="15" fill="rgb(215,93,53)" fg:x="64062" fg:w="112"/><text x="55.5951%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.10%)</title><rect x="55.3451%" y="325" width="0.0968%" height="15" fill="rgb(248,194,39)" fg:x="64062" fg:w="112"/><text x="55.5951%" y="335.50"></text></g><g><title>rust_alloc (108 samples, 0.09%)</title><rect x="55.3486%" y="309" width="0.0933%" height="15" fill="rgb(215,5,19)" fg:x="64066" fg:w="108"/><text x="55.5986%" y="319.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (159 samples, 0.14%)</title><rect x="55.3400%" y="549" width="0.1374%" height="15" fill="rgb(226,215,51)" fg:x="64056" fg:w="159"/><text x="55.5900%" y="559.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (159 samples, 0.14%)</title><rect x="55.3400%" y="533" width="0.1374%" height="15" fill="rgb(225,56,26)" fg:x="64056" fg:w="159"/><text x="55.5900%" y="543.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (155 samples, 0.13%)</title><rect x="55.3434%" y="517" width="0.1339%" height="15" fill="rgb(222,75,29)" fg:x="64060" fg:w="155"/><text x="55.5934%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (155 samples, 0.13%)</title><rect x="55.3434%" y="501" width="0.1339%" height="15" fill="rgb(236,139,6)" fg:x="64060" fg:w="155"/><text x="55.5934%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (155 samples, 0.13%)</title><rect x="55.3434%" y="485" width="0.1339%" height="15" fill="rgb(223,137,36)" fg:x="64060" fg:w="155"/><text x="55.5934%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (155 samples, 0.13%)</title><rect x="55.3434%" y="469" width="0.1339%" height="15" fill="rgb(226,99,2)" fg:x="64060" fg:w="155"/><text x="55.5934%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (155 samples, 0.13%)</title><rect x="55.3434%" y="453" width="0.1339%" height="15" fill="rgb(206,133,23)" fg:x="64060" fg:w="155"/><text x="55.5934%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (41 samples, 0.04%)</title><rect x="55.4419%" y="437" width="0.0354%" height="15" fill="rgb(243,173,15)" fg:x="64174" fg:w="41"/><text x="55.6919%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.03%)</title><rect x="55.4445%" y="421" width="0.0328%" height="15" fill="rgb(228,69,28)" fg:x="64177" fg:w="38"/><text x="55.6945%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30 samples, 0.03%)</title><rect x="55.4514%" y="405" width="0.0259%" height="15" fill="rgb(212,51,22)" fg:x="64185" fg:w="30"/><text x="55.7014%" y="415.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="55.4998%" y="405" width="0.0121%" height="15" fill="rgb(227,113,0)" fg:x="64241" fg:w="14"/><text x="55.7498%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (129 samples, 0.11%)</title><rect x="55.5119%" y="405" width="0.1114%" height="15" fill="rgb(252,84,27)" fg:x="64255" fg:w="129"/><text x="55.7619%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (128 samples, 0.11%)</title><rect x="55.5127%" y="389" width="0.1106%" height="15" fill="rgb(223,145,39)" fg:x="64256" fg:w="128"/><text x="55.7627%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (122 samples, 0.11%)</title><rect x="55.5179%" y="373" width="0.1054%" height="15" fill="rgb(239,219,30)" fg:x="64262" fg:w="122"/><text x="55.7679%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (104 samples, 0.09%)</title><rect x="55.5335%" y="357" width="0.0898%" height="15" fill="rgb(224,196,39)" fg:x="64280" fg:w="104"/><text x="55.7835%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (104 samples, 0.09%)</title><rect x="55.5335%" y="341" width="0.0898%" height="15" fill="rgb(205,35,43)" fg:x="64280" fg:w="104"/><text x="55.7835%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (159 samples, 0.14%)</title><rect x="55.4877%" y="501" width="0.1374%" height="15" fill="rgb(228,201,21)" fg:x="64227" fg:w="159"/><text x="55.7377%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (159 samples, 0.14%)</title><rect x="55.4877%" y="485" width="0.1374%" height="15" fill="rgb(237,118,16)" fg:x="64227" fg:w="159"/><text x="55.7377%" y="495.50"></text></g><g><title>alloc::alloc::alloc (153 samples, 0.13%)</title><rect x="55.4929%" y="469" width="0.1322%" height="15" fill="rgb(241,17,19)" fg:x="64233" fg:w="153"/><text x="55.7429%" y="479.50"></text></g><g><title>__rg_alloc (153 samples, 0.13%)</title><rect x="55.4929%" y="453" width="0.1322%" height="15" fill="rgb(214,10,25)" fg:x="64233" fg:w="153"/><text x="55.7429%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (153 samples, 0.13%)</title><rect x="55.4929%" y="437" width="0.1322%" height="15" fill="rgb(238,37,29)" fg:x="64233" fg:w="153"/><text x="55.7429%" y="447.50"></text></g><g><title>rust_alloc (145 samples, 0.13%)</title><rect x="55.4998%" y="421" width="0.1253%" height="15" fill="rgb(253,83,25)" fg:x="64241" fg:w="145"/><text x="55.7498%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (176 samples, 0.15%)</title><rect x="55.4808%" y="549" width="0.1521%" height="15" fill="rgb(234,192,12)" fg:x="64219" fg:w="176"/><text x="55.7308%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (169 samples, 0.15%)</title><rect x="55.4868%" y="533" width="0.1460%" height="15" fill="rgb(241,216,45)" fg:x="64226" fg:w="169"/><text x="55.7368%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (168 samples, 0.15%)</title><rect x="55.4877%" y="517" width="0.1451%" height="15" fill="rgb(242,22,33)" fg:x="64227" fg:w="168"/><text x="55.7377%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (355 samples, 0.31%)</title><rect x="55.3400%" y="565" width="0.3067%" height="15" fill="rgb(231,105,49)" fg:x="64056" fg:w="355"/><text x="55.5900%" y="575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.01%)</title><rect x="55.6328%" y="549" width="0.0138%" height="15" fill="rgb(218,204,15)" fg:x="64395" fg:w="16"/><text x="55.8828%" y="559.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (410 samples, 0.35%)</title><rect x="55.3089%" y="645" width="0.3542%" height="15" fill="rgb(235,138,41)" fg:x="64020" fg:w="410"/><text x="55.5589%" y="655.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (374 samples, 0.32%)</title><rect x="55.3400%" y="629" width="0.3231%" height="15" fill="rgb(246,0,9)" fg:x="64056" fg:w="374"/><text x="55.5900%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (374 samples, 0.32%)</title><rect x="55.3400%" y="613" width="0.3231%" height="15" fill="rgb(210,74,4)" fg:x="64056" fg:w="374"/><text x="55.5900%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (374 samples, 0.32%)</title><rect x="55.3400%" y="597" width="0.3231%" height="15" fill="rgb(250,60,41)" fg:x="64056" fg:w="374"/><text x="55.5900%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (374 samples, 0.32%)</title><rect x="55.3400%" y="581" width="0.3231%" height="15" fill="rgb(220,115,12)" fg:x="64056" fg:w="374"/><text x="55.5900%" y="591.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (19 samples, 0.02%)</title><rect x="55.6467%" y="565" width="0.0164%" height="15" fill="rgb(237,100,13)" fg:x="64411" fg:w="19"/><text x="55.8967%" y="575.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,622 samples, 1.40%)</title><rect x="54.2635%" y="661" width="1.4013%" height="15" fill="rgb(213,55,26)" fg:x="62810" fg:w="1622"/><text x="54.5135%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (56 samples, 0.05%)</title><rect x="55.7477%" y="629" width="0.0484%" height="15" fill="rgb(216,17,4)" fg:x="64528" fg:w="56"/><text x="55.9977%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (28 samples, 0.02%)</title><rect x="55.7719%" y="613" width="0.0242%" height="15" fill="rgb(220,153,47)" fg:x="64556" fg:w="28"/><text x="56.0219%" y="623.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="55.8177%" y="437" width="0.0121%" height="15" fill="rgb(215,131,9)" fg:x="64609" fg:w="14"/><text x="56.0677%" y="447.50"></text></g><g><title>rust_alloc (46 samples, 0.04%)</title><rect x="55.8298%" y="405" width="0.0397%" height="15" fill="rgb(233,46,42)" fg:x="64623" fg:w="46"/><text x="56.0798%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="55.9058%" y="277" width="0.0112%" height="15" fill="rgb(226,86,7)" fg:x="64711" fg:w="13"/><text x="56.1558%" y="287.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="55.9058%" y="261" width="0.0112%" height="15" fill="rgb(239,226,21)" fg:x="64711" fg:w="13"/><text x="56.1558%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (35 samples, 0.03%)</title><rect x="55.8998%" y="325" width="0.0302%" height="15" fill="rgb(244,137,22)" fg:x="64704" fg:w="35"/><text x="56.1498%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (35 samples, 0.03%)</title><rect x="55.8998%" y="309" width="0.0302%" height="15" fill="rgb(211,139,35)" fg:x="64704" fg:w="35"/><text x="56.1498%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (32 samples, 0.03%)</title><rect x="55.9024%" y="293" width="0.0276%" height="15" fill="rgb(214,62,50)" fg:x="64707" fg:w="32"/><text x="56.1524%" y="303.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="55.9171%" y="277" width="0.0130%" height="15" fill="rgb(212,113,44)" fg:x="64724" fg:w="15"/><text x="56.1671%" y="287.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="55.9171%" y="261" width="0.0130%" height="15" fill="rgb(226,150,43)" fg:x="64724" fg:w="15"/><text x="56.1671%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (44 samples, 0.04%)</title><rect x="55.8998%" y="341" width="0.0380%" height="15" fill="rgb(250,71,37)" fg:x="64704" fg:w="44"/><text x="56.1498%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (75 samples, 0.06%)</title><rect x="55.8851%" y="357" width="0.0648%" height="15" fill="rgb(219,76,19)" fg:x="64687" fg:w="75"/><text x="56.1351%" y="367.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="55.9395%" y="341" width="0.0104%" height="15" fill="rgb(250,39,11)" fg:x="64750" fg:w="12"/><text x="56.1895%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="55.9395%" y="325" width="0.0104%" height="15" fill="rgb(230,64,31)" fg:x="64750" fg:w="12"/><text x="56.1895%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="55.9395%" y="309" width="0.0104%" height="15" fill="rgb(208,222,23)" fg:x="64750" fg:w="12"/><text x="56.1895%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="55.9395%" y="293" width="0.0104%" height="15" fill="rgb(227,125,18)" fg:x="64750" fg:w="12"/><text x="56.1895%" y="303.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (57 samples, 0.05%)</title><rect x="55.9775%" y="341" width="0.0492%" height="15" fill="rgb(234,210,9)" fg:x="64794" fg:w="57"/><text x="56.2275%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (480 samples, 0.41%)</title><rect x="55.8851%" y="389" width="0.4147%" height="15" fill="rgb(217,127,24)" fg:x="64687" fg:w="480"/><text x="56.1351%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (480 samples, 0.41%)</title><rect x="55.8851%" y="373" width="0.4147%" height="15" fill="rgb(239,141,48)" fg:x="64687" fg:w="480"/><text x="56.1351%" y="383.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (405 samples, 0.35%)</title><rect x="55.9499%" y="357" width="0.3499%" height="15" fill="rgb(227,109,8)" fg:x="64762" fg:w="405"/><text x="56.1999%" y="367.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (316 samples, 0.27%)</title><rect x="56.0268%" y="341" width="0.2730%" height="15" fill="rgb(235,184,23)" fg:x="64851" fg:w="316"/><text x="56.2768%" y="351.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (316 samples, 0.27%)</title><rect x="56.0268%" y="325" width="0.2730%" height="15" fill="rgb(227,226,48)" fg:x="64851" fg:w="316"/><text x="56.2768%" y="335.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (316 samples, 0.27%)</title><rect x="56.0268%" y="309" width="0.2730%" height="15" fill="rgb(206,150,11)" fg:x="64851" fg:w="316"/><text x="56.2768%" y="319.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (13 samples, 0.01%)</title><rect x="56.2998%" y="373" width="0.0112%" height="15" fill="rgb(254,2,33)" fg:x="65167" fg:w="13"/><text x="56.5498%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (13 samples, 0.01%)</title><rect x="56.3179%" y="357" width="0.0112%" height="15" fill="rgb(243,160,20)" fg:x="65188" fg:w="13"/><text x="56.5679%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (13 samples, 0.01%)</title><rect x="56.3179%" y="341" width="0.0112%" height="15" fill="rgb(218,208,30)" fg:x="65188" fg:w="13"/><text x="56.5679%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="56.2998%" y="389" width="0.0320%" height="15" fill="rgb(224,120,49)" fg:x="65167" fg:w="37"/><text x="56.5498%" y="399.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (24 samples, 0.02%)</title><rect x="56.3110%" y="373" width="0.0207%" height="15" fill="rgb(246,12,2)" fg:x="65180" fg:w="24"/><text x="56.5610%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (29 samples, 0.03%)</title><rect x="56.3404%" y="341" width="0.0251%" height="15" fill="rgb(236,117,3)" fg:x="65214" fg:w="29"/><text x="56.5904%" y="351.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (23 samples, 0.02%)</title><rect x="56.3456%" y="325" width="0.0199%" height="15" fill="rgb(216,128,52)" fg:x="65220" fg:w="23"/><text x="56.5956%" y="335.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (18 samples, 0.02%)</title><rect x="56.3499%" y="309" width="0.0156%" height="15" fill="rgb(246,145,19)" fg:x="65225" fg:w="18"/><text x="56.5999%" y="319.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="56.3758%" y="309" width="0.0121%" height="15" fill="rgb(222,11,46)" fg:x="65255" fg:w="14"/><text x="56.6258%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="56.3758%" y="293" width="0.0121%" height="15" fill="rgb(245,82,36)" fg:x="65255" fg:w="14"/><text x="56.6258%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="56.3378%" y="357" width="0.0562%" height="15" fill="rgb(250,73,51)" fg:x="65211" fg:w="65"/><text x="56.5878%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="56.3654%" y="341" width="0.0285%" height="15" fill="rgb(221,189,23)" fg:x="65243" fg:w="33"/><text x="56.6154%" y="351.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (31 samples, 0.03%)</title><rect x="56.3672%" y="325" width="0.0268%" height="15" fill="rgb(210,33,7)" fg:x="65245" fg:w="31"/><text x="56.6172%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.06%)</title><rect x="56.3317%" y="389" width="0.0631%" height="15" fill="rgb(210,107,22)" fg:x="65204" fg:w="73"/><text x="56.5817%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (70 samples, 0.06%)</title><rect x="56.3343%" y="373" width="0.0605%" height="15" fill="rgb(222,116,37)" fg:x="65207" fg:w="70"/><text x="56.5843%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::empty (40 samples, 0.03%)</title><rect x="56.3948%" y="389" width="0.0346%" height="15" fill="rgb(254,17,48)" fg:x="65277" fg:w="40"/><text x="56.6448%" y="399.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (40 samples, 0.03%)</title><rect x="56.3948%" y="373" width="0.0346%" height="15" fill="rgb(224,36,32)" fg:x="65277" fg:w="40"/><text x="56.6448%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (923 samples, 0.80%)</title><rect x="55.7961%" y="581" width="0.7974%" height="15" fill="rgb(232,90,46)" fg:x="64584" fg:w="923"/><text x="56.0461%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (923 samples, 0.80%)</title><rect x="55.7961%" y="565" width="0.7974%" height="15" fill="rgb(241,66,40)" fg:x="64584" fg:w="923"/><text x="56.0461%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (921 samples, 0.80%)</title><rect x="55.7978%" y="549" width="0.7957%" height="15" fill="rgb(249,184,29)" fg:x="64586" fg:w="921"/><text x="56.0478%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (921 samples, 0.80%)</title><rect x="55.7978%" y="533" width="0.7957%" height="15" fill="rgb(231,181,1)" fg:x="64586" fg:w="921"/><text x="56.0478%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (915 samples, 0.79%)</title><rect x="55.8030%" y="517" width="0.7905%" height="15" fill="rgb(224,94,2)" fg:x="64592" fg:w="915"/><text x="56.0530%" y="527.50"></text></g><g><title>alloc::alloc::alloc (914 samples, 0.79%)</title><rect x="55.8039%" y="501" width="0.7896%" height="15" fill="rgb(229,170,15)" fg:x="64593" fg:w="914"/><text x="56.0539%" y="511.50"></text></g><g><title>__rg_alloc (914 samples, 0.79%)</title><rect x="55.8039%" y="485" width="0.7896%" height="15" fill="rgb(240,127,35)" fg:x="64593" fg:w="914"/><text x="56.0539%" y="495.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (907 samples, 0.78%)</title><rect x="55.8099%" y="469" width="0.7836%" height="15" fill="rgb(248,196,34)" fg:x="64600" fg:w="907"/><text x="56.0599%" y="479.50"></text></g><g><title>rust_alloc (898 samples, 0.78%)</title><rect x="55.8177%" y="453" width="0.7758%" height="15" fill="rgb(236,137,7)" fg:x="64609" fg:w="898"/><text x="56.0677%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (884 samples, 0.76%)</title><rect x="55.8298%" y="437" width="0.7637%" height="15" fill="rgb(235,127,16)" fg:x="64623" fg:w="884"/><text x="56.0798%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (884 samples, 0.76%)</title><rect x="55.8298%" y="421" width="0.7637%" height="15" fill="rgb(250,192,54)" fg:x="64623" fg:w="884"/><text x="56.0798%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (834 samples, 0.72%)</title><rect x="55.8730%" y="405" width="0.7205%" height="15" fill="rgb(218,98,20)" fg:x="64673" fg:w="834"/><text x="56.1230%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::take (190 samples, 0.16%)</title><rect x="56.4294%" y="389" width="0.1641%" height="15" fill="rgb(230,176,47)" fg:x="65317" fg:w="190"/><text x="56.6794%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (190 samples, 0.16%)</title><rect x="56.4294%" y="373" width="0.1641%" height="15" fill="rgb(244,2,33)" fg:x="65317" fg:w="190"/><text x="56.6794%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,310 samples, 1.13%)</title><rect x="55.7961%" y="597" width="1.1317%" height="15" fill="rgb(231,100,17)" fg:x="64584" fg:w="1310"/><text x="56.0461%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (387 samples, 0.33%)</title><rect x="56.5935%" y="581" width="0.3343%" height="15" fill="rgb(245,23,12)" fg:x="65507" fg:w="387"/><text x="56.8435%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (387 samples, 0.33%)</title><rect x="56.5935%" y="565" width="0.3343%" height="15" fill="rgb(249,55,22)" fg:x="65507" fg:w="387"/><text x="56.8435%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (385 samples, 0.33%)</title><rect x="56.5952%" y="549" width="0.3326%" height="15" fill="rgb(207,134,9)" fg:x="65509" fg:w="385"/><text x="56.8452%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,374 samples, 1.19%)</title><rect x="55.7477%" y="645" width="1.1870%" height="15" fill="rgb(218,134,0)" fg:x="64528" fg:w="1374"/><text x="55.9977%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,318 samples, 1.14%)</title><rect x="55.7961%" y="629" width="1.1387%" height="15" fill="rgb(213,212,33)" fg:x="64584" fg:w="1318"/><text x="56.0461%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,318 samples, 1.14%)</title><rect x="55.7961%" y="613" width="1.1387%" height="15" fill="rgb(252,106,18)" fg:x="64584" fg:w="1318"/><text x="56.0461%" y="623.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::RawSource_trait::RawSource&gt;::pull_data::{{closure}} (4,074 samples, 3.52%)</title><rect x="53.4212%" y="677" width="3.5197%" height="15" fill="rgb(208,126,42)" fg:x="61835" fg:w="4074"/><text x="53.6712%" y="687.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,475 samples, 1.27%)</title><rect x="55.6665%" y="661" width="1.2743%" height="15" fill="rgb(246,175,29)" fg:x="64434" fg:w="1475"/><text x="55.9165%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (4,150 samples, 3.59%)</title><rect x="53.3564%" y="917" width="3.5853%" height="15" fill="rgb(215,13,50)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="927.50">trem..</text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,150 samples, 3.59%)</title><rect x="53.3564%" y="901" width="3.5853%" height="15" fill="rgb(216,172,15)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="911.50">&lt;asy..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,150 samples, 3.59%)</title><rect x="53.3564%" y="885" width="3.5853%" height="15" fill="rgb(212,103,13)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="895.50">&lt;asy..</text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (4,150 samples, 3.59%)</title><rect x="53.3564%" y="869" width="3.5853%" height="15" fill="rgb(231,171,36)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="879.50">&lt;cor..</text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,150 samples, 3.59%)</title><rect x="53.3564%" y="853" width="3.5853%" height="15" fill="rgb(250,123,20)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="863.50">&lt;asy..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (4,150 samples, 3.59%)</title><rect x="53.3564%" y="837" width="3.5853%" height="15" fill="rgb(212,53,50)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="847.50">asyn..</text></g><g><title>std::panic::catch_unwind (4,150 samples, 3.59%)</title><rect x="53.3564%" y="821" width="3.5853%" height="15" fill="rgb(243,54,12)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="831.50">std:..</text></g><g><title>std::panicking::try (4,150 samples, 3.59%)</title><rect x="53.3564%" y="805" width="3.5853%" height="15" fill="rgb(234,101,34)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="815.50">std:..</text></g><g><title>std::panicking::try::do_call (4,150 samples, 3.59%)</title><rect x="53.3564%" y="789" width="3.5853%" height="15" fill="rgb(254,67,22)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="799.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,150 samples, 3.59%)</title><rect x="53.3564%" y="773" width="3.5853%" height="15" fill="rgb(250,35,47)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="783.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (4,150 samples, 3.59%)</title><rect x="53.3564%" y="757" width="3.5853%" height="15" fill="rgb(226,126,38)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="767.50">core..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (4,150 samples, 3.59%)</title><rect x="53.3564%" y="741" width="3.5853%" height="15" fill="rgb(216,138,53)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="751.50">asyn..</text></g><g><title>async_ffi::FfiContext::with_context (4,150 samples, 3.59%)</title><rect x="53.3564%" y="725" width="3.5853%" height="15" fill="rgb(246,199,43)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="735.50">asyn..</text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (4,150 samples, 3.59%)</title><rect x="53.3564%" y="709" width="3.5853%" height="15" fill="rgb(232,125,11)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="719.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,150 samples, 3.59%)</title><rect x="53.3564%" y="693" width="3.5853%" height="15" fill="rgb(218,219,45)" fg:x="61760" fg:w="4150"/><text x="53.6064%" y="703.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="56.9521%" y="885" width="0.0233%" height="15" fill="rgb(216,102,54)" fg:x="65922" fg:w="27"/><text x="57.2021%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (528 samples, 0.46%)</title><rect x="57.1689%" y="869" width="0.4562%" height="15" fill="rgb(250,228,7)" fg:x="66173" fg:w="528"/><text x="57.4189%" y="879.50"></text></g><g><title>core::ptr::read (498 samples, 0.43%)</title><rect x="57.1948%" y="853" width="0.4302%" height="15" fill="rgb(226,125,25)" fg:x="66203" fg:w="498"/><text x="57.4448%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (481 samples, 0.42%)</title><rect x="57.2095%" y="837" width="0.4156%" height="15" fill="rgb(224,165,27)" fg:x="66220" fg:w="481"/><text x="57.4595%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="57.6251%" y="869" width="0.0233%" height="15" fill="rgb(233,86,3)" fg:x="66701" fg:w="27"/><text x="57.8751%" y="879.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="57.6700%" y="565" width="0.0130%" height="15" fill="rgb(228,116,20)" fg:x="66753" fg:w="15"/><text x="57.9200%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.02%)</title><rect x="57.6890%" y="549" width="0.0233%" height="15" fill="rgb(209,192,17)" fg:x="66775" fg:w="27"/><text x="57.9390%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (27 samples, 0.02%)</title><rect x="57.6890%" y="533" width="0.0233%" height="15" fill="rgb(224,88,34)" fg:x="66775" fg:w="27"/><text x="57.9390%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (22 samples, 0.02%)</title><rect x="57.6933%" y="517" width="0.0190%" height="15" fill="rgb(233,38,6)" fg:x="66780" fg:w="22"/><text x="57.9433%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (16 samples, 0.01%)</title><rect x="57.6985%" y="501" width="0.0138%" height="15" fill="rgb(212,59,30)" fg:x="66786" fg:w="16"/><text x="57.9485%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (16 samples, 0.01%)</title><rect x="57.6985%" y="485" width="0.0138%" height="15" fill="rgb(213,80,3)" fg:x="66786" fg:w="16"/><text x="57.9485%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (16 samples, 0.01%)</title><rect x="57.6985%" y="469" width="0.0138%" height="15" fill="rgb(251,178,7)" fg:x="66786" fg:w="16"/><text x="57.9485%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (29 samples, 0.03%)</title><rect x="57.7166%" y="549" width="0.0251%" height="15" fill="rgb(213,154,26)" fg:x="66807" fg:w="29"/><text x="57.9666%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (29 samples, 0.03%)</title><rect x="57.7166%" y="533" width="0.0251%" height="15" fill="rgb(238,165,49)" fg:x="66807" fg:w="29"/><text x="57.9666%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (299 samples, 0.26%)</title><rect x="57.6691%" y="597" width="0.2583%" height="15" fill="rgb(248,91,46)" fg:x="66752" fg:w="299"/><text x="57.9191%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (298 samples, 0.26%)</title><rect x="57.6700%" y="581" width="0.2575%" height="15" fill="rgb(244,21,52)" fg:x="66753" fg:w="298"/><text x="57.9200%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (279 samples, 0.24%)</title><rect x="57.6864%" y="565" width="0.2410%" height="15" fill="rgb(247,122,20)" fg:x="66772" fg:w="279"/><text x="57.9364%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (215 samples, 0.19%)</title><rect x="57.7417%" y="549" width="0.1857%" height="15" fill="rgb(218,27,9)" fg:x="66836" fg:w="215"/><text x="57.9917%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (215 samples, 0.19%)</title><rect x="57.7417%" y="533" width="0.1857%" height="15" fill="rgb(246,7,6)" fg:x="66836" fg:w="215"/><text x="57.9917%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (331 samples, 0.29%)</title><rect x="57.6510%" y="741" width="0.2860%" height="15" fill="rgb(227,135,54)" fg:x="66731" fg:w="331"/><text x="57.9010%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (331 samples, 0.29%)</title><rect x="57.6510%" y="725" width="0.2860%" height="15" fill="rgb(247,14,11)" fg:x="66731" fg:w="331"/><text x="57.9010%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (325 samples, 0.28%)</title><rect x="57.6562%" y="709" width="0.2808%" height="15" fill="rgb(206,149,34)" fg:x="66737" fg:w="325"/><text x="57.9062%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (325 samples, 0.28%)</title><rect x="57.6562%" y="693" width="0.2808%" height="15" fill="rgb(227,228,4)" fg:x="66737" fg:w="325"/><text x="57.9062%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (325 samples, 0.28%)</title><rect x="57.6562%" y="677" width="0.2808%" height="15" fill="rgb(238,218,28)" fg:x="66737" fg:w="325"/><text x="57.9062%" y="687.50"></text></g><g><title>alloc::alloc::alloc (317 samples, 0.27%)</title><rect x="57.6631%" y="661" width="0.2739%" height="15" fill="rgb(252,86,40)" fg:x="66745" fg:w="317"/><text x="57.9131%" y="671.50"></text></g><g><title>__rg_alloc (317 samples, 0.27%)</title><rect x="57.6631%" y="645" width="0.2739%" height="15" fill="rgb(251,225,11)" fg:x="66745" fg:w="317"/><text x="57.9131%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (317 samples, 0.27%)</title><rect x="57.6631%" y="629" width="0.2739%" height="15" fill="rgb(206,46,49)" fg:x="66745" fg:w="317"/><text x="57.9131%" y="639.50"></text></g><g><title>rust_alloc (315 samples, 0.27%)</title><rect x="57.6648%" y="613" width="0.2721%" height="15" fill="rgb(245,128,24)" fg:x="66747" fg:w="315"/><text x="57.9148%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (371 samples, 0.32%)</title><rect x="57.6510%" y="869" width="0.3205%" height="15" fill="rgb(219,177,34)" fg:x="66731" fg:w="371"/><text x="57.9010%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (371 samples, 0.32%)</title><rect x="57.6510%" y="853" width="0.3205%" height="15" fill="rgb(218,60,48)" fg:x="66731" fg:w="371"/><text x="57.9010%" y="863.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (371 samples, 0.32%)</title><rect x="57.6510%" y="837" width="0.3205%" height="15" fill="rgb(221,11,5)" fg:x="66731" fg:w="371"/><text x="57.9010%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (371 samples, 0.32%)</title><rect x="57.6510%" y="821" width="0.3205%" height="15" fill="rgb(220,148,13)" fg:x="66731" fg:w="371"/><text x="57.9010%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (371 samples, 0.32%)</title><rect x="57.6510%" y="805" width="0.3205%" height="15" fill="rgb(210,16,3)" fg:x="66731" fg:w="371"/><text x="57.9010%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (371 samples, 0.32%)</title><rect x="57.6510%" y="789" width="0.3205%" height="15" fill="rgb(236,80,2)" fg:x="66731" fg:w="371"/><text x="57.9010%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (371 samples, 0.32%)</title><rect x="57.6510%" y="773" width="0.3205%" height="15" fill="rgb(239,129,19)" fg:x="66731" fg:w="371"/><text x="57.9010%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (371 samples, 0.32%)</title><rect x="57.6510%" y="757" width="0.3205%" height="15" fill="rgb(220,106,35)" fg:x="66731" fg:w="371"/><text x="57.9010%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (40 samples, 0.03%)</title><rect x="57.9369%" y="741" width="0.0346%" height="15" fill="rgb(252,139,45)" fg:x="67062" fg:w="40"/><text x="58.1869%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.03%)</title><rect x="57.9369%" y="725" width="0.0346%" height="15" fill="rgb(229,8,36)" fg:x="67062" fg:w="40"/><text x="58.1869%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.03%)</title><rect x="57.9464%" y="709" width="0.0251%" height="15" fill="rgb(230,126,33)" fg:x="67073" fg:w="29"/><text x="58.1964%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (616 samples, 0.53%)</title><rect x="57.9715%" y="869" width="0.5322%" height="15" fill="rgb(239,140,21)" fg:x="67102" fg:w="616"/><text x="58.2215%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (254 samples, 0.22%)</title><rect x="58.5210%" y="853" width="0.2194%" height="15" fill="rgb(254,104,9)" fg:x="67738" fg:w="254"/><text x="58.7710%" y="863.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (17 samples, 0.01%)</title><rect x="58.7940%" y="581" width="0.0147%" height="15" fill="rgb(239,52,14)" fg:x="68054" fg:w="17"/><text x="59.0440%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="58.7948%" y="565" width="0.0138%" height="15" fill="rgb(208,227,44)" fg:x="68055" fg:w="16"/><text x="59.0448%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (38 samples, 0.03%)</title><rect x="58.7905%" y="629" width="0.0328%" height="15" fill="rgb(246,18,19)" fg:x="68050" fg:w="38"/><text x="59.0405%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (38 samples, 0.03%)</title><rect x="58.7905%" y="613" width="0.0328%" height="15" fill="rgb(235,228,25)" fg:x="68050" fg:w="38"/><text x="59.0405%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.03%)</title><rect x="58.7905%" y="597" width="0.0328%" height="15" fill="rgb(240,156,20)" fg:x="68050" fg:w="38"/><text x="59.0405%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.01%)</title><rect x="58.8086%" y="581" width="0.0147%" height="15" fill="rgb(224,8,20)" fg:x="68071" fg:w="17"/><text x="59.0586%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.01%)</title><rect x="58.8086%" y="565" width="0.0147%" height="15" fill="rgb(214,12,52)" fg:x="68071" fg:w="17"/><text x="59.0586%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (54 samples, 0.05%)</title><rect x="58.7879%" y="645" width="0.0467%" height="15" fill="rgb(211,220,47)" fg:x="68047" fg:w="54"/><text x="59.0379%" y="655.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="58.8233%" y="629" width="0.0112%" height="15" fill="rgb(250,173,5)" fg:x="68088" fg:w="13"/><text x="59.0733%" y="639.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="58.8233%" y="613" width="0.0112%" height="15" fill="rgb(250,125,52)" fg:x="68088" fg:w="13"/><text x="59.0733%" y="623.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="58.8233%" y="597" width="0.0112%" height="15" fill="rgb(209,133,18)" fg:x="68088" fg:w="13"/><text x="59.0733%" y="607.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="58.8233%" y="581" width="0.0112%" height="15" fill="rgb(216,173,22)" fg:x="68088" fg:w="13"/><text x="59.0733%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (98 samples, 0.08%)</title><rect x="58.7741%" y="661" width="0.0847%" height="15" fill="rgb(205,3,22)" fg:x="68031" fg:w="98"/><text x="59.0241%" y="671.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (23 samples, 0.02%)</title><rect x="58.8389%" y="645" width="0.0199%" height="15" fill="rgb(248,22,20)" fg:x="68106" fg:w="23"/><text x="59.0889%" y="655.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (23 samples, 0.02%)</title><rect x="58.8389%" y="629" width="0.0199%" height="15" fill="rgb(233,6,29)" fg:x="68106" fg:w="23"/><text x="59.0889%" y="639.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (23 samples, 0.02%)</title><rect x="58.8389%" y="613" width="0.0199%" height="15" fill="rgb(240,22,54)" fg:x="68106" fg:w="23"/><text x="59.0889%" y="623.50"></text></g><g><title>snmalloc::bits::align_down (23 samples, 0.02%)</title><rect x="58.8389%" y="597" width="0.0199%" height="15" fill="rgb(231,133,32)" fg:x="68106" fg:w="23"/><text x="59.0889%" y="607.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (68 samples, 0.06%)</title><rect x="58.8933%" y="645" width="0.0587%" height="15" fill="rgb(248,193,4)" fg:x="68169" fg:w="68"/><text x="59.1433%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (529 samples, 0.46%)</title><rect x="58.7724%" y="693" width="0.4570%" height="15" fill="rgb(211,178,46)" fg:x="68029" fg:w="529"/><text x="59.0224%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (529 samples, 0.46%)</title><rect x="58.7724%" y="677" width="0.4570%" height="15" fill="rgb(224,5,42)" fg:x="68029" fg:w="529"/><text x="59.0224%" y="687.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (429 samples, 0.37%)</title><rect x="58.8587%" y="661" width="0.3706%" height="15" fill="rgb(239,176,25)" fg:x="68129" fg:w="429"/><text x="59.1087%" y="671.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (321 samples, 0.28%)</title><rect x="58.9521%" y="645" width="0.2773%" height="15" fill="rgb(245,187,50)" fg:x="68237" fg:w="321"/><text x="59.2021%" y="655.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (321 samples, 0.28%)</title><rect x="58.9521%" y="629" width="0.2773%" height="15" fill="rgb(248,24,15)" fg:x="68237" fg:w="321"/><text x="59.2021%" y="639.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (321 samples, 0.28%)</title><rect x="58.9521%" y="613" width="0.2773%" height="15" fill="rgb(205,166,13)" fg:x="68237" fg:w="321"/><text x="59.2021%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::take (34 samples, 0.03%)</title><rect x="59.2458%" y="661" width="0.0294%" height="15" fill="rgb(208,114,23)" fg:x="68577" fg:w="34"/><text x="59.4958%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (34 samples, 0.03%)</title><rect x="59.2458%" y="645" width="0.0294%" height="15" fill="rgb(239,127,18)" fg:x="68577" fg:w="34"/><text x="59.4958%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (62 samples, 0.05%)</title><rect x="59.2294%" y="693" width="0.0536%" height="15" fill="rgb(219,154,28)" fg:x="68558" fg:w="62"/><text x="59.4794%" y="703.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (55 samples, 0.05%)</title><rect x="59.2354%" y="677" width="0.0475%" height="15" fill="rgb(225,157,23)" fg:x="68565" fg:w="55"/><text x="59.4854%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (858 samples, 0.74%)</title><rect x="58.7533%" y="741" width="0.7413%" height="15" fill="rgb(219,8,6)" fg:x="68007" fg:w="858"/><text x="59.0033%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (858 samples, 0.74%)</title><rect x="58.7533%" y="725" width="0.7413%" height="15" fill="rgb(212,47,6)" fg:x="68007" fg:w="858"/><text x="59.0033%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (847 samples, 0.73%)</title><rect x="58.7629%" y="709" width="0.7317%" height="15" fill="rgb(224,190,4)" fg:x="68018" fg:w="847"/><text x="59.0129%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::take (231 samples, 0.20%)</title><rect x="59.2950%" y="693" width="0.1996%" height="15" fill="rgb(239,183,29)" fg:x="68634" fg:w="231"/><text x="59.5450%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (231 samples, 0.20%)</title><rect x="59.2950%" y="677" width="0.1996%" height="15" fill="rgb(213,57,7)" fg:x="68634" fg:w="231"/><text x="59.5450%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,152 samples, 1.00%)</title><rect x="58.5037%" y="869" width="0.9952%" height="15" fill="rgb(216,148,1)" fg:x="67718" fg:w="1152"/><text x="58.7537%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (878 samples, 0.76%)</title><rect x="58.7404%" y="853" width="0.7585%" height="15" fill="rgb(236,182,29)" fg:x="67992" fg:w="878"/><text x="58.9904%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (878 samples, 0.76%)</title><rect x="58.7404%" y="837" width="0.7585%" height="15" fill="rgb(244,120,48)" fg:x="67992" fg:w="878"/><text x="58.9904%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (878 samples, 0.76%)</title><rect x="58.7404%" y="821" width="0.7585%" height="15" fill="rgb(206,71,34)" fg:x="67992" fg:w="878"/><text x="58.9904%" y="831.50"></text></g><g><title>alloc::alloc::alloc (878 samples, 0.76%)</title><rect x="58.7404%" y="805" width="0.7585%" height="15" fill="rgb(242,32,6)" fg:x="67992" fg:w="878"/><text x="58.9904%" y="815.50"></text></g><g><title>__rg_alloc (878 samples, 0.76%)</title><rect x="58.7404%" y="789" width="0.7585%" height="15" fill="rgb(241,35,3)" fg:x="67992" fg:w="878"/><text x="58.9904%" y="799.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (878 samples, 0.76%)</title><rect x="58.7404%" y="773" width="0.7585%" height="15" fill="rgb(222,62,19)" fg:x="67992" fg:w="878"/><text x="58.9904%" y="783.50"></text></g><g><title>rust_alloc (872 samples, 0.75%)</title><rect x="58.7456%" y="757" width="0.7533%" height="15" fill="rgb(223,110,41)" fg:x="67998" fg:w="872"/><text x="58.9956%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="59.5153%" y="773" width="0.0130%" height="15" fill="rgb(208,224,4)" fg:x="68889" fg:w="15"/><text x="59.7653%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="59.5119%" y="821" width="0.0199%" height="15" fill="rgb(241,137,19)" fg:x="68885" fg:w="23"/><text x="59.7619%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (19 samples, 0.02%)</title><rect x="59.5153%" y="805" width="0.0164%" height="15" fill="rgb(244,24,17)" fg:x="68889" fg:w="19"/><text x="59.7653%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="59.5153%" y="789" width="0.0164%" height="15" fill="rgb(245,178,49)" fg:x="68889" fg:w="19"/><text x="59.7653%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (24 samples, 0.02%)</title><rect x="59.5119%" y="837" width="0.0207%" height="15" fill="rgb(219,160,38)" fg:x="68885" fg:w="24"/><text x="59.7619%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="59.4989%" y="853" width="0.0406%" height="15" fill="rgb(228,137,14)" fg:x="68870" fg:w="47"/><text x="59.7489%" y="863.50"></text></g><g><title>rust_dealloc (34 samples, 0.03%)</title><rect x="59.5577%" y="757" width="0.0294%" height="15" fill="rgb(237,134,11)" fg:x="68938" fg:w="34"/><text x="59.8077%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (23 samples, 0.02%)</title><rect x="59.5870%" y="757" width="0.0199%" height="15" fill="rgb(211,126,44)" fg:x="68972" fg:w="23"/><text x="59.8370%" y="767.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (18 samples, 0.02%)</title><rect x="59.5914%" y="741" width="0.0156%" height="15" fill="rgb(226,171,33)" fg:x="68977" fg:w="18"/><text x="59.8414%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="59.6285%" y="709" width="0.0181%" height="15" fill="rgb(253,99,13)" fg:x="69020" fg:w="21"/><text x="59.8785%" y="719.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="59.6346%" y="693" width="0.0121%" height="15" fill="rgb(244,48,7)" fg:x="69027" fg:w="14"/><text x="59.8846%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (55 samples, 0.05%)</title><rect x="59.6069%" y="757" width="0.0475%" height="15" fill="rgb(244,217,54)" fg:x="68995" fg:w="55"/><text x="59.8569%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (55 samples, 0.05%)</title><rect x="59.6069%" y="741" width="0.0475%" height="15" fill="rgb(224,15,18)" fg:x="68995" fg:w="55"/><text x="59.8569%" y="751.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (46 samples, 0.04%)</title><rect x="59.6147%" y="725" width="0.0397%" height="15" fill="rgb(244,99,12)" fg:x="69004" fg:w="46"/><text x="59.8647%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (122 samples, 0.11%)</title><rect x="59.5577%" y="789" width="0.1054%" height="15" fill="rgb(233,226,8)" fg:x="68938" fg:w="122"/><text x="59.8077%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (122 samples, 0.11%)</title><rect x="59.5577%" y="773" width="0.1054%" height="15" fill="rgb(229,211,3)" fg:x="68938" fg:w="122"/><text x="59.8077%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (126 samples, 0.11%)</title><rect x="59.5577%" y="821" width="0.1089%" height="15" fill="rgb(216,140,21)" fg:x="68938" fg:w="126"/><text x="59.8077%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (126 samples, 0.11%)</title><rect x="59.5577%" y="805" width="0.1089%" height="15" fill="rgb(234,122,30)" fg:x="68938" fg:w="126"/><text x="59.8077%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (139 samples, 0.12%)</title><rect x="59.5490%" y="837" width="0.1201%" height="15" fill="rgb(236,25,46)" fg:x="68928" fg:w="139"/><text x="59.7990%" y="847.50"></text></g><g><title>rust_dealloc (164 samples, 0.14%)</title><rect x="59.5395%" y="853" width="0.1417%" height="15" fill="rgb(217,52,54)" fg:x="68917" fg:w="164"/><text x="59.7895%" y="863.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="59.6691%" y="837" width="0.0121%" height="15" fill="rgb(222,29,26)" fg:x="69067" fg:w="14"/><text x="59.9191%" y="847.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (32 samples, 0.03%)</title><rect x="59.6838%" y="837" width="0.0276%" height="15" fill="rgb(216,177,29)" fg:x="69084" fg:w="32"/><text x="59.9338%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (259 samples, 0.22%)</title><rect x="59.4989%" y="869" width="0.2238%" height="15" fill="rgb(247,136,51)" fg:x="68870" fg:w="259"/><text x="59.7489%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (48 samples, 0.04%)</title><rect x="59.6812%" y="853" width="0.0415%" height="15" fill="rgb(231,47,47)" fg:x="69081" fg:w="48"/><text x="59.9312%" y="863.50"></text></g><g><title>snmalloc::Superslab::is_full (13 samples, 0.01%)</title><rect x="59.7114%" y="837" width="0.0112%" height="15" fill="rgb(211,192,36)" fg:x="69116" fg:w="13"/><text x="59.9614%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (22 samples, 0.02%)</title><rect x="59.7227%" y="869" width="0.0190%" height="15" fill="rgb(229,156,32)" fg:x="69129" fg:w="22"/><text x="59.9727%" y="879.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="59.7227%" y="853" width="0.0190%" height="15" fill="rgb(248,213,20)" fg:x="69129" fg:w="22"/><text x="59.9727%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (13 samples, 0.01%)</title><rect x="59.7443%" y="869" width="0.0112%" height="15" fill="rgb(217,64,7)" fg:x="69154" fg:w="13"/><text x="59.9943%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (58 samples, 0.05%)</title><rect x="59.7555%" y="869" width="0.0501%" height="15" fill="rgb(232,142,8)" fg:x="69167" fg:w="58"/><text x="60.0055%" y="879.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (58 samples, 0.05%)</title><rect x="59.7555%" y="853" width="0.0501%" height="15" fill="rgb(224,92,44)" fg:x="69167" fg:w="58"/><text x="60.0055%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (58 samples, 0.05%)</title><rect x="59.7555%" y="837" width="0.0501%" height="15" fill="rgb(214,169,17)" fg:x="69167" fg:w="58"/><text x="60.0055%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (58 samples, 0.05%)</title><rect x="59.7555%" y="821" width="0.0501%" height="15" fill="rgb(210,59,37)" fg:x="69167" fg:w="58"/><text x="60.0055%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (49 samples, 0.04%)</title><rect x="59.7633%" y="805" width="0.0423%" height="15" fill="rgb(214,116,48)" fg:x="69176" fg:w="49"/><text x="60.0133%" y="815.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (49 samples, 0.04%)</title><rect x="59.7633%" y="789" width="0.0423%" height="15" fill="rgb(244,191,6)" fg:x="69176" fg:w="49"/><text x="60.0133%" y="799.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (49 samples, 0.04%)</title><rect x="59.7633%" y="773" width="0.0423%" height="15" fill="rgb(241,50,52)" fg:x="69176" fg:w="49"/><text x="60.0133%" y="783.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (45 samples, 0.04%)</title><rect x="59.7667%" y="757" width="0.0389%" height="15" fill="rgb(236,75,39)" fg:x="69180" fg:w="45"/><text x="60.0167%" y="767.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (26 samples, 0.02%)</title><rect x="59.7832%" y="741" width="0.0225%" height="15" fill="rgb(236,99,0)" fg:x="69199" fg:w="26"/><text x="60.0332%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (7,523 samples, 6.50%)</title><rect x="53.3564%" y="949" width="6.4994%" height="15" fill="rgb(207,202,15)" fg:x="61760" fg:w="7523"/><text x="53.6064%" y="959.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,523 samples, 6.50%)</title><rect x="53.3564%" y="933" width="6.4994%" height="15" fill="rgb(233,207,14)" fg:x="61760" fg:w="7523"/><text x="53.6064%" y="943.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,373 samples, 2.91%)</title><rect x="56.9417%" y="917" width="2.9140%" height="15" fill="rgb(226,27,51)" fg:x="65910" fg:w="3373"/><text x="57.1917%" y="927.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,373 samples, 2.91%)</title><rect x="56.9417%" y="901" width="2.9140%" height="15" fill="rgb(206,104,42)" fg:x="65910" fg:w="3373"/><text x="57.1917%" y="911.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (3,334 samples, 2.88%)</title><rect x="56.9754%" y="885" width="2.8803%" height="15" fill="rgb(212,225,4)" fg:x="65949" fg:w="3334"/><text x="57.2254%" y="895.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (51 samples, 0.04%)</title><rect x="59.8117%" y="869" width="0.0441%" height="15" fill="rgb(233,96,42)" fg:x="69232" fg:w="51"/><text x="60.0617%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (51 samples, 0.04%)</title><rect x="59.8117%" y="853" width="0.0441%" height="15" fill="rgb(229,21,32)" fg:x="69232" fg:w="51"/><text x="60.0617%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (51 samples, 0.04%)</title><rect x="59.8117%" y="837" width="0.0441%" height="15" fill="rgb(226,216,24)" fg:x="69232" fg:w="51"/><text x="60.0617%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (39 samples, 0.03%)</title><rect x="59.8220%" y="821" width="0.0337%" height="15" fill="rgb(221,163,17)" fg:x="69244" fg:w="39"/><text x="60.0720%" y="831.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (61 samples, 0.05%)</title><rect x="59.9413%" y="885" width="0.0527%" height="15" fill="rgb(216,216,42)" fg:x="69382" fg:w="61"/><text x="60.1913%" y="895.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (54 samples, 0.05%)</title><rect x="59.9473%" y="869" width="0.0467%" height="15" fill="rgb(240,118,7)" fg:x="69389" fg:w="54"/><text x="60.1973%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (12 samples, 0.01%)</title><rect x="59.9836%" y="853" width="0.0104%" height="15" fill="rgb(221,67,37)" fg:x="69431" fg:w="12"/><text x="60.2336%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (704 samples, 0.61%)</title><rect x="59.8756%" y="901" width="0.6082%" height="15" fill="rgb(241,32,44)" fg:x="69306" fg:w="704"/><text x="60.1256%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned_erms (563 samples, 0.49%)</title><rect x="59.9974%" y="885" width="0.4864%" height="15" fill="rgb(235,204,43)" fg:x="69447" fg:w="563"/><text x="60.2474%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,140 samples, 0.98%)</title><rect x="59.8557%" y="933" width="0.9849%" height="15" fill="rgb(213,116,10)" fg:x="69283" fg:w="1140"/><text x="60.1057%" y="943.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,140 samples, 0.98%)</title><rect x="59.8557%" y="917" width="0.9849%" height="15" fill="rgb(239,15,48)" fg:x="69283" fg:w="1140"/><text x="60.1057%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (413 samples, 0.36%)</title><rect x="60.4838%" y="901" width="0.3568%" height="15" fill="rgb(207,123,36)" fg:x="70010" fg:w="413"/><text x="60.7338%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.01%)</title><rect x="60.8613%" y="773" width="0.0138%" height="15" fill="rgb(209,103,30)" fg:x="70447" fg:w="16"/><text x="61.1113%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (12,214 samples, 10.55%)</title><rect x="50.3240%" y="1125" width="10.5521%" height="15" fill="rgb(238,100,19)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1135.50">async_task::raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12,214 samples, 10.55%)</title><rect x="50.3240%" y="1109" width="10.5521%" height="15" fill="rgb(244,30,14)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1119.50">&lt;core::pin::Pin..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,214 samples, 10.55%)</title><rect x="50.3240%" y="1093" width="10.5521%" height="15" fill="rgb(249,174,6)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1103.50">&lt;core::future::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (12,214 samples, 10.55%)</title><rect x="50.3240%" y="1077" width="10.5521%" height="15" fill="rgb(235,213,41)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1087.50">async_executor:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (12,214 samples, 10.55%)</title><rect x="50.3240%" y="1061" width="10.5521%" height="15" fill="rgb(213,118,6)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1071.50">&lt;async_std::tas..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (12,214 samples, 10.55%)</title><rect x="50.3240%" y="1045" width="10.5521%" height="15" fill="rgb(235,44,51)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1055.50">async_std::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,214 samples, 10.55%)</title><rect x="50.3240%" y="1029" width="10.5521%" height="15" fill="rgb(217,9,53)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1039.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,214 samples, 10.55%)</title><rect x="50.3240%" y="1013" width="10.5521%" height="15" fill="rgb(237,172,34)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1023.50">std::thread::lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (12,214 samples, 10.55%)</title><rect x="50.3240%" y="997" width="10.5521%" height="15" fill="rgb(206,206,11)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="1007.50">async_std::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (12,214 samples, 10.55%)</title><rect x="50.3240%" y="981" width="10.5521%" height="15" fill="rgb(214,149,29)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="991.50">&lt;async_std::tas..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,214 samples, 10.55%)</title><rect x="50.3240%" y="965" width="10.5521%" height="15" fill="rgb(208,123,3)" fg:x="58250" fg:w="12214"/><text x="50.5740%" y="975.50">&lt;core::future::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,181 samples, 1.02%)</title><rect x="59.8557%" y="949" width="1.0203%" height="15" fill="rgb(229,126,4)" fg:x="69283" fg:w="1181"/><text x="60.1057%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.04%)</title><rect x="60.8406%" y="933" width="0.0354%" height="15" fill="rgb(222,92,36)" fg:x="70423" fg:w="41"/><text x="61.0906%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (41 samples, 0.04%)</title><rect x="60.8406%" y="917" width="0.0354%" height="15" fill="rgb(216,39,41)" fg:x="70423" fg:w="41"/><text x="61.0906%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (41 samples, 0.04%)</title><rect x="60.8406%" y="901" width="0.0354%" height="15" fill="rgb(253,127,28)" fg:x="70423" fg:w="41"/><text x="61.0906%" y="911.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="60.8406%" y="885" width="0.0354%" height="15" fill="rgb(249,152,51)" fg:x="70423" fg:w="41"/><text x="61.0906%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (41 samples, 0.04%)</title><rect x="60.8406%" y="869" width="0.0354%" height="15" fill="rgb(209,123,42)" fg:x="70423" fg:w="41"/><text x="61.0906%" y="879.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="60.8406%" y="853" width="0.0354%" height="15" fill="rgb(241,118,22)" fg:x="70423" fg:w="41"/><text x="61.0906%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.02%)</title><rect x="60.8605%" y="837" width="0.0156%" height="15" fill="rgb(208,25,7)" fg:x="70446" fg:w="18"/><text x="61.1105%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.02%)</title><rect x="60.8605%" y="821" width="0.0156%" height="15" fill="rgb(243,144,39)" fg:x="70446" fg:w="18"/><text x="61.1105%" y="831.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="60.8613%" y="805" width="0.0147%" height="15" fill="rgb(250,50,5)" fg:x="70447" fg:w="17"/><text x="61.1113%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="60.8613%" y="789" width="0.0147%" height="15" fill="rgb(207,67,11)" fg:x="70447" fg:w="17"/><text x="61.1113%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (13 samples, 0.01%)</title><rect x="60.8778%" y="1125" width="0.0112%" height="15" fill="rgb(245,204,40)" fg:x="70466" fg:w="13"/><text x="61.1278%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="60.8890%" y="1125" width="0.0121%" height="15" fill="rgb(238,228,24)" fg:x="70479" fg:w="14"/><text x="61.1390%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="60.9037%" y="1125" width="0.0104%" height="15" fill="rgb(217,116,22)" fg:x="70496" fg:w="12"/><text x="61.1537%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}}&gt;&gt; (23 samples, 0.02%)</title><rect x="60.9140%" y="1125" width="0.0199%" height="15" fill="rgb(234,98,12)" fg:x="70508" fg:w="23"/><text x="61.1640%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager::route_events::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="60.9339%" y="1125" width="0.0130%" height="15" fill="rgb(242,170,50)" fg:x="70531" fg:w="15"/><text x="61.1839%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="60.9469%" y="1125" width="0.0156%" height="15" fill="rgb(235,7,5)" fg:x="70546" fg:w="18"/><text x="61.1969%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="60.9624%" y="1125" width="0.0216%" height="15" fill="rgb(241,114,28)" fg:x="70564" fg:w="25"/><text x="61.2124%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (39 samples, 0.03%)</title><rect x="60.9978%" y="1125" width="0.0337%" height="15" fill="rgb(246,112,42)" fg:x="70605" fg:w="39"/><text x="61.2478%" y="1135.50"></text></g><g><title>event_listener::Event::notify (34 samples, 0.03%)</title><rect x="61.0384%" y="1125" width="0.0294%" height="15" fill="rgb(248,228,14)" fg:x="70652" fg:w="34"/><text x="61.2884%" y="1135.50"></text></g><g><title>event_listener::full_fence (18 samples, 0.02%)</title><rect x="61.0523%" y="1109" width="0.0156%" height="15" fill="rgb(208,133,18)" fg:x="70668" fg:w="18"/><text x="61.3023%" y="1119.50"></text></g><g><title>polling::epoll::Poller::wait (13 samples, 0.01%)</title><rect x="61.0894%" y="1125" width="0.0112%" height="15" fill="rgb(207,35,49)" fg:x="70711" fg:w="13"/><text x="61.3394%" y="1135.50"></text></g><g><title>rust_alloc (86 samples, 0.07%)</title><rect x="61.1006%" y="1125" width="0.0743%" height="15" fill="rgb(205,68,36)" fg:x="70724" fg:w="86"/><text x="61.3506%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (15 samples, 0.01%)</title><rect x="61.1888%" y="1125" width="0.0130%" height="15" fill="rgb(245,62,40)" fg:x="70826" fg:w="15"/><text x="61.4388%" y="1135.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (36 samples, 0.03%)</title><rect x="61.2095%" y="1125" width="0.0311%" height="15" fill="rgb(228,27,24)" fg:x="70850" fg:w="36"/><text x="61.4595%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="61.2415%" y="901" width="0.0130%" height="15" fill="rgb(253,19,12)" fg:x="70887" fg:w="15"/><text x="61.4915%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (15 samples, 0.01%)</title><rect x="61.2415%" y="885" width="0.0130%" height="15" fill="rgb(232,28,20)" fg:x="70887" fg:w="15"/><text x="61.4915%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="61.2415%" y="869" width="0.0130%" height="15" fill="rgb(218,35,51)" fg:x="70887" fg:w="15"/><text x="61.4915%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="61.2415%" y="853" width="0.0130%" height="15" fill="rgb(212,90,40)" fg:x="70887" fg:w="15"/><text x="61.4915%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="61.2415%" y="917" width="0.0285%" height="15" fill="rgb(220,172,12)" fg:x="70887" fg:w="33"/><text x="61.4915%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.02%)</title><rect x="61.2976%" y="693" width="0.0242%" height="15" fill="rgb(226,159,20)" fg:x="70952" fg:w="28"/><text x="61.5476%" y="703.50"></text></g><g><title>do_syscall_64 (28 samples, 0.02%)</title><rect x="61.2976%" y="677" width="0.0242%" height="15" fill="rgb(234,205,16)" fg:x="70952" fg:w="28"/><text x="61.5476%" y="687.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.02%)</title><rect x="61.3063%" y="661" width="0.0156%" height="15" fill="rgb(207,9,39)" fg:x="70962" fg:w="18"/><text x="61.5563%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (56 samples, 0.05%)</title><rect x="61.2743%" y="789" width="0.0484%" height="15" fill="rgb(249,143,15)" fg:x="70925" fg:w="56"/><text x="61.5243%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="61.2743%" y="773" width="0.0484%" height="15" fill="rgb(253,133,29)" fg:x="70925" fg:w="56"/><text x="61.5243%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (56 samples, 0.05%)</title><rect x="61.2743%" y="757" width="0.0484%" height="15" fill="rgb(221,187,0)" fg:x="70925" fg:w="56"/><text x="61.5243%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (56 samples, 0.05%)</title><rect x="61.2743%" y="741" width="0.0484%" height="15" fill="rgb(205,204,26)" fg:x="70925" fg:w="56"/><text x="61.5243%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (56 samples, 0.05%)</title><rect x="61.2743%" y="725" width="0.0484%" height="15" fill="rgb(224,68,54)" fg:x="70925" fg:w="56"/><text x="61.5243%" y="735.50"></text></g><g><title>__GI___lll_lock_wake (29 samples, 0.03%)</title><rect x="61.2976%" y="709" width="0.0251%" height="15" fill="rgb(209,67,4)" fg:x="70952" fg:w="29"/><text x="61.5476%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (17 samples, 0.01%)</title><rect x="61.3227%" y="789" width="0.0147%" height="15" fill="rgb(228,229,18)" fg:x="70981" fg:w="17"/><text x="61.5727%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.01%)</title><rect x="61.3227%" y="773" width="0.0147%" height="15" fill="rgb(231,89,13)" fg:x="70981" fg:w="17"/><text x="61.5727%" y="783.50"></text></g><g><title>enqueue_task_fair (24 samples, 0.02%)</title><rect x="61.3866%" y="469" width="0.0207%" height="15" fill="rgb(210,182,18)" fg:x="71055" fg:w="24"/><text x="61.6366%" y="479.50"></text></g><g><title>enqueue_entity (15 samples, 0.01%)</title><rect x="61.3944%" y="453" width="0.0130%" height="15" fill="rgb(240,105,2)" fg:x="71064" fg:w="15"/><text x="61.6444%" y="463.50"></text></g><g><title>psi_group_change (13 samples, 0.01%)</title><rect x="61.4143%" y="453" width="0.0112%" height="15" fill="rgb(207,170,50)" fg:x="71087" fg:w="13"/><text x="61.6643%" y="463.50"></text></g><g><title>ttwu_do_activate (46 samples, 0.04%)</title><rect x="61.3866%" y="501" width="0.0397%" height="15" fill="rgb(232,133,24)" fg:x="71055" fg:w="46"/><text x="61.6366%" y="511.50"></text></g><g><title>enqueue_task (46 samples, 0.04%)</title><rect x="61.3866%" y="485" width="0.0397%" height="15" fill="rgb(235,166,27)" fg:x="71055" fg:w="46"/><text x="61.6366%" y="495.50"></text></g><g><title>psi_task_change (17 samples, 0.01%)</title><rect x="61.4117%" y="469" width="0.0147%" height="15" fill="rgb(209,19,13)" fg:x="71084" fg:w="17"/><text x="61.6617%" y="479.50"></text></g><g><title>__wake_up_common (82 samples, 0.07%)</title><rect x="61.3659%" y="549" width="0.0708%" height="15" fill="rgb(226,79,39)" fg:x="71031" fg:w="82"/><text x="61.6159%" y="559.50"></text></g><g><title>autoremove_wake_function (81 samples, 0.07%)</title><rect x="61.3667%" y="533" width="0.0700%" height="15" fill="rgb(222,163,10)" fg:x="71032" fg:w="81"/><text x="61.6167%" y="543.50"></text></g><g><title>try_to_wake_up (77 samples, 0.07%)</title><rect x="61.3702%" y="517" width="0.0665%" height="15" fill="rgb(214,44,19)" fg:x="71036" fg:w="77"/><text x="61.6202%" y="527.50"></text></g><g><title>__wake_up_common_lock (92 samples, 0.08%)</title><rect x="61.3641%" y="565" width="0.0795%" height="15" fill="rgb(210,217,13)" fg:x="71029" fg:w="92"/><text x="61.6141%" y="575.50"></text></g><g><title>__wake_up_common (102 samples, 0.09%)</title><rect x="61.3616%" y="597" width="0.0881%" height="15" fill="rgb(237,61,54)" fg:x="71026" fg:w="102"/><text x="61.6116%" y="607.50"></text></g><g><title>ep_poll_callback (102 samples, 0.09%)</title><rect x="61.3616%" y="581" width="0.0881%" height="15" fill="rgb(226,184,24)" fg:x="71026" fg:w="102"/><text x="61.6116%" y="591.50"></text></g><g><title>ksys_write (124 samples, 0.11%)</title><rect x="61.3495%" y="645" width="0.1071%" height="15" fill="rgb(223,226,4)" fg:x="71012" fg:w="124"/><text x="61.5995%" y="655.50"></text></g><g><title>vfs_write (111 samples, 0.10%)</title><rect x="61.3607%" y="629" width="0.0959%" height="15" fill="rgb(210,26,41)" fg:x="71025" fg:w="111"/><text x="61.6107%" y="639.50"></text></g><g><title>eventfd_write (111 samples, 0.10%)</title><rect x="61.3607%" y="613" width="0.0959%" height="15" fill="rgb(220,221,6)" fg:x="71025" fg:w="111"/><text x="61.6107%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (16 samples, 0.01%)</title><rect x="61.4583%" y="645" width="0.0138%" height="15" fill="rgb(225,89,49)" fg:x="71138" fg:w="16"/><text x="61.7083%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::notify (155 samples, 0.13%)</title><rect x="61.3400%" y="741" width="0.1339%" height="15" fill="rgb(218,70,45)" fg:x="71001" fg:w="155"/><text x="61.5900%" y="751.50"></text></g><g><title>polling::Poller::notify (155 samples, 0.13%)</title><rect x="61.3400%" y="725" width="0.1339%" height="15" fill="rgb(238,166,21)" fg:x="71001" fg:w="155"/><text x="61.5900%" y="735.50"></text></g><g><title>polling::epoll::Poller::notify (155 samples, 0.13%)</title><rect x="61.3400%" y="709" width="0.1339%" height="15" fill="rgb(224,141,44)" fg:x="71001" fg:w="155"/><text x="61.5900%" y="719.50"></text></g><g><title>__GI___write (155 samples, 0.13%)</title><rect x="61.3400%" y="693" width="0.1339%" height="15" fill="rgb(230,12,49)" fg:x="71001" fg:w="155"/><text x="61.5900%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (148 samples, 0.13%)</title><rect x="61.3460%" y="677" width="0.1279%" height="15" fill="rgb(212,174,12)" fg:x="71008" fg:w="148"/><text x="61.5960%" y="687.50"></text></g><g><title>do_syscall_64 (148 samples, 0.13%)</title><rect x="61.3460%" y="661" width="0.1279%" height="15" fill="rgb(246,67,9)" fg:x="71008" fg:w="148"/><text x="61.5960%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (19 samples, 0.02%)</title><rect x="61.4920%" y="709" width="0.0164%" height="15" fill="rgb(239,35,23)" fg:x="71177" fg:w="19"/><text x="61.7420%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (19 samples, 0.02%)</title><rect x="61.4920%" y="693" width="0.0164%" height="15" fill="rgb(211,167,0)" fg:x="71177" fg:w="19"/><text x="61.7420%" y="703.50"></text></g><g><title>_raw_spin_lock (17 samples, 0.01%)</title><rect x="61.5724%" y="565" width="0.0147%" height="15" fill="rgb(225,119,45)" fg:x="71270" fg:w="17"/><text x="61.8224%" y="575.50"></text></g><g><title>futex_wake_mark (36 samples, 0.03%)</title><rect x="61.5905%" y="565" width="0.0311%" height="15" fill="rgb(210,162,6)" fg:x="71291" fg:w="36"/><text x="61.8405%" y="575.50"></text></g><g><title>select_task_rq_fair (36 samples, 0.03%)</title><rect x="61.6639%" y="533" width="0.0311%" height="15" fill="rgb(208,118,35)" fg:x="71376" fg:w="36"/><text x="61.9139%" y="543.50"></text></g><g><title>enqueue_task_fair (82 samples, 0.07%)</title><rect x="61.6976%" y="501" width="0.0708%" height="15" fill="rgb(239,4,53)" fg:x="71415" fg:w="82"/><text x="61.9476%" y="511.50"></text></g><g><title>enqueue_entity (46 samples, 0.04%)</title><rect x="61.7287%" y="485" width="0.0397%" height="15" fill="rgb(213,130,21)" fg:x="71451" fg:w="46"/><text x="61.9787%" y="495.50"></text></g><g><title>update_load_avg (15 samples, 0.01%)</title><rect x="61.7555%" y="469" width="0.0130%" height="15" fill="rgb(235,148,0)" fg:x="71482" fg:w="15"/><text x="62.0055%" y="479.50"></text></g><g><title>psi_group_change (18 samples, 0.02%)</title><rect x="61.7685%" y="501" width="0.0156%" height="15" fill="rgb(244,224,18)" fg:x="71497" fg:w="18"/><text x="62.0185%" y="511.50"></text></g><g><title>psi_group_change (52 samples, 0.04%)</title><rect x="61.8143%" y="485" width="0.0449%" height="15" fill="rgb(211,214,4)" fg:x="71550" fg:w="52"/><text x="62.0643%" y="495.50"></text></g><g><title>ttwu_do_activate (191 samples, 0.17%)</title><rect x="61.6950%" y="533" width="0.1650%" height="15" fill="rgb(206,119,25)" fg:x="71412" fg:w="191"/><text x="61.9450%" y="543.50"></text></g><g><title>enqueue_task (189 samples, 0.16%)</title><rect x="61.6968%" y="517" width="0.1633%" height="15" fill="rgb(243,93,47)" fg:x="71414" fg:w="189"/><text x="61.9468%" y="527.50"></text></g><g><title>psi_task_change (88 samples, 0.08%)</title><rect x="61.7840%" y="501" width="0.0760%" height="15" fill="rgb(224,194,6)" fg:x="71515" fg:w="88"/><text x="62.0340%" y="511.50"></text></g><g><title>ttwu_do_wakeup (18 samples, 0.02%)</title><rect x="61.8600%" y="533" width="0.0156%" height="15" fill="rgb(243,229,6)" fg:x="71603" fg:w="18"/><text x="62.1100%" y="543.50"></text></g><g><title>check_preempt_curr (18 samples, 0.02%)</title><rect x="61.8600%" y="517" width="0.0156%" height="15" fill="rgb(207,23,50)" fg:x="71603" fg:w="18"/><text x="62.1100%" y="527.50"></text></g><g><title>resched_curr (13 samples, 0.01%)</title><rect x="61.8644%" y="501" width="0.0112%" height="15" fill="rgb(253,192,32)" fg:x="71608" fg:w="13"/><text x="62.1144%" y="511.50"></text></g><g><title>ttwu_queue_wakelist (24 samples, 0.02%)</title><rect x="61.8756%" y="533" width="0.0207%" height="15" fill="rgb(213,21,6)" fg:x="71621" fg:w="24"/><text x="62.1256%" y="543.50"></text></g><g><title>__x64_sys_futex (415 samples, 0.36%)</title><rect x="61.5447%" y="613" width="0.3585%" height="15" fill="rgb(243,151,13)" fg:x="71238" fg:w="415"/><text x="61.7947%" y="623.50"></text></g><g><title>do_futex (404 samples, 0.35%)</title><rect x="61.5542%" y="597" width="0.3490%" height="15" fill="rgb(233,165,41)" fg:x="71249" fg:w="404"/><text x="61.8042%" y="607.50"></text></g><g><title>futex_wake (404 samples, 0.35%)</title><rect x="61.5542%" y="581" width="0.3490%" height="15" fill="rgb(246,176,45)" fg:x="71249" fg:w="404"/><text x="61.8042%" y="591.50"></text></g><g><title>wake_up_q (313 samples, 0.27%)</title><rect x="61.6328%" y="565" width="0.2704%" height="15" fill="rgb(217,170,52)" fg:x="71340" fg:w="313"/><text x="61.8828%" y="575.50"></text></g><g><title>try_to_wake_up (308 samples, 0.27%)</title><rect x="61.6371%" y="549" width="0.2661%" height="15" fill="rgb(214,203,54)" fg:x="71345" fg:w="308"/><text x="61.8871%" y="559.50"></text></g><g><title>syscall_exit_to_user_mode (100 samples, 0.09%)</title><rect x="61.9058%" y="613" width="0.0864%" height="15" fill="rgb(248,215,49)" fg:x="71656" fg:w="100"/><text x="62.1558%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (540 samples, 0.47%)</title><rect x="61.5387%" y="645" width="0.4665%" height="15" fill="rgb(208,46,10)" fg:x="71231" fg:w="540"/><text x="61.7887%" y="655.50"></text></g><g><title>do_syscall_64 (537 samples, 0.46%)</title><rect x="61.5413%" y="629" width="0.4639%" height="15" fill="rgb(254,5,31)" fg:x="71234" fg:w="537"/><text x="61.7913%" y="639.50"></text></g><g><title>syscall_trace_enter.constprop.0 (15 samples, 0.01%)</title><rect x="61.9922%" y="613" width="0.0130%" height="15" fill="rgb(222,104,33)" fg:x="71756" fg:w="15"/><text x="62.2422%" y="623.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (578 samples, 0.50%)</title><rect x="61.5084%" y="709" width="0.4994%" height="15" fill="rgb(248,49,16)" fg:x="71196" fg:w="578"/><text x="61.7584%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (578 samples, 0.50%)</title><rect x="61.5084%" y="693" width="0.4994%" height="15" fill="rgb(232,198,41)" fg:x="71196" fg:w="578"/><text x="61.7584%" y="703.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (578 samples, 0.50%)</title><rect x="61.5084%" y="677" width="0.4994%" height="15" fill="rgb(214,125,3)" fg:x="71196" fg:w="578"/><text x="61.7584%" y="687.50"></text></g><g><title>__GI___pthread_cond_signal (578 samples, 0.50%)</title><rect x="61.5084%" y="661" width="0.4994%" height="15" fill="rgb(229,220,28)" fg:x="71196" fg:w="578"/><text x="61.7584%" y="671.50"></text></g><g><title>parking::Inner::unpark (629 samples, 0.54%)</title><rect x="61.4851%" y="725" width="0.5434%" height="15" fill="rgb(222,64,37)" fg:x="71169" fg:w="629"/><text x="61.7351%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="62.0078%" y="709" width="0.0207%" height="15" fill="rgb(249,184,13)" fg:x="71774" fg:w="24"/><text x="62.2578%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="62.0078%" y="693" width="0.0207%" height="15" fill="rgb(252,176,6)" fg:x="71774" fg:w="24"/><text x="62.2578%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="62.0086%" y="677" width="0.0199%" height="15" fill="rgb(228,153,7)" fg:x="71775" fg:w="23"/><text x="62.2586%" y="687.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="62.0086%" y="661" width="0.0199%" height="15" fill="rgb(242,193,5)" fg:x="71775" fg:w="23"/><text x="62.2586%" y="671.50"></text></g><g><title>parking::Unparker::unpark (639 samples, 0.55%)</title><rect x="61.4773%" y="741" width="0.5521%" height="15" fill="rgb(232,140,9)" fg:x="71160" fg:w="639"/><text x="61.7273%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (807 samples, 0.70%)</title><rect x="61.3374%" y="757" width="0.6972%" height="15" fill="rgb(213,222,16)" fg:x="70998" fg:w="807"/><text x="61.5874%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="62.0346%" y="757" width="0.0138%" height="15" fill="rgb(222,75,50)" fg:x="71805" fg:w="16"/><text x="62.2846%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="62.0346%" y="741" width="0.0138%" height="15" fill="rgb(205,180,2)" fg:x="71805" fg:w="16"/><text x="62.2846%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.01%)</title><rect x="62.0346%" y="725" width="0.0138%" height="15" fill="rgb(216,34,7)" fg:x="71805" fg:w="16"/><text x="62.2846%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.01%)</title><rect x="62.0346%" y="709" width="0.0138%" height="15" fill="rgb(253,16,32)" fg:x="71805" fg:w="16"/><text x="62.2846%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake (824 samples, 0.71%)</title><rect x="61.3374%" y="789" width="0.7119%" height="15" fill="rgb(208,97,28)" fg:x="70998" fg:w="824"/><text x="61.5874%" y="799.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (824 samples, 0.71%)</title><rect x="61.3374%" y="773" width="0.7119%" height="15" fill="rgb(225,92,11)" fg:x="70998" fg:w="824"/><text x="61.5874%" y="783.50"></text></g><g><title>__x64_sys_futex (17 samples, 0.01%)</title><rect x="62.0726%" y="677" width="0.0147%" height="15" fill="rgb(243,38,12)" fg:x="71849" fg:w="17"/><text x="62.3226%" y="687.50"></text></g><g><title>do_futex (16 samples, 0.01%)</title><rect x="62.0734%" y="661" width="0.0138%" height="15" fill="rgb(208,139,16)" fg:x="71850" fg:w="16"/><text x="62.3234%" y="671.50"></text></g><g><title>futex_wait (15 samples, 0.01%)</title><rect x="62.0743%" y="645" width="0.0130%" height="15" fill="rgb(227,24,9)" fg:x="71851" fg:w="15"/><text x="62.3243%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.03%)</title><rect x="62.0717%" y="709" width="0.0259%" height="15" fill="rgb(206,62,11)" fg:x="71848" fg:w="30"/><text x="62.3217%" y="719.50"></text></g><g><title>do_syscall_64 (30 samples, 0.03%)</title><rect x="62.0717%" y="693" width="0.0259%" height="15" fill="rgb(228,134,27)" fg:x="71848" fg:w="30"/><text x="62.3217%" y="703.50"></text></g><g><title>syscall_exit_to_user_mode (12 samples, 0.01%)</title><rect x="62.0873%" y="677" width="0.0104%" height="15" fill="rgb(205,55,33)" fg:x="71866" fg:w="12"/><text x="62.3373%" y="687.50"></text></g><g><title>__GI___lll_lock_wait (42 samples, 0.04%)</title><rect x="62.0639%" y="725" width="0.0363%" height="15" fill="rgb(243,75,43)" fg:x="71839" fg:w="42"/><text x="62.3139%" y="735.50"></text></g><g><title>async_executor::State::notify (959 samples, 0.83%)</title><rect x="61.2726%" y="805" width="0.8285%" height="15" fill="rgb(223,27,42)" fg:x="70923" fg:w="959"/><text x="61.5226%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (60 samples, 0.05%)</title><rect x="62.0492%" y="789" width="0.0518%" height="15" fill="rgb(232,189,33)" fg:x="71822" fg:w="60"/><text x="62.2992%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (60 samples, 0.05%)</title><rect x="62.0492%" y="773" width="0.0518%" height="15" fill="rgb(210,9,39)" fg:x="71822" fg:w="60"/><text x="62.2992%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (58 samples, 0.05%)</title><rect x="62.0510%" y="757" width="0.0501%" height="15" fill="rgb(242,85,26)" fg:x="71824" fg:w="58"/><text x="62.3010%" y="767.50"></text></g><g><title>___pthread_mutex_lock (58 samples, 0.05%)</title><rect x="62.0510%" y="741" width="0.0501%" height="15" fill="rgb(248,44,4)" fg:x="71824" fg:w="58"/><text x="62.3010%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (34 samples, 0.03%)</title><rect x="62.1097%" y="773" width="0.0294%" height="15" fill="rgb(250,96,46)" fg:x="71892" fg:w="34"/><text x="62.3597%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.03%)</title><rect x="62.1097%" y="757" width="0.0294%" height="15" fill="rgb(229,116,26)" fg:x="71892" fg:w="34"/><text x="62.3597%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,054 samples, 0.91%)</title><rect x="61.2415%" y="997" width="0.9106%" height="15" fill="rgb(246,94,34)" fg:x="70887" fg:w="1054"/><text x="61.4915%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::route_events::{{closure}} (1,054 samples, 0.91%)</title><rect x="61.2415%" y="981" width="0.9106%" height="15" fill="rgb(251,73,21)" fg:x="70887" fg:w="1054"/><text x="61.4915%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,054 samples, 0.91%)</title><rect x="61.2415%" y="965" width="0.9106%" height="15" fill="rgb(254,121,25)" fg:x="70887" fg:w="1054"/><text x="61.4915%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (1,054 samples, 0.91%)</title><rect x="61.2415%" y="949" width="0.9106%" height="15" fill="rgb(215,161,49)" fg:x="70887" fg:w="1054"/><text x="61.4915%" y="959.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (1,054 samples, 0.91%)</title><rect x="61.2415%" y="933" width="0.9106%" height="15" fill="rgb(221,43,13)" fg:x="70887" fg:w="1054"/><text x="61.4915%" y="943.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (1,021 samples, 0.88%)</title><rect x="61.2700%" y="917" width="0.8821%" height="15" fill="rgb(249,5,37)" fg:x="70920" fg:w="1021"/><text x="61.5200%" y="927.50"></text></g><g><title>event_listener::Event::notify (1,021 samples, 0.88%)</title><rect x="61.2700%" y="901" width="0.8821%" height="15" fill="rgb(226,25,44)" fg:x="70920" fg:w="1021"/><text x="61.5200%" y="911.50"></text></g><g><title>event_listener::List::notify (1,018 samples, 0.88%)</title><rect x="61.2726%" y="885" width="0.8795%" height="15" fill="rgb(238,189,16)" fg:x="70923" fg:w="1018"/><text x="61.5226%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (1,018 samples, 0.88%)</title><rect x="61.2726%" y="869" width="0.8795%" height="15" fill="rgb(251,186,8)" fg:x="70923" fg:w="1018"/><text x="61.5226%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (1,018 samples, 0.88%)</title><rect x="61.2726%" y="853" width="0.8795%" height="15" fill="rgb(254,34,31)" fg:x="70923" fg:w="1018"/><text x="61.5226%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1,018 samples, 0.88%)</title><rect x="61.2726%" y="837" width="0.8795%" height="15" fill="rgb(225,215,27)" fg:x="70923" fg:w="1018"/><text x="61.5226%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1,018 samples, 0.88%)</title><rect x="61.2726%" y="821" width="0.8795%" height="15" fill="rgb(221,192,48)" fg:x="70923" fg:w="1018"/><text x="61.5226%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (59 samples, 0.05%)</title><rect x="62.1011%" y="805" width="0.0510%" height="15" fill="rgb(219,137,20)" fg:x="71882" fg:w="59"/><text x="62.3511%" y="815.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (56 samples, 0.05%)</title><rect x="62.1037%" y="789" width="0.0484%" height="15" fill="rgb(219,84,11)" fg:x="71885" fg:w="56"/><text x="62.3537%" y="799.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (43 samples, 0.04%)</title><rect x="62.1521%" y="965" width="0.0371%" height="15" fill="rgb(224,10,23)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (43 samples, 0.04%)</title><rect x="62.1521%" y="949" width="0.0371%" height="15" fill="rgb(248,22,39)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (43 samples, 0.04%)</title><rect x="62.1521%" y="933" width="0.0371%" height="15" fill="rgb(212,154,20)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (43 samples, 0.04%)</title><rect x="62.1521%" y="917" width="0.0371%" height="15" fill="rgb(236,199,50)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 0.04%)</title><rect x="62.1521%" y="901" width="0.0371%" height="15" fill="rgb(211,9,17)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (43 samples, 0.04%)</title><rect x="62.1521%" y="885" width="0.0371%" height="15" fill="rgb(243,216,36)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 0.04%)</title><rect x="62.1521%" y="869" width="0.0371%" height="15" fill="rgb(250,2,10)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="62.1521%" y="853" width="0.0371%" height="15" fill="rgb(226,50,48)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="62.1521%" y="837" width="0.0371%" height="15" fill="rgb(243,81,16)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.04%)</title><rect x="62.1521%" y="821" width="0.0371%" height="15" fill="rgb(250,14,2)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.04%)</title><rect x="62.1521%" y="805" width="0.0371%" height="15" fill="rgb(233,135,29)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.04%)</title><rect x="62.1521%" y="789" width="0.0371%" height="15" fill="rgb(224,64,43)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="799.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.04%)</title><rect x="62.1521%" y="773" width="0.0371%" height="15" fill="rgb(238,84,13)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="783.50"></text></g><g><title>__rg_alloc (43 samples, 0.04%)</title><rect x="62.1521%" y="757" width="0.0371%" height="15" fill="rgb(253,48,26)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (43 samples, 0.04%)</title><rect x="62.1521%" y="741" width="0.0371%" height="15" fill="rgb(205,223,31)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="751.50"></text></g><g><title>rust_alloc (43 samples, 0.04%)</title><rect x="62.1521%" y="725" width="0.0371%" height="15" fill="rgb(221,41,32)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="62.1521%" y="709" width="0.0371%" height="15" fill="rgb(213,158,31)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="62.1521%" y="693" width="0.0371%" height="15" fill="rgb(245,126,43)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="62.1521%" y="677" width="0.0371%" height="15" fill="rgb(227,7,22)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (43 samples, 0.04%)</title><rect x="62.1521%" y="661" width="0.0371%" height="15" fill="rgb(252,90,44)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (43 samples, 0.04%)</title><rect x="62.1521%" y="645" width="0.0371%" height="15" fill="rgb(253,91,0)" fg:x="71941" fg:w="43"/><text x="62.4021%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (33 samples, 0.03%)</title><rect x="62.1607%" y="629" width="0.0285%" height="15" fill="rgb(252,175,49)" fg:x="71951" fg:w="33"/><text x="62.4107%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (30 samples, 0.03%)</title><rect x="62.1633%" y="613" width="0.0259%" height="15" fill="rgb(246,150,1)" fg:x="71954" fg:w="30"/><text x="62.4133%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="62.1633%" y="597" width="0.0259%" height="15" fill="rgb(241,192,25)" fg:x="71954" fg:w="30"/><text x="62.4133%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (30 samples, 0.03%)</title><rect x="62.1633%" y="581" width="0.0259%" height="15" fill="rgb(239,187,11)" fg:x="71954" fg:w="30"/><text x="62.4133%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.04%)</title><rect x="62.1892%" y="565" width="0.0406%" height="15" fill="rgb(218,202,51)" fg:x="71984" fg:w="47"/><text x="62.4392%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (47 samples, 0.04%)</title><rect x="62.1892%" y="549" width="0.0406%" height="15" fill="rgb(225,176,8)" fg:x="71984" fg:w="47"/><text x="62.4392%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (38 samples, 0.03%)</title><rect x="62.1970%" y="533" width="0.0328%" height="15" fill="rgb(219,122,41)" fg:x="71993" fg:w="38"/><text x="62.4470%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (31 samples, 0.03%)</title><rect x="62.2030%" y="517" width="0.0268%" height="15" fill="rgb(248,140,20)" fg:x="72000" fg:w="31"/><text x="62.4530%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (31 samples, 0.03%)</title><rect x="62.2030%" y="501" width="0.0268%" height="15" fill="rgb(245,41,37)" fg:x="72000" fg:w="31"/><text x="62.4530%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (31 samples, 0.03%)</title><rect x="62.2030%" y="485" width="0.0268%" height="15" fill="rgb(235,82,39)" fg:x="72000" fg:w="31"/><text x="62.4530%" y="495.50"></text></g><g><title>&lt;abi_stable::std_types::string::RString as core::clone::Clone&gt;::clone (65 samples, 0.06%)</title><rect x="62.1892%" y="869" width="0.0562%" height="15" fill="rgb(230,108,42)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="879.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (65 samples, 0.06%)</title><rect x="62.1892%" y="853" width="0.0562%" height="15" fill="rgb(215,150,50)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="863.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (65 samples, 0.06%)</title><rect x="62.1892%" y="837" width="0.0562%" height="15" fill="rgb(233,212,5)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (65 samples, 0.06%)</title><rect x="62.1892%" y="821" width="0.0562%" height="15" fill="rgb(245,80,22)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 0.06%)</title><rect x="62.1892%" y="805" width="0.0562%" height="15" fill="rgb(238,129,16)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 0.06%)</title><rect x="62.1892%" y="789" width="0.0562%" height="15" fill="rgb(240,19,0)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 0.06%)</title><rect x="62.1892%" y="773" width="0.0562%" height="15" fill="rgb(232,42,35)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (65 samples, 0.06%)</title><rect x="62.1892%" y="757" width="0.0562%" height="15" fill="rgb(223,130,24)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (65 samples, 0.06%)</title><rect x="62.1892%" y="741" width="0.0562%" height="15" fill="rgb(237,16,22)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (65 samples, 0.06%)</title><rect x="62.1892%" y="725" width="0.0562%" height="15" fill="rgb(248,192,20)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.06%)</title><rect x="62.1892%" y="709" width="0.0562%" height="15" fill="rgb(233,167,2)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.06%)</title><rect x="62.1892%" y="693" width="0.0562%" height="15" fill="rgb(252,71,44)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="703.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.06%)</title><rect x="62.1892%" y="677" width="0.0562%" height="15" fill="rgb(238,37,47)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="687.50"></text></g><g><title>__rg_alloc (65 samples, 0.06%)</title><rect x="62.1892%" y="661" width="0.0562%" height="15" fill="rgb(214,202,54)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (65 samples, 0.06%)</title><rect x="62.1892%" y="645" width="0.0562%" height="15" fill="rgb(254,165,40)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="655.50"></text></g><g><title>rust_alloc (65 samples, 0.06%)</title><rect x="62.1892%" y="629" width="0.0562%" height="15" fill="rgb(246,173,38)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="62.1892%" y="613" width="0.0562%" height="15" fill="rgb(215,3,27)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="62.1892%" y="597" width="0.0562%" height="15" fill="rgb(239,169,51)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="62.1892%" y="581" width="0.0562%" height="15" fill="rgb(212,5,25)" fg:x="71984" fg:w="65"/><text x="62.4392%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="62.2298%" y="565" width="0.0156%" height="15" fill="rgb(243,45,17)" fg:x="72031" fg:w="18"/><text x="62.4798%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="62.2298%" y="549" width="0.0156%" height="15" fill="rgb(242,97,9)" fg:x="72031" fg:w="18"/><text x="62.4798%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="62.2298%" y="533" width="0.0156%" height="15" fill="rgb(228,71,31)" fg:x="72031" fg:w="18"/><text x="62.4798%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="62.2307%" y="517" width="0.0147%" height="15" fill="rgb(252,184,16)" fg:x="72032" fg:w="17"/><text x="62.4807%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.01%)</title><rect x="62.2307%" y="501" width="0.0147%" height="15" fill="rgb(236,169,46)" fg:x="72032" fg:w="17"/><text x="62.4807%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="62.2454%" y="677" width="0.0276%" height="15" fill="rgb(207,17,47)" fg:x="72049" fg:w="32"/><text x="62.4954%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (32 samples, 0.03%)</title><rect x="62.2454%" y="661" width="0.0276%" height="15" fill="rgb(206,201,28)" fg:x="72049" fg:w="32"/><text x="62.4954%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (24 samples, 0.02%)</title><rect x="62.2523%" y="645" width="0.0207%" height="15" fill="rgb(224,184,23)" fg:x="72057" fg:w="24"/><text x="62.5023%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (17 samples, 0.01%)</title><rect x="62.2583%" y="629" width="0.0147%" height="15" fill="rgb(208,139,48)" fg:x="72064" fg:w="17"/><text x="62.5083%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (17 samples, 0.01%)</title><rect x="62.2583%" y="613" width="0.0147%" height="15" fill="rgb(208,130,10)" fg:x="72064" fg:w="17"/><text x="62.5083%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (17 samples, 0.01%)</title><rect x="62.2583%" y="597" width="0.0147%" height="15" fill="rgb(211,213,45)" fg:x="72064" fg:w="17"/><text x="62.5083%" y="607.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (145 samples, 0.13%)</title><rect x="62.1521%" y="981" width="0.1253%" height="15" fill="rgb(235,100,30)" fg:x="71941" fg:w="145"/><text x="62.4021%" y="991.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::clone::Clone for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::clone (102 samples, 0.09%)</title><rect x="62.1892%" y="965" width="0.0881%" height="15" fill="rgb(206,144,31)" fg:x="71984" fg:w="102"/><text x="62.4392%" y="975.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::to_vec (102 samples, 0.09%)</title><rect x="62.1892%" y="949" width="0.0881%" height="15" fill="rgb(224,200,26)" fg:x="71984" fg:w="102"/><text x="62.4392%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (102 samples, 0.09%)</title><rect x="62.1892%" y="933" width="0.0881%" height="15" fill="rgb(247,104,53)" fg:x="71984" fg:w="102"/><text x="62.4392%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (102 samples, 0.09%)</title><rect x="62.1892%" y="917" width="0.0881%" height="15" fill="rgb(220,14,17)" fg:x="71984" fg:w="102"/><text x="62.4392%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (102 samples, 0.09%)</title><rect x="62.1892%" y="901" width="0.0881%" height="15" fill="rgb(230,140,40)" fg:x="71984" fg:w="102"/><text x="62.4392%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (102 samples, 0.09%)</title><rect x="62.1892%" y="885" width="0.0881%" height="15" fill="rgb(229,2,41)" fg:x="71984" fg:w="102"/><text x="62.4392%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.03%)</title><rect x="62.2454%" y="869" width="0.0320%" height="15" fill="rgb(232,89,16)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.03%)</title><rect x="62.2454%" y="853" width="0.0320%" height="15" fill="rgb(247,59,52)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.03%)</title><rect x="62.2454%" y="837" width="0.0320%" height="15" fill="rgb(226,110,21)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.03%)</title><rect x="62.2454%" y="821" width="0.0320%" height="15" fill="rgb(224,176,43)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.03%)</title><rect x="62.2454%" y="805" width="0.0320%" height="15" fill="rgb(221,73,6)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="815.50"></text></g><g><title>alloc::alloc::alloc (37 samples, 0.03%)</title><rect x="62.2454%" y="789" width="0.0320%" height="15" fill="rgb(232,78,19)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="799.50"></text></g><g><title>__rg_alloc (37 samples, 0.03%)</title><rect x="62.2454%" y="773" width="0.0320%" height="15" fill="rgb(233,112,48)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (37 samples, 0.03%)</title><rect x="62.2454%" y="757" width="0.0320%" height="15" fill="rgb(243,131,47)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="767.50"></text></g><g><title>rust_alloc (37 samples, 0.03%)</title><rect x="62.2454%" y="741" width="0.0320%" height="15" fill="rgb(226,51,1)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="62.2454%" y="725" width="0.0320%" height="15" fill="rgb(247,58,7)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="62.2454%" y="709" width="0.0320%" height="15" fill="rgb(209,7,32)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.03%)</title><rect x="62.2454%" y="693" width="0.0320%" height="15" fill="rgb(209,39,41)" fg:x="72049" fg:w="37"/><text x="62.4954%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (32 samples, 0.03%)</title><rect x="62.2946%" y="661" width="0.0276%" height="15" fill="rgb(226,182,46)" fg:x="72106" fg:w="32"/><text x="62.5446%" y="671.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (32 samples, 0.03%)</title><rect x="62.2946%" y="645" width="0.0276%" height="15" fill="rgb(230,219,10)" fg:x="72106" fg:w="32"/><text x="62.5446%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (62 samples, 0.05%)</title><rect x="62.2877%" y="709" width="0.0536%" height="15" fill="rgb(227,175,30)" fg:x="72098" fg:w="62"/><text x="62.5377%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (62 samples, 0.05%)</title><rect x="62.2877%" y="693" width="0.0536%" height="15" fill="rgb(217,2,50)" fg:x="72098" fg:w="62"/><text x="62.5377%" y="703.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (58 samples, 0.05%)</title><rect x="62.2911%" y="677" width="0.0501%" height="15" fill="rgb(229,160,0)" fg:x="72102" fg:w="58"/><text x="62.5411%" y="687.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (22 samples, 0.02%)</title><rect x="62.3222%" y="661" width="0.0190%" height="15" fill="rgb(207,78,37)" fg:x="72138" fg:w="22"/><text x="62.5722%" y="671.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (22 samples, 0.02%)</title><rect x="62.3222%" y="645" width="0.0190%" height="15" fill="rgb(225,57,0)" fg:x="72138" fg:w="22"/><text x="62.5722%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (82 samples, 0.07%)</title><rect x="62.2868%" y="725" width="0.0708%" height="15" fill="rgb(232,154,2)" fg:x="72097" fg:w="82"/><text x="62.5368%" y="735.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="62.3413%" y="709" width="0.0164%" height="15" fill="rgb(241,212,25)" fg:x="72160" fg:w="19"/><text x="62.5913%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="62.3413%" y="693" width="0.0164%" height="15" fill="rgb(226,69,20)" fg:x="72160" fg:w="19"/><text x="62.5913%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (19 samples, 0.02%)</title><rect x="62.3413%" y="677" width="0.0164%" height="15" fill="rgb(247,184,54)" fg:x="72160" fg:w="19"/><text x="62.5913%" y="687.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="62.3413%" y="661" width="0.0164%" height="15" fill="rgb(210,145,0)" fg:x="72160" fg:w="19"/><text x="62.5913%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (111 samples, 0.10%)</title><rect x="62.2773%" y="741" width="0.0959%" height="15" fill="rgb(253,82,12)" fg:x="72086" fg:w="111"/><text x="62.5273%" y="751.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="62.3603%" y="725" width="0.0130%" height="15" fill="rgb(245,42,11)" fg:x="72182" fg:w="15"/><text x="62.6103%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="62.3603%" y="709" width="0.0130%" height="15" fill="rgb(219,147,32)" fg:x="72182" fg:w="15"/><text x="62.6103%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="62.3603%" y="693" width="0.0130%" height="15" fill="rgb(246,12,7)" fg:x="72182" fg:w="15"/><text x="62.6103%" y="703.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="62.3603%" y="677" width="0.0130%" height="15" fill="rgb(243,50,9)" fg:x="72182" fg:w="15"/><text x="62.6103%" y="687.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (66 samples, 0.06%)</title><rect x="62.4060%" y="725" width="0.0570%" height="15" fill="rgb(219,149,6)" fg:x="72235" fg:w="66"/><text x="62.6560%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (610 samples, 0.53%)</title><rect x="62.2773%" y="773" width="0.5270%" height="15" fill="rgb(241,51,42)" fg:x="72086" fg:w="610"/><text x="62.5273%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (610 samples, 0.53%)</title><rect x="62.2773%" y="757" width="0.5270%" height="15" fill="rgb(226,128,27)" fg:x="72086" fg:w="610"/><text x="62.5273%" y="767.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (499 samples, 0.43%)</title><rect x="62.3732%" y="741" width="0.4311%" height="15" fill="rgb(244,144,4)" fg:x="72197" fg:w="499"/><text x="62.6232%" y="751.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (395 samples, 0.34%)</title><rect x="62.4631%" y="725" width="0.3413%" height="15" fill="rgb(221,4,13)" fg:x="72301" fg:w="395"/><text x="62.7131%" y="735.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (395 samples, 0.34%)</title><rect x="62.4631%" y="709" width="0.3413%" height="15" fill="rgb(208,170,28)" fg:x="72301" fg:w="395"/><text x="62.7131%" y="719.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (395 samples, 0.34%)</title><rect x="62.4631%" y="693" width="0.3413%" height="15" fill="rgb(226,131,13)" fg:x="72301" fg:w="395"/><text x="62.7131%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (617 samples, 0.53%)</title><rect x="62.2773%" y="981" width="0.5330%" height="15" fill="rgb(215,72,41)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (617 samples, 0.53%)</title><rect x="62.2773%" y="965" width="0.5330%" height="15" fill="rgb(243,108,20)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (617 samples, 0.53%)</title><rect x="62.2773%" y="949" width="0.5330%" height="15" fill="rgb(230,189,17)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (617 samples, 0.53%)</title><rect x="62.2773%" y="933" width="0.5330%" height="15" fill="rgb(220,50,17)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (617 samples, 0.53%)</title><rect x="62.2773%" y="917" width="0.5330%" height="15" fill="rgb(248,152,48)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (617 samples, 0.53%)</title><rect x="62.2773%" y="901" width="0.5330%" height="15" fill="rgb(244,91,11)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="911.50"></text></g><g><title>alloc::alloc::alloc (617 samples, 0.53%)</title><rect x="62.2773%" y="885" width="0.5330%" height="15" fill="rgb(220,157,5)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="895.50"></text></g><g><title>__rg_alloc (617 samples, 0.53%)</title><rect x="62.2773%" y="869" width="0.5330%" height="15" fill="rgb(253,137,8)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (617 samples, 0.53%)</title><rect x="62.2773%" y="853" width="0.5330%" height="15" fill="rgb(217,137,51)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="863.50"></text></g><g><title>rust_alloc (617 samples, 0.53%)</title><rect x="62.2773%" y="837" width="0.5330%" height="15" fill="rgb(218,209,53)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (617 samples, 0.53%)</title><rect x="62.2773%" y="821" width="0.5330%" height="15" fill="rgb(249,137,25)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (617 samples, 0.53%)</title><rect x="62.2773%" y="805" width="0.5330%" height="15" fill="rgb(239,155,26)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (617 samples, 0.53%)</title><rect x="62.2773%" y="789" width="0.5330%" height="15" fill="rgb(227,85,46)" fg:x="72086" fg:w="617"/><text x="62.5273%" y="799.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (312 samples, 0.27%)</title><rect x="62.9875%" y="949" width="0.2695%" height="15" fill="rgb(251,107,43)" fg:x="72908" fg:w="312"/><text x="63.2375%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::default::Default&gt;::default (12 samples, 0.01%)</title><rect x="63.2467%" y="933" width="0.0104%" height="15" fill="rgb(234,170,33)" fg:x="73208" fg:w="12"/><text x="63.4967%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (12 samples, 0.01%)</title><rect x="63.2467%" y="917" width="0.0104%" height="15" fill="rgb(206,29,35)" fg:x="73208" fg:w="12"/><text x="63.4967%" y="927.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="63.2994%" y="757" width="0.0190%" height="15" fill="rgb(227,138,25)" fg:x="73269" fg:w="22"/><text x="63.5494%" y="767.50"></text></g><g><title>rust_alloc (19 samples, 0.02%)</title><rect x="63.3192%" y="725" width="0.0164%" height="15" fill="rgb(249,131,35)" fg:x="73292" fg:w="19"/><text x="63.5692%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (16 samples, 0.01%)</title><rect x="63.3391%" y="677" width="0.0138%" height="15" fill="rgb(239,6,40)" fg:x="73315" fg:w="16"/><text x="63.5891%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="63.3391%" y="709" width="0.0752%" height="15" fill="rgb(246,136,47)" fg:x="73315" fg:w="87"/><text x="63.5891%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (87 samples, 0.08%)</title><rect x="63.3391%" y="693" width="0.0752%" height="15" fill="rgb(253,58,26)" fg:x="73315" fg:w="87"/><text x="63.5891%" y="703.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (71 samples, 0.06%)</title><rect x="63.3529%" y="677" width="0.0613%" height="15" fill="rgb(237,141,10)" fg:x="73331" fg:w="71"/><text x="63.6029%" y="687.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (59 samples, 0.05%)</title><rect x="63.3633%" y="661" width="0.0510%" height="15" fill="rgb(234,156,12)" fg:x="73343" fg:w="59"/><text x="63.6133%" y="671.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (59 samples, 0.05%)</title><rect x="63.3633%" y="645" width="0.0510%" height="15" fill="rgb(243,224,36)" fg:x="73343" fg:w="59"/><text x="63.6133%" y="655.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (59 samples, 0.05%)</title><rect x="63.3633%" y="629" width="0.0510%" height="15" fill="rgb(205,229,51)" fg:x="73343" fg:w="59"/><text x="63.6133%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (241 samples, 0.21%)</title><rect x="63.3192%" y="757" width="0.2082%" height="15" fill="rgb(223,189,4)" fg:x="73292" fg:w="241"/><text x="63.5692%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (241 samples, 0.21%)</title><rect x="63.3192%" y="741" width="0.2082%" height="15" fill="rgb(249,167,54)" fg:x="73292" fg:w="241"/><text x="63.5692%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (219 samples, 0.19%)</title><rect x="63.3382%" y="725" width="0.1892%" height="15" fill="rgb(218,34,28)" fg:x="73314" fg:w="219"/><text x="63.5882%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::take (111 samples, 0.10%)</title><rect x="63.4315%" y="709" width="0.0959%" height="15" fill="rgb(232,109,42)" fg:x="73422" fg:w="111"/><text x="63.6815%" y="719.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (111 samples, 0.10%)</title><rect x="63.4315%" y="693" width="0.0959%" height="15" fill="rgb(248,214,46)" fg:x="73422" fg:w="111"/><text x="63.6815%" y="703.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (661 samples, 0.57%)</title><rect x="62.9598%" y="965" width="0.5711%" height="15" fill="rgb(244,216,40)" fg:x="72876" fg:w="661"/><text x="63.2098%" y="975.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (317 samples, 0.27%)</title><rect x="63.2570%" y="949" width="0.2739%" height="15" fill="rgb(231,226,31)" fg:x="73220" fg:w="317"/><text x="63.5070%" y="959.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (308 samples, 0.27%)</title><rect x="63.2648%" y="933" width="0.2661%" height="15" fill="rgb(238,38,43)" fg:x="73229" fg:w="308"/><text x="63.5148%" y="943.50"></text></g><g><title>value_trait::Builder::object (308 samples, 0.27%)</title><rect x="63.2648%" y="917" width="0.2661%" height="15" fill="rgb(208,88,43)" fg:x="73229" fg:w="308"/><text x="63.5148%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (308 samples, 0.27%)</title><rect x="63.2648%" y="901" width="0.2661%" height="15" fill="rgb(205,136,37)" fg:x="73229" fg:w="308"/><text x="63.5148%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (308 samples, 0.27%)</title><rect x="63.2648%" y="885" width="0.2661%" height="15" fill="rgb(237,34,14)" fg:x="73229" fg:w="308"/><text x="63.5148%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (291 samples, 0.25%)</title><rect x="63.2795%" y="869" width="0.2514%" height="15" fill="rgb(236,193,44)" fg:x="73246" fg:w="291"/><text x="63.5295%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (287 samples, 0.25%)</title><rect x="63.2829%" y="853" width="0.2479%" height="15" fill="rgb(231,48,10)" fg:x="73250" fg:w="287"/><text x="63.5329%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (287 samples, 0.25%)</title><rect x="63.2829%" y="837" width="0.2479%" height="15" fill="rgb(213,141,34)" fg:x="73250" fg:w="287"/><text x="63.5329%" y="847.50"></text></g><g><title>alloc::alloc::alloc (287 samples, 0.25%)</title><rect x="63.2829%" y="821" width="0.2479%" height="15" fill="rgb(249,130,34)" fg:x="73250" fg:w="287"/><text x="63.5329%" y="831.50"></text></g><g><title>__rg_alloc (287 samples, 0.25%)</title><rect x="63.2829%" y="805" width="0.2479%" height="15" fill="rgb(219,42,41)" fg:x="73250" fg:w="287"/><text x="63.5329%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (287 samples, 0.25%)</title><rect x="63.2829%" y="789" width="0.2479%" height="15" fill="rgb(224,100,54)" fg:x="73250" fg:w="287"/><text x="63.5329%" y="799.50"></text></g><g><title>rust_alloc (268 samples, 0.23%)</title><rect x="63.2994%" y="773" width="0.2315%" height="15" fill="rgb(229,200,27)" fg:x="73269" fg:w="268"/><text x="63.5494%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (17 samples, 0.01%)</title><rect x="63.5387%" y="965" width="0.0147%" height="15" fill="rgb(217,118,10)" fg:x="73546" fg:w="17"/><text x="63.7887%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (17 samples, 0.01%)</title><rect x="63.5387%" y="949" width="0.0147%" height="15" fill="rgb(206,22,3)" fg:x="73546" fg:w="17"/><text x="63.7887%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (17 samples, 0.01%)</title><rect x="63.5387%" y="933" width="0.0147%" height="15" fill="rgb(232,163,46)" fg:x="73546" fg:w="17"/><text x="63.7887%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="63.5896%" y="853" width="0.0104%" height="15" fill="rgb(206,95,13)" fg:x="73605" fg:w="12"/><text x="63.8396%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::vec::private::RVec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (58 samples, 0.05%)</title><rect x="63.5533%" y="949" width="0.0501%" height="15" fill="rgb(253,154,18)" fg:x="73563" fg:w="58"/><text x="63.8033%" y="959.50"></text></g><g><title>abi_stable::std_types::vec::&lt;impl core::ops::drop::Drop for abi_stable::std_types::vec::private::RVec&lt;T&gt;&gt;::drop (58 samples, 0.05%)</title><rect x="63.5533%" y="933" width="0.0501%" height="15" fill="rgb(219,32,23)" fg:x="73563" fg:w="58"/><text x="63.8033%" y="943.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec (40 samples, 0.03%)</title><rect x="63.5689%" y="917" width="0.0346%" height="15" fill="rgb(230,191,45)" fg:x="73581" fg:w="40"/><text x="63.8189%" y="927.50"></text></g><g><title>abi_stable::std_types::vec::destructor_vec::{{closure}} (32 samples, 0.03%)</title><rect x="63.5758%" y="901" width="0.0276%" height="15" fill="rgb(229,64,36)" fg:x="73589" fg:w="32"/><text x="63.8258%" y="911.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="63.5896%" y="885" width="0.0138%" height="15" fill="rgb(205,129,25)" fg:x="73605" fg:w="16"/><text x="63.8396%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;abi_stable::std_types::arc::private::RArc&lt;core::pin::Pin&lt;abi_stable::std_types::vec::private::RVec&lt;u8&gt;&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="63.5896%" y="869" width="0.0138%" height="15" fill="rgb(254,112,7)" fg:x="73605" fg:w="16"/><text x="63.8396%" y="879.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="63.7227%" y="901" width="0.0130%" height="15" fill="rgb(226,53,48)" fg:x="73759" fg:w="15"/><text x="63.9727%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="63.7227%" y="885" width="0.0130%" height="15" fill="rgb(214,153,38)" fg:x="73759" fg:w="15"/><text x="63.9727%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="63.7227%" y="869" width="0.0130%" height="15" fill="rgb(243,101,7)" fg:x="73759" fg:w="15"/><text x="63.9727%" y="879.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="63.7227%" y="853" width="0.0130%" height="15" fill="rgb(240,140,22)" fg:x="73759" fg:w="15"/><text x="63.9727%" y="863.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="63.7227%" y="837" width="0.0130%" height="15" fill="rgb(235,114,2)" fg:x="73759" fg:w="15"/><text x="63.9727%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="63.7529%" y="837" width="0.0276%" height="15" fill="rgb(242,59,12)" fg:x="73794" fg:w="32"/><text x="64.0029%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (32 samples, 0.03%)</title><rect x="63.7529%" y="821" width="0.0276%" height="15" fill="rgb(252,134,9)" fg:x="73794" fg:w="32"/><text x="64.0029%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (213 samples, 0.18%)</title><rect x="63.6130%" y="933" width="0.1840%" height="15" fill="rgb(236,4,44)" fg:x="73632" fg:w="213"/><text x="63.8630%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (90 samples, 0.08%)</title><rect x="63.7192%" y="917" width="0.0778%" height="15" fill="rgb(254,172,41)" fg:x="73755" fg:w="90"/><text x="63.9692%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (71 samples, 0.06%)</title><rect x="63.7356%" y="901" width="0.0613%" height="15" fill="rgb(244,63,20)" fg:x="73774" fg:w="71"/><text x="63.9856%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (71 samples, 0.06%)</title><rect x="63.7356%" y="885" width="0.0613%" height="15" fill="rgb(250,73,31)" fg:x="73774" fg:w="71"/><text x="63.9856%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (51 samples, 0.04%)</title><rect x="63.7529%" y="869" width="0.0441%" height="15" fill="rgb(241,38,36)" fg:x="73794" fg:w="51"/><text x="64.0029%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (51 samples, 0.04%)</title><rect x="63.7529%" y="853" width="0.0441%" height="15" fill="rgb(245,211,2)" fg:x="73794" fg:w="51"/><text x="64.0029%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (19 samples, 0.02%)</title><rect x="63.7806%" y="837" width="0.0164%" height="15" fill="rgb(206,120,28)" fg:x="73826" fg:w="19"/><text x="64.0306%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="63.7806%" y="821" width="0.0164%" height="15" fill="rgb(211,59,34)" fg:x="73826" fg:w="19"/><text x="64.0306%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.02%)</title><rect x="63.7814%" y="805" width="0.0156%" height="15" fill="rgb(233,168,5)" fg:x="73827" fg:w="18"/><text x="64.0314%" y="815.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="63.8117%" y="901" width="0.0156%" height="15" fill="rgb(234,33,13)" fg:x="73862" fg:w="18"/><text x="64.0617%" y="911.50"></text></g><g><title>size_to_sizeclass (19 samples, 0.02%)</title><rect x="63.8272%" y="901" width="0.0164%" height="15" fill="rgb(231,150,26)" fg:x="73880" fg:w="19"/><text x="64.0772%" y="911.50"></text></g><g><title>rust_dealloc (32 samples, 0.03%)</title><rect x="63.8540%" y="837" width="0.0276%" height="15" fill="rgb(217,191,4)" fg:x="73911" fg:w="32"/><text x="64.1040%" y="847.50"></text></g><g><title>sizeclass_to_size (13 samples, 0.01%)</title><rect x="63.8816%" y="837" width="0.0112%" height="15" fill="rgb(246,198,38)" fg:x="73943" fg:w="13"/><text x="64.1316%" y="847.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (13 samples, 0.01%)</title><rect x="63.8816%" y="821" width="0.0112%" height="15" fill="rgb(245,64,37)" fg:x="73943" fg:w="13"/><text x="64.1316%" y="831.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (43 samples, 0.04%)</title><rect x="63.9231%" y="789" width="0.0371%" height="15" fill="rgb(250,30,36)" fg:x="73991" fg:w="43"/><text x="64.1731%" y="799.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (40 samples, 0.03%)</title><rect x="63.9257%" y="773" width="0.0346%" height="15" fill="rgb(217,86,53)" fg:x="73994" fg:w="40"/><text x="64.1757%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (96 samples, 0.08%)</title><rect x="63.8929%" y="837" width="0.0829%" height="15" fill="rgb(228,157,16)" fg:x="73956" fg:w="96"/><text x="64.1429%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (96 samples, 0.08%)</title><rect x="63.8929%" y="821" width="0.0829%" height="15" fill="rgb(217,59,31)" fg:x="73956" fg:w="96"/><text x="64.1429%" y="831.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (94 samples, 0.08%)</title><rect x="63.8946%" y="805" width="0.0812%" height="15" fill="rgb(237,138,41)" fg:x="73958" fg:w="94"/><text x="64.1446%" y="815.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="63.9603%" y="789" width="0.0156%" height="15" fill="rgb(227,91,49)" fg:x="74034" fg:w="18"/><text x="64.2103%" y="799.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (18 samples, 0.02%)</title><rect x="63.9603%" y="773" width="0.0156%" height="15" fill="rgb(247,21,44)" fg:x="74034" fg:w="18"/><text x="64.2103%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (228 samples, 0.20%)</title><rect x="63.8117%" y="917" width="0.1970%" height="15" fill="rgb(219,210,51)" fg:x="73862" fg:w="228"/><text x="64.0617%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (191 samples, 0.17%)</title><rect x="63.8436%" y="901" width="0.1650%" height="15" fill="rgb(209,140,6)" fg:x="73899" fg:w="191"/><text x="64.0936%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (191 samples, 0.17%)</title><rect x="63.8436%" y="885" width="0.1650%" height="15" fill="rgb(221,188,24)" fg:x="73899" fg:w="191"/><text x="64.0936%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (191 samples, 0.17%)</title><rect x="63.8436%" y="869" width="0.1650%" height="15" fill="rgb(232,154,20)" fg:x="73899" fg:w="191"/><text x="64.0936%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (191 samples, 0.17%)</title><rect x="63.8436%" y="853" width="0.1650%" height="15" fill="rgb(244,137,50)" fg:x="73899" fg:w="191"/><text x="64.0936%" y="863.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (38 samples, 0.03%)</title><rect x="63.9758%" y="837" width="0.0328%" height="15" fill="rgb(225,185,43)" fg:x="74052" fg:w="38"/><text x="64.2258%" y="847.50"></text></g><g><title>rust_dealloc (251 samples, 0.22%)</title><rect x="63.7970%" y="933" width="0.2168%" height="15" fill="rgb(213,205,38)" fg:x="73845" fg:w="251"/><text x="64.0470%" y="943.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (12 samples, 0.01%)</title><rect x="64.0138%" y="917" width="0.0104%" height="15" fill="rgb(236,73,12)" fg:x="74096" fg:w="12"/><text x="64.2638%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (548 samples, 0.47%)</title><rect x="63.5533%" y="965" width="0.4734%" height="15" fill="rgb(235,219,13)" fg:x="73563" fg:w="548"/><text x="63.8033%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (490 samples, 0.42%)</title><rect x="63.6035%" y="949" width="0.4233%" height="15" fill="rgb(218,59,36)" fg:x="73621" fg:w="490"/><text x="63.8535%" y="959.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (15 samples, 0.01%)</title><rect x="64.0138%" y="933" width="0.0130%" height="15" fill="rgb(205,110,39)" fg:x="74096" fg:w="15"/><text x="64.2638%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,238 samples, 2.80%)</title><rect x="61.2406%" y="1125" width="2.7974%" height="15" fill="rgb(218,206,42)" fg:x="70886" fg:w="3238"/><text x="61.4906%" y="1135.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,237 samples, 2.80%)</title><rect x="61.2415%" y="1109" width="2.7965%" height="15" fill="rgb(248,125,24)" fg:x="70887" fg:w="3237"/><text x="61.4915%" y="1119.50">st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,237 samples, 2.80%)</title><rect x="61.2415%" y="1093" width="2.7965%" height="15" fill="rgb(242,28,27)" fg:x="70887" fg:w="3237"/><text x="61.4915%" y="1103.50">as..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,237 samples, 2.80%)</title><rect x="61.2415%" y="1077" width="2.7965%" height="15" fill="rgb(216,228,15)" fg:x="70887" fg:w="3237"/><text x="61.4915%" y="1087.50">&lt;a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,237 samples, 2.80%)</title><rect x="61.2415%" y="1061" width="2.7965%" height="15" fill="rgb(235,116,46)" fg:x="70887" fg:w="3237"/><text x="61.4915%" y="1071.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (3,237 samples, 2.80%)</title><rect x="61.2415%" y="1045" width="2.7965%" height="15" fill="rgb(224,18,32)" fg:x="70887" fg:w="3237"/><text x="61.4915%" y="1055.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,237 samples, 2.80%)</title><rect x="61.2415%" y="1029" width="2.7965%" height="15" fill="rgb(252,5,12)" fg:x="70887" fg:w="3237"/><text x="61.4915%" y="1039.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (3,237 samples, 2.80%)</title><rect x="61.2415%" y="1013" width="2.7965%" height="15" fill="rgb(251,36,5)" fg:x="70887" fg:w="3237"/><text x="61.4915%" y="1023.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,183 samples, 1.89%)</title><rect x="62.1521%" y="997" width="1.8860%" height="15" fill="rgb(217,53,14)" fg:x="71941" fg:w="2183"/><text x="62.4021%" y="1007.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (1,420 samples, 1.23%)</title><rect x="62.8112%" y="981" width="1.2268%" height="15" fill="rgb(215,86,45)" fg:x="72704" fg:w="1420"/><text x="63.0612%" y="991.50"></text></g><g><title>tremor_common::time::nanotime (12 samples, 0.01%)</title><rect x="64.0380%" y="1125" width="0.0104%" height="15" fill="rgb(242,169,11)" fg:x="74124" fg:w="12"/><text x="64.2880%" y="1135.50"></text></g><g><title>tremor_pipeline::pdk::&lt;impl core::convert::From&lt;tremor_pipeline::pdk::PdkEvent&gt; for tremor_pipeline::event::Event&gt;::from (24 samples, 0.02%)</title><rect x="64.0484%" y="1125" width="0.0207%" height="15" fill="rgb(211,213,45)" fg:x="74136" fg:w="24"/><text x="64.2984%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="64.5028%" y="885" width="0.0311%" height="15" fill="rgb(205,88,11)" fg:x="74662" fg:w="36"/><text x="64.7528%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (36 samples, 0.03%)</title><rect x="64.5028%" y="869" width="0.0311%" height="15" fill="rgb(252,69,26)" fg:x="74662" fg:w="36"/><text x="64.7528%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (31 samples, 0.03%)</title><rect x="64.5071%" y="853" width="0.0268%" height="15" fill="rgb(246,123,37)" fg:x="74667" fg:w="31"/><text x="64.7571%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (25 samples, 0.02%)</title><rect x="64.5123%" y="837" width="0.0216%" height="15" fill="rgb(212,205,5)" fg:x="74673" fg:w="25"/><text x="64.7623%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="64.5123%" y="821" width="0.0216%" height="15" fill="rgb(253,148,0)" fg:x="74673" fg:w="25"/><text x="64.7623%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="64.5123%" y="805" width="0.0216%" height="15" fill="rgb(239,22,4)" fg:x="74673" fg:w="25"/><text x="64.7623%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (215 samples, 0.19%)</title><rect x="64.4898%" y="933" width="0.1857%" height="15" fill="rgb(226,26,53)" fg:x="74647" fg:w="215"/><text x="64.7398%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (215 samples, 0.19%)</title><rect x="64.4898%" y="917" width="0.1857%" height="15" fill="rgb(225,229,45)" fg:x="74647" fg:w="215"/><text x="64.7398%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (201 samples, 0.17%)</title><rect x="64.5019%" y="901" width="0.1737%" height="15" fill="rgb(220,60,37)" fg:x="74661" fg:w="201"/><text x="64.7519%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (147 samples, 0.13%)</title><rect x="64.5486%" y="885" width="0.1270%" height="15" fill="rgb(217,180,35)" fg:x="74715" fg:w="147"/><text x="64.7986%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (147 samples, 0.13%)</title><rect x="64.5486%" y="869" width="0.1270%" height="15" fill="rgb(229,7,53)" fg:x="74715" fg:w="147"/><text x="64.7986%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (241 samples, 0.21%)</title><rect x="64.4752%" y="1045" width="0.2082%" height="15" fill="rgb(254,137,3)" fg:x="74630" fg:w="241"/><text x="64.7252%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (241 samples, 0.21%)</title><rect x="64.4752%" y="1029" width="0.2082%" height="15" fill="rgb(215,140,41)" fg:x="74630" fg:w="241"/><text x="64.7252%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (241 samples, 0.21%)</title><rect x="64.4752%" y="1013" width="0.2082%" height="15" fill="rgb(250,80,15)" fg:x="74630" fg:w="241"/><text x="64.7252%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (238 samples, 0.21%)</title><rect x="64.4778%" y="997" width="0.2056%" height="15" fill="rgb(252,191,6)" fg:x="74633" fg:w="238"/><text x="64.7278%" y="1007.50"></text></g><g><title>__rg_alloc (238 samples, 0.21%)</title><rect x="64.4778%" y="981" width="0.2056%" height="15" fill="rgb(246,217,18)" fg:x="74633" fg:w="238"/><text x="64.7278%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (238 samples, 0.21%)</title><rect x="64.4778%" y="965" width="0.2056%" height="15" fill="rgb(223,93,7)" fg:x="74633" fg:w="238"/><text x="64.7278%" y="975.50"></text></g><g><title>rust_alloc (235 samples, 0.20%)</title><rect x="64.4803%" y="949" width="0.2030%" height="15" fill="rgb(225,55,52)" fg:x="74636" fg:w="235"/><text x="64.7303%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (14 samples, 0.01%)</title><rect x="64.6834%" y="1045" width="0.0121%" height="15" fill="rgb(240,31,24)" fg:x="74871" fg:w="14"/><text x="64.9334%" y="1055.50"></text></g><g><title>alloc::slice::hack::into_vec (14 samples, 0.01%)</title><rect x="64.6834%" y="1029" width="0.0121%" height="15" fill="rgb(205,56,52)" fg:x="74871" fg:w="14"/><text x="64.9334%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (14 samples, 0.01%)</title><rect x="64.6834%" y="1013" width="0.0121%" height="15" fill="rgb(246,146,12)" fg:x="74871" fg:w="14"/><text x="64.9334%" y="1023.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (720 samples, 0.62%)</title><rect x="64.0942%" y="1061" width="0.6220%" height="15" fill="rgb(239,84,36)" fg:x="74189" fg:w="720"/><text x="64.3442%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (124 samples, 0.11%)</title><rect x="64.9063%" y="1045" width="0.1071%" height="15" fill="rgb(207,41,40)" fg:x="75129" fg:w="124"/><text x="65.1563%" y="1055.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (57 samples, 0.05%)</title><rect x="65.0384%" y="853" width="0.0492%" height="15" fill="rgb(241,179,25)" fg:x="75282" fg:w="57"/><text x="65.2884%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (57 samples, 0.05%)</title><rect x="65.0384%" y="837" width="0.0492%" height="15" fill="rgb(210,0,34)" fg:x="75282" fg:w="57"/><text x="65.2884%" y="847.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (47 samples, 0.04%)</title><rect x="65.0471%" y="821" width="0.0406%" height="15" fill="rgb(225,217,29)" fg:x="75292" fg:w="47"/><text x="65.2971%" y="831.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (39 samples, 0.03%)</title><rect x="65.0540%" y="805" width="0.0337%" height="15" fill="rgb(216,191,38)" fg:x="75300" fg:w="39"/><text x="65.3040%" y="815.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (39 samples, 0.03%)</title><rect x="65.0540%" y="789" width="0.0337%" height="15" fill="rgb(232,140,52)" fg:x="75300" fg:w="39"/><text x="65.3040%" y="799.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (39 samples, 0.03%)</title><rect x="65.0540%" y="773" width="0.0337%" height="15" fill="rgb(223,158,51)" fg:x="75300" fg:w="39"/><text x="65.3040%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.02%)</title><rect x="65.0937%" y="853" width="0.0242%" height="15" fill="rgb(235,29,51)" fg:x="75346" fg:w="28"/><text x="65.3437%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.02%)</title><rect x="65.0937%" y="837" width="0.0242%" height="15" fill="rgb(215,181,18)" fg:x="75346" fg:w="28"/><text x="65.3437%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.02%)</title><rect x="65.0937%" y="821" width="0.0242%" height="15" fill="rgb(227,125,34)" fg:x="75346" fg:w="28"/><text x="65.3437%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.02%)</title><rect x="65.0955%" y="805" width="0.0225%" height="15" fill="rgb(230,197,49)" fg:x="75348" fg:w="26"/><text x="65.3455%" y="815.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (26 samples, 0.02%)</title><rect x="65.0955%" y="789" width="0.0225%" height="15" fill="rgb(239,141,16)" fg:x="75348" fg:w="26"/><text x="65.3455%" y="799.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.01%)</title><rect x="65.1041%" y="773" width="0.0138%" height="15" fill="rgb(225,105,43)" fg:x="75358" fg:w="16"/><text x="65.3541%" y="783.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.01%)</title><rect x="65.1041%" y="757" width="0.0138%" height="15" fill="rgb(214,131,14)" fg:x="75358" fg:w="16"/><text x="65.3541%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (136 samples, 0.12%)</title><rect x="65.0324%" y="901" width="0.1175%" height="15" fill="rgb(229,177,11)" fg:x="75275" fg:w="136"/><text x="65.2824%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (134 samples, 0.12%)</title><rect x="65.0341%" y="885" width="0.1158%" height="15" fill="rgb(231,180,14)" fg:x="75277" fg:w="134"/><text x="65.2841%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (129 samples, 0.11%)</title><rect x="65.0384%" y="869" width="0.1114%" height="15" fill="rgb(232,88,2)" fg:x="75282" fg:w="129"/><text x="65.2884%" y="879.50"></text></g><g><title>snmalloc::FreeListIter::take (33 samples, 0.03%)</title><rect x="65.1214%" y="853" width="0.0285%" height="15" fill="rgb(205,220,8)" fg:x="75378" fg:w="33"/><text x="65.3714%" y="863.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (33 samples, 0.03%)</title><rect x="65.1214%" y="837" width="0.0285%" height="15" fill="rgb(225,23,53)" fg:x="75378" fg:w="33"/><text x="65.3714%" y="847.50"></text></g><g><title>abi_stable::std_types::arc::&lt;impl abi_stable::std_types::arc::private::RArc&lt;T&gt;&gt;::new (165 samples, 0.14%)</title><rect x="65.0134%" y="1045" width="0.1425%" height="15" fill="rgb(213,62,29)" fg:x="75253" fg:w="165"/><text x="65.2634%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (165 samples, 0.14%)</title><rect x="65.0134%" y="1029" width="0.1425%" height="15" fill="rgb(227,75,7)" fg:x="75253" fg:w="165"/><text x="65.2634%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (155 samples, 0.13%)</title><rect x="65.0220%" y="1013" width="0.1339%" height="15" fill="rgb(207,105,14)" fg:x="75263" fg:w="155"/><text x="65.2720%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (155 samples, 0.13%)</title><rect x="65.0220%" y="997" width="0.1339%" height="15" fill="rgb(245,62,29)" fg:x="75263" fg:w="155"/><text x="65.2720%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (155 samples, 0.13%)</title><rect x="65.0220%" y="981" width="0.1339%" height="15" fill="rgb(236,202,4)" fg:x="75263" fg:w="155"/><text x="65.2720%" y="991.50"></text></g><g><title>alloc::alloc::alloc (154 samples, 0.13%)</title><rect x="65.0229%" y="965" width="0.1330%" height="15" fill="rgb(250,67,1)" fg:x="75264" fg:w="154"/><text x="65.2729%" y="975.50"></text></g><g><title>__rg_alloc (154 samples, 0.13%)</title><rect x="65.0229%" y="949" width="0.1330%" height="15" fill="rgb(253,115,44)" fg:x="75264" fg:w="154"/><text x="65.2729%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (154 samples, 0.13%)</title><rect x="65.0229%" y="933" width="0.1330%" height="15" fill="rgb(251,139,18)" fg:x="75264" fg:w="154"/><text x="65.2729%" y="943.50"></text></g><g><title>rust_alloc (147 samples, 0.13%)</title><rect x="65.0289%" y="917" width="0.1270%" height="15" fill="rgb(218,22,32)" fg:x="75271" fg:w="147"/><text x="65.2789%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="65.1862%" y="885" width="0.0181%" height="15" fill="rgb(243,53,5)" fg:x="75453" fg:w="21"/><text x="65.4362%" y="895.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (21 samples, 0.02%)</title><rect x="65.1862%" y="869" width="0.0181%" height="15" fill="rgb(227,56,16)" fg:x="75453" fg:w="21"/><text x="65.4362%" y="879.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (18 samples, 0.02%)</title><rect x="65.1888%" y="853" width="0.0156%" height="15" fill="rgb(245,53,0)" fg:x="75456" fg:w="18"/><text x="65.4388%" y="863.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="65.1914%" y="837" width="0.0130%" height="15" fill="rgb(216,170,35)" fg:x="75459" fg:w="15"/><text x="65.4414%" y="847.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="65.1914%" y="821" width="0.0130%" height="15" fill="rgb(211,200,8)" fg:x="75459" fg:w="15"/><text x="65.4414%" y="831.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="65.1914%" y="805" width="0.0130%" height="15" fill="rgb(228,204,44)" fg:x="75459" fg:w="15"/><text x="65.4414%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (175 samples, 0.15%)</title><rect x="65.1724%" y="933" width="0.1512%" height="15" fill="rgb(214,121,17)" fg:x="75437" fg:w="175"/><text x="65.4224%" y="943.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.14%)</title><rect x="65.1793%" y="917" width="0.1443%" height="15" fill="rgb(233,64,38)" fg:x="75445" fg:w="167"/><text x="65.4293%" y="927.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (162 samples, 0.14%)</title><rect x="65.1836%" y="901" width="0.1400%" height="15" fill="rgb(253,54,19)" fg:x="75450" fg:w="162"/><text x="65.4336%" y="911.50"></text></g><g><title>snmalloc::FreeListIter::take (124 samples, 0.11%)</title><rect x="65.2164%" y="885" width="0.1071%" height="15" fill="rgb(253,94,18)" fg:x="75488" fg:w="124"/><text x="65.4664%" y="895.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (124 samples, 0.11%)</title><rect x="65.2164%" y="869" width="0.1071%" height="15" fill="rgb(227,57,52)" fg:x="75488" fg:w="124"/><text x="65.4664%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (202 samples, 0.17%)</title><rect x="65.1559%" y="1045" width="0.1745%" height="15" fill="rgb(230,228,50)" fg:x="75418" fg:w="202"/><text x="65.4059%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (202 samples, 0.17%)</title><rect x="65.1559%" y="1029" width="0.1745%" height="15" fill="rgb(217,205,27)" fg:x="75418" fg:w="202"/><text x="65.4059%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (202 samples, 0.17%)</title><rect x="65.1559%" y="1013" width="0.1745%" height="15" fill="rgb(252,71,50)" fg:x="75418" fg:w="202"/><text x="65.4059%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (202 samples, 0.17%)</title><rect x="65.1559%" y="997" width="0.1745%" height="15" fill="rgb(209,86,4)" fg:x="75418" fg:w="202"/><text x="65.4059%" y="1007.50"></text></g><g><title>__rg_alloc (202 samples, 0.17%)</title><rect x="65.1559%" y="981" width="0.1745%" height="15" fill="rgb(229,94,0)" fg:x="75418" fg:w="202"/><text x="65.4059%" y="991.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (202 samples, 0.17%)</title><rect x="65.1559%" y="965" width="0.1745%" height="15" fill="rgb(252,223,21)" fg:x="75418" fg:w="202"/><text x="65.4059%" y="975.50"></text></g><g><title>rust_alloc (185 samples, 0.16%)</title><rect x="65.1706%" y="949" width="0.1598%" height="15" fill="rgb(230,210,4)" fg:x="75435" fg:w="185"/><text x="65.4206%" y="959.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::new (33 samples, 0.03%)</title><rect x="65.3305%" y="1045" width="0.0285%" height="15" fill="rgb(240,149,38)" fg:x="75620" fg:w="33"/><text x="65.5805%" y="1055.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (45 samples, 0.04%)</title><rect x="65.6449%" y="1029" width="0.0389%" height="15" fill="rgb(254,105,20)" fg:x="75984" fg:w="45"/><text x="65.8949%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.04%)</title><rect x="65.9127%" y="885" width="0.0432%" height="15" fill="rgb(253,87,46)" fg:x="76294" fg:w="50"/><text x="66.1627%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="65.9283%" y="869" width="0.0276%" height="15" fill="rgb(253,116,33)" fg:x="76312" fg:w="32"/><text x="66.1783%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.02%)</title><rect x="65.9317%" y="853" width="0.0242%" height="15" fill="rgb(229,198,5)" fg:x="76316" fg:w="28"/><text x="66.1817%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="65.9395%" y="837" width="0.0164%" height="15" fill="rgb(242,38,37)" fg:x="76325" fg:w="19"/><text x="66.1895%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (75 samples, 0.06%)</title><rect x="65.8998%" y="933" width="0.0648%" height="15" fill="rgb(242,69,53)" fg:x="76279" fg:w="75"/><text x="66.1498%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (60 samples, 0.05%)</title><rect x="65.9127%" y="917" width="0.0518%" height="15" fill="rgb(249,80,16)" fg:x="76294" fg:w="60"/><text x="66.1627%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (60 samples, 0.05%)</title><rect x="65.9127%" y="901" width="0.0518%" height="15" fill="rgb(206,128,11)" fg:x="76294" fg:w="60"/><text x="66.1627%" y="911.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (298 samples, 0.26%)</title><rect x="65.7080%" y="981" width="0.2575%" height="15" fill="rgb(212,35,20)" fg:x="76057" fg:w="298"/><text x="65.9580%" y="991.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (248 samples, 0.21%)</title><rect x="65.7512%" y="965" width="0.2143%" height="15" fill="rgb(236,79,13)" fg:x="76107" fg:w="248"/><text x="66.0012%" y="975.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (241 samples, 0.21%)</title><rect x="65.7572%" y="949" width="0.2082%" height="15" fill="rgb(233,123,3)" fg:x="76114" fg:w="241"/><text x="66.0072%" y="959.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (342 samples, 0.30%)</title><rect x="65.7080%" y="997" width="0.2955%" height="15" fill="rgb(214,93,52)" fg:x="76057" fg:w="342"/><text x="65.9580%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (44 samples, 0.04%)</title><rect x="65.9654%" y="981" width="0.0380%" height="15" fill="rgb(251,37,40)" fg:x="76355" fg:w="44"/><text x="66.2154%" y="991.50"></text></g><g><title>core::ptr::write (44 samples, 0.04%)</title><rect x="65.9654%" y="965" width="0.0380%" height="15" fill="rgb(227,80,54)" fg:x="76355" fg:w="44"/><text x="66.2154%" y="975.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (69 samples, 0.06%)</title><rect x="66.0216%" y="821" width="0.0596%" height="15" fill="rgb(254,48,11)" fg:x="76420" fg:w="69"/><text x="66.2716%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (69 samples, 0.06%)</title><rect x="66.0216%" y="805" width="0.0596%" height="15" fill="rgb(235,193,26)" fg:x="76420" fg:w="69"/><text x="66.2716%" y="815.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (63 samples, 0.05%)</title><rect x="66.0268%" y="789" width="0.0544%" height="15" fill="rgb(229,99,21)" fg:x="76426" fg:w="63"/><text x="66.2768%" y="799.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (47 samples, 0.04%)</title><rect x="66.0406%" y="773" width="0.0406%" height="15" fill="rgb(211,140,41)" fg:x="76442" fg:w="47"/><text x="66.2906%" y="783.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (47 samples, 0.04%)</title><rect x="66.0406%" y="757" width="0.0406%" height="15" fill="rgb(240,227,30)" fg:x="76442" fg:w="47"/><text x="66.2906%" y="767.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (47 samples, 0.04%)</title><rect x="66.0406%" y="741" width="0.0406%" height="15" fill="rgb(215,224,45)" fg:x="76442" fg:w="47"/><text x="66.2906%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="66.0864%" y="821" width="0.0147%" height="15" fill="rgb(206,123,31)" fg:x="76495" fg:w="17"/><text x="66.3364%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="66.0864%" y="805" width="0.0147%" height="15" fill="rgb(210,138,16)" fg:x="76495" fg:w="17"/><text x="66.3364%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.01%)</title><rect x="66.0864%" y="789" width="0.0147%" height="15" fill="rgb(228,57,28)" fg:x="76495" fg:w="17"/><text x="66.3364%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="66.0881%" y="773" width="0.0130%" height="15" fill="rgb(242,170,10)" fg:x="76497" fg:w="15"/><text x="66.3381%" y="783.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (15 samples, 0.01%)</title><rect x="66.0881%" y="757" width="0.0130%" height="15" fill="rgb(228,214,39)" fg:x="76497" fg:w="15"/><text x="66.3381%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (145 samples, 0.13%)</title><rect x="66.0078%" y="869" width="0.1253%" height="15" fill="rgb(218,179,33)" fg:x="76404" fg:w="145"/><text x="66.2578%" y="879.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (145 samples, 0.13%)</title><rect x="66.0078%" y="853" width="0.1253%" height="15" fill="rgb(235,193,39)" fg:x="76404" fg:w="145"/><text x="66.2578%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (136 samples, 0.12%)</title><rect x="66.0156%" y="837" width="0.1175%" height="15" fill="rgb(219,221,36)" fg:x="76413" fg:w="136"/><text x="66.2656%" y="847.50"></text></g><g><title>snmalloc::FreeListIter::take (37 samples, 0.03%)</title><rect x="66.1011%" y="821" width="0.0320%" height="15" fill="rgb(248,218,19)" fg:x="76512" fg:w="37"/><text x="66.3511%" y="831.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (37 samples, 0.03%)</title><rect x="66.1011%" y="805" width="0.0320%" height="15" fill="rgb(205,50,9)" fg:x="76512" fg:w="37"/><text x="66.3511%" y="815.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (521 samples, 0.45%)</title><rect x="65.6838%" y="1029" width="0.4501%" height="15" fill="rgb(238,81,28)" fg:x="76029" fg:w="521"/><text x="65.9338%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (498 samples, 0.43%)</title><rect x="65.7037%" y="1013" width="0.4302%" height="15" fill="rgb(235,110,19)" fg:x="76052" fg:w="498"/><text x="65.9537%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (151 samples, 0.13%)</title><rect x="66.0035%" y="997" width="0.1305%" height="15" fill="rgb(214,7,14)" fg:x="76399" fg:w="151"/><text x="66.2535%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (151 samples, 0.13%)</title><rect x="66.0035%" y="981" width="0.1305%" height="15" fill="rgb(211,77,3)" fg:x="76399" fg:w="151"/><text x="66.2535%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (151 samples, 0.13%)</title><rect x="66.0035%" y="965" width="0.1305%" height="15" fill="rgb(229,5,9)" fg:x="76399" fg:w="151"/><text x="66.2535%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (151 samples, 0.13%)</title><rect x="66.0035%" y="949" width="0.1305%" height="15" fill="rgb(225,90,11)" fg:x="76399" fg:w="151"/><text x="66.2535%" y="959.50"></text></g><g><title>alloc::alloc::alloc (151 samples, 0.13%)</title><rect x="66.0035%" y="933" width="0.1305%" height="15" fill="rgb(242,56,8)" fg:x="76399" fg:w="151"/><text x="66.2535%" y="943.50"></text></g><g><title>__rg_alloc (151 samples, 0.13%)</title><rect x="66.0035%" y="917" width="0.1305%" height="15" fill="rgb(249,212,39)" fg:x="76399" fg:w="151"/><text x="66.2535%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (151 samples, 0.13%)</title><rect x="66.0035%" y="901" width="0.1305%" height="15" fill="rgb(236,90,9)" fg:x="76399" fg:w="151"/><text x="66.2535%" y="911.50"></text></g><g><title>rust_alloc (151 samples, 0.13%)</title><rect x="66.0035%" y="885" width="0.1305%" height="15" fill="rgb(206,88,35)" fg:x="76399" fg:w="151"/><text x="66.2535%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,178 samples, 1.02%)</title><rect x="65.3590%" y="1045" width="1.0177%" height="15" fill="rgb(205,126,30)" fg:x="75653" fg:w="1178"/><text x="65.6090%" y="1055.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (281 samples, 0.24%)</title><rect x="66.1339%" y="1029" width="0.2428%" height="15" fill="rgb(230,176,12)" fg:x="76550" fg:w="281"/><text x="66.3839%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (2,647 samples, 2.29%)</title><rect x="64.0907%" y="1125" width="2.2868%" height="15" fill="rgb(243,19,9)" fg:x="74185" fg:w="2647"/><text x="64.3407%" y="1135.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,647 samples, 2.29%)</title><rect x="64.0907%" y="1109" width="2.2868%" height="15" fill="rgb(245,171,17)" fg:x="74185" fg:w="2647"/><text x="64.3407%" y="1119.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager::handle_data::{{closure}} (2,647 samples, 2.29%)</title><rect x="64.0907%" y="1093" width="2.2868%" height="15" fill="rgb(227,52,21)" fg:x="74185" fg:w="2647"/><text x="64.3407%" y="1103.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,645 samples, 2.29%)</title><rect x="64.0924%" y="1077" width="2.2851%" height="15" fill="rgb(238,69,14)" fg:x="74187" fg:w="2645"/><text x="64.3424%" y="1087.50">t..</text></g><g><title>tremor_script::srs::EventPayload::try_new (1,923 samples, 1.66%)</title><rect x="64.7162%" y="1061" width="1.6613%" height="15" fill="rgb(241,156,39)" fg:x="74909" fg:w="1923"/><text x="64.9662%" y="1071.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (23 samples, 0.02%)</title><rect x="66.3775%" y="1125" width="0.0199%" height="15" fill="rgb(212,227,28)" fg:x="76832" fg:w="23"/><text x="66.6275%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="66.6255%" y="981" width="0.0112%" height="15" fill="rgb(209,118,27)" fg:x="77119" fg:w="13"/><text x="66.8755%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (13 samples, 0.01%)</title><rect x="66.6255%" y="965" width="0.0112%" height="15" fill="rgb(226,102,5)" fg:x="77119" fg:w="13"/><text x="66.8755%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.01%)</title><rect x="66.6255%" y="949" width="0.0112%" height="15" fill="rgb(223,34,3)" fg:x="77119" fg:w="13"/><text x="66.8755%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="66.6255%" y="933" width="0.0112%" height="15" fill="rgb(221,81,38)" fg:x="77119" fg:w="13"/><text x="66.8755%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (17 samples, 0.01%)</title><rect x="66.6454%" y="981" width="0.0147%" height="15" fill="rgb(236,219,28)" fg:x="77142" fg:w="17"/><text x="66.8954%" y="991.50"></text></g><g><title>core::mem::replace (17 samples, 0.01%)</title><rect x="66.6454%" y="965" width="0.0147%" height="15" fill="rgb(213,200,14)" fg:x="77142" fg:w="17"/><text x="66.8954%" y="975.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="66.6471%" y="949" width="0.0130%" height="15" fill="rgb(240,33,19)" fg:x="77144" fg:w="15"/><text x="66.8971%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (149 samples, 0.13%)</title><rect x="66.7084%" y="965" width="0.1287%" height="15" fill="rgb(233,113,27)" fg:x="77215" fg:w="149"/><text x="66.9584%" y="975.50"></text></g><g><title>core::mem::replace (149 samples, 0.13%)</title><rect x="66.7084%" y="949" width="0.1287%" height="15" fill="rgb(220,221,18)" fg:x="77215" fg:w="149"/><text x="66.9584%" y="959.50"></text></g><g><title>core::ptr::read (149 samples, 0.13%)</title><rect x="66.7084%" y="933" width="0.1287%" height="15" fill="rgb(238,92,8)" fg:x="77215" fg:w="149"/><text x="66.9584%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (245 samples, 0.21%)</title><rect x="66.6600%" y="981" width="0.2117%" height="15" fill="rgb(222,164,16)" fg:x="77159" fg:w="245"/><text x="66.9100%" y="991.50"></text></g><g><title>core::mem::drop (40 samples, 0.03%)</title><rect x="66.8371%" y="965" width="0.0346%" height="15" fill="rgb(241,119,3)" fg:x="77364" fg:w="40"/><text x="67.0871%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (40 samples, 0.03%)</title><rect x="66.8371%" y="949" width="0.0346%" height="15" fill="rgb(241,44,8)" fg:x="77364" fg:w="40"/><text x="67.0871%" y="959.50"></text></g><g><title>__x64_sys_futex (39 samples, 0.03%)</title><rect x="66.9002%" y="821" width="0.0337%" height="15" fill="rgb(230,36,40)" fg:x="77437" fg:w="39"/><text x="67.1502%" y="831.50"></text></g><g><title>do_futex (35 samples, 0.03%)</title><rect x="66.9037%" y="805" width="0.0302%" height="15" fill="rgb(243,16,36)" fg:x="77441" fg:w="35"/><text x="67.1537%" y="815.50"></text></g><g><title>futex_wake (29 samples, 0.03%)</title><rect x="66.9089%" y="789" width="0.0251%" height="15" fill="rgb(231,4,26)" fg:x="77447" fg:w="29"/><text x="67.1589%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (95 samples, 0.08%)</title><rect x="66.9348%" y="821" width="0.0821%" height="15" fill="rgb(240,9,31)" fg:x="77477" fg:w="95"/><text x="67.1848%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (155 samples, 0.13%)</title><rect x="66.8976%" y="853" width="0.1339%" height="15" fill="rgb(207,173,15)" fg:x="77434" fg:w="155"/><text x="67.1476%" y="863.50"></text></g><g><title>do_syscall_64 (154 samples, 0.13%)</title><rect x="66.8985%" y="837" width="0.1330%" height="15" fill="rgb(224,192,53)" fg:x="77435" fg:w="154"/><text x="67.1485%" y="847.50"></text></g><g><title>syscall_trace_enter.constprop.0 (17 samples, 0.01%)</title><rect x="67.0168%" y="821" width="0.0147%" height="15" fill="rgb(223,67,28)" fg:x="77572" fg:w="17"/><text x="67.2668%" y="831.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (187 samples, 0.16%)</title><rect x="66.8734%" y="885" width="0.1616%" height="15" fill="rgb(211,20,47)" fg:x="77406" fg:w="187"/><text x="67.1234%" y="895.50"></text></g><g><title>__GI___lll_lock_wake (165 samples, 0.14%)</title><rect x="66.8924%" y="869" width="0.1425%" height="15" fill="rgb(240,228,2)" fg:x="77428" fg:w="165"/><text x="67.1424%" y="879.50"></text></g><g><title>core::mem::drop (190 samples, 0.16%)</title><rect x="66.8717%" y="981" width="0.1641%" height="15" fill="rgb(248,151,12)" fg:x="77404" fg:w="190"/><text x="67.1217%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (190 samples, 0.16%)</title><rect x="66.8717%" y="965" width="0.1641%" height="15" fill="rgb(244,8,39)" fg:x="77404" fg:w="190"/><text x="67.1217%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (189 samples, 0.16%)</title><rect x="66.8726%" y="949" width="0.1633%" height="15" fill="rgb(222,26,8)" fg:x="77405" fg:w="189"/><text x="67.1226%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (189 samples, 0.16%)</title><rect x="66.8726%" y="933" width="0.1633%" height="15" fill="rgb(213,106,44)" fg:x="77405" fg:w="189"/><text x="67.1226%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (189 samples, 0.16%)</title><rect x="66.8726%" y="917" width="0.1633%" height="15" fill="rgb(214,129,20)" fg:x="77405" fg:w="189"/><text x="67.1226%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (188 samples, 0.16%)</title><rect x="66.8734%" y="901" width="0.1624%" height="15" fill="rgb(212,32,13)" fg:x="77406" fg:w="188"/><text x="67.1234%" y="911.50"></text></g><g><title>std::sync::poison::Flag::done (13 samples, 0.01%)</title><rect x="67.0523%" y="933" width="0.0112%" height="15" fill="rgb(208,168,33)" fg:x="77613" fg:w="13"/><text x="67.3023%" y="943.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="67.0523%" y="917" width="0.0112%" height="15" fill="rgb(231,207,8)" fg:x="77613" fg:w="13"/><text x="67.3023%" y="927.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="67.0523%" y="901" width="0.0112%" height="15" fill="rgb(235,219,23)" fg:x="77613" fg:w="13"/><text x="67.3023%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="67.0523%" y="885" width="0.0112%" height="15" fill="rgb(226,216,26)" fg:x="77613" fg:w="13"/><text x="67.3023%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (238 samples, 0.21%)</title><rect x="67.0713%" y="901" width="0.2056%" height="15" fill="rgb(239,137,16)" fg:x="77635" fg:w="238"/><text x="67.3213%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (294 samples, 0.25%)</title><rect x="67.0359%" y="981" width="0.2540%" height="15" fill="rgb(207,12,36)" fg:x="77594" fg:w="294"/><text x="67.2859%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (286 samples, 0.25%)</title><rect x="67.0428%" y="965" width="0.2471%" height="15" fill="rgb(210,214,24)" fg:x="77602" fg:w="286"/><text x="67.2928%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (286 samples, 0.25%)</title><rect x="67.0428%" y="949" width="0.2471%" height="15" fill="rgb(206,56,30)" fg:x="77602" fg:w="286"/><text x="67.2928%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (262 samples, 0.23%)</title><rect x="67.0635%" y="933" width="0.2263%" height="15" fill="rgb(228,143,26)" fg:x="77626" fg:w="262"/><text x="67.3135%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (253 samples, 0.22%)</title><rect x="67.0713%" y="917" width="0.2186%" height="15" fill="rgb(216,218,46)" fg:x="77635" fg:w="253"/><text x="67.3213%" y="927.50"></text></g><g><title>___pthread_mutex_unlock (15 samples, 0.01%)</title><rect x="67.2769%" y="901" width="0.0130%" height="15" fill="rgb(206,6,19)" fg:x="77873" fg:w="15"/><text x="67.5269%" y="911.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="67.3045%" y="933" width="0.0104%" height="15" fill="rgb(239,177,51)" fg:x="77905" fg:w="12"/><text x="67.5545%" y="943.50"></text></g><g><title>core::task::wake::Waker::will_wake (35 samples, 0.03%)</title><rect x="67.2898%" y="981" width="0.0302%" height="15" fill="rgb(216,55,25)" fg:x="77888" fg:w="35"/><text x="67.5398%" y="991.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (35 samples, 0.03%)</title><rect x="67.2898%" y="965" width="0.0302%" height="15" fill="rgb(231,163,29)" fg:x="77888" fg:w="35"/><text x="67.5398%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.02%)</title><rect x="67.3045%" y="949" width="0.0156%" height="15" fill="rgb(232,149,50)" fg:x="77905" fg:w="18"/><text x="67.5545%" y="959.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="67.3305%" y="949" width="0.0104%" height="15" fill="rgb(223,142,48)" fg:x="77935" fg:w="12"/><text x="67.5805%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (12 samples, 0.01%)</title><rect x="67.3305%" y="933" width="0.0104%" height="15" fill="rgb(245,83,23)" fg:x="77935" fg:w="12"/><text x="67.5805%" y="943.50"></text></g><g><title>__perf_event_task_sched_out (26 samples, 0.02%)</title><rect x="67.8670%" y="757" width="0.0225%" height="15" fill="rgb(224,63,2)" fg:x="78556" fg:w="26"/><text x="68.1170%" y="767.50"></text></g><g><title>__calc_delta (15 samples, 0.01%)</title><rect x="67.9663%" y="709" width="0.0130%" height="15" fill="rgb(218,65,53)" fg:x="78671" fg:w="15"/><text x="68.2163%" y="719.50"></text></g><g><title>cpuacct_charge (15 samples, 0.01%)</title><rect x="67.9862%" y="709" width="0.0130%" height="15" fill="rgb(221,84,29)" fg:x="78694" fg:w="15"/><text x="68.2362%" y="719.50"></text></g><g><title>update_curr (57 samples, 0.05%)</title><rect x="67.9516%" y="725" width="0.0492%" height="15" fill="rgb(234,0,32)" fg:x="78654" fg:w="57"/><text x="68.2016%" y="735.50"></text></g><g><title>dequeue_entity (129 samples, 0.11%)</title><rect x="67.9205%" y="741" width="0.1114%" height="15" fill="rgb(206,20,16)" fg:x="78618" fg:w="129"/><text x="68.1705%" y="751.50"></text></g><g><title>update_load_avg (36 samples, 0.03%)</title><rect x="68.0009%" y="725" width="0.0311%" height="15" fill="rgb(244,172,18)" fg:x="78711" fg:w="36"/><text x="68.2509%" y="735.50"></text></g><g><title>__update_load_avg_se (13 samples, 0.01%)</title><rect x="68.0207%" y="709" width="0.0112%" height="15" fill="rgb(254,133,1)" fg:x="78734" fg:w="13"/><text x="68.2707%" y="719.50"></text></g><g><title>dequeue_task_fair (162 samples, 0.14%)</title><rect x="67.8937%" y="757" width="0.1400%" height="15" fill="rgb(222,206,41)" fg:x="78587" fg:w="162"/><text x="68.1437%" y="767.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (28 samples, 0.02%)</title><rect x="68.0657%" y="725" width="0.0242%" height="15" fill="rgb(212,3,42)" fg:x="78786" fg:w="28"/><text x="68.3157%" y="735.50"></text></g><g><title>native_write_msr (26 samples, 0.02%)</title><rect x="68.0674%" y="709" width="0.0225%" height="15" fill="rgb(241,11,4)" fg:x="78788" fg:w="26"/><text x="68.3174%" y="719.50"></text></g><g><title>__perf_event_task_sched_in (30 samples, 0.03%)</title><rect x="68.0648%" y="741" width="0.0259%" height="15" fill="rgb(205,19,26)" fg:x="78785" fg:w="30"/><text x="68.3148%" y="751.50"></text></g><g><title>finish_task_switch.isra.0 (69 samples, 0.06%)</title><rect x="68.0337%" y="757" width="0.0596%" height="15" fill="rgb(210,179,32)" fg:x="78749" fg:w="69"/><text x="68.2837%" y="767.50"></text></g><g><title>pick_next_task_fair (23 samples, 0.02%)</title><rect x="68.0933%" y="757" width="0.0199%" height="15" fill="rgb(227,116,49)" fg:x="78818" fg:w="23"/><text x="68.3433%" y="767.50"></text></g><g><title>newidle_balance (20 samples, 0.02%)</title><rect x="68.0959%" y="741" width="0.0173%" height="15" fill="rgb(211,146,6)" fg:x="78821" fg:w="20"/><text x="68.3459%" y="751.50"></text></g><g><title>pick_next_task_idle (15 samples, 0.01%)</title><rect x="68.1132%" y="757" width="0.0130%" height="15" fill="rgb(219,44,39)" fg:x="78841" fg:w="15"/><text x="68.3632%" y="767.50"></text></g><g><title>set_next_task_idle (13 samples, 0.01%)</title><rect x="68.1149%" y="741" width="0.0112%" height="15" fill="rgb(234,128,11)" fg:x="78843" fg:w="13"/><text x="68.3649%" y="751.50"></text></g><g><title>__update_idle_core (12 samples, 0.01%)</title><rect x="68.1158%" y="725" width="0.0104%" height="15" fill="rgb(220,183,53)" fg:x="78844" fg:w="12"/><text x="68.3658%" y="735.50"></text></g><g><title>iterate_groups (18 samples, 0.02%)</title><rect x="68.1322%" y="741" width="0.0156%" height="15" fill="rgb(213,219,32)" fg:x="78863" fg:w="18"/><text x="68.3822%" y="751.50"></text></g><g><title>psi_group_change (77 samples, 0.07%)</title><rect x="68.1477%" y="741" width="0.0665%" height="15" fill="rgb(232,156,16)" fg:x="78881" fg:w="77"/><text x="68.3977%" y="751.50"></text></g><g><title>psi_task_switch (110 samples, 0.10%)</title><rect x="68.1261%" y="757" width="0.0950%" height="15" fill="rgb(246,135,34)" fg:x="78856" fg:w="110"/><text x="68.3761%" y="767.50"></text></g><g><title>put_prev_task_fair (13 samples, 0.01%)</title><rect x="68.2212%" y="757" width="0.0112%" height="15" fill="rgb(241,99,0)" fg:x="78966" fg:w="13"/><text x="68.4712%" y="767.50"></text></g><g><title>futex_wait_queue (510 samples, 0.44%)</title><rect x="67.8160%" y="805" width="0.4406%" height="15" fill="rgb(222,103,45)" fg:x="78497" fg:w="510"/><text x="68.0660%" y="815.50"></text></g><g><title>schedule (492 samples, 0.43%)</title><rect x="67.8315%" y="789" width="0.4251%" height="15" fill="rgb(212,57,4)" fg:x="78515" fg:w="492"/><text x="68.0815%" y="799.50"></text></g><g><title>__schedule (485 samples, 0.42%)</title><rect x="67.8376%" y="773" width="0.4190%" height="15" fill="rgb(215,68,47)" fg:x="78522" fg:w="485"/><text x="68.0876%" y="783.50"></text></g><g><title>update_rq_clock (22 samples, 0.02%)</title><rect x="68.2376%" y="757" width="0.0190%" height="15" fill="rgb(230,84,2)" fg:x="78985" fg:w="22"/><text x="68.4876%" y="767.50"></text></g><g><title>futex_q_lock (31 samples, 0.03%)</title><rect x="68.2721%" y="789" width="0.0268%" height="15" fill="rgb(220,102,14)" fg:x="79025" fg:w="31"/><text x="68.5221%" y="799.50"></text></g><g><title>__x64_sys_futex (601 samples, 0.52%)</title><rect x="67.7866%" y="853" width="0.5192%" height="15" fill="rgb(240,10,32)" fg:x="78463" fg:w="601"/><text x="68.0366%" y="863.50"></text></g><g><title>do_futex (588 samples, 0.51%)</title><rect x="67.7978%" y="837" width="0.5080%" height="15" fill="rgb(215,47,27)" fg:x="78476" fg:w="588"/><text x="68.0478%" y="847.50"></text></g><g><title>futex_wait (586 samples, 0.51%)</title><rect x="67.7996%" y="821" width="0.5063%" height="15" fill="rgb(233,188,43)" fg:x="78478" fg:w="586"/><text x="68.0496%" y="831.50"></text></g><g><title>futex_wait_setup (57 samples, 0.05%)</title><rect x="68.2566%" y="805" width="0.0492%" height="15" fill="rgb(253,190,1)" fg:x="79007" fg:w="57"/><text x="68.5066%" y="815.50"></text></g><g><title>__rseq_handle_notify_resume (23 samples, 0.02%)</title><rect x="68.4043%" y="821" width="0.0199%" height="15" fill="rgb(206,114,52)" fg:x="79178" fg:w="23"/><text x="68.6543%" y="831.50"></text></g><g><title>exit_to_user_mode_prepare (57 samples, 0.05%)</title><rect x="68.3870%" y="837" width="0.0492%" height="15" fill="rgb(233,120,37)" fg:x="79158" fg:w="57"/><text x="68.6370%" y="847.50"></text></g><g><title>syscall_exit_to_user_mode (163 samples, 0.14%)</title><rect x="68.3102%" y="853" width="0.1408%" height="15" fill="rgb(214,52,39)" fg:x="79069" fg:w="163"/><text x="68.5602%" y="863.50"></text></g><g><title>syscall_exit_work (17 samples, 0.01%)</title><rect x="68.4363%" y="837" width="0.0147%" height="15" fill="rgb(223,80,29)" fg:x="79215" fg:w="17"/><text x="68.6863%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (792 samples, 0.68%)</title><rect x="67.7728%" y="885" width="0.6842%" height="15" fill="rgb(230,101,40)" fg:x="78447" fg:w="792"/><text x="68.0228%" y="895.50"></text></g><g><title>do_syscall_64 (788 samples, 0.68%)</title><rect x="67.7762%" y="869" width="0.6808%" height="15" fill="rgb(219,211,8)" fg:x="78451" fg:w="788"/><text x="68.0262%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (848 samples, 0.73%)</title><rect x="67.7261%" y="901" width="0.7326%" height="15" fill="rgb(252,126,28)" fg:x="78393" fg:w="848"/><text x="67.9761%" y="911.50"></text></g><g><title>event_listener::Inner::lock (1,320 samples, 1.14%)</title><rect x="67.3201%" y="981" width="1.1404%" height="15" fill="rgb(215,56,38)" fg:x="77923" fg:w="1320"/><text x="67.5701%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,308 samples, 1.13%)</title><rect x="67.3305%" y="965" width="1.1300%" height="15" fill="rgb(249,55,44)" fg:x="77935" fg:w="1308"/><text x="67.5805%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,296 samples, 1.12%)</title><rect x="67.3408%" y="949" width="1.1197%" height="15" fill="rgb(220,221,32)" fg:x="77947" fg:w="1296"/><text x="67.5908%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,269 samples, 1.10%)</title><rect x="67.3641%" y="933" width="1.0963%" height="15" fill="rgb(212,216,41)" fg:x="77974" fg:w="1269"/><text x="67.6141%" y="943.50"></text></g><g><title>___pthread_mutex_lock (1,269 samples, 1.10%)</title><rect x="67.3641%" y="917" width="1.0963%" height="15" fill="rgb(228,213,43)" fg:x="77974" fg:w="1269"/><text x="67.6141%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,245 samples, 1.94%)</title><rect x="66.5503%" y="997" width="1.9395%" height="15" fill="rgb(211,31,26)" fg:x="77032" fg:w="2245"/><text x="66.8003%" y="1007.50">&lt;..</text></g><g><title>event_listener::List::remove (34 samples, 0.03%)</title><rect x="68.4605%" y="981" width="0.0294%" height="15" fill="rgb(229,202,19)" fg:x="79243" fg:w="34"/><text x="68.7105%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (27 samples, 0.02%)</title><rect x="68.6557%" y="949" width="0.0233%" height="15" fill="rgb(229,105,46)" fg:x="79469" fg:w="27"/><text x="68.9057%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (25 samples, 0.02%)</title><rect x="68.6575%" y="933" width="0.0216%" height="15" fill="rgb(235,108,1)" fg:x="79471" fg:w="25"/><text x="68.9075%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (25 samples, 0.02%)</title><rect x="68.6575%" y="917" width="0.0216%" height="15" fill="rgb(245,111,35)" fg:x="79471" fg:w="25"/><text x="68.9075%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="68.6575%" y="901" width="0.0216%" height="15" fill="rgb(219,185,31)" fg:x="79471" fg:w="25"/><text x="68.9075%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (167 samples, 0.14%)</title><rect x="68.6816%" y="949" width="0.1443%" height="15" fill="rgb(214,4,43)" fg:x="79499" fg:w="167"/><text x="68.9316%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (167 samples, 0.14%)</title><rect x="68.6816%" y="933" width="0.1443%" height="15" fill="rgb(235,227,40)" fg:x="79499" fg:w="167"/><text x="68.9316%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (299 samples, 0.26%)</title><rect x="68.8259%" y="949" width="0.2583%" height="15" fill="rgb(230,88,30)" fg:x="79666" fg:w="299"/><text x="69.0759%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (294 samples, 0.25%)</title><rect x="68.8302%" y="933" width="0.2540%" height="15" fill="rgb(216,217,1)" fg:x="79671" fg:w="294"/><text x="69.0802%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (679 samples, 0.59%)</title><rect x="68.5028%" y="981" width="0.5866%" height="15" fill="rgb(248,139,50)" fg:x="79292" fg:w="679"/><text x="68.7528%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (622 samples, 0.54%)</title><rect x="68.5521%" y="965" width="0.5374%" height="15" fill="rgb(233,1,21)" fg:x="79349" fg:w="622"/><text x="68.8021%" y="975.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.01%)</title><rect x="69.1102%" y="821" width="0.0121%" height="15" fill="rgb(215,183,12)" fg:x="79995" fg:w="14"/><text x="69.3602%" y="831.50"></text></g><g><title>do_futex (13 samples, 0.01%)</title><rect x="69.1110%" y="805" width="0.0112%" height="15" fill="rgb(229,104,42)" fg:x="79996" fg:w="13"/><text x="69.3610%" y="815.50"></text></g><g><title>futex_wake (13 samples, 0.01%)</title><rect x="69.1110%" y="789" width="0.0112%" height="15" fill="rgb(243,34,48)" fg:x="79996" fg:w="13"/><text x="69.3610%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22 samples, 0.02%)</title><rect x="69.1102%" y="853" width="0.0190%" height="15" fill="rgb(239,11,44)" fg:x="79995" fg:w="22"/><text x="69.3602%" y="863.50"></text></g><g><title>do_syscall_64 (22 samples, 0.02%)</title><rect x="69.1102%" y="837" width="0.0190%" height="15" fill="rgb(231,98,35)" fg:x="79995" fg:w="22"/><text x="69.3602%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.03%)</title><rect x="69.0963%" y="885" width="0.0346%" height="15" fill="rgb(233,28,25)" fg:x="79979" fg:w="40"/><text x="69.3463%" y="895.50"></text></g><g><title>__GI___lll_lock_wake (24 samples, 0.02%)</title><rect x="69.1102%" y="869" width="0.0207%" height="15" fill="rgb(234,123,11)" fg:x="79995" fg:w="24"/><text x="69.3602%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (48 samples, 0.04%)</title><rect x="69.0920%" y="965" width="0.0415%" height="15" fill="rgb(220,69,3)" fg:x="79974" fg:w="48"/><text x="69.3420%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (45 samples, 0.04%)</title><rect x="69.0946%" y="949" width="0.0389%" height="15" fill="rgb(214,64,36)" fg:x="79977" fg:w="45"/><text x="69.3446%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="69.0946%" y="933" width="0.0389%" height="15" fill="rgb(211,138,32)" fg:x="79977" fg:w="45"/><text x="69.3446%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (44 samples, 0.04%)</title><rect x="69.0955%" y="917" width="0.0380%" height="15" fill="rgb(213,118,47)" fg:x="79978" fg:w="44"/><text x="69.3455%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (43 samples, 0.04%)</title><rect x="69.0963%" y="901" width="0.0371%" height="15" fill="rgb(243,124,49)" fg:x="79979" fg:w="43"/><text x="69.3463%" y="911.50"></text></g><g><title>event_listener::Inner::lock (61 samples, 0.05%)</title><rect x="69.1421%" y="965" width="0.0527%" height="15" fill="rgb(221,30,28)" fg:x="80032" fg:w="61"/><text x="69.3921%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.05%)</title><rect x="69.1447%" y="949" width="0.0501%" height="15" fill="rgb(246,37,13)" fg:x="80035" fg:w="58"/><text x="69.3947%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="69.1456%" y="933" width="0.0492%" height="15" fill="rgb(249,66,14)" fg:x="80036" fg:w="57"/><text x="69.3956%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (57 samples, 0.05%)</title><rect x="69.1456%" y="917" width="0.0492%" height="15" fill="rgb(213,166,5)" fg:x="80036" fg:w="57"/><text x="69.3956%" y="927.50"></text></g><g><title>___pthread_mutex_lock (57 samples, 0.05%)</title><rect x="69.1456%" y="901" width="0.0492%" height="15" fill="rgb(221,66,24)" fg:x="80036" fg:w="57"/><text x="69.3956%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (21 samples, 0.02%)</title><rect x="69.2130%" y="869" width="0.0181%" height="15" fill="rgb(210,132,17)" fg:x="80114" fg:w="21"/><text x="69.4630%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="69.2130%" y="853" width="0.0181%" height="15" fill="rgb(243,202,5)" fg:x="80114" fg:w="21"/><text x="69.4630%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="69.2130%" y="837" width="0.0181%" height="15" fill="rgb(233,70,48)" fg:x="80114" fg:w="21"/><text x="69.4630%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="69.2130%" y="821" width="0.0181%" height="15" fill="rgb(238,41,26)" fg:x="80114" fg:w="21"/><text x="69.4630%" y="831.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="69.2130%" y="805" width="0.0181%" height="15" fill="rgb(241,19,31)" fg:x="80114" fg:w="21"/><text x="69.4630%" y="815.50"></text></g><g><title>ttwu_do_activate (29 samples, 0.03%)</title><rect x="69.3037%" y="581" width="0.0251%" height="15" fill="rgb(214,76,10)" fg:x="80219" fg:w="29"/><text x="69.5537%" y="591.50"></text></g><g><title>enqueue_task (29 samples, 0.03%)</title><rect x="69.3037%" y="565" width="0.0251%" height="15" fill="rgb(254,202,22)" fg:x="80219" fg:w="29"/><text x="69.5537%" y="575.50"></text></g><g><title>psi_task_change (16 samples, 0.01%)</title><rect x="69.3149%" y="549" width="0.0138%" height="15" fill="rgb(214,72,24)" fg:x="80232" fg:w="16"/><text x="69.5649%" y="559.50"></text></g><g><title>__wake_up_common (66 samples, 0.06%)</title><rect x="69.2786%" y="629" width="0.0570%" height="15" fill="rgb(221,92,46)" fg:x="80190" fg:w="66"/><text x="69.5286%" y="639.50"></text></g><g><title>autoremove_wake_function (63 samples, 0.05%)</title><rect x="69.2812%" y="613" width="0.0544%" height="15" fill="rgb(246,13,50)" fg:x="80193" fg:w="63"/><text x="69.5312%" y="623.50"></text></g><g><title>try_to_wake_up (60 samples, 0.05%)</title><rect x="69.2838%" y="597" width="0.0518%" height="15" fill="rgb(240,165,38)" fg:x="80196" fg:w="60"/><text x="69.5338%" y="607.50"></text></g><g><title>__wake_up_common_lock (70 samples, 0.06%)</title><rect x="69.2778%" y="645" width="0.0605%" height="15" fill="rgb(241,24,51)" fg:x="80189" fg:w="70"/><text x="69.5278%" y="655.50"></text></g><g><title>__wake_up_common (87 samples, 0.08%)</title><rect x="69.2691%" y="677" width="0.0752%" height="15" fill="rgb(227,51,44)" fg:x="80179" fg:w="87"/><text x="69.5191%" y="687.50"></text></g><g><title>ep_poll_callback (87 samples, 0.08%)</title><rect x="69.2691%" y="661" width="0.0752%" height="15" fill="rgb(231,121,3)" fg:x="80179" fg:w="87"/><text x="69.5191%" y="671.50"></text></g><g><title>eventfd_write (98 samples, 0.08%)</title><rect x="69.2657%" y="693" width="0.0847%" height="15" fill="rgb(245,3,41)" fg:x="80175" fg:w="98"/><text x="69.5157%" y="703.50"></text></g><g><title>ksys_write (115 samples, 0.10%)</title><rect x="69.2518%" y="725" width="0.0994%" height="15" fill="rgb(214,13,26)" fg:x="80159" fg:w="115"/><text x="69.5018%" y="735.50"></text></g><g><title>vfs_write (101 samples, 0.09%)</title><rect x="69.2639%" y="709" width="0.0873%" height="15" fill="rgb(252,75,11)" fg:x="80173" fg:w="101"/><text x="69.5139%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (137 samples, 0.12%)</title><rect x="69.2475%" y="757" width="0.1184%" height="15" fill="rgb(218,226,17)" fg:x="80154" fg:w="137"/><text x="69.4975%" y="767.50"></text></g><g><title>do_syscall_64 (136 samples, 0.12%)</title><rect x="69.2484%" y="741" width="0.1175%" height="15" fill="rgb(248,89,38)" fg:x="80155" fg:w="136"/><text x="69.4984%" y="751.50"></text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.01%)</title><rect x="69.3512%" y="725" width="0.0147%" height="15" fill="rgb(237,73,46)" fg:x="80274" fg:w="17"/><text x="69.6012%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::notify (148 samples, 0.13%)</title><rect x="69.2389%" y="821" width="0.1279%" height="15" fill="rgb(242,78,33)" fg:x="80144" fg:w="148"/><text x="69.4889%" y="831.50"></text></g><g><title>polling::Poller::notify (148 samples, 0.13%)</title><rect x="69.2389%" y="805" width="0.1279%" height="15" fill="rgb(235,60,3)" fg:x="80144" fg:w="148"/><text x="69.4889%" y="815.50"></text></g><g><title>polling::epoll::Poller::notify (143 samples, 0.12%)</title><rect x="69.2432%" y="789" width="0.1235%" height="15" fill="rgb(216,172,19)" fg:x="80149" fg:w="143"/><text x="69.4932%" y="799.50"></text></g><g><title>__GI___write (143 samples, 0.12%)</title><rect x="69.2432%" y="773" width="0.1235%" height="15" fill="rgb(227,6,42)" fg:x="80149" fg:w="143"/><text x="69.4932%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (22 samples, 0.02%)</title><rect x="69.3806%" y="789" width="0.0190%" height="15" fill="rgb(223,207,42)" fg:x="80308" fg:w="22"/><text x="69.6306%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_swap (22 samples, 0.02%)</title><rect x="69.3806%" y="773" width="0.0190%" height="15" fill="rgb(246,138,30)" fg:x="80308" fg:w="22"/><text x="69.6306%" y="783.50"></text></g><g><title>_raw_spin_lock (18 samples, 0.02%)</title><rect x="69.4600%" y="645" width="0.0156%" height="15" fill="rgb(251,199,47)" fg:x="80400" fg:w="18"/><text x="69.7100%" y="655.50"></text></g><g><title>futex_wake_mark (40 samples, 0.03%)</title><rect x="69.4816%" y="645" width="0.0346%" height="15" fill="rgb(228,218,44)" fg:x="80425" fg:w="40"/><text x="69.7316%" y="655.50"></text></g><g><title>__futex_unqueue (15 samples, 0.01%)</title><rect x="69.5032%" y="629" width="0.0130%" height="15" fill="rgb(220,68,6)" fg:x="80450" fg:w="15"/><text x="69.7532%" y="639.50"></text></g><g><title>select_task_rq_fair (29 samples, 0.03%)</title><rect x="69.5603%" y="613" width="0.0251%" height="15" fill="rgb(240,60,26)" fg:x="80516" fg:w="29"/><text x="69.8103%" y="623.50"></text></g><g><title>enqueue_task_fair (84 samples, 0.07%)</title><rect x="69.5948%" y="581" width="0.0726%" height="15" fill="rgb(211,200,19)" fg:x="80556" fg:w="84"/><text x="69.8448%" y="591.50"></text></g><g><title>enqueue_entity (59 samples, 0.05%)</title><rect x="69.6164%" y="565" width="0.0510%" height="15" fill="rgb(242,145,30)" fg:x="80581" fg:w="59"/><text x="69.8664%" y="575.50"></text></g><g><title>update_load_avg (14 samples, 0.01%)</title><rect x="69.6553%" y="549" width="0.0121%" height="15" fill="rgb(225,64,13)" fg:x="80626" fg:w="14"/><text x="69.9053%" y="559.50"></text></g><g><title>psi_group_change (22 samples, 0.02%)</title><rect x="69.6674%" y="581" width="0.0190%" height="15" fill="rgb(218,103,35)" fg:x="80640" fg:w="22"/><text x="69.9174%" y="591.50"></text></g><g><title>psi_group_change (52 samples, 0.04%)</title><rect x="69.7063%" y="565" width="0.0449%" height="15" fill="rgb(216,93,46)" fg:x="80685" fg:w="52"/><text x="69.9563%" y="575.50"></text></g><g><title>ttwu_do_activate (193 samples, 0.17%)</title><rect x="69.5853%" y="613" width="0.1667%" height="15" fill="rgb(225,159,27)" fg:x="80545" fg:w="193"/><text x="69.8353%" y="623.50"></text></g><g><title>enqueue_task (185 samples, 0.16%)</title><rect x="69.5922%" y="597" width="0.1598%" height="15" fill="rgb(225,204,11)" fg:x="80553" fg:w="185"/><text x="69.8422%" y="607.50"></text></g><g><title>psi_task_change (76 samples, 0.07%)</title><rect x="69.6864%" y="581" width="0.0657%" height="15" fill="rgb(205,56,4)" fg:x="80662" fg:w="76"/><text x="69.9364%" y="591.50"></text></g><g><title>ttwu_do_wakeup (22 samples, 0.02%)</title><rect x="69.7521%" y="613" width="0.0190%" height="15" fill="rgb(206,6,35)" fg:x="80738" fg:w="22"/><text x="70.0021%" y="623.50"></text></g><g><title>check_preempt_curr (22 samples, 0.02%)</title><rect x="69.7521%" y="597" width="0.0190%" height="15" fill="rgb(247,73,52)" fg:x="80738" fg:w="22"/><text x="70.0021%" y="607.50"></text></g><g><title>resched_curr (12 samples, 0.01%)</title><rect x="69.7607%" y="581" width="0.0104%" height="15" fill="rgb(246,97,4)" fg:x="80748" fg:w="12"/><text x="70.0107%" y="591.50"></text></g><g><title>ttwu_queue_wakelist (26 samples, 0.02%)</title><rect x="69.7711%" y="613" width="0.0225%" height="15" fill="rgb(212,37,15)" fg:x="80760" fg:w="26"/><text x="70.0211%" y="623.50"></text></g><g><title>__x64_sys_futex (448 samples, 0.39%)</title><rect x="69.4281%" y="693" width="0.3870%" height="15" fill="rgb(208,130,40)" fg:x="80363" fg:w="448"/><text x="69.6781%" y="703.50"></text></g><g><title>do_futex (440 samples, 0.38%)</title><rect x="69.4350%" y="677" width="0.3801%" height="15" fill="rgb(236,55,29)" fg:x="80371" fg:w="440"/><text x="69.6850%" y="687.50"></text></g><g><title>futex_wake (436 samples, 0.38%)</title><rect x="69.4384%" y="661" width="0.3767%" height="15" fill="rgb(209,156,45)" fg:x="80375" fg:w="436"/><text x="69.6884%" y="671.50"></text></g><g><title>wake_up_q (334 samples, 0.29%)</title><rect x="69.5266%" y="645" width="0.2886%" height="15" fill="rgb(249,107,4)" fg:x="80477" fg:w="334"/><text x="69.7766%" y="655.50"></text></g><g><title>try_to_wake_up (322 samples, 0.28%)</title><rect x="69.5369%" y="629" width="0.2782%" height="15" fill="rgb(227,7,13)" fg:x="80489" fg:w="322"/><text x="69.7869%" y="639.50"></text></g><g><title>update_rq_clock (25 samples, 0.02%)</title><rect x="69.7935%" y="613" width="0.0216%" height="15" fill="rgb(250,129,14)" fg:x="80786" fg:w="25"/><text x="70.0435%" y="623.50"></text></g><g><title>sched_clock_cpu (12 samples, 0.01%)</title><rect x="69.8048%" y="597" width="0.0104%" height="15" fill="rgb(229,92,13)" fg:x="80799" fg:w="12"/><text x="70.0548%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (80 samples, 0.07%)</title><rect x="69.8168%" y="693" width="0.0691%" height="15" fill="rgb(245,98,39)" fg:x="80813" fg:w="80"/><text x="70.0668%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (538 samples, 0.46%)</title><rect x="69.4281%" y="725" width="0.4648%" height="15" fill="rgb(234,135,48)" fg:x="80363" fg:w="538"/><text x="69.6781%" y="735.50"></text></g><g><title>do_syscall_64 (538 samples, 0.46%)</title><rect x="69.4281%" y="709" width="0.4648%" height="15" fill="rgb(230,98,28)" fg:x="80363" fg:w="538"/><text x="69.6781%" y="719.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (573 samples, 0.50%)</title><rect x="69.3996%" y="789" width="0.4950%" height="15" fill="rgb(223,121,0)" fg:x="80330" fg:w="573"/><text x="69.6496%" y="799.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (573 samples, 0.50%)</title><rect x="69.3996%" y="773" width="0.4950%" height="15" fill="rgb(234,173,33)" fg:x="80330" fg:w="573"/><text x="69.6496%" y="783.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (573 samples, 0.50%)</title><rect x="69.3996%" y="757" width="0.4950%" height="15" fill="rgb(245,47,8)" fg:x="80330" fg:w="573"/><text x="69.6496%" y="767.50"></text></g><g><title>__GI___pthread_cond_signal (573 samples, 0.50%)</title><rect x="69.3996%" y="741" width="0.4950%" height="15" fill="rgb(205,17,20)" fg:x="80330" fg:w="573"/><text x="69.6496%" y="751.50"></text></g><g><title>parking::Unparker::unpark (638 samples, 0.55%)</title><rect x="69.3693%" y="821" width="0.5512%" height="15" fill="rgb(232,151,16)" fg:x="80295" fg:w="638"/><text x="69.6193%" y="831.50"></text></g><g><title>parking::Inner::unpark (630 samples, 0.54%)</title><rect x="69.3762%" y="805" width="0.5443%" height="15" fill="rgb(208,30,32)" fg:x="80303" fg:w="630"/><text x="69.6262%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="69.8946%" y="789" width="0.0259%" height="15" fill="rgb(254,26,3)" fg:x="80903" fg:w="30"/><text x="70.1446%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="69.8946%" y="773" width="0.0259%" height="15" fill="rgb(240,177,30)" fg:x="80903" fg:w="30"/><text x="70.1446%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (29 samples, 0.03%)</title><rect x="69.8955%" y="757" width="0.0251%" height="15" fill="rgb(248,76,44)" fg:x="80904" fg:w="29"/><text x="70.1455%" y="767.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="69.8955%" y="741" width="0.0251%" height="15" fill="rgb(241,186,54)" fg:x="80904" fg:w="29"/><text x="70.1455%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (793 samples, 0.69%)</title><rect x="69.2371%" y="837" width="0.6851%" height="15" fill="rgb(249,171,29)" fg:x="80142" fg:w="793"/><text x="69.4871%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (813 samples, 0.70%)</title><rect x="69.2371%" y="869" width="0.7024%" height="15" fill="rgb(237,151,44)" fg:x="80142" fg:w="813"/><text x="69.4871%" y="879.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (813 samples, 0.70%)</title><rect x="69.2371%" y="853" width="0.7024%" height="15" fill="rgb(228,174,30)" fg:x="80142" fg:w="813"/><text x="69.4871%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="69.9222%" y="837" width="0.0173%" height="15" fill="rgb(252,14,37)" fg:x="80935" fg:w="20"/><text x="70.1722%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="69.9222%" y="821" width="0.0173%" height="15" fill="rgb(207,111,40)" fg:x="80935" fg:w="20"/><text x="70.1722%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="69.9222%" y="805" width="0.0173%" height="15" fill="rgb(248,171,54)" fg:x="80935" fg:w="20"/><text x="70.1722%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="69.9222%" y="789" width="0.0173%" height="15" fill="rgb(211,127,2)" fg:x="80935" fg:w="20"/><text x="70.1722%" y="799.50"></text></g><g><title>async_executor::State::notify (871 samples, 0.75%)</title><rect x="69.2060%" y="885" width="0.7525%" height="15" fill="rgb(236,87,47)" fg:x="80106" fg:w="871"/><text x="69.4560%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="69.9395%" y="869" width="0.0190%" height="15" fill="rgb(223,190,45)" fg:x="80955" fg:w="22"/><text x="70.1895%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="69.9395%" y="853" width="0.0190%" height="15" fill="rgb(215,5,16)" fg:x="80955" fg:w="22"/><text x="70.1895%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="69.9413%" y="837" width="0.0173%" height="15" fill="rgb(252,82,33)" fg:x="80957" fg:w="20"/><text x="70.1913%" y="847.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="69.9413%" y="821" width="0.0173%" height="15" fill="rgb(247,213,44)" fg:x="80957" fg:w="20"/><text x="70.1913%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="69.9741%" y="853" width="0.0216%" height="15" fill="rgb(205,196,44)" fg:x="80995" fg:w="25"/><text x="70.2241%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="69.9741%" y="837" width="0.0216%" height="15" fill="rgb(237,96,54)" fg:x="80995" fg:w="25"/><text x="70.2241%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (925 samples, 0.80%)</title><rect x="69.2052%" y="901" width="0.7991%" height="15" fill="rgb(230,113,34)" fg:x="80105" fg:w="925"/><text x="69.4552%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (53 samples, 0.05%)</title><rect x="69.9585%" y="885" width="0.0458%" height="15" fill="rgb(221,224,12)" fg:x="80977" fg:w="53"/><text x="70.2085%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (48 samples, 0.04%)</title><rect x="69.9629%" y="869" width="0.0415%" height="15" fill="rgb(219,112,44)" fg:x="80982" fg:w="48"/><text x="70.2129%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.03%)</title><rect x="70.0043%" y="901" width="0.0268%" height="15" fill="rgb(210,31,13)" fg:x="81030" fg:w="31"/><text x="70.2543%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.03%)</title><rect x="70.0043%" y="885" width="0.0268%" height="15" fill="rgb(230,25,16)" fg:x="81030" fg:w="31"/><text x="70.2543%" y="895.50"></text></g><g><title>event_listener::List::notify (973 samples, 0.84%)</title><rect x="69.1948%" y="965" width="0.8406%" height="15" fill="rgb(246,108,53)" fg:x="80093" fg:w="973"/><text x="69.4448%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (972 samples, 0.84%)</title><rect x="69.1957%" y="949" width="0.8397%" height="15" fill="rgb(241,172,50)" fg:x="80094" fg:w="972"/><text x="69.4457%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (972 samples, 0.84%)</title><rect x="69.1957%" y="933" width="0.8397%" height="15" fill="rgb(235,141,10)" fg:x="80094" fg:w="972"/><text x="69.4457%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (962 samples, 0.83%)</title><rect x="69.2043%" y="917" width="0.8311%" height="15" fill="rgb(220,174,43)" fg:x="80104" fg:w="962"/><text x="69.4543%" y="927.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,325 samples, 2.01%)</title><rect x="68.4907%" y="997" width="2.0086%" height="15" fill="rgb(215,181,40)" fg:x="79278" fg:w="2325"/><text x="68.7407%" y="1007.50">a..</text></g><g><title>event_listener::Event::notify (1,632 samples, 1.41%)</title><rect x="69.0894%" y="981" width="1.4099%" height="15" fill="rgb(230,97,2)" fg:x="79971" fg:w="1632"/><text x="69.3394%" y="991.50"></text></g><g><title>event_listener::full_fence (537 samples, 0.46%)</title><rect x="70.0354%" y="965" width="0.4639%" height="15" fill="rgb(211,25,27)" fg:x="81066" fg:w="537"/><text x="70.2854%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (537 samples, 0.46%)</title><rect x="70.0354%" y="949" width="0.4639%" height="15" fill="rgb(230,87,26)" fg:x="81066" fg:w="537"/><text x="70.2854%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (537 samples, 0.46%)</title><rect x="70.0354%" y="933" width="0.4639%" height="15" fill="rgb(227,160,17)" fg:x="81066" fg:w="537"/><text x="70.2854%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (14 samples, 0.01%)</title><rect x="70.4994%" y="997" width="0.0121%" height="15" fill="rgb(244,85,34)" fg:x="81603" fg:w="14"/><text x="70.7494%" y="1007.50"></text></g><g><title>__x64_sys_futex (18 samples, 0.02%)</title><rect x="70.5443%" y="805" width="0.0156%" height="15" fill="rgb(207,70,0)" fg:x="81655" fg:w="18"/><text x="70.7943%" y="815.50"></text></g><g><title>do_futex (15 samples, 0.01%)</title><rect x="70.5469%" y="789" width="0.0130%" height="15" fill="rgb(223,129,7)" fg:x="81658" fg:w="15"/><text x="70.7969%" y="799.50"></text></g><g><title>futex_wake (14 samples, 0.01%)</title><rect x="70.5477%" y="773" width="0.0121%" height="15" fill="rgb(246,105,7)" fg:x="81659" fg:w="14"/><text x="70.7977%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (42 samples, 0.04%)</title><rect x="70.5607%" y="805" width="0.0363%" height="15" fill="rgb(215,154,42)" fg:x="81674" fg:w="42"/><text x="70.8107%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (63 samples, 0.05%)</title><rect x="70.5434%" y="837" width="0.0544%" height="15" fill="rgb(220,215,30)" fg:x="81654" fg:w="63"/><text x="70.7934%" y="847.50"></text></g><g><title>do_syscall_64 (63 samples, 0.05%)</title><rect x="70.5434%" y="821" width="0.0544%" height="15" fill="rgb(228,81,51)" fg:x="81654" fg:w="63"/><text x="70.7934%" y="831.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (82 samples, 0.07%)</title><rect x="70.5279%" y="869" width="0.0708%" height="15" fill="rgb(247,71,54)" fg:x="81636" fg:w="82"/><text x="70.7779%" y="879.50"></text></g><g><title>__GI___lll_lock_wake (72 samples, 0.06%)</title><rect x="70.5365%" y="853" width="0.0622%" height="15" fill="rgb(234,176,34)" fg:x="81646" fg:w="72"/><text x="70.7865%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (85 samples, 0.07%)</title><rect x="70.5261%" y="949" width="0.0734%" height="15" fill="rgb(241,103,54)" fg:x="81634" fg:w="85"/><text x="70.7761%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (85 samples, 0.07%)</title><rect x="70.5261%" y="933" width="0.0734%" height="15" fill="rgb(228,22,34)" fg:x="81634" fg:w="85"/><text x="70.7761%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.07%)</title><rect x="70.5261%" y="917" width="0.0734%" height="15" fill="rgb(241,179,48)" fg:x="81634" fg:w="85"/><text x="70.7761%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (85 samples, 0.07%)</title><rect x="70.5261%" y="901" width="0.0734%" height="15" fill="rgb(235,167,37)" fg:x="81634" fg:w="85"/><text x="70.7761%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (83 samples, 0.07%)</title><rect x="70.5279%" y="885" width="0.0717%" height="15" fill="rgb(213,109,30)" fg:x="81636" fg:w="83"/><text x="70.7779%" y="895.50"></text></g><g><title>__x64_sys_futex (16 samples, 0.01%)</title><rect x="70.6263%" y="821" width="0.0138%" height="15" fill="rgb(222,172,16)" fg:x="81750" fg:w="16"/><text x="70.8763%" y="831.50"></text></g><g><title>do_futex (14 samples, 0.01%)</title><rect x="70.6281%" y="805" width="0.0121%" height="15" fill="rgb(233,192,5)" fg:x="81752" fg:w="14"/><text x="70.8781%" y="815.50"></text></g><g><title>futex_wait (14 samples, 0.01%)</title><rect x="70.6281%" y="789" width="0.0121%" height="15" fill="rgb(247,189,41)" fg:x="81752" fg:w="14"/><text x="70.8781%" y="799.50"></text></g><g><title>futex_wait_setup (12 samples, 0.01%)</title><rect x="70.6298%" y="773" width="0.0104%" height="15" fill="rgb(218,134,47)" fg:x="81754" fg:w="12"/><text x="70.8798%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.01%)</title><rect x="70.6402%" y="821" width="0.0147%" height="15" fill="rgb(216,29,3)" fg:x="81766" fg:w="17"/><text x="70.8902%" y="831.50"></text></g><g><title>event_listener::Inner::lock (65 samples, 0.06%)</title><rect x="70.5996%" y="949" width="0.0562%" height="15" fill="rgb(246,140,12)" fg:x="81719" fg:w="65"/><text x="70.8496%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (65 samples, 0.06%)</title><rect x="70.5996%" y="933" width="0.0562%" height="15" fill="rgb(230,136,11)" fg:x="81719" fg:w="65"/><text x="70.8496%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (62 samples, 0.05%)</title><rect x="70.6022%" y="917" width="0.0536%" height="15" fill="rgb(247,22,47)" fg:x="81722" fg:w="62"/><text x="70.8522%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="70.6091%" y="901" width="0.0467%" height="15" fill="rgb(218,84,22)" fg:x="81730" fg:w="54"/><text x="70.8591%" y="911.50"></text></g><g><title>___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="70.6091%" y="885" width="0.0467%" height="15" fill="rgb(216,87,39)" fg:x="81730" fg:w="54"/><text x="70.8591%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (41 samples, 0.04%)</title><rect x="70.6203%" y="869" width="0.0354%" height="15" fill="rgb(221,178,8)" fg:x="81743" fg:w="41"/><text x="70.8703%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (36 samples, 0.03%)</title><rect x="70.6246%" y="853" width="0.0311%" height="15" fill="rgb(230,42,11)" fg:x="81748" fg:w="36"/><text x="70.8746%" y="863.50"></text></g><g><title>do_syscall_64 (35 samples, 0.03%)</title><rect x="70.6255%" y="837" width="0.0302%" height="15" fill="rgb(237,229,4)" fg:x="81749" fg:w="35"/><text x="70.8755%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (157 samples, 0.14%)</title><rect x="70.5227%" y="965" width="0.1356%" height="15" fill="rgb(222,31,33)" fg:x="81630" fg:w="157"/><text x="70.7727%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (189 samples, 0.16%)</title><rect x="70.5114%" y="997" width="0.1633%" height="15" fill="rgb(210,17,39)" fg:x="81617" fg:w="189"/><text x="70.7614%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (177 samples, 0.15%)</title><rect x="70.5218%" y="981" width="0.1529%" height="15" fill="rgb(244,93,20)" fg:x="81629" fg:w="177"/><text x="70.7718%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (19 samples, 0.02%)</title><rect x="70.6583%" y="965" width="0.0164%" height="15" fill="rgb(210,40,47)" fg:x="81787" fg:w="19"/><text x="70.9083%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="70.6583%" y="949" width="0.0164%" height="15" fill="rgb(239,211,47)" fg:x="81787" fg:w="19"/><text x="70.9083%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.02%)</title><rect x="70.6583%" y="933" width="0.0164%" height="15" fill="rgb(251,223,49)" fg:x="81787" fg:w="19"/><text x="70.9083%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.02%)</title><rect x="70.6583%" y="917" width="0.0164%" height="15" fill="rgb(221,149,5)" fg:x="81787" fg:w="19"/><text x="70.9083%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="70.6782%" y="981" width="0.0207%" height="15" fill="rgb(219,224,51)" fg:x="81810" fg:w="24"/><text x="70.9282%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.02%)</title><rect x="70.6782%" y="965" width="0.0207%" height="15" fill="rgb(223,7,8)" fg:x="81810" fg:w="24"/><text x="70.9282%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="70.6782%" y="949" width="0.0207%" height="15" fill="rgb(241,217,22)" fg:x="81810" fg:w="24"/><text x="70.9282%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="70.6989%" y="901" width="0.0164%" height="15" fill="rgb(248,209,0)" fg:x="81834" fg:w="19"/><text x="70.9489%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (20 samples, 0.02%)</title><rect x="70.6989%" y="981" width="0.0173%" height="15" fill="rgb(217,205,4)" fg:x="81834" fg:w="20"/><text x="70.9489%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (20 samples, 0.02%)</title><rect x="70.6989%" y="965" width="0.0173%" height="15" fill="rgb(228,124,39)" fg:x="81834" fg:w="20"/><text x="70.9489%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="70.6989%" y="949" width="0.0173%" height="15" fill="rgb(250,116,42)" fg:x="81834" fg:w="20"/><text x="70.9489%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="70.6989%" y="933" width="0.0173%" height="15" fill="rgb(223,202,9)" fg:x="81834" fg:w="20"/><text x="70.9489%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20 samples, 0.02%)</title><rect x="70.6989%" y="917" width="0.0173%" height="15" fill="rgb(242,222,40)" fg:x="81834" fg:w="20"/><text x="70.9489%" y="927.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.01%)</title><rect x="70.7171%" y="981" width="0.0112%" height="15" fill="rgb(229,99,46)" fg:x="81855" fg:w="13"/><text x="70.9671%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="70.7171%" y="965" width="0.0112%" height="15" fill="rgb(225,56,46)" fg:x="81855" fg:w="13"/><text x="70.9671%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="70.7171%" y="949" width="0.0112%" height="15" fill="rgb(227,94,5)" fg:x="81855" fg:w="13"/><text x="70.9671%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="70.7171%" y="933" width="0.0112%" height="15" fill="rgb(205,112,38)" fg:x="81855" fg:w="13"/><text x="70.9671%" y="943.50"></text></g><g><title>___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="70.7171%" y="917" width="0.0112%" height="15" fill="rgb(231,133,46)" fg:x="81855" fg:w="13"/><text x="70.9671%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,907 samples, 4.24%)</title><rect x="66.4994%" y="1013" width="4.2393%" height="15" fill="rgb(217,16,9)" fg:x="76973" fg:w="4907"/><text x="66.7494%" y="1023.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (74 samples, 0.06%)</title><rect x="70.6747%" y="997" width="0.0639%" height="15" fill="rgb(249,173,9)" fg:x="81806" fg:w="74"/><text x="70.9247%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (570 samples, 0.49%)</title><rect x="70.7482%" y="1013" width="0.4924%" height="15" fill="rgb(205,163,53)" fg:x="81891" fg:w="570"/><text x="70.9982%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (188 samples, 0.16%)</title><rect x="71.2441%" y="997" width="0.1624%" height="15" fill="rgb(217,54,41)" fg:x="82465" fg:w="188"/><text x="71.4941%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (508 samples, 0.44%)</title><rect x="71.4125%" y="965" width="0.4389%" height="15" fill="rgb(228,216,12)" fg:x="82660" fg:w="508"/><text x="71.6625%" y="975.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="71.8782%" y="789" width="0.0130%" height="15" fill="rgb(244,228,15)" fg:x="83199" fg:w="15"/><text x="72.1282%" y="799.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (14 samples, 0.01%)</title><rect x="71.9222%" y="757" width="0.0121%" height="15" fill="rgb(221,176,53)" fg:x="83250" fg:w="14"/><text x="72.1722%" y="767.50"></text></g><g><title> (14 samples, 0.01%)</title><rect x="71.9222%" y="741" width="0.0121%" height="15" fill="rgb(205,94,34)" fg:x="83250" fg:w="14"/><text x="72.1722%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (55 samples, 0.05%)</title><rect x="71.8955%" y="789" width="0.0475%" height="15" fill="rgb(213,110,48)" fg:x="83219" fg:w="55"/><text x="72.1455%" y="799.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (44 samples, 0.04%)</title><rect x="71.9050%" y="773" width="0.0380%" height="15" fill="rgb(236,142,28)" fg:x="83230" fg:w="44"/><text x="72.1550%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (99 samples, 0.09%)</title><rect x="71.8765%" y="821" width="0.0855%" height="15" fill="rgb(225,135,29)" fg:x="83197" fg:w="99"/><text x="72.1265%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (99 samples, 0.09%)</title><rect x="71.8765%" y="805" width="0.0855%" height="15" fill="rgb(252,45,31)" fg:x="83197" fg:w="99"/><text x="72.1265%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (100 samples, 0.09%)</title><rect x="71.8765%" y="853" width="0.0864%" height="15" fill="rgb(211,187,50)" fg:x="83197" fg:w="100"/><text x="72.1265%" y="863.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (100 samples, 0.09%)</title><rect x="71.8765%" y="837" width="0.0864%" height="15" fill="rgb(229,109,7)" fg:x="83197" fg:w="100"/><text x="72.1265%" y="847.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (115 samples, 0.10%)</title><rect x="71.8652%" y="869" width="0.0994%" height="15" fill="rgb(251,131,51)" fg:x="83184" fg:w="115"/><text x="72.1152%" y="879.50"></text></g><g><title>rust_dealloc (128 samples, 0.11%)</title><rect x="71.8583%" y="885" width="0.1106%" height="15" fill="rgb(251,180,35)" fg:x="83176" fg:w="128"/><text x="72.1083%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,375 samples, 5.51%)</title><rect x="66.4639%" y="1029" width="5.5076%" height="15" fill="rgb(211,46,32)" fg:x="76932" fg:w="6375"/><text x="66.7139%" y="1039.50">&lt;async_..</text></g><g><title>core::option::Option&lt;T&gt;::map (845 samples, 0.73%)</title><rect x="71.2415%" y="1013" width="0.7300%" height="15" fill="rgb(248,123,17)" fg:x="82462" fg:w="845"/><text x="71.4915%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (654 samples, 0.57%)</title><rect x="71.4065%" y="997" width="0.5650%" height="15" fill="rgb(227,141,18)" fg:x="82653" fg:w="654"/><text x="71.6565%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (654 samples, 0.57%)</title><rect x="71.4065%" y="981" width="0.5650%" height="15" fill="rgb(216,102,9)" fg:x="82653" fg:w="654"/><text x="71.6565%" y="991.50"></text></g><g><title>alloc::alloc::box_free (139 samples, 0.12%)</title><rect x="71.8514%" y="965" width="0.1201%" height="15" fill="rgb(253,47,13)" fg:x="83168" fg:w="139"/><text x="72.1014%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (139 samples, 0.12%)</title><rect x="71.8514%" y="949" width="0.1201%" height="15" fill="rgb(226,93,23)" fg:x="83168" fg:w="139"/><text x="72.1014%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (139 samples, 0.12%)</title><rect x="71.8514%" y="933" width="0.1201%" height="15" fill="rgb(247,104,17)" fg:x="83168" fg:w="139"/><text x="72.1014%" y="943.50"></text></g><g><title>__rg_dealloc (139 samples, 0.12%)</title><rect x="71.8514%" y="917" width="0.1201%" height="15" fill="rgb(233,203,26)" fg:x="83168" fg:w="139"/><text x="72.1014%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (139 samples, 0.12%)</title><rect x="71.8514%" y="901" width="0.1201%" height="15" fill="rgb(244,98,49)" fg:x="83168" fg:w="139"/><text x="72.1014%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,701 samples, 5.79%)</title><rect x="66.4397%" y="1045" width="5.7892%" height="15" fill="rgb(235,134,22)" fg:x="76904" fg:w="6701"/><text x="66.6897%" y="1055.50">&lt;async_..</text></g><g><title>__memcpy_avx_unaligned_erms (298 samples, 0.26%)</title><rect x="71.9715%" y="1029" width="0.2575%" height="15" fill="rgb(221,70,32)" fg:x="83307" fg:w="298"/><text x="72.2215%" y="1039.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,069 samples, 6.11%)</title><rect x="66.4173%" y="1109" width="6.1071%" height="15" fill="rgb(238,15,50)" fg:x="76878" fg:w="7069"/><text x="66.6673%" y="1119.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (7,067 samples, 6.11%)</title><rect x="66.4190%" y="1093" width="6.1054%" height="15" fill="rgb(215,221,48)" fg:x="76880" fg:w="7067"/><text x="66.6690%" y="1103.50">&lt;tremor_..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (7,067 samples, 6.11%)</title><rect x="66.4190%" y="1077" width="6.1054%" height="15" fill="rgb(236,73,3)" fg:x="76880" fg:w="7067"/><text x="66.6690%" y="1087.50">&lt;async_s..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (7,067 samples, 6.11%)</title><rect x="66.4190%" y="1061" width="6.1054%" height="15" fill="rgb(250,107,11)" fg:x="76880" fg:w="7067"/><text x="66.6690%" y="1071.50">&lt;tremor_..</text></g><g><title>__memcpy_avx_unaligned_erms (342 samples, 0.30%)</title><rect x="72.2289%" y="1045" width="0.2955%" height="15" fill="rgb(242,39,14)" fg:x="83605" fg:w="342"/><text x="72.4789%" y="1055.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="72.5892%" y="1029" width="0.0216%" height="15" fill="rgb(248,164,37)" fg:x="84022" fg:w="25"/><text x="72.8392%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.03%)</title><rect x="72.6151%" y="981" width="0.0268%" height="15" fill="rgb(217,60,12)" fg:x="84052" fg:w="31"/><text x="72.8651%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.03%)</title><rect x="72.6151%" y="965" width="0.0268%" height="15" fill="rgb(240,125,29)" fg:x="84052" fg:w="31"/><text x="72.8651%" y="975.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="72.6143%" y="1013" width="0.0285%" height="15" fill="rgb(208,207,28)" fg:x="84051" fg:w="33"/><text x="72.8643%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (32 samples, 0.03%)</title><rect x="72.6151%" y="997" width="0.0276%" height="15" fill="rgb(209,159,27)" fg:x="84052" fg:w="32"/><text x="72.8651%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.03%)</title><rect x="72.6549%" y="933" width="0.0346%" height="15" fill="rgb(251,176,53)" fg:x="84098" fg:w="40"/><text x="72.9049%" y="943.50"></text></g><g><title>__GI___lll_lock_wake (14 samples, 0.01%)</title><rect x="72.6773%" y="917" width="0.0121%" height="15" fill="rgb(211,85,7)" fg:x="84124" fg:w="14"/><text x="72.9273%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.01%)</title><rect x="72.6790%" y="901" width="0.0104%" height="15" fill="rgb(216,64,54)" fg:x="84126" fg:w="12"/><text x="72.9290%" y="911.50"></text></g><g><title>do_syscall_64 (12 samples, 0.01%)</title><rect x="72.6790%" y="885" width="0.0104%" height="15" fill="rgb(217,54,24)" fg:x="84126" fg:w="12"/><text x="72.9290%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (47 samples, 0.04%)</title><rect x="72.6497%" y="1013" width="0.0406%" height="15" fill="rgb(208,206,53)" fg:x="84092" fg:w="47"/><text x="72.8997%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (42 samples, 0.04%)</title><rect x="72.6540%" y="997" width="0.0363%" height="15" fill="rgb(251,74,39)" fg:x="84097" fg:w="42"/><text x="72.9040%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="72.6540%" y="981" width="0.0363%" height="15" fill="rgb(226,47,5)" fg:x="84097" fg:w="42"/><text x="72.9040%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.04%)</title><rect x="72.6549%" y="965" width="0.0354%" height="15" fill="rgb(234,111,33)" fg:x="84098" fg:w="41"/><text x="72.9049%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (41 samples, 0.04%)</title><rect x="72.6549%" y="949" width="0.0354%" height="15" fill="rgb(251,14,10)" fg:x="84098" fg:w="41"/><text x="72.9049%" y="959.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (145 samples, 0.13%)</title><rect x="72.6108%" y="1029" width="0.1253%" height="15" fill="rgb(232,43,0)" fg:x="84047" fg:w="145"/><text x="72.8608%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (51 samples, 0.04%)</title><rect x="72.6920%" y="1013" width="0.0441%" height="15" fill="rgb(222,68,43)" fg:x="84141" fg:w="51"/><text x="72.9420%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.04%)</title><rect x="72.6929%" y="997" width="0.0432%" height="15" fill="rgb(217,24,23)" fg:x="84142" fg:w="50"/><text x="72.9429%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (49 samples, 0.04%)</title><rect x="72.6937%" y="981" width="0.0423%" height="15" fill="rgb(229,209,14)" fg:x="84143" fg:w="49"/><text x="72.9437%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (48 samples, 0.04%)</title><rect x="72.6946%" y="965" width="0.0415%" height="15" fill="rgb(250,149,48)" fg:x="84144" fg:w="48"/><text x="72.9446%" y="975.50"></text></g><g><title>___pthread_mutex_lock (48 samples, 0.04%)</title><rect x="72.6946%" y="949" width="0.0415%" height="15" fill="rgb(210,120,37)" fg:x="84144" fg:w="48"/><text x="72.9446%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (71 samples, 0.06%)</title><rect x="72.7361%" y="1029" width="0.0613%" height="15" fill="rgb(210,21,8)" fg:x="84192" fg:w="71"/><text x="72.9861%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (63 samples, 0.05%)</title><rect x="72.8156%" y="1013" width="0.0544%" height="15" fill="rgb(243,145,7)" fg:x="84284" fg:w="63"/><text x="73.0656%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (278 samples, 0.24%)</title><rect x="72.9676%" y="997" width="0.2402%" height="15" fill="rgb(238,178,32)" fg:x="84460" fg:w="278"/><text x="73.2176%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (38 samples, 0.03%)</title><rect x="73.3071%" y="981" width="0.0328%" height="15" fill="rgb(222,4,10)" fg:x="84853" fg:w="38"/><text x="73.5571%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (69 samples, 0.06%)</title><rect x="73.3408%" y="981" width="0.0596%" height="15" fill="rgb(239,7,37)" fg:x="84892" fg:w="69"/><text x="73.5908%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (61 samples, 0.05%)</title><rect x="73.3477%" y="965" width="0.0527%" height="15" fill="rgb(215,31,37)" fg:x="84900" fg:w="61"/><text x="73.5977%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (61 samples, 0.05%)</title><rect x="73.3477%" y="949" width="0.0527%" height="15" fill="rgb(224,83,33)" fg:x="84900" fg:w="61"/><text x="73.5977%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (61 samples, 0.05%)</title><rect x="73.3477%" y="933" width="0.0527%" height="15" fill="rgb(239,55,3)" fg:x="84900" fg:w="61"/><text x="73.5977%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (22 samples, 0.02%)</title><rect x="73.4004%" y="981" width="0.0190%" height="15" fill="rgb(247,92,11)" fg:x="84961" fg:w="22"/><text x="73.6504%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (200 samples, 0.17%)</title><rect x="73.4194%" y="981" width="0.1728%" height="15" fill="rgb(239,200,7)" fg:x="84983" fg:w="200"/><text x="73.6694%" y="991.50"></text></g><g><title>core::ptr::write (200 samples, 0.17%)</title><rect x="73.4194%" y="965" width="0.1728%" height="15" fill="rgb(227,115,8)" fg:x="84983" fg:w="200"/><text x="73.6694%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (189 samples, 0.16%)</title><rect x="73.4289%" y="949" width="0.1633%" height="15" fill="rgb(215,189,27)" fg:x="84994" fg:w="189"/><text x="73.6789%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (204 samples, 0.18%)</title><rect x="73.5922%" y="981" width="0.1762%" height="15" fill="rgb(251,216,39)" fg:x="85183" fg:w="204"/><text x="73.8422%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (204 samples, 0.18%)</title><rect x="73.5922%" y="965" width="0.1762%" height="15" fill="rgb(207,29,47)" fg:x="85183" fg:w="204"/><text x="73.8422%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (369 samples, 0.32%)</title><rect x="73.7685%" y="981" width="0.3188%" height="15" fill="rgb(210,71,34)" fg:x="85387" fg:w="369"/><text x="74.0185%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (369 samples, 0.32%)</title><rect x="73.7685%" y="965" width="0.3188%" height="15" fill="rgb(253,217,51)" fg:x="85387" fg:w="369"/><text x="74.0185%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,413 samples, 1.22%)</title><rect x="72.8700%" y="1013" width="1.2207%" height="15" fill="rgb(222,117,46)" fg:x="84347" fg:w="1413"/><text x="73.1200%" y="1023.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,022 samples, 0.88%)</title><rect x="73.2078%" y="997" width="0.8829%" height="15" fill="rgb(226,132,6)" fg:x="84738" fg:w="1022"/><text x="73.4578%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="74.1063%" y="997" width="0.0138%" height="15" fill="rgb(254,145,51)" fg:x="85778" fg:w="16"/><text x="74.3563%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.01%)</title><rect x="74.1063%" y="981" width="0.0138%" height="15" fill="rgb(231,199,27)" fg:x="85778" fg:w="16"/><text x="74.3563%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="74.1063%" y="965" width="0.0138%" height="15" fill="rgb(245,158,14)" fg:x="85778" fg:w="16"/><text x="74.3563%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="74.1063%" y="949" width="0.0138%" height="15" fill="rgb(240,113,14)" fg:x="85778" fg:w="16"/><text x="74.3563%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.01%)</title><rect x="74.1063%" y="933" width="0.0138%" height="15" fill="rgb(210,20,13)" fg:x="85778" fg:w="16"/><text x="74.3563%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.01%)</title><rect x="74.1063%" y="917" width="0.0138%" height="15" fill="rgb(241,144,13)" fg:x="85778" fg:w="16"/><text x="74.3563%" y="927.50"></text></g><g><title>ksys_write (14 samples, 0.01%)</title><rect x="74.1425%" y="757" width="0.0121%" height="15" fill="rgb(235,43,34)" fg:x="85820" fg:w="14"/><text x="74.3925%" y="767.50"></text></g><g><title>vfs_write (12 samples, 0.01%)</title><rect x="74.1443%" y="741" width="0.0104%" height="15" fill="rgb(208,36,20)" fg:x="85822" fg:w="12"/><text x="74.3943%" y="751.50"></text></g><g><title>eventfd_write (12 samples, 0.01%)</title><rect x="74.1443%" y="725" width="0.0104%" height="15" fill="rgb(239,204,10)" fg:x="85822" fg:w="12"/><text x="74.3943%" y="735.50"></text></g><g><title>__wake_up_common (12 samples, 0.01%)</title><rect x="74.1443%" y="709" width="0.0104%" height="15" fill="rgb(217,84,43)" fg:x="85822" fg:w="12"/><text x="74.3943%" y="719.50"></text></g><g><title>ep_poll_callback (12 samples, 0.01%)</title><rect x="74.1443%" y="693" width="0.0104%" height="15" fill="rgb(241,170,50)" fg:x="85822" fg:w="12"/><text x="74.3943%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::notify (16 samples, 0.01%)</title><rect x="74.1425%" y="853" width="0.0138%" height="15" fill="rgb(226,205,29)" fg:x="85820" fg:w="16"/><text x="74.3925%" y="863.50"></text></g><g><title>polling::Poller::notify (16 samples, 0.01%)</title><rect x="74.1425%" y="837" width="0.0138%" height="15" fill="rgb(233,113,1)" fg:x="85820" fg:w="16"/><text x="74.3925%" y="847.50"></text></g><g><title>polling::epoll::Poller::notify (16 samples, 0.01%)</title><rect x="74.1425%" y="821" width="0.0138%" height="15" fill="rgb(253,98,13)" fg:x="85820" fg:w="16"/><text x="74.3925%" y="831.50"></text></g><g><title>__GI___write (16 samples, 0.01%)</title><rect x="74.1425%" y="805" width="0.0138%" height="15" fill="rgb(211,115,12)" fg:x="85820" fg:w="16"/><text x="74.3925%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="74.1425%" y="789" width="0.0138%" height="15" fill="rgb(208,12,16)" fg:x="85820" fg:w="16"/><text x="74.3925%" y="799.50"></text></g><g><title>do_syscall_64 (16 samples, 0.01%)</title><rect x="74.1425%" y="773" width="0.0138%" height="15" fill="rgb(237,193,54)" fg:x="85820" fg:w="16"/><text x="74.3925%" y="783.50"></text></g><g><title>select_task_rq_fair (12 samples, 0.01%)</title><rect x="74.2117%" y="645" width="0.0104%" height="15" fill="rgb(243,22,42)" fg:x="85900" fg:w="12"/><text x="74.4617%" y="655.50"></text></g><g><title>enqueue_task_fair (17 samples, 0.01%)</title><rect x="74.2246%" y="613" width="0.0147%" height="15" fill="rgb(233,151,36)" fg:x="85915" fg:w="17"/><text x="74.4746%" y="623.50"></text></g><g><title>ttwu_do_activate (42 samples, 0.04%)</title><rect x="74.2220%" y="645" width="0.0363%" height="15" fill="rgb(237,57,45)" fg:x="85912" fg:w="42"/><text x="74.4720%" y="655.50"></text></g><g><title>enqueue_task (39 samples, 0.03%)</title><rect x="74.2246%" y="629" width="0.0337%" height="15" fill="rgb(221,88,17)" fg:x="85915" fg:w="39"/><text x="74.4746%" y="639.50"></text></g><g><title>psi_task_change (20 samples, 0.02%)</title><rect x="74.2410%" y="613" width="0.0173%" height="15" fill="rgb(230,79,15)" fg:x="85934" fg:w="20"/><text x="74.4910%" y="623.50"></text></g><g><title>psi_group_change (18 samples, 0.02%)</title><rect x="74.2428%" y="597" width="0.0156%" height="15" fill="rgb(213,57,13)" fg:x="85936" fg:w="18"/><text x="74.4928%" y="607.50"></text></g><g><title>__x64_sys_futex (115 samples, 0.10%)</title><rect x="74.1754%" y="725" width="0.0994%" height="15" fill="rgb(222,116,39)" fg:x="85858" fg:w="115"/><text x="74.4254%" y="735.50"></text></g><g><title>do_futex (113 samples, 0.10%)</title><rect x="74.1771%" y="709" width="0.0976%" height="15" fill="rgb(245,107,2)" fg:x="85860" fg:w="113"/><text x="74.4271%" y="719.50"></text></g><g><title>futex_wake (110 samples, 0.10%)</title><rect x="74.1797%" y="693" width="0.0950%" height="15" fill="rgb(238,1,10)" fg:x="85863" fg:w="110"/><text x="74.4297%" y="703.50"></text></g><g><title>wake_up_q (83 samples, 0.07%)</title><rect x="74.2030%" y="677" width="0.0717%" height="15" fill="rgb(249,4,48)" fg:x="85890" fg:w="83"/><text x="74.4530%" y="687.50"></text></g><g><title>try_to_wake_up (79 samples, 0.07%)</title><rect x="74.2065%" y="661" width="0.0683%" height="15" fill="rgb(223,151,18)" fg:x="85894" fg:w="79"/><text x="74.4565%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (28 samples, 0.02%)</title><rect x="74.2756%" y="725" width="0.0242%" height="15" fill="rgb(227,65,43)" fg:x="85974" fg:w="28"/><text x="74.5256%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (149 samples, 0.13%)</title><rect x="74.1737%" y="757" width="0.1287%" height="15" fill="rgb(218,40,45)" fg:x="85856" fg:w="149"/><text x="74.4237%" y="767.50"></text></g><g><title>do_syscall_64 (148 samples, 0.13%)</title><rect x="74.1745%" y="741" width="0.1279%" height="15" fill="rgb(252,121,31)" fg:x="85857" fg:w="148"/><text x="74.4245%" y="751.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (163 samples, 0.14%)</title><rect x="74.1641%" y="821" width="0.1408%" height="15" fill="rgb(219,158,43)" fg:x="85845" fg:w="163"/><text x="74.4141%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (163 samples, 0.14%)</title><rect x="74.1641%" y="805" width="0.1408%" height="15" fill="rgb(231,162,42)" fg:x="85845" fg:w="163"/><text x="74.4141%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (163 samples, 0.14%)</title><rect x="74.1641%" y="789" width="0.1408%" height="15" fill="rgb(217,179,25)" fg:x="85845" fg:w="163"/><text x="74.4141%" y="799.50"></text></g><g><title>__GI___pthread_cond_signal (163 samples, 0.14%)</title><rect x="74.1641%" y="773" width="0.1408%" height="15" fill="rgb(206,212,31)" fg:x="85845" fg:w="163"/><text x="74.4141%" y="783.50"></text></g><g><title>parking::Unparker::unpark (180 samples, 0.16%)</title><rect x="74.1564%" y="853" width="0.1555%" height="15" fill="rgb(235,144,12)" fg:x="85836" fg:w="180"/><text x="74.4064%" y="863.50"></text></g><g><title>parking::Inner::unpark (175 samples, 0.15%)</title><rect x="74.1607%" y="837" width="0.1512%" height="15" fill="rgb(213,51,10)" fg:x="85841" fg:w="175"/><text x="74.4107%" y="847.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (201 samples, 0.17%)</title><rect x="74.1417%" y="869" width="0.1737%" height="15" fill="rgb(231,145,14)" fg:x="85819" fg:w="201"/><text x="74.3917%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (203 samples, 0.18%)</title><rect x="74.1417%" y="901" width="0.1754%" height="15" fill="rgb(235,15,28)" fg:x="85819" fg:w="203"/><text x="74.3917%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (203 samples, 0.18%)</title><rect x="74.1417%" y="885" width="0.1754%" height="15" fill="rgb(237,206,10)" fg:x="85819" fg:w="203"/><text x="74.3917%" y="895.50"></text></g><g><title>async_executor::State::notify (214 samples, 0.18%)</title><rect x="74.1339%" y="917" width="0.1849%" height="15" fill="rgb(236,227,27)" fg:x="85810" fg:w="214"/><text x="74.3839%" y="927.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (226 samples, 0.20%)</title><rect x="74.1339%" y="933" width="0.1952%" height="15" fill="rgb(246,83,35)" fg:x="85810" fg:w="226"/><text x="74.3839%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="74.3188%" y="917" width="0.0104%" height="15" fill="rgb(220,136,24)" fg:x="86024" fg:w="12"/><text x="74.5688%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="74.3188%" y="901" width="0.0104%" height="15" fill="rgb(217,3,25)" fg:x="86024" fg:w="12"/><text x="74.5688%" y="911.50"></text></g><g><title>event_listener::List::notify (233 samples, 0.20%)</title><rect x="74.1322%" y="997" width="0.2013%" height="15" fill="rgb(239,24,14)" fg:x="85808" fg:w="233"/><text x="74.3822%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (233 samples, 0.20%)</title><rect x="74.1322%" y="981" width="0.2013%" height="15" fill="rgb(244,16,53)" fg:x="85808" fg:w="233"/><text x="74.3822%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (233 samples, 0.20%)</title><rect x="74.1322%" y="965" width="0.2013%" height="15" fill="rgb(208,175,44)" fg:x="85808" fg:w="233"/><text x="74.3822%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (231 samples, 0.20%)</title><rect x="74.1339%" y="949" width="0.1996%" height="15" fill="rgb(252,18,48)" fg:x="85810" fg:w="231"/><text x="74.3839%" y="959.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,861 samples, 2.47%)</title><rect x="72.7974%" y="1029" width="2.4717%" height="15" fill="rgb(234,199,32)" fg:x="84263" fg:w="2861"/><text x="73.0474%" y="1039.50">as..</text></g><g><title>event_listener::Event::notify (1,364 samples, 1.18%)</title><rect x="74.0907%" y="1013" width="1.1784%" height="15" fill="rgb(225,77,54)" fg:x="85760" fg:w="1364"/><text x="74.3407%" y="1023.50"></text></g><g><title>event_listener::full_fence (1,083 samples, 0.94%)</title><rect x="74.3335%" y="997" width="0.9356%" height="15" fill="rgb(225,42,25)" fg:x="86041" fg:w="1083"/><text x="74.5835%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,068 samples, 0.92%)</title><rect x="74.3464%" y="981" width="0.9227%" height="15" fill="rgb(242,227,46)" fg:x="86056" fg:w="1068"/><text x="74.5964%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,068 samples, 0.92%)</title><rect x="74.3464%" y="965" width="0.9227%" height="15" fill="rgb(246,197,35)" fg:x="86056" fg:w="1068"/><text x="74.5964%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (397 samples, 0.34%)</title><rect x="75.2778%" y="1029" width="0.3430%" height="15" fill="rgb(215,159,26)" fg:x="87134" fg:w="397"/><text x="75.5278%" y="1039.50"></text></g><g><title>core::mem::replace (397 samples, 0.34%)</title><rect x="75.2778%" y="1013" width="0.3430%" height="15" fill="rgb(212,194,50)" fg:x="87134" fg:w="397"/><text x="75.5278%" y="1023.50"></text></g><g><title>core::ptr::read (388 samples, 0.34%)</title><rect x="75.2855%" y="997" width="0.3352%" height="15" fill="rgb(246,132,1)" fg:x="87143" fg:w="388"/><text x="75.5355%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (369 samples, 0.32%)</title><rect x="75.3019%" y="981" width="0.3188%" height="15" fill="rgb(217,71,7)" fg:x="87162" fg:w="369"/><text x="75.5519%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (353 samples, 0.30%)</title><rect x="75.6207%" y="1029" width="0.3050%" height="15" fill="rgb(252,59,32)" fg:x="87531" fg:w="353"/><text x="75.8707%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (338 samples, 0.29%)</title><rect x="75.6337%" y="1013" width="0.2920%" height="15" fill="rgb(253,204,25)" fg:x="87546" fg:w="338"/><text x="75.8837%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (61 samples, 0.05%)</title><rect x="75.9343%" y="1013" width="0.0527%" height="15" fill="rgb(232,21,16)" fg:x="87894" fg:w="61"/><text x="76.1843%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (61 samples, 0.05%)</title><rect x="75.9343%" y="997" width="0.0527%" height="15" fill="rgb(248,90,29)" fg:x="87894" fg:w="61"/><text x="76.1843%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (61 samples, 0.05%)</title><rect x="75.9343%" y="981" width="0.0527%" height="15" fill="rgb(249,223,7)" fg:x="87894" fg:w="61"/><text x="76.1843%" y="991.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (51 samples, 0.04%)</title><rect x="75.9888%" y="933" width="0.0441%" height="15" fill="rgb(231,119,42)" fg:x="87957" fg:w="51"/><text x="76.2388%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (56 samples, 0.05%)</title><rect x="75.9870%" y="1013" width="0.0484%" height="15" fill="rgb(215,41,35)" fg:x="87955" fg:w="56"/><text x="76.2370%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (55 samples, 0.05%)</title><rect x="75.9879%" y="997" width="0.0475%" height="15" fill="rgb(220,44,45)" fg:x="87956" fg:w="55"/><text x="76.2379%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="75.9879%" y="981" width="0.0475%" height="15" fill="rgb(253,197,36)" fg:x="87956" fg:w="55"/><text x="76.2379%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (54 samples, 0.05%)</title><rect x="75.9888%" y="965" width="0.0467%" height="15" fill="rgb(245,225,54)" fg:x="87957" fg:w="54"/><text x="76.2388%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (54 samples, 0.05%)</title><rect x="75.9888%" y="949" width="0.0467%" height="15" fill="rgb(239,94,37)" fg:x="87957" fg:w="54"/><text x="76.2388%" y="959.50"></text></g><g><title>event_listener::Inner::lock (42 samples, 0.04%)</title><rect x="76.0380%" y="1013" width="0.0363%" height="15" fill="rgb(242,217,10)" fg:x="88014" fg:w="42"/><text x="76.2880%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42 samples, 0.04%)</title><rect x="76.0380%" y="997" width="0.0363%" height="15" fill="rgb(250,193,7)" fg:x="88014" fg:w="42"/><text x="76.2880%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.03%)</title><rect x="76.0406%" y="981" width="0.0337%" height="15" fill="rgb(230,104,19)" fg:x="88017" fg:w="39"/><text x="76.2906%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (39 samples, 0.03%)</title><rect x="76.0406%" y="965" width="0.0337%" height="15" fill="rgb(230,181,4)" fg:x="88017" fg:w="39"/><text x="76.2906%" y="975.50"></text></g><g><title>___pthread_mutex_lock (37 samples, 0.03%)</title><rect x="76.0423%" y="949" width="0.0320%" height="15" fill="rgb(216,219,49)" fg:x="88019" fg:w="37"/><text x="76.2923%" y="959.50"></text></g><g><title>event_listener::Event::listen (199 samples, 0.17%)</title><rect x="75.9309%" y="1029" width="0.1719%" height="15" fill="rgb(254,144,0)" fg:x="87890" fg:w="199"/><text x="76.1809%" y="1039.50"></text></g><g><title>event_listener::full_fence (25 samples, 0.02%)</title><rect x="76.0812%" y="1013" width="0.0216%" height="15" fill="rgb(205,209,38)" fg:x="88064" fg:w="25"/><text x="76.3312%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (25 samples, 0.02%)</title><rect x="76.0812%" y="997" width="0.0216%" height="15" fill="rgb(240,21,42)" fg:x="88064" fg:w="25"/><text x="76.3312%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="76.0812%" y="981" width="0.0216%" height="15" fill="rgb(241,132,3)" fg:x="88064" fg:w="25"/><text x="76.3312%" y="991.50"></text></g><g><title>_raw_spin_lock (19 samples, 0.02%)</title><rect x="76.2203%" y="821" width="0.0164%" height="15" fill="rgb(225,14,2)" fg:x="88225" fg:w="19"/><text x="76.4703%" y="831.50"></text></g><g><title>futex_hash (13 samples, 0.01%)</title><rect x="76.2402%" y="821" width="0.0112%" height="15" fill="rgb(210,141,35)" fg:x="88248" fg:w="13"/><text x="76.4902%" y="831.50"></text></g><g><title>__x64_sys_futex (91 samples, 0.08%)</title><rect x="76.1754%" y="869" width="0.0786%" height="15" fill="rgb(251,14,44)" fg:x="88173" fg:w="91"/><text x="76.4254%" y="879.50"></text></g><g><title>do_futex (78 samples, 0.07%)</title><rect x="76.1866%" y="853" width="0.0674%" height="15" fill="rgb(247,48,18)" fg:x="88186" fg:w="78"/><text x="76.4366%" y="863.50"></text></g><g><title>futex_wake (72 samples, 0.06%)</title><rect x="76.1918%" y="837" width="0.0622%" height="15" fill="rgb(225,0,40)" fg:x="88192" fg:w="72"/><text x="76.4418%" y="847.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.01%)</title><rect x="76.3870%" y="853" width="0.0112%" height="15" fill="rgb(221,31,33)" fg:x="88418" fg:w="13"/><text x="76.6370%" y="863.50"></text></g><g><title>syscall_exit_to_user_mode (175 samples, 0.15%)</title><rect x="76.2575%" y="869" width="0.1512%" height="15" fill="rgb(237,42,40)" fg:x="88268" fg:w="175"/><text x="76.5075%" y="879.50"></text></g><g><title>syscall_exit_work (12 samples, 0.01%)</title><rect x="76.3983%" y="853" width="0.0104%" height="15" fill="rgb(233,51,29)" fg:x="88431" fg:w="12"/><text x="76.6483%" y="863.50"></text></g><g><title>__audit_syscall_entry (15 samples, 0.01%)</title><rect x="76.4164%" y="853" width="0.0130%" height="15" fill="rgb(226,58,20)" fg:x="88452" fg:w="15"/><text x="76.6664%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (308 samples, 0.27%)</title><rect x="76.1641%" y="901" width="0.2661%" height="15" fill="rgb(208,98,7)" fg:x="88160" fg:w="308"/><text x="76.4141%" y="911.50"></text></g><g><title>do_syscall_64 (306 samples, 0.26%)</title><rect x="76.1659%" y="885" width="0.2644%" height="15" fill="rgb(228,143,44)" fg:x="88162" fg:w="306"/><text x="76.4159%" y="895.50"></text></g><g><title>syscall_trace_enter.constprop.0 (25 samples, 0.02%)</title><rect x="76.4086%" y="869" width="0.0216%" height="15" fill="rgb(246,55,38)" fg:x="88443" fg:w="25"/><text x="76.6586%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (372 samples, 0.32%)</title><rect x="76.1123%" y="933" width="0.3214%" height="15" fill="rgb(247,87,16)" fg:x="88100" fg:w="372"/><text x="76.3623%" y="943.50"></text></g><g><title>__GI___lll_lock_wake (339 samples, 0.29%)</title><rect x="76.1408%" y="917" width="0.2929%" height="15" fill="rgb(234,129,42)" fg:x="88133" fg:w="339"/><text x="76.3908%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (379 samples, 0.33%)</title><rect x="76.1089%" y="1013" width="0.3274%" height="15" fill="rgb(220,82,16)" fg:x="88096" fg:w="379"/><text x="76.3589%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (378 samples, 0.33%)</title><rect x="76.1097%" y="997" width="0.3266%" height="15" fill="rgb(211,88,4)" fg:x="88097" fg:w="378"/><text x="76.3597%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (378 samples, 0.33%)</title><rect x="76.1097%" y="981" width="0.3266%" height="15" fill="rgb(248,151,21)" fg:x="88097" fg:w="378"/><text x="76.3597%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (378 samples, 0.33%)</title><rect x="76.1097%" y="965" width="0.3266%" height="15" fill="rgb(238,163,6)" fg:x="88097" fg:w="378"/><text x="76.3597%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (375 samples, 0.32%)</title><rect x="76.1123%" y="949" width="0.3240%" height="15" fill="rgb(209,183,11)" fg:x="88100" fg:w="375"/><text x="76.3623%" y="959.50"></text></g><g><title>__entry_text_start (12 samples, 0.01%)</title><rect x="76.5097%" y="917" width="0.0104%" height="15" fill="rgb(219,37,20)" fg:x="88560" fg:w="12"/><text x="76.7597%" y="927.50"></text></g><g><title>__futex_queue (20 samples, 0.02%)</title><rect x="76.6229%" y="821" width="0.0173%" height="15" fill="rgb(210,158,4)" fg:x="88691" fg:w="20"/><text x="76.8729%" y="831.50"></text></g><g><title>plist_add (15 samples, 0.01%)</title><rect x="76.6272%" y="805" width="0.0130%" height="15" fill="rgb(221,167,53)" fg:x="88696" fg:w="15"/><text x="76.8772%" y="815.50"></text></g><g><title>__perf_event_task_sched_out (51 samples, 0.04%)</title><rect x="76.7024%" y="789" width="0.0441%" height="15" fill="rgb(237,151,45)" fg:x="88783" fg:w="51"/><text x="76.9524%" y="799.50"></text></g><g><title>x86_pmu_disable (12 samples, 0.01%)</title><rect x="76.7361%" y="773" width="0.0104%" height="15" fill="rgb(231,39,3)" fg:x="88822" fg:w="12"/><text x="76.9861%" y="783.50"></text></g><g><title>update_cfs_group (14 samples, 0.01%)</title><rect x="76.8346%" y="757" width="0.0121%" height="15" fill="rgb(212,167,28)" fg:x="88936" fg:w="14"/><text x="77.0846%" y="767.50"></text></g><g><title>__calc_delta (23 samples, 0.02%)</title><rect x="76.8838%" y="741" width="0.0199%" height="15" fill="rgb(232,178,8)" fg:x="88993" fg:w="23"/><text x="77.1338%" y="751.50"></text></g><g><title>cpuacct_charge (28 samples, 0.02%)</title><rect x="76.9132%" y="741" width="0.0242%" height="15" fill="rgb(225,151,20)" fg:x="89027" fg:w="28"/><text x="77.1632%" y="751.50"></text></g><g><title>update_curr (113 samples, 0.10%)</title><rect x="76.8467%" y="757" width="0.0976%" height="15" fill="rgb(238,3,37)" fg:x="88950" fg:w="113"/><text x="77.0967%" y="767.50"></text></g><g><title>__update_load_avg_cfs_rq (12 samples, 0.01%)</title><rect x="76.9598%" y="741" width="0.0104%" height="15" fill="rgb(251,147,42)" fg:x="89081" fg:w="12"/><text x="77.2098%" y="751.50"></text></g><g><title>dequeue_entity (216 samples, 0.19%)</title><rect x="76.7957%" y="773" width="0.1866%" height="15" fill="rgb(208,173,10)" fg:x="88891" fg:w="216"/><text x="77.0457%" y="783.50"></text></g><g><title>update_load_avg (44 samples, 0.04%)</title><rect x="76.9443%" y="757" width="0.0380%" height="15" fill="rgb(246,225,4)" fg:x="89063" fg:w="44"/><text x="77.1943%" y="767.50"></text></g><g><title>__update_load_avg_se (14 samples, 0.01%)</title><rect x="76.9702%" y="741" width="0.0121%" height="15" fill="rgb(248,102,6)" fg:x="89093" fg:w="14"/><text x="77.2202%" y="751.50"></text></g><g><title>dequeue_task_fair (264 samples, 0.23%)</title><rect x="76.7551%" y="789" width="0.2281%" height="15" fill="rgb(232,6,21)" fg:x="88844" fg:w="264"/><text x="77.0051%" y="799.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (36 samples, 0.03%)</title><rect x="77.0194%" y="757" width="0.0311%" height="15" fill="rgb(221,179,22)" fg:x="89150" fg:w="36"/><text x="77.2694%" y="767.50"></text></g><g><title>native_write_msr (34 samples, 0.03%)</title><rect x="77.0212%" y="741" width="0.0294%" height="15" fill="rgb(252,50,20)" fg:x="89152" fg:w="34"/><text x="77.2712%" y="751.50"></text></g><g><title>__perf_event_task_sched_in (43 samples, 0.04%)</title><rect x="77.0177%" y="773" width="0.0371%" height="15" fill="rgb(222,56,38)" fg:x="89148" fg:w="43"/><text x="77.2677%" y="783.50"></text></g><g><title>finish_task_switch.isra.0 (86 samples, 0.07%)</title><rect x="76.9832%" y="789" width="0.0743%" height="15" fill="rgb(206,193,29)" fg:x="89108" fg:w="86"/><text x="77.2332%" y="799.50"></text></g><g><title>pick_next_task_fair (37 samples, 0.03%)</title><rect x="77.0583%" y="789" width="0.0320%" height="15" fill="rgb(239,192,45)" fg:x="89195" fg:w="37"/><text x="77.3083%" y="799.50"></text></g><g><title>newidle_balance (28 samples, 0.02%)</title><rect x="77.0661%" y="773" width="0.0242%" height="15" fill="rgb(254,18,36)" fg:x="89204" fg:w="28"/><text x="77.3161%" y="783.50"></text></g><g><title>pick_next_task_idle (16 samples, 0.01%)</title><rect x="77.0903%" y="789" width="0.0138%" height="15" fill="rgb(221,127,11)" fg:x="89232" fg:w="16"/><text x="77.3403%" y="799.50"></text></g><g><title>set_next_task_idle (16 samples, 0.01%)</title><rect x="77.0903%" y="773" width="0.0138%" height="15" fill="rgb(234,146,35)" fg:x="89232" fg:w="16"/><text x="77.3403%" y="783.50"></text></g><g><title>__update_idle_core (14 samples, 0.01%)</title><rect x="77.0920%" y="757" width="0.0121%" height="15" fill="rgb(254,201,37)" fg:x="89234" fg:w="14"/><text x="77.3420%" y="767.50"></text></g><g><title>iterate_groups (17 samples, 0.01%)</title><rect x="77.1153%" y="773" width="0.0147%" height="15" fill="rgb(211,202,23)" fg:x="89261" fg:w="17"/><text x="77.3653%" y="783.50"></text></g><g><title>psi_group_change (149 samples, 0.13%)</title><rect x="77.1317%" y="773" width="0.1287%" height="15" fill="rgb(237,91,2)" fg:x="89280" fg:w="149"/><text x="77.3817%" y="783.50"></text></g><g><title>psi_task_switch (194 samples, 0.17%)</title><rect x="77.1041%" y="789" width="0.1676%" height="15" fill="rgb(226,228,36)" fg:x="89248" fg:w="194"/><text x="77.3541%" y="799.50"></text></g><g><title>sched_clock_cpu (13 samples, 0.01%)</title><rect x="77.2605%" y="773" width="0.0112%" height="15" fill="rgb(213,63,50)" fg:x="89429" fg:w="13"/><text x="77.5105%" y="783.50"></text></g><g><title>put_prev_task_fair (32 samples, 0.03%)</title><rect x="77.2717%" y="789" width="0.0276%" height="15" fill="rgb(235,194,19)" fg:x="89442" fg:w="32"/><text x="77.5217%" y="799.50"></text></g><g><title>put_prev_entity (16 samples, 0.01%)</title><rect x="77.2855%" y="773" width="0.0138%" height="15" fill="rgb(207,204,18)" fg:x="89458" fg:w="16"/><text x="77.5355%" y="783.50"></text></g><g><title>raw_spin_rq_lock_nested (13 samples, 0.01%)</title><rect x="77.2994%" y="789" width="0.0112%" height="15" fill="rgb(248,8,7)" fg:x="89474" fg:w="13"/><text x="77.5494%" y="799.50"></text></g><g><title>sched_clock_cpu (12 samples, 0.01%)</title><rect x="77.3201%" y="773" width="0.0104%" height="15" fill="rgb(223,145,47)" fg:x="89498" fg:w="12"/><text x="77.5701%" y="783.50"></text></g><g><title>futex_wait_queue (848 samples, 0.73%)</title><rect x="76.6117%" y="837" width="0.7326%" height="15" fill="rgb(228,84,11)" fg:x="88678" fg:w="848"/><text x="76.8617%" y="847.50"></text></g><g><title>schedule (814 samples, 0.70%)</title><rect x="76.6410%" y="821" width="0.7032%" height="15" fill="rgb(218,76,45)" fg:x="88712" fg:w="814"/><text x="76.8910%" y="831.50"></text></g><g><title>__schedule (809 samples, 0.70%)</title><rect x="76.6454%" y="805" width="0.6989%" height="15" fill="rgb(223,80,15)" fg:x="88717" fg:w="809"/><text x="76.8954%" y="815.50"></text></g><g><title>update_rq_clock (35 samples, 0.03%)</title><rect x="77.3140%" y="789" width="0.0302%" height="15" fill="rgb(219,218,33)" fg:x="89491" fg:w="35"/><text x="77.5640%" y="799.50"></text></g><g><title>update_irq_load_avg (16 samples, 0.01%)</title><rect x="77.3305%" y="773" width="0.0138%" height="15" fill="rgb(208,51,11)" fg:x="89510" fg:w="16"/><text x="77.5805%" y="783.50"></text></g><g><title>futex_get_value_locked (19 samples, 0.02%)</title><rect x="77.3529%" y="821" width="0.0164%" height="15" fill="rgb(229,165,39)" fg:x="89536" fg:w="19"/><text x="77.6029%" y="831.50"></text></g><g><title>__get_user_nocheck_4 (15 samples, 0.01%)</title><rect x="77.3564%" y="805" width="0.0130%" height="15" fill="rgb(241,100,24)" fg:x="89540" fg:w="15"/><text x="77.6064%" y="815.50"></text></g><g><title>futex_q_lock (36 samples, 0.03%)</title><rect x="77.3693%" y="821" width="0.0311%" height="15" fill="rgb(228,14,23)" fg:x="89555" fg:w="36"/><text x="77.6193%" y="831.50"></text></g><g><title>__x64_sys_futex (1,000 samples, 0.86%)</title><rect x="76.5451%" y="885" width="0.8639%" height="15" fill="rgb(247,116,52)" fg:x="88601" fg:w="1000"/><text x="76.7951%" y="895.50"></text></g><g><title>do_futex (977 samples, 0.84%)</title><rect x="76.5650%" y="869" width="0.8441%" height="15" fill="rgb(216,149,33)" fg:x="88624" fg:w="977"/><text x="76.8150%" y="879.50"></text></g><g><title>futex_wait (971 samples, 0.84%)</title><rect x="76.5702%" y="853" width="0.8389%" height="15" fill="rgb(238,142,29)" fg:x="88630" fg:w="971"/><text x="76.8202%" y="863.50"></text></g><g><title>futex_wait_setup (75 samples, 0.06%)</title><rect x="77.3443%" y="837" width="0.0648%" height="15" fill="rgb(224,83,40)" fg:x="89526" fg:w="75"/><text x="77.5943%" y="847.50"></text></g><g><title>__get_user_8 (25 samples, 0.02%)</title><rect x="77.5680%" y="837" width="0.0216%" height="15" fill="rgb(234,165,11)" fg:x="89785" fg:w="25"/><text x="77.8180%" y="847.50"></text></g><g><title>__rseq_handle_notify_resume (50 samples, 0.04%)</title><rect x="77.5551%" y="853" width="0.0432%" height="15" fill="rgb(215,96,23)" fg:x="89770" fg:w="50"/><text x="77.8051%" y="863.50"></text></g><g><title>exit_to_user_mode_prepare (92 samples, 0.08%)</title><rect x="77.5335%" y="869" width="0.0795%" height="15" fill="rgb(233,179,26)" fg:x="89745" fg:w="92"/><text x="77.7835%" y="879.50"></text></g><g><title>syscall_exit_to_user_mode (244 samples, 0.21%)</title><rect x="77.4177%" y="885" width="0.2108%" height="15" fill="rgb(225,129,33)" fg:x="89611" fg:w="244"/><text x="77.6677%" y="895.50"></text></g><g><title>syscall_exit_work (18 samples, 0.02%)</title><rect x="77.6130%" y="869" width="0.0156%" height="15" fill="rgb(237,49,13)" fg:x="89837" fg:w="18"/><text x="77.8630%" y="879.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,298 samples, 1.12%)</title><rect x="76.5210%" y="917" width="1.1214%" height="15" fill="rgb(211,3,31)" fg:x="88573" fg:w="1298"/><text x="76.7710%" y="927.50"></text></g><g><title>do_syscall_64 (1,293 samples, 1.12%)</title><rect x="76.5253%" y="901" width="1.1171%" height="15" fill="rgb(216,152,19)" fg:x="88578" fg:w="1293"/><text x="76.7753%" y="911.50"></text></g><g><title>syscall_trace_enter.constprop.0 (16 samples, 0.01%)</title><rect x="77.6285%" y="885" width="0.0138%" height="15" fill="rgb(251,121,35)" fg:x="89855" fg:w="16"/><text x="77.8785%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (1,367 samples, 1.18%)</title><rect x="76.4683%" y="933" width="1.1810%" height="15" fill="rgb(210,217,47)" fg:x="88512" fg:w="1367"/><text x="76.7183%" y="943.50"></text></g><g><title>event_listener::Inner::lock (1,394 samples, 1.20%)</title><rect x="76.4458%" y="1013" width="1.2043%" height="15" fill="rgb(244,116,22)" fg:x="88486" fg:w="1394"/><text x="76.6958%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,394 samples, 1.20%)</title><rect x="76.4458%" y="997" width="1.2043%" height="15" fill="rgb(228,17,21)" fg:x="88486" fg:w="1394"/><text x="76.6958%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,390 samples, 1.20%)</title><rect x="76.4492%" y="981" width="1.2009%" height="15" fill="rgb(240,149,34)" fg:x="88490" fg:w="1390"/><text x="76.6992%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,390 samples, 1.20%)</title><rect x="76.4492%" y="965" width="1.2009%" height="15" fill="rgb(208,125,47)" fg:x="88490" fg:w="1390"/><text x="76.6992%" y="975.50"></text></g><g><title>___pthread_mutex_lock (1,390 samples, 1.20%)</title><rect x="76.4492%" y="949" width="1.2009%" height="15" fill="rgb(249,186,39)" fg:x="88490" fg:w="1390"/><text x="76.6992%" y="959.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (13,191 samples, 11.40%)</title><rect x="66.4173%" y="1125" width="11.3961%" height="15" fill="rgb(240,220,33)" fg:x="76878" fg:w="13191"/><text x="66.6673%" y="1135.50">tremor_runtime::p..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,122 samples, 5.29%)</title><rect x="72.5244%" y="1109" width="5.2890%" height="15" fill="rgb(243,110,23)" fg:x="83947" fg:w="6122"/><text x="72.7744%" y="1119.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (6,122 samples, 5.29%)</title><rect x="72.5244%" y="1093" width="5.2890%" height="15" fill="rgb(219,163,46)" fg:x="83947" fg:w="6122"/><text x="72.7744%" y="1103.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,122 samples, 5.29%)</title><rect x="72.5244%" y="1077" width="5.2890%" height="15" fill="rgb(216,126,30)" fg:x="83947" fg:w="6122"/><text x="72.7744%" y="1087.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (6,122 samples, 5.29%)</title><rect x="72.5244%" y="1061" width="5.2890%" height="15" fill="rgb(208,139,11)" fg:x="83947" fg:w="6122"/><text x="72.7744%" y="1071.50">tremor..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (6,122 samples, 5.29%)</title><rect x="72.5244%" y="1045" width="5.2890%" height="15" fill="rgb(213,118,36)" fg:x="83947" fg:w="6122"/><text x="72.7744%" y="1055.50">&lt;async..</text></g><g><title>event_listener::Event::notify (1,980 samples, 1.71%)</title><rect x="76.1028%" y="1029" width="1.7106%" height="15" fill="rgb(226,43,17)" fg:x="88089" fg:w="1980"/><text x="76.3528%" y="1039.50"></text></g><g><title>event_listener::full_fence (185 samples, 0.16%)</title><rect x="77.6536%" y="1013" width="0.1598%" height="15" fill="rgb(254,217,4)" fg:x="89884" fg:w="185"/><text x="77.9036%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (179 samples, 0.15%)</title><rect x="77.6587%" y="997" width="0.1546%" height="15" fill="rgb(210,134,47)" fg:x="89890" fg:w="179"/><text x="77.9087%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (179 samples, 0.15%)</title><rect x="77.6587%" y="981" width="0.1546%" height="15" fill="rgb(237,24,49)" fg:x="89890" fg:w="179"/><text x="77.9087%" y="991.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (41 samples, 0.04%)</title><rect x="77.8134%" y="1125" width="0.0354%" height="15" fill="rgb(251,39,46)" fg:x="90069" fg:w="41"/><text x="78.0634%" y="1135.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (89 samples, 0.08%)</title><rect x="77.8488%" y="1125" width="0.0769%" height="15" fill="rgb(251,220,3)" fg:x="90110" fg:w="89"/><text x="78.0988%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="77.9145%" y="1109" width="0.0112%" height="15" fill="rgb(228,105,12)" fg:x="90186" fg:w="13"/><text x="78.1645%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="77.9145%" y="1093" width="0.0112%" height="15" fill="rgb(215,196,1)" fg:x="90186" fg:w="13"/><text x="78.1645%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="77.9145%" y="1077" width="0.0112%" height="15" fill="rgb(214,33,39)" fg:x="90186" fg:w="13"/><text x="78.1645%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="77.9145%" y="1061" width="0.0112%" height="15" fill="rgb(220,19,52)" fg:x="90186" fg:w="13"/><text x="78.1645%" y="1071.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="77.9145%" y="1045" width="0.0112%" height="15" fill="rgb(221,78,38)" fg:x="90186" fg:w="13"/><text x="78.1645%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="77.9145%" y="1029" width="0.0112%" height="15" fill="rgb(253,30,16)" fg:x="90186" fg:w="13"/><text x="78.1645%" y="1039.50"></text></g><g><title>[unknown] (84,275 samples, 72.81%)</title><rect x="5.1447%" y="1141" width="72.8078%" height="15" fill="rgb(242,65,0)" fg:x="5955" fg:w="84275"/><text x="5.3947%" y="1151.50">[unknown]</text></g><g><title>tremor_value::pdk::&lt;impl core::convert::From&lt;tremor_value::pdk::PdkValue&gt; for tremor_value::value::Value&gt;::from (25 samples, 0.02%)</title><rect x="77.9309%" y="1125" width="0.0216%" height="15" fill="rgb(235,201,12)" fg:x="90205" fg:w="25"/><text x="78.1809%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="78.2281%" y="533" width="0.0147%" height="15" fill="rgb(233,161,9)" fg:x="90549" fg:w="17"/><text x="78.4781%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::nth (12 samples, 0.01%)</title><rect x="78.2981%" y="469" width="0.0104%" height="15" fill="rgb(241,207,41)" fg:x="90630" fg:w="12"/><text x="78.5481%" y="479.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="78.3171%" y="453" width="0.0173%" height="15" fill="rgb(212,69,46)" fg:x="90652" fg:w="20"/><text x="78.5671%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (44 samples, 0.04%)</title><rect x="78.3361%" y="437" width="0.0380%" height="15" fill="rgb(239,69,45)" fg:x="90674" fg:w="44"/><text x="78.5861%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (34 samples, 0.03%)</title><rect x="78.3447%" y="421" width="0.0294%" height="15" fill="rgb(242,117,48)" fg:x="90684" fg:w="34"/><text x="78.5947%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.02%)</title><rect x="78.3533%" y="405" width="0.0207%" height="15" fill="rgb(228,41,36)" fg:x="90694" fg:w="24"/><text x="78.6033%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="78.3741%" y="437" width="0.0251%" height="15" fill="rgb(212,3,32)" fg:x="90718" fg:w="29"/><text x="78.6241%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (13 samples, 0.01%)</title><rect x="78.3879%" y="421" width="0.0112%" height="15" fill="rgb(233,41,49)" fg:x="90734" fg:w="13"/><text x="78.6379%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="78.3879%" y="405" width="0.0112%" height="15" fill="rgb(252,170,49)" fg:x="90734" fg:w="13"/><text x="78.6379%" y="415.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="78.3991%" y="437" width="0.0130%" height="15" fill="rgb(229,53,26)" fg:x="90747" fg:w="15"/><text x="78.6491%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (226 samples, 0.20%)</title><rect x="78.2428%" y="501" width="0.1952%" height="15" fill="rgb(217,157,12)" fg:x="90566" fg:w="226"/><text x="78.4928%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (198 samples, 0.17%)</title><rect x="78.2670%" y="485" width="0.1711%" height="15" fill="rgb(227,17,9)" fg:x="90594" fg:w="198"/><text x="78.5170%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (150 samples, 0.13%)</title><rect x="78.3084%" y="469" width="0.1296%" height="15" fill="rgb(218,84,12)" fg:x="90642" fg:w="150"/><text x="78.5584%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (120 samples, 0.10%)</title><rect x="78.3343%" y="453" width="0.1037%" height="15" fill="rgb(212,79,24)" fg:x="90672" fg:w="120"/><text x="78.5843%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.03%)</title><rect x="78.4121%" y="437" width="0.0259%" height="15" fill="rgb(217,222,37)" fg:x="90762" fg:w="30"/><text x="78.6621%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (30 samples, 0.03%)</title><rect x="78.4121%" y="421" width="0.0259%" height="15" fill="rgb(246,208,8)" fg:x="90762" fg:w="30"/><text x="78.6621%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (22 samples, 0.02%)</title><rect x="78.4190%" y="405" width="0.0190%" height="15" fill="rgb(244,133,10)" fg:x="90770" fg:w="22"/><text x="78.6690%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.02%)</title><rect x="78.4190%" y="389" width="0.0190%" height="15" fill="rgb(209,219,41)" fg:x="90770" fg:w="22"/><text x="78.6690%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (239 samples, 0.21%)</title><rect x="78.2428%" y="533" width="0.2065%" height="15" fill="rgb(253,175,45)" fg:x="90566" fg:w="239"/><text x="78.4928%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (239 samples, 0.21%)</title><rect x="78.2428%" y="517" width="0.2065%" height="15" fill="rgb(235,100,37)" fg:x="90566" fg:w="239"/><text x="78.4928%" y="527.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="78.4380%" y="501" width="0.0112%" height="15" fill="rgb(225,87,19)" fg:x="90792" fg:w="13"/><text x="78.6880%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (474 samples, 0.41%)</title><rect x="78.6212%" y="501" width="0.4095%" height="15" fill="rgb(217,152,17)" fg:x="91004" fg:w="474"/><text x="78.8712%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (329 samples, 0.28%)</title><rect x="78.7464%" y="485" width="0.2842%" height="15" fill="rgb(235,72,13)" fg:x="91149" fg:w="329"/><text x="78.9964%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (329 samples, 0.28%)</title><rect x="78.7464%" y="469" width="0.2842%" height="15" fill="rgb(233,140,18)" fg:x="91149" fg:w="329"/><text x="78.9964%" y="479.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (664 samples, 0.57%)</title><rect x="78.4657%" y="517" width="0.5737%" height="15" fill="rgb(207,212,28)" fg:x="90824" fg:w="664"/><text x="78.7157%" y="527.50"></text></g><g><title>async_executor::steal (685 samples, 0.59%)</title><rect x="78.4501%" y="533" width="0.5918%" height="15" fill="rgb(220,130,25)" fg:x="90806" fg:w="685"/><text x="78.7001%" y="543.50"></text></g><g><title>concurrent_queue::full_fence (903 samples, 0.78%)</title><rect x="79.5179%" y="501" width="0.7801%" height="15" fill="rgb(205,55,34)" fg:x="92042" fg:w="903"/><text x="79.7679%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (902 samples, 0.78%)</title><rect x="79.5188%" y="485" width="0.7793%" height="15" fill="rgb(237,54,35)" fg:x="92043" fg:w="902"/><text x="79.7688%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (902 samples, 0.78%)</title><rect x="79.5188%" y="469" width="0.7793%" height="15" fill="rgb(208,67,23)" fg:x="92043" fg:w="902"/><text x="79.7688%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (902 samples, 0.78%)</title><rect x="79.5188%" y="453" width="0.7793%" height="15" fill="rgb(206,207,50)" fg:x="92043" fg:w="902"/><text x="79.7688%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,337 samples, 1.16%)</title><rect x="79.2259%" y="517" width="1.1551%" height="15" fill="rgb(213,211,42)" fg:x="91704" fg:w="1337"/><text x="79.4759%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (96 samples, 0.08%)</title><rect x="80.2981%" y="501" width="0.0829%" height="15" fill="rgb(252,197,50)" fg:x="92945" fg:w="96"/><text x="80.5481%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (92 samples, 0.08%)</title><rect x="80.3015%" y="485" width="0.0795%" height="15" fill="rgb(251,211,41)" fg:x="92949" fg:w="92"/><text x="80.5515%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (305 samples, 0.26%)</title><rect x="80.4475%" y="501" width="0.2635%" height="15" fill="rgb(229,211,5)" fg:x="93118" fg:w="305"/><text x="80.6975%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (303 samples, 0.26%)</title><rect x="80.4492%" y="485" width="0.2618%" height="15" fill="rgb(239,36,31)" fg:x="93120" fg:w="303"/><text x="80.6992%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (303 samples, 0.26%)</title><rect x="80.4492%" y="469" width="0.2618%" height="15" fill="rgb(248,67,31)" fg:x="93120" fg:w="303"/><text x="80.6992%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (303 samples, 0.26%)</title><rect x="80.4492%" y="453" width="0.2618%" height="15" fill="rgb(249,55,44)" fg:x="93120" fg:w="303"/><text x="80.6992%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.02%)</title><rect x="80.7162%" y="485" width="0.0173%" height="15" fill="rgb(216,82,12)" fg:x="93429" fg:w="20"/><text x="80.9662%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="80.7162%" y="469" width="0.0173%" height="15" fill="rgb(242,174,1)" fg:x="93429" fg:w="20"/><text x="80.9662%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (32 samples, 0.03%)</title><rect x="80.7145%" y="501" width="0.0276%" height="15" fill="rgb(208,120,29)" fg:x="93427" fg:w="32"/><text x="80.9645%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (12 samples, 0.01%)</title><rect x="80.7490%" y="501" width="0.0104%" height="15" fill="rgb(221,105,43)" fg:x="93467" fg:w="12"/><text x="80.9990%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="80.7490%" y="485" width="0.0104%" height="15" fill="rgb(234,124,22)" fg:x="93467" fg:w="12"/><text x="80.9990%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (97 samples, 0.08%)</title><rect x="80.7594%" y="501" width="0.0838%" height="15" fill="rgb(212,23,30)" fg:x="93479" fg:w="97"/><text x="81.0094%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (97 samples, 0.08%)</title><rect x="80.7594%" y="485" width="0.0838%" height="15" fill="rgb(219,122,53)" fg:x="93479" fg:w="97"/><text x="81.0094%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (115 samples, 0.10%)</title><rect x="80.8432%" y="501" width="0.0994%" height="15" fill="rgb(248,84,24)" fg:x="93576" fg:w="115"/><text x="81.0932%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_or (115 samples, 0.10%)</title><rect x="80.8432%" y="485" width="0.0994%" height="15" fill="rgb(245,115,18)" fg:x="93576" fg:w="115"/><text x="81.0932%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,418 samples, 2.09%)</title><rect x="79.0419%" y="533" width="2.0890%" height="15" fill="rgb(227,176,51)" fg:x="91491" fg:w="2418"/><text x="79.2919%" y="543.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (868 samples, 0.75%)</title><rect x="80.3810%" y="517" width="0.7499%" height="15" fill="rgb(229,63,42)" fg:x="93041" fg:w="868"/><text x="80.6310%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (218 samples, 0.19%)</title><rect x="80.9425%" y="501" width="0.1883%" height="15" fill="rgb(247,202,24)" fg:x="93691" fg:w="218"/><text x="81.1925%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (218 samples, 0.19%)</title><rect x="80.9425%" y="485" width="0.1883%" height="15" fill="rgb(244,173,20)" fg:x="93691" fg:w="218"/><text x="81.1925%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (134 samples, 0.12%)</title><rect x="81.1542%" y="469" width="0.1158%" height="15" fill="rgb(242,81,47)" fg:x="93936" fg:w="134"/><text x="81.4042%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (134 samples, 0.12%)</title><rect x="81.1542%" y="453" width="0.1158%" height="15" fill="rgb(231,185,54)" fg:x="93936" fg:w="134"/><text x="81.4042%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (329 samples, 0.28%)</title><rect x="81.1309%" y="533" width="0.2842%" height="15" fill="rgb(243,55,32)" fg:x="93909" fg:w="329"/><text x="81.3809%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (329 samples, 0.28%)</title><rect x="81.1309%" y="517" width="0.2842%" height="15" fill="rgb(208,167,19)" fg:x="93909" fg:w="329"/><text x="81.3809%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (329 samples, 0.28%)</title><rect x="81.1309%" y="501" width="0.2842%" height="15" fill="rgb(231,72,35)" fg:x="93909" fg:w="329"/><text x="81.3809%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (308 samples, 0.27%)</title><rect x="81.1490%" y="485" width="0.2661%" height="15" fill="rgb(250,173,51)" fg:x="93930" fg:w="308"/><text x="81.3990%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (168 samples, 0.15%)</title><rect x="81.2700%" y="469" width="0.1451%" height="15" fill="rgb(209,5,22)" fg:x="94070" fg:w="168"/><text x="81.5200%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (168 samples, 0.15%)</title><rect x="81.2700%" y="453" width="0.1451%" height="15" fill="rgb(250,174,19)" fg:x="94070" fg:w="168"/><text x="81.5200%" y="463.50"></text></g><g><title>fastrand::RNG::__getit (12 samples, 0.01%)</title><rect x="81.4341%" y="485" width="0.0104%" height="15" fill="rgb(217,3,49)" fg:x="94260" fg:w="12"/><text x="81.6841%" y="495.50"></text></g><g><title>fastrand::Rng::gen_u64 (13 samples, 0.01%)</title><rect x="81.4454%" y="437" width="0.0112%" height="15" fill="rgb(218,225,5)" fg:x="94273" fg:w="13"/><text x="81.6954%" y="447.50"></text></g><g><title>fastrand::Rng::usize (16 samples, 0.01%)</title><rect x="81.4445%" y="469" width="0.0138%" height="15" fill="rgb(236,89,11)" fg:x="94272" fg:w="16"/><text x="81.6945%" y="479.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (15 samples, 0.01%)</title><rect x="81.4454%" y="453" width="0.0130%" height="15" fill="rgb(206,33,28)" fg:x="94273" fg:w="15"/><text x="81.6954%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.03%)</title><rect x="81.4341%" y="501" width="0.0251%" height="15" fill="rgb(241,56,42)" fg:x="94260" fg:w="29"/><text x="81.6841%" y="511.50"></text></g><g><title>fastrand::usize::{{closure}} (17 samples, 0.01%)</title><rect x="81.4445%" y="485" width="0.0147%" height="15" fill="rgb(222,44,11)" fg:x="94272" fg:w="17"/><text x="81.6945%" y="495.50"></text></g><g><title>fastrand::usize (47 samples, 0.04%)</title><rect x="81.4194%" y="533" width="0.0406%" height="15" fill="rgb(234,111,20)" fg:x="94243" fg:w="47"/><text x="81.6694%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="81.4315%" y="517" width="0.0285%" height="15" fill="rgb(237,77,6)" fg:x="94257" fg:w="33"/><text x="81.6815%" y="527.50"></text></g><g><title>std::sync::poison::Flag::get (12 samples, 0.01%)</title><rect x="81.4600%" y="485" width="0.0104%" height="15" fill="rgb(235,111,23)" fg:x="94290" fg:w="12"/><text x="81.7100%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (12 samples, 0.01%)</title><rect x="81.4600%" y="469" width="0.0104%" height="15" fill="rgb(251,135,29)" fg:x="94290" fg:w="12"/><text x="81.7100%" y="479.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="81.4600%" y="517" width="0.0130%" height="15" fill="rgb(217,57,1)" fg:x="94290" fg:w="15"/><text x="81.7100%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (15 samples, 0.01%)</title><rect x="81.4600%" y="501" width="0.0130%" height="15" fill="rgb(249,119,31)" fg:x="94290" fg:w="15"/><text x="81.7100%" y="511.50"></text></g><g><title>___pthread_rwlock_rdlock (186 samples, 0.16%)</title><rect x="81.4946%" y="485" width="0.1607%" height="15" fill="rgb(233,164,33)" fg:x="94330" fg:w="186"/><text x="81.7446%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (4,138 samples, 3.57%)</title><rect x="78.1546%" y="549" width="3.5749%" height="15" fill="rgb(250,217,43)" fg:x="90464" fg:w="4138"/><text x="78.4046%" y="559.50">asyn..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (312 samples, 0.27%)</title><rect x="81.4600%" y="533" width="0.2695%" height="15" fill="rgb(232,154,50)" fg:x="94290" fg:w="312"/><text x="81.7100%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (297 samples, 0.26%)</title><rect x="81.4730%" y="517" width="0.2566%" height="15" fill="rgb(227,190,8)" fg:x="94305" fg:w="297"/><text x="81.7230%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (292 samples, 0.25%)</title><rect x="81.4773%" y="501" width="0.2523%" height="15" fill="rgb(209,217,32)" fg:x="94310" fg:w="292"/><text x="81.7273%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (86 samples, 0.07%)</title><rect x="81.6553%" y="485" width="0.0743%" height="15" fill="rgb(243,203,50)" fg:x="94516" fg:w="86"/><text x="81.9053%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (86 samples, 0.07%)</title><rect x="81.6553%" y="469" width="0.0743%" height="15" fill="rgb(232,152,27)" fg:x="94516" fg:w="86"/><text x="81.9053%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (58 samples, 0.05%)</title><rect x="81.7391%" y="469" width="0.0501%" height="15" fill="rgb(240,34,29)" fg:x="94613" fg:w="58"/><text x="81.9891%" y="479.50"></text></g><g><title>__GI___lll_lock_wake (18 samples, 0.02%)</title><rect x="81.7737%" y="453" width="0.0156%" height="15" fill="rgb(215,185,52)" fg:x="94653" fg:w="18"/><text x="82.0237%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.01%)</title><rect x="81.7754%" y="437" width="0.0138%" height="15" fill="rgb(240,89,49)" fg:x="94655" fg:w="16"/><text x="82.0254%" y="447.50"></text></g><g><title>do_syscall_64 (16 samples, 0.01%)</title><rect x="81.7754%" y="421" width="0.0138%" height="15" fill="rgb(225,12,52)" fg:x="94655" fg:w="16"/><text x="82.0254%" y="431.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.01%)</title><rect x="81.7762%" y="405" width="0.0130%" height="15" fill="rgb(239,128,45)" fg:x="94656" fg:w="15"/><text x="82.0262%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (61 samples, 0.05%)</title><rect x="81.7382%" y="533" width="0.0527%" height="15" fill="rgb(211,78,47)" fg:x="94612" fg:w="61"/><text x="81.9882%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.05%)</title><rect x="81.7382%" y="517" width="0.0527%" height="15" fill="rgb(232,31,21)" fg:x="94612" fg:w="61"/><text x="81.9882%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (60 samples, 0.05%)</title><rect x="81.7391%" y="501" width="0.0518%" height="15" fill="rgb(222,168,14)" fg:x="94613" fg:w="60"/><text x="81.9891%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (60 samples, 0.05%)</title><rect x="81.7391%" y="485" width="0.0518%" height="15" fill="rgb(209,128,24)" fg:x="94613" fg:w="60"/><text x="81.9891%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (57 samples, 0.05%)</title><rect x="81.7909%" y="533" width="0.0492%" height="15" fill="rgb(249,35,13)" fg:x="94673" fg:w="57"/><text x="82.0409%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (57 samples, 0.05%)</title><rect x="81.7909%" y="517" width="0.0492%" height="15" fill="rgb(218,7,2)" fg:x="94673" fg:w="57"/><text x="82.0409%" y="527.50"></text></g><g><title>__fdget_pos (42 samples, 0.04%)</title><rect x="81.8886%" y="373" width="0.0363%" height="15" fill="rgb(238,107,27)" fg:x="94786" fg:w="42"/><text x="82.1386%" y="383.50"></text></g><g><title>__fget_light (40 samples, 0.03%)</title><rect x="81.8903%" y="357" width="0.0346%" height="15" fill="rgb(217,88,38)" fg:x="94788" fg:w="40"/><text x="82.1403%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (13 samples, 0.01%)</title><rect x="82.0276%" y="245" width="0.0112%" height="15" fill="rgb(230,207,0)" fg:x="94947" fg:w="13"/><text x="82.2776%" y="255.50"></text></g><g><title>select_task_rq_fair (32 samples, 0.03%)</title><rect x="82.0449%" y="245" width="0.0276%" height="15" fill="rgb(249,64,54)" fg:x="94967" fg:w="32"/><text x="82.2949%" y="255.50"></text></g><g><title>available_idle_cpu (15 samples, 0.01%)</title><rect x="82.0596%" y="229" width="0.0130%" height="15" fill="rgb(231,7,11)" fg:x="94984" fg:w="15"/><text x="82.3096%" y="239.50"></text></g><g><title>enqueue_task_fair (83 samples, 0.07%)</title><rect x="82.0760%" y="213" width="0.0717%" height="15" fill="rgb(205,149,21)" fg:x="95003" fg:w="83"/><text x="82.3260%" y="223.50"></text></g><g><title>enqueue_entity (58 samples, 0.05%)</title><rect x="82.0976%" y="197" width="0.0501%" height="15" fill="rgb(215,126,34)" fg:x="95028" fg:w="58"/><text x="82.3476%" y="207.50"></text></g><g><title>update_load_avg (19 samples, 0.02%)</title><rect x="82.1313%" y="181" width="0.0164%" height="15" fill="rgb(241,132,45)" fg:x="95067" fg:w="19"/><text x="82.3813%" y="191.50"></text></g><g><title>psi_group_change (26 samples, 0.02%)</title><rect x="82.1745%" y="197" width="0.0225%" height="15" fill="rgb(252,69,32)" fg:x="95117" fg:w="26"/><text x="82.4245%" y="207.50"></text></g><g><title>ttwu_do_activate (145 samples, 0.13%)</title><rect x="82.0726%" y="245" width="0.1253%" height="15" fill="rgb(232,204,19)" fg:x="94999" fg:w="145"/><text x="82.3226%" y="255.50"></text></g><g><title>enqueue_task (144 samples, 0.12%)</title><rect x="82.0734%" y="229" width="0.1244%" height="15" fill="rgb(249,15,47)" fg:x="95000" fg:w="144"/><text x="82.3234%" y="239.50"></text></g><g><title>psi_task_change (45 samples, 0.04%)</title><rect x="82.1590%" y="213" width="0.0389%" height="15" fill="rgb(209,227,23)" fg:x="95099" fg:w="45"/><text x="82.4090%" y="223.50"></text></g><g><title>ttwu_do_wakeup (17 samples, 0.01%)</title><rect x="82.1978%" y="245" width="0.0147%" height="15" fill="rgb(248,92,24)" fg:x="95144" fg:w="17"/><text x="82.4478%" y="255.50"></text></g><g><title>check_preempt_curr (14 samples, 0.01%)</title><rect x="82.2004%" y="229" width="0.0121%" height="15" fill="rgb(247,59,2)" fg:x="95147" fg:w="14"/><text x="82.4504%" y="239.50"></text></g><g><title>ttwu_queue_wakelist (17 samples, 0.01%)</title><rect x="82.2125%" y="245" width="0.0147%" height="15" fill="rgb(221,30,5)" fg:x="95161" fg:w="17"/><text x="82.4625%" y="255.50"></text></g><g><title>__wake_up_common (283 samples, 0.24%)</title><rect x="81.9905%" y="293" width="0.2445%" height="15" fill="rgb(208,108,53)" fg:x="94904" fg:w="283"/><text x="82.2405%" y="303.50"></text></g><g><title>autoremove_wake_function (273 samples, 0.24%)</title><rect x="81.9991%" y="277" width="0.2359%" height="15" fill="rgb(211,183,26)" fg:x="94914" fg:w="273"/><text x="82.2491%" y="287.50"></text></g><g><title>try_to_wake_up (263 samples, 0.23%)</title><rect x="82.0078%" y="261" width="0.2272%" height="15" fill="rgb(232,132,4)" fg:x="94924" fg:w="263"/><text x="82.2578%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (13 samples, 0.01%)</title><rect x="82.2350%" y="293" width="0.0112%" height="15" fill="rgb(253,128,37)" fg:x="95187" fg:w="13"/><text x="82.4850%" y="303.50"></text></g><g><title>__wake_up_common_lock (299 samples, 0.26%)</title><rect x="81.9888%" y="309" width="0.2583%" height="15" fill="rgb(221,58,24)" fg:x="94902" fg:w="299"/><text x="82.2388%" y="319.50"></text></g><g><title>_raw_read_lock_irqsave (29 samples, 0.03%)</title><rect x="82.2471%" y="309" width="0.0251%" height="15" fill="rgb(230,54,45)" fg:x="95201" fg:w="29"/><text x="82.4971%" y="319.50"></text></g><g><title>__wake_up_common (375 samples, 0.32%)</title><rect x="81.9551%" y="341" width="0.3240%" height="15" fill="rgb(254,21,18)" fg:x="94863" fg:w="375"/><text x="82.2051%" y="351.50"></text></g><g><title>ep_poll_callback (370 samples, 0.32%)</title><rect x="81.9594%" y="325" width="0.3197%" height="15" fill="rgb(221,108,0)" fg:x="94868" fg:w="370"/><text x="82.2094%" y="335.50"></text></g><g><title>_raw_spin_lock_irq (13 samples, 0.01%)</title><rect x="82.2825%" y="341" width="0.0112%" height="15" fill="rgb(206,95,1)" fg:x="95242" fg:w="13"/><text x="82.5325%" y="351.50"></text></g><g><title>eventfd_write (402 samples, 0.35%)</title><rect x="81.9482%" y="357" width="0.3473%" height="15" fill="rgb(237,52,5)" fg:x="94855" fg:w="402"/><text x="82.1982%" y="367.50"></text></g><g><title>ksys_write (478 samples, 0.41%)</title><rect x="81.8851%" y="389" width="0.4130%" height="15" fill="rgb(218,150,34)" fg:x="94782" fg:w="478"/><text x="82.1351%" y="399.50"></text></g><g><title>vfs_write (423 samples, 0.37%)</title><rect x="81.9326%" y="373" width="0.3654%" height="15" fill="rgb(235,194,28)" fg:x="94837" fg:w="423"/><text x="82.1826%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (104 samples, 0.09%)</title><rect x="82.3024%" y="389" width="0.0898%" height="15" fill="rgb(245,92,18)" fg:x="95265" fg:w="104"/><text x="82.5524%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (613 samples, 0.53%)</title><rect x="81.8713%" y="421" width="0.5296%" height="15" fill="rgb(253,203,53)" fg:x="94766" fg:w="613"/><text x="82.1213%" y="431.50"></text></g><g><title>do_syscall_64 (613 samples, 0.53%)</title><rect x="81.8713%" y="405" width="0.5296%" height="15" fill="rgb(249,185,47)" fg:x="94766" fg:w="613"/><text x="82.1213%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::notify (647 samples, 0.56%)</title><rect x="81.8454%" y="485" width="0.5590%" height="15" fill="rgb(252,194,52)" fg:x="94736" fg:w="647"/><text x="82.0954%" y="495.50"></text></g><g><title>polling::Poller::notify (647 samples, 0.56%)</title><rect x="81.8454%" y="469" width="0.5590%" height="15" fill="rgb(210,53,36)" fg:x="94736" fg:w="647"/><text x="82.0954%" y="479.50"></text></g><g><title>polling::epoll::Poller::notify (637 samples, 0.55%)</title><rect x="81.8540%" y="453" width="0.5503%" height="15" fill="rgb(237,37,25)" fg:x="94746" fg:w="637"/><text x="82.1040%" y="463.50"></text></g><g><title>__GI___write (636 samples, 0.55%)</title><rect x="81.8549%" y="437" width="0.5495%" height="15" fill="rgb(242,116,27)" fg:x="94747" fg:w="636"/><text x="82.1049%" y="447.50"></text></g><g><title>core::mem::drop (16 samples, 0.01%)</title><rect x="82.4467%" y="453" width="0.0138%" height="15" fill="rgb(213,185,26)" fg:x="95432" fg:w="16"/><text x="82.6967%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (16 samples, 0.01%)</title><rect x="82.4467%" y="437" width="0.0138%" height="15" fill="rgb(225,204,8)" fg:x="95432" fg:w="16"/><text x="82.6967%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="82.4467%" y="421" width="0.0138%" height="15" fill="rgb(254,111,37)" fg:x="95432" fg:w="16"/><text x="82.6967%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="82.4475%" y="405" width="0.0130%" height="15" fill="rgb(242,35,9)" fg:x="95433" fg:w="15"/><text x="82.6975%" y="415.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="82.4475%" y="389" width="0.0130%" height="15" fill="rgb(232,138,49)" fg:x="95433" fg:w="15"/><text x="82.6975%" y="399.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="82.4475%" y="373" width="0.0130%" height="15" fill="rgb(247,56,4)" fg:x="95433" fg:w="15"/><text x="82.6975%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (108 samples, 0.09%)</title><rect x="82.4605%" y="453" width="0.0933%" height="15" fill="rgb(226,179,17)" fg:x="95448" fg:w="108"/><text x="82.7105%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (108 samples, 0.09%)</title><rect x="82.4605%" y="437" width="0.0933%" height="15" fill="rgb(216,163,45)" fg:x="95448" fg:w="108"/><text x="82.7105%" y="447.50"></text></g><g><title>__entry_text_start (18 samples, 0.02%)</title><rect x="82.6479%" y="389" width="0.0156%" height="15" fill="rgb(211,157,3)" fg:x="95665" fg:w="18"/><text x="82.8979%" y="399.50"></text></g><g><title>_raw_spin_lock (71 samples, 0.06%)</title><rect x="82.8060%" y="309" width="0.0613%" height="15" fill="rgb(234,44,20)" fg:x="95848" fg:w="71"/><text x="83.0560%" y="319.50"></text></g><g><title>futex_hash (12 samples, 0.01%)</title><rect x="82.8674%" y="309" width="0.0104%" height="15" fill="rgb(254,138,23)" fg:x="95919" fg:w="12"/><text x="83.1174%" y="319.50"></text></g><g><title>futex_wake_mark (127 samples, 0.11%)</title><rect x="82.8778%" y="309" width="0.1097%" height="15" fill="rgb(206,119,39)" fg:x="95931" fg:w="127"/><text x="83.1278%" y="319.50"></text></g><g><title>__futex_unqueue (51 samples, 0.04%)</title><rect x="82.9434%" y="293" width="0.0441%" height="15" fill="rgb(231,105,52)" fg:x="96007" fg:w="51"/><text x="83.1934%" y="303.50"></text></g><g><title>wake_q_add_safe (15 samples, 0.01%)</title><rect x="82.9944%" y="309" width="0.0130%" height="15" fill="rgb(250,20,5)" fg:x="96066" fg:w="15"/><text x="83.2444%" y="319.50"></text></g><g><title>_raw_spin_lock_irqsave (13 samples, 0.01%)</title><rect x="83.0756%" y="277" width="0.0112%" height="15" fill="rgb(215,198,30)" fg:x="96160" fg:w="13"/><text x="83.3256%" y="287.50"></text></g><g><title>raw_spin_rq_lock_nested (15 samples, 0.01%)</title><rect x="83.0998%" y="277" width="0.0130%" height="15" fill="rgb(246,142,8)" fg:x="96188" fg:w="15"/><text x="83.3498%" y="287.50"></text></g><g><title>available_idle_cpu (60 samples, 0.05%)</title><rect x="83.1870%" y="261" width="0.0518%" height="15" fill="rgb(243,26,38)" fg:x="96289" fg:w="60"/><text x="83.4370%" y="271.50"></text></g><g><title>select_task_rq_fair (147 samples, 0.13%)</title><rect x="83.1127%" y="277" width="0.1270%" height="15" fill="rgb(205,133,28)" fg:x="96203" fg:w="147"/><text x="83.3627%" y="287.50"></text></g><g><title>place_entity (12 samples, 0.01%)</title><rect x="83.4462%" y="213" width="0.0104%" height="15" fill="rgb(212,34,0)" fg:x="96589" fg:w="12"/><text x="83.6962%" y="223.50"></text></g><g><title>reweight_entity (32 samples, 0.03%)</title><rect x="83.4566%" y="213" width="0.0276%" height="15" fill="rgb(251,226,22)" fg:x="96601" fg:w="32"/><text x="83.7066%" y="223.50"></text></g><g><title>update_cfs_group (31 samples, 0.03%)</title><rect x="83.4842%" y="213" width="0.0268%" height="15" fill="rgb(252,119,9)" fg:x="96633" fg:w="31"/><text x="83.7342%" y="223.50"></text></g><g><title>__update_load_avg_cfs_rq (27 samples, 0.02%)</title><rect x="83.5395%" y="197" width="0.0233%" height="15" fill="rgb(213,150,50)" fg:x="96697" fg:w="27"/><text x="83.7895%" y="207.50"></text></g><g><title>enqueue_task_fair (356 samples, 0.31%)</title><rect x="83.2726%" y="245" width="0.3076%" height="15" fill="rgb(212,24,39)" fg:x="96388" fg:w="356"/><text x="83.5226%" y="255.50"></text></g><g><title>enqueue_entity (245 samples, 0.21%)</title><rect x="83.3685%" y="229" width="0.2117%" height="15" fill="rgb(213,46,39)" fg:x="96499" fg:w="245"/><text x="83.6185%" y="239.50"></text></g><g><title>update_load_avg (75 samples, 0.06%)</title><rect x="83.5153%" y="213" width="0.0648%" height="15" fill="rgb(239,106,12)" fg:x="96669" fg:w="75"/><text x="83.7653%" y="223.50"></text></g><g><title>__update_load_avg_se (20 samples, 0.02%)</title><rect x="83.5629%" y="197" width="0.0173%" height="15" fill="rgb(249,229,21)" fg:x="96724" fg:w="20"/><text x="83.8129%" y="207.50"></text></g><g><title>psi_group_change (66 samples, 0.06%)</title><rect x="83.5810%" y="245" width="0.0570%" height="15" fill="rgb(212,158,3)" fg:x="96745" fg:w="66"/><text x="83.8310%" y="255.50"></text></g><g><title>psi_flags_change (20 samples, 0.02%)</title><rect x="83.7244%" y="229" width="0.0173%" height="15" fill="rgb(253,26,48)" fg:x="96911" fg:w="20"/><text x="83.9744%" y="239.50"></text></g><g><title>psi_group_change (215 samples, 0.19%)</title><rect x="83.7417%" y="229" width="0.1857%" height="15" fill="rgb(238,178,20)" fg:x="96931" fg:w="215"/><text x="83.9917%" y="239.50"></text></g><g><title>ttwu_do_activate (808 samples, 0.70%)</title><rect x="83.2397%" y="277" width="0.6981%" height="15" fill="rgb(208,86,15)" fg:x="96350" fg:w="808"/><text x="83.4897%" y="287.50"></text></g><g><title>enqueue_task (785 samples, 0.68%)</title><rect x="83.2596%" y="261" width="0.6782%" height="15" fill="rgb(239,42,53)" fg:x="96373" fg:w="785"/><text x="83.5096%" y="271.50"></text></g><g><title>psi_task_change (347 samples, 0.30%)</title><rect x="83.6380%" y="245" width="0.2998%" height="15" fill="rgb(245,226,8)" fg:x="96811" fg:w="347"/><text x="83.8880%" y="255.50"></text></g><g><title>sched_clock_cpu (12 samples, 0.01%)</title><rect x="83.9274%" y="229" width="0.0104%" height="15" fill="rgb(216,176,32)" fg:x="97146" fg:w="12"/><text x="84.1774%" y="239.50"></text></g><g><title>ttwu_do_wakeup (74 samples, 0.06%)</title><rect x="83.9378%" y="277" width="0.0639%" height="15" fill="rgb(231,186,21)" fg:x="97158" fg:w="74"/><text x="84.1878%" y="287.50"></text></g><g><title>check_preempt_curr (69 samples, 0.06%)</title><rect x="83.9421%" y="261" width="0.0596%" height="15" fill="rgb(205,95,49)" fg:x="97163" fg:w="69"/><text x="84.1921%" y="271.50"></text></g><g><title>resched_curr (51 samples, 0.04%)</title><rect x="83.9577%" y="245" width="0.0441%" height="15" fill="rgb(217,145,8)" fg:x="97181" fg:w="51"/><text x="84.2077%" y="255.50"></text></g><g><title>ttwu_queue_wakelist (89 samples, 0.08%)</title><rect x="84.0017%" y="277" width="0.0769%" height="15" fill="rgb(239,144,48)" fg:x="97232" fg:w="89"/><text x="84.2517%" y="287.50"></text></g><g><title>native_sched_clock (22 samples, 0.02%)</title><rect x="84.1296%" y="245" width="0.0190%" height="15" fill="rgb(214,189,23)" fg:x="97380" fg:w="22"/><text x="84.3796%" y="255.50"></text></g><g><title>sched_clock_cpu (25 samples, 0.02%)</title><rect x="84.1279%" y="261" width="0.0216%" height="15" fill="rgb(229,157,17)" fg:x="97378" fg:w="25"/><text x="84.3779%" y="271.50"></text></g><g><title>__x64_sys_futex (1,702 samples, 1.47%)</title><rect x="82.6808%" y="357" width="1.4704%" height="15" fill="rgb(230,5,48)" fg:x="95703" fg:w="1702"/><text x="82.9308%" y="367.50"></text></g><g><title>do_futex (1,677 samples, 1.45%)</title><rect x="82.7024%" y="341" width="1.4488%" height="15" fill="rgb(224,156,48)" fg:x="95728" fg:w="1677"/><text x="82.9524%" y="351.50"></text></g><g><title>futex_wake (1,672 samples, 1.44%)</title><rect x="82.7067%" y="325" width="1.4445%" height="15" fill="rgb(223,14,29)" fg:x="95733" fg:w="1672"/><text x="82.9567%" y="335.50"></text></g><g><title>wake_up_q (1,324 samples, 1.14%)</title><rect x="83.0073%" y="309" width="1.1438%" height="15" fill="rgb(229,96,36)" fg:x="96081" fg:w="1324"/><text x="83.2573%" y="319.50"></text></g><g><title>try_to_wake_up (1,315 samples, 1.14%)</title><rect x="83.0151%" y="293" width="1.1361%" height="15" fill="rgb(231,102,53)" fg:x="96090" fg:w="1315"/><text x="83.2651%" y="303.50"></text></g><g><title>update_rq_clock (84 samples, 0.07%)</title><rect x="84.0786%" y="277" width="0.0726%" height="15" fill="rgb(210,77,38)" fg:x="97321" fg:w="84"/><text x="84.3286%" y="287.50"></text></g><g><title>exit_to_user_mode_prepare (21 samples, 0.02%)</title><rect x="84.4052%" y="341" width="0.0181%" height="15" fill="rgb(235,131,6)" fg:x="97699" fg:w="21"/><text x="84.6552%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (315 samples, 0.27%)</title><rect x="84.1598%" y="357" width="0.2721%" height="15" fill="rgb(252,55,38)" fg:x="97415" fg:w="315"/><text x="84.4098%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,063 samples, 1.78%)</title><rect x="82.6678%" y="389" width="1.7823%" height="15" fill="rgb(246,38,14)" fg:x="95688" fg:w="2063"/><text x="82.9178%" y="399.50">e..</text></g><g><title>do_syscall_64 (2,055 samples, 1.78%)</title><rect x="82.6747%" y="373" width="1.7754%" height="15" fill="rgb(242,27,5)" fg:x="95696" fg:w="2055"/><text x="82.9247%" y="383.50">d..</text></g><g><title>syscall_trace_enter.constprop.0 (21 samples, 0.02%)</title><rect x="84.4320%" y="357" width="0.0181%" height="15" fill="rgb(228,65,35)" fg:x="97730" fg:w="21"/><text x="84.6820%" y="367.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (2,208 samples, 1.91%)</title><rect x="82.5538%" y="453" width="1.9076%" height="15" fill="rgb(245,93,11)" fg:x="95556" fg:w="2208"/><text x="82.8038%" y="463.50">s..</text></g><g><title>std::sys_common::condvar::Condvar::notify_one (2,208 samples, 1.91%)</title><rect x="82.5538%" y="437" width="1.9076%" height="15" fill="rgb(213,1,31)" fg:x="95556" fg:w="2208"/><text x="82.8038%" y="447.50">s..</text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (2,208 samples, 1.91%)</title><rect x="82.5538%" y="421" width="1.9076%" height="15" fill="rgb(237,205,14)" fg:x="95556" fg:w="2208"/><text x="82.8038%" y="431.50">s..</text></g><g><title>__GI___pthread_cond_signal (2,208 samples, 1.91%)</title><rect x="82.5538%" y="405" width="1.9076%" height="15" fill="rgb(232,118,45)" fg:x="95556" fg:w="2208"/><text x="82.8038%" y="415.50">_..</text></g><g><title>syscall_return_via_sysret (13 samples, 0.01%)</title><rect x="84.4501%" y="389" width="0.0112%" height="15" fill="rgb(218,5,6)" fg:x="97751" fg:w="13"/><text x="84.7001%" y="399.50"></text></g><g><title>parking::Unparker::unpark (2,490 samples, 2.15%)</title><rect x="82.4104%" y="485" width="2.1512%" height="15" fill="rgb(251,87,51)" fg:x="95390" fg:w="2490"/><text x="82.6604%" y="495.50">p..</text></g><g><title>parking::Inner::unpark (2,457 samples, 2.12%)</title><rect x="82.4389%" y="469" width="2.1227%" height="15" fill="rgb(207,225,20)" fg:x="95423" fg:w="2457"/><text x="82.6889%" y="479.50">p..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (116 samples, 0.10%)</title><rect x="84.4613%" y="453" width="0.1002%" height="15" fill="rgb(222,78,54)" fg:x="97764" fg:w="116"/><text x="84.7113%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (115 samples, 0.10%)</title><rect x="84.4622%" y="437" width="0.0994%" height="15" fill="rgb(232,85,16)" fg:x="97765" fg:w="115"/><text x="84.7122%" y="447.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (110 samples, 0.10%)</title><rect x="84.4665%" y="421" width="0.0950%" height="15" fill="rgb(244,25,33)" fg:x="97770" fg:w="110"/><text x="84.7165%" y="431.50"></text></g><g><title>___pthread_mutex_lock (110 samples, 0.10%)</title><rect x="84.4665%" y="405" width="0.0950%" height="15" fill="rgb(233,24,36)" fg:x="97770" fg:w="110"/><text x="84.7165%" y="415.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (12 samples, 0.01%)</title><rect x="84.5616%" y="453" width="0.0104%" height="15" fill="rgb(253,49,54)" fg:x="97880" fg:w="12"/><text x="84.8116%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="84.5616%" y="437" width="0.0104%" height="15" fill="rgb(245,12,22)" fg:x="97880" fg:w="12"/><text x="84.8116%" y="447.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="84.5616%" y="421" width="0.0104%" height="15" fill="rgb(253,141,28)" fg:x="97880" fg:w="12"/><text x="84.8116%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="84.5616%" y="405" width="0.0104%" height="15" fill="rgb(225,207,27)" fg:x="97880" fg:w="12"/><text x="84.8116%" y="415.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (3,163 samples, 2.73%)</title><rect x="81.8410%" y="501" width="2.7326%" height="15" fill="rgb(220,84,2)" fg:x="94731" fg:w="3163"/><text x="82.0910%" y="511.50">as..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.01%)</title><rect x="84.5616%" y="485" width="0.0121%" height="15" fill="rgb(224,37,37)" fg:x="97880" fg:w="14"/><text x="84.8116%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="84.5616%" y="469" width="0.0121%" height="15" fill="rgb(220,143,18)" fg:x="97880" fg:w="14"/><text x="84.8116%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (3,217 samples, 2.78%)</title><rect x="81.8402%" y="533" width="2.7793%" height="15" fill="rgb(210,88,33)" fg:x="94730" fg:w="3217"/><text x="82.0902%" y="543.50">co..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (3,216 samples, 2.78%)</title><rect x="81.8410%" y="517" width="2.7784%" height="15" fill="rgb(219,87,51)" fg:x="94731" fg:w="3216"/><text x="82.0910%" y="527.50">wa..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (53 samples, 0.05%)</title><rect x="84.5737%" y="501" width="0.0458%" height="15" fill="rgb(211,7,35)" fg:x="97894" fg:w="53"/><text x="84.8237%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="84.5737%" y="485" width="0.0458%" height="15" fill="rgb(232,77,2)" fg:x="97894" fg:w="53"/><text x="84.8237%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (50 samples, 0.04%)</title><rect x="84.5762%" y="469" width="0.0432%" height="15" fill="rgb(249,94,25)" fg:x="97897" fg:w="50"/><text x="84.8262%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (50 samples, 0.04%)</title><rect x="84.5762%" y="453" width="0.0432%" height="15" fill="rgb(215,112,2)" fg:x="97897" fg:w="50"/><text x="84.8262%" y="463.50"></text></g><g><title>async_executor::State::notify (3,409 samples, 2.95%)</title><rect x="81.7296%" y="549" width="2.9451%" height="15" fill="rgb(226,115,48)" fg:x="94602" fg:w="3409"/><text x="81.9796%" y="559.50">as..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="84.6194%" y="533" width="0.0553%" height="15" fill="rgb(249,196,10)" fg:x="97947" fg:w="64"/><text x="84.8694%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (61 samples, 0.05%)</title><rect x="84.6220%" y="517" width="0.0527%" height="15" fill="rgb(237,109,14)" fg:x="97950" fg:w="61"/><text x="84.8720%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (61 samples, 0.05%)</title><rect x="84.6220%" y="501" width="0.0527%" height="15" fill="rgb(217,103,53)" fg:x="97950" fg:w="61"/><text x="84.8720%" y="511.50"></text></g><g><title>___pthread_mutex_lock (61 samples, 0.05%)</title><rect x="84.6220%" y="485" width="0.0527%" height="15" fill="rgb(244,137,9)" fg:x="97950" fg:w="61"/><text x="84.8720%" y="495.50"></text></g><g><title>__GI___lll_lock_wait (19 samples, 0.02%)</title><rect x="84.6583%" y="469" width="0.0164%" height="15" fill="rgb(227,201,3)" fg:x="97992" fg:w="19"/><text x="84.9083%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.01%)</title><rect x="84.6618%" y="453" width="0.0130%" height="15" fill="rgb(243,94,6)" fg:x="97996" fg:w="15"/><text x="84.9118%" y="463.50"></text></g><g><title>do_syscall_64 (15 samples, 0.01%)</title><rect x="84.6618%" y="437" width="0.0130%" height="15" fill="rgb(235,118,5)" fg:x="97996" fg:w="15"/><text x="84.9118%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (119 samples, 0.10%)</title><rect x="84.6946%" y="517" width="0.1028%" height="15" fill="rgb(247,10,30)" fg:x="98034" fg:w="119"/><text x="84.9446%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (117 samples, 0.10%)</title><rect x="84.6963%" y="501" width="0.1011%" height="15" fill="rgb(205,26,28)" fg:x="98036" fg:w="117"/><text x="84.9463%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (114 samples, 0.10%)</title><rect x="84.6989%" y="485" width="0.0985%" height="15" fill="rgb(206,99,35)" fg:x="98039" fg:w="114"/><text x="84.9489%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (114 samples, 0.10%)</title><rect x="84.6989%" y="469" width="0.0985%" height="15" fill="rgb(238,130,40)" fg:x="98039" fg:w="114"/><text x="84.9489%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (114 samples, 0.10%)</title><rect x="84.6989%" y="453" width="0.0985%" height="15" fill="rgb(224,126,31)" fg:x="98039" fg:w="114"/><text x="84.9489%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (114 samples, 0.10%)</title><rect x="84.6989%" y="437" width="0.0985%" height="15" fill="rgb(254,105,17)" fg:x="98039" fg:w="114"/><text x="84.9489%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (40 samples, 0.03%)</title><rect x="84.7974%" y="517" width="0.0346%" height="15" fill="rgb(216,87,36)" fg:x="98153" fg:w="40"/><text x="85.0474%" y="527.50"></text></g><g><title>async_executor::Sleepers::insert (199 samples, 0.17%)</title><rect x="84.6911%" y="533" width="0.1719%" height="15" fill="rgb(240,21,12)" fg:x="98030" fg:w="199"/><text x="84.9411%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.03%)</title><rect x="84.8320%" y="517" width="0.0311%" height="15" fill="rgb(245,192,34)" fg:x="98193" fg:w="36"/><text x="85.0820%" y="527.50"></text></g><g><title>core::ptr::write (30 samples, 0.03%)</title><rect x="84.8371%" y="501" width="0.0259%" height="15" fill="rgb(226,100,49)" fg:x="98199" fg:w="30"/><text x="85.0871%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="84.8898%" y="517" width="0.0467%" height="15" fill="rgb(245,188,27)" fg:x="98260" fg:w="54"/><text x="85.1398%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (53 samples, 0.05%)</title><rect x="84.8907%" y="501" width="0.0458%" height="15" fill="rgb(212,170,8)" fg:x="98261" fg:w="53"/><text x="85.1407%" y="511.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (53 samples, 0.05%)</title><rect x="84.8907%" y="485" width="0.0458%" height="15" fill="rgb(217,113,29)" fg:x="98261" fg:w="53"/><text x="85.1407%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (53 samples, 0.05%)</title><rect x="84.8907%" y="469" width="0.0458%" height="15" fill="rgb(237,30,3)" fg:x="98261" fg:w="53"/><text x="85.1407%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (53 samples, 0.05%)</title><rect x="84.8907%" y="453" width="0.0458%" height="15" fill="rgb(227,19,28)" fg:x="98261" fg:w="53"/><text x="85.1407%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (53 samples, 0.05%)</title><rect x="84.8907%" y="437" width="0.0458%" height="15" fill="rgb(239,172,45)" fg:x="98261" fg:w="53"/><text x="85.1407%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.02%)</title><rect x="84.9365%" y="517" width="0.0199%" height="15" fill="rgb(254,55,39)" fg:x="98314" fg:w="23"/><text x="85.1865%" y="527.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="84.9382%" y="501" width="0.0181%" height="15" fill="rgb(249,208,12)" fg:x="98316" fg:w="21"/><text x="85.1882%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (112 samples, 0.10%)</title><rect x="84.8674%" y="533" width="0.0968%" height="15" fill="rgb(240,52,13)" fg:x="98234" fg:w="112"/><text x="85.1174%" y="543.50"></text></g><g><title>__entry_text_start (12 samples, 0.01%)</title><rect x="85.1706%" y="437" width="0.0104%" height="15" fill="rgb(252,149,13)" fg:x="98585" fg:w="12"/><text x="85.4206%" y="447.50"></text></g><g><title>_raw_spin_lock (32 samples, 0.03%)</title><rect x="85.2510%" y="357" width="0.0276%" height="15" fill="rgb(232,81,48)" fg:x="98678" fg:w="32"/><text x="85.5010%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (14 samples, 0.01%)</title><rect x="85.2665%" y="341" width="0.0121%" height="15" fill="rgb(222,144,2)" fg:x="98696" fg:w="14"/><text x="85.5165%" y="351.50"></text></g><g><title>futex_hash (15 samples, 0.01%)</title><rect x="85.2795%" y="357" width="0.0130%" height="15" fill="rgb(216,81,32)" fg:x="98711" fg:w="15"/><text x="85.5295%" y="367.50"></text></g><g><title>__x64_sys_futex (133 samples, 0.11%)</title><rect x="85.1905%" y="405" width="0.1149%" height="15" fill="rgb(244,78,51)" fg:x="98608" fg:w="133"/><text x="85.4405%" y="415.50"></text></g><g><title>do_futex (121 samples, 0.10%)</title><rect x="85.2009%" y="389" width="0.1045%" height="15" fill="rgb(217,66,21)" fg:x="98620" fg:w="121"/><text x="85.4509%" y="399.50"></text></g><g><title>futex_wake (115 samples, 0.10%)</title><rect x="85.2060%" y="373" width="0.0994%" height="15" fill="rgb(247,101,42)" fg:x="98626" fg:w="115"/><text x="85.4560%" y="383.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.01%)</title><rect x="85.4765%" y="389" width="0.0112%" height="15" fill="rgb(227,81,39)" fg:x="98939" fg:w="13"/><text x="85.7265%" y="399.50"></text></g><g><title>syscall_exit_to_user_mode (218 samples, 0.19%)</title><rect x="85.3080%" y="405" width="0.1883%" height="15" fill="rgb(220,223,44)" fg:x="98744" fg:w="218"/><text x="85.5580%" y="415.50"></text></g><g><title>__audit_syscall_entry (14 samples, 0.01%)</title><rect x="85.4998%" y="389" width="0.0121%" height="15" fill="rgb(205,218,2)" fg:x="98966" fg:w="14"/><text x="85.7498%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (390 samples, 0.34%)</title><rect x="85.1810%" y="437" width="0.3369%" height="15" fill="rgb(212,207,28)" fg:x="98597" fg:w="390"/><text x="85.4310%" y="447.50"></text></g><g><title>do_syscall_64 (387 samples, 0.33%)</title><rect x="85.1836%" y="421" width="0.3343%" height="15" fill="rgb(224,12,41)" fg:x="98600" fg:w="387"/><text x="85.4336%" y="431.50"></text></g><g><title>syscall_trace_enter.constprop.0 (25 samples, 0.02%)</title><rect x="85.4963%" y="405" width="0.0216%" height="15" fill="rgb(216,118,12)" fg:x="98962" fg:w="25"/><text x="85.7463%" y="415.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (638 samples, 0.55%)</title><rect x="84.9745%" y="469" width="0.5512%" height="15" fill="rgb(252,97,46)" fg:x="98358" fg:w="638"/><text x="85.2245%" y="479.50"></text></g><g><title>__GI___lll_lock_wake (429 samples, 0.37%)</title><rect x="85.1551%" y="453" width="0.3706%" height="15" fill="rgb(244,206,19)" fg:x="98567" fg:w="429"/><text x="85.4051%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (657 samples, 0.57%)</title><rect x="84.9641%" y="533" width="0.5676%" height="15" fill="rgb(231,84,31)" fg:x="98346" fg:w="657"/><text x="85.2141%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (657 samples, 0.57%)</title><rect x="84.9641%" y="517" width="0.5676%" height="15" fill="rgb(244,133,0)" fg:x="98346" fg:w="657"/><text x="85.2141%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (648 samples, 0.56%)</title><rect x="84.9719%" y="501" width="0.5598%" height="15" fill="rgb(223,15,50)" fg:x="98355" fg:w="648"/><text x="85.2219%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (645 samples, 0.56%)</title><rect x="84.9745%" y="485" width="0.5572%" height="15" fill="rgb(250,118,49)" fg:x="98358" fg:w="645"/><text x="85.2245%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (163 samples, 0.14%)</title><rect x="85.5317%" y="533" width="0.1408%" height="15" fill="rgb(248,25,38)" fg:x="99003" fg:w="163"/><text x="85.7817%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (163 samples, 0.14%)</title><rect x="85.5317%" y="517" width="0.1408%" height="15" fill="rgb(215,70,14)" fg:x="99003" fg:w="163"/><text x="85.7817%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (106 samples, 0.09%)</title><rect x="85.6726%" y="533" width="0.0916%" height="15" fill="rgb(215,28,15)" fg:x="99166" fg:w="106"/><text x="85.9226%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (106 samples, 0.09%)</title><rect x="85.6726%" y="517" width="0.0916%" height="15" fill="rgb(243,6,28)" fg:x="99166" fg:w="106"/><text x="85.9226%" y="527.50"></text></g><g><title>std::sync::poison::Flag::get (15 samples, 0.01%)</title><rect x="85.7641%" y="485" width="0.0130%" height="15" fill="rgb(222,130,1)" fg:x="99272" fg:w="15"/><text x="86.0141%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (15 samples, 0.01%)</title><rect x="85.7641%" y="469" width="0.0130%" height="15" fill="rgb(236,166,44)" fg:x="99272" fg:w="15"/><text x="86.0141%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="85.7641%" y="453" width="0.0130%" height="15" fill="rgb(221,108,14)" fg:x="99272" fg:w="15"/><text x="86.0141%" y="463.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="85.7641%" y="517" width="0.0156%" height="15" fill="rgb(252,3,45)" fg:x="99272" fg:w="18"/><text x="86.0141%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (18 samples, 0.02%)</title><rect x="85.7641%" y="501" width="0.0156%" height="15" fill="rgb(237,68,30)" fg:x="99272" fg:w="18"/><text x="86.0141%" y="511.50"></text></g><g><title>futex_get_value_locked (22 samples, 0.02%)</title><rect x="86.4674%" y="357" width="0.0190%" height="15" fill="rgb(211,79,22)" fg:x="100086" fg:w="22"/><text x="86.7174%" y="367.50"></text></g><g><title>__get_user_nocheck_4 (18 samples, 0.02%)</title><rect x="86.4708%" y="341" width="0.0156%" height="15" fill="rgb(252,185,21)" fg:x="100090" fg:w="18"/><text x="86.7208%" y="351.50"></text></g><g><title>futex_q_lock (21 samples, 0.02%)</title><rect x="86.4864%" y="357" width="0.0181%" height="15" fill="rgb(225,189,26)" fg:x="100108" fg:w="21"/><text x="86.7364%" y="367.50"></text></g><g><title>__x64_sys_futex (80 samples, 0.07%)</title><rect x="86.4441%" y="421" width="0.0691%" height="15" fill="rgb(241,30,40)" fg:x="100059" fg:w="80"/><text x="86.6941%" y="431.50"></text></g><g><title>do_futex (76 samples, 0.07%)</title><rect x="86.4475%" y="405" width="0.0657%" height="15" fill="rgb(235,215,44)" fg:x="100063" fg:w="76"/><text x="86.6975%" y="415.50"></text></g><g><title>futex_wait (73 samples, 0.06%)</title><rect x="86.4501%" y="389" width="0.0631%" height="15" fill="rgb(205,8,29)" fg:x="100066" fg:w="73"/><text x="86.7001%" y="399.50"></text></g><g><title>futex_wait_setup (58 samples, 0.05%)</title><rect x="86.4631%" y="373" width="0.0501%" height="15" fill="rgb(241,137,42)" fg:x="100081" fg:w="58"/><text x="86.7131%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (72 samples, 0.06%)</title><rect x="86.5132%" y="421" width="0.0622%" height="15" fill="rgb(237,155,2)" fg:x="100139" fg:w="72"/><text x="86.7632%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (161 samples, 0.14%)</title><rect x="86.4397%" y="453" width="0.1391%" height="15" fill="rgb(245,29,42)" fg:x="100054" fg:w="161"/><text x="86.6897%" y="463.50"></text></g><g><title>do_syscall_64 (158 samples, 0.14%)</title><rect x="86.4423%" y="437" width="0.1365%" height="15" fill="rgb(234,101,35)" fg:x="100057" fg:w="158"/><text x="86.6923%" y="447.50"></text></g><g><title>__GI___lll_lock_wait (221 samples, 0.19%)</title><rect x="86.3914%" y="469" width="0.1909%" height="15" fill="rgb(228,64,37)" fg:x="99998" fg:w="221"/><text x="86.6414%" y="479.50"></text></g><g><title>async_executor::Ticker::sleep (2,210 samples, 1.91%)</title><rect x="84.6747%" y="549" width="1.9093%" height="15" fill="rgb(217,214,36)" fg:x="98011" fg:w="2210"/><text x="84.9247%" y="559.50">a..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (949 samples, 0.82%)</title><rect x="85.7641%" y="533" width="0.8199%" height="15" fill="rgb(243,70,3)" fg:x="99272" fg:w="949"/><text x="86.0141%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (931 samples, 0.80%)</title><rect x="85.7797%" y="517" width="0.8043%" height="15" fill="rgb(253,158,52)" fg:x="99290" fg:w="931"/><text x="86.0297%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (869 samples, 0.75%)</title><rect x="85.8333%" y="501" width="0.7508%" height="15" fill="rgb(234,111,54)" fg:x="99352" fg:w="869"/><text x="86.0833%" y="511.50"></text></g><g><title>___pthread_mutex_lock (869 samples, 0.75%)</title><rect x="85.8333%" y="485" width="0.7508%" height="15" fill="rgb(217,70,32)" fg:x="99352" fg:w="869"/><text x="86.0833%" y="495.50"></text></g><g><title>async_executor::Sleepers::remove (85 samples, 0.07%)</title><rect x="86.5875%" y="533" width="0.0734%" height="15" fill="rgb(234,18,33)" fg:x="100225" fg:w="85"/><text x="86.8375%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (48 samples, 0.04%)</title><rect x="86.6194%" y="517" width="0.0415%" height="15" fill="rgb(234,12,49)" fg:x="100262" fg:w="48"/><text x="86.8694%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (48 samples, 0.04%)</title><rect x="86.6194%" y="501" width="0.0415%" height="15" fill="rgb(236,10,21)" fg:x="100262" fg:w="48"/><text x="86.8694%" y="511.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="86.6194%" y="485" width="0.0415%" height="15" fill="rgb(248,182,45)" fg:x="100262" fg:w="48"/><text x="86.8694%" y="495.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (48 samples, 0.04%)</title><rect x="86.6194%" y="469" width="0.0415%" height="15" fill="rgb(217,95,36)" fg:x="100262" fg:w="48"/><text x="86.8694%" y="479.50"></text></g><g><title>core::mem::drop (47 samples, 0.04%)</title><rect x="86.6203%" y="453" width="0.0406%" height="15" fill="rgb(212,110,31)" fg:x="100263" fg:w="47"/><text x="86.8703%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (47 samples, 0.04%)</title><rect x="86.6203%" y="437" width="0.0406%" height="15" fill="rgb(206,32,53)" fg:x="100263" fg:w="47"/><text x="86.8703%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.04%)</title><rect x="86.6203%" y="421" width="0.0406%" height="15" fill="rgb(246,141,37)" fg:x="100263" fg:w="47"/><text x="86.8703%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (47 samples, 0.04%)</title><rect x="86.6203%" y="405" width="0.0406%" height="15" fill="rgb(219,16,7)" fg:x="100263" fg:w="47"/><text x="86.8703%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (47 samples, 0.04%)</title><rect x="86.6203%" y="389" width="0.0406%" height="15" fill="rgb(230,205,45)" fg:x="100263" fg:w="47"/><text x="86.8703%" y="399.50"></text></g><g><title>__x64_sys_futex (36 samples, 0.03%)</title><rect x="86.7119%" y="405" width="0.0311%" height="15" fill="rgb(231,43,49)" fg:x="100369" fg:w="36"/><text x="86.9619%" y="415.50"></text></g><g><title>do_futex (30 samples, 0.03%)</title><rect x="86.7171%" y="389" width="0.0259%" height="15" fill="rgb(212,106,34)" fg:x="100375" fg:w="30"/><text x="86.9671%" y="399.50"></text></g><g><title>futex_wake (29 samples, 0.03%)</title><rect x="86.7179%" y="373" width="0.0251%" height="15" fill="rgb(206,83,17)" fg:x="100376" fg:w="29"/><text x="86.9679%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (74 samples, 0.06%)</title><rect x="86.7430%" y="405" width="0.0639%" height="15" fill="rgb(244,154,49)" fg:x="100405" fg:w="74"/><text x="86.9930%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (116 samples, 0.10%)</title><rect x="86.7093%" y="437" width="0.1002%" height="15" fill="rgb(244,149,49)" fg:x="100366" fg:w="116"/><text x="86.9593%" y="447.50"></text></g><g><title>do_syscall_64 (114 samples, 0.10%)</title><rect x="86.7110%" y="421" width="0.0985%" height="15" fill="rgb(227,134,18)" fg:x="100368" fg:w="114"/><text x="86.9610%" y="431.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (168 samples, 0.15%)</title><rect x="86.6652%" y="469" width="0.1451%" height="15" fill="rgb(237,116,36)" fg:x="100315" fg:w="168"/><text x="86.9152%" y="479.50"></text></g><g><title>__GI___lll_lock_wake (131 samples, 0.11%)</title><rect x="86.6972%" y="453" width="0.1132%" height="15" fill="rgb(205,129,40)" fg:x="100352" fg:w="131"/><text x="86.9472%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (174 samples, 0.15%)</title><rect x="86.6626%" y="533" width="0.1503%" height="15" fill="rgb(236,178,4)" fg:x="100312" fg:w="174"/><text x="86.9126%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (174 samples, 0.15%)</title><rect x="86.6626%" y="517" width="0.1503%" height="15" fill="rgb(251,76,53)" fg:x="100312" fg:w="174"/><text x="86.9126%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (171 samples, 0.15%)</title><rect x="86.6652%" y="501" width="0.1477%" height="15" fill="rgb(242,92,40)" fg:x="100315" fg:w="171"/><text x="86.9152%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (171 samples, 0.15%)</title><rect x="86.6652%" y="485" width="0.1477%" height="15" fill="rgb(209,45,30)" fg:x="100315" fg:w="171"/><text x="86.9152%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (58 samples, 0.05%)</title><rect x="86.8130%" y="533" width="0.0501%" height="15" fill="rgb(218,157,36)" fg:x="100486" fg:w="58"/><text x="87.0630%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (58 samples, 0.05%)</title><rect x="86.8130%" y="517" width="0.0501%" height="15" fill="rgb(222,186,16)" fg:x="100486" fg:w="58"/><text x="87.0630%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (75 samples, 0.06%)</title><rect x="86.8631%" y="533" width="0.0648%" height="15" fill="rgb(254,72,35)" fg:x="100544" fg:w="75"/><text x="87.1131%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (75 samples, 0.06%)</title><rect x="86.8631%" y="517" width="0.0648%" height="15" fill="rgb(224,25,35)" fg:x="100544" fg:w="75"/><text x="87.1131%" y="527.50"></text></g><g><title>futex_q_lock (12 samples, 0.01%)</title><rect x="87.0514%" y="357" width="0.0104%" height="15" fill="rgb(206,135,52)" fg:x="100762" fg:w="12"/><text x="87.3014%" y="367.50"></text></g><g><title>__x64_sys_futex (38 samples, 0.03%)</title><rect x="87.0333%" y="421" width="0.0328%" height="15" fill="rgb(229,174,47)" fg:x="100741" fg:w="38"/><text x="87.2833%" y="431.50"></text></g><g><title>do_futex (37 samples, 0.03%)</title><rect x="87.0341%" y="405" width="0.0320%" height="15" fill="rgb(242,184,21)" fg:x="100742" fg:w="37"/><text x="87.2841%" y="415.50"></text></g><g><title>futex_wait (34 samples, 0.03%)</title><rect x="87.0367%" y="389" width="0.0294%" height="15" fill="rgb(213,22,45)" fg:x="100745" fg:w="34"/><text x="87.2867%" y="399.50"></text></g><g><title>futex_wait_setup (26 samples, 0.02%)</title><rect x="87.0436%" y="373" width="0.0225%" height="15" fill="rgb(237,81,54)" fg:x="100753" fg:w="26"/><text x="87.2936%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (30 samples, 0.03%)</title><rect x="87.0670%" y="421" width="0.0259%" height="15" fill="rgb(248,177,18)" fg:x="100780" fg:w="30"/><text x="87.3170%" y="431.50"></text></g><g><title>__GI___lll_lock_wait (95 samples, 0.08%)</title><rect x="87.0117%" y="469" width="0.0821%" height="15" fill="rgb(254,31,16)" fg:x="100716" fg:w="95"/><text x="87.2617%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (72 samples, 0.06%)</title><rect x="87.0315%" y="453" width="0.0622%" height="15" fill="rgb(235,20,31)" fg:x="100739" fg:w="72"/><text x="87.2815%" y="463.50"></text></g><g><title>do_syscall_64 (72 samples, 0.06%)</title><rect x="87.0315%" y="437" width="0.0622%" height="15" fill="rgb(240,56,43)" fg:x="100739" fg:w="72"/><text x="87.2815%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,462 samples, 9.04%)</title><rect x="78.0562%" y="613" width="9.0384%" height="15" fill="rgb(237,197,51)" fg:x="90350" fg:w="10462"/><text x="78.3062%" y="623.50">&lt;core::future..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (10,459 samples, 9.04%)</title><rect x="78.0587%" y="597" width="9.0359%" height="15" fill="rgb(241,162,44)" fg:x="90353" fg:w="10459"/><text x="78.3087%" y="607.50">async_executo..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10,448 samples, 9.03%)</title><rect x="78.0683%" y="581" width="9.0263%" height="15" fill="rgb(224,23,20)" fg:x="90364" fg:w="10448"/><text x="78.3183%" y="591.50">&lt;futures_lite..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (10,428 samples, 9.01%)</title><rect x="78.0855%" y="565" width="9.0091%" height="15" fill="rgb(250,109,34)" fg:x="90384" fg:w="10428"/><text x="78.3355%" y="575.50">async_executo..</text></g><g><title>async_executor::Ticker::wake (591 samples, 0.51%)</title><rect x="86.5840%" y="549" width="0.5106%" height="15" fill="rgb(214,175,50)" fg:x="100221" fg:w="591"/><text x="86.8340%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (193 samples, 0.17%)</title><rect x="86.9279%" y="533" width="0.1667%" height="15" fill="rgb(213,182,5)" fg:x="100619" fg:w="193"/><text x="87.1779%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (192 samples, 0.17%)</title><rect x="86.9287%" y="517" width="0.1659%" height="15" fill="rgb(209,199,19)" fg:x="100620" fg:w="192"/><text x="87.1787%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (183 samples, 0.16%)</title><rect x="86.9365%" y="501" width="0.1581%" height="15" fill="rgb(236,224,42)" fg:x="100629" fg:w="183"/><text x="87.1865%" y="511.50"></text></g><g><title>___pthread_mutex_lock (183 samples, 0.16%)</title><rect x="86.9365%" y="485" width="0.1581%" height="15" fill="rgb(246,226,29)" fg:x="100629" fg:w="183"/><text x="87.1865%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,561 samples, 9.12%)</title><rect x="78.0346%" y="645" width="9.1240%" height="15" fill="rgb(227,223,11)" fg:x="90325" fg:w="10561"/><text x="78.2846%" y="655.50">&lt;core::future..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (10,559 samples, 9.12%)</title><rect x="78.0363%" y="629" width="9.1222%" height="15" fill="rgb(219,7,51)" fg:x="90327" fg:w="10559"/><text x="78.2863%" y="639.50">async_executo..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (72 samples, 0.06%)</title><rect x="87.0963%" y="613" width="0.0622%" height="15" fill="rgb(245,167,10)" fg:x="100814" fg:w="72"/><text x="87.3463%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (72 samples, 0.06%)</title><rect x="87.0963%" y="597" width="0.0622%" height="15" fill="rgb(237,224,16)" fg:x="100814" fg:w="72"/><text x="87.3463%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (66 samples, 0.06%)</title><rect x="87.2648%" y="517" width="0.0570%" height="15" fill="rgb(226,132,13)" fg:x="101009" fg:w="66"/><text x="87.5148%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (65 samples, 0.06%)</title><rect x="87.2657%" y="501" width="0.0562%" height="15" fill="rgb(214,140,3)" fg:x="101010" fg:w="65"/><text x="87.5157%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="87.3235%" y="501" width="0.0371%" height="15" fill="rgb(221,177,4)" fg:x="101077" fg:w="43"/><text x="87.5735%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (196 samples, 0.17%)</title><rect x="87.2078%" y="597" width="0.1693%" height="15" fill="rgb(238,139,3)" fg:x="100943" fg:w="196"/><text x="87.4578%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (194 samples, 0.17%)</title><rect x="87.2095%" y="581" width="0.1676%" height="15" fill="rgb(216,17,39)" fg:x="100945" fg:w="194"/><text x="87.4595%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (136 samples, 0.12%)</title><rect x="87.2596%" y="565" width="0.1175%" height="15" fill="rgb(238,120,9)" fg:x="101003" fg:w="136"/><text x="87.5096%" y="575.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (136 samples, 0.12%)</title><rect x="87.2596%" y="549" width="0.1175%" height="15" fill="rgb(244,92,53)" fg:x="101003" fg:w="136"/><text x="87.5096%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (132 samples, 0.11%)</title><rect x="87.2631%" y="533" width="0.1140%" height="15" fill="rgb(224,148,33)" fg:x="101007" fg:w="132"/><text x="87.5131%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (64 samples, 0.06%)</title><rect x="87.3218%" y="517" width="0.0553%" height="15" fill="rgb(243,6,36)" fg:x="101075" fg:w="64"/><text x="87.5718%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (15 samples, 0.01%)</title><rect x="87.3641%" y="501" width="0.0130%" height="15" fill="rgb(230,102,11)" fg:x="101124" fg:w="15"/><text x="87.6141%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (197 samples, 0.17%)</title><rect x="87.2078%" y="613" width="0.1702%" height="15" fill="rgb(234,148,36)" fg:x="100943" fg:w="197"/><text x="87.4578%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (45 samples, 0.04%)</title><rect x="87.3780%" y="613" width="0.0389%" height="15" fill="rgb(251,153,25)" fg:x="101140" fg:w="45"/><text x="87.6280%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (43 samples, 0.04%)</title><rect x="87.3797%" y="597" width="0.0371%" height="15" fill="rgb(215,129,8)" fg:x="101142" fg:w="43"/><text x="87.6297%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (43 samples, 0.04%)</title><rect x="87.3797%" y="581" width="0.0371%" height="15" fill="rgb(224,128,35)" fg:x="101142" fg:w="43"/><text x="87.6297%" y="591.50"></text></g><g><title>ttwu_do_activate (20 samples, 0.02%)</title><rect x="87.4488%" y="277" width="0.0173%" height="15" fill="rgb(237,56,52)" fg:x="101222" fg:w="20"/><text x="87.6988%" y="287.50"></text></g><g><title>enqueue_task (20 samples, 0.02%)</title><rect x="87.4488%" y="261" width="0.0173%" height="15" fill="rgb(234,213,19)" fg:x="101222" fg:w="20"/><text x="87.6988%" y="271.50"></text></g><g><title>__wake_up_common_lock (37 samples, 0.03%)</title><rect x="87.4402%" y="341" width="0.0320%" height="15" fill="rgb(252,82,23)" fg:x="101212" fg:w="37"/><text x="87.6902%" y="351.50"></text></g><g><title>__wake_up_common (37 samples, 0.03%)</title><rect x="87.4402%" y="325" width="0.0320%" height="15" fill="rgb(254,201,21)" fg:x="101212" fg:w="37"/><text x="87.6902%" y="335.50"></text></g><g><title>autoremove_wake_function (35 samples, 0.03%)</title><rect x="87.4419%" y="309" width="0.0302%" height="15" fill="rgb(250,186,11)" fg:x="101214" fg:w="35"/><text x="87.6919%" y="319.50"></text></g><g><title>try_to_wake_up (32 samples, 0.03%)</title><rect x="87.4445%" y="293" width="0.0276%" height="15" fill="rgb(211,174,5)" fg:x="101217" fg:w="32"/><text x="87.6945%" y="303.50"></text></g><g><title>__wake_up_common (47 samples, 0.04%)</title><rect x="87.4359%" y="373" width="0.0406%" height="15" fill="rgb(214,121,10)" fg:x="101207" fg:w="47"/><text x="87.6859%" y="383.50"></text></g><g><title>ep_poll_callback (47 samples, 0.04%)</title><rect x="87.4359%" y="357" width="0.0406%" height="15" fill="rgb(241,66,2)" fg:x="101207" fg:w="47"/><text x="87.6859%" y="367.50"></text></g><g><title>ksys_write (53 samples, 0.05%)</title><rect x="87.4333%" y="421" width="0.0458%" height="15" fill="rgb(220,167,19)" fg:x="101204" fg:w="53"/><text x="87.6833%" y="431.50"></text></g><g><title>vfs_write (50 samples, 0.04%)</title><rect x="87.4359%" y="405" width="0.0432%" height="15" fill="rgb(231,54,50)" fg:x="101207" fg:w="50"/><text x="87.6859%" y="415.50"></text></g><g><title>eventfd_write (50 samples, 0.04%)</title><rect x="87.4359%" y="389" width="0.0432%" height="15" fill="rgb(239,217,53)" fg:x="101207" fg:w="50"/><text x="87.6859%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (64 samples, 0.06%)</title><rect x="87.4307%" y="453" width="0.0553%" height="15" fill="rgb(248,8,0)" fg:x="101201" fg:w="64"/><text x="87.6807%" y="463.50"></text></g><g><title>do_syscall_64 (64 samples, 0.06%)</title><rect x="87.4307%" y="437" width="0.0553%" height="15" fill="rgb(229,118,37)" fg:x="101201" fg:w="64"/><text x="87.6807%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::notify (72 samples, 0.06%)</title><rect x="87.4255%" y="517" width="0.0622%" height="15" fill="rgb(253,223,43)" fg:x="101195" fg:w="72"/><text x="87.6755%" y="527.50"></text></g><g><title>polling::Poller::notify (72 samples, 0.06%)</title><rect x="87.4255%" y="501" width="0.0622%" height="15" fill="rgb(211,77,36)" fg:x="101195" fg:w="72"/><text x="87.6755%" y="511.50"></text></g><g><title>polling::epoll::Poller::notify (71 samples, 0.06%)</title><rect x="87.4263%" y="485" width="0.0613%" height="15" fill="rgb(219,3,53)" fg:x="101196" fg:w="71"/><text x="87.6763%" y="495.50"></text></g><g><title>__GI___write (71 samples, 0.06%)</title><rect x="87.4263%" y="469" width="0.0613%" height="15" fill="rgb(244,45,42)" fg:x="101196" fg:w="71"/><text x="87.6763%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (12 samples, 0.01%)</title><rect x="87.4920%" y="485" width="0.0104%" height="15" fill="rgb(225,95,27)" fg:x="101272" fg:w="12"/><text x="87.7420%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.01%)</title><rect x="87.4920%" y="469" width="0.0104%" height="15" fill="rgb(207,74,8)" fg:x="101272" fg:w="12"/><text x="87.7420%" y="479.50"></text></g><g><title>select_task_rq_fair (18 samples, 0.02%)</title><rect x="87.5369%" y="309" width="0.0156%" height="15" fill="rgb(243,63,36)" fg:x="101324" fg:w="18"/><text x="87.7869%" y="319.50"></text></g><g><title>enqueue_task_fair (19 samples, 0.02%)</title><rect x="87.5525%" y="277" width="0.0164%" height="15" fill="rgb(211,180,12)" fg:x="101342" fg:w="19"/><text x="87.8025%" y="287.50"></text></g><g><title>ttwu_do_activate (40 samples, 0.03%)</title><rect x="87.5525%" y="309" width="0.0346%" height="15" fill="rgb(254,166,49)" fg:x="101342" fg:w="40"/><text x="87.8025%" y="319.50"></text></g><g><title>enqueue_task (40 samples, 0.03%)</title><rect x="87.5525%" y="293" width="0.0346%" height="15" fill="rgb(205,19,0)" fg:x="101342" fg:w="40"/><text x="87.8025%" y="303.50"></text></g><g><title>psi_task_change (14 samples, 0.01%)</title><rect x="87.5749%" y="277" width="0.0121%" height="15" fill="rgb(224,172,32)" fg:x="101368" fg:w="14"/><text x="87.8249%" y="287.50"></text></g><g><title>__x64_sys_futex (100 samples, 0.09%)</title><rect x="87.5119%" y="389" width="0.0864%" height="15" fill="rgb(254,136,30)" fg:x="101295" fg:w="100"/><text x="87.7619%" y="399.50"></text></g><g><title>do_futex (99 samples, 0.09%)</title><rect x="87.5127%" y="373" width="0.0855%" height="15" fill="rgb(246,19,35)" fg:x="101296" fg:w="99"/><text x="87.7627%" y="383.50"></text></g><g><title>futex_wake (99 samples, 0.09%)</title><rect x="87.5127%" y="357" width="0.0855%" height="15" fill="rgb(219,24,36)" fg:x="101296" fg:w="99"/><text x="87.7627%" y="367.50"></text></g><g><title>wake_up_q (80 samples, 0.07%)</title><rect x="87.5292%" y="341" width="0.0691%" height="15" fill="rgb(251,55,1)" fg:x="101315" fg:w="80"/><text x="87.7792%" y="351.50"></text></g><g><title>try_to_wake_up (77 samples, 0.07%)</title><rect x="87.5317%" y="325" width="0.0665%" height="15" fill="rgb(218,117,39)" fg:x="101318" fg:w="77"/><text x="87.7817%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.02%)</title><rect x="87.6000%" y="389" width="0.0156%" height="15" fill="rgb(248,169,11)" fg:x="101397" fg:w="18"/><text x="87.8500%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (123 samples, 0.11%)</title><rect x="87.5102%" y="421" width="0.1063%" height="15" fill="rgb(244,40,44)" fg:x="101293" fg:w="123"/><text x="87.7602%" y="431.50"></text></g><g><title>do_syscall_64 (121 samples, 0.10%)</title><rect x="87.5119%" y="405" width="0.1045%" height="15" fill="rgb(234,62,37)" fg:x="101295" fg:w="121"/><text x="87.7619%" y="415.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (133 samples, 0.11%)</title><rect x="87.5024%" y="485" width="0.1149%" height="15" fill="rgb(207,117,42)" fg:x="101284" fg:w="133"/><text x="87.7524%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (133 samples, 0.11%)</title><rect x="87.5024%" y="469" width="0.1149%" height="15" fill="rgb(213,43,2)" fg:x="101284" fg:w="133"/><text x="87.7524%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (133 samples, 0.11%)</title><rect x="87.5024%" y="453" width="0.1149%" height="15" fill="rgb(244,202,51)" fg:x="101284" fg:w="133"/><text x="87.7524%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (133 samples, 0.11%)</title><rect x="87.5024%" y="437" width="0.1149%" height="15" fill="rgb(253,174,46)" fg:x="101284" fg:w="133"/><text x="87.7524%" y="447.50"></text></g><g><title>parking::Unparker::unpark (154 samples, 0.13%)</title><rect x="87.4886%" y="517" width="0.1330%" height="15" fill="rgb(251,23,1)" fg:x="101268" fg:w="154"/><text x="87.7386%" y="527.50"></text></g><g><title>parking::Inner::unpark (152 samples, 0.13%)</title><rect x="87.4903%" y="501" width="0.1313%" height="15" fill="rgb(253,26,1)" fg:x="101270" fg:w="152"/><text x="87.7403%" y="511.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (232 samples, 0.20%)</title><rect x="87.4229%" y="533" width="0.2004%" height="15" fill="rgb(216,89,31)" fg:x="101192" fg:w="232"/><text x="87.6729%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (236 samples, 0.20%)</title><rect x="87.4212%" y="565" width="0.2039%" height="15" fill="rgb(209,109,5)" fg:x="101190" fg:w="236"/><text x="87.6712%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (235 samples, 0.20%)</title><rect x="87.4220%" y="549" width="0.2030%" height="15" fill="rgb(229,63,13)" fg:x="101191" fg:w="235"/><text x="87.6720%" y="559.50"></text></g><g><title>async_executor::State::notify (246 samples, 0.21%)</title><rect x="87.4168%" y="581" width="0.2125%" height="15" fill="rgb(238,137,54)" fg:x="101185" fg:w="246"/><text x="87.6668%" y="591.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (265 samples, 0.23%)</title><rect x="87.4168%" y="597" width="0.2289%" height="15" fill="rgb(228,1,9)" fg:x="101185" fg:w="265"/><text x="87.6668%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (19 samples, 0.02%)</title><rect x="87.6294%" y="581" width="0.0164%" height="15" fill="rgb(249,120,48)" fg:x="101431" fg:w="19"/><text x="87.8794%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="87.6337%" y="565" width="0.0121%" height="15" fill="rgb(209,72,36)" fg:x="101436" fg:w="14"/><text x="87.8837%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (268 samples, 0.23%)</title><rect x="87.4168%" y="613" width="0.2315%" height="15" fill="rgb(247,98,49)" fg:x="101185" fg:w="268"/><text x="87.6668%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (177 samples, 0.15%)</title><rect x="87.6484%" y="613" width="0.1529%" height="15" fill="rgb(233,75,36)" fg:x="101453" fg:w="177"/><text x="87.8984%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (177 samples, 0.15%)</title><rect x="87.6484%" y="597" width="0.1529%" height="15" fill="rgb(225,14,24)" fg:x="101453" fg:w="177"/><text x="87.8984%" y="607.50"></text></g><g><title>async_task::runnable::Runnable::run (749 samples, 0.65%)</title><rect x="87.1594%" y="645" width="0.6471%" height="15" fill="rgb(237,193,20)" fg:x="100887" fg:w="749"/><text x="87.4094%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (728 samples, 0.63%)</title><rect x="87.1775%" y="629" width="0.6289%" height="15" fill="rgb(239,122,19)" fg:x="100908" fg:w="728"/><text x="87.4275%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (11,363 samples, 9.82%)</title><rect x="78.0009%" y="709" width="9.8168%" height="15" fill="rgb(231,220,10)" fg:x="90286" fg:w="11363"/><text x="78.2509%" y="719.50">async_executor..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,340 samples, 9.80%)</title><rect x="78.0207%" y="693" width="9.7970%" height="15" fill="rgb(220,66,15)" fg:x="90309" fg:w="11340"/><text x="78.2707%" y="703.50">&lt;futures_lite:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,340 samples, 9.80%)</title><rect x="78.0207%" y="677" width="9.7970%" height="15" fill="rgb(215,171,52)" fg:x="90309" fg:w="11340"/><text x="78.2707%" y="687.50">&lt;core::future:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,335 samples, 9.79%)</title><rect x="78.0251%" y="661" width="9.7927%" height="15" fill="rgb(241,169,50)" fg:x="90314" fg:w="11335"/><text x="78.2751%" y="671.50">async_executor..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.01%)</title><rect x="87.8065%" y="645" width="0.0112%" height="15" fill="rgb(236,189,0)" fg:x="101636" fg:w="13"/><text x="88.0565%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.01%)</title><rect x="87.8065%" y="629" width="0.0112%" height="15" fill="rgb(217,147,20)" fg:x="101636" fg:w="13"/><text x="88.0565%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="87.9153%" y="501" width="0.0181%" height="15" fill="rgb(206,188,39)" fg:x="101762" fg:w="21"/><text x="88.1653%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (21 samples, 0.02%)</title><rect x="87.9153%" y="485" width="0.0181%" height="15" fill="rgb(227,118,25)" fg:x="101762" fg:w="21"/><text x="88.1653%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.02%)</title><rect x="87.9153%" y="469" width="0.0181%" height="15" fill="rgb(248,171,40)" fg:x="101762" fg:w="21"/><text x="88.1653%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.02%)</title><rect x="87.9162%" y="453" width="0.0173%" height="15" fill="rgb(251,90,54)" fg:x="101763" fg:w="20"/><text x="88.1662%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.02%)</title><rect x="87.9162%" y="437" width="0.0173%" height="15" fill="rgb(234,11,46)" fg:x="101763" fg:w="20"/><text x="88.1662%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.02%)</title><rect x="87.9179%" y="421" width="0.0156%" height="15" fill="rgb(229,134,13)" fg:x="101765" fg:w="18"/><text x="88.1679%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.01%)</title><rect x="87.9188%" y="405" width="0.0147%" height="15" fill="rgb(223,129,3)" fg:x="101766" fg:w="17"/><text x="88.1688%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (17 samples, 0.01%)</title><rect x="87.9188%" y="389" width="0.0147%" height="15" fill="rgb(221,124,13)" fg:x="101766" fg:w="17"/><text x="88.1688%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (17 samples, 0.01%)</title><rect x="87.9188%" y="373" width="0.0147%" height="15" fill="rgb(234,3,18)" fg:x="101766" fg:w="17"/><text x="88.1688%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.01%)</title><rect x="87.9188%" y="357" width="0.0147%" height="15" fill="rgb(249,199,20)" fg:x="101766" fg:w="17"/><text x="88.1688%" y="367.50"></text></g><g><title>concurrent_queue::full_fence (35 samples, 0.03%)</title><rect x="87.9724%" y="469" width="0.0302%" height="15" fill="rgb(224,134,6)" fg:x="101828" fg:w="35"/><text x="88.2224%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (35 samples, 0.03%)</title><rect x="87.9724%" y="453" width="0.0302%" height="15" fill="rgb(254,83,26)" fg:x="101828" fg:w="35"/><text x="88.2224%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (35 samples, 0.03%)</title><rect x="87.9724%" y="437" width="0.0302%" height="15" fill="rgb(217,88,9)" fg:x="101828" fg:w="35"/><text x="88.2224%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="87.9724%" y="421" width="0.0302%" height="15" fill="rgb(225,73,2)" fg:x="101828" fg:w="35"/><text x="88.2224%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (129 samples, 0.11%)</title><rect x="87.9525%" y="485" width="0.1114%" height="15" fill="rgb(226,44,39)" fg:x="101805" fg:w="129"/><text x="88.2025%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (71 samples, 0.06%)</title><rect x="88.0026%" y="469" width="0.0613%" height="15" fill="rgb(228,53,17)" fg:x="101863" fg:w="71"/><text x="88.2526%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (71 samples, 0.06%)</title><rect x="88.0026%" y="453" width="0.0613%" height="15" fill="rgb(212,27,27)" fg:x="101863" fg:w="71"/><text x="88.2526%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (46 samples, 0.04%)</title><rect x="88.0743%" y="469" width="0.0397%" height="15" fill="rgb(241,50,6)" fg:x="101946" fg:w="46"/><text x="88.3243%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (44 samples, 0.04%)</title><rect x="88.0760%" y="453" width="0.0380%" height="15" fill="rgb(225,28,51)" fg:x="101948" fg:w="44"/><text x="88.3260%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (44 samples, 0.04%)</title><rect x="88.0760%" y="437" width="0.0380%" height="15" fill="rgb(215,33,16)" fg:x="101948" fg:w="44"/><text x="88.3260%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.04%)</title><rect x="88.0760%" y="421" width="0.0380%" height="15" fill="rgb(243,40,39)" fg:x="101948" fg:w="44"/><text x="88.3260%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (241 samples, 0.21%)</title><rect x="87.9335%" y="501" width="0.2082%" height="15" fill="rgb(225,11,42)" fg:x="101783" fg:w="241"/><text x="88.1835%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (90 samples, 0.08%)</title><rect x="88.0639%" y="485" width="0.0778%" height="15" fill="rgb(241,220,38)" fg:x="101934" fg:w="90"/><text x="88.3139%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (26 samples, 0.02%)</title><rect x="88.1192%" y="469" width="0.0225%" height="15" fill="rgb(244,52,35)" fg:x="101998" fg:w="26"/><text x="88.3692%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.02%)</title><rect x="88.1192%" y="453" width="0.0225%" height="15" fill="rgb(246,42,46)" fg:x="101998" fg:w="26"/><text x="88.3692%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.02%)</title><rect x="88.1434%" y="437" width="0.0233%" height="15" fill="rgb(205,184,13)" fg:x="102026" fg:w="27"/><text x="88.3934%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.02%)</title><rect x="88.1434%" y="421" width="0.0233%" height="15" fill="rgb(209,48,36)" fg:x="102026" fg:w="27"/><text x="88.3934%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (72 samples, 0.06%)</title><rect x="88.1417%" y="501" width="0.0622%" height="15" fill="rgb(244,34,51)" fg:x="102024" fg:w="72"/><text x="88.3917%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.06%)</title><rect x="88.1417%" y="485" width="0.0622%" height="15" fill="rgb(221,107,33)" fg:x="102024" fg:w="72"/><text x="88.3917%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (71 samples, 0.06%)</title><rect x="88.1425%" y="469" width="0.0613%" height="15" fill="rgb(224,203,12)" fg:x="102025" fg:w="71"/><text x="88.3925%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (70 samples, 0.06%)</title><rect x="88.1434%" y="453" width="0.0605%" height="15" fill="rgb(230,215,18)" fg:x="102026" fg:w="70"/><text x="88.3934%" y="463.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (43 samples, 0.04%)</title><rect x="88.1667%" y="437" width="0.0371%" height="15" fill="rgb(206,185,35)" fg:x="102053" fg:w="43"/><text x="88.4167%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (43 samples, 0.04%)</title><rect x="88.1667%" y="421" width="0.0371%" height="15" fill="rgb(228,140,34)" fg:x="102053" fg:w="43"/><text x="88.4167%" y="431.50"></text></g><g><title>fastrand::usize (15 samples, 0.01%)</title><rect x="88.2048%" y="501" width="0.0130%" height="15" fill="rgb(208,93,13)" fg:x="102097" fg:w="15"/><text x="88.4548%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="88.2065%" y="485" width="0.0112%" height="15" fill="rgb(221,193,39)" fg:x="102099" fg:w="13"/><text x="88.4565%" y="495.50"></text></g><g><title>___pthread_rwlock_rdlock (37 samples, 0.03%)</title><rect x="88.2220%" y="453" width="0.0320%" height="15" fill="rgb(241,132,34)" fg:x="102117" fg:w="37"/><text x="88.4720%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (438 samples, 0.38%)</title><rect x="87.9041%" y="517" width="0.3784%" height="15" fill="rgb(221,141,10)" fg:x="101749" fg:w="438"/><text x="88.1541%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (75 samples, 0.06%)</title><rect x="88.2177%" y="501" width="0.0648%" height="15" fill="rgb(226,90,31)" fg:x="102112" fg:w="75"/><text x="88.4677%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (73 samples, 0.06%)</title><rect x="88.2194%" y="485" width="0.0631%" height="15" fill="rgb(243,75,5)" fg:x="102114" fg:w="73"/><text x="88.4694%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (73 samples, 0.06%)</title><rect x="88.2194%" y="469" width="0.0631%" height="15" fill="rgb(227,156,21)" fg:x="102114" fg:w="73"/><text x="88.4694%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (33 samples, 0.03%)</title><rect x="88.2540%" y="453" width="0.0285%" height="15" fill="rgb(250,195,8)" fg:x="102154" fg:w="33"/><text x="88.5040%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (33 samples, 0.03%)</title><rect x="88.2540%" y="437" width="0.0285%" height="15" fill="rgb(220,134,5)" fg:x="102154" fg:w="33"/><text x="88.5040%" y="447.50"></text></g><g><title>async_executor::Sleepers::update (29 samples, 0.03%)</title><rect x="88.2860%" y="501" width="0.0251%" height="15" fill="rgb(246,106,34)" fg:x="102191" fg:w="29"/><text x="88.5360%" y="511.50"></text></g><g><title>core::task::wake::Waker::will_wake (13 samples, 0.01%)</title><rect x="88.2998%" y="485" width="0.0112%" height="15" fill="rgb(205,1,4)" fg:x="102207" fg:w="13"/><text x="88.5498%" y="495.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="88.2998%" y="469" width="0.0112%" height="15" fill="rgb(224,151,29)" fg:x="102207" fg:w="13"/><text x="88.5498%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (34 samples, 0.03%)</title><rect x="88.3145%" y="437" width="0.0294%" height="15" fill="rgb(251,196,0)" fg:x="102224" fg:w="34"/><text x="88.5645%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (40 samples, 0.03%)</title><rect x="88.3110%" y="501" width="0.0346%" height="15" fill="rgb(212,127,0)" fg:x="102220" fg:w="40"/><text x="88.5610%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="88.3110%" y="485" width="0.0346%" height="15" fill="rgb(236,71,53)" fg:x="102220" fg:w="40"/><text x="88.5610%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.03%)</title><rect x="88.3110%" y="469" width="0.0346%" height="15" fill="rgb(227,99,0)" fg:x="102220" fg:w="40"/><text x="88.5610%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (36 samples, 0.03%)</title><rect x="88.3145%" y="453" width="0.0311%" height="15" fill="rgb(239,89,21)" fg:x="102224" fg:w="36"/><text x="88.5645%" y="463.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (628 samples, 0.54%)</title><rect x="87.8557%" y="629" width="0.5425%" height="15" fill="rgb(243,122,19)" fg:x="101693" fg:w="628"/><text x="88.1057%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (613 samples, 0.53%)</title><rect x="87.8687%" y="613" width="0.5296%" height="15" fill="rgb(229,192,45)" fg:x="101708" fg:w="613"/><text x="88.1187%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (609 samples, 0.53%)</title><rect x="87.8721%" y="597" width="0.5261%" height="15" fill="rgb(235,165,35)" fg:x="101712" fg:w="609"/><text x="88.1221%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (602 samples, 0.52%)</title><rect x="87.8782%" y="581" width="0.5201%" height="15" fill="rgb(253,202,0)" fg:x="101719" fg:w="602"/><text x="88.1282%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (600 samples, 0.52%)</title><rect x="87.8799%" y="565" width="0.5184%" height="15" fill="rgb(235,51,20)" fg:x="101721" fg:w="600"/><text x="88.1299%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (599 samples, 0.52%)</title><rect x="87.8808%" y="549" width="0.5175%" height="15" fill="rgb(218,95,46)" fg:x="101722" fg:w="599"/><text x="88.1308%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (573 samples, 0.50%)</title><rect x="87.9032%" y="533" width="0.4950%" height="15" fill="rgb(212,81,10)" fg:x="101748" fg:w="573"/><text x="88.1532%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (134 samples, 0.12%)</title><rect x="88.2825%" y="517" width="0.1158%" height="15" fill="rgb(240,59,0)" fg:x="102187" fg:w="134"/><text x="88.5325%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (61 samples, 0.05%)</title><rect x="88.3456%" y="501" width="0.0527%" height="15" fill="rgb(212,191,42)" fg:x="102260" fg:w="61"/><text x="88.5956%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="88.3490%" y="485" width="0.0492%" height="15" fill="rgb(233,140,3)" fg:x="102264" fg:w="57"/><text x="88.5990%" y="495.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (57 samples, 0.05%)</title><rect x="88.3490%" y="469" width="0.0492%" height="15" fill="rgb(215,69,23)" fg:x="102264" fg:w="57"/><text x="88.5990%" y="479.50"></text></g><g><title>___pthread_mutex_lock (57 samples, 0.05%)</title><rect x="88.3490%" y="453" width="0.0492%" height="15" fill="rgb(240,202,20)" fg:x="102264" fg:w="57"/><text x="88.5990%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (20 samples, 0.02%)</title><rect x="88.5097%" y="565" width="0.0173%" height="15" fill="rgb(209,146,50)" fg:x="102450" fg:w="20"/><text x="88.7597%" y="575.50"></text></g><g><title>core::mem::replace (20 samples, 0.02%)</title><rect x="88.5097%" y="549" width="0.0173%" height="15" fill="rgb(253,102,54)" fg:x="102450" fg:w="20"/><text x="88.7597%" y="559.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="88.5106%" y="533" width="0.0164%" height="15" fill="rgb(250,173,47)" fg:x="102451" fg:w="19"/><text x="88.7606%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (32 samples, 0.03%)</title><rect x="88.5054%" y="581" width="0.0276%" height="15" fill="rgb(232,142,7)" fg:x="102445" fg:w="32"/><text x="88.7554%" y="591.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="88.5330%" y="565" width="0.0130%" height="15" fill="rgb(230,157,47)" fg:x="102477" fg:w="15"/><text x="88.7830%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (46 samples, 0.04%)</title><rect x="88.5495%" y="501" width="0.0397%" height="15" fill="rgb(214,177,35)" fg:x="102496" fg:w="46"/><text x="88.7995%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (68 samples, 0.06%)</title><rect x="88.5330%" y="581" width="0.0587%" height="15" fill="rgb(234,119,46)" fg:x="102477" fg:w="68"/><text x="88.7830%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (53 samples, 0.05%)</title><rect x="88.5460%" y="565" width="0.0458%" height="15" fill="rgb(241,180,50)" fg:x="102492" fg:w="53"/><text x="88.7960%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="88.5460%" y="549" width="0.0458%" height="15" fill="rgb(221,54,25)" fg:x="102492" fg:w="53"/><text x="88.7960%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (51 samples, 0.04%)</title><rect x="88.5477%" y="533" width="0.0441%" height="15" fill="rgb(209,157,44)" fg:x="102494" fg:w="51"/><text x="88.7977%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (49 samples, 0.04%)</title><rect x="88.5495%" y="517" width="0.0423%" height="15" fill="rgb(246,115,41)" fg:x="102496" fg:w="49"/><text x="88.7995%" y="527.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (34 samples, 0.03%)</title><rect x="88.6056%" y="533" width="0.0294%" height="15" fill="rgb(229,86,1)" fg:x="102561" fg:w="34"/><text x="88.8556%" y="543.50"></text></g><g><title>core::task::wake::Waker::will_wake (54 samples, 0.05%)</title><rect x="88.5918%" y="581" width="0.0467%" height="15" fill="rgb(240,108,53)" fg:x="102545" fg:w="54"/><text x="88.8418%" y="591.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (54 samples, 0.05%)</title><rect x="88.5918%" y="565" width="0.0467%" height="15" fill="rgb(227,134,2)" fg:x="102545" fg:w="54"/><text x="88.8418%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (38 samples, 0.03%)</title><rect x="88.6056%" y="549" width="0.0328%" height="15" fill="rgb(213,129,25)" fg:x="102561" fg:w="38"/><text x="88.8556%" y="559.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (341 samples, 0.29%)</title><rect x="88.4432%" y="597" width="0.2946%" height="15" fill="rgb(226,35,21)" fg:x="102373" fg:w="341"/><text x="88.6932%" y="607.50"></text></g><g><title>event_listener::Inner::lock (115 samples, 0.10%)</title><rect x="88.6384%" y="581" width="0.0994%" height="15" fill="rgb(208,129,26)" fg:x="102599" fg:w="115"/><text x="88.8884%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (112 samples, 0.10%)</title><rect x="88.6410%" y="565" width="0.0968%" height="15" fill="rgb(224,83,6)" fg:x="102602" fg:w="112"/><text x="88.8910%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (110 samples, 0.10%)</title><rect x="88.6428%" y="549" width="0.0950%" height="15" fill="rgb(227,52,39)" fg:x="102604" fg:w="110"/><text x="88.8928%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (105 samples, 0.09%)</title><rect x="88.6471%" y="533" width="0.0907%" height="15" fill="rgb(241,30,17)" fg:x="102609" fg:w="105"/><text x="88.8971%" y="543.50"></text></g><g><title>___pthread_mutex_lock (105 samples, 0.09%)</title><rect x="88.6471%" y="517" width="0.0907%" height="15" fill="rgb(246,186,42)" fg:x="102609" fg:w="105"/><text x="88.8971%" y="527.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (120 samples, 0.10%)</title><rect x="88.7378%" y="597" width="0.1037%" height="15" fill="rgb(221,169,15)" fg:x="102714" fg:w="120"/><text x="88.9878%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (120 samples, 0.10%)</title><rect x="88.7378%" y="581" width="0.1037%" height="15" fill="rgb(235,108,21)" fg:x="102714" fg:w="120"/><text x="88.9878%" y="591.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (75 samples, 0.06%)</title><rect x="88.7767%" y="565" width="0.0648%" height="15" fill="rgb(219,148,30)" fg:x="102759" fg:w="75"/><text x="89.0267%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (73 samples, 0.06%)</title><rect x="88.7784%" y="549" width="0.0631%" height="15" fill="rgb(220,109,5)" fg:x="102761" fg:w="73"/><text x="89.0284%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (73 samples, 0.06%)</title><rect x="88.7784%" y="533" width="0.0631%" height="15" fill="rgb(213,203,48)" fg:x="102761" fg:w="73"/><text x="89.0284%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (73 samples, 0.06%)</title><rect x="88.7784%" y="517" width="0.0631%" height="15" fill="rgb(244,71,33)" fg:x="102761" fg:w="73"/><text x="89.0284%" y="527.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,149 samples, 0.99%)</title><rect x="87.8497%" y="661" width="0.9927%" height="15" fill="rgb(209,23,2)" fg:x="101686" fg:w="1149"/><text x="88.0997%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,149 samples, 0.99%)</title><rect x="87.8497%" y="645" width="0.9927%" height="15" fill="rgb(219,97,7)" fg:x="101686" fg:w="1149"/><text x="88.0997%" y="655.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (514 samples, 0.44%)</title><rect x="88.3983%" y="629" width="0.4441%" height="15" fill="rgb(216,161,23)" fg:x="102321" fg:w="514"/><text x="88.6483%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (497 samples, 0.43%)</title><rect x="88.4130%" y="613" width="0.4294%" height="15" fill="rgb(207,45,42)" fg:x="102338" fg:w="497"/><text x="88.6630%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,583 samples, 10.87%)</title><rect x="77.9827%" y="741" width="10.8708%" height="15" fill="rgb(241,61,4)" fg:x="90265" fg:w="12583"/><text x="78.2327%" y="751.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,564 samples, 10.85%)</title><rect x="77.9991%" y="725" width="10.8544%" height="15" fill="rgb(236,170,1)" fg:x="90284" fg:w="12564"/><text x="78.2491%" y="735.50">&lt;core::future::f..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,199 samples, 1.04%)</title><rect x="87.8177%" y="709" width="1.0359%" height="15" fill="rgb(239,72,5)" fg:x="101649" fg:w="1199"/><text x="88.0677%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,168 samples, 1.01%)</title><rect x="87.8445%" y="693" width="1.0091%" height="15" fill="rgb(214,13,50)" fg:x="101680" fg:w="1168"/><text x="88.0945%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,166 samples, 1.01%)</title><rect x="87.8462%" y="677" width="1.0073%" height="15" fill="rgb(224,88,9)" fg:x="101682" fg:w="1166"/><text x="88.0962%" y="687.50"></text></g><g><title>async_executor::Runner::new (12 samples, 0.01%)</title><rect x="88.8432%" y="661" width="0.0104%" height="15" fill="rgb(238,192,34)" fg:x="102836" fg:w="12"/><text x="89.0932%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (12 samples, 0.01%)</title><rect x="88.8432%" y="645" width="0.0104%" height="15" fill="rgb(217,203,50)" fg:x="102836" fg:w="12"/><text x="89.0932%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::get (17 samples, 0.01%)</title><rect x="88.8544%" y="741" width="0.0147%" height="15" fill="rgb(241,123,32)" fg:x="102849" fg:w="17"/><text x="89.1044%" y="751.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="88.8544%" y="725" width="0.0147%" height="15" fill="rgb(248,151,39)" fg:x="102849" fg:w="17"/><text x="89.1044%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (17 samples, 0.01%)</title><rect x="88.8544%" y="709" width="0.0147%" height="15" fill="rgb(208,89,6)" fg:x="102849" fg:w="17"/><text x="89.1044%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (17 samples, 0.01%)</title><rect x="88.8544%" y="693" width="0.0147%" height="15" fill="rgb(254,43,26)" fg:x="102849" fg:w="17"/><text x="89.1044%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (17 samples, 0.01%)</title><rect x="88.8544%" y="677" width="0.0147%" height="15" fill="rgb(216,158,13)" fg:x="102849" fg:w="17"/><text x="89.1044%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (16 samples, 0.01%)</title><rect x="88.8553%" y="661" width="0.0138%" height="15" fill="rgb(212,47,37)" fg:x="102850" fg:w="16"/><text x="89.1053%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (13 samples, 0.01%)</title><rect x="88.8579%" y="645" width="0.0112%" height="15" fill="rgb(254,16,10)" fg:x="102853" fg:w="13"/><text x="89.1079%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (205 samples, 0.18%)</title><rect x="88.8691%" y="741" width="0.1771%" height="15" fill="rgb(223,228,16)" fg:x="102866" fg:w="205"/><text x="89.1191%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (203 samples, 0.18%)</title><rect x="88.8708%" y="725" width="0.1754%" height="15" fill="rgb(249,108,50)" fg:x="102868" fg:w="203"/><text x="89.1208%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (199 samples, 0.17%)</title><rect x="88.8743%" y="709" width="0.1719%" height="15" fill="rgb(208,220,5)" fg:x="102872" fg:w="199"/><text x="89.1243%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (191 samples, 0.17%)</title><rect x="88.8812%" y="693" width="0.1650%" height="15" fill="rgb(217,89,48)" fg:x="102880" fg:w="191"/><text x="89.1312%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (191 samples, 0.17%)</title><rect x="88.8812%" y="677" width="0.1650%" height="15" fill="rgb(212,113,41)" fg:x="102880" fg:w="191"/><text x="89.1312%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (34 samples, 0.03%)</title><rect x="89.0799%" y="549" width="0.0294%" height="15" fill="rgb(231,127,5)" fg:x="103110" fg:w="34"/><text x="89.3299%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (34 samples, 0.03%)</title><rect x="89.0799%" y="533" width="0.0294%" height="15" fill="rgb(217,141,17)" fg:x="103110" fg:w="34"/><text x="89.3299%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (34 samples, 0.03%)</title><rect x="89.0799%" y="517" width="0.0294%" height="15" fill="rgb(245,125,54)" fg:x="103110" fg:w="34"/><text x="89.3299%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (34 samples, 0.03%)</title><rect x="89.0799%" y="501" width="0.0294%" height="15" fill="rgb(248,125,3)" fg:x="103110" fg:w="34"/><text x="89.3299%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (34 samples, 0.03%)</title><rect x="89.0799%" y="485" width="0.0294%" height="15" fill="rgb(236,119,51)" fg:x="103110" fg:w="34"/><text x="89.3299%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="89.0972%" y="469" width="0.0121%" height="15" fill="rgb(239,99,8)" fg:x="103130" fg:w="14"/><text x="89.3472%" y="479.50"></text></g><g><title>rust_dealloc (40 samples, 0.03%)</title><rect x="89.0799%" y="565" width="0.0346%" height="15" fill="rgb(224,228,4)" fg:x="103110" fg:w="40"/><text x="89.3299%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (48 samples, 0.04%)</title><rect x="89.0790%" y="629" width="0.0415%" height="15" fill="rgb(220,131,45)" fg:x="103109" fg:w="48"/><text x="89.3290%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.04%)</title><rect x="89.0790%" y="613" width="0.0415%" height="15" fill="rgb(215,62,5)" fg:x="103109" fg:w="48"/><text x="89.3290%" y="623.50"></text></g><g><title>__rg_dealloc (48 samples, 0.04%)</title><rect x="89.0790%" y="597" width="0.0415%" height="15" fill="rgb(253,12,24)" fg:x="103109" fg:w="48"/><text x="89.3290%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (47 samples, 0.04%)</title><rect x="89.0799%" y="581" width="0.0406%" height="15" fill="rgb(248,120,50)" fg:x="103110" fg:w="47"/><text x="89.3299%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (50 samples, 0.04%)</title><rect x="89.0782%" y="661" width="0.0432%" height="15" fill="rgb(245,194,10)" fg:x="103108" fg:w="50"/><text x="89.3282%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (50 samples, 0.04%)</title><rect x="89.0782%" y="645" width="0.0432%" height="15" fill="rgb(241,149,38)" fg:x="103108" fg:w="50"/><text x="89.3282%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.05%)</title><rect x="89.0747%" y="709" width="0.0484%" height="15" fill="rgb(219,215,7)" fg:x="103104" fg:w="56"/><text x="89.3247%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (53 samples, 0.05%)</title><rect x="89.0773%" y="693" width="0.0458%" height="15" fill="rgb(208,120,31)" fg:x="103107" fg:w="53"/><text x="89.3273%" y="703.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (52 samples, 0.04%)</title><rect x="89.0782%" y="677" width="0.0449%" height="15" fill="rgb(244,30,8)" fg:x="103108" fg:w="52"/><text x="89.3282%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (16 samples, 0.01%)</title><rect x="89.1516%" y="645" width="0.0138%" height="15" fill="rgb(238,35,44)" fg:x="103193" fg:w="16"/><text x="89.4016%" y="655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (24 samples, 0.02%)</title><rect x="89.1482%" y="677" width="0.0207%" height="15" fill="rgb(243,218,37)" fg:x="103189" fg:w="24"/><text x="89.3982%" y="687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (24 samples, 0.02%)</title><rect x="89.1482%" y="661" width="0.0207%" height="15" fill="rgb(218,169,10)" fg:x="103189" fg:w="24"/><text x="89.3982%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="89.1879%" y="309" width="0.0181%" height="15" fill="rgb(221,144,10)" fg:x="103235" fg:w="21"/><text x="89.4379%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="89.1879%" y="293" width="0.0181%" height="15" fill="rgb(226,41,38)" fg:x="103235" fg:w="21"/><text x="89.4379%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.03%)</title><rect x="89.1819%" y="357" width="0.0311%" height="15" fill="rgb(228,3,1)" fg:x="103228" fg:w="36"/><text x="89.4319%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.03%)</title><rect x="89.1819%" y="341" width="0.0311%" height="15" fill="rgb(209,129,12)" fg:x="103228" fg:w="36"/><text x="89.4319%" y="351.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="89.1862%" y="325" width="0.0268%" height="15" fill="rgb(213,136,33)" fg:x="103233" fg:w="31"/><text x="89.4362%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (46 samples, 0.04%)</title><rect x="89.1819%" y="373" width="0.0397%" height="15" fill="rgb(209,181,29)" fg:x="103228" fg:w="46"/><text x="89.4319%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (67 samples, 0.06%)</title><rect x="89.1715%" y="389" width="0.0579%" height="15" fill="rgb(234,173,18)" fg:x="103216" fg:w="67"/><text x="89.4215%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (26 samples, 0.02%)</title><rect x="89.2484%" y="373" width="0.0225%" height="15" fill="rgb(227,73,47)" fg:x="103305" fg:w="26"/><text x="89.4984%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (328 samples, 0.28%)</title><rect x="89.1715%" y="421" width="0.2834%" height="15" fill="rgb(234,9,34)" fg:x="103216" fg:w="328"/><text x="89.4215%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (328 samples, 0.28%)</title><rect x="89.1715%" y="405" width="0.2834%" height="15" fill="rgb(235,172,15)" fg:x="103216" fg:w="328"/><text x="89.4215%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (261 samples, 0.23%)</title><rect x="89.2294%" y="389" width="0.2255%" height="15" fill="rgb(245,61,2)" fg:x="103283" fg:w="261"/><text x="89.4794%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (213 samples, 0.18%)</title><rect x="89.2708%" y="373" width="0.1840%" height="15" fill="rgb(238,39,47)" fg:x="103331" fg:w="213"/><text x="89.5208%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (213 samples, 0.18%)</title><rect x="89.2708%" y="357" width="0.1840%" height="15" fill="rgb(234,37,24)" fg:x="103331" fg:w="213"/><text x="89.5208%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (213 samples, 0.18%)</title><rect x="89.2708%" y="341" width="0.1840%" height="15" fill="rgb(248,223,24)" fg:x="103331" fg:w="213"/><text x="89.5208%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="89.4618%" y="421" width="0.0112%" height="15" fill="rgb(223,12,15)" fg:x="103552" fg:w="13"/><text x="89.7118%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="89.4618%" y="405" width="0.0112%" height="15" fill="rgb(249,6,3)" fg:x="103552" fg:w="13"/><text x="89.7118%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (398 samples, 0.34%)</title><rect x="89.1689%" y="469" width="0.3438%" height="15" fill="rgb(237,105,33)" fg:x="103213" fg:w="398"/><text x="89.4189%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (398 samples, 0.34%)</title><rect x="89.1689%" y="453" width="0.3438%" height="15" fill="rgb(252,208,35)" fg:x="103213" fg:w="398"/><text x="89.4189%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (398 samples, 0.34%)</title><rect x="89.1689%" y="437" width="0.3438%" height="15" fill="rgb(215,181,35)" fg:x="103213" fg:w="398"/><text x="89.4189%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (46 samples, 0.04%)</title><rect x="89.4730%" y="421" width="0.0397%" height="15" fill="rgb(246,212,3)" fg:x="103565" fg:w="46"/><text x="89.7230%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (46 samples, 0.04%)</title><rect x="89.4730%" y="405" width="0.0397%" height="15" fill="rgb(247,156,24)" fg:x="103565" fg:w="46"/><text x="89.7230%" y="415.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (400 samples, 0.35%)</title><rect x="89.1689%" y="677" width="0.3456%" height="15" fill="rgb(248,9,31)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (400 samples, 0.35%)</title><rect x="89.1689%" y="661" width="0.3456%" height="15" fill="rgb(234,26,45)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (400 samples, 0.35%)</title><rect x="89.1689%" y="645" width="0.3456%" height="15" fill="rgb(249,11,32)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="655.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (400 samples, 0.35%)</title><rect x="89.1689%" y="629" width="0.3456%" height="15" fill="rgb(249,162,33)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (400 samples, 0.35%)</title><rect x="89.1689%" y="613" width="0.3456%" height="15" fill="rgb(232,4,32)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (400 samples, 0.35%)</title><rect x="89.1689%" y="597" width="0.3456%" height="15" fill="rgb(212,5,45)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (400 samples, 0.35%)</title><rect x="89.1689%" y="581" width="0.3456%" height="15" fill="rgb(227,95,13)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (400 samples, 0.35%)</title><rect x="89.1689%" y="565" width="0.3456%" height="15" fill="rgb(223,205,10)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (400 samples, 0.35%)</title><rect x="89.1689%" y="549" width="0.3456%" height="15" fill="rgb(222,178,8)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="559.50"></text></g><g><title>alloc::alloc::alloc (400 samples, 0.35%)</title><rect x="89.1689%" y="533" width="0.3456%" height="15" fill="rgb(216,13,22)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="543.50"></text></g><g><title>__rg_alloc (400 samples, 0.35%)</title><rect x="89.1689%" y="517" width="0.3456%" height="15" fill="rgb(240,167,12)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (400 samples, 0.35%)</title><rect x="89.1689%" y="501" width="0.3456%" height="15" fill="rgb(235,68,35)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="511.50"></text></g><g><title>rust_alloc (400 samples, 0.35%)</title><rect x="89.1689%" y="485" width="0.3456%" height="15" fill="rgb(253,40,27)" fg:x="103213" fg:w="400"/><text x="89.4189%" y="495.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (440 samples, 0.38%)</title><rect x="89.1361%" y="693" width="0.3801%" height="15" fill="rgb(214,19,28)" fg:x="103175" fg:w="440"/><text x="89.3861%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (445 samples, 0.38%)</title><rect x="89.1326%" y="709" width="0.3844%" height="15" fill="rgb(210,167,45)" fg:x="103171" fg:w="445"/><text x="89.3826%" y="719.50"></text></g><g><title>concurrent_queue::full_fence (16 samples, 0.01%)</title><rect x="89.5369%" y="661" width="0.0138%" height="15" fill="rgb(232,97,40)" fg:x="103639" fg:w="16"/><text x="89.7869%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (15 samples, 0.01%)</title><rect x="89.5378%" y="645" width="0.0130%" height="15" fill="rgb(250,35,23)" fg:x="103640" fg:w="15"/><text x="89.7878%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="89.5378%" y="629" width="0.0130%" height="15" fill="rgb(248,47,53)" fg:x="103640" fg:w="15"/><text x="89.7878%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="89.5378%" y="613" width="0.0130%" height="15" fill="rgb(226,58,50)" fg:x="103640" fg:w="15"/><text x="89.7878%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (44 samples, 0.04%)</title><rect x="89.5171%" y="709" width="0.0380%" height="15" fill="rgb(217,105,26)" fg:x="103616" fg:w="44"/><text x="89.7671%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (30 samples, 0.03%)</title><rect x="89.5292%" y="693" width="0.0259%" height="15" fill="rgb(208,64,1)" fg:x="103630" fg:w="30"/><text x="89.7792%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (28 samples, 0.02%)</title><rect x="89.5309%" y="677" width="0.0242%" height="15" fill="rgb(214,80,1)" fg:x="103632" fg:w="28"/><text x="89.7809%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (72 samples, 0.06%)</title><rect x="89.5603%" y="629" width="0.0622%" height="15" fill="rgb(206,175,26)" fg:x="103666" fg:w="72"/><text x="89.8103%" y="639.50"></text></g><g><title>core::mem::drop (81 samples, 0.07%)</title><rect x="89.5551%" y="709" width="0.0700%" height="15" fill="rgb(235,156,37)" fg:x="103660" fg:w="81"/><text x="89.8051%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (81 samples, 0.07%)</title><rect x="89.5551%" y="693" width="0.0700%" height="15" fill="rgb(213,100,9)" fg:x="103660" fg:w="81"/><text x="89.8051%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.07%)</title><rect x="89.5551%" y="677" width="0.0700%" height="15" fill="rgb(241,15,13)" fg:x="103660" fg:w="81"/><text x="89.8051%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (78 samples, 0.07%)</title><rect x="89.5577%" y="661" width="0.0674%" height="15" fill="rgb(205,97,43)" fg:x="103663" fg:w="78"/><text x="89.8077%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (75 samples, 0.06%)</title><rect x="89.5603%" y="645" width="0.0648%" height="15" fill="rgb(216,106,32)" fg:x="103666" fg:w="75"/><text x="89.8103%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="89.6268%" y="709" width="0.0121%" height="15" fill="rgb(226,200,8)" fg:x="103743" fg:w="14"/><text x="89.8768%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (38 samples, 0.03%)</title><rect x="89.6406%" y="709" width="0.0328%" height="15" fill="rgb(244,54,29)" fg:x="103759" fg:w="38"/><text x="89.8906%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (38 samples, 0.03%)</title><rect x="89.6406%" y="693" width="0.0328%" height="15" fill="rgb(252,169,12)" fg:x="103759" fg:w="38"/><text x="89.8906%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (37 samples, 0.03%)</title><rect x="89.6415%" y="677" width="0.0320%" height="15" fill="rgb(231,199,11)" fg:x="103760" fg:w="37"/><text x="89.8915%" y="687.50"></text></g><g><title>___pthread_mutex_lock (37 samples, 0.03%)</title><rect x="89.6415%" y="661" width="0.0320%" height="15" fill="rgb(233,191,18)" fg:x="103760" fg:w="37"/><text x="89.8915%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (736 samples, 0.64%)</title><rect x="89.0661%" y="725" width="0.6359%" height="15" fill="rgb(215,83,47)" fg:x="103094" fg:w="736"/><text x="89.3161%" y="735.50"></text></g><g><title>std::time::Instant::now (33 samples, 0.03%)</title><rect x="89.6734%" y="709" width="0.0285%" height="15" fill="rgb(251,67,19)" fg:x="103797" fg:w="33"/><text x="89.9234%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (33 samples, 0.03%)</title><rect x="89.6734%" y="693" width="0.0285%" height="15" fill="rgb(240,7,20)" fg:x="103797" fg:w="33"/><text x="89.9234%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (33 samples, 0.03%)</title><rect x="89.6734%" y="677" width="0.0285%" height="15" fill="rgb(210,150,26)" fg:x="103797" fg:w="33"/><text x="89.9234%" y="687.50"></text></g><g><title>__clock_gettime_2 (31 samples, 0.03%)</title><rect x="89.6752%" y="661" width="0.0268%" height="15" fill="rgb(228,75,42)" fg:x="103799" fg:w="31"/><text x="89.9252%" y="671.50"></text></g><g><title>__vdso_clock_gettime (23 samples, 0.02%)</title><rect x="89.6821%" y="645" width="0.0199%" height="15" fill="rgb(237,134,48)" fg:x="103807" fg:w="23"/><text x="89.9321%" y="655.50"></text></g><g><title>[[vdso]] (20 samples, 0.02%)</title><rect x="89.6847%" y="629" width="0.0173%" height="15" fill="rgb(205,80,50)" fg:x="103810" fg:w="20"/><text x="89.9347%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.02%)</title><rect x="89.7045%" y="725" width="0.0233%" height="15" fill="rgb(217,74,48)" fg:x="103833" fg:w="27"/><text x="89.9545%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.02%)</title><rect x="89.7054%" y="709" width="0.0225%" height="15" fill="rgb(205,82,50)" fg:x="103834" fg:w="26"/><text x="89.9554%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="89.7400%" y="645" width="0.0302%" height="15" fill="rgb(228,1,33)" fg:x="103874" fg:w="35"/><text x="89.9900%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (38 samples, 0.03%)</title><rect x="89.7391%" y="709" width="0.0328%" height="15" fill="rgb(214,50,23)" fg:x="103873" fg:w="38"/><text x="89.9891%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="89.7391%" y="693" width="0.0328%" height="15" fill="rgb(210,62,9)" fg:x="103873" fg:w="38"/><text x="89.9891%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (38 samples, 0.03%)</title><rect x="89.7391%" y="677" width="0.0328%" height="15" fill="rgb(210,104,37)" fg:x="103873" fg:w="38"/><text x="89.9891%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (37 samples, 0.03%)</title><rect x="89.7400%" y="661" width="0.0320%" height="15" fill="rgb(232,104,43)" fg:x="103874" fg:w="37"/><text x="89.9900%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (40 samples, 0.03%)</title><rect x="89.7719%" y="709" width="0.0346%" height="15" fill="rgb(244,52,6)" fg:x="103911" fg:w="40"/><text x="90.0219%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (40 samples, 0.03%)</title><rect x="89.7719%" y="693" width="0.0346%" height="15" fill="rgb(211,174,52)" fg:x="103911" fg:w="40"/><text x="90.0219%" y="703.50"></text></g><g><title>__entry_text_start (20 samples, 0.02%)</title><rect x="89.8799%" y="677" width="0.0173%" height="15" fill="rgb(229,48,4)" fg:x="104036" fg:w="20"/><text x="90.1299%" y="687.50"></text></g><g><title>__x64_sys_read (22 samples, 0.02%)</title><rect x="89.9093%" y="645" width="0.0190%" height="15" fill="rgb(205,155,16)" fg:x="104070" fg:w="22"/><text x="90.1593%" y="655.50"></text></g><g><title>__fdget_pos (80 samples, 0.07%)</title><rect x="89.9378%" y="629" width="0.0691%" height="15" fill="rgb(211,141,53)" fg:x="104103" fg:w="80"/><text x="90.1878%" y="639.50"></text></g><g><title>__fget_light (75 samples, 0.06%)</title><rect x="89.9421%" y="613" width="0.0648%" height="15" fill="rgb(240,148,11)" fg:x="104108" fg:w="75"/><text x="90.1921%" y="623.50"></text></g><g><title>fput_many (14 samples, 0.01%)</title><rect x="90.0078%" y="629" width="0.0121%" height="15" fill="rgb(214,45,23)" fg:x="104184" fg:w="14"/><text x="90.2578%" y="639.50"></text></g><g><title>fsnotify_perm.part.0 (16 samples, 0.01%)</title><rect x="90.0285%" y="613" width="0.0138%" height="15" fill="rgb(248,74,26)" fg:x="104208" fg:w="16"/><text x="90.2785%" y="623.50"></text></g><g><title>__wake_up_common (46 samples, 0.04%)</title><rect x="90.0873%" y="581" width="0.0397%" height="15" fill="rgb(218,121,16)" fg:x="104276" fg:w="46"/><text x="90.3373%" y="591.50"></text></g><g><title>ep_poll_callback (33 samples, 0.03%)</title><rect x="90.0985%" y="565" width="0.0285%" height="15" fill="rgb(218,10,47)" fg:x="104289" fg:w="33"/><text x="90.3485%" y="575.50"></text></g><g><title>_copy_to_iter (32 samples, 0.03%)</title><rect x="90.1279%" y="581" width="0.0276%" height="15" fill="rgb(227,99,14)" fg:x="104323" fg:w="32"/><text x="90.3779%" y="591.50"></text></g><g><title>_raw_spin_lock_irq (38 samples, 0.03%)</title><rect x="90.1555%" y="581" width="0.0328%" height="15" fill="rgb(229,83,46)" fg:x="104355" fg:w="38"/><text x="90.4055%" y="591.50"></text></g><g><title>eventfd_read (150 samples, 0.13%)</title><rect x="90.0613%" y="597" width="0.1296%" height="15" fill="rgb(228,25,1)" fg:x="104246" fg:w="150"/><text x="90.3113%" y="607.50"></text></g><g><title>new_sync_read (173 samples, 0.15%)</title><rect x="90.0423%" y="613" width="0.1495%" height="15" fill="rgb(252,190,15)" fg:x="104224" fg:w="173"/><text x="90.2923%" y="623.50"></text></g><g><title>ksys_read (310 samples, 0.27%)</title><rect x="89.9283%" y="645" width="0.2678%" height="15" fill="rgb(213,103,51)" fg:x="104092" fg:w="310"/><text x="90.1783%" y="655.50"></text></g><g><title>vfs_read (204 samples, 0.18%)</title><rect x="90.0199%" y="629" width="0.1762%" height="15" fill="rgb(220,38,44)" fg:x="104198" fg:w="204"/><text x="90.2699%" y="639.50"></text></g><g><title>exit_to_user_mode_prepare (13 samples, 0.01%)</title><rect x="90.3749%" y="629" width="0.0112%" height="15" fill="rgb(210,45,26)" fg:x="104609" fg:w="13"/><text x="90.6249%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (220 samples, 0.19%)</title><rect x="90.1996%" y="645" width="0.1901%" height="15" fill="rgb(205,95,48)" fg:x="104406" fg:w="220"/><text x="90.4496%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (589 samples, 0.51%)</title><rect x="89.8981%" y="677" width="0.5089%" height="15" fill="rgb(225,179,37)" fg:x="104057" fg:w="589"/><text x="90.1481%" y="687.50"></text></g><g><title>do_syscall_64 (584 samples, 0.50%)</title><rect x="89.9024%" y="661" width="0.5045%" height="15" fill="rgb(230,209,3)" fg:x="104062" fg:w="584"/><text x="90.1524%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (20 samples, 0.02%)</title><rect x="90.3896%" y="645" width="0.0173%" height="15" fill="rgb(248,12,46)" fg:x="104626" fg:w="20"/><text x="90.6396%" y="655.50"></text></g><g><title>__libc_read (655 samples, 0.57%)</title><rect x="89.8479%" y="693" width="0.5659%" height="15" fill="rgb(234,18,0)" fg:x="103999" fg:w="655"/><text x="90.0979%" y="703.50"></text></g><g><title>__GI___pthread_disable_asynccancel (14 samples, 0.01%)</title><rect x="90.4622%" y="677" width="0.0121%" height="15" fill="rgb(238,197,14)" fg:x="104710" fg:w="14"/><text x="90.7122%" y="687.50"></text></g><g><title>__entry_text_start (25 samples, 0.02%)</title><rect x="90.4786%" y="677" width="0.0216%" height="15" fill="rgb(251,162,48)" fg:x="104729" fg:w="25"/><text x="90.7286%" y="687.50"></text></g><g><title>__fget_light (25 samples, 0.02%)</title><rect x="90.6030%" y="613" width="0.0216%" height="15" fill="rgb(237,73,42)" fg:x="104873" fg:w="25"/><text x="90.8530%" y="623.50"></text></g><g><title>__put_user_nocheck_4 (12 samples, 0.01%)</title><rect x="90.6255%" y="613" width="0.0104%" height="15" fill="rgb(211,108,8)" fg:x="104899" fg:w="12"/><text x="90.8755%" y="623.50"></text></g><g><title>__put_user_nocheck_8 (12 samples, 0.01%)</title><rect x="90.6359%" y="613" width="0.0104%" height="15" fill="rgb(213,45,22)" fg:x="104911" fg:w="12"/><text x="90.8859%" y="623.50"></text></g><g><title>_raw_write_lock_irq (20 samples, 0.02%)</title><rect x="90.6462%" y="613" width="0.0173%" height="15" fill="rgb(252,154,5)" fg:x="104923" fg:w="20"/><text x="90.8962%" y="623.50"></text></g><g><title>ep_done_scan (18 samples, 0.02%)</title><rect x="90.6704%" y="613" width="0.0156%" height="15" fill="rgb(221,79,52)" fg:x="104951" fg:w="18"/><text x="90.9204%" y="623.50"></text></g><g><title>_raw_write_lock_irq (14 samples, 0.01%)</title><rect x="90.6739%" y="597" width="0.0121%" height="15" fill="rgb(229,220,36)" fg:x="104955" fg:w="14"/><text x="90.9239%" y="607.50"></text></g><g><title>ep_item_poll.isra.0 (100 samples, 0.09%)</title><rect x="90.6860%" y="613" width="0.0864%" height="15" fill="rgb(211,17,16)" fg:x="104969" fg:w="100"/><text x="90.9360%" y="623.50"></text></g><g><title>eventfd_poll (54 samples, 0.05%)</title><rect x="90.7257%" y="597" width="0.0467%" height="15" fill="rgb(222,55,31)" fg:x="105015" fg:w="54"/><text x="90.9757%" y="607.50"></text></g><g><title>mutex_lock (21 samples, 0.02%)</title><rect x="90.7819%" y="613" width="0.0181%" height="15" fill="rgb(221,221,31)" fg:x="105080" fg:w="21"/><text x="91.0319%" y="623.50"></text></g><g><title>__perf_event_task_sched_out (42 samples, 0.04%)</title><rect x="90.8717%" y="565" width="0.0363%" height="15" fill="rgb(227,168,26)" fg:x="105184" fg:w="42"/><text x="91.1217%" y="575.50"></text></g><g><title>reweight_entity (15 samples, 0.01%)</title><rect x="90.9538%" y="533" width="0.0130%" height="15" fill="rgb(224,139,9)" fg:x="105279" fg:w="15"/><text x="91.2038%" y="543.50"></text></g><g><title>update_cfs_group (13 samples, 0.01%)</title><rect x="90.9667%" y="533" width="0.0112%" height="15" fill="rgb(254,172,0)" fg:x="105294" fg:w="13"/><text x="91.2167%" y="543.50"></text></g><g><title>__calc_delta (25 samples, 0.02%)</title><rect x="90.9970%" y="517" width="0.0216%" height="15" fill="rgb(235,203,1)" fg:x="105329" fg:w="25"/><text x="91.2470%" y="527.50"></text></g><g><title>cpuacct_charge (21 samples, 0.02%)</title><rect x="91.0255%" y="517" width="0.0181%" height="15" fill="rgb(216,205,24)" fg:x="105362" fg:w="21"/><text x="91.2755%" y="527.50"></text></g><g><title>update_curr (81 samples, 0.07%)</title><rect x="90.9780%" y="533" width="0.0700%" height="15" fill="rgb(233,24,6)" fg:x="105307" fg:w="81"/><text x="91.2280%" y="543.50"></text></g><g><title>__update_load_avg_cfs_rq (21 samples, 0.02%)</title><rect x="91.0600%" y="517" width="0.0181%" height="15" fill="rgb(244,110,9)" fg:x="105402" fg:w="21"/><text x="91.3100%" y="527.50"></text></g><g><title>dequeue_task_fair (211 samples, 0.18%)</title><rect x="90.9106%" y="565" width="0.1823%" height="15" fill="rgb(239,222,42)" fg:x="105229" fg:w="211"/><text x="91.1606%" y="575.50"></text></g><g><title>dequeue_entity (187 samples, 0.16%)</title><rect x="90.9313%" y="549" width="0.1616%" height="15" fill="rgb(218,145,13)" fg:x="105253" fg:w="187"/><text x="91.1813%" y="559.50"></text></g><g><title>update_load_avg (52 samples, 0.04%)</title><rect x="91.0479%" y="533" width="0.0449%" height="15" fill="rgb(207,69,11)" fg:x="105388" fg:w="52"/><text x="91.2979%" y="543.50"></text></g><g><title>__update_load_avg_se (17 samples, 0.01%)</title><rect x="91.0782%" y="517" width="0.0147%" height="15" fill="rgb(220,223,22)" fg:x="105423" fg:w="17"/><text x="91.3282%" y="527.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (44 samples, 0.04%)</title><rect x="91.1145%" y="533" width="0.0380%" height="15" fill="rgb(245,102,5)" fg:x="105465" fg:w="44"/><text x="91.3645%" y="543.50"></text></g><g><title>native_write_msr (42 samples, 0.04%)</title><rect x="91.1162%" y="517" width="0.0363%" height="15" fill="rgb(211,148,2)" fg:x="105467" fg:w="42"/><text x="91.3662%" y="527.50"></text></g><g><title>__perf_event_task_sched_in (50 samples, 0.04%)</title><rect x="91.1119%" y="549" width="0.0432%" height="15" fill="rgb(241,13,44)" fg:x="105462" fg:w="50"/><text x="91.3619%" y="559.50"></text></g><g><title>finish_task_switch.isra.0 (75 samples, 0.06%)</title><rect x="91.0929%" y="565" width="0.0648%" height="15" fill="rgb(219,137,21)" fg:x="105440" fg:w="75"/><text x="91.3429%" y="575.50"></text></g><g><title>pick_next_task_fair (15 samples, 0.01%)</title><rect x="91.1585%" y="565" width="0.0130%" height="15" fill="rgb(242,206,5)" fg:x="105516" fg:w="15"/><text x="91.4085%" y="575.50"></text></g><g><title>newidle_balance (14 samples, 0.01%)</title><rect x="91.1594%" y="549" width="0.0121%" height="15" fill="rgb(217,114,22)" fg:x="105517" fg:w="14"/><text x="91.4094%" y="559.50"></text></g><g><title>pick_next_task_idle (12 samples, 0.01%)</title><rect x="91.1715%" y="565" width="0.0104%" height="15" fill="rgb(253,206,42)" fg:x="105531" fg:w="12"/><text x="91.4215%" y="575.50"></text></g><g><title>iterate_groups (15 samples, 0.01%)</title><rect x="91.1931%" y="549" width="0.0130%" height="15" fill="rgb(236,102,18)" fg:x="105556" fg:w="15"/><text x="91.4431%" y="559.50"></text></g><g><title>psi_group_change (87 samples, 0.08%)</title><rect x="91.2069%" y="549" width="0.0752%" height="15" fill="rgb(208,59,49)" fg:x="105572" fg:w="87"/><text x="91.4569%" y="559.50"></text></g><g><title>psi_task_switch (117 samples, 0.10%)</title><rect x="91.1819%" y="565" width="0.1011%" height="15" fill="rgb(215,194,28)" fg:x="105543" fg:w="117"/><text x="91.4319%" y="575.50"></text></g><g><title>put_prev_task_fair (24 samples, 0.02%)</title><rect x="91.2829%" y="565" width="0.0207%" height="15" fill="rgb(243,207,11)" fg:x="105660" fg:w="24"/><text x="91.5329%" y="575.50"></text></g><g><title>sched_clock_cpu (18 samples, 0.02%)</title><rect x="91.3184%" y="549" width="0.0156%" height="15" fill="rgb(254,179,35)" fg:x="105701" fg:w="18"/><text x="91.5684%" y="559.50"></text></g><g><title>native_sched_clock (18 samples, 0.02%)</title><rect x="91.3184%" y="533" width="0.0156%" height="15" fill="rgb(235,97,3)" fg:x="105701" fg:w="18"/><text x="91.5684%" y="543.50"></text></g><g><title>do_epoll_wait (921 samples, 0.80%)</title><rect x="90.5451%" y="629" width="0.7957%" height="15" fill="rgb(215,155,33)" fg:x="104806" fg:w="921"/><text x="90.7951%" y="639.50"></text></g><g><title>schedule_hrtimeout_range_clock (618 samples, 0.53%)</title><rect x="90.8069%" y="613" width="0.5339%" height="15" fill="rgb(223,128,12)" fg:x="105109" fg:w="618"/><text x="91.0569%" y="623.50"></text></g><g><title>schedule (597 samples, 0.52%)</title><rect x="90.8251%" y="597" width="0.5158%" height="15" fill="rgb(208,157,18)" fg:x="105130" fg:w="597"/><text x="91.0751%" y="607.50"></text></g><g><title>__schedule (586 samples, 0.51%)</title><rect x="90.8346%" y="581" width="0.5063%" height="15" fill="rgb(249,70,54)" fg:x="105141" fg:w="586"/><text x="91.0846%" y="591.50"></text></g><g><title>update_rq_clock (35 samples, 0.03%)</title><rect x="91.3106%" y="565" width="0.0302%" height="15" fill="rgb(244,118,24)" fg:x="105692" fg:w="35"/><text x="91.5606%" y="575.50"></text></g><g><title>__x64_sys_epoll_wait (939 samples, 0.81%)</title><rect x="90.5348%" y="645" width="0.8112%" height="15" fill="rgb(211,54,0)" fg:x="104794" fg:w="939"/><text x="90.7848%" y="655.50"></text></g><g><title>__get_user_8 (12 samples, 0.01%)</title><rect x="91.5724%" y="597" width="0.0104%" height="15" fill="rgb(245,137,45)" fg:x="105995" fg:w="12"/><text x="91.8224%" y="607.50"></text></g><g><title>__rseq_handle_notify_resume (35 samples, 0.03%)</title><rect x="91.5594%" y="613" width="0.0302%" height="15" fill="rgb(232,154,31)" fg:x="105980" fg:w="35"/><text x="91.8094%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (77 samples, 0.07%)</title><rect x="91.5300%" y="629" width="0.0665%" height="15" fill="rgb(253,6,39)" fg:x="105946" fg:w="77"/><text x="91.7800%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (319 samples, 0.28%)</title><rect x="91.3486%" y="645" width="0.2756%" height="15" fill="rgb(234,183,24)" fg:x="105736" fg:w="319"/><text x="91.5986%" y="655.50"></text></g><g><title>syscall_exit_work (32 samples, 0.03%)</title><rect x="91.5965%" y="629" width="0.0276%" height="15" fill="rgb(252,84,40)" fg:x="106023" fg:w="32"/><text x="91.8465%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,309 samples, 1.13%)</title><rect x="90.5019%" y="677" width="1.1309%" height="15" fill="rgb(224,65,2)" fg:x="104756" fg:w="1309"/><text x="90.7519%" y="687.50"></text></g><g><title>do_syscall_64 (1,283 samples, 1.11%)</title><rect x="90.5244%" y="661" width="1.1084%" height="15" fill="rgb(229,38,24)" fg:x="104782" fg:w="1283"/><text x="90.7744%" y="671.50"></text></g><g><title>epoll_wait (1,426 samples, 1.23%)</title><rect x="90.4138%" y="693" width="1.2320%" height="15" fill="rgb(218,131,50)" fg:x="104654" fg:w="1426"/><text x="90.6638%" y="703.50"></text></g><g><title>syscall_return_via_sysret (15 samples, 0.01%)</title><rect x="91.6328%" y="677" width="0.0130%" height="15" fill="rgb(233,106,18)" fg:x="106065" fg:w="15"/><text x="91.8828%" y="687.50"></text></g><g><title>__entry_text_start (39 samples, 0.03%)</title><rect x="91.6855%" y="645" width="0.0337%" height="15" fill="rgb(220,216,11)" fg:x="106126" fg:w="39"/><text x="91.9355%" y="655.50"></text></g><g><title>copy_user_enhanced_fast_string (12 samples, 0.01%)</title><rect x="91.7875%" y="581" width="0.0104%" height="15" fill="rgb(251,100,45)" fg:x="106244" fg:w="12"/><text x="92.0375%" y="591.50"></text></g><g><title>_copy_from_user (35 samples, 0.03%)</title><rect x="91.7832%" y="597" width="0.0302%" height="15" fill="rgb(235,143,32)" fg:x="106239" fg:w="35"/><text x="92.0332%" y="607.50"></text></g><g><title>copy_user_generic_unrolled (18 samples, 0.02%)</title><rect x="91.7978%" y="581" width="0.0156%" height="15" fill="rgb(248,124,34)" fg:x="106256" fg:w="18"/><text x="92.0478%" y="591.50"></text></g><g><title>__fget_light (113 samples, 0.10%)</title><rect x="91.8816%" y="581" width="0.0976%" height="15" fill="rgb(225,221,4)" fg:x="106353" fg:w="113"/><text x="92.1316%" y="591.50"></text></g><g><title>_raw_spin_lock_irqsave (19 samples, 0.02%)</title><rect x="91.9940%" y="549" width="0.0164%" height="15" fill="rgb(242,27,43)" fg:x="106483" fg:w="19"/><text x="92.2440%" y="559.50"></text></g><g><title>ep_item_poll.isra.0 (37 samples, 0.03%)</title><rect x="91.9793%" y="581" width="0.0320%" height="15" fill="rgb(227,54,8)" fg:x="106466" fg:w="37"/><text x="92.2293%" y="591.50"></text></g><g><title>timerfd_poll (24 samples, 0.02%)</title><rect x="91.9905%" y="565" width="0.0207%" height="15" fill="rgb(253,139,49)" fg:x="106479" fg:w="24"/><text x="92.2405%" y="575.50"></text></g><g><title>fput_many (37 samples, 0.03%)</title><rect x="92.0130%" y="581" width="0.0320%" height="15" fill="rgb(231,26,43)" fg:x="106505" fg:w="37"/><text x="92.2630%" y="591.50"></text></g><g><title>mutex_lock (24 samples, 0.02%)</title><rect x="92.0449%" y="581" width="0.0207%" height="15" fill="rgb(207,121,39)" fg:x="106542" fg:w="24"/><text x="92.2949%" y="591.50"></text></g><g><title>__x64_sys_epoll_ctl (383 samples, 0.33%)</title><rect x="91.7460%" y="613" width="0.3309%" height="15" fill="rgb(223,101,35)" fg:x="106196" fg:w="383"/><text x="91.9960%" y="623.50"></text></g><g><title>do_epoll_ctl (305 samples, 0.26%)</title><rect x="91.8134%" y="597" width="0.2635%" height="15" fill="rgb(232,87,23)" fg:x="106274" fg:w="305"/><text x="92.0634%" y="607.50"></text></g><g><title>mutex_unlock (13 samples, 0.01%)</title><rect x="92.0657%" y="581" width="0.0112%" height="15" fill="rgb(225,180,29)" fg:x="106566" fg:w="13"/><text x="92.3157%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (30 samples, 0.03%)</title><rect x="92.4354%" y="597" width="0.0259%" height="15" fill="rgb(225,25,17)" fg:x="106994" fg:w="30"/><text x="92.6854%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (458 samples, 0.40%)</title><rect x="92.0803%" y="613" width="0.3957%" height="15" fill="rgb(223,8,52)" fg:x="106583" fg:w="458"/><text x="92.3303%" y="623.50"></text></g><g><title>syscall_exit_work (17 samples, 0.01%)</title><rect x="92.4613%" y="597" width="0.0147%" height="15" fill="rgb(246,42,21)" fg:x="107024" fg:w="17"/><text x="92.7113%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (892 samples, 0.77%)</title><rect x="91.7218%" y="645" width="0.7706%" height="15" fill="rgb(205,64,43)" fg:x="106168" fg:w="892"/><text x="91.9718%" y="655.50"></text></g><g><title>do_syscall_64 (880 samples, 0.76%)</title><rect x="91.7322%" y="629" width="0.7603%" height="15" fill="rgb(221,160,13)" fg:x="106180" fg:w="880"/><text x="91.9822%" y="639.50"></text></g><g><title>syscall_trace_enter.constprop.0 (19 samples, 0.02%)</title><rect x="92.4760%" y="613" width="0.0164%" height="15" fill="rgb(239,58,35)" fg:x="107041" fg:w="19"/><text x="92.7260%" y="623.50"></text></g><g><title>__GI_epoll_ctl (988 samples, 0.85%)</title><rect x="91.6510%" y="661" width="0.8536%" height="15" fill="rgb(251,26,40)" fg:x="106086" fg:w="988"/><text x="91.9010%" y="671.50"></text></g><g><title>syscall_return_via_sysret (14 samples, 0.01%)</title><rect x="92.4924%" y="645" width="0.0121%" height="15" fill="rgb(247,0,4)" fg:x="107060" fg:w="14"/><text x="92.7424%" y="655.50"></text></g><g><title>polling::epoll::Poller::ctl (997 samples, 0.86%)</title><rect x="91.6492%" y="677" width="0.8613%" height="15" fill="rgb(218,130,10)" fg:x="106084" fg:w="997"/><text x="91.8992%" y="687.50"></text></g><g><title>polling::epoll::Poller::modify (999 samples, 0.86%)</title><rect x="91.6484%" y="693" width="0.8631%" height="15" fill="rgb(239,32,7)" fg:x="106083" fg:w="999"/><text x="91.8984%" y="703.50"></text></g><g><title>__entry_text_start (14 samples, 0.01%)</title><rect x="92.5296%" y="677" width="0.0121%" height="15" fill="rgb(210,192,24)" fg:x="107103" fg:w="14"/><text x="92.7796%" y="687.50"></text></g><g><title>__fget_light (54 samples, 0.05%)</title><rect x="92.5970%" y="613" width="0.0467%" height="15" fill="rgb(226,212,17)" fg:x="107181" fg:w="54"/><text x="92.8470%" y="623.50"></text></g><g><title>__hrtimer_init (14 samples, 0.01%)</title><rect x="92.6436%" y="613" width="0.0121%" height="15" fill="rgb(219,201,28)" fg:x="107235" fg:w="14"/><text x="92.8936%" y="623.50"></text></g><g><title>_raw_spin_lock (15 samples, 0.01%)</title><rect x="92.6557%" y="613" width="0.0130%" height="15" fill="rgb(235,207,41)" fg:x="107249" fg:w="15"/><text x="92.9057%" y="623.50"></text></g><g><title>_raw_spin_lock_irq (14 samples, 0.01%)</title><rect x="92.6687%" y="613" width="0.0121%" height="15" fill="rgb(241,95,54)" fg:x="107264" fg:w="14"/><text x="92.9187%" y="623.50"></text></g><g><title>fput_many (13 samples, 0.01%)</title><rect x="92.6842%" y="613" width="0.0112%" height="15" fill="rgb(248,12,23)" fg:x="107282" fg:w="13"/><text x="92.9342%" y="623.50"></text></g><g><title>_raw_spin_lock_irqsave (12 samples, 0.01%)</title><rect x="92.7179%" y="597" width="0.0104%" height="15" fill="rgb(228,173,4)" fg:x="107321" fg:w="12"/><text x="92.9679%" y="607.50"></text></g><g><title>enqueue_hrtimer (22 samples, 0.02%)</title><rect x="92.7300%" y="597" width="0.0190%" height="15" fill="rgb(254,99,5)" fg:x="107335" fg:w="22"/><text x="92.9800%" y="607.50"></text></g><g><title>timerqueue_add (15 samples, 0.01%)</title><rect x="92.7361%" y="581" width="0.0130%" height="15" fill="rgb(212,184,17)" fg:x="107342" fg:w="15"/><text x="92.9861%" y="591.50"></text></g><g><title>hrtimer_start_range_ns (82 samples, 0.07%)</title><rect x="92.7024%" y="613" width="0.0708%" height="15" fill="rgb(252,174,1)" fg:x="107303" fg:w="82"/><text x="92.9524%" y="623.50"></text></g><g><title>ktime_get (20 samples, 0.02%)</title><rect x="92.7559%" y="597" width="0.0173%" height="15" fill="rgb(241,118,51)" fg:x="107365" fg:w="20"/><text x="93.0059%" y="607.50"></text></g><g><title>read_tsc (13 samples, 0.01%)</title><rect x="92.7620%" y="581" width="0.0112%" height="15" fill="rgb(227,94,47)" fg:x="107372" fg:w="13"/><text x="93.0120%" y="591.50"></text></g><g><title>__remove_hrtimer (17 samples, 0.01%)</title><rect x="92.7784%" y="597" width="0.0147%" height="15" fill="rgb(229,104,2)" fg:x="107391" fg:w="17"/><text x="93.0284%" y="607.50"></text></g><g><title>timerqueue_del (15 samples, 0.01%)</title><rect x="92.7801%" y="581" width="0.0130%" height="15" fill="rgb(219,28,31)" fg:x="107393" fg:w="15"/><text x="93.0301%" y="591.50"></text></g><g><title>rb_erase (13 samples, 0.01%)</title><rect x="92.7819%" y="565" width="0.0112%" height="15" fill="rgb(233,109,36)" fg:x="107395" fg:w="13"/><text x="93.0319%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (27 samples, 0.02%)</title><rect x="92.7931%" y="597" width="0.0233%" height="15" fill="rgb(246,88,11)" fg:x="107408" fg:w="27"/><text x="93.0431%" y="607.50"></text></g><g><title>hrtimer_try_to_cancel (56 samples, 0.05%)</title><rect x="92.7732%" y="613" width="0.0484%" height="15" fill="rgb(209,212,17)" fg:x="107385" fg:w="56"/><text x="93.0232%" y="623.50"></text></g><g><title>ktime_get (70 samples, 0.06%)</title><rect x="92.8216%" y="613" width="0.0605%" height="15" fill="rgb(243,59,29)" fg:x="107441" fg:w="70"/><text x="93.0716%" y="623.50"></text></g><g><title>read_tsc (33 samples, 0.03%)</title><rect x="92.8536%" y="597" width="0.0285%" height="15" fill="rgb(244,205,48)" fg:x="107478" fg:w="33"/><text x="93.1036%" y="607.50"></text></g><g><title>do_timerfd_settime (353 samples, 0.30%)</title><rect x="92.5823%" y="629" width="0.3050%" height="15" fill="rgb(227,30,6)" fg:x="107164" fg:w="353"/><text x="92.8323%" y="639.50"></text></g><g><title>get_itimerspec64 (15 samples, 0.01%)</title><rect x="92.8873%" y="629" width="0.0130%" height="15" fill="rgb(220,205,48)" fg:x="107517" fg:w="15"/><text x="93.1373%" y="639.50"></text></g><g><title>get_timespec64 (12 samples, 0.01%)</title><rect x="92.8898%" y="613" width="0.0104%" height="15" fill="rgb(250,94,14)" fg:x="107520" fg:w="12"/><text x="93.1398%" y="623.50"></text></g><g><title>__x64_sys_timerfd_settime (407 samples, 0.35%)</title><rect x="92.5616%" y="645" width="0.3516%" height="15" fill="rgb(216,119,42)" fg:x="107140" fg:w="407"/><text x="92.8116%" y="655.50"></text></g><g><title>get_timespec64 (15 samples, 0.01%)</title><rect x="92.9002%" y="629" width="0.0130%" height="15" fill="rgb(232,155,0)" fg:x="107532" fg:w="15"/><text x="93.1502%" y="639.50"></text></g><g><title>_copy_from_user (12 samples, 0.01%)</title><rect x="92.9028%" y="613" width="0.0104%" height="15" fill="rgb(212,24,32)" fg:x="107535" fg:w="12"/><text x="93.1528%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (15 samples, 0.01%)</title><rect x="93.1369%" y="629" width="0.0130%" height="15" fill="rgb(216,69,20)" fg:x="107806" fg:w="15"/><text x="93.3869%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (273 samples, 0.24%)</title><rect x="92.9192%" y="645" width="0.2359%" height="15" fill="rgb(229,73,31)" fg:x="107554" fg:w="273"/><text x="93.1692%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (722 samples, 0.62%)</title><rect x="92.5451%" y="677" width="0.6238%" height="15" fill="rgb(224,219,20)" fg:x="107121" fg:w="722"/><text x="92.7951%" y="687.50"></text></g><g><title>do_syscall_64 (714 samples, 0.62%)</title><rect x="92.5521%" y="661" width="0.6168%" height="15" fill="rgb(215,146,41)" fg:x="107129" fg:w="714"/><text x="92.8021%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (16 samples, 0.01%)</title><rect x="93.1551%" y="645" width="0.0138%" height="15" fill="rgb(244,71,31)" fg:x="107827" fg:w="16"/><text x="93.4051%" y="655.50"></text></g><g><title>polling::epoll::Poller::wait (3,899 samples, 3.37%)</title><rect x="89.8065%" y="709" width="3.3685%" height="15" fill="rgb(224,24,11)" fg:x="103951" fg:w="3899"/><text x="90.0565%" y="719.50">pol..</text></g><g><title>syscall (765 samples, 0.66%)</title><rect x="92.5140%" y="693" width="0.6609%" height="15" fill="rgb(229,76,15)" fg:x="107085" fg:w="765"/><text x="92.7640%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react (4,803 samples, 4.15%)</title><rect x="89.0462%" y="741" width="4.1495%" height="15" fill="rgb(209,93,2)" fg:x="103071" fg:w="4803"/><text x="89.2962%" y="751.50">async..</text></g><g><title>polling::Poller::wait (4,013 samples, 3.47%)</title><rect x="89.7287%" y="725" width="3.4670%" height="15" fill="rgb(216,200,50)" fg:x="103861" fg:w="4013"/><text x="89.9787%" y="735.50">pol..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (24 samples, 0.02%)</title><rect x="93.1749%" y="709" width="0.0207%" height="15" fill="rgb(211,67,34)" fg:x="107850" fg:w="24"/><text x="93.4249%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (23 samples, 0.02%)</title><rect x="93.1758%" y="693" width="0.0199%" height="15" fill="rgb(225,87,47)" fg:x="107851" fg:w="23"/><text x="93.4258%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (23 samples, 0.02%)</title><rect x="93.1758%" y="677" width="0.0199%" height="15" fill="rgb(217,185,16)" fg:x="107851" fg:w="23"/><text x="93.4258%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (23 samples, 0.02%)</title><rect x="93.1758%" y="661" width="0.0199%" height="15" fill="rgb(205,0,0)" fg:x="107851" fg:w="23"/><text x="93.4258%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (17 samples, 0.01%)</title><rect x="93.1957%" y="693" width="0.0147%" height="15" fill="rgb(207,116,45)" fg:x="107874" fg:w="17"/><text x="93.4457%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (17 samples, 0.01%)</title><rect x="93.1957%" y="677" width="0.0147%" height="15" fill="rgb(221,156,26)" fg:x="107874" fg:w="17"/><text x="93.4457%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="93.1957%" y="741" width="0.0164%" height="15" fill="rgb(213,140,4)" fg:x="107874" fg:w="19"/><text x="93.4457%" y="751.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="93.1957%" y="725" width="0.0164%" height="15" fill="rgb(231,224,15)" fg:x="107874" fg:w="19"/><text x="93.4457%" y="735.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (19 samples, 0.02%)</title><rect x="93.1957%" y="709" width="0.0164%" height="15" fill="rgb(244,76,20)" fg:x="107874" fg:w="19"/><text x="93.4457%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::reactor::ReactorLock&gt; (16 samples, 0.01%)</title><rect x="93.2121%" y="741" width="0.0138%" height="15" fill="rgb(238,117,7)" fg:x="107893" fg:w="16"/><text x="93.4621%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="93.2121%" y="725" width="0.0138%" height="15" fill="rgb(235,1,10)" fg:x="107893" fg:w="16"/><text x="93.4621%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="93.2121%" y="709" width="0.0138%" height="15" fill="rgb(216,165,6)" fg:x="107893" fg:w="16"/><text x="93.4621%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.01%)</title><rect x="93.2121%" y="693" width="0.0138%" height="15" fill="rgb(246,91,35)" fg:x="107893" fg:w="16"/><text x="93.4621%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="93.2130%" y="677" width="0.0130%" height="15" fill="rgb(228,96,24)" fg:x="107894" fg:w="15"/><text x="93.4630%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="93.2130%" y="661" width="0.0130%" height="15" fill="rgb(254,217,53)" fg:x="107894" fg:w="15"/><text x="93.4630%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (13 samples, 0.01%)</title><rect x="93.2294%" y="741" width="0.0112%" height="15" fill="rgb(209,60,0)" fg:x="107913" fg:w="13"/><text x="93.4794%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_store (13 samples, 0.01%)</title><rect x="93.2294%" y="725" width="0.0112%" height="15" fill="rgb(250,93,26)" fg:x="107913" fg:w="13"/><text x="93.4794%" y="735.50"></text></g><g><title>__GI___pthread_cond_wait (21 samples, 0.02%)</title><rect x="93.2527%" y="709" width="0.0181%" height="15" fill="rgb(211,9,40)" fg:x="107940" fg:w="21"/><text x="93.5027%" y="719.50"></text></g><g><title>__futex_abstimed_wait_common (21 samples, 0.02%)</title><rect x="93.2527%" y="693" width="0.0181%" height="15" fill="rgb(242,57,20)" fg:x="107940" fg:w="21"/><text x="93.5027%" y="703.50"></text></g><g><title>__entry_text_start (21 samples, 0.02%)</title><rect x="93.2527%" y="677" width="0.0181%" height="15" fill="rgb(248,85,48)" fg:x="107940" fg:w="21"/><text x="93.5027%" y="687.50"></text></g><g><title>__entry_text_start (34 samples, 0.03%)</title><rect x="93.3477%" y="677" width="0.0294%" height="15" fill="rgb(212,117,2)" fg:x="108050" fg:w="34"/><text x="93.5977%" y="687.50"></text></g><g><title>futex_hash (43 samples, 0.04%)</title><rect x="93.5421%" y="597" width="0.0371%" height="15" fill="rgb(243,19,3)" fg:x="108275" fg:w="43"/><text x="93.7921%" y="607.50"></text></g><g><title>get_futex_key (28 samples, 0.02%)</title><rect x="93.5793%" y="597" width="0.0242%" height="15" fill="rgb(232,217,24)" fg:x="108318" fg:w="28"/><text x="93.8293%" y="607.50"></text></g><g><title>__x64_sys_futex (222 samples, 0.19%)</title><rect x="93.4134%" y="645" width="0.1918%" height="15" fill="rgb(224,175,40)" fg:x="108126" fg:w="222"/><text x="93.6634%" y="655.50"></text></g><g><title>do_futex (163 samples, 0.14%)</title><rect x="93.4644%" y="629" width="0.1408%" height="15" fill="rgb(212,162,32)" fg:x="108185" fg:w="163"/><text x="93.7144%" y="639.50"></text></g><g><title>futex_wake (140 samples, 0.12%)</title><rect x="93.4842%" y="613" width="0.1210%" height="15" fill="rgb(215,9,4)" fg:x="108208" fg:w="140"/><text x="93.7342%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (38 samples, 0.03%)</title><rect x="94.0484%" y="629" width="0.0328%" height="15" fill="rgb(242,42,7)" fg:x="108861" fg:w="38"/><text x="94.2984%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (563 samples, 0.49%)</title><rect x="93.6130%" y="645" width="0.4864%" height="15" fill="rgb(242,184,45)" fg:x="108357" fg:w="563"/><text x="93.8630%" y="655.50"></text></g><g><title>syscall_exit_work (21 samples, 0.02%)</title><rect x="94.0812%" y="629" width="0.0181%" height="15" fill="rgb(228,111,51)" fg:x="108899" fg:w="21"/><text x="94.3312%" y="639.50"></text></g><g><title>__audit_syscall_entry (25 samples, 0.02%)</title><rect x="94.1192%" y="629" width="0.0216%" height="15" fill="rgb(236,147,17)" fg:x="108943" fg:w="25"/><text x="94.3692%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (887 samples, 0.77%)</title><rect x="93.3806%" y="677" width="0.7663%" height="15" fill="rgb(210,75,22)" fg:x="108088" fg:w="887"/><text x="93.6306%" y="687.50"></text></g><g><title>do_syscall_64 (869 samples, 0.75%)</title><rect x="93.3961%" y="661" width="0.7508%" height="15" fill="rgb(217,159,45)" fg:x="108106" fg:w="869"/><text x="93.6461%" y="671.50"></text></g><g><title>syscall_trace_enter.constprop.0 (55 samples, 0.05%)</title><rect x="94.0994%" y="645" width="0.0475%" height="15" fill="rgb(245,165,53)" fg:x="108920" fg:w="55"/><text x="94.3494%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (1,052 samples, 0.91%)</title><rect x="93.2708%" y="709" width="0.9089%" height="15" fill="rgb(251,190,50)" fg:x="107961" fg:w="1052"/><text x="93.5208%" y="719.50"></text></g><g><title>__GI___lll_lock_wake (1,026 samples, 0.89%)</title><rect x="93.2933%" y="693" width="0.8864%" height="15" fill="rgb(208,203,29)" fg:x="107987" fg:w="1026"/><text x="93.5433%" y="703.50"></text></g><g><title>syscall_return_via_sysret (38 samples, 0.03%)</title><rect x="94.1469%" y="677" width="0.0328%" height="15" fill="rgb(207,209,35)" fg:x="108975" fg:w="38"/><text x="94.3969%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (87 samples, 0.08%)</title><rect x="94.1832%" y="709" width="0.0752%" height="15" fill="rgb(230,144,49)" fg:x="109017" fg:w="87"/><text x="94.4332%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (87 samples, 0.08%)</title><rect x="94.1832%" y="693" width="0.0752%" height="15" fill="rgb(229,31,6)" fg:x="109017" fg:w="87"/><text x="94.4332%" y="703.50"></text></g><g><title>std::sync::poison::Flag::get (12 samples, 0.01%)</title><rect x="94.2583%" y="693" width="0.0104%" height="15" fill="rgb(251,129,24)" fg:x="109104" fg:w="12"/><text x="94.5083%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (12 samples, 0.01%)</title><rect x="94.2583%" y="677" width="0.0104%" height="15" fill="rgb(235,105,15)" fg:x="109104" fg:w="12"/><text x="94.5083%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="94.2583%" y="661" width="0.0104%" height="15" fill="rgb(216,52,43)" fg:x="109104" fg:w="12"/><text x="94.5083%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (34 samples, 0.03%)</title><rect x="94.3836%" y="645" width="0.0294%" height="15" fill="rgb(238,144,41)" fg:x="109249" fg:w="34"/><text x="94.6336%" y="655.50"></text></g><g><title>__condvar_confirm_wakeup (26 samples, 0.02%)</title><rect x="94.4130%" y="645" width="0.0225%" height="15" fill="rgb(243,63,9)" fg:x="109283" fg:w="26"/><text x="94.6630%" y="655.50"></text></g><g><title>__condvar_dec_grefs (172 samples, 0.15%)</title><rect x="94.4354%" y="645" width="0.1486%" height="15" fill="rgb(246,208,1)" fg:x="109309" fg:w="172"/><text x="94.6854%" y="655.50"></text></g><g><title>__GI___pthread_disable_asynccancel (29 samples, 0.03%)</title><rect x="94.6583%" y="629" width="0.0251%" height="15" fill="rgb(233,182,18)" fg:x="109567" fg:w="29"/><text x="94.9083%" y="639.50"></text></g><g><title>__entry_text_start (25 samples, 0.02%)</title><rect x="94.6860%" y="629" width="0.0216%" height="15" fill="rgb(242,224,8)" fg:x="109599" fg:w="25"/><text x="94.9360%" y="639.50"></text></g><g><title>futex_unqueue (55 samples, 0.05%)</title><rect x="95.0022%" y="549" width="0.0475%" height="15" fill="rgb(243,54,37)" fg:x="109965" fg:w="55"/><text x="95.2522%" y="559.50"></text></g><g><title>__futex_queue (27 samples, 0.02%)</title><rect x="95.1231%" y="533" width="0.0233%" height="15" fill="rgb(233,192,12)" fg:x="110105" fg:w="27"/><text x="95.3731%" y="543.50"></text></g><g><title>plist_add (17 samples, 0.01%)</title><rect x="95.1317%" y="517" width="0.0147%" height="15" fill="rgb(251,192,53)" fg:x="110115" fg:w="17"/><text x="95.3817%" y="527.50"></text></g><g><title>_raw_spin_lock (32 samples, 0.03%)</title><rect x="95.4514%" y="485" width="0.0276%" height="15" fill="rgb(246,141,26)" fg:x="110485" fg:w="32"/><text x="95.7014%" y="495.50"></text></g><g><title>__perf_event_task_sched_out (210 samples, 0.18%)</title><rect x="95.3382%" y="501" width="0.1814%" height="15" fill="rgb(239,195,19)" fg:x="110354" fg:w="210"/><text x="95.5882%" y="511.50"></text></g><g><title>x86_pmu_disable (42 samples, 0.04%)</title><rect x="95.4834%" y="485" width="0.0363%" height="15" fill="rgb(241,16,39)" fg:x="110522" fg:w="42"/><text x="95.7334%" y="495.50"></text></g><g><title>dequeue_task (14 samples, 0.01%)</title><rect x="95.5197%" y="501" width="0.0121%" height="15" fill="rgb(223,13,53)" fg:x="110564" fg:w="14"/><text x="95.7697%" y="511.50"></text></g><g><title>reweight_entity (50 samples, 0.04%)</title><rect x="95.7132%" y="469" width="0.0432%" height="15" fill="rgb(214,227,0)" fg:x="110788" fg:w="50"/><text x="95.9632%" y="479.50"></text></g><g><title>update_cfs_group (70 samples, 0.06%)</title><rect x="95.7564%" y="469" width="0.0605%" height="15" fill="rgb(228,103,26)" fg:x="110838" fg:w="70"/><text x="96.0064%" y="479.50"></text></g><g><title>__calc_delta (58 samples, 0.05%)</title><rect x="95.9240%" y="453" width="0.0501%" height="15" fill="rgb(254,177,53)" fg:x="111032" fg:w="58"/><text x="96.1740%" y="463.50"></text></g><g><title>__cgroup_account_cputime (22 samples, 0.02%)</title><rect x="95.9741%" y="453" width="0.0190%" height="15" fill="rgb(208,201,34)" fg:x="111090" fg:w="22"/><text x="96.2241%" y="463.50"></text></g><g><title>__rcu_read_unlock (13 samples, 0.01%)</title><rect x="96.0009%" y="453" width="0.0112%" height="15" fill="rgb(212,39,5)" fg:x="111121" fg:w="13"/><text x="96.2509%" y="463.50"></text></g><g><title>cpuacct_charge (71 samples, 0.06%)</title><rect x="96.0121%" y="453" width="0.0613%" height="15" fill="rgb(246,117,3)" fg:x="111134" fg:w="71"/><text x="96.2621%" y="463.50"></text></g><g><title>update_curr (317 samples, 0.27%)</title><rect x="95.8168%" y="469" width="0.2739%" height="15" fill="rgb(244,118,39)" fg:x="110908" fg:w="317"/><text x="96.0668%" y="479.50"></text></g><g><title>update_min_vruntime (20 samples, 0.02%)</title><rect x="96.0734%" y="453" width="0.0173%" height="15" fill="rgb(241,64,10)" fg:x="111205" fg:w="20"/><text x="96.3234%" y="463.50"></text></g><g><title>__update_load_avg_cfs_rq (60 samples, 0.05%)</title><rect x="96.1417%" y="453" width="0.0518%" height="15" fill="rgb(229,39,44)" fg:x="111284" fg:w="60"/><text x="96.3917%" y="463.50"></text></g><g><title>dequeue_entity (708 samples, 0.61%)</title><rect x="95.6363%" y="485" width="0.6117%" height="15" fill="rgb(230,226,3)" fg:x="110699" fg:w="708"/><text x="95.8863%" y="495.50"></text></g><g><title>update_load_avg (182 samples, 0.16%)</title><rect x="96.0907%" y="469" width="0.1572%" height="15" fill="rgb(222,13,42)" fg:x="111225" fg:w="182"/><text x="96.3407%" y="479.50"></text></g><g><title>__update_load_avg_se (63 samples, 0.05%)</title><rect x="96.1935%" y="453" width="0.0544%" height="15" fill="rgb(247,180,54)" fg:x="111344" fg:w="63"/><text x="96.4435%" y="463.50"></text></g><g><title>dequeue_task_fair (837 samples, 0.72%)</title><rect x="95.5317%" y="501" width="0.7231%" height="15" fill="rgb(205,96,16)" fg:x="110578" fg:w="837"/><text x="95.7817%" y="511.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (305 samples, 0.26%)</title><rect x="96.3680%" y="469" width="0.2635%" height="15" fill="rgb(205,100,21)" fg:x="111546" fg:w="305"/><text x="96.6180%" y="479.50"></text></g><g><title>native_write_msr (289 samples, 0.25%)</title><rect x="96.3819%" y="453" width="0.2497%" height="15" fill="rgb(248,51,4)" fg:x="111562" fg:w="289"/><text x="96.6319%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (343 samples, 0.30%)</title><rect x="96.3577%" y="485" width="0.2963%" height="15" fill="rgb(217,197,30)" fg:x="111534" fg:w="343"/><text x="96.6077%" y="495.50"></text></g><g><title>_raw_spin_unlock (26 samples, 0.02%)</title><rect x="96.6315%" y="469" width="0.0225%" height="15" fill="rgb(240,179,40)" fg:x="111851" fg:w="26"/><text x="96.8815%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (482 samples, 0.42%)</title><rect x="96.2549%" y="501" width="0.4164%" height="15" fill="rgb(212,185,35)" fg:x="111415" fg:w="482"/><text x="96.5049%" y="511.50"></text></g><g><title>pick_next_task_fair (90 samples, 0.08%)</title><rect x="96.6713%" y="501" width="0.0778%" height="15" fill="rgb(251,222,31)" fg:x="111897" fg:w="90"/><text x="96.9213%" y="511.50"></text></g><g><title>newidle_balance (73 samples, 0.06%)</title><rect x="96.6860%" y="485" width="0.0631%" height="15" fill="rgb(208,140,36)" fg:x="111914" fg:w="73"/><text x="96.9360%" y="495.50"></text></g><g><title>pick_next_task_idle (40 samples, 0.03%)</title><rect x="96.7490%" y="501" width="0.0346%" height="15" fill="rgb(220,148,1)" fg:x="111987" fg:w="40"/><text x="96.9990%" y="511.50"></text></g><g><title>set_next_task_idle (34 samples, 0.03%)</title><rect x="96.7542%" y="485" width="0.0294%" height="15" fill="rgb(254,4,28)" fg:x="111993" fg:w="34"/><text x="97.0042%" y="495.50"></text></g><g><title>__update_idle_core (30 samples, 0.03%)</title><rect x="96.7577%" y="469" width="0.0259%" height="15" fill="rgb(222,185,44)" fg:x="111997" fg:w="30"/><text x="97.0077%" y="479.50"></text></g><g><title>iterate_groups (72 samples, 0.06%)</title><rect x="96.8173%" y="485" width="0.0622%" height="15" fill="rgb(215,74,39)" fg:x="112066" fg:w="72"/><text x="97.0673%" y="495.50"></text></g><g><title>psi_group_change (307 samples, 0.27%)</title><rect x="96.8829%" y="485" width="0.2652%" height="15" fill="rgb(247,86,4)" fg:x="112142" fg:w="307"/><text x="97.1329%" y="495.50"></text></g><g><title>native_sched_clock (32 samples, 0.03%)</title><rect x="97.1499%" y="469" width="0.0276%" height="15" fill="rgb(231,105,32)" fg:x="112451" fg:w="32"/><text x="97.3999%" y="479.50"></text></g><g><title>psi_task_switch (457 samples, 0.39%)</title><rect x="96.7836%" y="501" width="0.3948%" height="15" fill="rgb(222,65,35)" fg:x="112027" fg:w="457"/><text x="97.0336%" y="511.50"></text></g><g><title>sched_clock_cpu (35 samples, 0.03%)</title><rect x="97.1482%" y="485" width="0.0302%" height="15" fill="rgb(218,145,35)" fg:x="112449" fg:w="35"/><text x="97.3982%" y="495.50"></text></g><g><title>put_prev_task_fair (84 samples, 0.07%)</title><rect x="97.1784%" y="501" width="0.0726%" height="15" fill="rgb(208,7,15)" fg:x="112484" fg:w="84"/><text x="97.4284%" y="511.50"></text></g><g><title>put_prev_entity (41 samples, 0.04%)</title><rect x="97.2156%" y="485" width="0.0354%" height="15" fill="rgb(209,83,13)" fg:x="112527" fg:w="41"/><text x="97.4656%" y="495.50"></text></g><g><title>raw_spin_rq_lock_nested (40 samples, 0.03%)</title><rect x="97.2510%" y="501" width="0.0346%" height="15" fill="rgb(218,3,10)" fg:x="112568" fg:w="40"/><text x="97.5010%" y="511.50"></text></g><g><title>_raw_spin_lock (36 samples, 0.03%)</title><rect x="97.2544%" y="485" width="0.0311%" height="15" fill="rgb(211,219,4)" fg:x="112572" fg:w="36"/><text x="97.5044%" y="495.50"></text></g><g><title>sched_clock_cpu (70 samples, 0.06%)</title><rect x="97.3400%" y="485" width="0.0605%" height="15" fill="rgb(228,194,12)" fg:x="112671" fg:w="70"/><text x="97.5900%" y="495.50"></text></g><g><title>native_sched_clock (66 samples, 0.06%)</title><rect x="97.3434%" y="469" width="0.0570%" height="15" fill="rgb(210,175,7)" fg:x="112675" fg:w="66"/><text x="97.5934%" y="479.50"></text></g><g><title>futex_wait_queue (2,741 samples, 2.37%)</title><rect x="95.0497%" y="549" width="2.3680%" height="15" fill="rgb(243,132,6)" fg:x="110020" fg:w="2741"/><text x="95.2997%" y="559.50">fu..</text></g><g><title>schedule (2,627 samples, 2.27%)</title><rect x="95.1482%" y="533" width="2.2695%" height="15" fill="rgb(207,72,18)" fg:x="110134" fg:w="2627"/><text x="95.3982%" y="543.50">s..</text></g><g><title>__schedule (2,583 samples, 2.23%)</title><rect x="95.1862%" y="517" width="2.2315%" height="15" fill="rgb(236,1,18)" fg:x="110178" fg:w="2583"/><text x="95.4362%" y="527.50">_..</text></g><g><title>update_rq_clock (142 samples, 0.12%)</title><rect x="97.2950%" y="501" width="0.1227%" height="15" fill="rgb(227,0,18)" fg:x="112619" fg:w="142"/><text x="97.5450%" y="511.50"></text></g><g><title>update_irq_load_avg (20 samples, 0.02%)</title><rect x="97.4004%" y="485" width="0.0173%" height="15" fill="rgb(247,37,5)" fg:x="112741" fg:w="20"/><text x="97.6504%" y="495.50"></text></g><g><title>futex_get_value_locked (53 samples, 0.05%)</title><rect x="97.4436%" y="533" width="0.0458%" height="15" fill="rgb(237,179,24)" fg:x="112791" fg:w="53"/><text x="97.6936%" y="543.50"></text></g><g><title>__get_user_nocheck_4 (50 samples, 0.04%)</title><rect x="97.4462%" y="517" width="0.0432%" height="15" fill="rgb(226,53,20)" fg:x="112794" fg:w="50"/><text x="97.6962%" y="527.50"></text></g><g><title>_raw_spin_lock (31 samples, 0.03%)</title><rect x="97.6078%" y="517" width="0.0268%" height="15" fill="rgb(247,75,7)" fg:x="112981" fg:w="31"/><text x="97.8578%" y="527.50"></text></g><g><title>futex_q_lock (216 samples, 0.19%)</title><rect x="97.4894%" y="533" width="0.1866%" height="15" fill="rgb(233,96,12)" fg:x="112844" fg:w="216"/><text x="97.7394%" y="543.50"></text></g><g><title>futex_hash (48 samples, 0.04%)</title><rect x="97.6346%" y="517" width="0.0415%" height="15" fill="rgb(224,125,0)" fg:x="113012" fg:w="48"/><text x="97.8846%" y="527.50"></text></g><g><title>__x64_sys_futex (3,380 samples, 2.92%)</title><rect x="94.7931%" y="597" width="2.9201%" height="15" fill="rgb(224,92,25)" fg:x="109723" fg:w="3380"/><text x="95.0431%" y="607.50">__..</text></g><g><title>do_futex (3,292 samples, 2.84%)</title><rect x="94.8691%" y="581" width="2.8441%" height="15" fill="rgb(224,42,24)" fg:x="109811" fg:w="3292"/><text x="95.1191%" y="591.50">do..</text></g><g><title>futex_wait (3,272 samples, 2.83%)</title><rect x="94.8864%" y="565" width="2.8268%" height="15" fill="rgb(234,132,49)" fg:x="109831" fg:w="3272"/><text x="95.1364%" y="575.50">fu..</text></g><g><title>futex_wait_setup (342 samples, 0.30%)</title><rect x="97.4177%" y="549" width="0.2955%" height="15" fill="rgb(248,100,35)" fg:x="112761" fg:w="342"/><text x="97.6677%" y="559.50"></text></g><g><title>get_futex_key (41 samples, 0.04%)</title><rect x="97.6778%" y="533" width="0.0354%" height="15" fill="rgb(239,94,40)" fg:x="113062" fg:w="41"/><text x="97.9278%" y="543.50"></text></g><g><title>__get_user_8 (45 samples, 0.04%)</title><rect x="98.3741%" y="549" width="0.0389%" height="15" fill="rgb(235,139,28)" fg:x="113868" fg:w="45"/><text x="98.6241%" y="559.50"></text></g><g><title>__rseq_handle_notify_resume (176 samples, 0.15%)</title><rect x="98.3006%" y="565" width="0.1521%" height="15" fill="rgb(217,144,7)" fg:x="113783" fg:w="176"/><text x="98.5506%" y="575.50"></text></g><g><title>__put_user_nocheck_8 (46 samples, 0.04%)</title><rect x="98.4130%" y="549" width="0.0397%" height="15" fill="rgb(227,55,4)" fg:x="113913" fg:w="46"/><text x="98.6630%" y="559.50"></text></g><g><title>mem_cgroup_handle_over_high (14 samples, 0.01%)</title><rect x="98.4613%" y="565" width="0.0121%" height="15" fill="rgb(252,82,54)" fg:x="113969" fg:w="14"/><text x="98.7113%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (325 samples, 0.28%)</title><rect x="98.2186%" y="581" width="0.2808%" height="15" fill="rgb(245,172,4)" fg:x="113688" fg:w="325"/><text x="98.4686%" y="591.50"></text></g><g><title>switch_fpu_return (30 samples, 0.03%)</title><rect x="98.4734%" y="565" width="0.0259%" height="15" fill="rgb(207,26,27)" fg:x="113983" fg:w="30"/><text x="98.7234%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (1,010 samples, 0.87%)</title><rect x="97.7227%" y="597" width="0.8726%" height="15" fill="rgb(252,98,18)" fg:x="113114" fg:w="1010"/><text x="97.9727%" y="607.50"></text></g><g><title>syscall_exit_work (111 samples, 0.10%)</title><rect x="98.4994%" y="581" width="0.0959%" height="15" fill="rgb(244,8,26)" fg:x="114013" fg:w="111"/><text x="98.7494%" y="591.50"></text></g><g><title>__audit_syscall_exit (27 samples, 0.02%)</title><rect x="98.5719%" y="565" width="0.0233%" height="15" fill="rgb(237,173,45)" fg:x="114097" fg:w="27"/><text x="98.8219%" y="575.50"></text></g><g><title>__audit_syscall_entry (29 samples, 0.03%)</title><rect x="98.6091%" y="581" width="0.0251%" height="15" fill="rgb(208,213,49)" fg:x="114140" fg:w="29"/><text x="98.8591%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,544 samples, 3.93%)</title><rect x="94.7171%" y="629" width="3.9257%" height="15" fill="rgb(212,122,37)" fg:x="109635" fg:w="4544"/><text x="94.9671%" y="639.50">entr..</text></g><g><title>do_syscall_64 (4,529 samples, 3.91%)</title><rect x="94.7300%" y="613" width="3.9127%" height="15" fill="rgb(213,80,17)" fg:x="109650" fg:w="4529"/><text x="94.9800%" y="623.50">do_s..</text></g><g><title>syscall_trace_enter.constprop.0 (55 samples, 0.05%)</title><rect x="98.5952%" y="597" width="0.0475%" height="15" fill="rgb(206,210,43)" fg:x="114124" fg:w="55"/><text x="98.8452%" y="607.50"></text></g><g><title>__futex_abstimed_wait_common (4,729 samples, 4.09%)</title><rect x="94.5840%" y="645" width="4.0855%" height="15" fill="rgb(229,214,3)" fg:x="109481" fg:w="4729"/><text x="94.8340%" y="655.50">__fu..</text></g><g><title>syscall_return_via_sysret (31 samples, 0.03%)</title><rect x="98.6428%" y="629" width="0.0268%" height="15" fill="rgb(235,213,29)" fg:x="114179" fg:w="31"/><text x="98.8928%" y="639.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (5,126 samples, 4.43%)</title><rect x="94.2687%" y="677" width="4.4285%" height="15" fill="rgb(248,135,26)" fg:x="109116" fg:w="5126"/><text x="94.5187%" y="687.50">std::..</text></g><g><title>__GI___pthread_cond_wait (5,126 samples, 4.43%)</title><rect x="94.2687%" y="661" width="4.4285%" height="15" fill="rgb(242,188,12)" fg:x="109116" fg:w="5126"/><text x="94.5187%" y="671.50">__GI_..</text></g><g><title>__pthread_mutex_cond_lock (21 samples, 0.02%)</title><rect x="98.6790%" y="645" width="0.0181%" height="15" fill="rgb(245,38,12)" fg:x="114221" fg:w="21"/><text x="98.9290%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (27 samples, 0.02%)</title><rect x="98.6989%" y="661" width="0.0233%" height="15" fill="rgb(218,42,13)" fg:x="114244" fg:w="27"/><text x="98.9489%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.02%)</title><rect x="98.6989%" y="645" width="0.0233%" height="15" fill="rgb(238,132,49)" fg:x="114244" fg:w="27"/><text x="98.9489%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::wait (5,168 samples, 4.46%)</title><rect x="94.2583%" y="709" width="4.4648%" height="15" fill="rgb(209,196,19)" fg:x="109104" fg:w="5168"/><text x="94.5083%" y="719.50">std::..</text></g><g><title>std::sys_common::condvar::Condvar::wait (5,156 samples, 4.45%)</title><rect x="94.2687%" y="693" width="4.4544%" height="15" fill="rgb(244,131,22)" fg:x="109116" fg:w="5156"/><text x="94.5187%" y="703.50">std::..</text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (30 samples, 0.03%)</title><rect x="98.6972%" y="677" width="0.0259%" height="15" fill="rgb(223,18,34)" fg:x="114242" fg:w="30"/><text x="98.9472%" y="687.50"></text></g><g><title>parking::Parker::park (6,377 samples, 5.51%)</title><rect x="93.2449%" y="741" width="5.5093%" height="15" fill="rgb(252,124,54)" fg:x="107931" fg:w="6377"/><text x="93.4949%" y="751.50">parking..</text></g><g><title>parking::Inner::park (6,376 samples, 5.51%)</title><rect x="93.2458%" y="725" width="5.5084%" height="15" fill="rgb(229,106,42)" fg:x="107932" fg:w="6376"/><text x="93.4958%" y="735.50">parking..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.03%)</title><rect x="98.7231%" y="709" width="0.0311%" height="15" fill="rgb(221,129,1)" fg:x="114272" fg:w="36"/><text x="98.9731%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.03%)</title><rect x="98.7231%" y="693" width="0.0311%" height="15" fill="rgb(229,74,15)" fg:x="114272" fg:w="36"/><text x="98.9731%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (35 samples, 0.03%)</title><rect x="98.7240%" y="677" width="0.0302%" height="15" fill="rgb(210,206,50)" fg:x="114273" fg:w="35"/><text x="98.9740%" y="687.50"></text></g><g><title>___pthread_mutex_lock (35 samples, 0.03%)</title><rect x="98.7240%" y="661" width="0.0302%" height="15" fill="rgb(251,114,31)" fg:x="114273" fg:w="35"/><text x="98.9740%" y="671.50"></text></g><g><title>parking::Parker::park_timeout (157 samples, 0.14%)</title><rect x="98.7542%" y="741" width="0.1356%" height="15" fill="rgb(215,225,28)" fg:x="114308" fg:w="157"/><text x="99.0042%" y="751.50"></text></g><g><title>parking::Inner::park (146 samples, 0.13%)</title><rect x="98.7637%" y="725" width="0.1261%" height="15" fill="rgb(237,109,14)" fg:x="114319" fg:w="146"/><text x="99.0137%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (138 samples, 0.12%)</title><rect x="98.7706%" y="709" width="0.1192%" height="15" fill="rgb(230,13,37)" fg:x="114327" fg:w="138"/><text x="99.0206%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (138 samples, 0.12%)</title><rect x="98.7706%" y="693" width="0.1192%" height="15" fill="rgb(231,40,28)" fg:x="114327" fg:w="138"/><text x="99.0206%" y="703.50"></text></g><g><title>std::panic::catch_unwind (24,257 samples, 20.96%)</title><rect x="77.9620%" y="1029" width="20.9564%" height="15" fill="rgb(231,202,18)" fg:x="90241" fg:w="24257"/><text x="78.2120%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24,257 samples, 20.96%)</title><rect x="77.9620%" y="1013" width="20.9564%" height="15" fill="rgb(225,33,18)" fg:x="90241" fg:w="24257"/><text x="78.2120%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24,257 samples, 20.96%)</title><rect x="77.9620%" y="997" width="20.9564%" height="15" fill="rgb(223,64,47)" fg:x="90241" fg:w="24257"/><text x="78.2120%" y="1007.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24,257 samples, 20.96%)</title><rect x="77.9620%" y="981" width="20.9564%" height="15" fill="rgb(234,114,13)" fg:x="90241" fg:w="24257"/><text x="78.2120%" y="991.50">&lt;core::panic::unwind_safe::Assert..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (24,257 samples, 20.96%)</title><rect x="77.9620%" y="965" width="20.9564%" height="15" fill="rgb(248,56,40)" fg:x="90241" fg:w="24257"/><text x="78.2120%" y="975.50">std::thread::Builder::spawn_unche..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24,257 samples, 20.96%)</title><rect x="77.9620%" y="949" width="20.9564%" height="15" fill="rgb(221,194,21)" fg:x="90241" fg:w="24257"/><text x="78.2120%" y="959.50">std::sys_common::backtrace::__rus..</text></g><g><title>core::ops::function::FnOnce::call_once (24,257 samples, 20.96%)</title><rect x="77.9620%" y="933" width="20.9564%" height="15" fill="rgb(242,108,46)" fg:x="90241" fg:w="24257"/><text x="78.2120%" y="943.50">core::ops::function::FnOnce::call..</text></g><g><title>async_global_executor::threading::thread_main_loop (24,257 samples, 20.96%)</title><rect x="77.9620%" y="917" width="20.9564%" height="15" fill="rgb(220,106,10)" fg:x="90241" fg:w="24257"/><text x="78.2120%" y="927.50">async_global_executor::threading:..</text></g><g><title>std::panic::catch_unwind (24,250 samples, 20.95%)</title><rect x="77.9680%" y="901" width="20.9503%" height="15" fill="rgb(211,88,4)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24,250 samples, 20.95%)</title><rect x="77.9680%" y="885" width="20.9503%" height="15" fill="rgb(214,95,34)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24,250 samples, 20.95%)</title><rect x="77.9680%" y="869" width="20.9503%" height="15" fill="rgb(250,160,33)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="879.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (24,250 samples, 20.95%)</title><rect x="77.9680%" y="853" width="20.9503%" height="15" fill="rgb(225,29,10)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="863.50">async_global_executor::threading:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24,250 samples, 20.95%)</title><rect x="77.9680%" y="837" width="20.9503%" height="15" fill="rgb(224,28,30)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="847.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,250 samples, 20.95%)</title><rect x="77.9680%" y="821" width="20.9503%" height="15" fill="rgb(231,77,4)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="831.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (24,250 samples, 20.95%)</title><rect x="77.9680%" y="805" width="20.9503%" height="15" fill="rgb(209,63,21)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="815.50">async_global_executor::threading:..</text></g><g><title>async_global_executor::reactor::block_on (24,250 samples, 20.95%)</title><rect x="77.9680%" y="789" width="20.9503%" height="15" fill="rgb(226,22,11)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="799.50">async_global_executor::reactor::b..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (24,250 samples, 20.95%)</title><rect x="77.9680%" y="773" width="20.9503%" height="15" fill="rgb(216,82,30)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="783.50">async_global_executor::reactor::b..</text></g><g><title>async_io::driver::block_on (24,250 samples, 20.95%)</title><rect x="77.9680%" y="757" width="20.9503%" height="15" fill="rgb(246,227,38)" fg:x="90248" fg:w="24250"/><text x="78.2180%" y="767.50">async_io::driver::block_on</text></g><g><title>std::time::Instant::now (26 samples, 0.02%)</title><rect x="98.8959%" y="741" width="0.0225%" height="15" fill="rgb(251,203,53)" fg:x="114472" fg:w="26"/><text x="99.1459%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (26 samples, 0.02%)</title><rect x="98.8959%" y="725" width="0.0225%" height="15" fill="rgb(254,101,1)" fg:x="114472" fg:w="26"/><text x="99.1459%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (26 samples, 0.02%)</title><rect x="98.8959%" y="709" width="0.0225%" height="15" fill="rgb(241,180,5)" fg:x="114472" fg:w="26"/><text x="99.1459%" y="719.50"></text></g><g><title>__clock_gettime_2 (22 samples, 0.02%)</title><rect x="98.8994%" y="693" width="0.0190%" height="15" fill="rgb(218,168,4)" fg:x="114476" fg:w="22"/><text x="99.1494%" y="703.50"></text></g><g><title>__vdso_clock_gettime (21 samples, 0.02%)</title><rect x="98.9002%" y="677" width="0.0181%" height="15" fill="rgb(224,223,32)" fg:x="114477" fg:w="21"/><text x="99.1502%" y="687.50"></text></g><g><title>[[vdso]] (12 samples, 0.01%)</title><rect x="98.9080%" y="661" width="0.0104%" height="15" fill="rgb(236,106,22)" fg:x="114486" fg:w="12"/><text x="99.1580%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,258 samples, 20.96%)</title><rect x="77.9620%" y="1093" width="20.9572%" height="15" fill="rgb(206,121,5)" fg:x="90241" fg:w="24258"/><text x="78.2120%" y="1103.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,258 samples, 20.96%)</title><rect x="77.9620%" y="1077" width="20.9572%" height="15" fill="rgb(233,87,28)" fg:x="90241" fg:w="24258"/><text x="78.2120%" y="1087.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24,258 samples, 20.96%)</title><rect x="77.9620%" y="1061" width="20.9572%" height="15" fill="rgb(236,137,17)" fg:x="90241" fg:w="24258"/><text x="78.2120%" y="1071.50">core::ops::function::FnOnce::call..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (24,258 samples, 20.96%)</title><rect x="77.9620%" y="1045" width="20.9572%" height="15" fill="rgb(209,183,38)" fg:x="90241" fg:w="24258"/><text x="78.2120%" y="1055.50">std::thread::Builder::spawn_unche..</text></g><g><title>__GI___clone (24,271 samples, 20.97%)</title><rect x="77.9525%" y="1141" width="20.9685%" height="15" fill="rgb(206,162,44)" fg:x="90230" fg:w="24271"/><text x="78.2025%" y="1151.50">__GI___clone</text></g><g><title>start_thread (24,261 samples, 20.96%)</title><rect x="77.9611%" y="1125" width="20.9598%" height="15" fill="rgb(237,70,39)" fg:x="90240" fg:w="24261"/><text x="78.2111%" y="1135.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24,260 samples, 20.96%)</title><rect x="77.9620%" y="1109" width="20.9590%" height="15" fill="rgb(212,176,5)" fg:x="90241" fg:w="24260"/><text x="78.2120%" y="1119.50">std::sys::unix::thread::Thread::n..</text></g><g><title>___pthread_rwlock_rdlock (13 samples, 0.01%)</title><rect x="98.9305%" y="1141" width="0.0112%" height="15" fill="rgb(232,95,16)" fg:x="114512" fg:w="13"/><text x="99.1805%" y="1151.50"></text></g><g><title>anon.704b378fac5dc6238355d8a8086309c7.10.llvm.11899312567597393491 (25 samples, 0.02%)</title><rect x="98.9806%" y="1141" width="0.0216%" height="15" fill="rgb(219,115,35)" fg:x="114570" fg:w="25"/><text x="99.2306%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="98.9806%" y="1125" width="0.0216%" height="15" fill="rgb(251,67,27)" fg:x="114570" fg:w="25"/><text x="99.2306%" y="1135.50"></text></g><g><title>anon.71e5b5c751f2f55dad6b0b336b32f453.18.llvm.8327217511132763441 (16 samples, 0.01%)</title><rect x="99.0022%" y="1141" width="0.0138%" height="15" fill="rgb(222,95,40)" fg:x="114595" fg:w="16"/><text x="99.2522%" y="1151.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (12 samples, 0.01%)</title><rect x="99.0160%" y="1125" width="0.0104%" height="15" fill="rgb(250,35,16)" fg:x="114611" fg:w="12"/><text x="99.2660%" y="1135.50"></text></g><g><title>anon.85f7c209b708c8dfe64168938a9edec2.15.llvm.4679518330183379261 (13 samples, 0.01%)</title><rect x="99.0160%" y="1141" width="0.0112%" height="15" fill="rgb(224,86,44)" fg:x="114611" fg:w="13"/><text x="99.2660%" y="1151.50"></text></g><g><title>anon.abc78cc5583050b6b67ff97e820827fc.14.llvm.14730796635267274446 (26 samples, 0.02%)</title><rect x="99.0272%" y="1141" width="0.0225%" height="15" fill="rgb(237,53,53)" fg:x="114624" fg:w="26"/><text x="99.2772%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="99.0350%" y="1125" width="0.0147%" height="15" fill="rgb(208,171,33)" fg:x="114633" fg:w="17"/><text x="99.2850%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl (36 samples, 0.03%)</title><rect x="99.0497%" y="1125" width="0.0311%" height="15" fill="rgb(222,64,27)" fg:x="114650" fg:w="36"/><text x="99.2997%" y="1135.50"></text></g><g><title>abi_stable::erased_types::c_functions::drop_pointer_impl::{{closure}} (36 samples, 0.03%)</title><rect x="99.0497%" y="1109" width="0.0311%" height="15" fill="rgb(221,121,35)" fg:x="114650" fg:w="36"/><text x="99.2997%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;abi_stable::std_types::boxed::private::RBox&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Drain&lt;abi_stable::std_types::map::map_key::MapKey&lt;abi_stable::std_types::cow::RCow&lt;str&gt;&gt;,tremor_value::pdk::PdkValue&gt;,abi_stable::std_types::map::extern_fns::map_iter_val&lt;abi_stable::std_types::cow::RCow&lt;str&gt;,tremor_value::pdk::PdkValue&gt;&gt;&gt;&gt; (36 samples, 0.03%)</title><rect x="99.0497%" y="1093" width="0.0311%" height="15" fill="rgb(228,137,42)" fg:x="114650" fg:w="36"/><text x="99.2997%" y="1103.50"></text></g><g><title>abi_stable::std_types::boxed::&lt;impl core::ops::drop::Drop for abi_stable::std_types::boxed::private::RBox&lt;T&gt;&gt;::drop (36 samples, 0.03%)</title><rect x="99.0497%" y="1077" width="0.0311%" height="15" fill="rgb(227,54,21)" fg:x="114650" fg:w="36"/><text x="99.2997%" y="1087.50"></text></g><g><title>anon.cf5b369754f469a95f7b3df78c6a1de7.35.llvm.13184787943170355473 (46 samples, 0.04%)</title><rect x="99.0497%" y="1141" width="0.0397%" height="15" fill="rgb(240,168,33)" fg:x="114650" fg:w="46"/><text x="99.2997%" y="1151.50"></text></g><g><title>anon.f94f00739c38b729b2c566a3d23fbe0c.4.llvm.16013060974345293444 (13 samples, 0.01%)</title><rect x="99.0894%" y="1141" width="0.0112%" height="15" fill="rgb(243,159,6)" fg:x="114696" fg:w="13"/><text x="99.3394%" y="1151.50"></text></g><g><title>async_executor::Ticker::sleep (14 samples, 0.01%)</title><rect x="99.1110%" y="1141" width="0.0121%" height="15" fill="rgb(205,211,41)" fg:x="114721" fg:w="14"/><text x="99.3610%" y="1151.50"></text></g><g><title>async_executor::steal (76 samples, 0.07%)</title><rect x="99.1240%" y="1141" width="0.0657%" height="15" fill="rgb(253,30,1)" fg:x="114736" fg:w="76"/><text x="99.3740%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (33 samples, 0.03%)</title><rect x="99.1965%" y="1141" width="0.0285%" height="15" fill="rgb(226,80,18)" fg:x="114820" fg:w="33"/><text x="99.4465%" y="1151.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (35 samples, 0.03%)</title><rect x="99.2311%" y="1141" width="0.0302%" height="15" fill="rgb(253,156,46)" fg:x="114860" fg:w="35"/><text x="99.4811%" y="1151.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="99.2613%" y="1141" width="0.0121%" height="15" fill="rgb(248,87,27)" fg:x="114895" fg:w="14"/><text x="99.5113%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="99.2821%" y="1141" width="0.0190%" height="15" fill="rgb(227,122,2)" fg:x="114919" fg:w="22"/><text x="99.5321%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (22 samples, 0.02%)</title><rect x="99.2821%" y="1125" width="0.0190%" height="15" fill="rgb(229,94,39)" fg:x="114919" fg:w="22"/><text x="99.5321%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (71 samples, 0.06%)</title><rect x="99.3011%" y="1141" width="0.0613%" height="15" fill="rgb(225,173,31)" fg:x="114941" fg:w="71"/><text x="99.5511%" y="1151.50"></text></g><g><title>futex_wait (12 samples, 0.01%)</title><rect x="99.4255%" y="1077" width="0.0104%" height="15" fill="rgb(239,176,30)" fg:x="115085" fg:w="12"/><text x="99.6755%" y="1087.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.02%)</title><rect x="99.4255%" y="1109" width="0.0225%" height="15" fill="rgb(212,104,21)" fg:x="115085" fg:w="26"/><text x="99.6755%" y="1119.50"></text></g><g><title>do_futex (26 samples, 0.02%)</title><rect x="99.4255%" y="1093" width="0.0225%" height="15" fill="rgb(240,209,40)" fg:x="115085" fg:w="26"/><text x="99.6755%" y="1103.50"></text></g><g><title>futex_wake (14 samples, 0.01%)</title><rect x="99.4359%" y="1077" width="0.0121%" height="15" fill="rgb(234,195,5)" fg:x="115097" fg:w="14"/><text x="99.6859%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (121 samples, 0.10%)</title><rect x="99.3624%" y="1141" width="0.1045%" height="15" fill="rgb(238,213,1)" fg:x="115012" fg:w="121"/><text x="99.6124%" y="1151.50"></text></g><g><title>do_syscall_64 (53 samples, 0.05%)</title><rect x="99.4212%" y="1125" width="0.0458%" height="15" fill="rgb(235,182,54)" fg:x="115080" fg:w="53"/><text x="99.6712%" y="1135.50"></text></g><g><title>syscall_exit_to_user_mode (12 samples, 0.01%)</title><rect x="99.4566%" y="1109" width="0.0104%" height="15" fill="rgb(229,50,46)" fg:x="115121" fg:w="12"/><text x="99.7066%" y="1119.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (117 samples, 0.10%)</title><rect x="99.4670%" y="1141" width="0.1011%" height="15" fill="rgb(219,145,13)" fg:x="115133" fg:w="117"/><text x="99.7170%" y="1151.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (14 samples, 0.01%)</title><rect x="99.5724%" y="1141" width="0.0121%" height="15" fill="rgb(220,226,10)" fg:x="115255" fg:w="14"/><text x="99.8224%" y="1151.50"></text></g><g><title>syscall_return_via_sysret (28 samples, 0.02%)</title><rect x="99.5862%" y="1141" width="0.0242%" height="15" fill="rgb(248,47,30)" fg:x="115271" fg:w="28"/><text x="99.8362%" y="1151.50"></text></g><g><title>async-std/runti (115,234 samples, 99.55%)</title><rect x="0.0691%" y="1157" width="99.5542%" height="15" fill="rgb(231,209,44)" fg:x="80" fg:w="115234"/><text x="0.3191%" y="1167.50">async-std/runti</text></g><g><title>tremor_runtime::connectors::source::SourceManager::run::{{closure}} (13 samples, 0.01%)</title><rect x="99.6121%" y="1141" width="0.0112%" height="15" fill="rgb(209,80,30)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="99.6121%" y="1125" width="0.0112%" height="15" fill="rgb(232,9,14)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Source::pull_data::{{closure}} (13 samples, 0.01%)</title><rect x="99.6121%" y="1109" width="0.0112%" height="15" fill="rgb(243,91,43)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1119.50"></text></g><g><title>&lt;async_ffi::BorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="99.6121%" y="1093" width="0.0112%" height="15" fill="rgb(231,90,52)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1103.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="99.6121%" y="1077" width="0.0112%" height="15" fill="rgb(253,192,44)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1087.50"></text></g><g><title>&lt;core::task::wake::Context as async_ffi::ContextExt&gt;::with_ffi_context (13 samples, 0.01%)</title><rect x="99.6121%" y="1061" width="0.0112%" height="15" fill="rgb(241,66,31)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1071.50"></text></g><g><title>&lt;async_ffi::LocalBorrowingFfiFuture&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (13 samples, 0.01%)</title><rect x="99.6121%" y="1045" width="0.0112%" height="15" fill="rgb(235,81,37)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1055.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn (13 samples, 0.01%)</title><rect x="99.6121%" y="1029" width="0.0112%" height="15" fill="rgb(223,221,9)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="99.6121%" y="1013" width="0.0112%" height="15" fill="rgb(242,180,7)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1023.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="99.6121%" y="997" width="0.0112%" height="15" fill="rgb(243,78,19)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="99.6121%" y="981" width="0.0112%" height="15" fill="rgb(233,23,17)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.6121%" y="965" width="0.0112%" height="15" fill="rgb(252,122,45)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="99.6121%" y="949" width="0.0112%" height="15" fill="rgb(247,108,20)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="959.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}} (13 samples, 0.01%)</title><rect x="99.6121%" y="933" width="0.0112%" height="15" fill="rgb(235,84,21)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="943.50"></text></g><g><title>async_ffi::FfiContext::with_context (13 samples, 0.01%)</title><rect x="99.6121%" y="917" width="0.0112%" height="15" fill="rgb(247,129,10)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="927.50"></text></g><g><title>async_ffi::LocalBorrowingFfiFuture&lt;T&gt;::new::poll_fn::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="99.6121%" y="901" width="0.0112%" height="15" fill="rgb(208,173,14)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="99.6121%" y="885" width="0.0112%" height="15" fill="rgb(236,31,38)" fg:x="115301" fg:w="13"/><text x="99.8621%" y="895.50"></text></g><g><title>blocking-1 (13 samples, 0.01%)</title><rect x="99.6233%" y="1157" width="0.0112%" height="15" fill="rgb(232,65,17)" fg:x="115314" fg:w="13"/><text x="99.8733%" y="1167.50"></text></g><g><title>__GI___clone (13 samples, 0.01%)</title><rect x="99.6233%" y="1141" width="0.0112%" height="15" fill="rgb(224,45,49)" fg:x="115314" fg:w="13"/><text x="99.8733%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="99.6346%" y="1029" width="0.0112%" height="15" fill="rgb(225,2,53)" fg:x="115327" fg:w="13"/><text x="99.8846%" y="1039.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="99.6346%" y="1013" width="0.0112%" height="15" fill="rgb(248,210,53)" fg:x="115327" fg:w="13"/><text x="99.8846%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="99.6346%" y="997" width="0.0112%" height="15" fill="rgb(211,1,30)" fg:x="115327" fg:w="13"/><text x="99.8846%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.6346%" y="981" width="0.0112%" height="15" fill="rgb(224,96,15)" fg:x="115327" fg:w="13"/><text x="99.8846%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="99.6346%" y="965" width="0.0112%" height="15" fill="rgb(252,45,11)" fg:x="115327" fg:w="13"/><text x="99.8846%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.01%)</title><rect x="99.6346%" y="949" width="0.0112%" height="15" fill="rgb(220,125,38)" fg:x="115327" fg:w="13"/><text x="99.8846%" y="959.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (13 samples, 0.01%)</title><rect x="99.6346%" y="933" width="0.0112%" height="15" fill="rgb(243,161,33)" fg:x="115327" fg:w="13"/><text x="99.8846%" y="943.50"></text></g><g><title>blocking::Executor::main_loop (13 samples, 0.01%)</title><rect x="99.6346%" y="917" width="0.0112%" height="15" fill="rgb(248,197,34)" fg:x="115327" fg:w="13"/><text x="99.8846%" y="927.50"></text></g><g><title>blocking-2 (14 samples, 0.01%)</title><rect x="99.6346%" y="1157" width="0.0121%" height="15" fill="rgb(228,165,23)" fg:x="115327" fg:w="14"/><text x="99.8846%" y="1167.50"></text></g><g><title>__GI___clone (14 samples, 0.01%)</title><rect x="99.6346%" y="1141" width="0.0121%" height="15" fill="rgb(236,94,38)" fg:x="115327" fg:w="14"/><text x="99.8846%" y="1151.50"></text></g><g><title>start_thread (14 samples, 0.01%)</title><rect x="99.6346%" y="1125" width="0.0121%" height="15" fill="rgb(220,13,23)" fg:x="115327" fg:w="14"/><text x="99.8846%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14 samples, 0.01%)</title><rect x="99.6346%" y="1109" width="0.0121%" height="15" fill="rgb(234,26,39)" fg:x="115327" fg:w="14"/><text x="99.8846%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="99.6346%" y="1093" width="0.0121%" height="15" fill="rgb(205,117,44)" fg:x="115327" fg:w="14"/><text x="99.8846%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="99.6346%" y="1077" width="0.0121%" height="15" fill="rgb(250,42,2)" fg:x="115327" fg:w="14"/><text x="99.8846%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14 samples, 0.01%)</title><rect x="99.6346%" y="1061" width="0.0121%" height="15" fill="rgb(223,83,14)" fg:x="115327" fg:w="14"/><text x="99.8846%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (14 samples, 0.01%)</title><rect x="99.6346%" y="1045" width="0.0121%" height="15" fill="rgb(241,147,50)" fg:x="115327" fg:w="14"/><text x="99.8846%" y="1055.50"></text></g><g><title>finish_task_switch.isra.0 (60 samples, 0.05%)</title><rect x="99.6579%" y="677" width="0.0518%" height="15" fill="rgb(218,90,6)" fg:x="115354" fg:w="60"/><text x="99.9079%" y="687.50"></text></g><g><title>__perf_event_task_sched_in (60 samples, 0.05%)</title><rect x="99.6579%" y="661" width="0.0518%" height="15" fill="rgb(210,191,5)" fg:x="115354" fg:w="60"/><text x="99.9079%" y="671.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (60 samples, 0.05%)</title><rect x="99.6579%" y="645" width="0.0518%" height="15" fill="rgb(225,139,19)" fg:x="115354" fg:w="60"/><text x="99.9079%" y="655.50"></text></g><g><title>native_write_msr (60 samples, 0.05%)</title><rect x="99.6579%" y="629" width="0.0518%" height="15" fill="rgb(210,1,33)" fg:x="115354" fg:w="60"/><text x="99.9079%" y="639.50"></text></g><g><title>__x64_sys_futex (62 samples, 0.05%)</title><rect x="99.6579%" y="773" width="0.0536%" height="15" fill="rgb(213,50,3)" fg:x="115354" fg:w="62"/><text x="99.9079%" y="783.50"></text></g><g><title>do_futex (62 samples, 0.05%)</title><rect x="99.6579%" y="757" width="0.0536%" height="15" fill="rgb(234,227,4)" fg:x="115354" fg:w="62"/><text x="99.9079%" y="767.50"></text></g><g><title>futex_wait (62 samples, 0.05%)</title><rect x="99.6579%" y="741" width="0.0536%" height="15" fill="rgb(246,63,5)" fg:x="115354" fg:w="62"/><text x="99.9079%" y="751.50"></text></g><g><title>futex_wait_queue (62 samples, 0.05%)</title><rect x="99.6579%" y="725" width="0.0536%" height="15" fill="rgb(245,136,27)" fg:x="115354" fg:w="62"/><text x="99.9079%" y="735.50"></text></g><g><title>schedule (62 samples, 0.05%)</title><rect x="99.6579%" y="709" width="0.0536%" height="15" fill="rgb(247,199,27)" fg:x="115354" fg:w="62"/><text x="99.9079%" y="719.50"></text></g><g><title>__schedule (62 samples, 0.05%)</title><rect x="99.6579%" y="693" width="0.0536%" height="15" fill="rgb(252,158,49)" fg:x="115354" fg:w="62"/><text x="99.9079%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (63 samples, 0.05%)</title><rect x="99.6579%" y="805" width="0.0544%" height="15" fill="rgb(254,73,1)" fg:x="115354" fg:w="63"/><text x="99.9079%" y="815.50"></text></g><g><title>do_syscall_64 (63 samples, 0.05%)</title><rect x="99.6579%" y="789" width="0.0544%" height="15" fill="rgb(248,93,19)" fg:x="115354" fg:w="63"/><text x="99.9079%" y="799.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="99.6579%" y="901" width="0.0553%" height="15" fill="rgb(206,67,5)" fg:x="115354" fg:w="64"/><text x="99.9079%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="99.6579%" y="885" width="0.0553%" height="15" fill="rgb(209,210,4)" fg:x="115354" fg:w="64"/><text x="99.9079%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (64 samples, 0.06%)</title><rect x="99.6579%" y="869" width="0.0553%" height="15" fill="rgb(214,185,36)" fg:x="115354" fg:w="64"/><text x="99.9079%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (64 samples, 0.06%)</title><rect x="99.6579%" y="853" width="0.0553%" height="15" fill="rgb(233,191,26)" fg:x="115354" fg:w="64"/><text x="99.9079%" y="863.50"></text></g><g><title>___pthread_mutex_lock (64 samples, 0.06%)</title><rect x="99.6579%" y="837" width="0.0553%" height="15" fill="rgb(248,94,17)" fg:x="115354" fg:w="64"/><text x="99.9079%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (64 samples, 0.06%)</title><rect x="99.6579%" y="821" width="0.0553%" height="15" fill="rgb(250,64,4)" fg:x="115354" fg:w="64"/><text x="99.9079%" y="831.50"></text></g><g><title>__x64_sys_futex (20 samples, 0.02%)</title><rect x="99.7140%" y="421" width="0.0173%" height="15" fill="rgb(218,41,53)" fg:x="115419" fg:w="20"/><text x="99.9640%" y="431.50"></text></g><g><title>do_futex (20 samples, 0.02%)</title><rect x="99.7140%" y="405" width="0.0173%" height="15" fill="rgb(251,176,28)" fg:x="115419" fg:w="20"/><text x="99.9640%" y="415.50"></text></g><g><title>futex_wait (20 samples, 0.02%)</title><rect x="99.7140%" y="389" width="0.0173%" height="15" fill="rgb(247,22,9)" fg:x="115419" fg:w="20"/><text x="99.9640%" y="399.50"></text></g><g><title>futex_wait_queue (19 samples, 0.02%)</title><rect x="99.7149%" y="373" width="0.0164%" height="15" fill="rgb(218,201,14)" fg:x="115420" fg:w="19"/><text x="99.9649%" y="383.50"></text></g><g><title>schedule (19 samples, 0.02%)</title><rect x="99.7149%" y="357" width="0.0164%" height="15" fill="rgb(218,94,10)" fg:x="115420" fg:w="19"/><text x="99.9649%" y="367.50"></text></g><g><title>__schedule (19 samples, 0.02%)</title><rect x="99.7149%" y="341" width="0.0164%" height="15" fill="rgb(222,183,52)" fg:x="115420" fg:w="19"/><text x="99.9649%" y="351.50"></text></g><g><title>finish_task_switch.isra.0 (19 samples, 0.02%)</title><rect x="99.7149%" y="325" width="0.0164%" height="15" fill="rgb(242,140,25)" fg:x="115420" fg:w="19"/><text x="99.9649%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (18 samples, 0.02%)</title><rect x="99.7158%" y="309" width="0.0156%" height="15" fill="rgb(235,197,38)" fg:x="115421" fg:w="18"/><text x="99.9658%" y="319.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (18 samples, 0.02%)</title><rect x="99.7158%" y="293" width="0.0156%" height="15" fill="rgb(237,136,15)" fg:x="115421" fg:w="18"/><text x="99.9658%" y="303.50"></text></g><g><title>native_write_msr (18 samples, 0.02%)</title><rect x="99.7158%" y="277" width="0.0156%" height="15" fill="rgb(223,44,49)" fg:x="115421" fg:w="18"/><text x="99.9658%" y="287.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (21 samples, 0.02%)</title><rect x="99.7140%" y="549" width="0.0181%" height="15" fill="rgb(227,71,15)" fg:x="115419" fg:w="21"/><text x="99.9640%" y="559.50"></text></g><g><title>std::sync::condvar::Condvar::wait (21 samples, 0.02%)</title><rect x="99.7140%" y="533" width="0.0181%" height="15" fill="rgb(225,153,20)" fg:x="115419" fg:w="21"/><text x="99.9640%" y="543.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (21 samples, 0.02%)</title><rect x="99.7140%" y="517" width="0.0181%" height="15" fill="rgb(210,190,26)" fg:x="115419" fg:w="21"/><text x="99.9640%" y="527.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (21 samples, 0.02%)</title><rect x="99.7140%" y="501" width="0.0181%" height="15" fill="rgb(223,147,5)" fg:x="115419" fg:w="21"/><text x="99.9640%" y="511.50"></text></g><g><title>__GI___pthread_cond_wait (21 samples, 0.02%)</title><rect x="99.7140%" y="485" width="0.0181%" height="15" fill="rgb(207,14,23)" fg:x="115419" fg:w="21"/><text x="99.9640%" y="495.50"></text></g><g><title>__futex_abstimed_wait_common (21 samples, 0.02%)</title><rect x="99.7140%" y="469" width="0.0181%" height="15" fill="rgb(211,195,53)" fg:x="115419" fg:w="21"/><text x="99.9640%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.02%)</title><rect x="99.7140%" y="453" width="0.0181%" height="15" fill="rgb(237,75,46)" fg:x="115419" fg:w="21"/><text x="99.9640%" y="463.50"></text></g><g><title>do_syscall_64 (21 samples, 0.02%)</title><rect x="99.7140%" y="437" width="0.0181%" height="15" fill="rgb(254,55,14)" fg:x="115419" fg:w="21"/><text x="99.9640%" y="447.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.03%)</title><rect x="99.7132%" y="853" width="0.0259%" height="15" fill="rgb(230,185,30)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="863.50"></text></g><g><title>std::panicking::try (30 samples, 0.03%)</title><rect x="99.7132%" y="837" width="0.0259%" height="15" fill="rgb(220,14,11)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="847.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.03%)</title><rect x="99.7132%" y="821" width="0.0259%" height="15" fill="rgb(215,169,44)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="831.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 0.03%)</title><rect x="99.7132%" y="805" width="0.0259%" height="15" fill="rgb(253,203,20)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (30 samples, 0.03%)</title><rect x="99.7132%" y="789" width="0.0259%" height="15" fill="rgb(229,225,17)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll::{{closure}} (30 samples, 0.03%)</title><rect x="99.7132%" y="773" width="0.0259%" height="15" fill="rgb(236,76,26)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="783.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (30 samples, 0.03%)</title><rect x="99.7132%" y="757" width="0.0259%" height="15" fill="rgb(234,15,30)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="767.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30 samples, 0.03%)</title><rect x="99.7132%" y="741" width="0.0259%" height="15" fill="rgb(211,113,48)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="751.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (30 samples, 0.03%)</title><rect x="99.7132%" y="725" width="0.0259%" height="15" fill="rgb(221,31,36)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="735.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="99.7132%" y="709" width="0.0259%" height="15" fill="rgb(215,118,52)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (30 samples, 0.03%)</title><rect x="99.7132%" y="693" width="0.0259%" height="15" fill="rgb(241,151,27)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (30 samples, 0.03%)</title><rect x="99.7132%" y="677" width="0.0259%" height="15" fill="rgb(253,51,3)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="687.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (30 samples, 0.03%)</title><rect x="99.7132%" y="661" width="0.0259%" height="15" fill="rgb(216,201,24)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (30 samples, 0.03%)</title><rect x="99.7132%" y="645" width="0.0259%" height="15" fill="rgb(231,107,4)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (30 samples, 0.03%)</title><rect x="99.7132%" y="629" width="0.0259%" height="15" fill="rgb(243,97,54)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (30 samples, 0.03%)</title><rect x="99.7132%" y="613" width="0.0259%" height="15" fill="rgb(221,32,51)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (30 samples, 0.03%)</title><rect x="99.7132%" y="597" width="0.0259%" height="15" fill="rgb(218,171,35)" fg:x="115418" fg:w="30"/><text x="99.9632%" y="607.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (29 samples, 0.03%)</title><rect x="99.7140%" y="581" width="0.0251%" height="15" fill="rgb(214,20,53)" fg:x="115419" fg:w="29"/><text x="99.9640%" y="591.50"></text></g><g><title>tokio::runtime::park::Inner::park (29 samples, 0.03%)</title><rect x="99.7140%" y="565" width="0.0251%" height="15" fill="rgb(239,9,52)" fg:x="115419" fg:w="29"/><text x="99.9640%" y="575.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (31 samples, 0.03%)</title><rect x="99.7132%" y="901" width="0.0268%" height="15" fill="rgb(215,114,45)" fg:x="115418" fg:w="31"/><text x="99.9632%" y="911.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (31 samples, 0.03%)</title><rect x="99.7132%" y="885" width="0.0268%" height="15" fill="rgb(208,118,9)" fg:x="115418" fg:w="31"/><text x="99.9632%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (31 samples, 0.03%)</title><rect x="99.7132%" y="869" width="0.0268%" height="15" fill="rgb(235,7,39)" fg:x="115418" fg:w="31"/><text x="99.9632%" y="879.50"></text></g><g><title>__x64_sys_futex (12 samples, 0.01%)</title><rect x="99.7400%" y="405" width="0.0104%" height="15" fill="rgb(243,225,15)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="415.50"></text></g><g><title>do_futex (12 samples, 0.01%)</title><rect x="99.7400%" y="389" width="0.0104%" height="15" fill="rgb(225,216,18)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="399.50"></text></g><g><title>futex_wait (12 samples, 0.01%)</title><rect x="99.7400%" y="373" width="0.0104%" height="15" fill="rgb(233,36,38)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="383.50"></text></g><g><title>futex_wait_queue (12 samples, 0.01%)</title><rect x="99.7400%" y="357" width="0.0104%" height="15" fill="rgb(239,88,23)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="367.50"></text></g><g><title>schedule (12 samples, 0.01%)</title><rect x="99.7400%" y="341" width="0.0104%" height="15" fill="rgb(219,181,35)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="351.50"></text></g><g><title>__schedule (12 samples, 0.01%)</title><rect x="99.7400%" y="325" width="0.0104%" height="15" fill="rgb(215,18,46)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="335.50"></text></g><g><title>finish_task_switch.isra.0 (12 samples, 0.01%)</title><rect x="99.7400%" y="309" width="0.0104%" height="15" fill="rgb(241,38,11)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="319.50"></text></g><g><title>__perf_event_task_sched_in (12 samples, 0.01%)</title><rect x="99.7400%" y="293" width="0.0104%" height="15" fill="rgb(248,169,45)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="303.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (12 samples, 0.01%)</title><rect x="99.7400%" y="277" width="0.0104%" height="15" fill="rgb(239,50,49)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="287.50"></text></g><g><title>native_write_msr (12 samples, 0.01%)</title><rect x="99.7400%" y="261" width="0.0104%" height="15" fill="rgb(231,96,31)" fg:x="115449" fg:w="12"/><text x="99.9900%" y="271.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (13 samples, 0.01%)</title><rect x="99.7400%" y="597" width="0.0112%" height="15" fill="rgb(224,193,37)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (13 samples, 0.01%)</title><rect x="99.7400%" y="581" width="0.0112%" height="15" fill="rgb(227,153,50)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="591.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (13 samples, 0.01%)</title><rect x="99.7400%" y="565" width="0.0112%" height="15" fill="rgb(249,228,3)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="575.50"></text></g><g><title>tokio::runtime::park::Inner::park (13 samples, 0.01%)</title><rect x="99.7400%" y="549" width="0.0112%" height="15" fill="rgb(219,164,43)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="559.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (13 samples, 0.01%)</title><rect x="99.7400%" y="533" width="0.0112%" height="15" fill="rgb(216,45,41)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="543.50"></text></g><g><title>std::sync::condvar::Condvar::wait (13 samples, 0.01%)</title><rect x="99.7400%" y="517" width="0.0112%" height="15" fill="rgb(210,226,51)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (13 samples, 0.01%)</title><rect x="99.7400%" y="501" width="0.0112%" height="15" fill="rgb(209,117,49)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (13 samples, 0.01%)</title><rect x="99.7400%" y="485" width="0.0112%" height="15" fill="rgb(206,196,24)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="495.50"></text></g><g><title>__GI___pthread_cond_wait (13 samples, 0.01%)</title><rect x="99.7400%" y="469" width="0.0112%" height="15" fill="rgb(253,218,3)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="479.50"></text></g><g><title>__futex_abstimed_wait_common (13 samples, 0.01%)</title><rect x="99.7400%" y="453" width="0.0112%" height="15" fill="rgb(252,166,2)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.01%)</title><rect x="99.7400%" y="437" width="0.0112%" height="15" fill="rgb(236,218,26)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="447.50"></text></g><g><title>do_syscall_64 (13 samples, 0.01%)</title><rect x="99.7400%" y="421" width="0.0112%" height="15" fill="rgb(254,84,19)" fg:x="115449" fg:w="13"/><text x="99.9900%" y="431.50"></text></g><g><title>std::panic::catch_unwind (114 samples, 0.10%)</title><rect x="99.6536%" y="1029" width="0.0985%" height="15" fill="rgb(219,137,29)" fg:x="115349" fg:w="114"/><text x="99.9036%" y="1039.50"></text></g><g><title>std::panicking::try (114 samples, 0.10%)</title><rect x="99.6536%" y="1013" width="0.0985%" height="15" fill="rgb(227,47,52)" fg:x="115349" fg:w="114"/><text x="99.9036%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (114 samples, 0.10%)</title><rect x="99.6536%" y="997" width="0.0985%" height="15" fill="rgb(229,167,24)" fg:x="115349" fg:w="114"/><text x="99.9036%" y="1007.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (114 samples, 0.10%)</title><rect x="99.6536%" y="981" width="0.0985%" height="15" fill="rgb(233,164,1)" fg:x="115349" fg:w="114"/><text x="99.9036%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (114 samples, 0.10%)</title><rect x="99.6536%" y="965" width="0.0985%" height="15" fill="rgb(218,88,48)" fg:x="115349" fg:w="114"/><text x="99.9036%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (114 samples, 0.10%)</title><rect x="99.6536%" y="949" width="0.0985%" height="15" fill="rgb(226,214,24)" fg:x="115349" fg:w="114"/><text x="99.9036%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (114 samples, 0.10%)</title><rect x="99.6536%" y="933" width="0.0985%" height="15" fill="rgb(233,29,12)" fg:x="115349" fg:w="114"/><text x="99.9036%" y="943.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (114 samples, 0.10%)</title><rect x="99.6536%" y="917" width="0.0985%" height="15" fill="rgb(219,120,34)" fg:x="115349" fg:w="114"/><text x="99.9036%" y="927.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (14 samples, 0.01%)</title><rect x="99.7400%" y="901" width="0.0121%" height="15" fill="rgb(226,78,44)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="911.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (14 samples, 0.01%)</title><rect x="99.7400%" y="885" width="0.0121%" height="15" fill="rgb(240,15,48)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (14 samples, 0.01%)</title><rect x="99.7400%" y="869" width="0.0121%" height="15" fill="rgb(253,176,7)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (14 samples, 0.01%)</title><rect x="99.7400%" y="853" width="0.0121%" height="15" fill="rgb(206,166,28)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (14 samples, 0.01%)</title><rect x="99.7400%" y="837" width="0.0121%" height="15" fill="rgb(241,53,51)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="847.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.01%)</title><rect x="99.7400%" y="821" width="0.0121%" height="15" fill="rgb(249,112,30)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="831.50"></text></g><g><title>std::panicking::try (14 samples, 0.01%)</title><rect x="99.7400%" y="805" width="0.0121%" height="15" fill="rgb(217,85,30)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="815.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.01%)</title><rect x="99.7400%" y="789" width="0.0121%" height="15" fill="rgb(233,49,7)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="99.7400%" y="773" width="0.0121%" height="15" fill="rgb(234,109,9)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (14 samples, 0.01%)</title><rect x="99.7400%" y="757" width="0.0121%" height="15" fill="rgb(253,95,22)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="767.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (14 samples, 0.01%)</title><rect x="99.7400%" y="741" width="0.0121%" height="15" fill="rgb(233,176,25)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="751.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14 samples, 0.01%)</title><rect x="99.7400%" y="725" width="0.0121%" height="15" fill="rgb(236,33,39)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="735.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (14 samples, 0.01%)</title><rect x="99.7400%" y="709" width="0.0121%" height="15" fill="rgb(223,226,42)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="719.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="99.7400%" y="693" width="0.0121%" height="15" fill="rgb(216,99,33)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (14 samples, 0.01%)</title><rect x="99.7400%" y="677" width="0.0121%" height="15" fill="rgb(235,84,23)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (14 samples, 0.01%)</title><rect x="99.7400%" y="661" width="0.0121%" height="15" fill="rgb(232,2,27)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="671.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (14 samples, 0.01%)</title><rect x="99.7400%" y="645" width="0.0121%" height="15" fill="rgb(241,23,22)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (14 samples, 0.01%)</title><rect x="99.7400%" y="629" width="0.0121%" height="15" fill="rgb(211,73,27)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (14 samples, 0.01%)</title><rect x="99.7400%" y="613" width="0.0121%" height="15" fill="rgb(235,109,49)" fg:x="115449" fg:w="14"/><text x="99.9900%" y="623.50"></text></g><g><title>__GI___clone (127 samples, 0.11%)</title><rect x="99.6536%" y="1141" width="0.1097%" height="15" fill="rgb(230,99,29)" fg:x="115349" fg:w="127"/><text x="99.9036%" y="1151.50"></text></g><g><title>start_thread (127 samples, 0.11%)</title><rect x="99.6536%" y="1125" width="0.1097%" height="15" fill="rgb(245,199,7)" fg:x="115349" fg:w="127"/><text x="99.9036%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (127 samples, 0.11%)</title><rect x="99.6536%" y="1109" width="0.1097%" height="15" fill="rgb(217,179,10)" fg:x="115349" fg:w="127"/><text x="99.9036%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (127 samples, 0.11%)</title><rect x="99.6536%" y="1093" width="0.1097%" height="15" fill="rgb(254,99,47)" fg:x="115349" fg:w="127"/><text x="99.9036%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (127 samples, 0.11%)</title><rect x="99.6536%" y="1077" width="0.1097%" height="15" fill="rgb(251,121,7)" fg:x="115349" fg:w="127"/><text x="99.9036%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (127 samples, 0.11%)</title><rect x="99.6536%" y="1061" width="0.1097%" height="15" fill="rgb(250,177,26)" fg:x="115349" fg:w="127"/><text x="99.9036%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (127 samples, 0.11%)</title><rect x="99.6536%" y="1045" width="0.1097%" height="15" fill="rgb(232,88,15)" fg:x="115349" fg:w="127"/><text x="99.9036%" y="1055.50"></text></g><g><title>std::sys::unix::thread::guard::current (13 samples, 0.01%)</title><rect x="99.7521%" y="1029" width="0.0112%" height="15" fill="rgb(251,54,54)" fg:x="115463" fg:w="13"/><text x="100.0021%" y="1039.50"></text></g><g><title>__pthread_getattr_np (13 samples, 0.01%)</title><rect x="99.7521%" y="1013" width="0.0112%" height="15" fill="rgb(208,177,15)" fg:x="115463" fg:w="13"/><text x="100.0021%" y="1023.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.01%)</title><rect x="99.7521%" y="997" width="0.0112%" height="15" fill="rgb(205,97,32)" fg:x="115463" fg:w="13"/><text x="100.0021%" y="1007.50"></text></g><g><title>tcache_init.part.0 (13 samples, 0.01%)</title><rect x="99.7521%" y="981" width="0.0112%" height="15" fill="rgb(217,192,13)" fg:x="115463" fg:w="13"/><text x="100.0021%" y="991.50"></text></g><g><title>arena_get2.part.0 (13 samples, 0.01%)</title><rect x="99.7521%" y="965" width="0.0112%" height="15" fill="rgb(215,163,41)" fg:x="115463" fg:w="13"/><text x="100.0021%" y="975.50"></text></g><g><title>alloc_new_heap (13 samples, 0.01%)</title><rect x="99.7521%" y="949" width="0.0112%" height="15" fill="rgb(246,83,29)" fg:x="115463" fg:w="13"/><text x="100.0021%" y="959.50"></text></g><g><title>tokio-runtime-w (132 samples, 0.11%)</title><rect x="99.6536%" y="1157" width="0.1140%" height="15" fill="rgb(219,2,45)" fg:x="115349" fg:w="132"/><text x="99.9036%" y="1167.50"></text></g><g><title>async_global_executor::tokio03::enter (12 samples, 0.01%)</title><rect x="99.7866%" y="869" width="0.0104%" height="15" fill="rgb(242,215,33)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="879.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="99.7866%" y="853" width="0.0104%" height="15" fill="rgb(217,1,6)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="863.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (12 samples, 0.01%)</title><rect x="99.7866%" y="837" width="0.0104%" height="15" fill="rgb(207,85,52)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="847.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (12 samples, 0.01%)</title><rect x="99.7866%" y="821" width="0.0104%" height="15" fill="rgb(231,171,19)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="831.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 0.01%)</title><rect x="99.7866%" y="805" width="0.0104%" height="15" fill="rgb(207,128,4)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="815.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (12 samples, 0.01%)</title><rect x="99.7866%" y="789" width="0.0104%" height="15" fill="rgb(219,208,4)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="799.50"></text></g><g><title>once_cell::imp::initialize_inner (12 samples, 0.01%)</title><rect x="99.7866%" y="773" width="0.0104%" height="15" fill="rgb(235,161,42)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="783.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (12 samples, 0.01%)</title><rect x="99.7866%" y="757" width="0.0104%" height="15" fill="rgb(247,218,18)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (12 samples, 0.01%)</title><rect x="99.7866%" y="741" width="0.0104%" height="15" fill="rgb(232,114,51)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="751.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (12 samples, 0.01%)</title><rect x="99.7866%" y="725" width="0.0104%" height="15" fill="rgb(222,95,3)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="99.7866%" y="709" width="0.0104%" height="15" fill="rgb(240,65,29)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.01%)</title><rect x="99.7866%" y="693" width="0.0104%" height="15" fill="rgb(249,209,20)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="703.50"></text></g><g><title>async_global_executor::tokio03::RUNTIME::{{closure}} (12 samples, 0.01%)</title><rect x="99.7866%" y="677" width="0.0104%" height="15" fill="rgb(241,48,37)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (12 samples, 0.01%)</title><rect x="99.7866%" y="661" width="0.0104%" height="15" fill="rgb(230,140,42)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="671.50"></text></g><g><title>async_global_executor::tokio03::RUNTIME::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="99.7866%" y="645" width="0.0104%" height="15" fill="rgb(230,176,45)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="655.50"></text></g><g><title>tokio::runtime::Runtime::new (12 samples, 0.01%)</title><rect x="99.7866%" y="629" width="0.0104%" height="15" fill="rgb(245,112,21)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="639.50"></text></g><g><title>tokio::runtime::builder::Builder::build (12 samples, 0.01%)</title><rect x="99.7866%" y="613" width="0.0104%" height="15" fill="rgb(207,183,35)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="623.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (12 samples, 0.01%)</title><rect x="99.7866%" y="597" width="0.0104%" height="15" fill="rgb(227,44,33)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch (12 samples, 0.01%)</title><rect x="99.7866%" y="581" width="0.0104%" height="15" fill="rgb(246,120,21)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="591.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (12 samples, 0.01%)</title><rect x="99.7866%" y="565" width="0.0104%" height="15" fill="rgb(235,57,52)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="575.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (12 samples, 0.01%)</title><rect x="99.7866%" y="549" width="0.0104%" height="15" fill="rgb(238,84,10)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="559.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (12 samples, 0.01%)</title><rect x="99.7866%" y="533" width="0.0104%" height="15" fill="rgb(251,200,32)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="543.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread (12 samples, 0.01%)</title><rect x="99.7866%" y="517" width="0.0104%" height="15" fill="rgb(247,159,13)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="527.50"></text></g><g><title>std::thread::Builder::spawn (12 samples, 0.01%)</title><rect x="99.7866%" y="501" width="0.0104%" height="15" fill="rgb(238,64,4)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="511.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (12 samples, 0.01%)</title><rect x="99.7866%" y="485" width="0.0104%" height="15" fill="rgb(221,131,51)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="495.50"></text></g><g><title>std::sys::unix::thread::Thread::new (12 samples, 0.01%)</title><rect x="99.7866%" y="469" width="0.0104%" height="15" fill="rgb(242,5,29)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="479.50"></text></g><g><title>__pthread_create_2_1 (12 samples, 0.01%)</title><rect x="99.7866%" y="453" width="0.0104%" height="15" fill="rgb(214,130,32)" fg:x="115503" fg:w="12"/><text x="100.0366%" y="463.50"></text></g><g><title>async_std::task::builder::Builder::build (19 samples, 0.02%)</title><rect x="99.7814%" y="1109" width="0.0164%" height="15" fill="rgb(244,210,16)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="1119.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (19 samples, 0.02%)</title><rect x="99.7814%" y="1093" width="0.0164%" height="15" fill="rgb(234,48,26)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="1103.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (19 samples, 0.02%)</title><rect x="99.7814%" y="1077" width="0.0164%" height="15" fill="rgb(231,82,38)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="1087.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (19 samples, 0.02%)</title><rect x="99.7814%" y="1061" width="0.0164%" height="15" fill="rgb(254,128,41)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="1071.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (19 samples, 0.02%)</title><rect x="99.7814%" y="1045" width="0.0164%" height="15" fill="rgb(212,73,49)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="1055.50"></text></g><g><title>once_cell::imp::initialize_inner (19 samples, 0.02%)</title><rect x="99.7814%" y="1029" width="0.0164%" height="15" fill="rgb(205,62,54)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="1039.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (19 samples, 0.02%)</title><rect x="99.7814%" y="1013" width="0.0164%" height="15" fill="rgb(228,0,8)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="1023.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (19 samples, 0.02%)</title><rect x="99.7814%" y="997" width="0.0164%" height="15" fill="rgb(251,28,17)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="1007.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (19 samples, 0.02%)</title><rect x="99.7814%" y="981" width="0.0164%" height="15" fill="rgb(238,105,27)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.02%)</title><rect x="99.7814%" y="965" width="0.0164%" height="15" fill="rgb(237,216,33)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.02%)</title><rect x="99.7814%" y="949" width="0.0164%" height="15" fill="rgb(229,228,25)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="959.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}} (19 samples, 0.02%)</title><rect x="99.7814%" y="933" width="0.0164%" height="15" fill="rgb(233,75,23)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="943.50"></text></g><g><title>async_global_executor::init::init_with_config (19 samples, 0.02%)</title><rect x="99.7814%" y="917" width="0.0164%" height="15" fill="rgb(231,207,16)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="927.50"></text></g><g><title>async_global_executor::init::init (19 samples, 0.02%)</title><rect x="99.7814%" y="901" width="0.0164%" height="15" fill="rgb(231,191,45)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on (19 samples, 0.02%)</title><rect x="99.7814%" y="885" width="0.0164%" height="15" fill="rgb(224,133,17)" fg:x="115497" fg:w="19"/><text x="100.0314%" y="895.50"></text></g><g><title>async_std::task::builder::Builder::blocking (24 samples, 0.02%)</title><rect x="99.7814%" y="1125" width="0.0207%" height="15" fill="rgb(209,178,27)" fg:x="115497" fg:w="24"/><text x="100.0314%" y="1135.50"></text></g><g><title>[unknown] (41 samples, 0.04%)</title><rect x="99.7685%" y="1141" width="0.0354%" height="15" fill="rgb(218,37,11)" fg:x="115482" fg:w="41"/><text x="100.0185%" y="1151.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (174 samples, 0.15%)</title><rect x="99.8065%" y="1061" width="0.1503%" height="15" fill="rgb(251,226,25)" fg:x="115526" fg:w="174"/><text x="100.0565%" y="1071.50"></text></g><g><title>native_write_msr (173 samples, 0.15%)</title><rect x="99.8073%" y="1045" width="0.1495%" height="15" fill="rgb(209,222,27)" fg:x="115527" fg:w="173"/><text x="100.0573%" y="1055.50"></text></g><g><title>__perf_event_task_sched_in (176 samples, 0.15%)</title><rect x="99.8056%" y="1077" width="0.1521%" height="15" fill="rgb(238,22,21)" fg:x="115525" fg:w="176"/><text x="100.0556%" y="1087.50"></text></g><g><title>schedule_tail (178 samples, 0.15%)</title><rect x="99.8048%" y="1109" width="0.1538%" height="15" fill="rgb(233,161,25)" fg:x="115524" fg:w="178"/><text x="100.0548%" y="1119.50"></text></g><g><title>finish_task_switch.isra.0 (178 samples, 0.15%)</title><rect x="99.8048%" y="1093" width="0.1538%" height="15" fill="rgb(226,122,53)" fg:x="115524" fg:w="178"/><text x="100.0548%" y="1103.50"></text></g><g><title>ret_from_fork (181 samples, 0.16%)</title><rect x="99.8039%" y="1125" width="0.1564%" height="15" fill="rgb(220,123,17)" fg:x="115523" fg:w="181"/><text x="100.0539%" y="1135.50"></text></g><g><title>down_write_killable (15 samples, 0.01%)</title><rect x="99.9724%" y="965" width="0.0130%" height="15" fill="rgb(230,224,35)" fg:x="115718" fg:w="15"/><text x="100.2224%" y="975.50"></text></g><g><title>rwsem_down_write_slowpath (14 samples, 0.01%)</title><rect x="99.9732%" y="949" width="0.0121%" height="15" fill="rgb(246,83,8)" fg:x="115719" fg:w="14"/><text x="100.2232%" y="959.50"></text></g><g><title>__GI___mmap64 (27 samples, 0.02%)</title><rect x="99.9637%" y="1029" width="0.0233%" height="15" fill="rgb(230,214,17)" fg:x="115708" fg:w="27"/><text x="100.2137%" y="1039.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.02%)</title><rect x="99.9637%" y="1013" width="0.0233%" height="15" fill="rgb(222,97,18)" fg:x="115708" fg:w="27"/><text x="100.2137%" y="1023.50"></text></g><g><title>do_syscall_64 (27 samples, 0.02%)</title><rect x="99.9637%" y="997" width="0.0233%" height="15" fill="rgb(206,79,1)" fg:x="115708" fg:w="27"/><text x="100.2137%" y="1007.50"></text></g><g><title>vm_mmap_pgoff (26 samples, 0.02%)</title><rect x="99.9646%" y="981" width="0.0225%" height="15" fill="rgb(214,121,34)" fg:x="115709" fg:w="26"/><text x="100.2146%" y="991.50"></text></g><g><title>__GI___clone (217 samples, 0.19%)</title><rect x="99.8039%" y="1141" width="0.1875%" height="15" fill="rgb(249,199,46)" fg:x="115523" fg:w="217"/><text x="100.0539%" y="1151.50"></text></g><g><title>start_thread (36 samples, 0.03%)</title><rect x="99.9603%" y="1125" width="0.0311%" height="15" fill="rgb(214,222,46)" fg:x="115704" fg:w="36"/><text x="100.2103%" y="1135.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (33 samples, 0.03%)</title><rect x="99.9629%" y="1109" width="0.0285%" height="15" fill="rgb(248,168,30)" fg:x="115707" fg:w="33"/><text x="100.2129%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (33 samples, 0.03%)</title><rect x="99.9629%" y="1093" width="0.0285%" height="15" fill="rgb(226,14,28)" fg:x="115707" fg:w="33"/><text x="100.2129%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (33 samples, 0.03%)</title><rect x="99.9629%" y="1077" width="0.0285%" height="15" fill="rgb(253,123,1)" fg:x="115707" fg:w="33"/><text x="100.2129%" y="1087.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (32 samples, 0.03%)</title><rect x="99.9637%" y="1061" width="0.0276%" height="15" fill="rgb(225,24,42)" fg:x="115708" fg:w="32"/><text x="100.2137%" y="1071.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (32 samples, 0.03%)</title><rect x="99.9637%" y="1045" width="0.0276%" height="15" fill="rgb(216,161,37)" fg:x="115708" fg:w="32"/><text x="100.2137%" y="1055.50"></text></g><g><title>all (115,750 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(251,164,26)" fg:x="0" fg:w="115750"/><text x="0.2500%" y="1183.50"></text></g><g><title>tremor-pdk (269 samples, 0.23%)</title><rect x="99.7676%" y="1157" width="0.2324%" height="15" fill="rgb(219,177,3)" fg:x="115481" fg:w="269"/><text x="100.0176%" y="1167.50"></text></g></svg></svg>