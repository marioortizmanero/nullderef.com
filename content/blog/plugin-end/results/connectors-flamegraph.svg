<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="102386"><g><title>async_io::reactor::ReactorLock::react (11 samples, 0.01%)</title><rect x="0.0078%" y="933" width="0.0107%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="11"/><text x="0.2578%" y="943.50"></text></g><g><title>__futex_abstimed_wait_common (23 samples, 0.02%)</title><rect x="0.0234%" y="837" width="0.0225%" height="15" fill="rgb(217,0,24)" fg:x="24" fg:w="23"/><text x="0.2734%" y="847.50"></text></g><g><title>___pthread_cond_timedwait (28 samples, 0.03%)</title><rect x="0.0195%" y="853" width="0.0273%" height="15" fill="rgb(221,193,54)" fg:x="20" fg:w="28"/><text x="0.2695%" y="863.50"></text></g><g><title>__GI___clone (42 samples, 0.04%)</title><rect x="0.0068%" y="1173" width="0.0410%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1183.50"></text></g><g><title>start_thread (42 samples, 0.04%)</title><rect x="0.0068%" y="1157" width="0.0410%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42 samples, 0.04%)</title><rect x="0.0068%" y="1141" width="0.0410%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42 samples, 0.04%)</title><rect x="0.0068%" y="1125" width="0.0410%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42 samples, 0.04%)</title><rect x="0.0068%" y="1109" width="0.0410%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (42 samples, 0.04%)</title><rect x="0.0068%" y="1093" width="0.0410%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (42 samples, 0.04%)</title><rect x="0.0068%" y="1077" width="0.0410%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.04%)</title><rect x="0.0068%" y="1061" width="0.0410%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1071.50"></text></g><g><title>std::panicking::try (42 samples, 0.04%)</title><rect x="0.0068%" y="1045" width="0.0410%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.04%)</title><rect x="0.0068%" y="1029" width="0.0410%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.04%)</title><rect x="0.0068%" y="1013" width="0.0410%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (42 samples, 0.04%)</title><rect x="0.0068%" y="997" width="0.0410%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="42"/><text x="0.2568%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42 samples, 0.04%)</title><rect x="0.0068%" y="981" width="0.0410%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="42"/><text x="0.2568%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (42 samples, 0.04%)</title><rect x="0.0068%" y="965" width="0.0410%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="42"/><text x="0.2568%" y="975.50"></text></g><g><title>async_io::driver::main_loop (42 samples, 0.04%)</title><rect x="0.0068%" y="949" width="0.0410%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="42"/><text x="0.2568%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (30 samples, 0.03%)</title><rect x="0.0186%" y="933" width="0.0293%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="30"/><text x="0.2686%" y="943.50"></text></g><g><title>parking::Inner::park (30 samples, 0.03%)</title><rect x="0.0186%" y="917" width="0.0293%" height="15" fill="rgb(226,26,5)" fg:x="19" fg:w="30"/><text x="0.2686%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (30 samples, 0.03%)</title><rect x="0.0186%" y="901" width="0.0293%" height="15" fill="rgb(249,33,26)" fg:x="19" fg:w="30"/><text x="0.2686%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (30 samples, 0.03%)</title><rect x="0.0186%" y="885" width="0.0293%" height="15" fill="rgb(235,183,28)" fg:x="19" fg:w="30"/><text x="0.2686%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (30 samples, 0.03%)</title><rect x="0.0186%" y="869" width="0.0293%" height="15" fill="rgb(221,5,38)" fg:x="19" fg:w="30"/><text x="0.2686%" y="879.50"></text></g><g><title>async-io (50 samples, 0.05%)</title><rect x="0.0000%" y="1189" width="0.0488%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="50"/><text x="0.2500%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="0.6212%" y="1157" width="0.0107%" height="15" fill="rgb(241,131,45)" fg:x="636" fg:w="11"/><text x="0.8712%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="0.6319%" y="1157" width="0.0303%" height="15" fill="rgb(249,31,29)" fg:x="647" fg:w="31"/><text x="0.8819%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81 samples, 0.08%)</title><rect x="0.6622%" y="1157" width="0.0791%" height="15" fill="rgb(225,111,53)" fg:x="678" fg:w="81"/><text x="0.9122%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.03%)</title><rect x="0.7140%" y="1141" width="0.0273%" height="15" fill="rgb(238,160,17)" fg:x="731" fg:w="28"/><text x="0.9640%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="0.7413%" y="1157" width="0.0234%" height="15" fill="rgb(214,148,48)" fg:x="759" fg:w="24"/><text x="0.9913%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (28 samples, 0.03%)</title><rect x="0.8878%" y="1141" width="0.0273%" height="15" fill="rgb(232,36,49)" fg:x="909" fg:w="28"/><text x="1.1378%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (157 samples, 0.15%)</title><rect x="0.7648%" y="1157" width="0.1533%" height="15" fill="rgb(209,103,24)" fg:x="783" fg:w="157"/><text x="1.0148%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (31 samples, 0.03%)</title><rect x="1.0529%" y="1141" width="0.0303%" height="15" fill="rgb(229,88,8)" fg:x="1078" fg:w="31"/><text x="1.3029%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="1.0832%" y="1141" width="0.0127%" height="15" fill="rgb(213,181,19)" fg:x="1109" fg:w="13"/><text x="1.3332%" y="1151.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="1.0832%" y="1125" width="0.0127%" height="15" fill="rgb(254,191,54)" fg:x="1109" fg:w="13"/><text x="1.3332%" y="1135.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="1.0832%" y="1109" width="0.0127%" height="15" fill="rgb(241,83,37)" fg:x="1109" fg:w="13"/><text x="1.3332%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (182 samples, 0.18%)</title><rect x="0.9279%" y="1157" width="0.1778%" height="15" fill="rgb(233,36,39)" fg:x="950" fg:w="182"/><text x="1.1779%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="1.5119%" y="1125" width="0.0176%" height="15" fill="rgb(226,3,54)" fg:x="1548" fg:w="18"/><text x="1.7619%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (151 samples, 0.15%)</title><rect x="1.4025%" y="1141" width="0.1475%" height="15" fill="rgb(245,192,40)" fg:x="1436" fg:w="151"/><text x="1.6525%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (21 samples, 0.02%)</title><rect x="1.5295%" y="1125" width="0.0205%" height="15" fill="rgb(238,167,29)" fg:x="1566" fg:w="21"/><text x="1.7795%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (13 samples, 0.01%)</title><rect x="1.5500%" y="1141" width="0.0127%" height="15" fill="rgb(232,182,51)" fg:x="1587" fg:w="13"/><text x="1.8000%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.5500%" y="1125" width="0.0127%" height="15" fill="rgb(231,60,39)" fg:x="1587" fg:w="13"/><text x="1.8000%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="1.5500%" y="1109" width="0.0127%" height="15" fill="rgb(208,69,12)" fg:x="1587" fg:w="13"/><text x="1.8000%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="1.5500%" y="1093" width="0.0127%" height="15" fill="rgb(235,93,37)" fg:x="1587" fg:w="13"/><text x="1.8000%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (11 samples, 0.01%)</title><rect x="1.5520%" y="1077" width="0.0107%" height="15" fill="rgb(213,116,39)" fg:x="1589" fg:w="11"/><text x="1.8020%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17 samples, 0.02%)</title><rect x="1.6399%" y="1125" width="0.0166%" height="15" fill="rgb(222,207,29)" fg:x="1679" fg:w="17"/><text x="1.8899%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (97 samples, 0.09%)</title><rect x="1.5774%" y="1141" width="0.0947%" height="15" fill="rgb(206,96,30)" fg:x="1615" fg:w="97"/><text x="1.8274%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (16 samples, 0.02%)</title><rect x="1.6565%" y="1125" width="0.0156%" height="15" fill="rgb(218,138,4)" fg:x="1696" fg:w="16"/><text x="1.9065%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (30 samples, 0.03%)</title><rect x="1.6721%" y="1141" width="0.0293%" height="15" fill="rgb(250,191,14)" fg:x="1712" fg:w="30"/><text x="1.9221%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (46 samples, 0.04%)</title><rect x="1.7014%" y="1141" width="0.0449%" height="15" fill="rgb(239,60,40)" fg:x="1742" fg:w="46"/><text x="1.9514%" y="1151.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="1.8352%" y="1125" width="0.0186%" height="15" fill="rgb(206,27,48)" fg:x="1879" fg:w="19"/><text x="2.0852%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="1.8352%" y="1109" width="0.0186%" height="15" fill="rgb(225,35,8)" fg:x="1879" fg:w="19"/><text x="2.0852%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (19 samples, 0.02%)</title><rect x="1.8352%" y="1093" width="0.0186%" height="15" fill="rgb(250,213,24)" fg:x="1879" fg:w="19"/><text x="2.0852%" y="1103.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="1.8352%" y="1077" width="0.0186%" height="15" fill="rgb(247,123,22)" fg:x="1879" fg:w="19"/><text x="2.0852%" y="1087.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (12 samples, 0.01%)</title><rect x="1.8538%" y="1125" width="0.0117%" height="15" fill="rgb(231,138,38)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (12 samples, 0.01%)</title><rect x="1.8538%" y="1109" width="0.0117%" height="15" fill="rgb(231,145,46)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (12 samples, 0.01%)</title><rect x="1.8538%" y="1093" width="0.0117%" height="15" fill="rgb(251,118,11)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (12 samples, 0.01%)</title><rect x="1.8538%" y="1077" width="0.0117%" height="15" fill="rgb(217,147,25)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.8538%" y="1061" width="0.0117%" height="15" fill="rgb(247,81,37)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="1.8538%" y="1045" width="0.0117%" height="15" fill="rgb(209,12,38)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="1.8538%" y="1029" width="0.0117%" height="15" fill="rgb(227,1,9)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="1.8538%" y="1013" width="0.0117%" height="15" fill="rgb(248,47,43)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="1.8538%" y="997" width="0.0117%" height="15" fill="rgb(221,10,30)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="1.8538%" y="981" width="0.0117%" height="15" fill="rgb(210,229,1)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="1.8538%" y="965" width="0.0117%" height="15" fill="rgb(222,148,37)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="1.8538%" y="949" width="0.0117%" height="15" fill="rgb(234,67,33)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="1.8538%" y="933" width="0.0117%" height="15" fill="rgb(247,98,35)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="943.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="1.8538%" y="917" width="0.0117%" height="15" fill="rgb(247,138,52)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="927.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="1.8538%" y="901" width="0.0117%" height="15" fill="rgb(213,79,30)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="1.8538%" y="885" width="0.0117%" height="15" fill="rgb(246,177,23)" fg:x="1898" fg:w="12"/><text x="2.1038%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (804 samples, 0.79%)</title><rect x="1.1066%" y="1157" width="0.7853%" height="15" fill="rgb(230,62,27)" fg:x="1133" fg:w="804"/><text x="1.3566%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (149 samples, 0.15%)</title><rect x="1.7463%" y="1141" width="0.1455%" height="15" fill="rgb(216,154,8)" fg:x="1788" fg:w="149"/><text x="1.9963%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (27 samples, 0.03%)</title><rect x="1.8655%" y="1125" width="0.0264%" height="15" fill="rgb(244,35,45)" fg:x="1910" fg:w="27"/><text x="2.1155%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="1.8655%" y="1109" width="0.0264%" height="15" fill="rgb(251,115,12)" fg:x="1910" fg:w="27"/><text x="2.1155%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (32 samples, 0.03%)</title><rect x="2.0032%" y="1141" width="0.0313%" height="15" fill="rgb(240,54,50)" fg:x="2051" fg:w="32"/><text x="2.2532%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (32 samples, 0.03%)</title><rect x="2.0032%" y="1125" width="0.0313%" height="15" fill="rgb(233,84,52)" fg:x="2051" fg:w="32"/><text x="2.2532%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="2.0032%" y="1109" width="0.0313%" height="15" fill="rgb(207,117,47)" fg:x="2051" fg:w="32"/><text x="2.2532%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (32 samples, 0.03%)</title><rect x="2.0032%" y="1093" width="0.0313%" height="15" fill="rgb(249,43,39)" fg:x="2051" fg:w="32"/><text x="2.2532%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (32 samples, 0.03%)</title><rect x="2.0032%" y="1077" width="0.0313%" height="15" fill="rgb(209,38,44)" fg:x="2051" fg:w="32"/><text x="2.2532%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (178 samples, 0.17%)</title><rect x="1.8919%" y="1157" width="0.1739%" height="15" fill="rgb(236,212,23)" fg:x="1937" fg:w="178"/><text x="2.1419%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (32 samples, 0.03%)</title><rect x="2.0345%" y="1141" width="0.0313%" height="15" fill="rgb(242,79,21)" fg:x="2083" fg:w="32"/><text x="2.2845%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="2.0345%" y="1125" width="0.0313%" height="15" fill="rgb(211,96,35)" fg:x="2083" fg:w="32"/><text x="2.2845%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="2.0345%" y="1109" width="0.0313%" height="15" fill="rgb(253,215,40)" fg:x="2083" fg:w="32"/><text x="2.2845%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (32 samples, 0.03%)</title><rect x="2.0345%" y="1093" width="0.0313%" height="15" fill="rgb(211,81,21)" fg:x="2083" fg:w="32"/><text x="2.2845%" y="1103.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="2.0813%" y="1125" width="0.0147%" height="15" fill="rgb(208,190,38)" fg:x="2131" fg:w="15"/><text x="2.3313%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="2.0706%" y="1157" width="0.0264%" height="15" fill="rgb(235,213,38)" fg:x="2120" fg:w="27"/><text x="2.3206%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (20 samples, 0.02%)</title><rect x="2.0774%" y="1141" width="0.0195%" height="15" fill="rgb(237,122,38)" fg:x="2127" fg:w="20"/><text x="2.3274%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (68 samples, 0.07%)</title><rect x="2.0979%" y="1157" width="0.0664%" height="15" fill="rgb(244,218,35)" fg:x="2148" fg:w="68"/><text x="2.3479%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (191 samples, 0.19%)</title><rect x="2.1644%" y="1157" width="0.1865%" height="15" fill="rgb(240,68,47)" fg:x="2216" fg:w="191"/><text x="2.4144%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (119 samples, 0.12%)</title><rect x="2.2347%" y="1141" width="0.1162%" height="15" fill="rgb(210,16,53)" fg:x="2288" fg:w="119"/><text x="2.4847%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (82 samples, 0.08%)</title><rect x="2.2708%" y="1125" width="0.0801%" height="15" fill="rgb(235,124,12)" fg:x="2325" fg:w="82"/><text x="2.5208%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (32 samples, 0.03%)</title><rect x="2.3197%" y="1109" width="0.0313%" height="15" fill="rgb(224,169,11)" fg:x="2375" fg:w="32"/><text x="2.5697%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (28 samples, 0.03%)</title><rect x="2.3236%" y="1093" width="0.0273%" height="15" fill="rgb(250,166,2)" fg:x="2379" fg:w="28"/><text x="2.5736%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (28 samples, 0.03%)</title><rect x="2.3236%" y="1077" width="0.0273%" height="15" fill="rgb(242,216,29)" fg:x="2379" fg:w="28"/><text x="2.5736%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (28 samples, 0.03%)</title><rect x="2.3236%" y="1061" width="0.0273%" height="15" fill="rgb(230,116,27)" fg:x="2379" fg:w="28"/><text x="2.5736%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.03%)</title><rect x="2.3236%" y="1045" width="0.0273%" height="15" fill="rgb(228,99,48)" fg:x="2379" fg:w="28"/><text x="2.5736%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.03%)</title><rect x="2.3236%" y="1029" width="0.0273%" height="15" fill="rgb(253,11,6)" fg:x="2379" fg:w="28"/><text x="2.5736%" y="1039.50"></text></g><g><title>__rg_dealloc (28 samples, 0.03%)</title><rect x="2.3236%" y="1013" width="0.0273%" height="15" fill="rgb(247,143,39)" fg:x="2379" fg:w="28"/><text x="2.5736%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (28 samples, 0.03%)</title><rect x="2.3236%" y="997" width="0.0273%" height="15" fill="rgb(236,97,10)" fg:x="2379" fg:w="28"/><text x="2.5736%" y="1007.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (12 samples, 0.01%)</title><rect x="2.3626%" y="1125" width="0.0117%" height="15" fill="rgb(233,208,19)" fg:x="2419" fg:w="12"/><text x="2.6126%" y="1135.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="2.3626%" y="1109" width="0.0117%" height="15" fill="rgb(216,164,2)" fg:x="2419" fg:w="12"/><text x="2.6126%" y="1119.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="2.3626%" y="1093" width="0.0117%" height="15" fill="rgb(220,129,5)" fg:x="2419" fg:w="12"/><text x="2.6126%" y="1103.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="2.3626%" y="1077" width="0.0117%" height="15" fill="rgb(242,17,10)" fg:x="2419" fg:w="12"/><text x="2.6126%" y="1087.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (36 samples, 0.04%)</title><rect x="2.3509%" y="1157" width="0.0352%" height="15" fill="rgb(242,107,0)" fg:x="2407" fg:w="36"/><text x="2.6009%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="2.3626%" y="1141" width="0.0234%" height="15" fill="rgb(251,28,31)" fg:x="2419" fg:w="24"/><text x="2.6126%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (12 samples, 0.01%)</title><rect x="2.3743%" y="1125" width="0.0117%" height="15" fill="rgb(233,223,10)" fg:x="2431" fg:w="12"/><text x="2.6243%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (12 samples, 0.01%)</title><rect x="2.3743%" y="1109" width="0.0117%" height="15" fill="rgb(215,21,27)" fg:x="2431" fg:w="12"/><text x="2.6243%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.3743%" y="1093" width="0.0117%" height="15" fill="rgb(232,23,21)" fg:x="2431" fg:w="12"/><text x="2.6243%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.3743%" y="1077" width="0.0117%" height="15" fill="rgb(244,5,23)" fg:x="2431" fg:w="12"/><text x="2.6243%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.3743%" y="1061" width="0.0117%" height="15" fill="rgb(226,81,46)" fg:x="2431" fg:w="12"/><text x="2.6243%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="2.3743%" y="1045" width="0.0117%" height="15" fill="rgb(247,70,30)" fg:x="2431" fg:w="12"/><text x="2.6243%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="2.3743%" y="1029" width="0.0117%" height="15" fill="rgb(212,68,19)" fg:x="2431" fg:w="12"/><text x="2.6243%" y="1039.50"></text></g><g><title>___pthread_mutex_lock (32 samples, 0.03%)</title><rect x="2.4124%" y="1157" width="0.0313%" height="15" fill="rgb(240,187,13)" fg:x="2470" fg:w="32"/><text x="2.6624%" y="1167.50"></text></g><g><title>__clock_gettime_2 (39 samples, 0.04%)</title><rect x="2.4544%" y="1157" width="0.0381%" height="15" fill="rgb(223,113,26)" fg:x="2513" fg:w="39"/><text x="2.7044%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (26 samples, 0.03%)</title><rect x="2.4984%" y="1157" width="0.0254%" height="15" fill="rgb(206,192,2)" fg:x="2558" fg:w="26"/><text x="2.7484%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (29 samples, 0.03%)</title><rect x="2.5248%" y="1157" width="0.0283%" height="15" fill="rgb(241,108,4)" fg:x="2585" fg:w="29"/><text x="2.7748%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (103 samples, 0.10%)</title><rect x="2.5531%" y="1157" width="0.1006%" height="15" fill="rgb(247,173,49)" fg:x="2614" fg:w="103"/><text x="2.8031%" y="1167.50"></text></g><g><title>async_executor::Ticker::sleep (13 samples, 0.01%)</title><rect x="2.6713%" y="1157" width="0.0127%" height="15" fill="rgb(224,114,35)" fg:x="2735" fg:w="13"/><text x="2.9213%" y="1167.50"></text></g><g><title>async_executor::steal (39 samples, 0.04%)</title><rect x="2.6859%" y="1157" width="0.0381%" height="15" fill="rgb(245,159,27)" fg:x="2750" fg:w="39"/><text x="2.9359%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (137 samples, 0.13%)</title><rect x="2.7387%" y="1157" width="0.1338%" height="15" fill="rgb(245,172,44)" fg:x="2804" fg:w="137"/><text x="2.9887%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (54 samples, 0.05%)</title><rect x="2.8725%" y="1157" width="0.0527%" height="15" fill="rgb(236,23,11)" fg:x="2941" fg:w="54"/><text x="3.1225%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (131 samples, 0.13%)</title><rect x="2.9252%" y="1157" width="0.1279%" height="15" fill="rgb(205,117,38)" fg:x="2995" fg:w="131"/><text x="3.1752%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (13 samples, 0.01%)</title><rect x="3.0405%" y="1141" width="0.0127%" height="15" fill="rgb(237,72,25)" fg:x="3113" fg:w="13"/><text x="3.2905%" y="1151.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="3.0405%" y="1125" width="0.0127%" height="15" fill="rgb(244,70,9)" fg:x="3113" fg:w="13"/><text x="3.2905%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (71 samples, 0.07%)</title><rect x="3.0532%" y="1157" width="0.0693%" height="15" fill="rgb(217,125,39)" fg:x="3126" fg:w="71"/><text x="3.3032%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (79 samples, 0.08%)</title><rect x="3.1323%" y="1157" width="0.0772%" height="15" fill="rgb(235,36,10)" fg:x="3207" fg:w="79"/><text x="3.3823%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="3.1743%" y="1141" width="0.0352%" height="15" fill="rgb(251,123,47)" fg:x="3250" fg:w="36"/><text x="3.4243%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="3.2163%" y="1157" width="0.0117%" height="15" fill="rgb(221,13,13)" fg:x="3293" fg:w="12"/><text x="3.4663%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (133 samples, 0.13%)</title><rect x="3.2280%" y="1157" width="0.1299%" height="15" fill="rgb(238,131,9)" fg:x="3305" fg:w="133"/><text x="3.4780%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (133 samples, 0.13%)</title><rect x="3.2280%" y="1141" width="0.1299%" height="15" fill="rgb(211,50,8)" fg:x="3305" fg:w="133"/><text x="3.4780%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="3.3579%" y="1157" width="0.0195%" height="15" fill="rgb(245,182,24)" fg:x="3438" fg:w="20"/><text x="3.6079%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="3.3774%" y="1157" width="0.0186%" height="15" fill="rgb(242,14,37)" fg:x="3458" fg:w="19"/><text x="3.6274%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (43 samples, 0.04%)</title><rect x="3.4048%" y="1157" width="0.0420%" height="15" fill="rgb(246,228,12)" fg:x="3486" fg:w="43"/><text x="3.6548%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="3.4468%" y="1157" width="0.0195%" height="15" fill="rgb(213,55,15)" fg:x="3529" fg:w="20"/><text x="3.6968%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (20 samples, 0.02%)</title><rect x="3.4468%" y="1141" width="0.0195%" height="15" fill="rgb(209,9,3)" fg:x="3529" fg:w="20"/><text x="3.6968%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (37 samples, 0.04%)</title><rect x="3.4663%" y="1157" width="0.0361%" height="15" fill="rgb(230,59,30)" fg:x="3549" fg:w="37"/><text x="3.7163%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (93 samples, 0.09%)</title><rect x="3.5024%" y="1157" width="0.0908%" height="15" fill="rgb(209,121,21)" fg:x="3586" fg:w="93"/><text x="3.7524%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="3.6470%" y="1125" width="0.0195%" height="15" fill="rgb(220,109,13)" fg:x="3734" fg:w="20"/><text x="3.8970%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="3.6558%" y="1109" width="0.0107%" height="15" fill="rgb(232,18,1)" fg:x="3743" fg:w="11"/><text x="3.9058%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="3.6558%" y="1093" width="0.0107%" height="15" fill="rgb(215,41,42)" fg:x="3743" fg:w="11"/><text x="3.9058%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="3.6558%" y="1077" width="0.0107%" height="15" fill="rgb(224,123,36)" fg:x="3743" fg:w="11"/><text x="3.9058%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="3.6558%" y="1061" width="0.0107%" height="15" fill="rgb(240,125,3)" fg:x="3743" fg:w="11"/><text x="3.9058%" y="1071.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="3.6558%" y="1045" width="0.0107%" height="15" fill="rgb(205,98,50)" fg:x="3743" fg:w="11"/><text x="3.9058%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="3.6558%" y="1029" width="0.0107%" height="15" fill="rgb(205,185,37)" fg:x="3743" fg:w="11"/><text x="3.9058%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (107 samples, 0.10%)</title><rect x="3.5933%" y="1157" width="0.1045%" height="15" fill="rgb(238,207,15)" fg:x="3679" fg:w="107"/><text x="3.8433%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (52 samples, 0.05%)</title><rect x="3.6470%" y="1141" width="0.0508%" height="15" fill="rgb(213,199,42)" fg:x="3734" fg:w="52"/><text x="3.8970%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (32 samples, 0.03%)</title><rect x="3.6665%" y="1125" width="0.0313%" height="15" fill="rgb(235,201,11)" fg:x="3754" fg:w="32"/><text x="3.9165%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (30 samples, 0.03%)</title><rect x="3.7388%" y="1141" width="0.0293%" height="15" fill="rgb(207,46,11)" fg:x="3828" fg:w="30"/><text x="3.9888%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (30 samples, 0.03%)</title><rect x="3.7388%" y="1125" width="0.0293%" height="15" fill="rgb(241,35,35)" fg:x="3828" fg:w="30"/><text x="3.9888%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (30 samples, 0.03%)</title><rect x="3.7388%" y="1109" width="0.0293%" height="15" fill="rgb(243,32,47)" fg:x="3828" fg:w="30"/><text x="3.9888%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="3.7388%" y="1093" width="0.0293%" height="15" fill="rgb(247,202,23)" fg:x="3828" fg:w="30"/><text x="3.9888%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.03%)</title><rect x="3.7388%" y="1077" width="0.0293%" height="15" fill="rgb(219,102,11)" fg:x="3828" fg:w="30"/><text x="3.9888%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.03%)</title><rect x="3.7388%" y="1061" width="0.0293%" height="15" fill="rgb(243,110,44)" fg:x="3828" fg:w="30"/><text x="3.9888%" y="1071.50"></text></g><g><title>__rg_dealloc (30 samples, 0.03%)</title><rect x="3.7388%" y="1045" width="0.0293%" height="15" fill="rgb(222,74,54)" fg:x="3828" fg:w="30"/><text x="3.9888%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (30 samples, 0.03%)</title><rect x="3.7388%" y="1029" width="0.0293%" height="15" fill="rgb(216,99,12)" fg:x="3828" fg:w="30"/><text x="3.9888%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (78 samples, 0.08%)</title><rect x="3.6978%" y="1157" width="0.0762%" height="15" fill="rgb(226,22,26)" fg:x="3786" fg:w="78"/><text x="3.9478%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (97 samples, 0.09%)</title><rect x="3.7740%" y="1157" width="0.0947%" height="15" fill="rgb(217,163,10)" fg:x="3864" fg:w="97"/><text x="4.0240%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="3.8433%" y="1141" width="0.0254%" height="15" fill="rgb(213,25,53)" fg:x="3935" fg:w="26"/><text x="4.0933%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.03%)</title><rect x="3.8433%" y="1125" width="0.0254%" height="15" fill="rgb(252,105,26)" fg:x="3935" fg:w="26"/><text x="4.0933%" y="1135.50"></text></g><g><title>event_listener::Event::notify (266 samples, 0.26%)</title><rect x="3.8785%" y="1157" width="0.2598%" height="15" fill="rgb(220,39,43)" fg:x="3971" fg:w="266"/><text x="4.1285%" y="1167.50"></text></g><g><title>event_listener::full_fence (108 samples, 0.11%)</title><rect x="4.0328%" y="1141" width="0.1055%" height="15" fill="rgb(229,68,48)" fg:x="4129" fg:w="108"/><text x="4.2828%" y="1151.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (62 samples, 0.06%)</title><rect x="4.1461%" y="1157" width="0.0606%" height="15" fill="rgb(252,8,32)" fg:x="4245" fg:w="62"/><text x="4.3961%" y="1167.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (14 samples, 0.01%)</title><rect x="4.1930%" y="1141" width="0.0137%" height="15" fill="rgb(223,20,43)" fg:x="4293" fg:w="14"/><text x="4.4430%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (14 samples, 0.01%)</title><rect x="4.1930%" y="1125" width="0.0137%" height="15" fill="rgb(229,81,49)" fg:x="4293" fg:w="14"/><text x="4.4430%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="4.1930%" y="1109" width="0.0137%" height="15" fill="rgb(236,28,36)" fg:x="4293" fg:w="14"/><text x="4.4430%" y="1119.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (14 samples, 0.01%)</title><rect x="4.1930%" y="1093" width="0.0137%" height="15" fill="rgb(249,185,26)" fg:x="4293" fg:w="14"/><text x="4.4430%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="4.1930%" y="1077" width="0.0137%" height="15" fill="rgb(249,174,33)" fg:x="4293" fg:w="14"/><text x="4.4430%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (14 samples, 0.01%)</title><rect x="4.1930%" y="1061" width="0.0137%" height="15" fill="rgb(233,201,37)" fg:x="4293" fg:w="14"/><text x="4.4430%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (14 samples, 0.01%)</title><rect x="4.1930%" y="1045" width="0.0137%" height="15" fill="rgb(221,78,26)" fg:x="4293" fg:w="14"/><text x="4.4430%" y="1055.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (28 samples, 0.03%)</title><rect x="4.2066%" y="1157" width="0.0273%" height="15" fill="rgb(250,127,30)" fg:x="4307" fg:w="28"/><text x="4.4566%" y="1167.50"></text></g><g><title>parking::Inner::park (18 samples, 0.02%)</title><rect x="4.2340%" y="1157" width="0.0176%" height="15" fill="rgb(230,49,44)" fg:x="4335" fg:w="18"/><text x="4.4840%" y="1167.50"></text></g><g><title>rust_alloc (60 samples, 0.06%)</title><rect x="4.2682%" y="1157" width="0.0586%" height="15" fill="rgb(229,67,23)" fg:x="4370" fg:w="60"/><text x="4.5182%" y="1167.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="4.3268%" y="1157" width="0.0205%" height="15" fill="rgb(249,83,47)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (21 samples, 0.02%)</title><rect x="4.3268%" y="1141" width="0.0205%" height="15" fill="rgb(215,43,3)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (21 samples, 0.02%)</title><rect x="4.3268%" y="1125" width="0.0205%" height="15" fill="rgb(238,154,13)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (21 samples, 0.02%)</title><rect x="4.3268%" y="1109" width="0.0205%" height="15" fill="rgb(219,56,2)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (21 samples, 0.02%)</title><rect x="4.3268%" y="1093" width="0.0205%" height="15" fill="rgb(233,0,4)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (21 samples, 0.02%)</title><rect x="4.3268%" y="1077" width="0.0205%" height="15" fill="rgb(235,30,7)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (21 samples, 0.02%)</title><rect x="4.3268%" y="1061" width="0.0205%" height="15" fill="rgb(250,79,13)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (21 samples, 0.02%)</title><rect x="4.3268%" y="1045" width="0.0205%" height="15" fill="rgb(211,146,34)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="4.3268%" y="1029" width="0.0205%" height="15" fill="rgb(228,22,38)" fg:x="4430" fg:w="21"/><text x="4.5768%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (20 samples, 0.02%)</title><rect x="4.3649%" y="1157" width="0.0195%" height="15" fill="rgb(235,168,5)" fg:x="4469" fg:w="20"/><text x="4.6149%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (61 samples, 0.06%)</title><rect x="4.3844%" y="1157" width="0.0596%" height="15" fill="rgb(221,155,16)" fg:x="4489" fg:w="61"/><text x="4.6344%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="4.4440%" y="1157" width="0.0156%" height="15" fill="rgb(215,215,53)" fg:x="4550" fg:w="16"/><text x="4.6940%" y="1167.50"></text></g><g><title>tremor_common::time::nanotime (106 samples, 0.10%)</title><rect x="4.4596%" y="1157" width="0.1035%" height="15" fill="rgb(223,4,10)" fg:x="4566" fg:w="106"/><text x="4.7096%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (105 samples, 0.10%)</title><rect x="4.4606%" y="1141" width="0.1026%" height="15" fill="rgb(234,103,6)" fg:x="4567" fg:w="105"/><text x="4.7106%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (105 samples, 0.10%)</title><rect x="4.4606%" y="1125" width="0.1026%" height="15" fill="rgb(227,97,0)" fg:x="4567" fg:w="105"/><text x="4.7106%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (105 samples, 0.10%)</title><rect x="4.4606%" y="1109" width="0.1026%" height="15" fill="rgb(234,150,53)" fg:x="4567" fg:w="105"/><text x="4.7106%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (22 samples, 0.02%)</title><rect x="4.5631%" y="1157" width="0.0215%" height="15" fill="rgb(228,201,54)" fg:x="4672" fg:w="22"/><text x="4.8131%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="4.6979%" y="1141" width="0.0186%" height="15" fill="rgb(222,22,37)" fg:x="4810" fg:w="19"/><text x="4.9479%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (25 samples, 0.02%)</title><rect x="4.7165%" y="1141" width="0.0244%" height="15" fill="rgb(237,53,32)" fg:x="4829" fg:w="25"/><text x="4.9665%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (25 samples, 0.02%)</title><rect x="4.7165%" y="1125" width="0.0244%" height="15" fill="rgb(233,25,53)" fg:x="4829" fg:w="25"/><text x="4.9665%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.02%)</title><rect x="4.7243%" y="1109" width="0.0166%" height="15" fill="rgb(210,40,34)" fg:x="4837" fg:w="17"/><text x="4.9743%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="4.7243%" y="1093" width="0.0166%" height="15" fill="rgb(241,220,44)" fg:x="4837" fg:w="17"/><text x="4.9743%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="4.7243%" y="1077" width="0.0166%" height="15" fill="rgb(235,28,35)" fg:x="4837" fg:w="17"/><text x="4.9743%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="4.7243%" y="1061" width="0.0166%" height="15" fill="rgb(210,56,17)" fg:x="4837" fg:w="17"/><text x="4.9743%" y="1071.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="4.7243%" y="1045" width="0.0166%" height="15" fill="rgb(224,130,29)" fg:x="4837" fg:w="17"/><text x="4.9743%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="4.7243%" y="1029" width="0.0166%" height="15" fill="rgb(235,212,8)" fg:x="4837" fg:w="17"/><text x="4.9743%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (18 samples, 0.02%)</title><rect x="4.7409%" y="1141" width="0.0176%" height="15" fill="rgb(223,33,50)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="4.7409%" y="1125" width="0.0176%" height="15" fill="rgb(219,149,13)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (18 samples, 0.02%)</title><rect x="4.7409%" y="1109" width="0.0176%" height="15" fill="rgb(250,156,29)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="4.7409%" y="1093" width="0.0176%" height="15" fill="rgb(216,193,19)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (18 samples, 0.02%)</title><rect x="4.7409%" y="1077" width="0.0176%" height="15" fill="rgb(216,135,14)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="4.7409%" y="1061" width="0.0176%" height="15" fill="rgb(241,47,5)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="4.7409%" y="1045" width="0.0176%" height="15" fill="rgb(233,42,35)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="4.7409%" y="1029" width="0.0176%" height="15" fill="rgb(231,13,6)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1039.50"></text></g><g><title>__rg_dealloc (18 samples, 0.02%)</title><rect x="4.7409%" y="1013" width="0.0176%" height="15" fill="rgb(207,181,40)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.02%)</title><rect x="4.7409%" y="997" width="0.0176%" height="15" fill="rgb(254,173,49)" fg:x="4854" fg:w="18"/><text x="4.9909%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="4.7585%" y="1141" width="0.0195%" height="15" fill="rgb(221,1,38)" fg:x="4872" fg:w="20"/><text x="5.0085%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (20 samples, 0.02%)</title><rect x="4.7585%" y="1125" width="0.0195%" height="15" fill="rgb(206,124,46)" fg:x="4872" fg:w="20"/><text x="5.0085%" y="1135.50"></text></g><g><title>alloc::alloc::box_free (20 samples, 0.02%)</title><rect x="4.7585%" y="1109" width="0.0195%" height="15" fill="rgb(249,21,11)" fg:x="4872" fg:w="20"/><text x="5.0085%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="4.7585%" y="1093" width="0.0195%" height="15" fill="rgb(222,201,40)" fg:x="4872" fg:w="20"/><text x="5.0085%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="4.7585%" y="1077" width="0.0195%" height="15" fill="rgb(235,61,29)" fg:x="4872" fg:w="20"/><text x="5.0085%" y="1087.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="4.7585%" y="1061" width="0.0195%" height="15" fill="rgb(219,207,3)" fg:x="4872" fg:w="20"/><text x="5.0085%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="4.7585%" y="1045" width="0.0195%" height="15" fill="rgb(222,56,46)" fg:x="4872" fg:w="20"/><text x="5.0085%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (221 samples, 0.22%)</title><rect x="4.5846%" y="1157" width="0.2158%" height="15" fill="rgb(239,76,54)" fg:x="4694" fg:w="221"/><text x="4.8346%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (23 samples, 0.02%)</title><rect x="4.7780%" y="1141" width="0.0225%" height="15" fill="rgb(231,124,27)" fg:x="4892" fg:w="23"/><text x="5.0280%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (13 samples, 0.01%)</title><rect x="4.7878%" y="1125" width="0.0127%" height="15" fill="rgb(249,195,6)" fg:x="4902" fg:w="13"/><text x="5.0378%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="4.7878%" y="1109" width="0.0127%" height="15" fill="rgb(237,174,47)" fg:x="4902" fg:w="13"/><text x="5.0378%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="4.7878%" y="1093" width="0.0127%" height="15" fill="rgb(206,201,31)" fg:x="4902" fg:w="13"/><text x="5.0378%" y="1103.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="4.7878%" y="1077" width="0.0127%" height="15" fill="rgb(231,57,52)" fg:x="4902" fg:w="13"/><text x="5.0378%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (13 samples, 0.01%)</title><rect x="4.7878%" y="1061" width="0.0127%" height="15" fill="rgb(248,177,22)" fg:x="4902" fg:w="13"/><text x="5.0378%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.07%)</title><rect x="4.8249%" y="1141" width="0.0723%" height="15" fill="rgb(215,211,37)" fg:x="4940" fg:w="74"/><text x="5.0749%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (60 samples, 0.06%)</title><rect x="4.8386%" y="1125" width="0.0586%" height="15" fill="rgb(241,128,51)" fg:x="4954" fg:w="60"/><text x="5.0886%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (131 samples, 0.13%)</title><rect x="4.8005%" y="1157" width="0.1279%" height="15" fill="rgb(227,165,31)" fg:x="4915" fg:w="131"/><text x="5.0505%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="4.9099%" y="1141" width="0.0186%" height="15" fill="rgb(228,167,24)" fg:x="5027" fg:w="19"/><text x="5.1599%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (19 samples, 0.02%)</title><rect x="4.9099%" y="1125" width="0.0186%" height="15" fill="rgb(228,143,12)" fg:x="5027" fg:w="19"/><text x="5.1599%" y="1135.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="4.9157%" y="1109" width="0.0127%" height="15" fill="rgb(249,149,8)" fg:x="5033" fg:w="13"/><text x="5.1657%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="4.9157%" y="1093" width="0.0127%" height="15" fill="rgb(243,35,44)" fg:x="5033" fg:w="13"/><text x="5.1657%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="4.9157%" y="1077" width="0.0127%" height="15" fill="rgb(246,89,9)" fg:x="5033" fg:w="13"/><text x="5.1657%" y="1087.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="4.9157%" y="1061" width="0.0127%" height="15" fill="rgb(233,213,13)" fg:x="5033" fg:w="13"/><text x="5.1657%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="4.9157%" y="1045" width="0.0127%" height="15" fill="rgb(233,141,41)" fg:x="5033" fg:w="13"/><text x="5.1657%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (42 samples, 0.04%)</title><rect x="4.9284%" y="1157" width="0.0410%" height="15" fill="rgb(239,167,4)" fg:x="5046" fg:w="42"/><text x="5.1784%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (37 samples, 0.04%)</title><rect x="4.9831%" y="1157" width="0.0361%" height="15" fill="rgb(209,217,16)" fg:x="5102" fg:w="37"/><text x="5.2331%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (30 samples, 0.03%)</title><rect x="5.0192%" y="1157" width="0.0293%" height="15" fill="rgb(219,88,35)" fg:x="5139" fg:w="30"/><text x="5.2692%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="5.1677%" y="1109" width="0.0166%" height="15" fill="rgb(220,193,23)" fg:x="5291" fg:w="17"/><text x="5.4177%" y="1119.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="5.1677%" y="1093" width="0.0166%" height="15" fill="rgb(230,90,52)" fg:x="5291" fg:w="17"/><text x="5.4177%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (158 samples, 0.15%)</title><rect x="5.0485%" y="1157" width="0.1543%" height="15" fill="rgb(252,106,19)" fg:x="5169" fg:w="158"/><text x="5.2985%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.05%)</title><rect x="5.1560%" y="1141" width="0.0469%" height="15" fill="rgb(206,74,20)" fg:x="5279" fg:w="48"/><text x="5.4060%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (48 samples, 0.05%)</title><rect x="5.1560%" y="1125" width="0.0469%" height="15" fill="rgb(230,138,44)" fg:x="5279" fg:w="48"/><text x="5.4060%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (19 samples, 0.02%)</title><rect x="5.1843%" y="1109" width="0.0186%" height="15" fill="rgb(235,182,43)" fg:x="5308" fg:w="19"/><text x="5.4343%" y="1119.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (19 samples, 0.02%)</title><rect x="5.1843%" y="1093" width="0.0186%" height="15" fill="rgb(242,16,51)" fg:x="5308" fg:w="19"/><text x="5.4343%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.02%)</title><rect x="5.1843%" y="1077" width="0.0186%" height="15" fill="rgb(248,9,4)" fg:x="5308" fg:w="19"/><text x="5.4343%" y="1087.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (19 samples, 0.02%)</title><rect x="5.1843%" y="1061" width="0.0186%" height="15" fill="rgb(210,31,22)" fg:x="5308" fg:w="19"/><text x="5.4343%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.02%)</title><rect x="5.1843%" y="1045" width="0.0186%" height="15" fill="rgb(239,54,39)" fg:x="5308" fg:w="19"/><text x="5.4343%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (19 samples, 0.02%)</title><rect x="5.1843%" y="1029" width="0.0186%" height="15" fill="rgb(230,99,41)" fg:x="5308" fg:w="19"/><text x="5.4343%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.02%)</title><rect x="5.1843%" y="1013" width="0.0186%" height="15" fill="rgb(253,106,12)" fg:x="5308" fg:w="19"/><text x="5.4343%" y="1023.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (54 samples, 0.05%)</title><rect x="5.2029%" y="1157" width="0.0527%" height="15" fill="rgb(213,46,41)" fg:x="5327" fg:w="54"/><text x="5.4529%" y="1167.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (56 samples, 0.05%)</title><rect x="5.2556%" y="1157" width="0.0547%" height="15" fill="rgb(215,133,35)" fg:x="5381" fg:w="56"/><text x="5.5056%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="5.3455%" y="1141" width="0.0117%" height="15" fill="rgb(213,28,5)" fg:x="5473" fg:w="12"/><text x="5.5955%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="5.3455%" y="1125" width="0.0117%" height="15" fill="rgb(215,77,49)" fg:x="5473" fg:w="12"/><text x="5.5955%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="5.3455%" y="1109" width="0.0117%" height="15" fill="rgb(248,100,22)" fg:x="5473" fg:w="12"/><text x="5.5955%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="5.3455%" y="1093" width="0.0117%" height="15" fill="rgb(208,67,9)" fg:x="5473" fg:w="12"/><text x="5.5955%" y="1103.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="5.3455%" y="1077" width="0.0117%" height="15" fill="rgb(219,133,21)" fg:x="5473" fg:w="12"/><text x="5.5955%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="5.3455%" y="1061" width="0.0117%" height="15" fill="rgb(246,46,29)" fg:x="5473" fg:w="12"/><text x="5.5955%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="5.3572%" y="1141" width="0.0156%" height="15" fill="rgb(246,185,52)" fg:x="5485" fg:w="16"/><text x="5.6072%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="5.3572%" y="1125" width="0.0156%" height="15" fill="rgb(252,136,11)" fg:x="5485" fg:w="16"/><text x="5.6072%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="5.3572%" y="1109" width="0.0156%" height="15" fill="rgb(219,138,53)" fg:x="5485" fg:w="16"/><text x="5.6072%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="5.3572%" y="1093" width="0.0156%" height="15" fill="rgb(211,51,23)" fg:x="5485" fg:w="16"/><text x="5.6072%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="5.3572%" y="1077" width="0.0156%" height="15" fill="rgb(247,221,28)" fg:x="5485" fg:w="16"/><text x="5.6072%" y="1087.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="5.3572%" y="1061" width="0.0156%" height="15" fill="rgb(251,222,45)" fg:x="5485" fg:w="16"/><text x="5.6072%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="5.3572%" y="1045" width="0.0156%" height="15" fill="rgb(217,162,53)" fg:x="5485" fg:w="16"/><text x="5.6072%" y="1055.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (85 samples, 0.08%)</title><rect x="5.3103%" y="1157" width="0.0830%" height="15" fill="rgb(229,93,14)" fg:x="5437" fg:w="85"/><text x="5.5603%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (21 samples, 0.02%)</title><rect x="5.3728%" y="1141" width="0.0205%" height="15" fill="rgb(209,67,49)" fg:x="5501" fg:w="21"/><text x="5.6228%" y="1151.50"></text></g><g><title>[anon] (4,893 samples, 4.78%)</title><rect x="0.6212%" y="1173" width="4.7790%" height="15" fill="rgb(213,87,29)" fg:x="636" fg:w="4893"/><text x="0.8712%" y="1183.50">[anon]</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (19 samples, 0.02%)</title><rect x="5.4021%" y="1157" width="0.0186%" height="15" fill="rgb(205,151,52)" fg:x="5531" fg:w="19"/><text x="5.6521%" y="1167.50"></text></g><g><title>[libc.so.6] (24 samples, 0.02%)</title><rect x="5.4002%" y="1173" width="0.0234%" height="15" fill="rgb(253,215,39)" fg:x="5529" fg:w="24"/><text x="5.6502%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (71 samples, 0.07%)</title><rect x="5.4373%" y="1157" width="0.0693%" height="15" fill="rgb(221,220,41)" fg:x="5567" fg:w="71"/><text x="5.6873%" y="1167.50"></text></g><g><title>[tremor-connectors] (90 samples, 0.09%)</title><rect x="5.4236%" y="1173" width="0.0879%" height="15" fill="rgb(218,133,21)" fg:x="5553" fg:w="90"/><text x="5.6736%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="5.5115%" y="1157" width="0.0361%" height="15" fill="rgb(221,193,43)" fg:x="5643" fg:w="37"/><text x="5.7615%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="5.6619%" y="1013" width="0.0117%" height="15" fill="rgb(240,128,52)" fg:x="5797" fg:w="12"/><text x="5.9119%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="5.6619%" y="997" width="0.0117%" height="15" fill="rgb(253,114,12)" fg:x="5797" fg:w="12"/><text x="5.9119%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="5.6619%" y="981" width="0.0117%" height="15" fill="rgb(215,223,47)" fg:x="5797" fg:w="12"/><text x="5.9119%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="5.6619%" y="965" width="0.0117%" height="15" fill="rgb(248,225,23)" fg:x="5797" fg:w="12"/><text x="5.9119%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="5.6619%" y="949" width="0.0117%" height="15" fill="rgb(250,108,0)" fg:x="5797" fg:w="12"/><text x="5.9119%" y="959.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="5.6619%" y="933" width="0.0117%" height="15" fill="rgb(228,208,7)" fg:x="5797" fg:w="12"/><text x="5.9119%" y="943.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="5.6619%" y="917" width="0.0117%" height="15" fill="rgb(244,45,10)" fg:x="5797" fg:w="12"/><text x="5.9119%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="5.6619%" y="901" width="0.0117%" height="15" fill="rgb(207,125,25)" fg:x="5797" fg:w="12"/><text x="5.9119%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="5.6619%" y="1093" width="0.0303%" height="15" fill="rgb(210,195,18)" fg:x="5797" fg:w="31"/><text x="5.9119%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.03%)</title><rect x="5.6619%" y="1077" width="0.0303%" height="15" fill="rgb(249,80,12)" fg:x="5797" fg:w="31"/><text x="5.9119%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.03%)</title><rect x="5.6619%" y="1061" width="0.0303%" height="15" fill="rgb(221,65,9)" fg:x="5797" fg:w="31"/><text x="5.9119%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.03%)</title><rect x="5.6619%" y="1045" width="0.0303%" height="15" fill="rgb(235,49,36)" fg:x="5797" fg:w="31"/><text x="5.9119%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.03%)</title><rect x="5.6619%" y="1029" width="0.0303%" height="15" fill="rgb(225,32,20)" fg:x="5797" fg:w="31"/><text x="5.9119%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.02%)</title><rect x="5.6736%" y="1013" width="0.0186%" height="15" fill="rgb(215,141,46)" fg:x="5809" fg:w="19"/><text x="5.9236%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="5.6736%" y="997" width="0.0186%" height="15" fill="rgb(250,160,47)" fg:x="5809" fg:w="19"/><text x="5.9236%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (171 samples, 0.17%)</title><rect x="5.5476%" y="1157" width="0.1670%" height="15" fill="rgb(216,222,40)" fg:x="5680" fg:w="171"/><text x="5.7976%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (54 samples, 0.05%)</title><rect x="5.6619%" y="1141" width="0.0527%" height="15" fill="rgb(234,217,39)" fg:x="5797" fg:w="54"/><text x="5.9119%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (54 samples, 0.05%)</title><rect x="5.6619%" y="1125" width="0.0527%" height="15" fill="rgb(207,178,40)" fg:x="5797" fg:w="54"/><text x="5.9119%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (54 samples, 0.05%)</title><rect x="5.6619%" y="1109" width="0.0527%" height="15" fill="rgb(221,136,13)" fg:x="5797" fg:w="54"/><text x="5.9119%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="5.6922%" y="1093" width="0.0225%" height="15" fill="rgb(249,199,10)" fg:x="5828" fg:w="23"/><text x="5.9422%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="5.6922%" y="1077" width="0.0225%" height="15" fill="rgb(249,222,13)" fg:x="5828" fg:w="23"/><text x="5.9422%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.02%)</title><rect x="5.6922%" y="1061" width="0.0225%" height="15" fill="rgb(244,185,38)" fg:x="5828" fg:w="23"/><text x="5.9422%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.02%)</title><rect x="5.6922%" y="1045" width="0.0225%" height="15" fill="rgb(236,202,9)" fg:x="5828" fg:w="23"/><text x="5.9422%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.02%)</title><rect x="5.6922%" y="1029" width="0.0225%" height="15" fill="rgb(250,229,37)" fg:x="5828" fg:w="23"/><text x="5.9422%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.02%)</title><rect x="5.6922%" y="1013" width="0.0225%" height="15" fill="rgb(206,174,23)" fg:x="5828" fg:w="23"/><text x="5.9422%" y="1023.50"></text></g><g><title>__rg_alloc (23 samples, 0.02%)</title><rect x="5.6922%" y="997" width="0.0225%" height="15" fill="rgb(211,33,43)" fg:x="5828" fg:w="23"/><text x="5.9422%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (23 samples, 0.02%)</title><rect x="5.6922%" y="981" width="0.0225%" height="15" fill="rgb(245,58,50)" fg:x="5828" fg:w="23"/><text x="5.9422%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="5.7146%" y="1157" width="0.0166%" height="15" fill="rgb(244,68,36)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (17 samples, 0.02%)</title><rect x="5.7146%" y="1141" width="0.0166%" height="15" fill="rgb(232,229,15)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="5.7146%" y="1125" width="0.0166%" height="15" fill="rgb(254,30,23)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="5.7146%" y="1109" width="0.0166%" height="15" fill="rgb(235,160,14)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="5.7146%" y="1093" width="0.0166%" height="15" fill="rgb(212,155,44)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="5.7146%" y="1077" width="0.0166%" height="15" fill="rgb(226,2,50)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="5.7146%" y="1061" width="0.0166%" height="15" fill="rgb(234,177,6)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1071.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="5.7146%" y="1045" width="0.0166%" height="15" fill="rgb(217,24,9)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="5.7146%" y="1029" width="0.0166%" height="15" fill="rgb(220,13,46)" fg:x="5851" fg:w="17"/><text x="5.9646%" y="1039.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (199 samples, 0.19%)</title><rect x="5.7313%" y="1157" width="0.1944%" height="15" fill="rgb(239,221,27)" fg:x="5868" fg:w="199"/><text x="5.9813%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (22 samples, 0.02%)</title><rect x="5.9041%" y="1141" width="0.0215%" height="15" fill="rgb(222,198,25)" fg:x="6045" fg:w="22"/><text x="6.1541%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="5.9256%" y="1157" width="0.0273%" height="15" fill="rgb(211,99,13)" fg:x="6067" fg:w="28"/><text x="6.1756%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="6.1962%" y="1029" width="0.0244%" height="15" fill="rgb(232,111,31)" fg:x="6344" fg:w="25"/><text x="6.4462%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="6.1962%" y="1013" width="0.0244%" height="15" fill="rgb(245,82,37)" fg:x="6344" fg:w="25"/><text x="6.4462%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.02%)</title><rect x="6.1962%" y="997" width="0.0244%" height="15" fill="rgb(227,149,46)" fg:x="6344" fg:w="25"/><text x="6.4462%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="6.1962%" y="981" width="0.0244%" height="15" fill="rgb(218,36,50)" fg:x="6344" fg:w="25"/><text x="6.4462%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="6.1962%" y="965" width="0.0244%" height="15" fill="rgb(226,80,48)" fg:x="6344" fg:w="25"/><text x="6.4462%" y="975.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="6.1962%" y="949" width="0.0244%" height="15" fill="rgb(238,224,15)" fg:x="6344" fg:w="25"/><text x="6.4462%" y="959.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="6.1962%" y="933" width="0.0244%" height="15" fill="rgb(241,136,10)" fg:x="6344" fg:w="25"/><text x="6.4462%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="6.1962%" y="917" width="0.0244%" height="15" fill="rgb(208,32,45)" fg:x="6344" fg:w="25"/><text x="6.4462%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (57 samples, 0.06%)</title><rect x="6.1854%" y="1125" width="0.0557%" height="15" fill="rgb(207,135,9)" fg:x="6333" fg:w="57"/><text x="6.4354%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="6.1962%" y="1109" width="0.0449%" height="15" fill="rgb(206,86,44)" fg:x="6344" fg:w="46"/><text x="6.4462%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="6.1962%" y="1093" width="0.0449%" height="15" fill="rgb(245,177,15)" fg:x="6344" fg:w="46"/><text x="6.4462%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.04%)</title><rect x="6.1962%" y="1077" width="0.0449%" height="15" fill="rgb(206,64,50)" fg:x="6344" fg:w="46"/><text x="6.4462%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.04%)</title><rect x="6.1962%" y="1061" width="0.0449%" height="15" fill="rgb(234,36,40)" fg:x="6344" fg:w="46"/><text x="6.4462%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.04%)</title><rect x="6.1962%" y="1045" width="0.0449%" height="15" fill="rgb(213,64,8)" fg:x="6344" fg:w="46"/><text x="6.4462%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.02%)</title><rect x="6.2206%" y="1029" width="0.0205%" height="15" fill="rgb(210,75,36)" fg:x="6369" fg:w="21"/><text x="6.4706%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="6.2206%" y="1013" width="0.0205%" height="15" fill="rgb(229,88,21)" fg:x="6369" fg:w="21"/><text x="6.4706%" y="1023.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (70 samples, 0.07%)</title><rect x="6.1854%" y="1141" width="0.0684%" height="15" fill="rgb(252,204,47)" fg:x="6333" fg:w="70"/><text x="6.4354%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (13 samples, 0.01%)</title><rect x="6.2411%" y="1125" width="0.0127%" height="15" fill="rgb(208,77,27)" fg:x="6390" fg:w="13"/><text x="6.4911%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="6.2411%" y="1109" width="0.0127%" height="15" fill="rgb(221,76,26)" fg:x="6390" fg:w="13"/><text x="6.4911%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.01%)</title><rect x="6.2411%" y="1093" width="0.0127%" height="15" fill="rgb(225,139,18)" fg:x="6390" fg:w="13"/><text x="6.4911%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.01%)</title><rect x="6.2411%" y="1077" width="0.0127%" height="15" fill="rgb(230,137,11)" fg:x="6390" fg:w="13"/><text x="6.4911%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.01%)</title><rect x="6.2411%" y="1061" width="0.0127%" height="15" fill="rgb(212,28,1)" fg:x="6390" fg:w="13"/><text x="6.4911%" y="1071.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (34 samples, 0.03%)</title><rect x="6.2538%" y="1141" width="0.0332%" height="15" fill="rgb(248,164,17)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="6.2538%" y="1125" width="0.0332%" height="15" fill="rgb(222,171,42)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="6.2538%" y="1109" width="0.0332%" height="15" fill="rgb(243,84,45)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (34 samples, 0.03%)</title><rect x="6.2538%" y="1093" width="0.0332%" height="15" fill="rgb(252,49,23)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (34 samples, 0.03%)</title><rect x="6.2538%" y="1077" width="0.0332%" height="15" fill="rgb(215,19,7)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (34 samples, 0.03%)</title><rect x="6.2538%" y="1061" width="0.0332%" height="15" fill="rgb(238,81,41)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="6.2538%" y="1045" width="0.0332%" height="15" fill="rgb(210,199,37)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="6.2538%" y="1029" width="0.0332%" height="15" fill="rgb(244,192,49)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (34 samples, 0.03%)</title><rect x="6.2538%" y="1013" width="0.0332%" height="15" fill="rgb(226,211,11)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="6.2538%" y="997" width="0.0332%" height="15" fill="rgb(236,162,54)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (34 samples, 0.03%)</title><rect x="6.2538%" y="981" width="0.0332%" height="15" fill="rgb(220,229,9)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34 samples, 0.03%)</title><rect x="6.2538%" y="965" width="0.0332%" height="15" fill="rgb(250,87,22)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.03%)</title><rect x="6.2538%" y="949" width="0.0332%" height="15" fill="rgb(239,43,17)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (34 samples, 0.03%)</title><rect x="6.2538%" y="933" width="0.0332%" height="15" fill="rgb(231,177,25)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (34 samples, 0.03%)</title><rect x="6.2538%" y="917" width="0.0332%" height="15" fill="rgb(219,179,1)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="6.2538%" y="901" width="0.0332%" height="15" fill="rgb(238,219,53)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (34 samples, 0.03%)</title><rect x="6.2538%" y="885" width="0.0332%" height="15" fill="rgb(232,167,36)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="6.2538%" y="869" width="0.0332%" height="15" fill="rgb(244,19,51)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (34 samples, 0.03%)</title><rect x="6.2538%" y="853" width="0.0332%" height="15" fill="rgb(224,6,22)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (34 samples, 0.03%)</title><rect x="6.2538%" y="837" width="0.0332%" height="15" fill="rgb(224,145,5)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="6.2538%" y="821" width="0.0332%" height="15" fill="rgb(234,130,49)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (34 samples, 0.03%)</title><rect x="6.2538%" y="805" width="0.0332%" height="15" fill="rgb(254,6,2)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="6.2538%" y="789" width="0.0332%" height="15" fill="rgb(208,96,46)" fg:x="6403" fg:w="34"/><text x="6.5038%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.01%)</title><rect x="6.2762%" y="773" width="0.0107%" height="15" fill="rgb(239,3,39)" fg:x="6426" fg:w="11"/><text x="6.5262%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.01%)</title><rect x="6.2762%" y="757" width="0.0107%" height="15" fill="rgb(233,210,1)" fg:x="6426" fg:w="11"/><text x="6.5262%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="6.3349%" y="949" width="0.0215%" height="15" fill="rgb(244,137,37)" fg:x="6486" fg:w="22"/><text x="6.5849%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (421 samples, 0.41%)</title><rect x="6.3563%" y="949" width="0.4112%" height="15" fill="rgb(240,136,2)" fg:x="6508" fg:w="421"/><text x="6.6063%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.02%)</title><rect x="6.9131%" y="933" width="0.0156%" height="15" fill="rgb(239,18,37)" fg:x="7078" fg:w="16"/><text x="7.1631%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,005 samples, 0.98%)</title><rect x="6.9287%" y="933" width="0.9816%" height="15" fill="rgb(218,185,22)" fg:x="7094" fg:w="1005"/><text x="7.1787%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (18 samples, 0.02%)</title><rect x="7.9103%" y="917" width="0.0176%" height="15" fill="rgb(225,218,4)" fg:x="8099" fg:w="18"/><text x="8.1603%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,695 samples, 1.66%)</title><rect x="6.2870%" y="997" width="1.6555%" height="15" fill="rgb(230,182,32)" fg:x="6437" fg:w="1695"/><text x="6.5370%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,695 samples, 1.66%)</title><rect x="6.2870%" y="981" width="1.6555%" height="15" fill="rgb(242,56,43)" fg:x="6437" fg:w="1695"/><text x="6.5370%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,695 samples, 1.66%)</title><rect x="6.2870%" y="965" width="1.6555%" height="15" fill="rgb(233,99,24)" fg:x="6437" fg:w="1695"/><text x="6.5370%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,203 samples, 1.17%)</title><rect x="6.7675%" y="949" width="1.1750%" height="15" fill="rgb(234,209,42)" fg:x="6929" fg:w="1203"/><text x="7.0175%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (33 samples, 0.03%)</title><rect x="7.9103%" y="933" width="0.0322%" height="15" fill="rgb(227,7,12)" fg:x="8099" fg:w="33"/><text x="8.1603%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (15 samples, 0.01%)</title><rect x="7.9278%" y="917" width="0.0147%" height="15" fill="rgb(245,203,43)" fg:x="8117" fg:w="15"/><text x="8.1778%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1141" width="1.6565%" height="15" fill="rgb(238,205,33)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1125" width="1.6565%" height="15" fill="rgb(231,56,7)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1109" width="1.6565%" height="15" fill="rgb(244,186,29)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1093" width="1.6565%" height="15" fill="rgb(234,111,31)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1077" width="1.6565%" height="15" fill="rgb(241,149,10)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1061" width="1.6565%" height="15" fill="rgb(249,206,44)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1045" width="1.6565%" height="15" fill="rgb(251,153,30)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1029" width="1.6565%" height="15" fill="rgb(239,152,38)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,696 samples, 1.66%)</title><rect x="6.2870%" y="1013" width="1.6565%" height="15" fill="rgb(249,139,47)" fg:x="6437" fg:w="1696"/><text x="6.5370%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,042 samples, 1.99%)</title><rect x="5.9530%" y="1157" width="1.9944%" height="15" fill="rgb(244,64,35)" fg:x="6095" fg:w="2042"/><text x="6.2030%" y="1167.50">&lt;..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="7.9474%" y="1157" width="0.0283%" height="15" fill="rgb(216,46,15)" fg:x="8137" fg:w="29"/><text x="8.1974%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (17 samples, 0.02%)</title><rect x="7.9796%" y="1157" width="0.0166%" height="15" fill="rgb(250,74,19)" fg:x="8170" fg:w="17"/><text x="8.2296%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (75 samples, 0.07%)</title><rect x="7.9962%" y="1157" width="0.0733%" height="15" fill="rgb(249,42,33)" fg:x="8187" fg:w="75"/><text x="8.2462%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="8.0695%" y="1157" width="0.0225%" height="15" fill="rgb(242,149,17)" fg:x="8262" fg:w="23"/><text x="8.3195%" y="1167.50"></text></g><g><title>[libc.so.6] (27 samples, 0.03%)</title><rect x="8.0929%" y="1157" width="0.0264%" height="15" fill="rgb(244,29,21)" fg:x="8286" fg:w="27"/><text x="8.3429%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (27 samples, 0.03%)</title><rect x="8.0929%" y="1141" width="0.0264%" height="15" fill="rgb(220,130,37)" fg:x="8286" fg:w="27"/><text x="8.3429%" y="1151.50"></text></g><g><title>___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="8.1251%" y="1157" width="0.0234%" height="15" fill="rgb(211,67,2)" fg:x="8319" fg:w="24"/><text x="8.3751%" y="1167.50"></text></g><g><title>__clock_gettime_2 (144 samples, 0.14%)</title><rect x="8.1486%" y="1157" width="0.1406%" height="15" fill="rgb(235,68,52)" fg:x="8343" fg:w="144"/><text x="8.3986%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (97 samples, 0.09%)</title><rect x="8.2902%" y="1157" width="0.0947%" height="15" fill="rgb(246,142,3)" fg:x="8488" fg:w="97"/><text x="8.5402%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (43 samples, 0.04%)</title><rect x="8.3849%" y="1157" width="0.0420%" height="15" fill="rgb(241,25,7)" fg:x="8585" fg:w="43"/><text x="8.6349%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (23 samples, 0.02%)</title><rect x="8.4045%" y="1141" width="0.0225%" height="15" fill="rgb(242,119,39)" fg:x="8605" fg:w="23"/><text x="8.6545%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (39 samples, 0.04%)</title><rect x="8.4269%" y="1157" width="0.0381%" height="15" fill="rgb(241,98,45)" fg:x="8628" fg:w="39"/><text x="8.6769%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (129 samples, 0.13%)</title><rect x="8.4650%" y="1157" width="0.1260%" height="15" fill="rgb(254,28,30)" fg:x="8667" fg:w="129"/><text x="8.7150%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="8.6526%" y="725" width="0.0137%" height="15" fill="rgb(241,142,54)" fg:x="8859" fg:w="14"/><text x="8.9026%" y="735.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="8.6770%" y="709" width="0.0117%" height="15" fill="rgb(222,85,15)" fg:x="8884" fg:w="12"/><text x="8.9270%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (12 samples, 0.01%)</title><rect x="8.6770%" y="693" width="0.0117%" height="15" fill="rgb(210,85,47)" fg:x="8884" fg:w="12"/><text x="8.9270%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.01%)</title><rect x="8.6770%" y="677" width="0.0117%" height="15" fill="rgb(224,206,25)" fg:x="8884" fg:w="12"/><text x="8.9270%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.01%)</title><rect x="8.6770%" y="661" width="0.0117%" height="15" fill="rgb(243,201,19)" fg:x="8884" fg:w="12"/><text x="8.9270%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="8.6945%" y="613" width="0.0137%" height="15" fill="rgb(236,59,4)" fg:x="8902" fg:w="14"/><text x="8.9445%" y="623.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="8.6926%" y="709" width="0.0166%" height="15" fill="rgb(254,179,45)" fg:x="8900" fg:w="17"/><text x="8.9426%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (17 samples, 0.02%)</title><rect x="8.6926%" y="693" width="0.0166%" height="15" fill="rgb(226,14,10)" fg:x="8900" fg:w="17"/><text x="8.9426%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.02%)</title><rect x="8.6936%" y="677" width="0.0156%" height="15" fill="rgb(244,27,41)" fg:x="8901" fg:w="16"/><text x="8.9436%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="8.6936%" y="661" width="0.0156%" height="15" fill="rgb(235,35,32)" fg:x="8901" fg:w="16"/><text x="8.9436%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="8.6945%" y="645" width="0.0147%" height="15" fill="rgb(218,68,31)" fg:x="8902" fg:w="15"/><text x="8.9445%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="8.6945%" y="629" width="0.0147%" height="15" fill="rgb(207,120,37)" fg:x="8902" fg:w="15"/><text x="8.9445%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="8.7092%" y="709" width="0.0176%" height="15" fill="rgb(227,98,0)" fg:x="8917" fg:w="18"/><text x="8.9592%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (17 samples, 0.02%)</title><rect x="8.7102%" y="693" width="0.0166%" height="15" fill="rgb(207,7,3)" fg:x="8918" fg:w="17"/><text x="8.9602%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="8.7102%" y="677" width="0.0166%" height="15" fill="rgb(206,98,19)" fg:x="8918" fg:w="17"/><text x="8.9602%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="8.7121%" y="661" width="0.0147%" height="15" fill="rgb(217,5,26)" fg:x="8920" fg:w="15"/><text x="8.9621%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="8.7121%" y="645" width="0.0147%" height="15" fill="rgb(235,190,38)" fg:x="8920" fg:w="15"/><text x="8.9621%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="8.7121%" y="629" width="0.0147%" height="15" fill="rgb(247,86,24)" fg:x="8920" fg:w="15"/><text x="8.9621%" y="639.50"></text></g><g><title>event_listener::Inner::lock (113 samples, 0.11%)</title><rect x="8.7268%" y="709" width="0.1104%" height="15" fill="rgb(205,101,16)" fg:x="8935" fg:w="113"/><text x="8.9768%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (112 samples, 0.11%)</title><rect x="8.7278%" y="693" width="0.1094%" height="15" fill="rgb(246,168,33)" fg:x="8936" fg:w="112"/><text x="8.9778%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (108 samples, 0.11%)</title><rect x="8.7317%" y="677" width="0.1055%" height="15" fill="rgb(231,114,1)" fg:x="8940" fg:w="108"/><text x="8.9817%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (92 samples, 0.09%)</title><rect x="8.7473%" y="661" width="0.0899%" height="15" fill="rgb(207,184,53)" fg:x="8956" fg:w="92"/><text x="8.9973%" y="671.50"></text></g><g><title>___pthread_mutex_lock (92 samples, 0.09%)</title><rect x="8.7473%" y="645" width="0.0899%" height="15" fill="rgb(224,95,51)" fg:x="8956" fg:w="92"/><text x="8.9973%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (17 samples, 0.02%)</title><rect x="8.8205%" y="629" width="0.0166%" height="15" fill="rgb(212,188,45)" fg:x="9031" fg:w="17"/><text x="9.0705%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (192 samples, 0.19%)</title><rect x="8.6662%" y="725" width="0.1875%" height="15" fill="rgb(223,154,38)" fg:x="8873" fg:w="192"/><text x="8.9162%" y="735.50"></text></g><g><title>event_listener::List::remove (17 samples, 0.02%)</title><rect x="8.8371%" y="709" width="0.0166%" height="15" fill="rgb(251,22,52)" fg:x="9048" fg:w="17"/><text x="9.0871%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.01%)</title><rect x="8.8430%" y="693" width="0.0107%" height="15" fill="rgb(229,209,22)" fg:x="9054" fg:w="11"/><text x="9.0930%" y="703.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="8.8430%" y="677" width="0.0107%" height="15" fill="rgb(234,138,34)" fg:x="9054" fg:w="11"/><text x="9.0930%" y="687.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="8.8430%" y="661" width="0.0107%" height="15" fill="rgb(212,95,11)" fg:x="9054" fg:w="11"/><text x="9.0930%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (837 samples, 0.82%)</title><rect x="8.8537%" y="725" width="0.8175%" height="15" fill="rgb(240,179,47)" fg:x="9065" fg:w="837"/><text x="9.1037%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (781 samples, 0.76%)</title><rect x="9.7191%" y="709" width="0.7628%" height="15" fill="rgb(240,163,11)" fg:x="9951" fg:w="781"/><text x="9.9691%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (435 samples, 0.42%)</title><rect x="10.7075%" y="677" width="0.4249%" height="15" fill="rgb(236,37,12)" fg:x="10963" fg:w="435"/><text x="10.9575%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (46 samples, 0.04%)</title><rect x="11.1324%" y="677" width="0.0449%" height="15" fill="rgb(232,164,16)" fg:x="11398" fg:w="46"/><text x="11.3824%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (41 samples, 0.04%)</title><rect x="11.1373%" y="661" width="0.0400%" height="15" fill="rgb(244,205,15)" fg:x="11403" fg:w="41"/><text x="11.3873%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (41 samples, 0.04%)</title><rect x="11.1373%" y="645" width="0.0400%" height="15" fill="rgb(223,117,47)" fg:x="11403" fg:w="41"/><text x="11.3873%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (41 samples, 0.04%)</title><rect x="11.1373%" y="629" width="0.0400%" height="15" fill="rgb(244,107,35)" fg:x="11403" fg:w="41"/><text x="11.3873%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (486 samples, 0.47%)</title><rect x="11.1793%" y="677" width="0.4747%" height="15" fill="rgb(205,140,8)" fg:x="11446" fg:w="486"/><text x="11.4293%" y="687.50"></text></g><g><title>core::ptr::read (486 samples, 0.47%)</title><rect x="11.1793%" y="661" width="0.4747%" height="15" fill="rgb(228,84,46)" fg:x="11446" fg:w="486"/><text x="11.4293%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (486 samples, 0.47%)</title><rect x="11.1793%" y="645" width="0.4747%" height="15" fill="rgb(254,188,9)" fg:x="11446" fg:w="486"/><text x="11.4293%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (882 samples, 0.86%)</title><rect x="11.6539%" y="677" width="0.8614%" height="15" fill="rgb(206,112,54)" fg:x="11932" fg:w="882"/><text x="11.9039%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (882 samples, 0.86%)</title><rect x="11.6539%" y="661" width="0.8614%" height="15" fill="rgb(216,84,49)" fg:x="11932" fg:w="882"/><text x="11.9039%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (244 samples, 0.24%)</title><rect x="12.5154%" y="677" width="0.2383%" height="15" fill="rgb(214,194,35)" fg:x="12814" fg:w="244"/><text x="12.7654%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (235 samples, 0.23%)</title><rect x="12.5242%" y="661" width="0.2295%" height="15" fill="rgb(249,28,3)" fg:x="12823" fg:w="235"/><text x="12.7742%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,329 samples, 2.27%)</title><rect x="10.4819%" y="709" width="2.2747%" height="15" fill="rgb(222,56,52)" fg:x="10732" fg:w="2329"/><text x="10.7319%" y="719.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,252 samples, 2.20%)</title><rect x="10.5571%" y="693" width="2.1995%" height="15" fill="rgb(245,217,50)" fg:x="10809" fg:w="2252"/><text x="10.8071%" y="703.50">c..</text></g><g><title>async_executor::State::notify (11 samples, 0.01%)</title><rect x="12.7840%" y="613" width="0.0107%" height="15" fill="rgb(213,201,24)" fg:x="13089" fg:w="11"/><text x="13.0340%" y="623.50"></text></g><g><title>event_listener::List::notify (14 samples, 0.01%)</title><rect x="12.7840%" y="693" width="0.0137%" height="15" fill="rgb(248,116,28)" fg:x="13089" fg:w="14"/><text x="13.0340%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (14 samples, 0.01%)</title><rect x="12.7840%" y="677" width="0.0137%" height="15" fill="rgb(219,72,43)" fg:x="13089" fg:w="14"/><text x="13.0340%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (14 samples, 0.01%)</title><rect x="12.7840%" y="661" width="0.0137%" height="15" fill="rgb(209,138,14)" fg:x="13089" fg:w="14"/><text x="13.0340%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (14 samples, 0.01%)</title><rect x="12.7840%" y="645" width="0.0137%" height="15" fill="rgb(222,18,33)" fg:x="13089" fg:w="14"/><text x="13.0340%" y="655.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (14 samples, 0.01%)</title><rect x="12.7840%" y="629" width="0.0137%" height="15" fill="rgb(213,199,7)" fg:x="13089" fg:w="14"/><text x="13.0340%" y="639.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,628 samples, 3.54%)</title><rect x="9.6712%" y="725" width="3.5435%" height="15" fill="rgb(250,110,10)" fg:x="9902" fg:w="3628"/><text x="9.9212%" y="735.50">asyn..</text></g><g><title>event_listener::Event::notify (469 samples, 0.46%)</title><rect x="12.7566%" y="709" width="0.4581%" height="15" fill="rgb(248,123,6)" fg:x="13061" fg:w="469"/><text x="13.0066%" y="719.50"></text></g><g><title>event_listener::full_fence (427 samples, 0.42%)</title><rect x="12.7976%" y="693" width="0.4170%" height="15" fill="rgb(206,91,31)" fg:x="13103" fg:w="427"/><text x="13.0476%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (418 samples, 0.41%)</title><rect x="12.8064%" y="677" width="0.4083%" height="15" fill="rgb(211,154,13)" fg:x="13112" fg:w="418"/><text x="13.0564%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (418 samples, 0.41%)</title><rect x="12.8064%" y="661" width="0.4083%" height="15" fill="rgb(225,148,7)" fg:x="13112" fg:w="418"/><text x="13.0564%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (418 samples, 0.41%)</title><rect x="12.8064%" y="645" width="0.4083%" height="15" fill="rgb(220,160,43)" fg:x="13112" fg:w="418"/><text x="13.0564%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (26 samples, 0.03%)</title><rect x="13.2147%" y="725" width="0.0254%" height="15" fill="rgb(213,52,39)" fg:x="13530" fg:w="26"/><text x="13.4647%" y="735.50"></text></g><g><title>event_listener::Inner::lock (19 samples, 0.02%)</title><rect x="13.2606%" y="677" width="0.0186%" height="15" fill="rgb(243,137,7)" fg:x="13577" fg:w="19"/><text x="13.5106%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.02%)</title><rect x="13.2606%" y="661" width="0.0186%" height="15" fill="rgb(230,79,13)" fg:x="13577" fg:w="19"/><text x="13.5106%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="13.2606%" y="645" width="0.0186%" height="15" fill="rgb(247,105,23)" fg:x="13577" fg:w="19"/><text x="13.5106%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.02%)</title><rect x="13.2635%" y="629" width="0.0156%" height="15" fill="rgb(223,179,41)" fg:x="13580" fg:w="16"/><text x="13.5135%" y="639.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.02%)</title><rect x="13.2635%" y="613" width="0.0156%" height="15" fill="rgb(218,9,34)" fg:x="13580" fg:w="16"/><text x="13.5135%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="13.2557%" y="693" width="0.0244%" height="15" fill="rgb(222,106,8)" fg:x="13572" fg:w="25"/><text x="13.5057%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (57 samples, 0.06%)</title><rect x="13.2401%" y="725" width="0.0557%" height="15" fill="rgb(211,220,0)" fg:x="13556" fg:w="57"/><text x="13.4901%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (41 samples, 0.04%)</title><rect x="13.2557%" y="709" width="0.0400%" height="15" fill="rgb(229,52,16)" fg:x="13572" fg:w="41"/><text x="13.5057%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (16 samples, 0.02%)</title><rect x="13.2801%" y="693" width="0.0156%" height="15" fill="rgb(212,155,18)" fg:x="13597" fg:w="16"/><text x="13.5301%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="13.2801%" y="677" width="0.0156%" height="15" fill="rgb(242,21,14)" fg:x="13597" fg:w="16"/><text x="13.5301%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.02%)</title><rect x="13.2801%" y="661" width="0.0156%" height="15" fill="rgb(222,19,48)" fg:x="13597" fg:w="16"/><text x="13.5301%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.02%)</title><rect x="13.2801%" y="645" width="0.0156%" height="15" fill="rgb(232,45,27)" fg:x="13597" fg:w="16"/><text x="13.5301%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="13.2967%" y="709" width="0.0244%" height="15" fill="rgb(249,103,42)" fg:x="13614" fg:w="25"/><text x="13.5467%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="13.2967%" y="693" width="0.0244%" height="15" fill="rgb(246,81,33)" fg:x="13614" fg:w="25"/><text x="13.5467%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="13.2967%" y="677" width="0.0244%" height="15" fill="rgb(252,33,42)" fg:x="13614" fg:w="25"/><text x="13.5467%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="13.3221%" y="629" width="0.0107%" height="15" fill="rgb(209,212,41)" fg:x="13640" fg:w="11"/><text x="13.5721%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="13.3212%" y="709" width="0.0127%" height="15" fill="rgb(207,154,6)" fg:x="13639" fg:w="13"/><text x="13.5712%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="13.3212%" y="693" width="0.0127%" height="15" fill="rgb(223,64,47)" fg:x="13639" fg:w="13"/><text x="13.5712%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="13.3212%" y="677" width="0.0127%" height="15" fill="rgb(211,161,38)" fg:x="13639" fg:w="13"/><text x="13.5712%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="13.3221%" y="661" width="0.0117%" height="15" fill="rgb(219,138,40)" fg:x="13640" fg:w="12"/><text x="13.5721%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="13.3221%" y="645" width="0.0117%" height="15" fill="rgb(241,228,46)" fg:x="13640" fg:w="12"/><text x="13.5721%" y="655.50"></text></g><g><title>event_listener::Inner::lock (19 samples, 0.02%)</title><rect x="13.3378%" y="709" width="0.0186%" height="15" fill="rgb(223,209,38)" fg:x="13656" fg:w="19"/><text x="13.5878%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.02%)</title><rect x="13.3378%" y="693" width="0.0186%" height="15" fill="rgb(236,164,45)" fg:x="13656" fg:w="19"/><text x="13.5878%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="13.3378%" y="677" width="0.0186%" height="15" fill="rgb(231,15,5)" fg:x="13656" fg:w="19"/><text x="13.5878%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="13.3378%" y="661" width="0.0186%" height="15" fill="rgb(252,35,15)" fg:x="13656" fg:w="19"/><text x="13.5878%" y="671.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="13.3378%" y="645" width="0.0186%" height="15" fill="rgb(248,181,18)" fg:x="13656" fg:w="19"/><text x="13.5878%" y="655.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,880 samples, 4.77%)</title><rect x="8.5959%" y="805" width="4.7663%" height="15" fill="rgb(233,39,42)" fg:x="8801" fg:w="4880"/><text x="8.8459%" y="815.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,880 samples, 4.77%)</title><rect x="8.5959%" y="789" width="4.7663%" height="15" fill="rgb(238,110,33)" fg:x="8801" fg:w="4880"/><text x="8.8459%" y="799.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,880 samples, 4.77%)</title><rect x="8.5959%" y="773" width="4.7663%" height="15" fill="rgb(233,195,10)" fg:x="8801" fg:w="4880"/><text x="8.8459%" y="783.50">&lt;async..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,880 samples, 4.77%)</title><rect x="8.5959%" y="757" width="4.7663%" height="15" fill="rgb(254,105,3)" fg:x="8801" fg:w="4880"/><text x="8.8459%" y="767.50">&lt;async..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,880 samples, 4.77%)</title><rect x="8.5959%" y="741" width="4.7663%" height="15" fill="rgb(221,225,9)" fg:x="8801" fg:w="4880"/><text x="8.8459%" y="751.50">&lt;async..</text></g><g><title>event_listener::Event::listen (68 samples, 0.07%)</title><rect x="13.2958%" y="725" width="0.0664%" height="15" fill="rgb(224,227,45)" fg:x="13613" fg:w="68"/><text x="13.5458%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::ValueAccess&gt;::as_str (16 samples, 0.02%)</title><rect x="13.3944%" y="709" width="0.0156%" height="15" fill="rgb(229,198,43)" fg:x="13714" fg:w="16"/><text x="13.6444%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,248 samples, 1.22%)</title><rect x="13.4100%" y="709" width="1.2189%" height="15" fill="rgb(206,209,35)" fg:x="13730" fg:w="1248"/><text x="13.6600%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.01%)</title><rect x="14.6290%" y="709" width="0.0147%" height="15" fill="rgb(245,195,53)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.01%)</title><rect x="14.6290%" y="693" width="0.0147%" height="15" fill="rgb(240,92,26)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.01%)</title><rect x="14.6290%" y="677" width="0.0147%" height="15" fill="rgb(207,40,23)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.01%)</title><rect x="14.6290%" y="661" width="0.0147%" height="15" fill="rgb(223,111,35)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="14.6290%" y="645" width="0.0147%" height="15" fill="rgb(229,147,28)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="14.6290%" y="629" width="0.0147%" height="15" fill="rgb(211,29,28)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="14.6290%" y="613" width="0.0147%" height="15" fill="rgb(228,72,33)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="14.6290%" y="597" width="0.0147%" height="15" fill="rgb(205,214,31)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="14.6290%" y="581" width="0.0147%" height="15" fill="rgb(224,111,15)" fg:x="14978" fg:w="15"/><text x="14.8790%" y="591.50"></text></g><g><title>rust_alloc (26 samples, 0.03%)</title><rect x="14.6524%" y="661" width="0.0254%" height="15" fill="rgb(253,21,26)" fg:x="15002" fg:w="26"/><text x="14.9024%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (22 samples, 0.02%)</title><rect x="14.6954%" y="645" width="0.0215%" height="15" fill="rgb(245,139,43)" fg:x="15046" fg:w="22"/><text x="14.9454%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (22 samples, 0.02%)</title><rect x="14.6954%" y="629" width="0.0215%" height="15" fill="rgb(252,170,7)" fg:x="15046" fg:w="22"/><text x="14.9454%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (22 samples, 0.02%)</title><rect x="14.6954%" y="613" width="0.0215%" height="15" fill="rgb(231,118,14)" fg:x="15046" fg:w="22"/><text x="14.9454%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (22 samples, 0.02%)</title><rect x="14.6954%" y="597" width="0.0215%" height="15" fill="rgb(238,83,0)" fg:x="15046" fg:w="22"/><text x="14.9454%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (22 samples, 0.02%)</title><rect x="14.6954%" y="581" width="0.0215%" height="15" fill="rgb(221,39,39)" fg:x="15046" fg:w="22"/><text x="14.9454%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.02%)</title><rect x="14.7344%" y="533" width="0.0156%" height="15" fill="rgb(222,119,46)" fg:x="15086" fg:w="16"/><text x="14.9844%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="14.7344%" y="517" width="0.0156%" height="15" fill="rgb(222,165,49)" fg:x="15086" fg:w="16"/><text x="14.9844%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.04%)</title><rect x="14.7276%" y="581" width="0.0352%" height="15" fill="rgb(219,113,52)" fg:x="15079" fg:w="36"/><text x="14.9776%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.04%)</title><rect x="14.7276%" y="565" width="0.0352%" height="15" fill="rgb(214,7,15)" fg:x="15079" fg:w="36"/><text x="14.9776%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (33 samples, 0.03%)</title><rect x="14.7305%" y="549" width="0.0322%" height="15" fill="rgb(235,32,4)" fg:x="15082" fg:w="33"/><text x="14.9805%" y="559.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="14.7501%" y="533" width="0.0127%" height="15" fill="rgb(238,90,54)" fg:x="15102" fg:w="13"/><text x="15.0001%" y="543.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="14.7501%" y="517" width="0.0127%" height="15" fill="rgb(213,208,19)" fg:x="15102" fg:w="13"/><text x="15.0001%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (48 samples, 0.05%)</title><rect x="14.7266%" y="597" width="0.0469%" height="15" fill="rgb(233,156,4)" fg:x="15078" fg:w="48"/><text x="14.9766%" y="607.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="14.7628%" y="581" width="0.0107%" height="15" fill="rgb(207,194,5)" fg:x="15115" fg:w="11"/><text x="15.0128%" y="591.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="14.7628%" y="565" width="0.0107%" height="15" fill="rgb(206,111,30)" fg:x="15115" fg:w="11"/><text x="15.0128%" y="575.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="14.7628%" y="549" width="0.0107%" height="15" fill="rgb(243,70,54)" fg:x="15115" fg:w="11"/><text x="15.0128%" y="559.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="14.7628%" y="533" width="0.0107%" height="15" fill="rgb(242,28,8)" fg:x="15115" fg:w="11"/><text x="15.0128%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (73 samples, 0.07%)</title><rect x="14.7169%" y="613" width="0.0713%" height="15" fill="rgb(219,106,18)" fg:x="15068" fg:w="73"/><text x="14.9669%" y="623.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="14.7764%" y="597" width="0.0117%" height="15" fill="rgb(244,222,10)" fg:x="15129" fg:w="12"/><text x="15.0264%" y="607.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="14.7764%" y="581" width="0.0117%" height="15" fill="rgb(236,179,52)" fg:x="15129" fg:w="12"/><text x="15.0264%" y="591.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="14.7764%" y="565" width="0.0117%" height="15" fill="rgb(213,23,39)" fg:x="15129" fg:w="12"/><text x="15.0264%" y="575.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="14.7764%" y="549" width="0.0117%" height="15" fill="rgb(238,48,10)" fg:x="15129" fg:w="12"/><text x="15.0264%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (33 samples, 0.03%)</title><rect x="14.8057%" y="597" width="0.0322%" height="15" fill="rgb(251,196,23)" fg:x="15159" fg:w="33"/><text x="15.0557%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (382 samples, 0.37%)</title><rect x="14.7169%" y="645" width="0.3731%" height="15" fill="rgb(250,152,24)" fg:x="15068" fg:w="382"/><text x="14.9669%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (382 samples, 0.37%)</title><rect x="14.7169%" y="629" width="0.3731%" height="15" fill="rgb(209,150,17)" fg:x="15068" fg:w="382"/><text x="14.9669%" y="639.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (309 samples, 0.30%)</title><rect x="14.7882%" y="613" width="0.3018%" height="15" fill="rgb(234,202,34)" fg:x="15141" fg:w="309"/><text x="15.0382%" y="623.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (258 samples, 0.25%)</title><rect x="14.8380%" y="597" width="0.2520%" height="15" fill="rgb(253,148,53)" fg:x="15192" fg:w="258"/><text x="15.0880%" y="607.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (258 samples, 0.25%)</title><rect x="14.8380%" y="581" width="0.2520%" height="15" fill="rgb(218,129,16)" fg:x="15192" fg:w="258"/><text x="15.0880%" y="591.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (258 samples, 0.25%)</title><rect x="14.8380%" y="565" width="0.2520%" height="15" fill="rgb(216,85,19)" fg:x="15192" fg:w="258"/><text x="15.0880%" y="575.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (13 samples, 0.01%)</title><rect x="15.0929%" y="629" width="0.0127%" height="15" fill="rgb(235,228,7)" fg:x="15453" fg:w="13"/><text x="15.3429%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (20 samples, 0.02%)</title><rect x="15.1066%" y="613" width="0.0195%" height="15" fill="rgb(245,175,0)" fg:x="15467" fg:w="20"/><text x="15.3566%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (20 samples, 0.02%)</title><rect x="15.1066%" y="597" width="0.0195%" height="15" fill="rgb(208,168,36)" fg:x="15467" fg:w="20"/><text x="15.3566%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="15.1066%" y="581" width="0.0195%" height="15" fill="rgb(246,171,24)" fg:x="15467" fg:w="20"/><text x="15.3566%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (19 samples, 0.02%)</title><rect x="15.1261%" y="613" width="0.0186%" height="15" fill="rgb(215,142,24)" fg:x="15487" fg:w="19"/><text x="15.3761%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (19 samples, 0.02%)</title><rect x="15.1261%" y="597" width="0.0186%" height="15" fill="rgb(250,187,7)" fg:x="15487" fg:w="19"/><text x="15.3761%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (65 samples, 0.06%)</title><rect x="15.0900%" y="645" width="0.0635%" height="15" fill="rgb(228,66,33)" fg:x="15450" fg:w="65"/><text x="15.3400%" y="655.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (49 samples, 0.05%)</title><rect x="15.1056%" y="629" width="0.0479%" height="15" fill="rgb(234,215,21)" fg:x="15466" fg:w="49"/><text x="15.3556%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (26 samples, 0.03%)</title><rect x="15.1632%" y="597" width="0.0254%" height="15" fill="rgb(222,191,20)" fg:x="15525" fg:w="26"/><text x="15.4132%" y="607.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (21 samples, 0.02%)</title><rect x="15.1681%" y="581" width="0.0205%" height="15" fill="rgb(245,79,54)" fg:x="15530" fg:w="21"/><text x="15.4181%" y="591.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (12 samples, 0.01%)</title><rect x="15.1769%" y="565" width="0.0117%" height="15" fill="rgb(240,10,37)" fg:x="15539" fg:w="12"/><text x="15.4269%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="15.1886%" y="597" width="0.0137%" height="15" fill="rgb(214,192,32)" fg:x="15551" fg:w="14"/><text x="15.4386%" y="607.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="15.1896%" y="581" width="0.0127%" height="15" fill="rgb(209,36,54)" fg:x="15552" fg:w="13"/><text x="15.4396%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (51 samples, 0.05%)</title><rect x="15.1534%" y="645" width="0.0498%" height="15" fill="rgb(220,10,11)" fg:x="15515" fg:w="51"/><text x="15.4034%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="15.1593%" y="629" width="0.0440%" height="15" fill="rgb(221,106,17)" fg:x="15521" fg:w="45"/><text x="15.4093%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="15.1603%" y="613" width="0.0430%" height="15" fill="rgb(251,142,44)" fg:x="15522" fg:w="44"/><text x="15.4103%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::empty (34 samples, 0.03%)</title><rect x="15.2033%" y="645" width="0.0332%" height="15" fill="rgb(238,13,15)" fg:x="15566" fg:w="34"/><text x="15.4533%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (34 samples, 0.03%)</title><rect x="15.2033%" y="629" width="0.0332%" height="15" fill="rgb(208,107,27)" fg:x="15566" fg:w="34"/><text x="15.4533%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (882 samples, 0.86%)</title><rect x="14.6524%" y="693" width="0.8614%" height="15" fill="rgb(205,136,37)" fg:x="15002" fg:w="882"/><text x="14.9024%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (882 samples, 0.86%)</title><rect x="14.6524%" y="677" width="0.8614%" height="15" fill="rgb(250,205,27)" fg:x="15002" fg:w="882"/><text x="14.9024%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (846 samples, 0.83%)</title><rect x="14.6876%" y="661" width="0.8263%" height="15" fill="rgb(210,80,43)" fg:x="15038" fg:w="846"/><text x="14.9376%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (284 samples, 0.28%)</title><rect x="15.2365%" y="645" width="0.2774%" height="15" fill="rgb(247,160,36)" fg:x="15600" fg:w="284"/><text x="15.4865%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (284 samples, 0.28%)</title><rect x="15.2365%" y="629" width="0.2774%" height="15" fill="rgb(234,13,49)" fg:x="15600" fg:w="284"/><text x="15.4865%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,216 samples, 2.16%)</title><rect x="13.3622%" y="725" width="2.1644%" height="15" fill="rgb(234,122,0)" fg:x="13681" fg:w="2216"/><text x="13.6122%" y="735.50">&lt;..</text></g><g><title>rust_alloc (904 samples, 0.88%)</title><rect x="14.6436%" y="709" width="0.8829%" height="15" fill="rgb(207,146,38)" fg:x="14993" fg:w="904"/><text x="14.8936%" y="719.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="15.5138%" y="693" width="0.0127%" height="15" fill="rgb(207,177,25)" fg:x="15884" fg:w="13"/><text x="15.7638%" y="703.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="15.7951%" y="565" width="0.0117%" height="15" fill="rgb(211,178,42)" fg:x="16172" fg:w="12"/><text x="16.0451%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="15.8127%" y="549" width="0.0117%" height="15" fill="rgb(230,69,54)" fg:x="16190" fg:w="12"/><text x="16.0627%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (12 samples, 0.01%)</title><rect x="15.8127%" y="533" width="0.0117%" height="15" fill="rgb(214,135,41)" fg:x="16190" fg:w="12"/><text x="16.0627%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (11 samples, 0.01%)</title><rect x="15.8137%" y="517" width="0.0107%" height="15" fill="rgb(237,67,25)" fg:x="16191" fg:w="11"/><text x="16.0637%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::empty (28 samples, 0.03%)</title><rect x="15.8254%" y="549" width="0.0273%" height="15" fill="rgb(222,189,50)" fg:x="16203" fg:w="28"/><text x="16.0754%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (28 samples, 0.03%)</title><rect x="15.8254%" y="533" width="0.0273%" height="15" fill="rgb(245,148,34)" fg:x="16203" fg:w="28"/><text x="16.0754%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (432 samples, 0.42%)</title><rect x="15.7922%" y="597" width="0.4219%" height="15" fill="rgb(222,29,6)" fg:x="16169" fg:w="432"/><text x="16.0422%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (432 samples, 0.42%)</title><rect x="15.7922%" y="581" width="0.4219%" height="15" fill="rgb(221,189,43)" fg:x="16169" fg:w="432"/><text x="16.0422%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (417 samples, 0.41%)</title><rect x="15.8068%" y="565" width="0.4073%" height="15" fill="rgb(207,36,27)" fg:x="16184" fg:w="417"/><text x="16.0568%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (370 samples, 0.36%)</title><rect x="15.8528%" y="549" width="0.3614%" height="15" fill="rgb(217,90,24)" fg:x="16231" fg:w="370"/><text x="16.1028%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (370 samples, 0.36%)</title><rect x="15.8528%" y="533" width="0.3614%" height="15" fill="rgb(224,66,35)" fg:x="16231" fg:w="370"/><text x="16.1028%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (451 samples, 0.44%)</title><rect x="15.7815%" y="709" width="0.4405%" height="15" fill="rgb(221,13,50)" fg:x="16158" fg:w="451"/><text x="16.0315%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (451 samples, 0.44%)</title><rect x="15.7815%" y="693" width="0.4405%" height="15" fill="rgb(236,68,49)" fg:x="16158" fg:w="451"/><text x="16.0315%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (451 samples, 0.44%)</title><rect x="15.7815%" y="677" width="0.4405%" height="15" fill="rgb(229,146,28)" fg:x="16158" fg:w="451"/><text x="16.0315%" y="687.50"></text></g><g><title>alloc::alloc::alloc (450 samples, 0.44%)</title><rect x="15.7824%" y="661" width="0.4395%" height="15" fill="rgb(225,31,38)" fg:x="16159" fg:w="450"/><text x="16.0324%" y="671.50"></text></g><g><title>__rg_alloc (450 samples, 0.44%)</title><rect x="15.7824%" y="645" width="0.4395%" height="15" fill="rgb(250,208,3)" fg:x="16159" fg:w="450"/><text x="16.0324%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (450 samples, 0.44%)</title><rect x="15.7824%" y="629" width="0.4395%" height="15" fill="rgb(246,54,23)" fg:x="16159" fg:w="450"/><text x="16.0324%" y="639.50"></text></g><g><title>rust_alloc (450 samples, 0.44%)</title><rect x="15.7824%" y="613" width="0.4395%" height="15" fill="rgb(243,76,11)" fg:x="16159" fg:w="450"/><text x="16.0324%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (14 samples, 0.01%)</title><rect x="16.2219%" y="709" width="0.0137%" height="15" fill="rgb(245,21,50)" fg:x="16609" fg:w="14"/><text x="16.4719%" y="719.50"></text></g><g><title>alloc::slice::hack::into_vec (14 samples, 0.01%)</title><rect x="16.2219%" y="693" width="0.0137%" height="15" fill="rgb(228,9,43)" fg:x="16609" fg:w="14"/><text x="16.4719%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (14 samples, 0.01%)</title><rect x="16.2219%" y="677" width="0.0137%" height="15" fill="rgb(208,100,47)" fg:x="16609" fg:w="14"/><text x="16.4719%" y="687.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (12 samples, 0.01%)</title><rect x="16.2532%" y="709" width="0.0117%" height="15" fill="rgb(232,26,8)" fg:x="16641" fg:w="12"/><text x="16.5032%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (12 samples, 0.01%)</title><rect x="16.2532%" y="693" width="0.0117%" height="15" fill="rgb(216,166,38)" fg:x="16641" fg:w="12"/><text x="16.5032%" y="703.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="16.2532%" y="677" width="0.0117%" height="15" fill="rgb(251,202,51)" fg:x="16641" fg:w="12"/><text x="16.5032%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="16.2532%" y="661" width="0.0117%" height="15" fill="rgb(254,216,34)" fg:x="16641" fg:w="12"/><text x="16.5032%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.01%)</title><rect x="16.2532%" y="645" width="0.0117%" height="15" fill="rgb(251,32,27)" fg:x="16641" fg:w="12"/><text x="16.5032%" y="655.50"></text></g><g><title>core::time::Duration::as_nanos (14 samples, 0.01%)</title><rect x="16.3020%" y="693" width="0.0137%" height="15" fill="rgb(208,127,28)" fg:x="16691" fg:w="14"/><text x="16.5520%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (75 samples, 0.07%)</title><rect x="16.3841%" y="645" width="0.0733%" height="15" fill="rgb(224,137,22)" fg:x="16775" fg:w="75"/><text x="16.6341%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (75 samples, 0.07%)</title><rect x="16.3841%" y="629" width="0.0733%" height="15" fill="rgb(254,70,32)" fg:x="16775" fg:w="75"/><text x="16.6341%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (70 samples, 0.07%)</title><rect x="16.3890%" y="613" width="0.0684%" height="15" fill="rgb(229,75,37)" fg:x="16780" fg:w="70"/><text x="16.6390%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (70 samples, 0.07%)</title><rect x="16.3890%" y="597" width="0.0684%" height="15" fill="rgb(252,64,23)" fg:x="16780" fg:w="70"/><text x="16.6390%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (70 samples, 0.07%)</title><rect x="16.3890%" y="581" width="0.0684%" height="15" fill="rgb(232,162,48)" fg:x="16780" fg:w="70"/><text x="16.6390%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (32 samples, 0.03%)</title><rect x="16.4261%" y="565" width="0.0313%" height="15" fill="rgb(246,160,12)" fg:x="16818" fg:w="32"/><text x="16.6761%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (170 samples, 0.17%)</title><rect x="16.3157%" y="677" width="0.1660%" height="15" fill="rgb(247,166,0)" fg:x="16705" fg:w="170"/><text x="16.5657%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (170 samples, 0.17%)</title><rect x="16.3157%" y="661" width="0.1660%" height="15" fill="rgb(249,219,21)" fg:x="16705" fg:w="170"/><text x="16.5657%" y="671.50"></text></g><g><title>core::time::Duration::new (25 samples, 0.02%)</title><rect x="16.4573%" y="645" width="0.0244%" height="15" fill="rgb(205,209,3)" fg:x="16850" fg:w="25"/><text x="16.7073%" y="655.50"></text></g><g><title>std::time::SystemTime::duration_since (179 samples, 0.17%)</title><rect x="16.3157%" y="693" width="0.1748%" height="15" fill="rgb(243,44,1)" fg:x="16705" fg:w="179"/><text x="16.5657%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,839 samples, 8.63%)</title><rect x="8.5959%" y="821" width="8.6330%" height="15" fill="rgb(206,159,16)" fg:x="8801" fg:w="8839"/><text x="8.8459%" y="831.50">tremor_runti..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,959 samples, 3.87%)</title><rect x="13.3622%" y="805" width="3.8667%" height="15" fill="rgb(244,77,30)" fg:x="13681" fg:w="3959"/><text x="13.6122%" y="815.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,959 samples, 3.87%)</title><rect x="13.3622%" y="789" width="3.8667%" height="15" fill="rgb(218,69,12)" fg:x="13681" fg:w="3959"/><text x="13.6122%" y="799.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,959 samples, 3.87%)</title><rect x="13.3622%" y="773" width="3.8667%" height="15" fill="rgb(212,87,7)" fg:x="13681" fg:w="3959"/><text x="13.6122%" y="783.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,959 samples, 3.87%)</title><rect x="13.3622%" y="757" width="3.8667%" height="15" fill="rgb(245,114,25)" fg:x="13681" fg:w="3959"/><text x="13.6122%" y="767.50">trem..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,959 samples, 3.87%)</title><rect x="13.3622%" y="741" width="3.8667%" height="15" fill="rgb(210,61,42)" fg:x="13681" fg:w="3959"/><text x="13.6122%" y="751.50">trem..</text></g><g><title>tremor_runtime::postprocessor::postprocess (1,743 samples, 1.70%)</title><rect x="15.5265%" y="725" width="1.7024%" height="15" fill="rgb(211,52,33)" fg:x="15897" fg:w="1743"/><text x="15.7765%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (987 samples, 0.96%)</title><rect x="16.2649%" y="709" width="0.9640%" height="15" fill="rgb(234,58,33)" fg:x="16653" fg:w="987"/><text x="16.5149%" y="719.50"></text></g><g><title>std::time::SystemTime::now (756 samples, 0.74%)</title><rect x="16.4905%" y="693" width="0.7384%" height="15" fill="rgb(220,115,36)" fg:x="16884" fg:w="756"/><text x="16.7405%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (756 samples, 0.74%)</title><rect x="16.4905%" y="677" width="0.7384%" height="15" fill="rgb(243,153,54)" fg:x="16884" fg:w="756"/><text x="16.7405%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::now (756 samples, 0.74%)</title><rect x="16.4905%" y="661" width="0.7384%" height="15" fill="rgb(251,47,18)" fg:x="16884" fg:w="756"/><text x="16.7405%" y="671.50"></text></g><g><title>__clock_gettime_2 (609 samples, 0.59%)</title><rect x="16.6341%" y="645" width="0.5948%" height="15" fill="rgb(242,102,42)" fg:x="17031" fg:w="609"/><text x="16.8841%" y="655.50"></text></g><g><title>__vdso_clock_gettime (589 samples, 0.58%)</title><rect x="16.6536%" y="629" width="0.5753%" height="15" fill="rgb(234,31,38)" fg:x="17051" fg:w="589"/><text x="16.9036%" y="639.50"></text></g><g><title>[[vdso]] (415 samples, 0.41%)</title><rect x="16.8236%" y="613" width="0.4053%" height="15" fill="rgb(221,117,51)" fg:x="17225" fg:w="415"/><text x="17.0736%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="17.2289%" y="757" width="0.0117%" height="15" fill="rgb(212,20,18)" fg:x="17640" fg:w="12"/><text x="17.4789%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (376 samples, 0.37%)</title><rect x="17.5444%" y="741" width="0.3672%" height="15" fill="rgb(245,133,36)" fg:x="17963" fg:w="376"/><text x="17.7944%" y="751.50"></text></g><g><title>core::ptr::read (360 samples, 0.35%)</title><rect x="17.5600%" y="725" width="0.3516%" height="15" fill="rgb(212,6,19)" fg:x="17979" fg:w="360"/><text x="17.8100%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (340 samples, 0.33%)</title><rect x="17.5796%" y="709" width="0.3321%" height="15" fill="rgb(218,1,36)" fg:x="17999" fg:w="340"/><text x="17.8296%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (171 samples, 0.17%)</title><rect x="18.0015%" y="725" width="0.1670%" height="15" fill="rgb(246,84,54)" fg:x="18431" fg:w="171"/><text x="18.2515%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (54 samples, 0.05%)</title><rect x="18.3453%" y="677" width="0.0527%" height="15" fill="rgb(242,110,6)" fg:x="18783" fg:w="54"/><text x="18.5953%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (451 samples, 0.44%)</title><rect x="18.5221%" y="661" width="0.4405%" height="15" fill="rgb(214,47,5)" fg:x="18964" fg:w="451"/><text x="18.7721%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (451 samples, 0.44%)</title><rect x="18.5221%" y="645" width="0.4405%" height="15" fill="rgb(218,159,25)" fg:x="18964" fg:w="451"/><text x="18.7721%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (497 samples, 0.49%)</title><rect x="18.9626%" y="661" width="0.4854%" height="15" fill="rgb(215,211,28)" fg:x="19415" fg:w="497"/><text x="19.2126%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (495 samples, 0.48%)</title><rect x="18.9645%" y="645" width="0.4835%" height="15" fill="rgb(238,59,32)" fg:x="19417" fg:w="495"/><text x="19.2145%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,085 samples, 1.06%)</title><rect x="18.3980%" y="677" width="1.0597%" height="15" fill="rgb(226,82,3)" fg:x="18837" fg:w="1085"/><text x="18.6480%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (51 samples, 0.05%)</title><rect x="19.4763%" y="581" width="0.0498%" height="15" fill="rgb(240,164,32)" fg:x="19941" fg:w="51"/><text x="19.7263%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (55 samples, 0.05%)</title><rect x="19.4753%" y="661" width="0.0537%" height="15" fill="rgb(232,46,7)" fg:x="19940" fg:w="55"/><text x="19.7253%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (55 samples, 0.05%)</title><rect x="19.4753%" y="645" width="0.0537%" height="15" fill="rgb(229,129,53)" fg:x="19940" fg:w="55"/><text x="19.7253%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="19.4753%" y="629" width="0.0537%" height="15" fill="rgb(234,188,29)" fg:x="19940" fg:w="55"/><text x="19.7253%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (55 samples, 0.05%)</title><rect x="19.4753%" y="613" width="0.0537%" height="15" fill="rgb(246,141,4)" fg:x="19940" fg:w="55"/><text x="19.7253%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (54 samples, 0.05%)</title><rect x="19.4763%" y="597" width="0.0527%" height="15" fill="rgb(229,23,39)" fg:x="19941" fg:w="54"/><text x="19.7263%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (33 samples, 0.03%)</title><rect x="19.5290%" y="661" width="0.0322%" height="15" fill="rgb(206,12,3)" fg:x="19995" fg:w="33"/><text x="19.7790%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (33 samples, 0.03%)</title><rect x="19.5290%" y="645" width="0.0322%" height="15" fill="rgb(252,226,20)" fg:x="19995" fg:w="33"/><text x="19.7790%" y="655.50"></text></g><g><title>event_listener::Inner::lock (92 samples, 0.09%)</title><rect x="19.5652%" y="661" width="0.0899%" height="15" fill="rgb(216,123,35)" fg:x="20032" fg:w="92"/><text x="19.8152%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (92 samples, 0.09%)</title><rect x="19.5652%" y="645" width="0.0899%" height="15" fill="rgb(212,68,40)" fg:x="20032" fg:w="92"/><text x="19.8152%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (84 samples, 0.08%)</title><rect x="19.5730%" y="629" width="0.0820%" height="15" fill="rgb(254,125,32)" fg:x="20040" fg:w="84"/><text x="19.8230%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (80 samples, 0.08%)</title><rect x="19.5769%" y="613" width="0.0781%" height="15" fill="rgb(253,97,22)" fg:x="20044" fg:w="80"/><text x="19.8269%" y="623.50"></text></g><g><title>___pthread_mutex_lock (80 samples, 0.08%)</title><rect x="19.5769%" y="597" width="0.0781%" height="15" fill="rgb(241,101,14)" fg:x="20044" fg:w="80"/><text x="19.8269%" y="607.50"></text></g><g><title>__GI___lll_lock_wait (11 samples, 0.01%)</title><rect x="19.6443%" y="581" width="0.0107%" height="15" fill="rgb(238,103,29)" fg:x="20113" fg:w="11"/><text x="19.8943%" y="591.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,254 samples, 2.20%)</title><rect x="18.3043%" y="693" width="2.2015%" height="15" fill="rgb(233,195,47)" fg:x="18741" fg:w="2254"/><text x="18.5543%" y="703.50">a..</text></g><g><title>event_listener::Event::notify (1,073 samples, 1.05%)</title><rect x="19.4577%" y="677" width="1.0480%" height="15" fill="rgb(246,218,30)" fg:x="19922" fg:w="1073"/><text x="19.7077%" y="687.50"></text></g><g><title>event_listener::full_fence (871 samples, 0.85%)</title><rect x="19.6550%" y="661" width="0.8507%" height="15" fill="rgb(219,145,47)" fg:x="20124" fg:w="871"/><text x="19.9050%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (854 samples, 0.83%)</title><rect x="19.6716%" y="645" width="0.8341%" height="15" fill="rgb(243,12,26)" fg:x="20141" fg:w="854"/><text x="19.9216%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (854 samples, 0.83%)</title><rect x="19.6716%" y="629" width="0.8341%" height="15" fill="rgb(214,87,16)" fg:x="20141" fg:w="854"/><text x="19.9216%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (854 samples, 0.83%)</title><rect x="19.6716%" y="613" width="0.8341%" height="15" fill="rgb(208,99,42)" fg:x="20141" fg:w="854"/><text x="19.9216%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (22 samples, 0.02%)</title><rect x="20.5057%" y="693" width="0.0215%" height="15" fill="rgb(253,99,2)" fg:x="20995" fg:w="22"/><text x="20.7557%" y="703.50"></text></g><g><title>event_listener::Inner::lock (12 samples, 0.01%)</title><rect x="20.5507%" y="677" width="0.0117%" height="15" fill="rgb(220,168,23)" fg:x="21041" fg:w="12"/><text x="20.8007%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="20.5507%" y="661" width="0.0117%" height="15" fill="rgb(242,38,24)" fg:x="21041" fg:w="12"/><text x="20.8007%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="20.5516%" y="645" width="0.0107%" height="15" fill="rgb(225,182,9)" fg:x="21042" fg:w="11"/><text x="20.8016%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="20.5516%" y="629" width="0.0107%" height="15" fill="rgb(243,178,37)" fg:x="21042" fg:w="11"/><text x="20.8016%" y="639.50"></text></g><g><title>___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="20.5516%" y="613" width="0.0107%" height="15" fill="rgb(232,139,19)" fg:x="21042" fg:w="11"/><text x="20.8016%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,613 samples, 2.55%)</title><rect x="18.2505%" y="709" width="2.5521%" height="15" fill="rgb(225,201,24)" fg:x="18686" fg:w="2613"/><text x="18.5005%" y="719.50">&lt;a..</text></g><g><title>event_listener::Event::notify (278 samples, 0.27%)</title><rect x="20.5311%" y="693" width="0.2715%" height="15" fill="rgb(221,47,46)" fg:x="21021" fg:w="278"/><text x="20.7811%" y="703.50"></text></g><g><title>event_listener::full_fence (246 samples, 0.24%)</title><rect x="20.5624%" y="677" width="0.2403%" height="15" fill="rgb(249,23,13)" fg:x="21053" fg:w="246"/><text x="20.8124%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (230 samples, 0.22%)</title><rect x="20.5780%" y="661" width="0.2246%" height="15" fill="rgb(219,9,5)" fg:x="21069" fg:w="230"/><text x="20.8280%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (230 samples, 0.22%)</title><rect x="20.5780%" y="645" width="0.2246%" height="15" fill="rgb(254,171,16)" fg:x="21069" fg:w="230"/><text x="20.8280%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (230 samples, 0.22%)</title><rect x="20.5780%" y="629" width="0.2246%" height="15" fill="rgb(230,171,20)" fg:x="21069" fg:w="230"/><text x="20.8280%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,971 samples, 2.90%)</title><rect x="17.9214%" y="741" width="2.9018%" height="15" fill="rgb(210,71,41)" fg:x="18349" fg:w="2971"/><text x="18.1714%" y="751.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,718 samples, 2.65%)</title><rect x="18.1685%" y="725" width="2.6547%" height="15" fill="rgb(206,173,20)" fg:x="18602" fg:w="2718"/><text x="18.4185%" y="735.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="20.8026%" y="709" width="0.0205%" height="15" fill="rgb(233,88,34)" fg:x="21299" fg:w="21"/><text x="21.0526%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="20.8329%" y="581" width="0.0107%" height="15" fill="rgb(223,209,46)" fg:x="21330" fg:w="11"/><text x="21.0829%" y="591.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="20.8544%" y="469" width="0.0147%" height="15" fill="rgb(250,43,18)" fg:x="21352" fg:w="15"/><text x="21.1044%" y="479.50"></text></g><g><title>rust_alloc (53 samples, 0.05%)</title><rect x="20.8691%" y="437" width="0.0518%" height="15" fill="rgb(208,13,10)" fg:x="21367" fg:w="53"/><text x="21.1191%" y="447.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="20.9208%" y="437" width="0.0107%" height="15" fill="rgb(212,200,36)" fg:x="21420" fg:w="11"/><text x="21.1708%" y="447.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="20.9208%" y="421" width="0.0107%" height="15" fill="rgb(225,90,30)" fg:x="21420" fg:w="11"/><text x="21.1708%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="20.9462%" y="421" width="0.0410%" height="15" fill="rgb(236,182,39)" fg:x="21446" fg:w="42"/><text x="21.1962%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (42 samples, 0.04%)</title><rect x="20.9462%" y="405" width="0.0410%" height="15" fill="rgb(212,144,35)" fg:x="21446" fg:w="42"/><text x="21.1962%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (33 samples, 0.03%)</title><rect x="20.9550%" y="389" width="0.0322%" height="15" fill="rgb(228,63,44)" fg:x="21455" fg:w="33"/><text x="21.2050%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.03%)</title><rect x="20.9619%" y="373" width="0.0254%" height="15" fill="rgb(228,109,6)" fg:x="21462" fg:w="26"/><text x="21.2119%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.03%)</title><rect x="20.9619%" y="357" width="0.0254%" height="15" fill="rgb(238,117,24)" fg:x="21462" fg:w="26"/><text x="21.2119%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.03%)</title><rect x="20.9619%" y="341" width="0.0254%" height="15" fill="rgb(242,26,26)" fg:x="21462" fg:w="26"/><text x="21.2119%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (88 samples, 0.09%)</title><rect x="20.9931%" y="421" width="0.0859%" height="15" fill="rgb(221,92,48)" fg:x="21494" fg:w="88"/><text x="21.2431%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (88 samples, 0.09%)</title><rect x="20.9931%" y="405" width="0.0859%" height="15" fill="rgb(209,209,32)" fg:x="21494" fg:w="88"/><text x="21.2431%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (549 samples, 0.54%)</title><rect x="20.8691%" y="469" width="0.5362%" height="15" fill="rgb(221,70,22)" fg:x="21367" fg:w="549"/><text x="21.1191%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (549 samples, 0.54%)</title><rect x="20.8691%" y="453" width="0.5362%" height="15" fill="rgb(248,145,5)" fg:x="21367" fg:w="549"/><text x="21.1191%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (485 samples, 0.47%)</title><rect x="20.9316%" y="437" width="0.4737%" height="15" fill="rgb(226,116,26)" fg:x="21431" fg:w="485"/><text x="21.1816%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (334 samples, 0.33%)</title><rect x="21.0791%" y="421" width="0.3262%" height="15" fill="rgb(244,5,17)" fg:x="21582" fg:w="334"/><text x="21.3291%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (334 samples, 0.33%)</title><rect x="21.0791%" y="405" width="0.3262%" height="15" fill="rgb(252,159,33)" fg:x="21582" fg:w="334"/><text x="21.3291%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (593 samples, 0.58%)</title><rect x="20.8329%" y="613" width="0.5792%" height="15" fill="rgb(206,71,0)" fg:x="21330" fg:w="593"/><text x="21.0829%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (593 samples, 0.58%)</title><rect x="20.8329%" y="597" width="0.5792%" height="15" fill="rgb(233,118,54)" fg:x="21330" fg:w="593"/><text x="21.0829%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (582 samples, 0.57%)</title><rect x="20.8437%" y="581" width="0.5684%" height="15" fill="rgb(234,83,48)" fg:x="21341" fg:w="582"/><text x="21.0937%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (582 samples, 0.57%)</title><rect x="20.8437%" y="565" width="0.5684%" height="15" fill="rgb(228,3,54)" fg:x="21341" fg:w="582"/><text x="21.0937%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (582 samples, 0.57%)</title><rect x="20.8437%" y="549" width="0.5684%" height="15" fill="rgb(226,155,13)" fg:x="21341" fg:w="582"/><text x="21.0937%" y="559.50"></text></g><g><title>alloc::alloc::alloc (572 samples, 0.56%)</title><rect x="20.8534%" y="533" width="0.5587%" height="15" fill="rgb(241,28,37)" fg:x="21351" fg:w="572"/><text x="21.1034%" y="543.50"></text></g><g><title>__rg_alloc (572 samples, 0.56%)</title><rect x="20.8534%" y="517" width="0.5587%" height="15" fill="rgb(233,93,10)" fg:x="21351" fg:w="572"/><text x="21.1034%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (572 samples, 0.56%)</title><rect x="20.8534%" y="501" width="0.5587%" height="15" fill="rgb(225,113,19)" fg:x="21351" fg:w="572"/><text x="21.1034%" y="511.50"></text></g><g><title>rust_alloc (571 samples, 0.56%)</title><rect x="20.8544%" y="485" width="0.5577%" height="15" fill="rgb(241,2,18)" fg:x="21352" fg:w="571"/><text x="21.1044%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (628 samples, 0.61%)</title><rect x="20.8329%" y="741" width="0.6134%" height="15" fill="rgb(228,207,21)" fg:x="21330" fg:w="628"/><text x="21.0829%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (628 samples, 0.61%)</title><rect x="20.8329%" y="725" width="0.6134%" height="15" fill="rgb(213,211,35)" fg:x="21330" fg:w="628"/><text x="21.0829%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (628 samples, 0.61%)</title><rect x="20.8329%" y="709" width="0.6134%" height="15" fill="rgb(209,83,10)" fg:x="21330" fg:w="628"/><text x="21.0829%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (628 samples, 0.61%)</title><rect x="20.8329%" y="693" width="0.6134%" height="15" fill="rgb(209,164,1)" fg:x="21330" fg:w="628"/><text x="21.0829%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (628 samples, 0.61%)</title><rect x="20.8329%" y="677" width="0.6134%" height="15" fill="rgb(213,184,43)" fg:x="21330" fg:w="628"/><text x="21.0829%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (628 samples, 0.61%)</title><rect x="20.8329%" y="661" width="0.6134%" height="15" fill="rgb(231,61,34)" fg:x="21330" fg:w="628"/><text x="21.0829%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (628 samples, 0.61%)</title><rect x="20.8329%" y="645" width="0.6134%" height="15" fill="rgb(235,75,3)" fg:x="21330" fg:w="628"/><text x="21.0829%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (628 samples, 0.61%)</title><rect x="20.8329%" y="629" width="0.6134%" height="15" fill="rgb(220,106,47)" fg:x="21330" fg:w="628"/><text x="21.0829%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (35 samples, 0.03%)</title><rect x="21.4121%" y="613" width="0.0342%" height="15" fill="rgb(210,196,33)" fg:x="21923" fg:w="35"/><text x="21.6621%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.03%)</title><rect x="21.4121%" y="597" width="0.0342%" height="15" fill="rgb(229,154,42)" fg:x="21923" fg:w="35"/><text x="21.6621%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.02%)</title><rect x="21.4219%" y="581" width="0.0244%" height="15" fill="rgb(228,114,26)" fg:x="21933" fg:w="25"/><text x="21.6719%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (904 samples, 0.88%)</title><rect x="21.4463%" y="741" width="0.8829%" height="15" fill="rgb(208,144,1)" fg:x="21958" fg:w="904"/><text x="21.6963%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (461 samples, 0.45%)</title><rect x="22.3546%" y="725" width="0.4503%" height="15" fill="rgb(239,112,37)" fg:x="22888" fg:w="461"/><text x="22.6046%" y="735.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="22.8293%" y="613" width="0.0127%" height="15" fill="rgb(210,96,50)" fg:x="23374" fg:w="13"/><text x="23.0793%" y="623.50"></text></g><g><title>rust_alloc (16 samples, 0.02%)</title><rect x="22.8420%" y="581" width="0.0156%" height="15" fill="rgb(222,178,2)" fg:x="23387" fg:w="16"/><text x="23.0920%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="22.8801%" y="453" width="0.0205%" height="15" fill="rgb(226,74,18)" fg:x="23426" fg:w="21"/><text x="23.1301%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="22.8811%" y="437" width="0.0195%" height="15" fill="rgb(225,67,54)" fg:x="23427" fg:w="20"/><text x="23.1311%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.04%)</title><rect x="22.8732%" y="501" width="0.0352%" height="15" fill="rgb(251,92,32)" fg:x="23419" fg:w="36"/><text x="23.1232%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.04%)</title><rect x="22.8732%" y="485" width="0.0352%" height="15" fill="rgb(228,149,22)" fg:x="23419" fg:w="36"/><text x="23.1232%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="22.8781%" y="469" width="0.0303%" height="15" fill="rgb(243,54,13)" fg:x="23424" fg:w="31"/><text x="23.1281%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (49 samples, 0.05%)</title><rect x="22.8732%" y="517" width="0.0479%" height="15" fill="rgb(243,180,28)" fg:x="23419" fg:w="49"/><text x="23.1232%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="22.9084%" y="501" width="0.0127%" height="15" fill="rgb(208,167,24)" fg:x="23455" fg:w="13"/><text x="23.1584%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="22.9084%" y="485" width="0.0127%" height="15" fill="rgb(245,73,45)" fg:x="23455" fg:w="13"/><text x="23.1584%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="22.9084%" y="469" width="0.0127%" height="15" fill="rgb(237,203,48)" fg:x="23455" fg:w="13"/><text x="23.1584%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="22.9084%" y="453" width="0.0127%" height="15" fill="rgb(211,197,16)" fg:x="23455" fg:w="13"/><text x="23.1584%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (73 samples, 0.07%)</title><rect x="22.8625%" y="533" width="0.0713%" height="15" fill="rgb(243,99,51)" fg:x="23408" fg:w="73"/><text x="23.1125%" y="543.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (45 samples, 0.04%)</title><rect x="22.9621%" y="517" width="0.0440%" height="15" fill="rgb(215,123,29)" fg:x="23510" fg:w="45"/><text x="23.2121%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (417 samples, 0.41%)</title><rect x="22.8625%" y="565" width="0.4073%" height="15" fill="rgb(239,186,37)" fg:x="23408" fg:w="417"/><text x="23.1125%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (417 samples, 0.41%)</title><rect x="22.8625%" y="549" width="0.4073%" height="15" fill="rgb(252,136,39)" fg:x="23408" fg:w="417"/><text x="23.1125%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (344 samples, 0.34%)</title><rect x="22.9338%" y="533" width="0.3360%" height="15" fill="rgb(223,213,32)" fg:x="23481" fg:w="344"/><text x="23.1838%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (270 samples, 0.26%)</title><rect x="23.0061%" y="517" width="0.2637%" height="15" fill="rgb(233,115,5)" fg:x="23555" fg:w="270"/><text x="23.2561%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (270 samples, 0.26%)</title><rect x="23.0061%" y="501" width="0.2637%" height="15" fill="rgb(207,226,44)" fg:x="23555" fg:w="270"/><text x="23.2561%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (270 samples, 0.26%)</title><rect x="23.0061%" y="485" width="0.2637%" height="15" fill="rgb(208,126,0)" fg:x="23555" fg:w="270"/><text x="23.2561%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="23.2698%" y="565" width="0.0107%" height="15" fill="rgb(244,66,21)" fg:x="23825" fg:w="11"/><text x="23.5198%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (20 samples, 0.02%)</title><rect x="23.2854%" y="517" width="0.0195%" height="15" fill="rgb(222,97,12)" fg:x="23841" fg:w="20"/><text x="23.5354%" y="527.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (15 samples, 0.01%)</title><rect x="23.2903%" y="501" width="0.0147%" height="15" fill="rgb(219,213,19)" fg:x="23846" fg:w="15"/><text x="23.5403%" y="511.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (12 samples, 0.01%)</title><rect x="23.2932%" y="485" width="0.0117%" height="15" fill="rgb(252,169,30)" fg:x="23849" fg:w="12"/><text x="23.5432%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (19 samples, 0.02%)</title><rect x="23.3049%" y="501" width="0.0186%" height="15" fill="rgb(206,32,51)" fg:x="23861" fg:w="19"/><text x="23.5549%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (19 samples, 0.02%)</title><rect x="23.3049%" y="485" width="0.0186%" height="15" fill="rgb(250,172,42)" fg:x="23861" fg:w="19"/><text x="23.5549%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (21 samples, 0.02%)</title><rect x="23.3372%" y="485" width="0.0205%" height="15" fill="rgb(209,34,43)" fg:x="23894" fg:w="21"/><text x="23.5872%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (21 samples, 0.02%)</title><rect x="23.3372%" y="469" width="0.0205%" height="15" fill="rgb(223,11,35)" fg:x="23894" fg:w="21"/><text x="23.5872%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="23.3049%" y="517" width="0.0537%" height="15" fill="rgb(251,219,26)" fg:x="23861" fg:w="55"/><text x="23.5549%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (36 samples, 0.04%)</title><rect x="23.3235%" y="501" width="0.0352%" height="15" fill="rgb(231,119,3)" fg:x="23880" fg:w="36"/><text x="23.5735%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (78 samples, 0.08%)</title><rect x="23.2835%" y="533" width="0.0762%" height="15" fill="rgb(216,97,11)" fg:x="23839" fg:w="78"/><text x="23.5335%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="23.2805%" y="565" width="0.0801%" height="15" fill="rgb(223,59,9)" fg:x="23836" fg:w="82"/><text x="23.5305%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.08%)</title><rect x="23.2825%" y="549" width="0.0781%" height="15" fill="rgb(233,93,31)" fg:x="23838" fg:w="80"/><text x="23.5325%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,173 samples, 1.15%)</title><rect x="22.3292%" y="741" width="1.1457%" height="15" fill="rgb(239,81,33)" fg:x="22862" fg:w="1173"/><text x="22.5792%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (686 samples, 0.67%)</title><rect x="22.8049%" y="725" width="0.6700%" height="15" fill="rgb(213,120,34)" fg:x="23349" fg:w="686"/><text x="23.0549%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (686 samples, 0.67%)</title><rect x="22.8049%" y="709" width="0.6700%" height="15" fill="rgb(243,49,53)" fg:x="23349" fg:w="686"/><text x="23.0549%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (686 samples, 0.67%)</title><rect x="22.8049%" y="693" width="0.6700%" height="15" fill="rgb(247,216,33)" fg:x="23349" fg:w="686"/><text x="23.0549%" y="703.50"></text></g><g><title>alloc::alloc::alloc (686 samples, 0.67%)</title><rect x="22.8049%" y="677" width="0.6700%" height="15" fill="rgb(226,26,14)" fg:x="23349" fg:w="686"/><text x="23.0549%" y="687.50"></text></g><g><title>__rg_alloc (686 samples, 0.67%)</title><rect x="22.8049%" y="661" width="0.6700%" height="15" fill="rgb(215,49,53)" fg:x="23349" fg:w="686"/><text x="23.0549%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (686 samples, 0.67%)</title><rect x="22.8049%" y="645" width="0.6700%" height="15" fill="rgb(245,162,40)" fg:x="23349" fg:w="686"/><text x="23.0549%" y="655.50"></text></g><g><title>rust_alloc (671 samples, 0.66%)</title><rect x="22.8195%" y="629" width="0.6554%" height="15" fill="rgb(229,68,17)" fg:x="23364" fg:w="671"/><text x="23.0695%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (648 samples, 0.63%)</title><rect x="22.8420%" y="613" width="0.6329%" height="15" fill="rgb(213,182,10)" fg:x="23387" fg:w="648"/><text x="23.0920%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (648 samples, 0.63%)</title><rect x="22.8420%" y="597" width="0.6329%" height="15" fill="rgb(245,125,30)" fg:x="23387" fg:w="648"/><text x="23.0920%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (631 samples, 0.62%)</title><rect x="22.8586%" y="581" width="0.6163%" height="15" fill="rgb(232,202,2)" fg:x="23404" fg:w="631"/><text x="23.1086%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (107 samples, 0.10%)</title><rect x="23.3704%" y="565" width="0.1045%" height="15" fill="rgb(237,140,51)" fg:x="23928" fg:w="107"/><text x="23.6204%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (107 samples, 0.10%)</title><rect x="23.3704%" y="549" width="0.1045%" height="15" fill="rgb(236,157,25)" fg:x="23928" fg:w="107"/><text x="23.6204%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="23.4954%" y="645" width="0.0156%" height="15" fill="rgb(219,209,0)" fg:x="24056" fg:w="16"/><text x="23.7454%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="23.4964%" y="629" width="0.0147%" height="15" fill="rgb(240,116,54)" fg:x="24057" fg:w="15"/><text x="23.7464%" y="639.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="23.4964%" y="613" width="0.0147%" height="15" fill="rgb(216,10,36)" fg:x="24057" fg:w="15"/><text x="23.7464%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="23.4964%" y="597" width="0.0147%" height="15" fill="rgb(222,72,44)" fg:x="24057" fg:w="15"/><text x="23.7464%" y="607.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="23.4944%" y="693" width="0.0264%" height="15" fill="rgb(232,159,9)" fg:x="24055" fg:w="27"/><text x="23.7444%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (26 samples, 0.03%)</title><rect x="23.4954%" y="677" width="0.0254%" height="15" fill="rgb(210,39,32)" fg:x="24056" fg:w="26"/><text x="23.7454%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="23.4954%" y="661" width="0.0254%" height="15" fill="rgb(216,194,45)" fg:x="24056" fg:w="26"/><text x="23.7454%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (29 samples, 0.03%)</title><rect x="23.4944%" y="709" width="0.0283%" height="15" fill="rgb(218,18,35)" fg:x="24055" fg:w="29"/><text x="23.7444%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.06%)</title><rect x="23.4749%" y="725" width="0.0606%" height="15" fill="rgb(207,83,51)" fg:x="24035" fg:w="62"/><text x="23.7249%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (13 samples, 0.01%)</title><rect x="23.5227%" y="709" width="0.0127%" height="15" fill="rgb(225,63,43)" fg:x="24084" fg:w="13"/><text x="23.7727%" y="719.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="23.5511%" y="693" width="0.0117%" height="15" fill="rgb(207,57,36)" fg:x="24113" fg:w="12"/><text x="23.8011%" y="703.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="23.5520%" y="677" width="0.0107%" height="15" fill="rgb(216,99,33)" fg:x="24114" fg:w="11"/><text x="23.8020%" y="687.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (25 samples, 0.02%)</title><rect x="23.6038%" y="581" width="0.0244%" height="15" fill="rgb(225,42,16)" fg:x="24167" fg:w="25"/><text x="23.8538%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (25 samples, 0.02%)</title><rect x="23.6038%" y="565" width="0.0244%" height="15" fill="rgb(220,201,45)" fg:x="24167" fg:w="25"/><text x="23.8538%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (63 samples, 0.06%)</title><rect x="23.5774%" y="629" width="0.0615%" height="15" fill="rgb(225,33,4)" fg:x="24140" fg:w="63"/><text x="23.8274%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (63 samples, 0.06%)</title><rect x="23.5774%" y="613" width="0.0615%" height="15" fill="rgb(224,33,50)" fg:x="24140" fg:w="63"/><text x="23.8274%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (59 samples, 0.06%)</title><rect x="23.5813%" y="597" width="0.0576%" height="15" fill="rgb(246,198,51)" fg:x="24144" fg:w="59"/><text x="23.8313%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="23.6282%" y="581" width="0.0107%" height="15" fill="rgb(205,22,4)" fg:x="24192" fg:w="11"/><text x="23.8782%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="23.6282%" y="565" width="0.0107%" height="15" fill="rgb(206,3,8)" fg:x="24192" fg:w="11"/><text x="23.8782%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (107 samples, 0.10%)</title><rect x="23.5628%" y="693" width="0.1045%" height="15" fill="rgb(251,23,15)" fg:x="24125" fg:w="107"/><text x="23.8128%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (107 samples, 0.10%)</title><rect x="23.5628%" y="677" width="0.1045%" height="15" fill="rgb(252,88,28)" fg:x="24125" fg:w="107"/><text x="23.8128%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (107 samples, 0.10%)</title><rect x="23.5628%" y="661" width="0.1045%" height="15" fill="rgb(212,127,14)" fg:x="24125" fg:w="107"/><text x="23.8128%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (107 samples, 0.10%)</title><rect x="23.5628%" y="645" width="0.1045%" height="15" fill="rgb(247,145,37)" fg:x="24125" fg:w="107"/><text x="23.8128%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (29 samples, 0.03%)</title><rect x="23.6390%" y="629" width="0.0283%" height="15" fill="rgb(209,117,53)" fg:x="24203" fg:w="29"/><text x="23.8890%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (132 samples, 0.13%)</title><rect x="23.5462%" y="709" width="0.1289%" height="15" fill="rgb(212,90,42)" fg:x="24108" fg:w="132"/><text x="23.7962%" y="719.50"></text></g><g><title>rust_dealloc (159 samples, 0.16%)</title><rect x="23.5354%" y="725" width="0.1553%" height="15" fill="rgb(218,164,37)" fg:x="24097" fg:w="159"/><text x="23.7854%" y="735.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="23.6751%" y="709" width="0.0156%" height="15" fill="rgb(246,65,34)" fg:x="24240" fg:w="16"/><text x="23.9251%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (236 samples, 0.23%)</title><rect x="23.4749%" y="741" width="0.2305%" height="15" fill="rgb(231,100,33)" fg:x="24035" fg:w="236"/><text x="23.7249%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (15 samples, 0.01%)</title><rect x="23.6907%" y="725" width="0.0147%" height="15" fill="rgb(228,126,14)" fg:x="24256" fg:w="15"/><text x="23.9407%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (13 samples, 0.01%)</title><rect x="23.7054%" y="741" width="0.0127%" height="15" fill="rgb(215,173,21)" fg:x="24271" fg:w="13"/><text x="23.9554%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="23.7054%" y="725" width="0.0127%" height="15" fill="rgb(210,6,40)" fg:x="24271" fg:w="13"/><text x="23.9554%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="23.7181%" y="741" width="0.0156%" height="15" fill="rgb(212,48,18)" fg:x="24284" fg:w="16"/><text x="23.9681%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="23.7191%" y="725" width="0.0147%" height="15" fill="rgb(230,214,11)" fg:x="24285" fg:w="15"/><text x="23.9691%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (22 samples, 0.02%)</title><rect x="23.7337%" y="741" width="0.0215%" height="15" fill="rgb(254,105,39)" fg:x="24300" fg:w="22"/><text x="23.9837%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (81 samples, 0.08%)</title><rect x="23.7552%" y="741" width="0.0791%" height="15" fill="rgb(245,158,5)" fg:x="24322" fg:w="81"/><text x="24.0052%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (81 samples, 0.08%)</title><rect x="23.7552%" y="725" width="0.0791%" height="15" fill="rgb(249,208,11)" fg:x="24322" fg:w="81"/><text x="24.0052%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (81 samples, 0.08%)</title><rect x="23.7552%" y="709" width="0.0791%" height="15" fill="rgb(210,39,28)" fg:x="24322" fg:w="81"/><text x="24.0052%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (81 samples, 0.08%)</title><rect x="23.7552%" y="693" width="0.0791%" height="15" fill="rgb(211,56,53)" fg:x="24322" fg:w="81"/><text x="24.0052%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (53 samples, 0.05%)</title><rect x="23.7825%" y="677" width="0.0518%" height="15" fill="rgb(226,201,30)" fg:x="24350" fg:w="53"/><text x="24.0325%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (53 samples, 0.05%)</title><rect x="23.7825%" y="661" width="0.0518%" height="15" fill="rgb(239,101,34)" fg:x="24350" fg:w="53"/><text x="24.0325%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (53 samples, 0.05%)</title><rect x="23.7825%" y="645" width="0.0518%" height="15" fill="rgb(226,209,5)" fg:x="24350" fg:w="53"/><text x="24.0325%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (52 samples, 0.05%)</title><rect x="23.7835%" y="629" width="0.0508%" height="15" fill="rgb(250,105,47)" fg:x="24351" fg:w="52"/><text x="24.0335%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (39 samples, 0.04%)</title><rect x="23.7962%" y="613" width="0.0381%" height="15" fill="rgb(230,72,3)" fg:x="24364" fg:w="39"/><text x="24.0462%" y="623.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (22 samples, 0.02%)</title><rect x="23.8363%" y="741" width="0.0215%" height="15" fill="rgb(232,218,39)" fg:x="24405" fg:w="22"/><text x="24.0863%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,920 samples, 6.76%)</title><rect x="17.2289%" y="773" width="6.7587%" height="15" fill="rgb(248,166,6)" fg:x="17640" fg:w="6920"/><text x="17.4789%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (6,908 samples, 6.75%)</title><rect x="17.2406%" y="757" width="6.7470%" height="15" fill="rgb(247,89,20)" fg:x="17652" fg:w="6908"/><text x="17.4906%" y="767.50">tremor_ru..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (133 samples, 0.13%)</title><rect x="23.8578%" y="741" width="0.1299%" height="15" fill="rgb(248,130,54)" fg:x="24427" fg:w="133"/><text x="24.1078%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (133 samples, 0.13%)</title><rect x="23.8578%" y="725" width="0.1299%" height="15" fill="rgb(234,196,4)" fg:x="24427" fg:w="133"/><text x="24.1078%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (133 samples, 0.13%)</title><rect x="23.8578%" y="709" width="0.1299%" height="15" fill="rgb(250,143,31)" fg:x="24427" fg:w="133"/><text x="24.1078%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (85 samples, 0.08%)</title><rect x="23.9046%" y="693" width="0.0830%" height="15" fill="rgb(211,110,34)" fg:x="24475" fg:w="85"/><text x="24.1546%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.01%)</title><rect x="25.1978%" y="757" width="0.0107%" height="15" fill="rgb(215,124,48)" fg:x="25799" fg:w="11"/><text x="25.4478%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="25.2085%" y="757" width="0.0215%" height="15" fill="rgb(216,46,13)" fg:x="25810" fg:w="22"/><text x="25.4585%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="25.2300%" y="757" width="0.0127%" height="15" fill="rgb(205,184,25)" fg:x="25832" fg:w="13"/><text x="25.4800%" y="767.50"></text></g><g><title>aligned_size (19 samples, 0.02%)</title><rect x="25.6334%" y="517" width="0.0186%" height="15" fill="rgb(228,1,10)" fg:x="26245" fg:w="19"/><text x="25.8834%" y="527.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="25.6588%" y="485" width="0.0107%" height="15" fill="rgb(213,116,27)" fg:x="26271" fg:w="11"/><text x="25.9088%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (222 samples, 0.22%)</title><rect x="25.6002%" y="661" width="0.2168%" height="15" fill="rgb(241,95,50)" fg:x="26211" fg:w="222"/><text x="25.8502%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (222 samples, 0.22%)</title><rect x="25.6002%" y="645" width="0.2168%" height="15" fill="rgb(238,48,32)" fg:x="26211" fg:w="222"/><text x="25.8502%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (222 samples, 0.22%)</title><rect x="25.6002%" y="629" width="0.2168%" height="15" fill="rgb(235,113,49)" fg:x="26211" fg:w="222"/><text x="25.8502%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (209 samples, 0.20%)</title><rect x="25.6129%" y="613" width="0.2041%" height="15" fill="rgb(205,127,43)" fg:x="26224" fg:w="209"/><text x="25.8629%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (209 samples, 0.20%)</title><rect x="25.6129%" y="597" width="0.2041%" height="15" fill="rgb(250,162,2)" fg:x="26224" fg:w="209"/><text x="25.8629%" y="607.50"></text></g><g><title>alloc::alloc::alloc (209 samples, 0.20%)</title><rect x="25.6129%" y="581" width="0.2041%" height="15" fill="rgb(220,13,41)" fg:x="26224" fg:w="209"/><text x="25.8629%" y="591.50"></text></g><g><title>__rg_alloc (209 samples, 0.20%)</title><rect x="25.6129%" y="565" width="0.2041%" height="15" fill="rgb(249,221,25)" fg:x="26224" fg:w="209"/><text x="25.8629%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (209 samples, 0.20%)</title><rect x="25.6129%" y="549" width="0.2041%" height="15" fill="rgb(215,208,19)" fg:x="26224" fg:w="209"/><text x="25.8629%" y="559.50"></text></g><g><title>rust_alloc (188 samples, 0.18%)</title><rect x="25.6334%" y="533" width="0.1836%" height="15" fill="rgb(236,175,2)" fg:x="26245" fg:w="188"/><text x="25.8834%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (162 samples, 0.16%)</title><rect x="25.6588%" y="517" width="0.1582%" height="15" fill="rgb(241,52,2)" fg:x="26271" fg:w="162"/><text x="25.9088%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (162 samples, 0.16%)</title><rect x="25.6588%" y="501" width="0.1582%" height="15" fill="rgb(248,140,14)" fg:x="26271" fg:w="162"/><text x="25.9088%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (142 samples, 0.14%)</title><rect x="25.6783%" y="485" width="0.1387%" height="15" fill="rgb(253,22,42)" fg:x="26291" fg:w="142"/><text x="25.9283%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (118 samples, 0.12%)</title><rect x="25.7018%" y="469" width="0.1153%" height="15" fill="rgb(234,61,47)" fg:x="26315" fg:w="118"/><text x="25.9518%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (118 samples, 0.12%)</title><rect x="25.7018%" y="453" width="0.1153%" height="15" fill="rgb(208,226,15)" fg:x="26315" fg:w="118"/><text x="25.9518%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (336 samples, 0.33%)</title><rect x="25.5611%" y="741" width="0.3282%" height="15" fill="rgb(217,221,4)" fg:x="26171" fg:w="336"/><text x="25.8111%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (296 samples, 0.29%)</title><rect x="25.6002%" y="725" width="0.2891%" height="15" fill="rgb(212,174,34)" fg:x="26211" fg:w="296"/><text x="25.8502%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (296 samples, 0.29%)</title><rect x="25.6002%" y="709" width="0.2891%" height="15" fill="rgb(253,83,4)" fg:x="26211" fg:w="296"/><text x="25.8502%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (296 samples, 0.29%)</title><rect x="25.6002%" y="693" width="0.2891%" height="15" fill="rgb(250,195,49)" fg:x="26211" fg:w="296"/><text x="25.8502%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (296 samples, 0.29%)</title><rect x="25.6002%" y="677" width="0.2891%" height="15" fill="rgb(241,192,25)" fg:x="26211" fg:w="296"/><text x="25.8502%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (74 samples, 0.07%)</title><rect x="25.8170%" y="661" width="0.0723%" height="15" fill="rgb(208,124,10)" fg:x="26433" fg:w="74"/><text x="26.0670%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (74 samples, 0.07%)</title><rect x="25.8170%" y="645" width="0.0723%" height="15" fill="rgb(222,33,0)" fg:x="26433" fg:w="74"/><text x="26.0670%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (56 samples, 0.05%)</title><rect x="25.8346%" y="629" width="0.0547%" height="15" fill="rgb(234,209,28)" fg:x="26451" fg:w="56"/><text x="26.0846%" y="639.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="25.9664%" y="421" width="0.0127%" height="15" fill="rgb(224,11,23)" fg:x="26586" fg:w="13"/><text x="26.2164%" y="431.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="25.9664%" y="405" width="0.0127%" height="15" fill="rgb(232,99,1)" fg:x="26586" fg:w="13"/><text x="26.2164%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="25.9625%" y="453" width="0.0850%" height="15" fill="rgb(237,95,45)" fg:x="26582" fg:w="87"/><text x="26.2125%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="25.9625%" y="437" width="0.0850%" height="15" fill="rgb(208,109,11)" fg:x="26582" fg:w="87"/><text x="26.2125%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (70 samples, 0.07%)</title><rect x="25.9791%" y="421" width="0.0684%" height="15" fill="rgb(216,190,48)" fg:x="26599" fg:w="70"/><text x="26.2291%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (65 samples, 0.06%)</title><rect x="25.9840%" y="405" width="0.0635%" height="15" fill="rgb(251,171,36)" fg:x="26604" fg:w="65"/><text x="26.2340%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (65 samples, 0.06%)</title><rect x="25.9840%" y="389" width="0.0635%" height="15" fill="rgb(230,62,22)" fg:x="26604" fg:w="65"/><text x="26.2340%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (129 samples, 0.13%)</title><rect x="25.9274%" y="597" width="0.1260%" height="15" fill="rgb(225,114,35)" fg:x="26546" fg:w="129"/><text x="26.1774%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (129 samples, 0.13%)</title><rect x="25.9274%" y="581" width="0.1260%" height="15" fill="rgb(215,118,42)" fg:x="26546" fg:w="129"/><text x="26.1774%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (129 samples, 0.13%)</title><rect x="25.9274%" y="565" width="0.1260%" height="15" fill="rgb(243,119,21)" fg:x="26546" fg:w="129"/><text x="26.1774%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (127 samples, 0.12%)</title><rect x="25.9293%" y="549" width="0.1240%" height="15" fill="rgb(252,177,53)" fg:x="26548" fg:w="127"/><text x="26.1793%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (127 samples, 0.12%)</title><rect x="25.9293%" y="533" width="0.1240%" height="15" fill="rgb(237,209,29)" fg:x="26548" fg:w="127"/><text x="26.1793%" y="543.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.11%)</title><rect x="25.9440%" y="517" width="0.1094%" height="15" fill="rgb(212,65,23)" fg:x="26563" fg:w="112"/><text x="26.1940%" y="527.50"></text></g><g><title>__rg_alloc (112 samples, 0.11%)</title><rect x="25.9440%" y="501" width="0.1094%" height="15" fill="rgb(230,222,46)" fg:x="26563" fg:w="112"/><text x="26.1940%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.11%)</title><rect x="25.9440%" y="485" width="0.1094%" height="15" fill="rgb(215,135,32)" fg:x="26563" fg:w="112"/><text x="26.1940%" y="495.50"></text></g><g><title>rust_alloc (108 samples, 0.11%)</title><rect x="25.9479%" y="469" width="0.1055%" height="15" fill="rgb(246,101,22)" fg:x="26567" fg:w="108"/><text x="26.1979%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (202 samples, 0.20%)</title><rect x="25.9235%" y="677" width="0.1973%" height="15" fill="rgb(206,107,13)" fg:x="26542" fg:w="202"/><text x="26.1735%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (198 samples, 0.19%)</title><rect x="25.9274%" y="661" width="0.1934%" height="15" fill="rgb(250,100,44)" fg:x="26546" fg:w="198"/><text x="26.1774%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (198 samples, 0.19%)</title><rect x="25.9274%" y="645" width="0.1934%" height="15" fill="rgb(231,147,38)" fg:x="26546" fg:w="198"/><text x="26.1774%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (198 samples, 0.19%)</title><rect x="25.9274%" y="629" width="0.1934%" height="15" fill="rgb(229,8,40)" fg:x="26546" fg:w="198"/><text x="26.1774%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (198 samples, 0.19%)</title><rect x="25.9274%" y="613" width="0.1934%" height="15" fill="rgb(221,135,30)" fg:x="26546" fg:w="198"/><text x="26.1774%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (69 samples, 0.07%)</title><rect x="26.0534%" y="597" width="0.0674%" height="15" fill="rgb(249,193,18)" fg:x="26675" fg:w="69"/><text x="26.3034%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.07%)</title><rect x="26.0534%" y="581" width="0.0674%" height="15" fill="rgb(209,133,39)" fg:x="26675" fg:w="69"/><text x="26.3034%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (48 samples, 0.05%)</title><rect x="26.0739%" y="565" width="0.0469%" height="15" fill="rgb(232,100,14)" fg:x="26696" fg:w="48"/><text x="26.3239%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="26.1208%" y="677" width="0.0127%" height="15" fill="rgb(224,185,1)" fg:x="26744" fg:w="13"/><text x="26.3708%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (121 samples, 0.12%)</title><rect x="26.1882%" y="533" width="0.1182%" height="15" fill="rgb(223,139,8)" fg:x="26813" fg:w="121"/><text x="26.4382%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (120 samples, 0.12%)</title><rect x="26.1891%" y="517" width="0.1172%" height="15" fill="rgb(232,213,38)" fg:x="26814" fg:w="120"/><text x="26.4391%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (110 samples, 0.11%)</title><rect x="26.1989%" y="501" width="0.1074%" height="15" fill="rgb(207,94,22)" fg:x="26824" fg:w="110"/><text x="26.4489%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (98 samples, 0.10%)</title><rect x="26.2106%" y="485" width="0.0957%" height="15" fill="rgb(219,183,54)" fg:x="26836" fg:w="98"/><text x="26.4606%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (98 samples, 0.10%)</title><rect x="26.2106%" y="469" width="0.0957%" height="15" fill="rgb(216,185,54)" fg:x="26836" fg:w="98"/><text x="26.4606%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (169 samples, 0.17%)</title><rect x="26.1579%" y="629" width="0.1651%" height="15" fill="rgb(254,217,39)" fg:x="26782" fg:w="169"/><text x="26.4079%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (169 samples, 0.17%)</title><rect x="26.1579%" y="613" width="0.1651%" height="15" fill="rgb(240,178,23)" fg:x="26782" fg:w="169"/><text x="26.4079%" y="623.50"></text></g><g><title>alloc::alloc::alloc (152 samples, 0.15%)</title><rect x="26.1745%" y="597" width="0.1485%" height="15" fill="rgb(218,11,47)" fg:x="26799" fg:w="152"/><text x="26.4245%" y="607.50"></text></g><g><title>__rg_alloc (152 samples, 0.15%)</title><rect x="26.1745%" y="581" width="0.1485%" height="15" fill="rgb(218,51,51)" fg:x="26799" fg:w="152"/><text x="26.4245%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (152 samples, 0.15%)</title><rect x="26.1745%" y="565" width="0.1485%" height="15" fill="rgb(238,126,27)" fg:x="26799" fg:w="152"/><text x="26.4245%" y="575.50"></text></g><g><title>rust_alloc (144 samples, 0.14%)</title><rect x="26.1823%" y="549" width="0.1406%" height="15" fill="rgb(249,202,22)" fg:x="26807" fg:w="144"/><text x="26.4323%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="26.3063%" y="533" width="0.0166%" height="15" fill="rgb(254,195,49)" fg:x="26934" fg:w="17"/><text x="26.5563%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (217 samples, 0.21%)</title><rect x="26.1344%" y="677" width="0.2119%" height="15" fill="rgb(208,123,14)" fg:x="26758" fg:w="217"/><text x="26.3844%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (194 samples, 0.19%)</title><rect x="26.1569%" y="661" width="0.1895%" height="15" fill="rgb(224,200,8)" fg:x="26781" fg:w="194"/><text x="26.4069%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (193 samples, 0.19%)</title><rect x="26.1579%" y="645" width="0.1885%" height="15" fill="rgb(217,61,36)" fg:x="26782" fg:w="193"/><text x="26.4079%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array (14 samples, 0.01%)</title><rect x="26.3327%" y="629" width="0.0137%" height="15" fill="rgb(206,35,45)" fg:x="26961" fg:w="14"/><text x="26.5827%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (14 samples, 0.01%)</title><rect x="26.3327%" y="613" width="0.0137%" height="15" fill="rgb(217,65,33)" fg:x="26961" fg:w="14"/><text x="26.5827%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (14 samples, 0.01%)</title><rect x="26.3327%" y="597" width="0.0137%" height="15" fill="rgb(222,158,48)" fg:x="26961" fg:w="14"/><text x="26.5827%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (457 samples, 0.45%)</title><rect x="25.9147%" y="693" width="0.4464%" height="15" fill="rgb(254,2,54)" fg:x="26533" fg:w="457"/><text x="26.1647%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.01%)</title><rect x="26.3464%" y="677" width="0.0147%" height="15" fill="rgb(250,143,38)" fg:x="26975" fg:w="15"/><text x="26.5964%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (495 samples, 0.48%)</title><rect x="25.8893%" y="741" width="0.4835%" height="15" fill="rgb(248,25,0)" fg:x="26507" fg:w="495"/><text x="26.1393%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (469 samples, 0.46%)</title><rect x="25.9147%" y="725" width="0.4581%" height="15" fill="rgb(206,152,27)" fg:x="26533" fg:w="469"/><text x="26.1647%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (469 samples, 0.46%)</title><rect x="25.9147%" y="709" width="0.4581%" height="15" fill="rgb(240,77,30)" fg:x="26533" fg:w="469"/><text x="26.1647%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="26.3610%" y="693" width="0.0117%" height="15" fill="rgb(231,5,3)" fg:x="26990" fg:w="12"/><text x="26.6110%" y="703.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,169 samples, 1.14%)</title><rect x="25.2427%" y="757" width="1.1418%" height="15" fill="rgb(207,226,32)" fg:x="25845" fg:w="1169"/><text x="25.4927%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="26.3727%" y="741" width="0.0117%" height="15" fill="rgb(222,207,47)" fg:x="27002" fg:w="12"/><text x="26.6227%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (225 samples, 0.22%)</title><rect x="26.3845%" y="757" width="0.2198%" height="15" fill="rgb(229,115,45)" fg:x="27014" fg:w="225"/><text x="26.6345%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (16 samples, 0.02%)</title><rect x="26.6042%" y="757" width="0.0156%" height="15" fill="rgb(224,191,6)" fg:x="27239" fg:w="16"/><text x="26.8542%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.02%)</title><rect x="26.6042%" y="741" width="0.0156%" height="15" fill="rgb(230,227,24)" fg:x="27239" fg:w="16"/><text x="26.8542%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (16 samples, 0.02%)</title><rect x="26.6042%" y="725" width="0.0156%" height="15" fill="rgb(228,80,19)" fg:x="27239" fg:w="16"/><text x="26.8542%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (438 samples, 0.43%)</title><rect x="26.6199%" y="757" width="0.4278%" height="15" fill="rgb(247,229,0)" fg:x="27255" fg:w="438"/><text x="26.8699%" y="767.50"></text></g><g><title>core::ptr::write (405 samples, 0.40%)</title><rect x="26.6521%" y="741" width="0.3956%" height="15" fill="rgb(237,194,15)" fg:x="27288" fg:w="405"/><text x="26.9021%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (403 samples, 0.39%)</title><rect x="26.6540%" y="725" width="0.3936%" height="15" fill="rgb(219,203,20)" fg:x="27290" fg:w="403"/><text x="26.9040%" y="735.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="27.0984%" y="597" width="0.0117%" height="15" fill="rgb(234,128,8)" fg:x="27745" fg:w="12"/><text x="27.3484%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="27.1316%" y="501" width="0.0137%" height="15" fill="rgb(248,202,8)" fg:x="27779" fg:w="14"/><text x="27.3816%" y="511.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (14 samples, 0.01%)</title><rect x="27.1316%" y="485" width="0.0137%" height="15" fill="rgb(206,104,37)" fg:x="27779" fg:w="14"/><text x="27.3816%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="27.1287%" y="549" width="0.0176%" height="15" fill="rgb(223,8,27)" fg:x="27776" fg:w="18"/><text x="27.3787%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="27.1297%" y="533" width="0.0166%" height="15" fill="rgb(216,217,28)" fg:x="27777" fg:w="17"/><text x="27.3797%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="27.1316%" y="517" width="0.0147%" height="15" fill="rgb(249,199,1)" fg:x="27779" fg:w="15"/><text x="27.3816%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (132 samples, 0.13%)</title><rect x="27.0613%" y="693" width="0.1289%" height="15" fill="rgb(240,85,17)" fg:x="27707" fg:w="132"/><text x="27.3113%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (132 samples, 0.13%)</title><rect x="27.0613%" y="677" width="0.1289%" height="15" fill="rgb(206,108,45)" fg:x="27707" fg:w="132"/><text x="27.3113%" y="687.50"></text></g><g><title>alloc::alloc::alloc (120 samples, 0.12%)</title><rect x="27.0730%" y="661" width="0.1172%" height="15" fill="rgb(245,210,41)" fg:x="27719" fg:w="120"/><text x="27.3230%" y="671.50"></text></g><g><title>__rg_alloc (120 samples, 0.12%)</title><rect x="27.0730%" y="645" width="0.1172%" height="15" fill="rgb(206,13,37)" fg:x="27719" fg:w="120"/><text x="27.3230%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (120 samples, 0.12%)</title><rect x="27.0730%" y="629" width="0.1172%" height="15" fill="rgb(250,61,18)" fg:x="27719" fg:w="120"/><text x="27.3230%" y="639.50"></text></g><g><title>rust_alloc (102 samples, 0.10%)</title><rect x="27.0906%" y="613" width="0.0996%" height="15" fill="rgb(235,172,48)" fg:x="27737" fg:w="102"/><text x="27.3406%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="27.1102%" y="597" width="0.0801%" height="15" fill="rgb(249,201,17)" fg:x="27757" fg:w="82"/><text x="27.3602%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="27.1102%" y="581" width="0.0801%" height="15" fill="rgb(219,208,6)" fg:x="27757" fg:w="82"/><text x="27.3602%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (73 samples, 0.07%)</title><rect x="27.1189%" y="565" width="0.0713%" height="15" fill="rgb(248,31,23)" fg:x="27766" fg:w="73"/><text x="27.3689%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (42 samples, 0.04%)</title><rect x="27.1492%" y="549" width="0.0410%" height="15" fill="rgb(245,15,42)" fg:x="27797" fg:w="42"/><text x="27.3992%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (42 samples, 0.04%)</title><rect x="27.1492%" y="533" width="0.0410%" height="15" fill="rgb(222,217,39)" fg:x="27797" fg:w="42"/><text x="27.3992%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (14 samples, 0.01%)</title><rect x="27.1902%" y="693" width="0.0137%" height="15" fill="rgb(210,219,27)" fg:x="27839" fg:w="14"/><text x="27.4402%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (170 samples, 0.17%)</title><rect x="27.0476%" y="757" width="0.1660%" height="15" fill="rgb(252,166,36)" fg:x="27693" fg:w="170"/><text x="27.2976%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (170 samples, 0.17%)</title><rect x="27.0476%" y="741" width="0.1660%" height="15" fill="rgb(245,132,34)" fg:x="27693" fg:w="170"/><text x="27.2976%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (156 samples, 0.15%)</title><rect x="27.0613%" y="725" width="0.1524%" height="15" fill="rgb(236,54,3)" fg:x="27707" fg:w="156"/><text x="27.3113%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (156 samples, 0.15%)</title><rect x="27.0613%" y="709" width="0.1524%" height="15" fill="rgb(241,173,43)" fg:x="27707" fg:w="156"/><text x="27.3113%" y="719.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="27.2479%" y="501" width="0.0137%" height="15" fill="rgb(215,190,9)" fg:x="27898" fg:w="14"/><text x="27.4979%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (29 samples, 0.03%)</title><rect x="27.2947%" y="453" width="0.0283%" height="15" fill="rgb(242,101,16)" fg:x="27946" fg:w="29"/><text x="27.5447%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="27.3016%" y="437" width="0.0215%" height="15" fill="rgb(223,190,21)" fg:x="27953" fg:w="22"/><text x="27.5516%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (70 samples, 0.07%)</title><rect x="27.2684%" y="501" width="0.0684%" height="15" fill="rgb(215,228,25)" fg:x="27919" fg:w="70"/><text x="27.5184%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (70 samples, 0.07%)</title><rect x="27.2684%" y="485" width="0.0684%" height="15" fill="rgb(225,36,22)" fg:x="27919" fg:w="70"/><text x="27.5184%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.07%)</title><rect x="27.2684%" y="469" width="0.0684%" height="15" fill="rgb(251,106,46)" fg:x="27919" fg:w="70"/><text x="27.5184%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="27.3231%" y="453" width="0.0137%" height="15" fill="rgb(208,90,1)" fg:x="27975" fg:w="14"/><text x="27.5731%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="27.3231%" y="437" width="0.0137%" height="15" fill="rgb(243,10,4)" fg:x="27975" fg:w="14"/><text x="27.5731%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (118 samples, 0.12%)</title><rect x="27.2479%" y="533" width="0.1153%" height="15" fill="rgb(212,137,27)" fg:x="27898" fg:w="118"/><text x="27.4979%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (118 samples, 0.12%)</title><rect x="27.2479%" y="517" width="0.1153%" height="15" fill="rgb(231,220,49)" fg:x="27898" fg:w="118"/><text x="27.4979%" y="527.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (27 samples, 0.03%)</title><rect x="27.3367%" y="501" width="0.0264%" height="15" fill="rgb(237,96,20)" fg:x="27989" fg:w="27"/><text x="27.5867%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (121 samples, 0.12%)</title><rect x="27.2479%" y="565" width="0.1182%" height="15" fill="rgb(239,229,30)" fg:x="27898" fg:w="121"/><text x="27.4979%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (121 samples, 0.12%)</title><rect x="27.2479%" y="549" width="0.1182%" height="15" fill="rgb(219,65,33)" fg:x="27898" fg:w="121"/><text x="27.4979%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (147 samples, 0.14%)</title><rect x="27.2322%" y="581" width="0.1436%" height="15" fill="rgb(243,134,7)" fg:x="27882" fg:w="147"/><text x="27.4822%" y="591.50"></text></g><g><title>rust_dealloc (169 samples, 0.17%)</title><rect x="27.2225%" y="597" width="0.1651%" height="15" fill="rgb(216,177,54)" fg:x="27872" fg:w="169"/><text x="27.4725%" y="607.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="27.3758%" y="581" width="0.0117%" height="15" fill="rgb(211,160,20)" fg:x="28029" fg:w="12"/><text x="27.6258%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (179 samples, 0.17%)</title><rect x="27.2147%" y="661" width="0.1748%" height="15" fill="rgb(239,85,39)" fg:x="27864" fg:w="179"/><text x="27.4647%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (179 samples, 0.17%)</title><rect x="27.2147%" y="645" width="0.1748%" height="15" fill="rgb(232,125,22)" fg:x="27864" fg:w="179"/><text x="27.4647%" y="655.50"></text></g><g><title>__rg_dealloc (179 samples, 0.17%)</title><rect x="27.2147%" y="629" width="0.1748%" height="15" fill="rgb(244,57,34)" fg:x="27864" fg:w="179"/><text x="27.4647%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (179 samples, 0.17%)</title><rect x="27.2147%" y="613" width="0.1748%" height="15" fill="rgb(214,203,32)" fg:x="27864" fg:w="179"/><text x="27.4647%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (190 samples, 0.19%)</title><rect x="27.2137%" y="725" width="0.1856%" height="15" fill="rgb(207,58,43)" fg:x="27863" fg:w="190"/><text x="27.4637%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.19%)</title><rect x="27.2137%" y="709" width="0.1856%" height="15" fill="rgb(215,193,15)" fg:x="27863" fg:w="190"/><text x="27.4637%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (189 samples, 0.18%)</title><rect x="27.2147%" y="693" width="0.1846%" height="15" fill="rgb(232,15,44)" fg:x="27864" fg:w="189"/><text x="27.4647%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (189 samples, 0.18%)</title><rect x="27.2147%" y="677" width="0.1846%" height="15" fill="rgb(212,3,48)" fg:x="27864" fg:w="189"/><text x="27.4647%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.19%)</title><rect x="27.2137%" y="741" width="0.1895%" height="15" fill="rgb(218,128,7)" fg:x="27863" fg:w="194"/><text x="27.4637%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (201 samples, 0.20%)</title><rect x="27.2137%" y="757" width="0.1963%" height="15" fill="rgb(226,216,39)" fg:x="27863" fg:w="201"/><text x="27.4637%" y="767.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="27.4823%" y="517" width="0.0107%" height="15" fill="rgb(243,47,51)" fg:x="28138" fg:w="11"/><text x="27.7323%" y="527.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="27.4823%" y="501" width="0.0107%" height="15" fill="rgb(241,183,40)" fg:x="28138" fg:w="11"/><text x="27.7323%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.03%)</title><rect x="27.5506%" y="469" width="0.0264%" height="15" fill="rgb(231,217,32)" fg:x="28208" fg:w="27"/><text x="27.8006%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="27.5536%" y="453" width="0.0234%" height="15" fill="rgb(229,61,38)" fg:x="28211" fg:w="24"/><text x="27.8036%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (104 samples, 0.10%)</title><rect x="27.5008%" y="517" width="0.1016%" height="15" fill="rgb(225,210,5)" fg:x="28157" fg:w="104"/><text x="27.7508%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (104 samples, 0.10%)</title><rect x="27.5008%" y="501" width="0.1016%" height="15" fill="rgb(231,79,45)" fg:x="28157" fg:w="104"/><text x="27.7508%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (104 samples, 0.10%)</title><rect x="27.5008%" y="485" width="0.1016%" height="15" fill="rgb(224,100,7)" fg:x="28157" fg:w="104"/><text x="27.7508%" y="495.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (26 samples, 0.03%)</title><rect x="27.5770%" y="469" width="0.0254%" height="15" fill="rgb(241,198,18)" fg:x="28235" fg:w="26"/><text x="27.8270%" y="479.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (26 samples, 0.03%)</title><rect x="27.5770%" y="453" width="0.0254%" height="15" fill="rgb(252,97,53)" fg:x="28235" fg:w="26"/><text x="27.8270%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (142 samples, 0.14%)</title><rect x="27.4715%" y="549" width="0.1387%" height="15" fill="rgb(220,88,7)" fg:x="28127" fg:w="142"/><text x="27.7215%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (142 samples, 0.14%)</title><rect x="27.4715%" y="533" width="0.1387%" height="15" fill="rgb(213,176,14)" fg:x="28127" fg:w="142"/><text x="27.7215%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (148 samples, 0.14%)</title><rect x="27.4715%" y="581" width="0.1446%" height="15" fill="rgb(246,73,7)" fg:x="28127" fg:w="148"/><text x="27.7215%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (148 samples, 0.14%)</title><rect x="27.4715%" y="565" width="0.1446%" height="15" fill="rgb(245,64,36)" fg:x="28127" fg:w="148"/><text x="27.7215%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (183 samples, 0.18%)</title><rect x="27.4500%" y="597" width="0.1787%" height="15" fill="rgb(245,80,10)" fg:x="28105" fg:w="183"/><text x="27.7000%" y="607.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.6161%" y="581" width="0.0127%" height="15" fill="rgb(232,107,50)" fg:x="28275" fg:w="13"/><text x="27.8661%" y="591.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.6161%" y="565" width="0.0127%" height="15" fill="rgb(253,3,0)" fg:x="28275" fg:w="13"/><text x="27.8661%" y="575.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="27.6161%" y="549" width="0.0127%" height="15" fill="rgb(212,99,53)" fg:x="28275" fg:w="13"/><text x="27.8661%" y="559.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="27.6161%" y="533" width="0.0127%" height="15" fill="rgb(249,111,54)" fg:x="28275" fg:w="13"/><text x="27.8661%" y="543.50"></text></g><g><title>rust_dealloc (215 samples, 0.21%)</title><rect x="27.4325%" y="613" width="0.2100%" height="15" fill="rgb(249,55,30)" fg:x="28087" fg:w="215"/><text x="27.6825%" y="623.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="27.6288%" y="597" width="0.0137%" height="15" fill="rgb(237,47,42)" fg:x="28288" fg:w="14"/><text x="27.8788%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (223 samples, 0.22%)</title><rect x="27.4266%" y="677" width="0.2178%" height="15" fill="rgb(211,20,18)" fg:x="28081" fg:w="223"/><text x="27.6766%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (223 samples, 0.22%)</title><rect x="27.4266%" y="661" width="0.2178%" height="15" fill="rgb(231,203,46)" fg:x="28081" fg:w="223"/><text x="27.6766%" y="671.50"></text></g><g><title>__rg_dealloc (223 samples, 0.22%)</title><rect x="27.4266%" y="645" width="0.2178%" height="15" fill="rgb(237,142,3)" fg:x="28081" fg:w="223"/><text x="27.6766%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (223 samples, 0.22%)</title><rect x="27.4266%" y="629" width="0.2178%" height="15" fill="rgb(241,107,1)" fg:x="28081" fg:w="223"/><text x="27.6766%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (241 samples, 0.24%)</title><rect x="27.4159%" y="741" width="0.2354%" height="15" fill="rgb(229,83,13)" fg:x="28070" fg:w="241"/><text x="27.6659%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (241 samples, 0.24%)</title><rect x="27.4159%" y="725" width="0.2354%" height="15" fill="rgb(241,91,40)" fg:x="28070" fg:w="241"/><text x="27.6659%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (241 samples, 0.24%)</title><rect x="27.4159%" y="709" width="0.2354%" height="15" fill="rgb(225,3,45)" fg:x="28070" fg:w="241"/><text x="27.6659%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (241 samples, 0.24%)</title><rect x="27.4159%" y="693" width="0.2354%" height="15" fill="rgb(244,223,14)" fg:x="28070" fg:w="241"/><text x="27.6659%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (30 samples, 0.03%)</title><rect x="27.7274%" y="421" width="0.0293%" height="15" fill="rgb(224,124,37)" fg:x="28389" fg:w="30"/><text x="27.9774%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="27.7333%" y="405" width="0.0234%" height="15" fill="rgb(251,171,30)" fg:x="28395" fg:w="24"/><text x="27.9833%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (62 samples, 0.06%)</title><rect x="27.7118%" y="469" width="0.0606%" height="15" fill="rgb(236,46,54)" fg:x="28373" fg:w="62"/><text x="27.9618%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (62 samples, 0.06%)</title><rect x="27.7118%" y="453" width="0.0606%" height="15" fill="rgb(245,213,5)" fg:x="28373" fg:w="62"/><text x="27.9618%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (62 samples, 0.06%)</title><rect x="27.7118%" y="437" width="0.0606%" height="15" fill="rgb(230,144,27)" fg:x="28373" fg:w="62"/><text x="27.9618%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (16 samples, 0.02%)</title><rect x="27.7567%" y="421" width="0.0156%" height="15" fill="rgb(220,86,6)" fg:x="28419" fg:w="16"/><text x="28.0067%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (16 samples, 0.02%)</title><rect x="27.7567%" y="405" width="0.0156%" height="15" fill="rgb(240,20,13)" fg:x="28419" fg:w="16"/><text x="28.0067%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (84 samples, 0.08%)</title><rect x="27.7001%" y="501" width="0.0820%" height="15" fill="rgb(217,89,34)" fg:x="28361" fg:w="84"/><text x="27.9501%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (84 samples, 0.08%)</title><rect x="27.7001%" y="485" width="0.0820%" height="15" fill="rgb(229,13,5)" fg:x="28361" fg:w="84"/><text x="27.9501%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (90 samples, 0.09%)</title><rect x="27.7001%" y="533" width="0.0879%" height="15" fill="rgb(244,67,35)" fg:x="28361" fg:w="90"/><text x="27.9501%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (90 samples, 0.09%)</title><rect x="27.7001%" y="517" width="0.0879%" height="15" fill="rgb(221,40,2)" fg:x="28361" fg:w="90"/><text x="27.9501%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (110 samples, 0.11%)</title><rect x="27.6854%" y="549" width="0.1074%" height="15" fill="rgb(237,157,21)" fg:x="28346" fg:w="110"/><text x="27.9354%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (131 samples, 0.13%)</title><rect x="27.6708%" y="581" width="0.1279%" height="15" fill="rgb(222,94,11)" fg:x="28331" fg:w="131"/><text x="27.9208%" y="591.50"></text></g><g><title>rust_dealloc (127 samples, 0.12%)</title><rect x="27.6747%" y="565" width="0.1240%" height="15" fill="rgb(249,113,6)" fg:x="28335" fg:w="127"/><text x="27.9247%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (141 samples, 0.14%)</title><rect x="27.6708%" y="629" width="0.1377%" height="15" fill="rgb(238,137,36)" fg:x="28331" fg:w="141"/><text x="27.9208%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (141 samples, 0.14%)</title><rect x="27.6708%" y="613" width="0.1377%" height="15" fill="rgb(210,102,26)" fg:x="28331" fg:w="141"/><text x="27.9208%" y="623.50"></text></g><g><title>__rg_dealloc (141 samples, 0.14%)</title><rect x="27.6708%" y="597" width="0.1377%" height="15" fill="rgb(218,30,30)" fg:x="28331" fg:w="141"/><text x="27.9208%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 0.17%)</title><rect x="27.6512%" y="725" width="0.1709%" height="15" fill="rgb(214,67,26)" fg:x="28311" fg:w="175"/><text x="27.9012%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (172 samples, 0.17%)</title><rect x="27.6542%" y="709" width="0.1680%" height="15" fill="rgb(251,9,53)" fg:x="28314" fg:w="172"/><text x="27.9042%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (162 samples, 0.16%)</title><rect x="27.6639%" y="693" width="0.1582%" height="15" fill="rgb(228,204,25)" fg:x="28324" fg:w="162"/><text x="27.9139%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (162 samples, 0.16%)</title><rect x="27.6639%" y="677" width="0.1582%" height="15" fill="rgb(207,153,8)" fg:x="28324" fg:w="162"/><text x="27.9139%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (162 samples, 0.16%)</title><rect x="27.6639%" y="661" width="0.1582%" height="15" fill="rgb(242,9,16)" fg:x="28324" fg:w="162"/><text x="27.9139%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.16%)</title><rect x="27.6639%" y="645" width="0.1582%" height="15" fill="rgb(217,211,10)" fg:x="28324" fg:w="162"/><text x="27.9139%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="27.8085%" y="629" width="0.0137%" height="15" fill="rgb(219,228,52)" fg:x="28472" fg:w="14"/><text x="28.0585%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (16 samples, 0.02%)</title><rect x="27.8222%" y="725" width="0.0156%" height="15" fill="rgb(231,92,29)" fg:x="28486" fg:w="16"/><text x="28.0722%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="27.8222%" y="709" width="0.0156%" height="15" fill="rgb(232,8,23)" fg:x="28486" fg:w="16"/><text x="28.0722%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="27.8251%" y="693" width="0.0127%" height="15" fill="rgb(216,211,34)" fg:x="28489" fg:w="13"/><text x="28.0751%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (439 samples, 0.43%)</title><rect x="27.4100%" y="757" width="0.4288%" height="15" fill="rgb(236,151,0)" fg:x="28064" fg:w="439"/><text x="27.6600%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (192 samples, 0.19%)</title><rect x="27.6512%" y="741" width="0.1875%" height="15" fill="rgb(209,168,3)" fg:x="28311" fg:w="192"/><text x="27.9012%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="27.8837%" y="613" width="0.0137%" height="15" fill="rgb(208,129,28)" fg:x="28549" fg:w="14"/><text x="28.1337%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (50 samples, 0.05%)</title><rect x="27.8593%" y="661" width="0.0488%" height="15" fill="rgb(229,78,22)" fg:x="28524" fg:w="50"/><text x="28.1093%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (50 samples, 0.05%)</title><rect x="27.8593%" y="645" width="0.0488%" height="15" fill="rgb(228,187,13)" fg:x="28524" fg:w="50"/><text x="28.1093%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (47 samples, 0.05%)</title><rect x="27.8622%" y="629" width="0.0459%" height="15" fill="rgb(240,119,24)" fg:x="28527" fg:w="47"/><text x="28.1122%" y="639.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="27.8974%" y="613" width="0.0107%" height="15" fill="rgb(209,194,42)" fg:x="28563" fg:w="11"/><text x="28.1474%" y="623.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="27.8974%" y="597" width="0.0107%" height="15" fill="rgb(247,200,46)" fg:x="28563" fg:w="11"/><text x="28.1474%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (62 samples, 0.06%)</title><rect x="27.8495%" y="693" width="0.0606%" height="15" fill="rgb(218,76,16)" fg:x="28514" fg:w="62"/><text x="28.0995%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (62 samples, 0.06%)</title><rect x="27.8495%" y="677" width="0.0606%" height="15" fill="rgb(225,21,48)" fg:x="28514" fg:w="62"/><text x="28.0995%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (76 samples, 0.07%)</title><rect x="27.8495%" y="725" width="0.0742%" height="15" fill="rgb(239,223,50)" fg:x="28514" fg:w="76"/><text x="28.0995%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (76 samples, 0.07%)</title><rect x="27.8495%" y="709" width="0.0742%" height="15" fill="rgb(244,45,21)" fg:x="28514" fg:w="76"/><text x="28.0995%" y="719.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="27.9101%" y="693" width="0.0137%" height="15" fill="rgb(232,33,43)" fg:x="28576" fg:w="14"/><text x="28.1601%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="27.9101%" y="677" width="0.0137%" height="15" fill="rgb(209,8,3)" fg:x="28576" fg:w="14"/><text x="28.1601%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="27.9101%" y="661" width="0.0137%" height="15" fill="rgb(214,25,53)" fg:x="28576" fg:w="14"/><text x="28.1601%" y="671.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="27.9101%" y="645" width="0.0137%" height="15" fill="rgb(254,186,54)" fg:x="28576" fg:w="14"/><text x="28.1601%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (84 samples, 0.08%)</title><rect x="27.8485%" y="741" width="0.0820%" height="15" fill="rgb(208,174,49)" fg:x="28513" fg:w="84"/><text x="28.0985%" y="751.50"></text></g><g><title>rust_dealloc (102 samples, 0.10%)</title><rect x="27.8388%" y="757" width="0.0996%" height="15" fill="rgb(233,191,51)" fg:x="28503" fg:w="102"/><text x="28.0888%" y="767.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (46 samples, 0.04%)</title><rect x="27.9413%" y="757" width="0.0449%" height="15" fill="rgb(222,134,10)" fg:x="28608" fg:w="46"/><text x="28.1913%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,025 samples, 10.77%)</title><rect x="17.2289%" y="805" width="10.7681%" height="15" fill="rgb(230,226,20)" fg:x="17640" fg:w="11025"/><text x="17.4789%" y="815.50">&lt;core::future::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (11,025 samples, 10.77%)</title><rect x="17.2289%" y="789" width="10.7681%" height="15" fill="rgb(251,111,25)" fg:x="17640" fg:w="11025"/><text x="17.4789%" y="799.50">tremor_runtime::..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,105 samples, 4.01%)</title><rect x="23.9877%" y="773" width="4.0093%" height="15" fill="rgb(224,40,46)" fg:x="24560" fg:w="4105"/><text x="24.2377%" y="783.50">trem..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="27.9999%" y="405" width="0.0107%" height="15" fill="rgb(236,108,47)" fg:x="28668" fg:w="11"/><text x="28.2499%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="27.9999%" y="389" width="0.0107%" height="15" fill="rgb(234,93,0)" fg:x="28668" fg:w="11"/><text x="28.2499%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (17 samples, 0.02%)</title><rect x="27.9999%" y="421" width="0.0166%" height="15" fill="rgb(224,213,32)" fg:x="28668" fg:w="17"/><text x="28.2499%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (26 samples, 0.03%)</title><rect x="27.9970%" y="437" width="0.0254%" height="15" fill="rgb(251,11,48)" fg:x="28665" fg:w="26"/><text x="28.2470%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (88 samples, 0.09%)</title><rect x="27.9970%" y="469" width="0.0859%" height="15" fill="rgb(236,173,5)" fg:x="28665" fg:w="88"/><text x="28.2470%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (88 samples, 0.09%)</title><rect x="27.9970%" y="453" width="0.0859%" height="15" fill="rgb(230,95,12)" fg:x="28665" fg:w="88"/><text x="28.2470%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (62 samples, 0.06%)</title><rect x="28.0224%" y="437" width="0.0606%" height="15" fill="rgb(232,209,1)" fg:x="28691" fg:w="62"/><text x="28.2724%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (54 samples, 0.05%)</title><rect x="28.0302%" y="421" width="0.0527%" height="15" fill="rgb(232,6,1)" fg:x="28699" fg:w="54"/><text x="28.2802%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="28.0302%" y="405" width="0.0527%" height="15" fill="rgb(210,224,50)" fg:x="28699" fg:w="54"/><text x="28.2802%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="28.0302%" y="389" width="0.0527%" height="15" fill="rgb(228,127,35)" fg:x="28699" fg:w="54"/><text x="28.2802%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (93 samples, 0.09%)</title><rect x="27.9970%" y="741" width="0.0908%" height="15" fill="rgb(245,102,45)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (93 samples, 0.09%)</title><rect x="27.9970%" y="725" width="0.0908%" height="15" fill="rgb(214,1,49)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (93 samples, 0.09%)</title><rect x="27.9970%" y="709" width="0.0908%" height="15" fill="rgb(226,163,40)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (93 samples, 0.09%)</title><rect x="27.9970%" y="693" width="0.0908%" height="15" fill="rgb(239,212,28)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (93 samples, 0.09%)</title><rect x="27.9970%" y="677" width="0.0908%" height="15" fill="rgb(220,20,13)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (93 samples, 0.09%)</title><rect x="27.9970%" y="661" width="0.0908%" height="15" fill="rgb(210,164,35)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (93 samples, 0.09%)</title><rect x="27.9970%" y="645" width="0.0908%" height="15" fill="rgb(248,109,41)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (93 samples, 0.09%)</title><rect x="27.9970%" y="629" width="0.0908%" height="15" fill="rgb(238,23,50)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (93 samples, 0.09%)</title><rect x="27.9970%" y="613" width="0.0908%" height="15" fill="rgb(211,48,49)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (93 samples, 0.09%)</title><rect x="27.9970%" y="597" width="0.0908%" height="15" fill="rgb(223,36,21)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="607.50"></text></g><g><title>alloc::alloc::alloc (93 samples, 0.09%)</title><rect x="27.9970%" y="581" width="0.0908%" height="15" fill="rgb(207,123,46)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="591.50"></text></g><g><title>__rg_alloc (93 samples, 0.09%)</title><rect x="27.9970%" y="565" width="0.0908%" height="15" fill="rgb(240,218,32)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (93 samples, 0.09%)</title><rect x="27.9970%" y="549" width="0.0908%" height="15" fill="rgb(252,5,43)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="559.50"></text></g><g><title>rust_alloc (93 samples, 0.09%)</title><rect x="27.9970%" y="533" width="0.0908%" height="15" fill="rgb(252,84,19)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.09%)</title><rect x="27.9970%" y="517" width="0.0908%" height="15" fill="rgb(243,152,39)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.09%)</title><rect x="27.9970%" y="501" width="0.0908%" height="15" fill="rgb(234,160,15)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.09%)</title><rect x="27.9970%" y="485" width="0.0908%" height="15" fill="rgb(237,34,20)" fg:x="28665" fg:w="93"/><text x="28.2470%" y="495.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="28.1562%" y="453" width="0.0127%" height="15" fill="rgb(229,97,13)" fg:x="28828" fg:w="13"/><text x="28.4062%" y="463.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="28.1728%" y="421" width="0.0117%" height="15" fill="rgb(234,71,50)" fg:x="28845" fg:w="12"/><text x="28.4228%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (16 samples, 0.02%)</title><rect x="28.2031%" y="341" width="0.0156%" height="15" fill="rgb(253,155,4)" fg:x="28876" fg:w="16"/><text x="28.4531%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (16 samples, 0.02%)</title><rect x="28.2031%" y="325" width="0.0156%" height="15" fill="rgb(222,185,37)" fg:x="28876" fg:w="16"/><text x="28.4531%" y="335.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (12 samples, 0.01%)</title><rect x="28.2070%" y="309" width="0.0117%" height="15" fill="rgb(251,177,13)" fg:x="28880" fg:w="12"/><text x="28.4570%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (22 samples, 0.02%)</title><rect x="28.2031%" y="357" width="0.0215%" height="15" fill="rgb(250,179,40)" fg:x="28876" fg:w="22"/><text x="28.4531%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (36 samples, 0.04%)</title><rect x="28.1933%" y="373" width="0.0352%" height="15" fill="rgb(242,44,2)" fg:x="28866" fg:w="36"/><text x="28.4433%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (20 samples, 0.02%)</title><rect x="28.2363%" y="357" width="0.0195%" height="15" fill="rgb(216,177,13)" fg:x="28910" fg:w="20"/><text x="28.4863%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (163 samples, 0.16%)</title><rect x="28.1933%" y="405" width="0.1592%" height="15" fill="rgb(216,106,43)" fg:x="28866" fg:w="163"/><text x="28.4433%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (163 samples, 0.16%)</title><rect x="28.1933%" y="389" width="0.1592%" height="15" fill="rgb(216,183,2)" fg:x="28866" fg:w="163"/><text x="28.4433%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (127 samples, 0.12%)</title><rect x="28.2285%" y="373" width="0.1240%" height="15" fill="rgb(249,75,3)" fg:x="28902" fg:w="127"/><text x="28.4785%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (99 samples, 0.10%)</title><rect x="28.2558%" y="357" width="0.0967%" height="15" fill="rgb(219,67,39)" fg:x="28930" fg:w="99"/><text x="28.5058%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (99 samples, 0.10%)</title><rect x="28.2558%" y="341" width="0.0967%" height="15" fill="rgb(253,228,2)" fg:x="28930" fg:w="99"/><text x="28.5058%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (99 samples, 0.10%)</title><rect x="28.2558%" y="325" width="0.0967%" height="15" fill="rgb(235,138,27)" fg:x="28930" fg:w="99"/><text x="28.5058%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::empty (12 samples, 0.01%)</title><rect x="28.3642%" y="405" width="0.0117%" height="15" fill="rgb(236,97,51)" fg:x="29041" fg:w="12"/><text x="28.6142%" y="415.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (12 samples, 0.01%)</title><rect x="28.3642%" y="389" width="0.0117%" height="15" fill="rgb(240,80,30)" fg:x="29041" fg:w="12"/><text x="28.6142%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (331 samples, 0.32%)</title><rect x="28.1728%" y="453" width="0.3233%" height="15" fill="rgb(230,178,19)" fg:x="28845" fg:w="331"/><text x="28.4228%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (331 samples, 0.32%)</title><rect x="28.1728%" y="437" width="0.3233%" height="15" fill="rgb(210,190,27)" fg:x="28845" fg:w="331"/><text x="28.4228%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (313 samples, 0.31%)</title><rect x="28.1904%" y="421" width="0.3057%" height="15" fill="rgb(222,107,31)" fg:x="28863" fg:w="313"/><text x="28.4404%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (123 samples, 0.12%)</title><rect x="28.3759%" y="405" width="0.1201%" height="15" fill="rgb(216,127,34)" fg:x="29053" fg:w="123"/><text x="28.6259%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (123 samples, 0.12%)</title><rect x="28.3759%" y="389" width="0.1201%" height="15" fill="rgb(234,116,52)" fg:x="29053" fg:w="123"/><text x="28.6259%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (380 samples, 0.37%)</title><rect x="28.1367%" y="597" width="0.3711%" height="15" fill="rgb(222,124,15)" fg:x="28808" fg:w="380"/><text x="28.3867%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (380 samples, 0.37%)</title><rect x="28.1367%" y="581" width="0.3711%" height="15" fill="rgb(231,179,28)" fg:x="28808" fg:w="380"/><text x="28.3867%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (380 samples, 0.37%)</title><rect x="28.1367%" y="565" width="0.3711%" height="15" fill="rgb(226,93,45)" fg:x="28808" fg:w="380"/><text x="28.3867%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (377 samples, 0.37%)</title><rect x="28.1396%" y="549" width="0.3682%" height="15" fill="rgb(215,8,51)" fg:x="28811" fg:w="377"/><text x="28.3896%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (377 samples, 0.37%)</title><rect x="28.1396%" y="533" width="0.3682%" height="15" fill="rgb(223,106,5)" fg:x="28811" fg:w="377"/><text x="28.3896%" y="543.50"></text></g><g><title>alloc::alloc::alloc (369 samples, 0.36%)</title><rect x="28.1474%" y="517" width="0.3604%" height="15" fill="rgb(250,191,5)" fg:x="28819" fg:w="369"/><text x="28.3974%" y="527.50"></text></g><g><title>__rg_alloc (369 samples, 0.36%)</title><rect x="28.1474%" y="501" width="0.3604%" height="15" fill="rgb(242,132,44)" fg:x="28819" fg:w="369"/><text x="28.3974%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (369 samples, 0.36%)</title><rect x="28.1474%" y="485" width="0.3604%" height="15" fill="rgb(251,152,29)" fg:x="28819" fg:w="369"/><text x="28.3974%" y="495.50"></text></g><g><title>rust_alloc (360 samples, 0.35%)</title><rect x="28.1562%" y="469" width="0.3516%" height="15" fill="rgb(218,179,5)" fg:x="28828" fg:w="360"/><text x="28.4062%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="28.4961%" y="453" width="0.0117%" height="15" fill="rgb(227,67,19)" fg:x="29176" fg:w="12"/><text x="28.7461%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (463 samples, 0.45%)</title><rect x="28.1161%" y="677" width="0.4522%" height="15" fill="rgb(233,119,31)" fg:x="28787" fg:w="463"/><text x="28.3661%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (442 samples, 0.43%)</title><rect x="28.1367%" y="661" width="0.4317%" height="15" fill="rgb(241,120,22)" fg:x="28808" fg:w="442"/><text x="28.3867%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (442 samples, 0.43%)</title><rect x="28.1367%" y="645" width="0.4317%" height="15" fill="rgb(224,102,30)" fg:x="28808" fg:w="442"/><text x="28.3867%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (442 samples, 0.43%)</title><rect x="28.1367%" y="629" width="0.4317%" height="15" fill="rgb(210,164,37)" fg:x="28808" fg:w="442"/><text x="28.3867%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (442 samples, 0.43%)</title><rect x="28.1367%" y="613" width="0.4317%" height="15" fill="rgb(226,191,16)" fg:x="28808" fg:w="442"/><text x="28.3867%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (62 samples, 0.06%)</title><rect x="28.5078%" y="597" width="0.0606%" height="15" fill="rgb(214,40,45)" fg:x="29188" fg:w="62"/><text x="28.7578%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.06%)</title><rect x="28.5078%" y="581" width="0.0606%" height="15" fill="rgb(244,29,26)" fg:x="29188" fg:w="62"/><text x="28.7578%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (41 samples, 0.04%)</title><rect x="28.5283%" y="565" width="0.0400%" height="15" fill="rgb(216,16,5)" fg:x="29209" fg:w="41"/><text x="28.7783%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="28.5684%" y="677" width="0.0156%" height="15" fill="rgb(249,76,35)" fg:x="29250" fg:w="16"/><text x="28.8184%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="28.6367%" y="421" width="0.0107%" height="15" fill="rgb(207,11,44)" fg:x="29320" fg:w="11"/><text x="28.8867%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="28.6367%" y="405" width="0.0107%" height="15" fill="rgb(228,190,49)" fg:x="29320" fg:w="11"/><text x="28.8867%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="28.6367%" y="389" width="0.0107%" height="15" fill="rgb(214,173,12)" fg:x="29320" fg:w="11"/><text x="28.8867%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="28.6367%" y="437" width="0.0117%" height="15" fill="rgb(218,26,35)" fg:x="29320" fg:w="12"/><text x="28.8867%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="28.6348%" y="453" width="0.0147%" height="15" fill="rgb(220,200,19)" fg:x="29318" fg:w="15"/><text x="28.8848%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="28.6348%" y="485" width="0.0918%" height="15" fill="rgb(239,95,49)" fg:x="29318" fg:w="94"/><text x="28.8848%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (94 samples, 0.09%)</title><rect x="28.6348%" y="469" width="0.0918%" height="15" fill="rgb(235,85,53)" fg:x="29318" fg:w="94"/><text x="28.8848%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (79 samples, 0.08%)</title><rect x="28.6494%" y="453" width="0.0772%" height="15" fill="rgb(233,133,31)" fg:x="29333" fg:w="79"/><text x="28.8994%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (63 samples, 0.06%)</title><rect x="28.6651%" y="437" width="0.0615%" height="15" fill="rgb(218,25,20)" fg:x="29349" fg:w="63"/><text x="28.9151%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (63 samples, 0.06%)</title><rect x="28.6651%" y="421" width="0.0615%" height="15" fill="rgb(252,210,38)" fg:x="29349" fg:w="63"/><text x="28.9151%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (63 samples, 0.06%)</title><rect x="28.6651%" y="405" width="0.0615%" height="15" fill="rgb(242,134,21)" fg:x="29349" fg:w="63"/><text x="28.9151%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (279 samples, 0.27%)</title><rect x="28.6260%" y="533" width="0.2725%" height="15" fill="rgb(213,28,48)" fg:x="29309" fg:w="279"/><text x="28.8760%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (279 samples, 0.27%)</title><rect x="28.6260%" y="517" width="0.2725%" height="15" fill="rgb(250,196,2)" fg:x="29309" fg:w="279"/><text x="28.8760%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (270 samples, 0.26%)</title><rect x="28.6348%" y="501" width="0.2637%" height="15" fill="rgb(227,5,17)" fg:x="29318" fg:w="270"/><text x="28.8848%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (164 samples, 0.16%)</title><rect x="28.7383%" y="485" width="0.1602%" height="15" fill="rgb(221,226,24)" fg:x="29424" fg:w="164"/><text x="28.9883%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (164 samples, 0.16%)</title><rect x="28.7383%" y="469" width="0.1602%" height="15" fill="rgb(211,5,48)" fg:x="29424" fg:w="164"/><text x="28.9883%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (322 samples, 0.31%)</title><rect x="28.5977%" y="629" width="0.3145%" height="15" fill="rgb(219,150,6)" fg:x="29280" fg:w="322"/><text x="28.8477%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (322 samples, 0.31%)</title><rect x="28.5977%" y="613" width="0.3145%" height="15" fill="rgb(251,46,16)" fg:x="29280" fg:w="322"/><text x="28.8477%" y="623.50"></text></g><g><title>alloc::alloc::alloc (307 samples, 0.30%)</title><rect x="28.6123%" y="597" width="0.2998%" height="15" fill="rgb(220,204,40)" fg:x="29295" fg:w="307"/><text x="28.8623%" y="607.50"></text></g><g><title>__rg_alloc (307 samples, 0.30%)</title><rect x="28.6123%" y="581" width="0.2998%" height="15" fill="rgb(211,85,2)" fg:x="29295" fg:w="307"/><text x="28.8623%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (307 samples, 0.30%)</title><rect x="28.6123%" y="565" width="0.2998%" height="15" fill="rgb(229,17,7)" fg:x="29295" fg:w="307"/><text x="28.8623%" y="575.50"></text></g><g><title>rust_alloc (303 samples, 0.30%)</title><rect x="28.6162%" y="549" width="0.2959%" height="15" fill="rgb(239,72,28)" fg:x="29299" fg:w="303"/><text x="28.8662%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (14 samples, 0.01%)</title><rect x="28.8985%" y="533" width="0.0137%" height="15" fill="rgb(230,47,54)" fg:x="29588" fg:w="14"/><text x="29.1485%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (352 samples, 0.34%)</title><rect x="28.5850%" y="677" width="0.3438%" height="15" fill="rgb(214,50,8)" fg:x="29267" fg:w="352"/><text x="28.8350%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (339 samples, 0.33%)</title><rect x="28.5977%" y="661" width="0.3311%" height="15" fill="rgb(216,198,43)" fg:x="29280" fg:w="339"/><text x="28.8477%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (339 samples, 0.33%)</title><rect x="28.5977%" y="645" width="0.3311%" height="15" fill="rgb(234,20,35)" fg:x="29280" fg:w="339"/><text x="28.8477%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array (12 samples, 0.01%)</title><rect x="28.9170%" y="629" width="0.0117%" height="15" fill="rgb(254,45,19)" fg:x="29607" fg:w="12"/><text x="29.1670%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (12 samples, 0.01%)</title><rect x="28.9170%" y="613" width="0.0117%" height="15" fill="rgb(219,14,44)" fg:x="29607" fg:w="12"/><text x="29.1670%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (12 samples, 0.01%)</title><rect x="28.9170%" y="597" width="0.0117%" height="15" fill="rgb(217,220,26)" fg:x="29607" fg:w="12"/><text x="29.1670%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (854 samples, 0.83%)</title><rect x="28.1074%" y="693" width="0.8341%" height="15" fill="rgb(213,158,28)" fg:x="28778" fg:w="854"/><text x="28.3574%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.01%)</title><rect x="28.9288%" y="677" width="0.0127%" height="15" fill="rgb(252,51,52)" fg:x="29619" fg:w="13"/><text x="29.1788%" y="687.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (978 samples, 0.96%)</title><rect x="27.9970%" y="757" width="0.9552%" height="15" fill="rgb(246,89,16)" fg:x="28665" fg:w="978"/><text x="28.2470%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (885 samples, 0.86%)</title><rect x="28.0878%" y="741" width="0.8644%" height="15" fill="rgb(216,158,49)" fg:x="28758" fg:w="885"/><text x="28.3378%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (865 samples, 0.84%)</title><rect x="28.1074%" y="725" width="0.8448%" height="15" fill="rgb(236,107,19)" fg:x="28778" fg:w="865"/><text x="28.3574%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (865 samples, 0.84%)</title><rect x="28.1074%" y="709" width="0.8448%" height="15" fill="rgb(228,185,30)" fg:x="28778" fg:w="865"/><text x="28.3574%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="28.9415%" y="693" width="0.0107%" height="15" fill="rgb(246,134,8)" fg:x="29632" fg:w="11"/><text x="29.1915%" y="703.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (50 samples, 0.05%)</title><rect x="28.9883%" y="373" width="0.0488%" height="15" fill="rgb(214,143,50)" fg:x="29680" fg:w="50"/><text x="29.2383%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (49 samples, 0.05%)</title><rect x="28.9893%" y="357" width="0.0479%" height="15" fill="rgb(228,75,8)" fg:x="29681" fg:w="49"/><text x="29.2393%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (98 samples, 0.10%)</title><rect x="28.9727%" y="421" width="0.0957%" height="15" fill="rgb(207,175,4)" fg:x="29664" fg:w="98"/><text x="29.2227%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (98 samples, 0.10%)</title><rect x="28.9727%" y="405" width="0.0957%" height="15" fill="rgb(205,108,24)" fg:x="29664" fg:w="98"/><text x="29.2227%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (89 samples, 0.09%)</title><rect x="28.9815%" y="389" width="0.0869%" height="15" fill="rgb(244,120,49)" fg:x="29673" fg:w="89"/><text x="29.2315%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (32 samples, 0.03%)</title><rect x="29.0372%" y="373" width="0.0313%" height="15" fill="rgb(223,47,38)" fg:x="29730" fg:w="32"/><text x="29.2872%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (32 samples, 0.03%)</title><rect x="29.0372%" y="357" width="0.0313%" height="15" fill="rgb(229,179,11)" fg:x="29730" fg:w="32"/><text x="29.2872%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (115 samples, 0.11%)</title><rect x="28.9717%" y="437" width="0.1123%" height="15" fill="rgb(231,122,1)" fg:x="29663" fg:w="115"/><text x="29.2217%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (16 samples, 0.02%)</title><rect x="29.0684%" y="421" width="0.0156%" height="15" fill="rgb(245,119,9)" fg:x="29762" fg:w="16"/><text x="29.3184%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (16 samples, 0.02%)</title><rect x="29.0684%" y="405" width="0.0156%" height="15" fill="rgb(241,163,25)" fg:x="29762" fg:w="16"/><text x="29.3184%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.02%)</title><rect x="29.0684%" y="389" width="0.0156%" height="15" fill="rgb(217,214,3)" fg:x="29762" fg:w="16"/><text x="29.3184%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.02%)</title><rect x="29.0684%" y="373" width="0.0156%" height="15" fill="rgb(240,86,28)" fg:x="29762" fg:w="16"/><text x="29.3184%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (158 samples, 0.15%)</title><rect x="28.9532%" y="453" width="0.1543%" height="15" fill="rgb(215,47,9)" fg:x="29644" fg:w="158"/><text x="29.2032%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (23 samples, 0.02%)</title><rect x="29.0850%" y="437" width="0.0225%" height="15" fill="rgb(252,25,45)" fg:x="29779" fg:w="23"/><text x="29.3350%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (23 samples, 0.02%)</title><rect x="29.0850%" y="421" width="0.0225%" height="15" fill="rgb(251,164,9)" fg:x="29779" fg:w="23"/><text x="29.3350%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (23 samples, 0.02%)</title><rect x="29.0850%" y="405" width="0.0225%" height="15" fill="rgb(233,194,0)" fg:x="29779" fg:w="23"/><text x="29.3350%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (23 samples, 0.02%)</title><rect x="29.0850%" y="389" width="0.0225%" height="15" fill="rgb(249,111,24)" fg:x="29779" fg:w="23"/><text x="29.3350%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (100 samples, 0.10%)</title><rect x="29.1749%" y="437" width="0.0977%" height="15" fill="rgb(250,223,3)" fg:x="29871" fg:w="100"/><text x="29.4249%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (911 samples, 0.89%)</title><rect x="28.9522%" y="485" width="0.8898%" height="15" fill="rgb(236,178,37)" fg:x="29643" fg:w="911"/><text x="29.2022%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (911 samples, 0.89%)</title><rect x="28.9522%" y="469" width="0.8898%" height="15" fill="rgb(241,158,50)" fg:x="29643" fg:w="911"/><text x="29.2022%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (752 samples, 0.73%)</title><rect x="29.1075%" y="453" width="0.7345%" height="15" fill="rgb(213,121,41)" fg:x="29802" fg:w="752"/><text x="29.3575%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (583 samples, 0.57%)</title><rect x="29.2726%" y="437" width="0.5694%" height="15" fill="rgb(240,92,3)" fg:x="29971" fg:w="583"/><text x="29.5226%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (583 samples, 0.57%)</title><rect x="29.2726%" y="421" width="0.5694%" height="15" fill="rgb(205,123,3)" fg:x="29971" fg:w="583"/><text x="29.5226%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (583 samples, 0.57%)</title><rect x="29.2726%" y="405" width="0.5694%" height="15" fill="rgb(205,97,47)" fg:x="29971" fg:w="583"/><text x="29.5226%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (12 samples, 0.01%)</title><rect x="29.8429%" y="437" width="0.0117%" height="15" fill="rgb(247,152,14)" fg:x="30555" fg:w="12"/><text x="30.0929%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (11 samples, 0.01%)</title><rect x="29.8439%" y="421" width="0.0107%" height="15" fill="rgb(248,195,53)" fg:x="30556" fg:w="11"/><text x="30.0939%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="29.8635%" y="405" width="0.0137%" height="15" fill="rgb(226,201,16)" fg:x="30576" fg:w="14"/><text x="30.1135%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="29.8635%" y="389" width="0.0137%" height="15" fill="rgb(205,98,0)" fg:x="30576" fg:w="14"/><text x="30.1135%" y="399.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (12,967 samples, 12.66%)</title><rect x="17.2289%" y="821" width="12.6648%" height="15" fill="rgb(214,191,48)" fg:x="17640" fg:w="12967"/><text x="17.4789%" y="831.50">tremor_runtime::con..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,942 samples, 1.90%)</title><rect x="27.9970%" y="805" width="1.8967%" height="15" fill="rgb(237,112,39)" fg:x="28665" fg:w="1942"/><text x="28.2470%" y="815.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,942 samples, 1.90%)</title><rect x="27.9970%" y="789" width="1.8967%" height="15" fill="rgb(247,203,27)" fg:x="28665" fg:w="1942"/><text x="28.2470%" y="799.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (1,942 samples, 1.90%)</title><rect x="27.9970%" y="773" width="1.8967%" height="15" fill="rgb(235,124,28)" fg:x="28665" fg:w="1942"/><text x="28.2470%" y="783.50">&lt;..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (964 samples, 0.94%)</title><rect x="28.9522%" y="757" width="0.9415%" height="15" fill="rgb(208,207,46)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (964 samples, 0.94%)</title><rect x="28.9522%" y="741" width="0.9415%" height="15" fill="rgb(234,176,4)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (964 samples, 0.94%)</title><rect x="28.9522%" y="725" width="0.9415%" height="15" fill="rgb(230,133,28)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (964 samples, 0.94%)</title><rect x="28.9522%" y="709" width="0.9415%" height="15" fill="rgb(211,137,40)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (964 samples, 0.94%)</title><rect x="28.9522%" y="693" width="0.9415%" height="15" fill="rgb(254,35,13)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (964 samples, 0.94%)</title><rect x="28.9522%" y="677" width="0.9415%" height="15" fill="rgb(225,49,51)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (964 samples, 0.94%)</title><rect x="28.9522%" y="661" width="0.9415%" height="15" fill="rgb(251,10,15)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (964 samples, 0.94%)</title><rect x="28.9522%" y="645" width="0.9415%" height="15" fill="rgb(228,207,15)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (964 samples, 0.94%)</title><rect x="28.9522%" y="629" width="0.9415%" height="15" fill="rgb(241,99,19)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (964 samples, 0.94%)</title><rect x="28.9522%" y="613" width="0.9415%" height="15" fill="rgb(207,104,49)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="623.50"></text></g><g><title>alloc::alloc::alloc (964 samples, 0.94%)</title><rect x="28.9522%" y="597" width="0.9415%" height="15" fill="rgb(234,99,18)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="607.50"></text></g><g><title>__rg_alloc (964 samples, 0.94%)</title><rect x="28.9522%" y="581" width="0.9415%" height="15" fill="rgb(213,191,49)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (964 samples, 0.94%)</title><rect x="28.9522%" y="565" width="0.9415%" height="15" fill="rgb(210,226,19)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="575.50"></text></g><g><title>rust_alloc (964 samples, 0.94%)</title><rect x="28.9522%" y="549" width="0.9415%" height="15" fill="rgb(229,97,18)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (964 samples, 0.94%)</title><rect x="28.9522%" y="533" width="0.9415%" height="15" fill="rgb(211,167,15)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (964 samples, 0.94%)</title><rect x="28.9522%" y="517" width="0.9415%" height="15" fill="rgb(210,169,34)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (964 samples, 0.94%)</title><rect x="28.9522%" y="501" width="0.9415%" height="15" fill="rgb(241,121,31)" fg:x="29643" fg:w="964"/><text x="29.2022%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="29.8420%" y="485" width="0.0518%" height="15" fill="rgb(232,40,11)" fg:x="30554" fg:w="53"/><text x="30.0920%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="29.8420%" y="469" width="0.0518%" height="15" fill="rgb(205,86,26)" fg:x="30554" fg:w="53"/><text x="30.0920%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (53 samples, 0.05%)</title><rect x="29.8420%" y="453" width="0.0518%" height="15" fill="rgb(231,126,28)" fg:x="30554" fg:w="53"/><text x="30.0920%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (40 samples, 0.04%)</title><rect x="29.8547%" y="437" width="0.0391%" height="15" fill="rgb(219,221,18)" fg:x="30567" fg:w="40"/><text x="30.1047%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (39 samples, 0.04%)</title><rect x="29.8556%" y="421" width="0.0381%" height="15" fill="rgb(211,40,0)" fg:x="30568" fg:w="39"/><text x="30.1056%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::close (17 samples, 0.02%)</title><rect x="29.8771%" y="405" width="0.0166%" height="15" fill="rgb(239,85,43)" fg:x="30590" fg:w="17"/><text x="30.1271%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::terminate (17 samples, 0.02%)</title><rect x="29.8771%" y="389" width="0.0166%" height="15" fill="rgb(231,55,21)" fg:x="30590" fg:w="17"/><text x="30.1271%" y="399.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::read (17 samples, 0.02%)</title><rect x="29.8771%" y="373" width="0.0166%" height="15" fill="rgb(225,184,43)" fg:x="30590" fg:w="17"/><text x="30.1271%" y="383.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="30.0314%" y="773" width="0.0205%" height="15" fill="rgb(251,158,41)" fg:x="30748" fg:w="21"/><text x="30.2814%" y="783.50"></text></g><g><title>size_to_sizeclass (18 samples, 0.02%)</title><rect x="30.0520%" y="773" width="0.0176%" height="15" fill="rgb(234,159,37)" fg:x="30769" fg:w="18"/><text x="30.3020%" y="783.50"></text></g><g><title>rust_dealloc (33 samples, 0.03%)</title><rect x="30.0725%" y="709" width="0.0322%" height="15" fill="rgb(216,204,22)" fg:x="30790" fg:w="33"/><text x="30.3225%" y="719.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="30.1047%" y="709" width="0.0107%" height="15" fill="rgb(214,17,3)" fg:x="30823" fg:w="11"/><text x="30.3547%" y="719.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="30.1047%" y="693" width="0.0107%" height="15" fill="rgb(212,111,17)" fg:x="30823" fg:w="11"/><text x="30.3547%" y="703.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (24 samples, 0.02%)</title><rect x="30.1916%" y="677" width="0.0234%" height="15" fill="rgb(221,157,24)" fg:x="30912" fg:w="24"/><text x="30.4416%" y="687.50"></text></g><g><title> (24 samples, 0.02%)</title><rect x="30.1916%" y="661" width="0.0234%" height="15" fill="rgb(252,16,13)" fg:x="30912" fg:w="24"/><text x="30.4416%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (114 samples, 0.11%)</title><rect x="30.1174%" y="709" width="0.1113%" height="15" fill="rgb(221,62,2)" fg:x="30836" fg:w="114"/><text x="30.3674%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (102 samples, 0.10%)</title><rect x="30.1291%" y="693" width="0.0996%" height="15" fill="rgb(247,87,22)" fg:x="30848" fg:w="102"/><text x="30.3791%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (211 samples, 0.21%)</title><rect x="30.0695%" y="741" width="0.2061%" height="15" fill="rgb(215,73,9)" fg:x="30787" fg:w="211"/><text x="30.3195%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (211 samples, 0.21%)</title><rect x="30.0695%" y="725" width="0.2061%" height="15" fill="rgb(207,175,33)" fg:x="30787" fg:w="211"/><text x="30.3195%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (47 samples, 0.05%)</title><rect x="30.2297%" y="709" width="0.0459%" height="15" fill="rgb(243,129,54)" fg:x="30951" fg:w="47"/><text x="30.4797%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (213 samples, 0.21%)</title><rect x="30.0695%" y="773" width="0.2080%" height="15" fill="rgb(227,119,45)" fg:x="30787" fg:w="213"/><text x="30.3195%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (213 samples, 0.21%)</title><rect x="30.0695%" y="757" width="0.2080%" height="15" fill="rgb(205,109,36)" fg:x="30787" fg:w="213"/><text x="30.3195%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (258 samples, 0.25%)</title><rect x="30.0305%" y="789" width="0.2520%" height="15" fill="rgb(205,6,39)" fg:x="30747" fg:w="258"/><text x="30.2805%" y="799.50"></text></g><g><title>rust_dealloc (274 samples, 0.27%)</title><rect x="30.0227%" y="805" width="0.2676%" height="15" fill="rgb(221,32,16)" fg:x="30739" fg:w="274"/><text x="30.2727%" y="815.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (22 samples, 0.02%)</title><rect x="30.2961%" y="757" width="0.0215%" height="15" fill="rgb(228,144,50)" fg:x="31019" fg:w="22"/><text x="30.5461%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (18 samples, 0.02%)</title><rect x="30.3000%" y="741" width="0.0176%" height="15" fill="rgb(229,201,53)" fg:x="31023" fg:w="18"/><text x="30.5500%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="30.3000%" y="725" width="0.0176%" height="15" fill="rgb(249,153,27)" fg:x="31023" fg:w="18"/><text x="30.5500%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="30.3000%" y="709" width="0.0176%" height="15" fill="rgb(227,106,25)" fg:x="31023" fg:w="18"/><text x="30.5500%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (29 samples, 0.03%)</title><rect x="30.2903%" y="789" width="0.0283%" height="15" fill="rgb(230,65,29)" fg:x="31013" fg:w="29"/><text x="30.5403%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (29 samples, 0.03%)</title><rect x="30.2903%" y="773" width="0.0283%" height="15" fill="rgb(221,57,46)" fg:x="31013" fg:w="29"/><text x="30.5403%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (436 samples, 0.43%)</title><rect x="29.8937%" y="821" width="0.4258%" height="15" fill="rgb(229,161,17)" fg:x="30607" fg:w="436"/><text x="30.1437%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (30 samples, 0.03%)</title><rect x="30.2903%" y="805" width="0.0293%" height="15" fill="rgb(222,213,11)" fg:x="31013" fg:w="30"/><text x="30.5403%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.04%)</title><rect x="31.1703%" y="805" width="0.0440%" height="15" fill="rgb(235,35,13)" fg:x="31914" fg:w="45"/><text x="31.4203%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.02%)</title><rect x="31.1937%" y="789" width="0.0205%" height="15" fill="rgb(233,158,34)" fg:x="31938" fg:w="21"/><text x="31.4437%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="31.3812%" y="789" width="0.0176%" height="15" fill="rgb(215,151,48)" fg:x="32130" fg:w="18"/><text x="31.6312%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (534 samples, 0.52%)</title><rect x="31.6752%" y="773" width="0.5216%" height="15" fill="rgb(229,84,14)" fg:x="32431" fg:w="534"/><text x="31.9252%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="32.2241%" y="741" width="0.0107%" height="15" fill="rgb(229,68,14)" fg:x="32993" fg:w="11"/><text x="32.4741%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (15 samples, 0.01%)</title><rect x="32.2241%" y="757" width="0.0147%" height="15" fill="rgb(243,106,26)" fg:x="32993" fg:w="15"/><text x="32.4741%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (512 samples, 0.50%)</title><rect x="32.1968%" y="773" width="0.5001%" height="15" fill="rgb(206,45,38)" fg:x="32965" fg:w="512"/><text x="32.4468%" y="783.50"></text></g><g><title>core::ptr::write (469 samples, 0.46%)</title><rect x="32.2388%" y="757" width="0.4581%" height="15" fill="rgb(226,6,15)" fg:x="33008" fg:w="469"/><text x="32.4888%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (469 samples, 0.46%)</title><rect x="32.2388%" y="741" width="0.4581%" height="15" fill="rgb(232,22,54)" fg:x="33008" fg:w="469"/><text x="32.4888%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.03%)</title><rect x="32.6969%" y="773" width="0.0332%" height="15" fill="rgb(229,222,32)" fg:x="33477" fg:w="34"/><text x="32.9469%" y="783.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (14 samples, 0.01%)</title><rect x="32.7428%" y="741" width="0.0137%" height="15" fill="rgb(228,62,29)" fg:x="33524" fg:w="14"/><text x="32.9928%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="32.7428%" y="725" width="0.0137%" height="15" fill="rgb(251,103,34)" fg:x="33524" fg:w="14"/><text x="32.9928%" y="735.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (26 samples, 0.03%)</title><rect x="32.7564%" y="741" width="0.0254%" height="15" fill="rgb(233,12,30)" fg:x="33538" fg:w="26"/><text x="33.0064%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (26 samples, 0.03%)</title><rect x="32.7564%" y="725" width="0.0254%" height="15" fill="rgb(238,52,0)" fg:x="33538" fg:w="26"/><text x="33.0064%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,070 samples, 1.05%)</title><rect x="32.7857%" y="677" width="1.0451%" height="15" fill="rgb(223,98,5)" fg:x="33568" fg:w="1070"/><text x="33.0357%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (929 samples, 0.91%)</title><rect x="32.9234%" y="661" width="0.9074%" height="15" fill="rgb(228,75,37)" fg:x="33709" fg:w="929"/><text x="33.1734%" y="671.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (1,117 samples, 1.09%)</title><rect x="32.7428%" y="757" width="1.0910%" height="15" fill="rgb(205,115,49)" fg:x="33524" fg:w="1117"/><text x="32.9928%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,073 samples, 1.05%)</title><rect x="32.7857%" y="741" width="1.0480%" height="15" fill="rgb(250,154,43)" fg:x="33568" fg:w="1073"/><text x="33.0357%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,073 samples, 1.05%)</title><rect x="32.7857%" y="725" width="1.0480%" height="15" fill="rgb(226,43,29)" fg:x="33568" fg:w="1073"/><text x="33.0357%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,073 samples, 1.05%)</title><rect x="32.7857%" y="709" width="1.0480%" height="15" fill="rgb(249,228,39)" fg:x="33568" fg:w="1073"/><text x="33.0357%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,073 samples, 1.05%)</title><rect x="32.7857%" y="693" width="1.0480%" height="15" fill="rgb(216,79,43)" fg:x="33568" fg:w="1073"/><text x="33.0357%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,145 samples, 1.12%)</title><rect x="32.7301%" y="773" width="1.1183%" height="15" fill="rgb(228,95,12)" fg:x="33511" fg:w="1145"/><text x="32.9801%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (15 samples, 0.01%)</title><rect x="33.8337%" y="757" width="0.0147%" height="15" fill="rgb(249,221,15)" fg:x="34641" fg:w="15"/><text x="34.0837%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (13 samples, 0.01%)</title><rect x="33.8581%" y="757" width="0.0127%" height="15" fill="rgb(233,34,13)" fg:x="34666" fg:w="13"/><text x="34.1081%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (13 samples, 0.01%)</title><rect x="33.8581%" y="741" width="0.0127%" height="15" fill="rgb(214,103,39)" fg:x="34666" fg:w="13"/><text x="34.1081%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.01%)</title><rect x="33.8581%" y="725" width="0.0127%" height="15" fill="rgb(251,126,39)" fg:x="34666" fg:w="13"/><text x="34.1081%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.01%)</title><rect x="33.8581%" y="709" width="0.0127%" height="15" fill="rgb(214,216,36)" fg:x="34666" fg:w="13"/><text x="34.1081%" y="719.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="34.6395%" y="741" width="0.0234%" height="15" fill="rgb(220,221,8)" fg:x="35466" fg:w="24"/><text x="34.8895%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (15 samples, 0.01%)</title><rect x="34.6629%" y="741" width="0.0147%" height="15" fill="rgb(240,216,3)" fg:x="35490" fg:w="15"/><text x="34.9129%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (39 samples, 0.04%)</title><rect x="34.6776%" y="741" width="0.0381%" height="15" fill="rgb(232,218,17)" fg:x="35505" fg:w="39"/><text x="34.9276%" y="751.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="34.7001%" y="725" width="0.0156%" height="15" fill="rgb(229,163,45)" fg:x="35528" fg:w="16"/><text x="34.9501%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (481 samples, 0.47%)</title><rect x="34.7157%" y="741" width="0.4698%" height="15" fill="rgb(231,110,42)" fg:x="35544" fg:w="481"/><text x="34.9657%" y="751.50"></text></g><g><title>core::ptr::write (473 samples, 0.46%)</title><rect x="34.7235%" y="725" width="0.4620%" height="15" fill="rgb(208,170,48)" fg:x="35552" fg:w="473"/><text x="34.9735%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (450 samples, 0.44%)</title><rect x="34.7460%" y="709" width="0.4395%" height="15" fill="rgb(239,116,25)" fg:x="35575" fg:w="450"/><text x="34.9960%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,348 samples, 1.32%)</title><rect x="33.8708%" y="757" width="1.3166%" height="15" fill="rgb(219,200,50)" fg:x="34679" fg:w="1348"/><text x="34.1208%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,385 samples, 1.35%)</title><rect x="33.8484%" y="773" width="1.3527%" height="15" fill="rgb(245,200,0)" fg:x="34656" fg:w="1385"/><text x="34.0984%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (14 samples, 0.01%)</title><rect x="35.1874%" y="757" width="0.0137%" height="15" fill="rgb(245,119,33)" fg:x="36027" fg:w="14"/><text x="35.4374%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,899 samples, 3.81%)</title><rect x="31.3988%" y="789" width="3.8081%" height="15" fill="rgb(231,125,12)" fg:x="32148" fg:w="3899"/><text x="31.6488%" y="799.50">trem..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (103 samples, 0.10%)</title><rect x="35.2070%" y="789" width="0.1006%" height="15" fill="rgb(216,96,41)" fg:x="36047" fg:w="103"/><text x="35.4570%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,224 samples, 4.13%)</title><rect x="31.2152%" y="805" width="4.1256%" height="15" fill="rgb(248,43,45)" fg:x="31960" fg:w="4224"/><text x="31.4652%" y="815.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (34 samples, 0.03%)</title><rect x="35.3076%" y="789" width="0.0332%" height="15" fill="rgb(217,222,7)" fg:x="36150" fg:w="34"/><text x="35.5576%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,841 samples, 1.80%)</title><rect x="35.3408%" y="805" width="1.7981%" height="15" fill="rgb(233,28,6)" fg:x="36184" fg:w="1841"/><text x="35.5908%" y="815.50">_..</text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="37.1428%" y="789" width="0.0293%" height="15" fill="rgb(231,218,15)" fg:x="38029" fg:w="30"/><text x="37.3928%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (38 samples, 0.04%)</title><rect x="37.1428%" y="805" width="0.0371%" height="15" fill="rgb(226,171,48)" fg:x="38029" fg:w="38"/><text x="37.3928%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="37.1799%" y="805" width="0.0127%" height="15" fill="rgb(235,201,9)" fg:x="38067" fg:w="13"/><text x="37.4299%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="37.1799%" y="789" width="0.0127%" height="15" fill="rgb(217,80,15)" fg:x="38067" fg:w="13"/><text x="37.4299%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="37.1926%" y="805" width="0.0166%" height="15" fill="rgb(219,152,8)" fg:x="38080" fg:w="17"/><text x="37.4426%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt; (17 samples, 0.02%)</title><rect x="37.1926%" y="789" width="0.0166%" height="15" fill="rgb(243,107,38)" fg:x="38080" fg:w="17"/><text x="37.4426%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1157" width="28.6289%" height="15" fill="rgb(231,17,5)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1167.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1141" width="28.6289%" height="15" fill="rgb(209,25,54)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1151.50">async_global_executor::reactor::block_on::{{cl..</text></g><g><title>async_io::driver::block_on (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1125" width="28.6289%" height="15" fill="rgb(219,0,2)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1135.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1109" width="28.6289%" height="15" fill="rgb(246,9,5)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1119.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1093" width="28.6289%" height="15" fill="rgb(226,159,4)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1103.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::run::{{closure}} (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1077" width="28.6289%" height="15" fill="rgb(219,175,34)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1087.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1061" width="28.6289%" height="15" fill="rgb(236,10,46)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1071.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1045" width="28.6289%" height="15" fill="rgb(240,211,16)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1055.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1029" width="28.6289%" height="15" fill="rgb(205,3,43)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1039.50">async_executor::Executor::run::{{closure}}::{{..</text></g><g><title>async_task::runnable::Runnable::run (29,312 samples, 28.63%)</title><rect x="8.5959%" y="1013" width="28.6289%" height="15" fill="rgb(245,7,22)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1023.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (29,312 samples, 28.63%)</title><rect x="8.5959%" y="997" width="28.6289%" height="15" fill="rgb(239,132,32)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="1007.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (29,312 samples, 28.63%)</title><rect x="8.5959%" y="981" width="28.6289%" height="15" fill="rgb(228,202,34)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,312 samples, 28.63%)</title><rect x="8.5959%" y="965" width="28.6289%" height="15" fill="rgb(254,200,22)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="975.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (29,312 samples, 28.63%)</title><rect x="8.5959%" y="949" width="28.6289%" height="15" fill="rgb(219,10,39)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="959.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (29,312 samples, 28.63%)</title><rect x="8.5959%" y="933" width="28.6289%" height="15" fill="rgb(226,210,39)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="943.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (29,312 samples, 28.63%)</title><rect x="8.5959%" y="917" width="28.6289%" height="15" fill="rgb(208,219,16)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="927.50">async_std::task::task_locals_wrapper::TaskLoca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29,312 samples, 28.63%)</title><rect x="8.5959%" y="901" width="28.6289%" height="15" fill="rgb(216,158,51)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="911.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29,312 samples, 28.63%)</title><rect x="8.5959%" y="885" width="28.6289%" height="15" fill="rgb(233,14,44)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="895.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (29,312 samples, 28.63%)</title><rect x="8.5959%" y="869" width="28.6289%" height="15" fill="rgb(237,97,39)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="879.50">async_std::task::task_locals_wrapper::TaskLoca..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (29,312 samples, 28.63%)</title><rect x="8.5959%" y="853" width="28.6289%" height="15" fill="rgb(218,198,43)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="863.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,312 samples, 28.63%)</title><rect x="8.5959%" y="837" width="28.6289%" height="15" fill="rgb(231,104,20)" fg:x="8801" fg:w="29312"/><text x="8.8459%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (7,070 samples, 6.91%)</title><rect x="30.3196%" y="821" width="6.9052%" height="15" fill="rgb(254,36,13)" fg:x="31043" fg:w="7070"/><text x="30.5696%" y="831.50">tremor_ru..</text></g><g><title>tremor_runtime::pipeline::maybe_send (16 samples, 0.02%)</title><rect x="37.2092%" y="805" width="0.0156%" height="15" fill="rgb(248,14,50)" fg:x="38097" fg:w="16"/><text x="37.4592%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (806 samples, 0.79%)</title><rect x="37.2824%" y="597" width="0.7872%" height="15" fill="rgb(217,107,29)" fg:x="38172" fg:w="806"/><text x="37.5324%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (870 samples, 0.85%)</title><rect x="37.2258%" y="693" width="0.8497%" height="15" fill="rgb(251,169,33)" fg:x="38114" fg:w="870"/><text x="37.4758%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (870 samples, 0.85%)</title><rect x="37.2258%" y="677" width="0.8497%" height="15" fill="rgb(217,108,32)" fg:x="38114" fg:w="870"/><text x="37.4758%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (870 samples, 0.85%)</title><rect x="37.2258%" y="661" width="0.8497%" height="15" fill="rgb(219,66,42)" fg:x="38114" fg:w="870"/><text x="37.4758%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (870 samples, 0.85%)</title><rect x="37.2258%" y="645" width="0.8497%" height="15" fill="rgb(206,180,7)" fg:x="38114" fg:w="870"/><text x="37.4758%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (864 samples, 0.84%)</title><rect x="37.2317%" y="629" width="0.8439%" height="15" fill="rgb(208,226,31)" fg:x="38120" fg:w="864"/><text x="37.4817%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (864 samples, 0.84%)</title><rect x="37.2317%" y="613" width="0.8439%" height="15" fill="rgb(218,26,49)" fg:x="38120" fg:w="864"/><text x="37.4817%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="38.0853%" y="341" width="0.0137%" height="15" fill="rgb(233,197,48)" fg:x="38994" fg:w="14"/><text x="38.3353%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="38.0853%" y="325" width="0.0137%" height="15" fill="rgb(252,181,51)" fg:x="38994" fg:w="14"/><text x="38.3353%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (26 samples, 0.03%)</title><rect x="38.0853%" y="357" width="0.0254%" height="15" fill="rgb(253,90,19)" fg:x="38994" fg:w="26"/><text x="38.3353%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="38.0990%" y="341" width="0.0117%" height="15" fill="rgb(215,171,30)" fg:x="39008" fg:w="12"/><text x="38.3490%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="38.0990%" y="325" width="0.0117%" height="15" fill="rgb(214,222,9)" fg:x="39008" fg:w="12"/><text x="38.3490%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (12 samples, 0.01%)</title><rect x="38.0990%" y="309" width="0.0117%" height="15" fill="rgb(223,3,22)" fg:x="39008" fg:w="12"/><text x="38.3490%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="38.0990%" y="293" width="0.0117%" height="15" fill="rgb(225,196,46)" fg:x="39008" fg:w="12"/><text x="38.3490%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (31 samples, 0.03%)</title><rect x="38.0824%" y="373" width="0.0303%" height="15" fill="rgb(209,110,37)" fg:x="38991" fg:w="31"/><text x="38.3324%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (18 samples, 0.02%)</title><rect x="38.1253%" y="357" width="0.0176%" height="15" fill="rgb(249,89,12)" fg:x="39035" fg:w="18"/><text x="38.3753%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (155 samples, 0.15%)</title><rect x="38.0824%" y="645" width="0.1514%" height="15" fill="rgb(226,27,33)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (155 samples, 0.15%)</title><rect x="38.0824%" y="629" width="0.1514%" height="15" fill="rgb(213,82,22)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="639.50"></text></g><g><title>value_trait::Builder::object (155 samples, 0.15%)</title><rect x="38.0824%" y="613" width="0.1514%" height="15" fill="rgb(248,140,0)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (155 samples, 0.15%)</title><rect x="38.0824%" y="597" width="0.1514%" height="15" fill="rgb(228,106,3)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (155 samples, 0.15%)</title><rect x="38.0824%" y="581" width="0.1514%" height="15" fill="rgb(209,23,37)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (155 samples, 0.15%)</title><rect x="38.0824%" y="565" width="0.1514%" height="15" fill="rgb(241,93,50)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (155 samples, 0.15%)</title><rect x="38.0824%" y="549" width="0.1514%" height="15" fill="rgb(253,46,43)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (155 samples, 0.15%)</title><rect x="38.0824%" y="533" width="0.1514%" height="15" fill="rgb(226,206,43)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="543.50"></text></g><g><title>alloc::alloc::alloc (155 samples, 0.15%)</title><rect x="38.0824%" y="517" width="0.1514%" height="15" fill="rgb(217,54,7)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="527.50"></text></g><g><title>__rg_alloc (155 samples, 0.15%)</title><rect x="38.0824%" y="501" width="0.1514%" height="15" fill="rgb(223,5,52)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (155 samples, 0.15%)</title><rect x="38.0824%" y="485" width="0.1514%" height="15" fill="rgb(206,52,46)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="495.50"></text></g><g><title>rust_alloc (155 samples, 0.15%)</title><rect x="38.0824%" y="469" width="0.1514%" height="15" fill="rgb(253,136,11)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.15%)</title><rect x="38.0824%" y="453" width="0.1514%" height="15" fill="rgb(208,106,33)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.15%)</title><rect x="38.0824%" y="437" width="0.1514%" height="15" fill="rgb(206,54,4)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.15%)</title><rect x="38.0824%" y="421" width="0.1514%" height="15" fill="rgb(213,3,15)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.15%)</title><rect x="38.0824%" y="405" width="0.1514%" height="15" fill="rgb(252,211,39)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (155 samples, 0.15%)</title><rect x="38.0824%" y="389" width="0.1514%" height="15" fill="rgb(223,6,36)" fg:x="38991" fg:w="155"/><text x="38.3324%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (124 samples, 0.12%)</title><rect x="38.1126%" y="373" width="0.1211%" height="15" fill="rgb(252,169,45)" fg:x="39022" fg:w="124"/><text x="38.3626%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (93 samples, 0.09%)</title><rect x="38.1429%" y="357" width="0.0908%" height="15" fill="rgb(212,48,26)" fg:x="39053" fg:w="93"/><text x="38.3929%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (93 samples, 0.09%)</title><rect x="38.1429%" y="341" width="0.0908%" height="15" fill="rgb(251,102,48)" fg:x="39053" fg:w="93"/><text x="38.3929%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (93 samples, 0.09%)</title><rect x="38.1429%" y="325" width="0.0908%" height="15" fill="rgb(243,208,16)" fg:x="39053" fg:w="93"/><text x="38.3929%" y="335.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="38.2728%" y="613" width="0.0107%" height="15" fill="rgb(219,96,24)" fg:x="39186" fg:w="11"/><text x="38.5228%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="38.2728%" y="597" width="0.0107%" height="15" fill="rgb(219,33,29)" fg:x="39186" fg:w="11"/><text x="38.5228%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="38.2728%" y="581" width="0.0107%" height="15" fill="rgb(223,176,5)" fg:x="39186" fg:w="11"/><text x="38.5228%" y="591.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="38.2728%" y="565" width="0.0107%" height="15" fill="rgb(228,140,14)" fg:x="39186" fg:w="11"/><text x="38.5228%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="38.2728%" y="549" width="0.0107%" height="15" fill="rgb(217,179,31)" fg:x="39186" fg:w="11"/><text x="38.5228%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="38.2982%" y="549" width="0.0283%" height="15" fill="rgb(230,9,30)" fg:x="39212" fg:w="29"/><text x="38.5482%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (27 samples, 0.03%)</title><rect x="38.3002%" y="533" width="0.0264%" height="15" fill="rgb(230,136,20)" fg:x="39214" fg:w="27"/><text x="38.5502%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (98 samples, 0.10%)</title><rect x="38.2435%" y="645" width="0.0957%" height="15" fill="rgb(215,210,22)" fg:x="39156" fg:w="98"/><text x="38.4935%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (70 samples, 0.07%)</title><rect x="38.2709%" y="629" width="0.0684%" height="15" fill="rgb(218,43,5)" fg:x="39184" fg:w="70"/><text x="38.5209%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (57 samples, 0.06%)</title><rect x="38.2836%" y="613" width="0.0557%" height="15" fill="rgb(216,11,5)" fg:x="39197" fg:w="57"/><text x="38.5336%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (57 samples, 0.06%)</title><rect x="38.2836%" y="597" width="0.0557%" height="15" fill="rgb(209,82,29)" fg:x="39197" fg:w="57"/><text x="38.5336%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (42 samples, 0.04%)</title><rect x="38.2982%" y="581" width="0.0410%" height="15" fill="rgb(244,115,12)" fg:x="39212" fg:w="42"/><text x="38.5482%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (42 samples, 0.04%)</title><rect x="38.2982%" y="565" width="0.0410%" height="15" fill="rgb(222,82,18)" fg:x="39212" fg:w="42"/><text x="38.5482%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="38.3265%" y="549" width="0.0127%" height="15" fill="rgb(249,227,8)" fg:x="39241" fg:w="13"/><text x="38.5765%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="38.3265%" y="533" width="0.0127%" height="15" fill="rgb(253,141,45)" fg:x="39241" fg:w="13"/><text x="38.5765%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="38.3265%" y="517" width="0.0127%" height="15" fill="rgb(234,184,4)" fg:x="39241" fg:w="13"/><text x="38.5765%" y="527.50"></text></g><g><title>core::time::Duration::as_nanos (11 samples, 0.01%)</title><rect x="38.3851%" y="629" width="0.0107%" height="15" fill="rgb(218,194,23)" fg:x="39301" fg:w="11"/><text x="38.6351%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (87 samples, 0.08%)</title><rect x="38.4594%" y="581" width="0.0850%" height="15" fill="rgb(235,66,41)" fg:x="39377" fg:w="87"/><text x="38.7094%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (87 samples, 0.08%)</title><rect x="38.4594%" y="565" width="0.0850%" height="15" fill="rgb(245,217,1)" fg:x="39377" fg:w="87"/><text x="38.7094%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (87 samples, 0.08%)</title><rect x="38.4594%" y="549" width="0.0850%" height="15" fill="rgb(229,91,1)" fg:x="39377" fg:w="87"/><text x="38.7094%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (87 samples, 0.08%)</title><rect x="38.4594%" y="533" width="0.0850%" height="15" fill="rgb(207,101,30)" fg:x="39377" fg:w="87"/><text x="38.7094%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (87 samples, 0.08%)</title><rect x="38.4594%" y="517" width="0.0850%" height="15" fill="rgb(223,82,49)" fg:x="39377" fg:w="87"/><text x="38.7094%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (51 samples, 0.05%)</title><rect x="38.4945%" y="501" width="0.0498%" height="15" fill="rgb(218,167,17)" fg:x="39413" fg:w="51"/><text x="38.7445%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (195 samples, 0.19%)</title><rect x="38.3959%" y="613" width="0.1905%" height="15" fill="rgb(208,103,14)" fg:x="39312" fg:w="195"/><text x="38.6459%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (195 samples, 0.19%)</title><rect x="38.3959%" y="597" width="0.1905%" height="15" fill="rgb(238,20,8)" fg:x="39312" fg:w="195"/><text x="38.6459%" y="607.50"></text></g><g><title>core::time::Duration::new (43 samples, 0.04%)</title><rect x="38.5443%" y="581" width="0.0420%" height="15" fill="rgb(218,80,54)" fg:x="39464" fg:w="43"/><text x="38.7943%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (204 samples, 0.20%)</title><rect x="38.3959%" y="629" width="0.1992%" height="15" fill="rgb(240,144,17)" fg:x="39312" fg:w="204"/><text x="38.6459%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (953 samples, 0.93%)</title><rect x="38.3480%" y="645" width="0.9308%" height="15" fill="rgb(245,27,50)" fg:x="39263" fg:w="953"/><text x="38.5980%" y="655.50"></text></g><g><title>std::time::SystemTime::now (700 samples, 0.68%)</title><rect x="38.5951%" y="629" width="0.6837%" height="15" fill="rgb(251,51,7)" fg:x="39516" fg:w="700"/><text x="38.8451%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (700 samples, 0.68%)</title><rect x="38.5951%" y="613" width="0.6837%" height="15" fill="rgb(245,217,29)" fg:x="39516" fg:w="700"/><text x="38.8451%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (700 samples, 0.68%)</title><rect x="38.5951%" y="597" width="0.6837%" height="15" fill="rgb(221,176,29)" fg:x="39516" fg:w="700"/><text x="38.8451%" y="607.50"></text></g><g><title>__clock_gettime_2 (556 samples, 0.54%)</title><rect x="38.7358%" y="581" width="0.5430%" height="15" fill="rgb(212,180,24)" fg:x="39660" fg:w="556"/><text x="38.9858%" y="591.50"></text></g><g><title>__vdso_clock_gettime (534 samples, 0.52%)</title><rect x="38.7573%" y="565" width="0.5216%" height="15" fill="rgb(254,24,2)" fg:x="39682" fg:w="534"/><text x="39.0073%" y="575.50"></text></g><g><title>[[vdso]] (349 samples, 0.34%)</title><rect x="38.9379%" y="549" width="0.3409%" height="15" fill="rgb(230,100,2)" fg:x="39867" fg:w="349"/><text x="39.1879%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (11 samples, 0.01%)</title><rect x="39.3599%" y="565" width="0.0107%" height="15" fill="rgb(219,142,25)" fg:x="40299" fg:w="11"/><text x="39.6099%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (89 samples, 0.09%)</title><rect x="39.3062%" y="629" width="0.0869%" height="15" fill="rgb(240,73,43)" fg:x="40244" fg:w="89"/><text x="39.5562%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (70 samples, 0.07%)</title><rect x="39.3247%" y="613" width="0.0684%" height="15" fill="rgb(214,114,15)" fg:x="40263" fg:w="70"/><text x="39.5747%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (70 samples, 0.07%)</title><rect x="39.3247%" y="597" width="0.0684%" height="15" fill="rgb(207,130,4)" fg:x="40263" fg:w="70"/><text x="39.5747%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (70 samples, 0.07%)</title><rect x="39.3247%" y="581" width="0.0684%" height="15" fill="rgb(221,25,40)" fg:x="40263" fg:w="70"/><text x="39.5747%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (23 samples, 0.02%)</title><rect x="39.3706%" y="565" width="0.0225%" height="15" fill="rgb(241,184,7)" fg:x="40310" fg:w="23"/><text x="39.6206%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,352 samples, 1.32%)</title><rect x="38.0755%" y="677" width="1.3205%" height="15" fill="rgb(235,159,4)" fg:x="38984" fg:w="1352"/><text x="38.3255%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,352 samples, 1.32%)</title><rect x="38.0755%" y="661" width="1.3205%" height="15" fill="rgb(214,87,48)" fg:x="38984" fg:w="1352"/><text x="38.3255%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (120 samples, 0.12%)</title><rect x="39.2788%" y="645" width="0.1172%" height="15" fill="rgb(246,198,24)" fg:x="40216" fg:w="120"/><text x="39.5288%" y="655.50"></text></g><g><title>aligned_size (24 samples, 0.02%)</title><rect x="41.4148%" y="389" width="0.0234%" height="15" fill="rgb(209,66,40)" fg:x="42403" fg:w="24"/><text x="41.6648%" y="399.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="41.4461%" y="357" width="0.0166%" height="15" fill="rgb(233,147,39)" fg:x="42435" fg:w="17"/><text x="41.6961%" y="367.50"></text></g><g><title>size_to_sizeclass (19 samples, 0.02%)</title><rect x="41.4627%" y="357" width="0.0186%" height="15" fill="rgb(231,145,52)" fg:x="42452" fg:w="19"/><text x="41.7127%" y="367.50"></text></g><g><title>rust_alloc (16 samples, 0.02%)</title><rect x="41.4656%" y="341" width="0.0156%" height="15" fill="rgb(206,20,26)" fg:x="42455" fg:w="16"/><text x="41.7156%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (29 samples, 0.03%)</title><rect x="41.4930%" y="341" width="0.0283%" height="15" fill="rgb(238,220,4)" fg:x="42483" fg:w="29"/><text x="41.7430%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (29 samples, 0.03%)</title><rect x="41.4930%" y="325" width="0.0283%" height="15" fill="rgb(252,195,42)" fg:x="42483" fg:w="29"/><text x="41.7430%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (686 samples, 0.67%)</title><rect x="41.4461%" y="389" width="0.6700%" height="15" fill="rgb(209,10,6)" fg:x="42435" fg:w="686"/><text x="41.6961%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (686 samples, 0.67%)</title><rect x="41.4461%" y="373" width="0.6700%" height="15" fill="rgb(229,3,52)" fg:x="42435" fg:w="686"/><text x="41.6961%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (650 samples, 0.63%)</title><rect x="41.4813%" y="357" width="0.6349%" height="15" fill="rgb(253,49,37)" fg:x="42471" fg:w="650"/><text x="41.7313%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (609 samples, 0.59%)</title><rect x="41.5213%" y="341" width="0.5948%" height="15" fill="rgb(240,103,49)" fg:x="42512" fg:w="609"/><text x="41.7713%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (609 samples, 0.59%)</title><rect x="41.5213%" y="325" width="0.5948%" height="15" fill="rgb(250,182,30)" fg:x="42512" fg:w="609"/><text x="41.7713%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (768 samples, 0.75%)</title><rect x="41.3787%" y="533" width="0.7501%" height="15" fill="rgb(248,8,30)" fg:x="42366" fg:w="768"/><text x="41.6287%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (768 samples, 0.75%)</title><rect x="41.3787%" y="517" width="0.7501%" height="15" fill="rgb(237,120,30)" fg:x="42366" fg:w="768"/><text x="41.6287%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (768 samples, 0.75%)</title><rect x="41.3787%" y="501" width="0.7501%" height="15" fill="rgb(221,146,34)" fg:x="42366" fg:w="768"/><text x="41.6287%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (750 samples, 0.73%)</title><rect x="41.3963%" y="485" width="0.7325%" height="15" fill="rgb(242,55,13)" fg:x="42384" fg:w="750"/><text x="41.6463%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (750 samples, 0.73%)</title><rect x="41.3963%" y="469" width="0.7325%" height="15" fill="rgb(242,112,31)" fg:x="42384" fg:w="750"/><text x="41.6463%" y="479.50"></text></g><g><title>alloc::alloc::alloc (739 samples, 0.72%)</title><rect x="41.4070%" y="453" width="0.7218%" height="15" fill="rgb(249,192,27)" fg:x="42395" fg:w="739"/><text x="41.6570%" y="463.50"></text></g><g><title>__rg_alloc (739 samples, 0.72%)</title><rect x="41.4070%" y="437" width="0.7218%" height="15" fill="rgb(208,204,44)" fg:x="42395" fg:w="739"/><text x="41.6570%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (739 samples, 0.72%)</title><rect x="41.4070%" y="421" width="0.7218%" height="15" fill="rgb(208,93,54)" fg:x="42395" fg:w="739"/><text x="41.6570%" y="431.50"></text></g><g><title>rust_alloc (731 samples, 0.71%)</title><rect x="41.4148%" y="405" width="0.7140%" height="15" fill="rgb(242,1,31)" fg:x="42403" fg:w="731"/><text x="41.6648%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="42.1161%" y="389" width="0.0127%" height="15" fill="rgb(241,83,25)" fg:x="43121" fg:w="13"/><text x="42.3661%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (878 samples, 0.86%)</title><rect x="41.3435%" y="613" width="0.8575%" height="15" fill="rgb(205,169,50)" fg:x="42330" fg:w="878"/><text x="41.5935%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (842 samples, 0.82%)</title><rect x="41.3787%" y="597" width="0.8224%" height="15" fill="rgb(239,186,37)" fg:x="42366" fg:w="842"/><text x="41.6287%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (842 samples, 0.82%)</title><rect x="41.3787%" y="581" width="0.8224%" height="15" fill="rgb(205,221,10)" fg:x="42366" fg:w="842"/><text x="41.6287%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (842 samples, 0.82%)</title><rect x="41.3787%" y="565" width="0.8224%" height="15" fill="rgb(218,196,15)" fg:x="42366" fg:w="842"/><text x="41.6287%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (842 samples, 0.82%)</title><rect x="41.3787%" y="549" width="0.8224%" height="15" fill="rgb(218,196,35)" fg:x="42366" fg:w="842"/><text x="41.6287%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (74 samples, 0.07%)</title><rect x="42.1288%" y="533" width="0.0723%" height="15" fill="rgb(233,63,24)" fg:x="43134" fg:w="74"/><text x="42.3788%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (74 samples, 0.07%)</title><rect x="42.1288%" y="517" width="0.0723%" height="15" fill="rgb(225,8,4)" fg:x="43134" fg:w="74"/><text x="42.3788%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (72 samples, 0.07%)</title><rect x="42.1308%" y="501" width="0.0703%" height="15" fill="rgb(234,105,35)" fg:x="43136" fg:w="72"/><text x="42.3808%" y="511.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,227 samples, 1.20%)</title><rect x="41.0144%" y="629" width="1.1984%" height="15" fill="rgb(236,21,32)" fg:x="41993" fg:w="1227"/><text x="41.2644%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="42.2011%" y="613" width="0.0117%" height="15" fill="rgb(228,109,6)" fg:x="43208" fg:w="12"/><text x="42.4511%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (99 samples, 0.10%)</title><rect x="42.3876%" y="597" width="0.0967%" height="15" fill="rgb(229,215,31)" fg:x="43399" fg:w="99"/><text x="42.6376%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (60 samples, 0.06%)</title><rect x="42.4257%" y="581" width="0.0586%" height="15" fill="rgb(221,52,54)" fg:x="43438" fg:w="60"/><text x="42.6757%" y="591.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="42.4970%" y="405" width="0.0137%" height="15" fill="rgb(252,129,43)" fg:x="43511" fg:w="14"/><text x="42.7470%" y="415.50"></text></g><g><title>rust_alloc (61 samples, 0.06%)</title><rect x="42.5234%" y="373" width="0.0596%" height="15" fill="rgb(248,183,27)" fg:x="43538" fg:w="61"/><text x="42.7734%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (16 samples, 0.02%)</title><rect x="42.6201%" y="325" width="0.0156%" height="15" fill="rgb(250,0,22)" fg:x="43637" fg:w="16"/><text x="42.8701%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (16 samples, 0.02%)</title><rect x="42.6201%" y="309" width="0.0156%" height="15" fill="rgb(213,166,10)" fg:x="43637" fg:w="16"/><text x="42.8701%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="42.6201%" y="293" width="0.0156%" height="15" fill="rgb(207,163,36)" fg:x="43637" fg:w="16"/><text x="42.8701%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (25 samples, 0.02%)</title><rect x="42.6357%" y="325" width="0.0244%" height="15" fill="rgb(208,122,22)" fg:x="43653" fg:w="25"/><text x="42.8857%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (25 samples, 0.02%)</title><rect x="42.6357%" y="309" width="0.0244%" height="15" fill="rgb(207,104,49)" fg:x="43653" fg:w="25"/><text x="42.8857%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (55 samples, 0.05%)</title><rect x="42.6084%" y="357" width="0.0537%" height="15" fill="rgb(248,211,50)" fg:x="43625" fg:w="55"/><text x="42.8584%" y="367.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (43 samples, 0.04%)</title><rect x="42.6201%" y="341" width="0.0420%" height="15" fill="rgb(217,13,45)" fg:x="43637" fg:w="43"/><text x="42.8701%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (73 samples, 0.07%)</title><rect x="42.6679%" y="357" width="0.0713%" height="15" fill="rgb(211,216,49)" fg:x="43686" fg:w="73"/><text x="42.9179%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (73 samples, 0.07%)</title><rect x="42.6679%" y="341" width="0.0713%" height="15" fill="rgb(221,58,53)" fg:x="43686" fg:w="73"/><text x="42.9179%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (469 samples, 0.46%)</title><rect x="42.5175%" y="405" width="0.4581%" height="15" fill="rgb(220,112,41)" fg:x="43532" fg:w="469"/><text x="42.7675%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (463 samples, 0.45%)</title><rect x="42.5234%" y="389" width="0.4522%" height="15" fill="rgb(236,38,28)" fg:x="43538" fg:w="463"/><text x="42.7734%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (399 samples, 0.39%)</title><rect x="42.5859%" y="373" width="0.3897%" height="15" fill="rgb(227,195,22)" fg:x="43602" fg:w="399"/><text x="42.8359%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (242 samples, 0.24%)</title><rect x="42.7392%" y="357" width="0.2364%" height="15" fill="rgb(214,55,33)" fg:x="43759" fg:w="242"/><text x="42.9892%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (242 samples, 0.24%)</title><rect x="42.7392%" y="341" width="0.2364%" height="15" fill="rgb(248,80,13)" fg:x="43759" fg:w="242"/><text x="42.9892%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (507 samples, 0.50%)</title><rect x="42.4843%" y="549" width="0.4952%" height="15" fill="rgb(238,52,6)" fg:x="43498" fg:w="507"/><text x="42.7343%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (507 samples, 0.50%)</title><rect x="42.4843%" y="533" width="0.4952%" height="15" fill="rgb(224,198,47)" fg:x="43498" fg:w="507"/><text x="42.7343%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (504 samples, 0.49%)</title><rect x="42.4873%" y="517" width="0.4923%" height="15" fill="rgb(233,171,20)" fg:x="43501" fg:w="504"/><text x="42.7373%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (504 samples, 0.49%)</title><rect x="42.4873%" y="501" width="0.4923%" height="15" fill="rgb(241,30,25)" fg:x="43501" fg:w="504"/><text x="42.7373%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (504 samples, 0.49%)</title><rect x="42.4873%" y="485" width="0.4923%" height="15" fill="rgb(207,171,38)" fg:x="43501" fg:w="504"/><text x="42.7373%" y="495.50"></text></g><g><title>alloc::alloc::alloc (497 samples, 0.49%)</title><rect x="42.4941%" y="469" width="0.4854%" height="15" fill="rgb(234,70,1)" fg:x="43508" fg:w="497"/><text x="42.7441%" y="479.50"></text></g><g><title>__rg_alloc (497 samples, 0.49%)</title><rect x="42.4941%" y="453" width="0.4854%" height="15" fill="rgb(232,178,18)" fg:x="43508" fg:w="497"/><text x="42.7441%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (497 samples, 0.49%)</title><rect x="42.4941%" y="437" width="0.4854%" height="15" fill="rgb(241,78,40)" fg:x="43508" fg:w="497"/><text x="42.7441%" y="447.50"></text></g><g><title>rust_alloc (494 samples, 0.48%)</title><rect x="42.4970%" y="421" width="0.4825%" height="15" fill="rgb(222,35,25)" fg:x="43511" fg:w="494"/><text x="42.7470%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,019 samples, 1.00%)</title><rect x="42.4843%" y="565" width="0.9953%" height="15" fill="rgb(207,92,16)" fg:x="43498" fg:w="1019"/><text x="42.7343%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (512 samples, 0.50%)</title><rect x="42.9795%" y="549" width="0.5001%" height="15" fill="rgb(216,59,51)" fg:x="44005" fg:w="512"/><text x="43.2295%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (512 samples, 0.50%)</title><rect x="42.9795%" y="533" width="0.5001%" height="15" fill="rgb(213,80,28)" fg:x="44005" fg:w="512"/><text x="43.2295%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (506 samples, 0.49%)</title><rect x="42.9854%" y="517" width="0.4942%" height="15" fill="rgb(220,93,7)" fg:x="44011" fg:w="506"/><text x="43.2354%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,121 samples, 1.09%)</title><rect x="42.3876%" y="613" width="1.0949%" height="15" fill="rgb(225,24,44)" fg:x="43399" fg:w="1121"/><text x="42.6376%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,022 samples, 1.00%)</title><rect x="42.4843%" y="597" width="0.9982%" height="15" fill="rgb(243,74,40)" fg:x="43498" fg:w="1022"/><text x="42.7343%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1,022 samples, 1.00%)</title><rect x="42.4843%" y="581" width="0.9982%" height="15" fill="rgb(228,39,7)" fg:x="43498" fg:w="1022"/><text x="42.7343%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.09%)</title><rect x="39.3960%" y="677" width="4.0875%" height="15" fill="rgb(227,79,8)" fg:x="40336" fg:w="4185"/><text x="39.6460%" y="687.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,185 samples, 4.09%)</title><rect x="39.3960%" y="661" width="4.0875%" height="15" fill="rgb(236,58,11)" fg:x="40336" fg:w="4185"/><text x="39.6460%" y="671.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (3,920 samples, 3.83%)</title><rect x="39.6548%" y="645" width="3.8286%" height="15" fill="rgb(249,63,35)" fg:x="40601" fg:w="3920"/><text x="39.9048%" y="655.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,301 samples, 1.27%)</title><rect x="42.2128%" y="629" width="1.2707%" height="15" fill="rgb(252,114,16)" fg:x="43220" fg:w="1301"/><text x="42.4628%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (15 samples, 0.01%)</title><rect x="43.4874%" y="421" width="0.0147%" height="15" fill="rgb(254,151,24)" fg:x="44525" fg:w="15"/><text x="43.7374%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (15 samples, 0.01%)</title><rect x="43.4874%" y="405" width="0.0147%" height="15" fill="rgb(253,54,39)" fg:x="44525" fg:w="15"/><text x="43.7374%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (15 samples, 0.01%)</title><rect x="43.4874%" y="389" width="0.0147%" height="15" fill="rgb(243,25,45)" fg:x="44525" fg:w="15"/><text x="43.7374%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.02%)</title><rect x="43.4874%" y="437" width="0.0156%" height="15" fill="rgb(234,134,9)" fg:x="44525" fg:w="16"/><text x="43.7374%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (27 samples, 0.03%)</title><rect x="43.4835%" y="453" width="0.0264%" height="15" fill="rgb(227,166,31)" fg:x="44521" fg:w="27"/><text x="43.7335%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (18 samples, 0.02%)</title><rect x="43.5216%" y="437" width="0.0176%" height="15" fill="rgb(245,143,41)" fg:x="44560" fg:w="18"/><text x="43.7716%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (195 samples, 0.19%)</title><rect x="43.4835%" y="485" width="0.1905%" height="15" fill="rgb(238,181,32)" fg:x="44521" fg:w="195"/><text x="43.7335%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (195 samples, 0.19%)</title><rect x="43.4835%" y="469" width="0.1905%" height="15" fill="rgb(224,113,18)" fg:x="44521" fg:w="195"/><text x="43.7335%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (168 samples, 0.16%)</title><rect x="43.5099%" y="453" width="0.1641%" height="15" fill="rgb(240,229,28)" fg:x="44548" fg:w="168"/><text x="43.7599%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (138 samples, 0.13%)</title><rect x="43.5392%" y="437" width="0.1348%" height="15" fill="rgb(250,185,3)" fg:x="44578" fg:w="138"/><text x="43.7892%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (138 samples, 0.13%)</title><rect x="43.5392%" y="421" width="0.1348%" height="15" fill="rgb(212,59,25)" fg:x="44578" fg:w="138"/><text x="43.7892%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (138 samples, 0.13%)</title><rect x="43.5392%" y="405" width="0.1348%" height="15" fill="rgb(221,87,20)" fg:x="44578" fg:w="138"/><text x="43.7892%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (204 samples, 0.20%)</title><rect x="43.4835%" y="677" width="0.1992%" height="15" fill="rgb(213,74,28)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (204 samples, 0.20%)</title><rect x="43.4835%" y="661" width="0.1992%" height="15" fill="rgb(224,132,34)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (204 samples, 0.20%)</title><rect x="43.4835%" y="645" width="0.1992%" height="15" fill="rgb(222,101,24)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (204 samples, 0.20%)</title><rect x="43.4835%" y="629" width="0.1992%" height="15" fill="rgb(254,142,4)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 0.20%)</title><rect x="43.4835%" y="613" width="0.1992%" height="15" fill="rgb(230,229,49)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="623.50"></text></g><g><title>alloc::alloc::alloc (204 samples, 0.20%)</title><rect x="43.4835%" y="597" width="0.1992%" height="15" fill="rgb(238,70,47)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="607.50"></text></g><g><title>__rg_alloc (204 samples, 0.20%)</title><rect x="43.4835%" y="581" width="0.1992%" height="15" fill="rgb(231,160,17)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (204 samples, 0.20%)</title><rect x="43.4835%" y="565" width="0.1992%" height="15" fill="rgb(218,68,53)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="575.50"></text></g><g><title>rust_alloc (204 samples, 0.20%)</title><rect x="43.4835%" y="549" width="0.1992%" height="15" fill="rgb(236,111,10)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.20%)</title><rect x="43.4835%" y="533" width="0.1992%" height="15" fill="rgb(224,34,41)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.20%)</title><rect x="43.4835%" y="517" width="0.1992%" height="15" fill="rgb(241,118,19)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.20%)</title><rect x="43.4835%" y="501" width="0.1992%" height="15" fill="rgb(238,129,25)" fg:x="44521" fg:w="204"/><text x="43.7335%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="43.6827%" y="661" width="0.0195%" height="15" fill="rgb(238,22,31)" fg:x="44725" fg:w="20"/><text x="43.9327%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="43.6827%" y="677" width="0.0205%" height="15" fill="rgb(222,174,48)" fg:x="44725" fg:w="21"/><text x="43.9327%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1157" width="6.4921%" height="15" fill="rgb(206,152,40)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1167.50">async_glo..</text></g><g><title>std::panic::catch_unwind (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1141" width="6.4921%" height="15" fill="rgb(218,99,54)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1151.50">std::pani..</text></g><g><title>std::panicking::try (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1125" width="6.4921%" height="15" fill="rgb(220,174,26)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1135.50">std::pani..</text></g><g><title>std::panicking::try::do_call (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1109" width="6.4921%" height="15" fill="rgb(245,116,9)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1119.50">std::pani..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1093" width="6.4921%" height="15" fill="rgb(209,72,35)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1103.50">async_glo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1077" width="6.4921%" height="15" fill="rgb(226,126,21)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1087.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1061" width="6.4921%" height="15" fill="rgb(227,192,1)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1071.50">std::thre..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1045" width="6.4921%" height="15" fill="rgb(237,180,29)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1055.50">async_glo..</text></g><g><title>async_global_executor::reactor::block_on (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1029" width="6.4921%" height="15" fill="rgb(230,197,35)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1039.50">async_glo..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (6,647 samples, 6.49%)</title><rect x="37.2248%" y="1013" width="6.4921%" height="15" fill="rgb(246,193,31)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1023.50">async_glo..</text></g><g><title>async_io::driver::block_on (6,647 samples, 6.49%)</title><rect x="37.2248%" y="997" width="6.4921%" height="15" fill="rgb(241,36,4)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="1007.50">async_io:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,647 samples, 6.49%)</title><rect x="37.2248%" y="981" width="6.4921%" height="15" fill="rgb(241,130,17)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="991.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,647 samples, 6.49%)</title><rect x="37.2248%" y="965" width="6.4921%" height="15" fill="rgb(206,137,32)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="975.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}} (6,647 samples, 6.49%)</title><rect x="37.2248%" y="949" width="6.4921%" height="15" fill="rgb(237,228,51)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="959.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,647 samples, 6.49%)</title><rect x="37.2248%" y="933" width="6.4921%" height="15" fill="rgb(243,6,42)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="943.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,647 samples, 6.49%)</title><rect x="37.2248%" y="917" width="6.4921%" height="15" fill="rgb(251,74,28)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="927.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6,647 samples, 6.49%)</title><rect x="37.2248%" y="901" width="6.4921%" height="15" fill="rgb(218,20,49)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="911.50">async_exe..</text></g><g><title>async_task::runnable::Runnable::run (6,647 samples, 6.49%)</title><rect x="37.2248%" y="885" width="6.4921%" height="15" fill="rgb(238,28,14)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="895.50">async_tas..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6,647 samples, 6.49%)</title><rect x="37.2248%" y="869" width="6.4921%" height="15" fill="rgb(229,40,46)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="879.50">async_tas..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,647 samples, 6.49%)</title><rect x="37.2248%" y="853" width="6.4921%" height="15" fill="rgb(244,195,20)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="863.50">&lt;core::pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,647 samples, 6.49%)</title><rect x="37.2248%" y="837" width="6.4921%" height="15" fill="rgb(253,56,35)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="847.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,647 samples, 6.49%)</title><rect x="37.2248%" y="821" width="6.4921%" height="15" fill="rgb(210,149,44)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="831.50">async_exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,647 samples, 6.49%)</title><rect x="37.2248%" y="805" width="6.4921%" height="15" fill="rgb(240,135,12)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="815.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,647 samples, 6.49%)</title><rect x="37.2248%" y="789" width="6.4921%" height="15" fill="rgb(251,24,50)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="799.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,647 samples, 6.49%)</title><rect x="37.2248%" y="773" width="6.4921%" height="15" fill="rgb(243,200,47)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="783.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,647 samples, 6.49%)</title><rect x="37.2248%" y="757" width="6.4921%" height="15" fill="rgb(224,166,26)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="767.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,647 samples, 6.49%)</title><rect x="37.2248%" y="741" width="6.4921%" height="15" fill="rgb(233,0,47)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="751.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,647 samples, 6.49%)</title><rect x="37.2248%" y="725" width="6.4921%" height="15" fill="rgb(253,80,5)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="735.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,647 samples, 6.49%)</title><rect x="37.2248%" y="709" width="6.4921%" height="15" fill="rgb(214,133,25)" fg:x="38113" fg:w="6647"/><text x="37.4748%" y="719.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,776 samples, 5.64%)</title><rect x="38.0755%" y="693" width="5.6414%" height="15" fill="rgb(209,27,14)" fg:x="38984" fg:w="5776"/><text x="38.3255%" y="703.50">tremor_..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="43.7032%" y="677" width="0.0137%" height="15" fill="rgb(219,102,51)" fg:x="44746" fg:w="14"/><text x="43.9532%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (14 samples, 0.01%)</title><rect x="43.7032%" y="661" width="0.0137%" height="15" fill="rgb(237,18,16)" fg:x="44746" fg:w="14"/><text x="43.9532%" y="671.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="43.7179%" y="725" width="0.0127%" height="15" fill="rgb(241,85,17)" fg:x="44761" fg:w="13"/><text x="43.9679%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (21 samples, 0.02%)</title><rect x="43.7433%" y="597" width="0.0205%" height="15" fill="rgb(236,90,42)" fg:x="44787" fg:w="21"/><text x="43.9933%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="43.7433%" y="581" width="0.0205%" height="15" fill="rgb(249,57,21)" fg:x="44787" fg:w="21"/><text x="43.9933%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="43.7433%" y="565" width="0.0205%" height="15" fill="rgb(243,12,36)" fg:x="44787" fg:w="21"/><text x="43.9933%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="43.7433%" y="549" width="0.0205%" height="15" fill="rgb(253,128,47)" fg:x="44787" fg:w="21"/><text x="43.9933%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="43.7433%" y="533" width="0.0205%" height="15" fill="rgb(207,33,20)" fg:x="44787" fg:w="21"/><text x="43.9933%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (11 samples, 0.01%)</title><rect x="43.7638%" y="597" width="0.0107%" height="15" fill="rgb(233,215,35)" fg:x="44808" fg:w="11"/><text x="44.0138%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="43.7638%" y="581" width="0.0107%" height="15" fill="rgb(249,188,52)" fg:x="44808" fg:w="11"/><text x="44.0138%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (18 samples, 0.02%)</title><rect x="43.7951%" y="517" width="0.0176%" height="15" fill="rgb(225,12,32)" fg:x="44840" fg:w="18"/><text x="44.0451%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.02%)</title><rect x="43.7951%" y="501" width="0.0176%" height="15" fill="rgb(247,98,14)" fg:x="44840" fg:w="18"/><text x="44.0451%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="43.8126%" y="517" width="0.0215%" height="15" fill="rgb(247,219,48)" fg:x="44858" fg:w="22"/><text x="44.0626%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="43.8126%" y="501" width="0.0215%" height="15" fill="rgb(253,60,48)" fg:x="44858" fg:w="22"/><text x="44.0626%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (22 samples, 0.02%)</title><rect x="43.8126%" y="485" width="0.0215%" height="15" fill="rgb(245,15,52)" fg:x="44858" fg:w="22"/><text x="44.0626%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (22 samples, 0.02%)</title><rect x="43.8126%" y="469" width="0.0215%" height="15" fill="rgb(220,133,28)" fg:x="44858" fg:w="22"/><text x="44.0626%" y="479.50"></text></g><g><title>parking::Unparker::unpark (72 samples, 0.07%)</title><rect x="43.7794%" y="549" width="0.0703%" height="15" fill="rgb(217,180,4)" fg:x="44824" fg:w="72"/><text x="44.0294%" y="559.50"></text></g><g><title>parking::Inner::unpark (62 samples, 0.06%)</title><rect x="43.7892%" y="533" width="0.0606%" height="15" fill="rgb(251,24,1)" fg:x="44834" fg:w="62"/><text x="44.0392%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.02%)</title><rect x="43.8341%" y="517" width="0.0156%" height="15" fill="rgb(212,185,49)" fg:x="44880" fg:w="16"/><text x="44.0841%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="43.8351%" y="501" width="0.0147%" height="15" fill="rgb(215,175,22)" fg:x="44881" fg:w="15"/><text x="44.0851%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="43.8361%" y="485" width="0.0137%" height="15" fill="rgb(250,205,14)" fg:x="44882" fg:w="14"/><text x="44.0861%" y="495.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="43.8361%" y="469" width="0.0137%" height="15" fill="rgb(225,211,22)" fg:x="44882" fg:w="14"/><text x="44.0861%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (80 samples, 0.08%)</title><rect x="43.7745%" y="565" width="0.0781%" height="15" fill="rgb(251,179,42)" fg:x="44819" fg:w="80"/><text x="44.0245%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (95 samples, 0.09%)</title><rect x="43.7745%" y="597" width="0.0928%" height="15" fill="rgb(208,216,51)" fg:x="44819" fg:w="95"/><text x="44.0245%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (95 samples, 0.09%)</title><rect x="43.7745%" y="581" width="0.0928%" height="15" fill="rgb(235,36,11)" fg:x="44819" fg:w="95"/><text x="44.0245%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (15 samples, 0.01%)</title><rect x="43.8527%" y="565" width="0.0147%" height="15" fill="rgb(213,189,28)" fg:x="44899" fg:w="15"/><text x="44.1027%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="43.8527%" y="549" width="0.0147%" height="15" fill="rgb(227,203,42)" fg:x="44899" fg:w="15"/><text x="44.1027%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="43.8527%" y="533" width="0.0147%" height="15" fill="rgb(244,72,36)" fg:x="44899" fg:w="15"/><text x="44.1027%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="43.8527%" y="517" width="0.0147%" height="15" fill="rgb(213,53,17)" fg:x="44899" fg:w="15"/><text x="44.1027%" y="527.50"></text></g><g><title>async_executor::State::notify (168 samples, 0.16%)</title><rect x="43.7404%" y="613" width="0.1641%" height="15" fill="rgb(207,167,3)" fg:x="44784" fg:w="168"/><text x="43.9904%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (38 samples, 0.04%)</title><rect x="43.8673%" y="597" width="0.0371%" height="15" fill="rgb(216,98,30)" fg:x="44914" fg:w="38"/><text x="44.1173%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.04%)</title><rect x="43.8683%" y="581" width="0.0361%" height="15" fill="rgb(236,123,15)" fg:x="44915" fg:w="37"/><text x="44.1183%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (32 samples, 0.03%)</title><rect x="43.8732%" y="565" width="0.0313%" height="15" fill="rgb(248,81,50)" fg:x="44920" fg:w="32"/><text x="44.1232%" y="575.50"></text></g><g><title>___pthread_mutex_lock (32 samples, 0.03%)</title><rect x="43.8732%" y="549" width="0.0313%" height="15" fill="rgb(214,120,4)" fg:x="44920" fg:w="32"/><text x="44.1232%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (24 samples, 0.02%)</title><rect x="43.9113%" y="581" width="0.0234%" height="15" fill="rgb(208,179,34)" fg:x="44959" fg:w="24"/><text x="44.1613%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.02%)</title><rect x="43.9113%" y="565" width="0.0234%" height="15" fill="rgb(227,140,7)" fg:x="44959" fg:w="24"/><text x="44.1613%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (15 samples, 0.01%)</title><rect x="43.9357%" y="581" width="0.0147%" height="15" fill="rgb(214,22,6)" fg:x="44984" fg:w="15"/><text x="44.1857%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (15 samples, 0.01%)</title><rect x="43.9357%" y="565" width="0.0147%" height="15" fill="rgb(207,137,27)" fg:x="44984" fg:w="15"/><text x="44.1857%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (217 samples, 0.21%)</title><rect x="43.7394%" y="629" width="0.2119%" height="15" fill="rgb(210,8,46)" fg:x="44783" fg:w="217"/><text x="43.9894%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (48 samples, 0.05%)</title><rect x="43.9044%" y="613" width="0.0469%" height="15" fill="rgb(240,16,54)" fg:x="44952" fg:w="48"/><text x="44.1544%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (46 samples, 0.04%)</title><rect x="43.9064%" y="597" width="0.0449%" height="15" fill="rgb(211,209,29)" fg:x="44954" fg:w="46"/><text x="44.1564%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="43.9513%" y="629" width="0.0244%" height="15" fill="rgb(226,228,24)" fg:x="45000" fg:w="25"/><text x="44.2013%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="43.9513%" y="613" width="0.0244%" height="15" fill="rgb(222,84,9)" fg:x="45000" fg:w="25"/><text x="44.2013%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (256 samples, 0.25%)</title><rect x="43.7306%" y="725" width="0.2500%" height="15" fill="rgb(234,203,30)" fg:x="44774" fg:w="256"/><text x="43.9806%" y="735.50"></text></g><g><title>event_listener::Event::notify (256 samples, 0.25%)</title><rect x="43.7306%" y="709" width="0.2500%" height="15" fill="rgb(238,109,14)" fg:x="44774" fg:w="256"/><text x="43.9806%" y="719.50"></text></g><g><title>event_listener::List::notify (256 samples, 0.25%)</title><rect x="43.7306%" y="693" width="0.2500%" height="15" fill="rgb(233,206,34)" fg:x="44774" fg:w="256"/><text x="43.9806%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (251 samples, 0.25%)</title><rect x="43.7355%" y="677" width="0.2452%" height="15" fill="rgb(220,167,47)" fg:x="44779" fg:w="251"/><text x="43.9855%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (251 samples, 0.25%)</title><rect x="43.7355%" y="661" width="0.2452%" height="15" fill="rgb(238,105,10)" fg:x="44779" fg:w="251"/><text x="43.9855%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (247 samples, 0.24%)</title><rect x="43.7394%" y="645" width="0.2412%" height="15" fill="rgb(213,227,17)" fg:x="44783" fg:w="247"/><text x="43.9894%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="43.9806%" y="709" width="0.0107%" height="15" fill="rgb(217,132,38)" fg:x="45030" fg:w="11"/><text x="44.2306%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="43.9806%" y="693" width="0.0107%" height="15" fill="rgb(242,146,4)" fg:x="45030" fg:w="11"/><text x="44.2306%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="43.9806%" y="677" width="0.0107%" height="15" fill="rgb(212,61,9)" fg:x="45030" fg:w="11"/><text x="44.2306%" y="687.50"></text></g><g><title>event_listener::Event::listen (16 samples, 0.02%)</title><rect x="43.9806%" y="725" width="0.0156%" height="15" fill="rgb(247,126,22)" fg:x="45030" fg:w="16"/><text x="44.2306%" y="735.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (287 samples, 0.28%)</title><rect x="43.7179%" y="741" width="0.2803%" height="15" fill="rgb(220,196,2)" fg:x="44761" fg:w="287"/><text x="43.9679%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (288 samples, 0.28%)</title><rect x="43.7179%" y="805" width="0.2813%" height="15" fill="rgb(208,46,4)" fg:x="44761" fg:w="288"/><text x="43.9679%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (288 samples, 0.28%)</title><rect x="43.7179%" y="789" width="0.2813%" height="15" fill="rgb(252,104,46)" fg:x="44761" fg:w="288"/><text x="43.9679%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (288 samples, 0.28%)</title><rect x="43.7179%" y="773" width="0.2813%" height="15" fill="rgb(237,152,48)" fg:x="44761" fg:w="288"/><text x="43.9679%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (288 samples, 0.28%)</title><rect x="43.7179%" y="757" width="0.2813%" height="15" fill="rgb(221,59,37)" fg:x="44761" fg:w="288"/><text x="43.9679%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="44.0002%" y="453" width="0.0117%" height="15" fill="rgb(209,202,51)" fg:x="45050" fg:w="12"/><text x="44.2502%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (19 samples, 0.02%)</title><rect x="43.9992%" y="469" width="0.0186%" height="15" fill="rgb(228,81,30)" fg:x="45049" fg:w="19"/><text x="44.2492%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (16 samples, 0.02%)</title><rect x="44.0236%" y="453" width="0.0156%" height="15" fill="rgb(227,42,39)" fg:x="45074" fg:w="16"/><text x="44.2736%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (103 samples, 0.10%)</title><rect x="43.9992%" y="773" width="0.1006%" height="15" fill="rgb(221,26,2)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (103 samples, 0.10%)</title><rect x="43.9992%" y="757" width="0.1006%" height="15" fill="rgb(254,61,31)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (103 samples, 0.10%)</title><rect x="43.9992%" y="741" width="0.1006%" height="15" fill="rgb(222,173,38)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (103 samples, 0.10%)</title><rect x="43.9992%" y="725" width="0.1006%" height="15" fill="rgb(218,50,12)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103 samples, 0.10%)</title><rect x="43.9992%" y="709" width="0.1006%" height="15" fill="rgb(223,88,40)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (103 samples, 0.10%)</title><rect x="43.9992%" y="693" width="0.1006%" height="15" fill="rgb(237,54,19)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (103 samples, 0.10%)</title><rect x="43.9992%" y="677" width="0.1006%" height="15" fill="rgb(251,129,25)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (103 samples, 0.10%)</title><rect x="43.9992%" y="661" width="0.1006%" height="15" fill="rgb(238,97,19)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103 samples, 0.10%)</title><rect x="43.9992%" y="645" width="0.1006%" height="15" fill="rgb(240,169,18)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.10%)</title><rect x="43.9992%" y="629" width="0.1006%" height="15" fill="rgb(230,187,49)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="639.50"></text></g><g><title>alloc::alloc::alloc (103 samples, 0.10%)</title><rect x="43.9992%" y="613" width="0.1006%" height="15" fill="rgb(209,44,26)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="623.50"></text></g><g><title>__rg_alloc (103 samples, 0.10%)</title><rect x="43.9992%" y="597" width="0.1006%" height="15" fill="rgb(244,0,6)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (103 samples, 0.10%)</title><rect x="43.9992%" y="581" width="0.1006%" height="15" fill="rgb(248,18,21)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="591.50"></text></g><g><title>rust_alloc (103 samples, 0.10%)</title><rect x="43.9992%" y="565" width="0.1006%" height="15" fill="rgb(245,180,19)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (103 samples, 0.10%)</title><rect x="43.9992%" y="549" width="0.1006%" height="15" fill="rgb(252,118,36)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (103 samples, 0.10%)</title><rect x="43.9992%" y="533" width="0.1006%" height="15" fill="rgb(210,224,19)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (103 samples, 0.10%)</title><rect x="43.9992%" y="517" width="0.1006%" height="15" fill="rgb(218,30,24)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (103 samples, 0.10%)</title><rect x="43.9992%" y="501" width="0.1006%" height="15" fill="rgb(219,75,50)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (103 samples, 0.10%)</title><rect x="43.9992%" y="485" width="0.1006%" height="15" fill="rgb(234,72,50)" fg:x="45049" fg:w="103"/><text x="44.2492%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (84 samples, 0.08%)</title><rect x="44.0177%" y="469" width="0.0820%" height="15" fill="rgb(219,100,48)" fg:x="45068" fg:w="84"/><text x="44.2677%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (62 samples, 0.06%)</title><rect x="44.0392%" y="453" width="0.0606%" height="15" fill="rgb(253,5,41)" fg:x="45090" fg:w="62"/><text x="44.2892%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="44.0392%" y="437" width="0.0606%" height="15" fill="rgb(247,181,11)" fg:x="45090" fg:w="62"/><text x="44.2892%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="44.0392%" y="421" width="0.0606%" height="15" fill="rgb(222,223,25)" fg:x="45090" fg:w="62"/><text x="44.2892%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="44.0998%" y="405" width="0.0117%" height="15" fill="rgb(214,198,28)" fg:x="45152" fg:w="12"/><text x="44.3498%" y="415.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="44.1203%" y="389" width="0.0137%" height="15" fill="rgb(230,46,43)" fg:x="45173" fg:w="14"/><text x="44.3703%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.11%)</title><rect x="44.0998%" y="437" width="0.1094%" height="15" fill="rgb(233,65,53)" fg:x="45152" fg:w="112"/><text x="44.3498%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (112 samples, 0.11%)</title><rect x="44.0998%" y="421" width="0.1094%" height="15" fill="rgb(221,121,27)" fg:x="45152" fg:w="112"/><text x="44.3498%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (100 samples, 0.10%)</title><rect x="44.1115%" y="405" width="0.0977%" height="15" fill="rgb(247,70,47)" fg:x="45164" fg:w="100"/><text x="44.3615%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (77 samples, 0.08%)</title><rect x="44.1340%" y="389" width="0.0752%" height="15" fill="rgb(228,85,35)" fg:x="45187" fg:w="77"/><text x="44.3840%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (77 samples, 0.08%)</title><rect x="44.1340%" y="373" width="0.0752%" height="15" fill="rgb(209,50,18)" fg:x="45187" fg:w="77"/><text x="44.3840%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (77 samples, 0.08%)</title><rect x="44.1340%" y="357" width="0.0752%" height="15" fill="rgb(250,19,35)" fg:x="45187" fg:w="77"/><text x="44.3840%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (138 samples, 0.13%)</title><rect x="44.0998%" y="709" width="0.1348%" height="15" fill="rgb(253,107,29)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (138 samples, 0.13%)</title><rect x="44.0998%" y="693" width="0.1348%" height="15" fill="rgb(252,179,29)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (138 samples, 0.13%)</title><rect x="44.0998%" y="677" width="0.1348%" height="15" fill="rgb(238,194,6)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (138 samples, 0.13%)</title><rect x="44.0998%" y="661" width="0.1348%" height="15" fill="rgb(238,164,29)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (138 samples, 0.13%)</title><rect x="44.0998%" y="645" width="0.1348%" height="15" fill="rgb(224,25,9)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (138 samples, 0.13%)</title><rect x="44.0998%" y="629" width="0.1348%" height="15" fill="rgb(244,153,23)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (138 samples, 0.13%)</title><rect x="44.0998%" y="613" width="0.1348%" height="15" fill="rgb(212,203,14)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (138 samples, 0.13%)</title><rect x="44.0998%" y="597" width="0.1348%" height="15" fill="rgb(220,164,20)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.13%)</title><rect x="44.0998%" y="581" width="0.1348%" height="15" fill="rgb(222,203,48)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.13%)</title><rect x="44.0998%" y="565" width="0.1348%" height="15" fill="rgb(215,159,22)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="575.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.13%)</title><rect x="44.0998%" y="549" width="0.1348%" height="15" fill="rgb(216,183,47)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="559.50"></text></g><g><title>__rg_alloc (138 samples, 0.13%)</title><rect x="44.0998%" y="533" width="0.1348%" height="15" fill="rgb(229,195,25)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (138 samples, 0.13%)</title><rect x="44.0998%" y="517" width="0.1348%" height="15" fill="rgb(224,132,51)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="527.50"></text></g><g><title>rust_alloc (138 samples, 0.13%)</title><rect x="44.0998%" y="501" width="0.1348%" height="15" fill="rgb(240,63,7)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (138 samples, 0.13%)</title><rect x="44.0998%" y="485" width="0.1348%" height="15" fill="rgb(249,182,41)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (138 samples, 0.13%)</title><rect x="44.0998%" y="469" width="0.1348%" height="15" fill="rgb(243,47,26)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (138 samples, 0.13%)</title><rect x="44.0998%" y="453" width="0.1348%" height="15" fill="rgb(233,48,2)" fg:x="45152" fg:w="138"/><text x="44.3498%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.03%)</title><rect x="44.2092%" y="437" width="0.0254%" height="15" fill="rgb(244,165,34)" fg:x="45264" fg:w="26"/><text x="44.4592%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.03%)</title><rect x="44.2092%" y="421" width="0.0254%" height="15" fill="rgb(207,89,7)" fg:x="45264" fg:w="26"/><text x="44.4592%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="44.2101%" y="405" width="0.0244%" height="15" fill="rgb(244,117,36)" fg:x="45265" fg:w="25"/><text x="44.4601%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="44.2101%" y="389" width="0.0244%" height="15" fill="rgb(226,144,34)" fg:x="45265" fg:w="25"/><text x="44.4601%" y="399.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (25 samples, 0.02%)</title><rect x="44.2101%" y="373" width="0.0244%" height="15" fill="rgb(213,23,19)" fg:x="45265" fg:w="25"/><text x="44.4601%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.02%)</title><rect x="44.2189%" y="357" width="0.0156%" height="15" fill="rgb(217,75,12)" fg:x="45274" fg:w="16"/><text x="44.4689%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="44.2189%" y="341" width="0.0156%" height="15" fill="rgb(224,159,17)" fg:x="45274" fg:w="16"/><text x="44.4689%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="44.2346%" y="485" width="0.0147%" height="15" fill="rgb(217,118,1)" fg:x="45290" fg:w="15"/><text x="44.4846%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="44.2365%" y="469" width="0.0127%" height="15" fill="rgb(232,180,48)" fg:x="45292" fg:w="13"/><text x="44.4865%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (84 samples, 0.08%)</title><rect x="44.2346%" y="517" width="0.0820%" height="15" fill="rgb(230,27,33)" fg:x="45290" fg:w="84"/><text x="44.4846%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (84 samples, 0.08%)</title><rect x="44.2346%" y="501" width="0.0820%" height="15" fill="rgb(205,31,21)" fg:x="45290" fg:w="84"/><text x="44.4846%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (69 samples, 0.07%)</title><rect x="44.2492%" y="485" width="0.0674%" height="15" fill="rgb(253,59,4)" fg:x="45305" fg:w="69"/><text x="44.4992%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (58 samples, 0.06%)</title><rect x="44.2600%" y="469" width="0.0566%" height="15" fill="rgb(224,201,9)" fg:x="45316" fg:w="58"/><text x="44.5100%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (58 samples, 0.06%)</title><rect x="44.2600%" y="453" width="0.0566%" height="15" fill="rgb(229,206,30)" fg:x="45316" fg:w="58"/><text x="44.5100%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (58 samples, 0.06%)</title><rect x="44.2600%" y="437" width="0.0566%" height="15" fill="rgb(212,67,47)" fg:x="45316" fg:w="58"/><text x="44.5100%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (328 samples, 0.32%)</title><rect x="43.9992%" y="789" width="0.3204%" height="15" fill="rgb(211,96,50)" fg:x="45049" fg:w="328"/><text x="44.2492%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (225 samples, 0.22%)</title><rect x="44.0998%" y="773" width="0.2198%" height="15" fill="rgb(252,114,18)" fg:x="45152" fg:w="225"/><text x="44.3498%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (225 samples, 0.22%)</title><rect x="44.0998%" y="757" width="0.2198%" height="15" fill="rgb(223,58,37)" fg:x="45152" fg:w="225"/><text x="44.3498%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (225 samples, 0.22%)</title><rect x="44.0998%" y="741" width="0.2198%" height="15" fill="rgb(237,70,4)" fg:x="45152" fg:w="225"/><text x="44.3498%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (225 samples, 0.22%)</title><rect x="44.0998%" y="725" width="0.2198%" height="15" fill="rgb(244,85,46)" fg:x="45152" fg:w="225"/><text x="44.3498%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (87 samples, 0.08%)</title><rect x="44.2346%" y="709" width="0.0850%" height="15" fill="rgb(223,39,52)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.08%)</title><rect x="44.2346%" y="693" width="0.0850%" height="15" fill="rgb(218,200,14)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (87 samples, 0.08%)</title><rect x="44.2346%" y="677" width="0.0850%" height="15" fill="rgb(208,171,16)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.08%)</title><rect x="44.2346%" y="661" width="0.0850%" height="15" fill="rgb(234,200,18)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.08%)</title><rect x="44.2346%" y="645" width="0.0850%" height="15" fill="rgb(228,45,11)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="655.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.08%)</title><rect x="44.2346%" y="629" width="0.0850%" height="15" fill="rgb(237,182,11)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="639.50"></text></g><g><title>__rg_alloc (87 samples, 0.08%)</title><rect x="44.2346%" y="613" width="0.0850%" height="15" fill="rgb(241,175,49)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (87 samples, 0.08%)</title><rect x="44.2346%" y="597" width="0.0850%" height="15" fill="rgb(247,38,35)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="607.50"></text></g><g><title>rust_alloc (87 samples, 0.08%)</title><rect x="44.2346%" y="581" width="0.0850%" height="15" fill="rgb(228,39,49)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="44.2346%" y="565" width="0.0850%" height="15" fill="rgb(226,101,26)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="44.2346%" y="549" width="0.0850%" height="15" fill="rgb(206,141,19)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="44.2346%" y="533" width="0.0850%" height="15" fill="rgb(211,200,13)" fg:x="45290" fg:w="87"/><text x="44.4846%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (23 samples, 0.02%)</title><rect x="44.3283%" y="517" width="0.0225%" height="15" fill="rgb(241,121,6)" fg:x="45386" fg:w="23"/><text x="44.5783%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (23 samples, 0.02%)</title><rect x="44.3283%" y="501" width="0.0225%" height="15" fill="rgb(234,221,29)" fg:x="45386" fg:w="23"/><text x="44.5783%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (21 samples, 0.02%)</title><rect x="44.3303%" y="485" width="0.0205%" height="15" fill="rgb(229,136,5)" fg:x="45388" fg:w="21"/><text x="44.5803%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (36 samples, 0.04%)</title><rect x="44.3283%" y="533" width="0.0352%" height="15" fill="rgb(238,36,11)" fg:x="45386" fg:w="36"/><text x="44.5783%" y="543.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="44.3508%" y="517" width="0.0127%" height="15" fill="rgb(251,55,41)" fg:x="45409" fg:w="13"/><text x="44.6008%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="44.3508%" y="501" width="0.0127%" height="15" fill="rgb(242,34,40)" fg:x="45409" fg:w="13"/><text x="44.6008%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="44.3508%" y="485" width="0.0127%" height="15" fill="rgb(215,42,17)" fg:x="45409" fg:w="13"/><text x="44.6008%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="44.3508%" y="469" width="0.0127%" height="15" fill="rgb(207,44,46)" fg:x="45409" fg:w="13"/><text x="44.6008%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (66 samples, 0.06%)</title><rect x="44.3195%" y="549" width="0.0645%" height="15" fill="rgb(211,206,28)" fg:x="45377" fg:w="66"/><text x="44.5695%" y="559.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="44.3674%" y="533" width="0.0166%" height="15" fill="rgb(237,167,16)" fg:x="45426" fg:w="17"/><text x="44.6174%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="44.3674%" y="517" width="0.0166%" height="15" fill="rgb(233,66,6)" fg:x="45426" fg:w="17"/><text x="44.6174%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (17 samples, 0.02%)</title><rect x="44.3674%" y="501" width="0.0166%" height="15" fill="rgb(246,123,29)" fg:x="45426" fg:w="17"/><text x="44.6174%" y="511.50"></text></g><g><title>snmalloc::bits::align_down (17 samples, 0.02%)</title><rect x="44.3674%" y="485" width="0.0166%" height="15" fill="rgb(209,62,40)" fg:x="45426" fg:w="17"/><text x="44.6174%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (23 samples, 0.02%)</title><rect x="44.4006%" y="533" width="0.0225%" height="15" fill="rgb(218,4,25)" fg:x="45460" fg:w="23"/><text x="44.6506%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (321 samples, 0.31%)</title><rect x="44.3195%" y="581" width="0.3135%" height="15" fill="rgb(253,91,49)" fg:x="45377" fg:w="321"/><text x="44.5695%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (321 samples, 0.31%)</title><rect x="44.3195%" y="565" width="0.3135%" height="15" fill="rgb(228,155,29)" fg:x="45377" fg:w="321"/><text x="44.5695%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (255 samples, 0.25%)</title><rect x="44.3840%" y="549" width="0.2491%" height="15" fill="rgb(243,57,37)" fg:x="45443" fg:w="255"/><text x="44.6340%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (215 samples, 0.21%)</title><rect x="44.4231%" y="533" width="0.2100%" height="15" fill="rgb(244,167,17)" fg:x="45483" fg:w="215"/><text x="44.6731%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (215 samples, 0.21%)</title><rect x="44.4231%" y="517" width="0.2100%" height="15" fill="rgb(207,181,38)" fg:x="45483" fg:w="215"/><text x="44.6731%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (215 samples, 0.21%)</title><rect x="44.4231%" y="501" width="0.2100%" height="15" fill="rgb(211,8,23)" fg:x="45483" fg:w="215"/><text x="44.6731%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (328 samples, 0.32%)</title><rect x="44.3195%" y="789" width="0.3204%" height="15" fill="rgb(235,11,44)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (328 samples, 0.32%)</title><rect x="44.3195%" y="773" width="0.3204%" height="15" fill="rgb(248,18,52)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (328 samples, 0.32%)</title><rect x="44.3195%" y="757" width="0.3204%" height="15" fill="rgb(208,4,7)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (328 samples, 0.32%)</title><rect x="44.3195%" y="741" width="0.3204%" height="15" fill="rgb(240,17,39)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (328 samples, 0.32%)</title><rect x="44.3195%" y="725" width="0.3204%" height="15" fill="rgb(207,170,3)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (328 samples, 0.32%)</title><rect x="44.3195%" y="709" width="0.3204%" height="15" fill="rgb(236,100,52)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="719.50"></text></g><g><title>alloc::alloc::alloc (328 samples, 0.32%)</title><rect x="44.3195%" y="693" width="0.3204%" height="15" fill="rgb(246,78,51)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="703.50"></text></g><g><title>__rg_alloc (328 samples, 0.32%)</title><rect x="44.3195%" y="677" width="0.3204%" height="15" fill="rgb(211,17,15)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (328 samples, 0.32%)</title><rect x="44.3195%" y="661" width="0.3204%" height="15" fill="rgb(209,59,46)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="671.50"></text></g><g><title>rust_alloc (328 samples, 0.32%)</title><rect x="44.3195%" y="645" width="0.3204%" height="15" fill="rgb(210,92,25)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (328 samples, 0.32%)</title><rect x="44.3195%" y="629" width="0.3204%" height="15" fill="rgb(238,174,52)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (328 samples, 0.32%)</title><rect x="44.3195%" y="613" width="0.3204%" height="15" fill="rgb(230,73,7)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (328 samples, 0.32%)</title><rect x="44.3195%" y="597" width="0.3204%" height="15" fill="rgb(243,124,40)" fg:x="45377" fg:w="328"/><text x="44.5695%" y="607.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (646 samples, 0.63%)</title><rect x="44.8528%" y="757" width="0.6309%" height="15" fill="rgb(244,170,11)" fg:x="45923" fg:w="646"/><text x="45.1028%" y="767.50"></text></g><g><title>aligned_size (19 samples, 0.02%)</title><rect x="45.5414%" y="565" width="0.0186%" height="15" fill="rgb(207,114,54)" fg:x="46628" fg:w="19"/><text x="45.7914%" y="575.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="45.5687%" y="533" width="0.0117%" height="15" fill="rgb(205,42,20)" fg:x="46656" fg:w="12"/><text x="45.8187%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (14 samples, 0.01%)</title><rect x="45.6019%" y="405" width="0.0137%" height="15" fill="rgb(230,30,28)" fg:x="46690" fg:w="14"/><text x="45.8519%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="45.6019%" y="389" width="0.0137%" height="15" fill="rgb(205,73,54)" fg:x="46690" fg:w="14"/><text x="45.8519%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (29 samples, 0.03%)</title><rect x="45.5931%" y="453" width="0.0283%" height="15" fill="rgb(254,227,23)" fg:x="46681" fg:w="29"/><text x="45.8431%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (29 samples, 0.03%)</title><rect x="45.5931%" y="437" width="0.0283%" height="15" fill="rgb(228,202,34)" fg:x="46681" fg:w="29"/><text x="45.8431%" y="447.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (22 samples, 0.02%)</title><rect x="45.6000%" y="421" width="0.0215%" height="15" fill="rgb(222,225,37)" fg:x="46688" fg:w="22"/><text x="45.8500%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (31 samples, 0.03%)</title><rect x="45.5931%" y="469" width="0.0303%" height="15" fill="rgb(221,14,54)" fg:x="46681" fg:w="31"/><text x="45.8431%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (40 samples, 0.04%)</title><rect x="45.5883%" y="485" width="0.0391%" height="15" fill="rgb(254,102,2)" fg:x="46676" fg:w="40"/><text x="45.8383%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="45.6391%" y="469" width="0.0127%" height="15" fill="rgb(232,104,17)" fg:x="46728" fg:w="13"/><text x="45.8891%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (209 samples, 0.20%)</title><rect x="45.5883%" y="517" width="0.2041%" height="15" fill="rgb(250,220,14)" fg:x="46676" fg:w="209"/><text x="45.8383%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (209 samples, 0.20%)</title><rect x="45.5883%" y="501" width="0.2041%" height="15" fill="rgb(241,158,9)" fg:x="46676" fg:w="209"/><text x="45.8383%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (169 samples, 0.17%)</title><rect x="45.6273%" y="485" width="0.1651%" height="15" fill="rgb(246,9,43)" fg:x="46716" fg:w="169"/><text x="45.8773%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (144 samples, 0.14%)</title><rect x="45.6517%" y="469" width="0.1406%" height="15" fill="rgb(206,73,33)" fg:x="46741" fg:w="144"/><text x="45.9017%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (144 samples, 0.14%)</title><rect x="45.6517%" y="453" width="0.1406%" height="15" fill="rgb(222,79,8)" fg:x="46741" fg:w="144"/><text x="45.9017%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (144 samples, 0.14%)</title><rect x="45.6517%" y="437" width="0.1406%" height="15" fill="rgb(234,8,54)" fg:x="46741" fg:w="144"/><text x="45.9017%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="45.7924%" y="517" width="0.0166%" height="15" fill="rgb(209,134,38)" fg:x="46885" fg:w="17"/><text x="46.0424%" y="527.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (13 samples, 0.01%)</title><rect x="45.7963%" y="501" width="0.0127%" height="15" fill="rgb(230,127,29)" fg:x="46889" fg:w="13"/><text x="46.0463%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (30 samples, 0.03%)</title><rect x="45.8158%" y="517" width="0.0293%" height="15" fill="rgb(242,44,41)" fg:x="46909" fg:w="30"/><text x="46.0658%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (30 samples, 0.03%)</title><rect x="45.8158%" y="501" width="0.0293%" height="15" fill="rgb(222,56,43)" fg:x="46909" fg:w="30"/><text x="46.0658%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (571 samples, 0.56%)</title><rect x="45.5629%" y="565" width="0.5577%" height="15" fill="rgb(238,39,47)" fg:x="46650" fg:w="571"/><text x="45.8129%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (569 samples, 0.56%)</title><rect x="45.5648%" y="549" width="0.5557%" height="15" fill="rgb(226,79,43)" fg:x="46652" fg:w="569"/><text x="45.8148%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (553 samples, 0.54%)</title><rect x="45.5805%" y="533" width="0.5401%" height="15" fill="rgb(242,105,53)" fg:x="46668" fg:w="553"/><text x="45.8305%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (282 samples, 0.28%)</title><rect x="45.8451%" y="517" width="0.2754%" height="15" fill="rgb(251,132,46)" fg:x="46939" fg:w="282"/><text x="46.0951%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (282 samples, 0.28%)</title><rect x="45.8451%" y="501" width="0.2754%" height="15" fill="rgb(231,77,14)" fg:x="46939" fg:w="282"/><text x="46.0951%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,373 samples, 1.34%)</title><rect x="44.7962%" y="773" width="1.3410%" height="15" fill="rgb(240,135,9)" fg:x="45865" fg:w="1373"/><text x="45.0462%" y="783.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (669 samples, 0.65%)</title><rect x="45.4838%" y="757" width="0.6534%" height="15" fill="rgb(248,109,14)" fg:x="46569" fg:w="669"/><text x="45.7338%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (666 samples, 0.65%)</title><rect x="45.4867%" y="741" width="0.6505%" height="15" fill="rgb(227,146,52)" fg:x="46572" fg:w="666"/><text x="45.7367%" y="751.50"></text></g><g><title>value_trait::Builder::object (666 samples, 0.65%)</title><rect x="45.4867%" y="725" width="0.6505%" height="15" fill="rgb(232,54,3)" fg:x="46572" fg:w="666"/><text x="45.7367%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (666 samples, 0.65%)</title><rect x="45.4867%" y="709" width="0.6505%" height="15" fill="rgb(229,201,43)" fg:x="46572" fg:w="666"/><text x="45.7367%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (666 samples, 0.65%)</title><rect x="45.4867%" y="693" width="0.6505%" height="15" fill="rgb(252,161,33)" fg:x="46572" fg:w="666"/><text x="45.7367%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (647 samples, 0.63%)</title><rect x="45.5052%" y="677" width="0.6319%" height="15" fill="rgb(226,146,40)" fg:x="46591" fg:w="647"/><text x="45.7552%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (647 samples, 0.63%)</title><rect x="45.5052%" y="661" width="0.6319%" height="15" fill="rgb(219,47,25)" fg:x="46591" fg:w="647"/><text x="45.7552%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (647 samples, 0.63%)</title><rect x="45.5052%" y="645" width="0.6319%" height="15" fill="rgb(250,135,13)" fg:x="46591" fg:w="647"/><text x="45.7552%" y="655.50"></text></g><g><title>alloc::alloc::alloc (642 samples, 0.63%)</title><rect x="45.5101%" y="629" width="0.6270%" height="15" fill="rgb(219,229,18)" fg:x="46596" fg:w="642"/><text x="45.7601%" y="639.50"></text></g><g><title>__rg_alloc (642 samples, 0.63%)</title><rect x="45.5101%" y="613" width="0.6270%" height="15" fill="rgb(217,152,27)" fg:x="46596" fg:w="642"/><text x="45.7601%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (642 samples, 0.63%)</title><rect x="45.5101%" y="597" width="0.6270%" height="15" fill="rgb(225,71,47)" fg:x="46596" fg:w="642"/><text x="45.7601%" y="607.50"></text></g><g><title>rust_alloc (610 samples, 0.60%)</title><rect x="45.5414%" y="581" width="0.5958%" height="15" fill="rgb(220,139,14)" fg:x="46628" fg:w="610"/><text x="45.7914%" y="591.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="46.1206%" y="565" width="0.0166%" height="15" fill="rgb(247,54,32)" fg:x="47221" fg:w="17"/><text x="46.3706%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (11 samples, 0.01%)</title><rect x="46.1450%" y="773" width="0.0107%" height="15" fill="rgb(252,131,39)" fg:x="47246" fg:w="11"/><text x="46.3950%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="46.1450%" y="757" width="0.0107%" height="15" fill="rgb(210,108,39)" fg:x="47246" fg:w="11"/><text x="46.3950%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="46.1450%" y="741" width="0.0107%" height="15" fill="rgb(205,23,29)" fg:x="47246" fg:w="11"/><text x="46.3950%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="46.1450%" y="725" width="0.0107%" height="15" fill="rgb(246,139,46)" fg:x="47246" fg:w="11"/><text x="46.3950%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="46.1557%" y="757" width="0.0166%" height="15" fill="rgb(250,81,26)" fg:x="47257" fg:w="17"/><text x="46.4057%" y="767.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.02%)</title><rect x="46.2856%" y="709" width="0.0166%" height="15" fill="rgb(214,104,7)" fg:x="47390" fg:w="17"/><text x="46.5356%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="46.2856%" y="693" width="0.0166%" height="15" fill="rgb(233,189,8)" fg:x="47390" fg:w="17"/><text x="46.5356%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="46.2856%" y="677" width="0.0166%" height="15" fill="rgb(228,141,17)" fg:x="47390" fg:w="17"/><text x="46.5356%" y="687.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="46.2856%" y="661" width="0.0166%" height="15" fill="rgb(247,157,1)" fg:x="47390" fg:w="17"/><text x="46.5356%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="46.2856%" y="645" width="0.0166%" height="15" fill="rgb(249,225,5)" fg:x="47390" fg:w="17"/><text x="46.5356%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="46.3354%" y="645" width="0.0303%" height="15" fill="rgb(242,55,13)" fg:x="47441" fg:w="31"/><text x="46.5854%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (31 samples, 0.03%)</title><rect x="46.3354%" y="629" width="0.0303%" height="15" fill="rgb(230,49,50)" fg:x="47441" fg:w="31"/><text x="46.5854%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (203 samples, 0.20%)</title><rect x="46.1899%" y="741" width="0.1983%" height="15" fill="rgb(241,111,38)" fg:x="47292" fg:w="203"/><text x="46.4399%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (125 samples, 0.12%)</title><rect x="46.2661%" y="725" width="0.1221%" height="15" fill="rgb(252,155,4)" fg:x="47370" fg:w="125"/><text x="46.5161%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (88 samples, 0.09%)</title><rect x="46.3022%" y="709" width="0.0859%" height="15" fill="rgb(212,69,32)" fg:x="47407" fg:w="88"/><text x="46.5522%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (88 samples, 0.09%)</title><rect x="46.3022%" y="693" width="0.0859%" height="15" fill="rgb(243,107,47)" fg:x="47407" fg:w="88"/><text x="46.5522%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (54 samples, 0.05%)</title><rect x="46.3354%" y="677" width="0.0527%" height="15" fill="rgb(247,130,12)" fg:x="47441" fg:w="54"/><text x="46.5854%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (54 samples, 0.05%)</title><rect x="46.3354%" y="661" width="0.0527%" height="15" fill="rgb(233,74,16)" fg:x="47441" fg:w="54"/><text x="46.5854%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (23 samples, 0.02%)</title><rect x="46.3657%" y="645" width="0.0225%" height="15" fill="rgb(208,58,18)" fg:x="47472" fg:w="23"/><text x="46.6157%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="46.3657%" y="629" width="0.0225%" height="15" fill="rgb(242,225,1)" fg:x="47472" fg:w="23"/><text x="46.6157%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (23 samples, 0.02%)</title><rect x="46.3657%" y="613" width="0.0225%" height="15" fill="rgb(249,39,40)" fg:x="47472" fg:w="23"/><text x="46.6157%" y="623.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="46.4126%" y="709" width="0.0147%" height="15" fill="rgb(207,72,44)" fg:x="47520" fg:w="15"/><text x="46.6626%" y="719.50"></text></g><g><title>size_to_sizeclass (20 samples, 0.02%)</title><rect x="46.4272%" y="709" width="0.0195%" height="15" fill="rgb(215,193,12)" fg:x="47535" fg:w="20"/><text x="46.6772%" y="719.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="46.4692%" y="645" width="0.0117%" height="15" fill="rgb(248,41,39)" fg:x="47578" fg:w="12"/><text x="46.7192%" y="655.50"></text></g><g><title>sizeclass_to_size (24 samples, 0.02%)</title><rect x="46.4810%" y="645" width="0.0234%" height="15" fill="rgb(253,85,4)" fg:x="47590" fg:w="24"/><text x="46.7310%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (24 samples, 0.02%)</title><rect x="46.4810%" y="629" width="0.0234%" height="15" fill="rgb(243,70,31)" fg:x="47590" fg:w="24"/><text x="46.7310%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (38 samples, 0.04%)</title><rect x="46.5308%" y="597" width="0.0371%" height="15" fill="rgb(253,195,26)" fg:x="47641" fg:w="38"/><text x="46.7808%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (38 samples, 0.04%)</title><rect x="46.5308%" y="581" width="0.0371%" height="15" fill="rgb(243,42,11)" fg:x="47641" fg:w="38"/><text x="46.7808%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (92 samples, 0.09%)</title><rect x="46.5044%" y="645" width="0.0899%" height="15" fill="rgb(239,66,17)" fg:x="47614" fg:w="92"/><text x="46.7544%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (92 samples, 0.09%)</title><rect x="46.5044%" y="629" width="0.0899%" height="15" fill="rgb(217,132,21)" fg:x="47614" fg:w="92"/><text x="46.7544%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (89 samples, 0.09%)</title><rect x="46.5073%" y="613" width="0.0869%" height="15" fill="rgb(252,202,21)" fg:x="47617" fg:w="89"/><text x="46.7573%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (27 samples, 0.03%)</title><rect x="46.5679%" y="597" width="0.0264%" height="15" fill="rgb(233,98,36)" fg:x="47679" fg:w="27"/><text x="46.8179%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (27 samples, 0.03%)</title><rect x="46.5679%" y="581" width="0.0264%" height="15" fill="rgb(216,153,54)" fg:x="47679" fg:w="27"/><text x="46.8179%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (159 samples, 0.16%)</title><rect x="46.4468%" y="677" width="0.1553%" height="15" fill="rgb(250,99,7)" fg:x="47555" fg:w="159"/><text x="46.6968%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (159 samples, 0.16%)</title><rect x="46.4468%" y="661" width="0.1553%" height="15" fill="rgb(207,56,50)" fg:x="47555" fg:w="159"/><text x="46.6968%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (160 samples, 0.16%)</title><rect x="46.4468%" y="709" width="0.1563%" height="15" fill="rgb(244,61,34)" fg:x="47555" fg:w="160"/><text x="46.6968%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (160 samples, 0.16%)</title><rect x="46.4468%" y="693" width="0.1563%" height="15" fill="rgb(241,50,38)" fg:x="47555" fg:w="160"/><text x="46.6968%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (199 samples, 0.19%)</title><rect x="46.4126%" y="725" width="0.1944%" height="15" fill="rgb(212,166,30)" fg:x="47520" fg:w="199"/><text x="46.6626%" y="735.50"></text></g><g><title>rust_dealloc (229 samples, 0.22%)</title><rect x="46.3882%" y="741" width="0.2237%" height="15" fill="rgb(249,127,32)" fg:x="47495" fg:w="229"/><text x="46.6382%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (477 samples, 0.47%)</title><rect x="46.1557%" y="773" width="0.4659%" height="15" fill="rgb(209,103,0)" fg:x="47257" fg:w="477"/><text x="46.4057%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (460 samples, 0.45%)</title><rect x="46.1723%" y="757" width="0.4493%" height="15" fill="rgb(238,209,51)" fg:x="47274" fg:w="460"/><text x="46.4223%" y="767.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (25 samples, 0.02%)</title><rect x="46.6216%" y="773" width="0.0244%" height="15" fill="rgb(237,56,23)" fg:x="47734" fg:w="25"/><text x="46.8716%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,009 samples, 2.94%)</title><rect x="43.7179%" y="853" width="2.9389%" height="15" fill="rgb(215,153,46)" fg:x="44761" fg:w="3009"/><text x="43.9679%" y="863.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,009 samples, 2.94%)</title><rect x="43.7179%" y="837" width="2.9389%" height="15" fill="rgb(224,49,31)" fg:x="44761" fg:w="3009"/><text x="43.9679%" y="847.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,009 samples, 2.94%)</title><rect x="43.7179%" y="821" width="2.9389%" height="15" fill="rgb(250,18,42)" fg:x="44761" fg:w="3009"/><text x="43.9679%" y="831.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,721 samples, 2.66%)</title><rect x="43.9992%" y="805" width="2.6576%" height="15" fill="rgb(215,176,39)" fg:x="45049" fg:w="2721"/><text x="44.2492%" y="815.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_event (2,062 samples, 2.01%)</title><rect x="44.6428%" y="789" width="2.0139%" height="15" fill="rgb(223,77,29)" fg:x="45708" fg:w="2062"/><text x="44.8928%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (11 samples, 0.01%)</title><rect x="46.6460%" y="773" width="0.0107%" height="15" fill="rgb(234,94,52)" fg:x="47759" fg:w="11"/><text x="46.8960%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (51 samples, 0.05%)</title><rect x="46.7652%" y="789" width="0.0498%" height="15" fill="rgb(220,154,50)" fg:x="47881" fg:w="51"/><text x="47.0152%" y="799.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.01%)</title><rect x="46.8043%" y="773" width="0.0107%" height="15" fill="rgb(212,11,10)" fg:x="47921" fg:w="11"/><text x="47.0543%" y="783.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.01%)</title><rect x="46.8150%" y="789" width="0.0117%" height="15" fill="rgb(205,166,19)" fg:x="47932" fg:w="12"/><text x="47.0650%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,014 samples, 0.99%)</title><rect x="46.6753%" y="805" width="0.9904%" height="15" fill="rgb(244,198,16)" fg:x="47789" fg:w="1014"/><text x="46.9253%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (859 samples, 0.84%)</title><rect x="46.8267%" y="789" width="0.8390%" height="15" fill="rgb(219,69,12)" fg:x="47944" fg:w="859"/><text x="47.0767%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (471 samples, 0.46%)</title><rect x="47.6657%" y="805" width="0.4600%" height="15" fill="rgb(245,30,7)" fg:x="48803" fg:w="471"/><text x="47.9157%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,505 samples, 1.47%)</title><rect x="46.6568%" y="837" width="1.4699%" height="15" fill="rgb(218,221,48)" fg:x="47770" fg:w="1505"/><text x="46.9068%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,505 samples, 1.47%)</title><rect x="46.6568%" y="821" width="1.4699%" height="15" fill="rgb(216,66,15)" fg:x="47770" fg:w="1505"/><text x="46.9068%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="48.1716%" y="821" width="0.0127%" height="15" fill="rgb(226,122,50)" fg:x="49321" fg:w="13"/><text x="48.4216%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (411 samples, 0.40%)</title><rect x="48.1843%" y="821" width="0.4014%" height="15" fill="rgb(239,156,16)" fg:x="49334" fg:w="411"/><text x="48.4343%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (46 samples, 0.04%)</title><rect x="48.8065%" y="805" width="0.0449%" height="15" fill="rgb(224,27,38)" fg:x="49971" fg:w="46"/><text x="49.0565%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.04%)</title><rect x="48.8534%" y="789" width="0.0449%" height="15" fill="rgb(224,39,27)" fg:x="50019" fg:w="46"/><text x="49.1034%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (16 samples, 0.02%)</title><rect x="48.8827%" y="773" width="0.0156%" height="15" fill="rgb(215,92,29)" fg:x="50049" fg:w="16"/><text x="49.1327%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (389 samples, 0.38%)</title><rect x="48.8534%" y="805" width="0.3799%" height="15" fill="rgb(207,159,16)" fg:x="50019" fg:w="389"/><text x="49.1034%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (343 samples, 0.34%)</title><rect x="48.8983%" y="789" width="0.3350%" height="15" fill="rgb(238,163,47)" fg:x="50065" fg:w="343"/><text x="49.1483%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (330 samples, 0.32%)</title><rect x="48.9110%" y="773" width="0.3223%" height="15" fill="rgb(219,91,49)" fg:x="50078" fg:w="330"/><text x="49.1610%" y="783.50"></text></g><g><title>core::ptr::read (330 samples, 0.32%)</title><rect x="48.9110%" y="757" width="0.3223%" height="15" fill="rgb(227,167,31)" fg:x="50078" fg:w="330"/><text x="49.1610%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (327 samples, 0.32%)</title><rect x="48.9139%" y="741" width="0.3194%" height="15" fill="rgb(234,80,54)" fg:x="50081" fg:w="327"/><text x="49.1639%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="49.2392%" y="645" width="0.0107%" height="15" fill="rgb(212,114,2)" fg:x="50414" fg:w="11"/><text x="49.4892%" y="655.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="49.2616%" y="533" width="0.0137%" height="15" fill="rgb(234,50,24)" fg:x="50437" fg:w="14"/><text x="49.5116%" y="543.50"></text></g><g><title>rust_alloc (30 samples, 0.03%)</title><rect x="49.2753%" y="501" width="0.0293%" height="15" fill="rgb(221,68,8)" fg:x="50451" fg:w="30"/><text x="49.5253%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="49.3427%" y="373" width="0.0147%" height="15" fill="rgb(254,180,31)" fg:x="50520" fg:w="15"/><text x="49.5927%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="49.3427%" y="357" width="0.0147%" height="15" fill="rgb(247,130,50)" fg:x="50520" fg:w="15"/><text x="49.5927%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (38 samples, 0.04%)</title><rect x="49.3300%" y="421" width="0.0371%" height="15" fill="rgb(211,109,4)" fg:x="50507" fg:w="38"/><text x="49.5800%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (38 samples, 0.04%)</title><rect x="49.3300%" y="405" width="0.0371%" height="15" fill="rgb(238,50,21)" fg:x="50507" fg:w="38"/><text x="49.5800%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (37 samples, 0.04%)</title><rect x="49.3310%" y="389" width="0.0361%" height="15" fill="rgb(225,57,45)" fg:x="50508" fg:w="37"/><text x="49.5810%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (46 samples, 0.04%)</title><rect x="49.3300%" y="437" width="0.0449%" height="15" fill="rgb(209,196,50)" fg:x="50507" fg:w="46"/><text x="49.5800%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (58 samples, 0.06%)</title><rect x="49.3261%" y="453" width="0.0566%" height="15" fill="rgb(242,140,13)" fg:x="50503" fg:w="58"/><text x="49.5761%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="49.3915%" y="437" width="0.0107%" height="15" fill="rgb(217,111,7)" fg:x="50570" fg:w="11"/><text x="49.6415%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (211 samples, 0.21%)</title><rect x="49.3251%" y="485" width="0.2061%" height="15" fill="rgb(253,193,51)" fg:x="50502" fg:w="211"/><text x="49.5751%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (211 samples, 0.21%)</title><rect x="49.3251%" y="469" width="0.2061%" height="15" fill="rgb(252,70,29)" fg:x="50502" fg:w="211"/><text x="49.5751%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (152 samples, 0.15%)</title><rect x="49.3827%" y="453" width="0.1485%" height="15" fill="rgb(232,127,12)" fg:x="50561" fg:w="152"/><text x="49.6327%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (132 samples, 0.13%)</title><rect x="49.4023%" y="437" width="0.1289%" height="15" fill="rgb(211,180,21)" fg:x="50581" fg:w="132"/><text x="49.6523%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (132 samples, 0.13%)</title><rect x="49.4023%" y="421" width="0.1289%" height="15" fill="rgb(229,72,13)" fg:x="50581" fg:w="132"/><text x="49.6523%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (132 samples, 0.13%)</title><rect x="49.4023%" y="405" width="0.1289%" height="15" fill="rgb(240,211,49)" fg:x="50581" fg:w="132"/><text x="49.6523%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (58 samples, 0.06%)</title><rect x="49.5390%" y="485" width="0.0566%" height="15" fill="rgb(219,149,40)" fg:x="50721" fg:w="58"/><text x="49.7890%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (58 samples, 0.06%)</title><rect x="49.5390%" y="469" width="0.0566%" height="15" fill="rgb(210,127,46)" fg:x="50721" fg:w="58"/><text x="49.7890%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (907 samples, 0.89%)</title><rect x="49.2753%" y="533" width="0.8859%" height="15" fill="rgb(220,106,7)" fg:x="50451" fg:w="907"/><text x="49.5253%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (907 samples, 0.89%)</title><rect x="49.2753%" y="517" width="0.8859%" height="15" fill="rgb(249,31,22)" fg:x="50451" fg:w="907"/><text x="49.5253%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (867 samples, 0.85%)</title><rect x="49.3144%" y="501" width="0.8468%" height="15" fill="rgb(253,1,49)" fg:x="50491" fg:w="867"/><text x="49.5644%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (579 samples, 0.57%)</title><rect x="49.5956%" y="485" width="0.5655%" height="15" fill="rgb(227,144,33)" fg:x="50779" fg:w="579"/><text x="49.8456%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (579 samples, 0.57%)</title><rect x="49.5956%" y="469" width="0.5655%" height="15" fill="rgb(249,163,44)" fg:x="50779" fg:w="579"/><text x="49.8456%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (961 samples, 0.94%)</title><rect x="49.2392%" y="677" width="0.9386%" height="15" fill="rgb(234,15,39)" fg:x="50414" fg:w="961"/><text x="49.4892%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (961 samples, 0.94%)</title><rect x="49.2392%" y="661" width="0.9386%" height="15" fill="rgb(207,66,16)" fg:x="50414" fg:w="961"/><text x="49.4892%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (950 samples, 0.93%)</title><rect x="49.2499%" y="645" width="0.9279%" height="15" fill="rgb(233,112,24)" fg:x="50425" fg:w="950"/><text x="49.4999%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (950 samples, 0.93%)</title><rect x="49.2499%" y="629" width="0.9279%" height="15" fill="rgb(230,90,22)" fg:x="50425" fg:w="950"/><text x="49.4999%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (950 samples, 0.93%)</title><rect x="49.2499%" y="613" width="0.9279%" height="15" fill="rgb(229,61,13)" fg:x="50425" fg:w="950"/><text x="49.4999%" y="623.50"></text></g><g><title>alloc::alloc::alloc (938 samples, 0.92%)</title><rect x="49.2616%" y="597" width="0.9161%" height="15" fill="rgb(225,57,24)" fg:x="50437" fg:w="938"/><text x="49.5116%" y="607.50"></text></g><g><title>__rg_alloc (938 samples, 0.92%)</title><rect x="49.2616%" y="581" width="0.9161%" height="15" fill="rgb(208,169,48)" fg:x="50437" fg:w="938"/><text x="49.5116%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (938 samples, 0.92%)</title><rect x="49.2616%" y="565" width="0.9161%" height="15" fill="rgb(244,218,51)" fg:x="50437" fg:w="938"/><text x="49.5116%" y="575.50"></text></g><g><title>rust_alloc (938 samples, 0.92%)</title><rect x="49.2616%" y="549" width="0.9161%" height="15" fill="rgb(214,148,10)" fg:x="50437" fg:w="938"/><text x="49.5116%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="50.1612%" y="533" width="0.0166%" height="15" fill="rgb(225,174,27)" fg:x="51358" fg:w="17"/><text x="50.4112%" y="543.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,016 samples, 0.99%)</title><rect x="49.2392%" y="805" width="0.9923%" height="15" fill="rgb(230,96,26)" fg:x="50414" fg:w="1016"/><text x="49.4892%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,016 samples, 0.99%)</title><rect x="49.2392%" y="789" width="0.9923%" height="15" fill="rgb(232,10,30)" fg:x="50414" fg:w="1016"/><text x="49.4892%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,016 samples, 0.99%)</title><rect x="49.2392%" y="773" width="0.9923%" height="15" fill="rgb(222,8,50)" fg:x="50414" fg:w="1016"/><text x="49.4892%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,016 samples, 0.99%)</title><rect x="49.2392%" y="757" width="0.9923%" height="15" fill="rgb(213,81,27)" fg:x="50414" fg:w="1016"/><text x="49.4892%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,016 samples, 0.99%)</title><rect x="49.2392%" y="741" width="0.9923%" height="15" fill="rgb(245,50,10)" fg:x="50414" fg:w="1016"/><text x="49.4892%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,016 samples, 0.99%)</title><rect x="49.2392%" y="725" width="0.9923%" height="15" fill="rgb(216,100,18)" fg:x="50414" fg:w="1016"/><text x="49.4892%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,016 samples, 0.99%)</title><rect x="49.2392%" y="709" width="0.9923%" height="15" fill="rgb(236,147,54)" fg:x="50414" fg:w="1016"/><text x="49.4892%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,016 samples, 0.99%)</title><rect x="49.2392%" y="693" width="0.9923%" height="15" fill="rgb(205,143,26)" fg:x="50414" fg:w="1016"/><text x="49.4892%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (55 samples, 0.05%)</title><rect x="50.1778%" y="677" width="0.0537%" height="15" fill="rgb(236,26,9)" fg:x="51375" fg:w="55"/><text x="50.4278%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.05%)</title><rect x="50.1778%" y="661" width="0.0537%" height="15" fill="rgb(221,165,53)" fg:x="51375" fg:w="55"/><text x="50.4278%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.04%)</title><rect x="50.1924%" y="645" width="0.0391%" height="15" fill="rgb(214,110,17)" fg:x="51390" fg:w="40"/><text x="50.4424%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,468 samples, 1.43%)</title><rect x="50.2315%" y="805" width="1.4338%" height="15" fill="rgb(237,197,12)" fg:x="51430" fg:w="1468"/><text x="50.4815%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (13 samples, 0.01%)</title><rect x="51.6702%" y="789" width="0.0127%" height="15" fill="rgb(205,84,17)" fg:x="52903" fg:w="13"/><text x="51.9202%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (25 samples, 0.02%)</title><rect x="51.6653%" y="805" width="0.0244%" height="15" fill="rgb(237,18,45)" fg:x="52898" fg:w="25"/><text x="51.9153%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (28 samples, 0.03%)</title><rect x="51.6897%" y="805" width="0.0273%" height="15" fill="rgb(221,87,14)" fg:x="52923" fg:w="28"/><text x="51.9397%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="51.6897%" y="789" width="0.0273%" height="15" fill="rgb(238,186,15)" fg:x="52923" fg:w="28"/><text x="51.9397%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="51.7034%" y="773" width="0.0137%" height="15" fill="rgb(208,115,11)" fg:x="52937" fg:w="14"/><text x="51.9534%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="51.7034%" y="757" width="0.0137%" height="15" fill="rgb(254,175,0)" fg:x="52937" fg:w="14"/><text x="51.9534%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (13 samples, 0.01%)</title><rect x="51.7170%" y="805" width="0.0127%" height="15" fill="rgb(227,24,42)" fg:x="52951" fg:w="13"/><text x="51.9670%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="51.7170%" y="789" width="0.0127%" height="15" fill="rgb(223,211,37)" fg:x="52951" fg:w="13"/><text x="51.9670%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="51.7297%" y="805" width="0.0127%" height="15" fill="rgb(235,49,27)" fg:x="52964" fg:w="13"/><text x="51.9797%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="51.7307%" y="789" width="0.0117%" height="15" fill="rgb(254,97,51)" fg:x="52965" fg:w="12"/><text x="51.9807%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (22 samples, 0.02%)</title><rect x="51.7424%" y="805" width="0.0215%" height="15" fill="rgb(249,51,40)" fg:x="52977" fg:w="22"/><text x="51.9924%" y="815.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (16 samples, 0.02%)</title><rect x="51.7874%" y="789" width="0.0156%" height="15" fill="rgb(210,128,45)" fg:x="53023" fg:w="16"/><text x="52.0374%" y="799.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (29 samples, 0.03%)</title><rect x="51.8049%" y="757" width="0.0283%" height="15" fill="rgb(224,137,50)" fg:x="53041" fg:w="29"/><text x="52.0549%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (305 samples, 0.30%)</title><rect x="51.8049%" y="773" width="0.2979%" height="15" fill="rgb(242,15,9)" fg:x="53041" fg:w="305"/><text x="52.0549%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (276 samples, 0.27%)</title><rect x="51.8333%" y="757" width="0.2696%" height="15" fill="rgb(233,187,41)" fg:x="53070" fg:w="276"/><text x="52.0833%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (276 samples, 0.27%)</title><rect x="51.8333%" y="741" width="0.2696%" height="15" fill="rgb(227,2,29)" fg:x="53070" fg:w="276"/><text x="52.0833%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (276 samples, 0.27%)</title><rect x="51.8333%" y="725" width="0.2696%" height="15" fill="rgb(222,70,3)" fg:x="53070" fg:w="276"/><text x="52.0833%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (276 samples, 0.27%)</title><rect x="51.8333%" y="709" width="0.2696%" height="15" fill="rgb(213,11,42)" fg:x="53070" fg:w="276"/><text x="52.0833%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (276 samples, 0.27%)</title><rect x="51.8333%" y="693" width="0.2696%" height="15" fill="rgb(225,150,9)" fg:x="53070" fg:w="276"/><text x="52.0833%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (186 samples, 0.18%)</title><rect x="51.9212%" y="677" width="0.1817%" height="15" fill="rgb(230,162,45)" fg:x="53160" fg:w="186"/><text x="52.1712%" y="687.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (350 samples, 0.34%)</title><rect x="51.7639%" y="805" width="0.3418%" height="15" fill="rgb(222,14,52)" fg:x="52999" fg:w="350"/><text x="52.0139%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (310 samples, 0.30%)</title><rect x="51.8030%" y="789" width="0.3028%" height="15" fill="rgb(254,198,14)" fg:x="53039" fg:w="310"/><text x="52.0530%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,617 samples, 8.42%)</title><rect x="43.7169%" y="1141" width="8.4162%" height="15" fill="rgb(220,217,30)" fg:x="44760" fg:w="8617"/><text x="43.9669%" y="1151.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,616 samples, 8.42%)</title><rect x="43.7179%" y="1125" width="8.4152%" height="15" fill="rgb(215,146,41)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1135.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,616 samples, 8.42%)</title><rect x="43.7179%" y="1109" width="8.4152%" height="15" fill="rgb(217,27,36)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1119.50">async_execut..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,616 samples, 8.42%)</title><rect x="43.7179%" y="1093" width="8.4152%" height="15" fill="rgb(219,218,39)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1103.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,616 samples, 8.42%)</title><rect x="43.7179%" y="1077" width="8.4152%" height="15" fill="rgb(219,4,42)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1087.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,616 samples, 8.42%)</title><rect x="43.7179%" y="1061" width="8.4152%" height="15" fill="rgb(249,119,36)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1071.50">async_execut..</text></g><g><title>async_task::runnable::Runnable::run (8,616 samples, 8.42%)</title><rect x="43.7179%" y="1045" width="8.4152%" height="15" fill="rgb(209,23,33)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1055.50">async_task::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,616 samples, 8.42%)</title><rect x="43.7179%" y="1029" width="8.4152%" height="15" fill="rgb(211,10,0)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1039.50">async_task::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,616 samples, 8.42%)</title><rect x="43.7179%" y="1013" width="8.4152%" height="15" fill="rgb(208,99,37)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1023.50">&lt;core::pin::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,616 samples, 8.42%)</title><rect x="43.7179%" y="997" width="8.4152%" height="15" fill="rgb(213,132,31)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="1007.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,616 samples, 8.42%)</title><rect x="43.7179%" y="981" width="8.4152%" height="15" fill="rgb(243,129,40)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="991.50">async_execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,616 samples, 8.42%)</title><rect x="43.7179%" y="965" width="8.4152%" height="15" fill="rgb(210,66,33)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="975.50">&lt;async_std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,616 samples, 8.42%)</title><rect x="43.7179%" y="949" width="8.4152%" height="15" fill="rgb(209,189,4)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="959.50">async_std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,616 samples, 8.42%)</title><rect x="43.7179%" y="933" width="8.4152%" height="15" fill="rgb(214,107,37)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="943.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,616 samples, 8.42%)</title><rect x="43.7179%" y="917" width="8.4152%" height="15" fill="rgb(245,88,54)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="927.50">std::thread:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,616 samples, 8.42%)</title><rect x="43.7179%" y="901" width="8.4152%" height="15" fill="rgb(205,146,20)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="911.50">async_std::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,616 samples, 8.42%)</title><rect x="43.7179%" y="885" width="8.4152%" height="15" fill="rgb(220,161,25)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="895.50">&lt;async_std::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,616 samples, 8.42%)</title><rect x="43.7179%" y="869" width="8.4152%" height="15" fill="rgb(215,152,15)" fg:x="44761" fg:w="8616"/><text x="43.9679%" y="879.50">&lt;core::futur..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,607 samples, 5.48%)</title><rect x="46.6568%" y="853" width="5.4763%" height="15" fill="rgb(233,192,44)" fg:x="47770" fg:w="5607"/><text x="46.9068%" y="863.50">tremor_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,102 samples, 4.01%)</title><rect x="48.1267%" y="837" width="4.0064%" height="15" fill="rgb(240,170,46)" fg:x="49275" fg:w="4102"/><text x="48.3767%" y="847.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,632 samples, 3.55%)</title><rect x="48.5857%" y="821" width="3.5474%" height="15" fill="rgb(207,104,33)" fg:x="49745" fg:w="3632"/><text x="48.8357%" y="831.50">trem..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (28 samples, 0.03%)</title><rect x="52.1058%" y="805" width="0.0273%" height="15" fill="rgb(219,21,39)" fg:x="53349" fg:w="28"/><text x="52.3558%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (28 samples, 0.03%)</title><rect x="52.1058%" y="789" width="0.0273%" height="15" fill="rgb(214,133,29)" fg:x="53349" fg:w="28"/><text x="52.3558%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.03%)</title><rect x="52.1058%" y="773" width="0.0273%" height="15" fill="rgb(226,93,6)" fg:x="53349" fg:w="28"/><text x="52.3558%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (16 samples, 0.02%)</title><rect x="52.1175%" y="757" width="0.0156%" height="15" fill="rgb(252,222,34)" fg:x="53361" fg:w="16"/><text x="52.3675%" y="767.50"></text></g><g><title>async_io::driver::block_on (8,618 samples, 8.42%)</title><rect x="43.7169%" y="1157" width="8.4172%" height="15" fill="rgb(252,92,48)" fg:x="44760" fg:w="8618"/><text x="43.9669%" y="1167.50">async_io::dr..</text></g><g><title>aligned_size (16 samples, 0.02%)</title><rect x="52.7631%" y="789" width="0.0156%" height="15" fill="rgb(245,223,24)" fg:x="54022" fg:w="16"/><text x="53.0131%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="52.7963%" y="709" width="0.0117%" height="15" fill="rgb(205,176,3)" fg:x="54056" fg:w="12"/><text x="53.0463%" y="719.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="52.8109%" y="693" width="0.0107%" height="15" fill="rgb(235,151,15)" fg:x="54071" fg:w="11"/><text x="53.0609%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="52.7963%" y="741" width="0.0830%" height="15" fill="rgb(237,209,11)" fg:x="54056" fg:w="85"/><text x="53.0463%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (85 samples, 0.08%)</title><rect x="52.7963%" y="725" width="0.0830%" height="15" fill="rgb(243,227,24)" fg:x="54056" fg:w="85"/><text x="53.0463%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (73 samples, 0.07%)</title><rect x="52.8080%" y="709" width="0.0713%" height="15" fill="rgb(239,193,16)" fg:x="54068" fg:w="73"/><text x="53.0580%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (59 samples, 0.06%)</title><rect x="52.8217%" y="693" width="0.0576%" height="15" fill="rgb(231,27,9)" fg:x="54082" fg:w="59"/><text x="53.0717%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (59 samples, 0.06%)</title><rect x="52.8217%" y="677" width="0.0576%" height="15" fill="rgb(219,169,10)" fg:x="54082" fg:w="59"/><text x="53.0717%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (59 samples, 0.06%)</title><rect x="52.8217%" y="661" width="0.0576%" height="15" fill="rgb(244,229,43)" fg:x="54082" fg:w="59"/><text x="53.0717%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (349 samples, 0.34%)</title><rect x="52.7846%" y="789" width="0.3409%" height="15" fill="rgb(254,38,20)" fg:x="54044" fg:w="349"/><text x="53.0346%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (347 samples, 0.34%)</title><rect x="52.7865%" y="773" width="0.3389%" height="15" fill="rgb(250,47,30)" fg:x="54046" fg:w="347"/><text x="53.0365%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (338 samples, 0.33%)</title><rect x="52.7953%" y="757" width="0.3301%" height="15" fill="rgb(224,124,36)" fg:x="54055" fg:w="338"/><text x="53.0453%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (231 samples, 0.23%)</title><rect x="52.8998%" y="741" width="0.2256%" height="15" fill="rgb(246,68,51)" fg:x="54162" fg:w="231"/><text x="53.1498%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (231 samples, 0.23%)</title><rect x="52.8998%" y="725" width="0.2256%" height="15" fill="rgb(253,43,49)" fg:x="54162" fg:w="231"/><text x="53.1498%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (382 samples, 0.37%)</title><rect x="52.7562%" y="901" width="0.3731%" height="15" fill="rgb(219,54,36)" fg:x="54015" fg:w="382"/><text x="53.0062%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (382 samples, 0.37%)</title><rect x="52.7562%" y="885" width="0.3731%" height="15" fill="rgb(227,133,34)" fg:x="54015" fg:w="382"/><text x="53.0062%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (382 samples, 0.37%)</title><rect x="52.7562%" y="869" width="0.3731%" height="15" fill="rgb(247,227,15)" fg:x="54015" fg:w="382"/><text x="53.0062%" y="879.50"></text></g><g><title>alloc::alloc::alloc (382 samples, 0.37%)</title><rect x="52.7562%" y="853" width="0.3731%" height="15" fill="rgb(229,96,14)" fg:x="54015" fg:w="382"/><text x="53.0062%" y="863.50"></text></g><g><title>__rg_alloc (382 samples, 0.37%)</title><rect x="52.7562%" y="837" width="0.3731%" height="15" fill="rgb(220,79,17)" fg:x="54015" fg:w="382"/><text x="53.0062%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (382 samples, 0.37%)</title><rect x="52.7562%" y="821" width="0.3731%" height="15" fill="rgb(205,131,53)" fg:x="54015" fg:w="382"/><text x="53.0062%" y="831.50"></text></g><g><title>rust_alloc (375 samples, 0.37%)</title><rect x="52.7631%" y="805" width="0.3663%" height="15" fill="rgb(209,50,29)" fg:x="54022" fg:w="375"/><text x="53.0131%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="53.1469%" y="901" width="0.0117%" height="15" fill="rgb(245,86,46)" fg:x="54415" fg:w="12"/><text x="53.3969%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="53.1469%" y="885" width="0.0117%" height="15" fill="rgb(235,66,46)" fg:x="54415" fg:w="12"/><text x="53.3969%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="53.1469%" y="869" width="0.0117%" height="15" fill="rgb(232,148,31)" fg:x="54415" fg:w="12"/><text x="53.3969%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="53.1469%" y="853" width="0.0117%" height="15" fill="rgb(217,149,8)" fg:x="54415" fg:w="12"/><text x="53.3969%" y="863.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (1,061 samples, 1.04%)</title><rect x="52.1351%" y="917" width="1.0363%" height="15" fill="rgb(209,183,11)" fg:x="53379" fg:w="1061"/><text x="52.3851%" y="927.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (13 samples, 0.01%)</title><rect x="53.1586%" y="901" width="0.0127%" height="15" fill="rgb(208,55,20)" fg:x="54427" fg:w="13"/><text x="53.4086%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (13 samples, 0.01%)</title><rect x="53.1586%" y="885" width="0.0127%" height="15" fill="rgb(218,39,14)" fg:x="54427" fg:w="13"/><text x="53.4086%" y="895.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="53.1586%" y="869" width="0.0127%" height="15" fill="rgb(216,169,33)" fg:x="54427" fg:w="13"/><text x="53.4086%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.01%)</title><rect x="53.1586%" y="853" width="0.0127%" height="15" fill="rgb(233,80,24)" fg:x="54427" fg:w="13"/><text x="53.4086%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="53.1586%" y="837" width="0.0127%" height="15" fill="rgb(213,179,31)" fg:x="54427" fg:w="13"/><text x="53.4086%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (141 samples, 0.14%)</title><rect x="53.6226%" y="901" width="0.1377%" height="15" fill="rgb(209,19,5)" fg:x="54902" fg:w="141"/><text x="53.8726%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (54 samples, 0.05%)</title><rect x="53.7847%" y="741" width="0.0527%" height="15" fill="rgb(219,18,35)" fg:x="55068" fg:w="54"/><text x="54.0347%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (54 samples, 0.05%)</title><rect x="53.7847%" y="725" width="0.0527%" height="15" fill="rgb(209,169,16)" fg:x="55068" fg:w="54"/><text x="54.0347%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (44 samples, 0.04%)</title><rect x="53.7945%" y="709" width="0.0430%" height="15" fill="rgb(245,90,51)" fg:x="55078" fg:w="44"/><text x="54.0445%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (34 samples, 0.03%)</title><rect x="53.8042%" y="693" width="0.0332%" height="15" fill="rgb(220,99,45)" fg:x="55088" fg:w="34"/><text x="54.0542%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="53.8042%" y="677" width="0.0332%" height="15" fill="rgb(249,89,25)" fg:x="55088" fg:w="34"/><text x="54.0542%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (34 samples, 0.03%)</title><rect x="53.8042%" y="661" width="0.0332%" height="15" fill="rgb(239,193,0)" fg:x="55088" fg:w="34"/><text x="54.0542%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (13 samples, 0.01%)</title><rect x="53.8462%" y="741" width="0.0127%" height="15" fill="rgb(231,126,1)" fg:x="55131" fg:w="13"/><text x="54.0962%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (13 samples, 0.01%)</title><rect x="53.8462%" y="725" width="0.0127%" height="15" fill="rgb(243,166,3)" fg:x="55131" fg:w="13"/><text x="54.0962%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (216 samples, 0.21%)</title><rect x="53.7720%" y="789" width="0.2110%" height="15" fill="rgb(223,22,34)" fg:x="55055" fg:w="216"/><text x="54.0220%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.20%)</title><rect x="53.7798%" y="773" width="0.2032%" height="15" fill="rgb(251,52,51)" fg:x="55063" fg:w="208"/><text x="54.0298%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (203 samples, 0.20%)</title><rect x="53.7847%" y="757" width="0.1983%" height="15" fill="rgb(221,165,28)" fg:x="55068" fg:w="203"/><text x="54.0347%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (127 samples, 0.12%)</title><rect x="53.8589%" y="741" width="0.1240%" height="15" fill="rgb(218,121,47)" fg:x="55144" fg:w="127"/><text x="54.1089%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (127 samples, 0.12%)</title><rect x="53.8589%" y="725" width="0.1240%" height="15" fill="rgb(209,120,9)" fg:x="55144" fg:w="127"/><text x="54.1089%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (240 samples, 0.23%)</title><rect x="53.7603%" y="901" width="0.2344%" height="15" fill="rgb(236,68,12)" fg:x="55043" fg:w="240"/><text x="54.0103%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (240 samples, 0.23%)</title><rect x="53.7603%" y="885" width="0.2344%" height="15" fill="rgb(225,194,26)" fg:x="55043" fg:w="240"/><text x="54.0103%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (240 samples, 0.23%)</title><rect x="53.7603%" y="869" width="0.2344%" height="15" fill="rgb(231,84,39)" fg:x="55043" fg:w="240"/><text x="54.0103%" y="879.50"></text></g><g><title>alloc::alloc::alloc (240 samples, 0.23%)</title><rect x="53.7603%" y="853" width="0.2344%" height="15" fill="rgb(210,11,45)" fg:x="55043" fg:w="240"/><text x="54.0103%" y="863.50"></text></g><g><title>__rg_alloc (240 samples, 0.23%)</title><rect x="53.7603%" y="837" width="0.2344%" height="15" fill="rgb(224,54,52)" fg:x="55043" fg:w="240"/><text x="54.0103%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (240 samples, 0.23%)</title><rect x="53.7603%" y="821" width="0.2344%" height="15" fill="rgb(238,102,14)" fg:x="55043" fg:w="240"/><text x="54.0103%" y="831.50"></text></g><g><title>rust_alloc (229 samples, 0.22%)</title><rect x="53.7710%" y="805" width="0.2237%" height="15" fill="rgb(243,160,52)" fg:x="55054" fg:w="229"/><text x="54.0210%" y="815.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="53.9830%" y="789" width="0.0117%" height="15" fill="rgb(216,114,19)" fg:x="55271" fg:w="12"/><text x="54.2330%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="54.0533%" y="661" width="0.0137%" height="15" fill="rgb(244,166,37)" fg:x="55343" fg:w="14"/><text x="54.3033%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="54.0533%" y="645" width="0.0137%" height="15" fill="rgb(246,29,44)" fg:x="55343" fg:w="14"/><text x="54.3033%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (12 samples, 0.01%)</title><rect x="54.0552%" y="629" width="0.0117%" height="15" fill="rgb(215,56,53)" fg:x="55345" fg:w="12"/><text x="54.3052%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.02%)</title><rect x="54.0533%" y="677" width="0.0156%" height="15" fill="rgb(217,60,2)" fg:x="55343" fg:w="16"/><text x="54.3033%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="54.0513%" y="693" width="0.0195%" height="15" fill="rgb(207,26,24)" fg:x="55341" fg:w="20"/><text x="54.3013%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (115 samples, 0.11%)</title><rect x="54.0513%" y="725" width="0.1123%" height="15" fill="rgb(252,210,15)" fg:x="55341" fg:w="115"/><text x="54.3013%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (115 samples, 0.11%)</title><rect x="54.0513%" y="709" width="0.1123%" height="15" fill="rgb(253,209,26)" fg:x="55341" fg:w="115"/><text x="54.3013%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (95 samples, 0.09%)</title><rect x="54.0709%" y="693" width="0.0928%" height="15" fill="rgb(238,170,14)" fg:x="55361" fg:w="95"/><text x="54.3209%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (80 samples, 0.08%)</title><rect x="54.0855%" y="677" width="0.0781%" height="15" fill="rgb(216,178,15)" fg:x="55376" fg:w="80"/><text x="54.3355%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (80 samples, 0.08%)</title><rect x="54.0855%" y="661" width="0.0781%" height="15" fill="rgb(250,197,2)" fg:x="55376" fg:w="80"/><text x="54.3355%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (80 samples, 0.08%)</title><rect x="54.0855%" y="645" width="0.0781%" height="15" fill="rgb(212,70,42)" fg:x="55376" fg:w="80"/><text x="54.3355%" y="655.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="54.1754%" y="645" width="0.0127%" height="15" fill="rgb(227,213,9)" fg:x="55468" fg:w="13"/><text x="54.4254%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="54.1754%" y="629" width="0.0127%" height="15" fill="rgb(245,99,25)" fg:x="55468" fg:w="13"/><text x="54.4254%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.03%)</title><rect x="54.1637%" y="725" width="0.0254%" height="15" fill="rgb(250,82,29)" fg:x="55456" fg:w="26"/><text x="54.4137%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.03%)</title><rect x="54.1637%" y="709" width="0.0254%" height="15" fill="rgb(241,226,54)" fg:x="55456" fg:w="26"/><text x="54.4137%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.03%)</title><rect x="54.1637%" y="693" width="0.0254%" height="15" fill="rgb(221,99,41)" fg:x="55456" fg:w="26"/><text x="54.4137%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="54.1646%" y="677" width="0.0244%" height="15" fill="rgb(213,90,21)" fg:x="55457" fg:w="25"/><text x="54.4146%" y="687.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (25 samples, 0.02%)</title><rect x="54.1646%" y="661" width="0.0244%" height="15" fill="rgb(205,208,24)" fg:x="55457" fg:w="25"/><text x="54.4146%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (208 samples, 0.20%)</title><rect x="54.0377%" y="773" width="0.2032%" height="15" fill="rgb(246,31,12)" fg:x="55327" fg:w="208"/><text x="54.2877%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.20%)</title><rect x="54.0416%" y="757" width="0.1992%" height="15" fill="rgb(213,154,6)" fg:x="55331" fg:w="204"/><text x="54.2916%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (195 samples, 0.19%)</title><rect x="54.0504%" y="741" width="0.1905%" height="15" fill="rgb(222,163,29)" fg:x="55340" fg:w="195"/><text x="54.3004%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (47 samples, 0.05%)</title><rect x="54.1949%" y="725" width="0.0459%" height="15" fill="rgb(227,201,8)" fg:x="55488" fg:w="47"/><text x="54.4449%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (47 samples, 0.05%)</title><rect x="54.1949%" y="709" width="0.0459%" height="15" fill="rgb(233,9,32)" fg:x="55488" fg:w="47"/><text x="54.4449%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (258 samples, 0.25%)</title><rect x="53.9947%" y="901" width="0.2520%" height="15" fill="rgb(217,54,24)" fg:x="55283" fg:w="258"/><text x="54.2447%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (236 samples, 0.23%)</title><rect x="54.0162%" y="885" width="0.2305%" height="15" fill="rgb(235,192,0)" fg:x="55305" fg:w="236"/><text x="54.2662%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (236 samples, 0.23%)</title><rect x="54.0162%" y="869" width="0.2305%" height="15" fill="rgb(235,45,9)" fg:x="55305" fg:w="236"/><text x="54.2662%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (236 samples, 0.23%)</title><rect x="54.0162%" y="853" width="0.2305%" height="15" fill="rgb(246,42,40)" fg:x="55305" fg:w="236"/><text x="54.2662%" y="863.50"></text></g><g><title>alloc::alloc::alloc (234 samples, 0.23%)</title><rect x="54.0181%" y="837" width="0.2285%" height="15" fill="rgb(248,111,24)" fg:x="55307" fg:w="234"/><text x="54.2681%" y="847.50"></text></g><g><title>__rg_alloc (234 samples, 0.23%)</title><rect x="54.0181%" y="821" width="0.2285%" height="15" fill="rgb(249,65,22)" fg:x="55307" fg:w="234"/><text x="54.2681%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (234 samples, 0.23%)</title><rect x="54.0181%" y="805" width="0.2285%" height="15" fill="rgb(238,111,51)" fg:x="55307" fg:w="234"/><text x="54.2681%" y="815.50"></text></g><g><title>rust_alloc (229 samples, 0.22%)</title><rect x="54.0230%" y="789" width="0.2237%" height="15" fill="rgb(250,118,22)" fg:x="55312" fg:w="229"/><text x="54.2730%" y="799.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (24 samples, 0.02%)</title><rect x="54.2467%" y="901" width="0.0234%" height="15" fill="rgb(234,84,26)" fg:x="55541" fg:w="24"/><text x="54.4967%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (24 samples, 0.02%)</title><rect x="54.2467%" y="885" width="0.0234%" height="15" fill="rgb(243,172,12)" fg:x="55541" fg:w="24"/><text x="54.4967%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (24 samples, 0.02%)</title><rect x="54.2467%" y="869" width="0.0234%" height="15" fill="rgb(236,150,49)" fg:x="55541" fg:w="24"/><text x="54.4967%" y="879.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (31 samples, 0.03%)</title><rect x="54.5534%" y="885" width="0.0303%" height="15" fill="rgb(225,197,26)" fg:x="55855" fg:w="31"/><text x="54.8034%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="54.8932%" y="693" width="0.0117%" height="15" fill="rgb(214,17,42)" fg:x="56203" fg:w="12"/><text x="55.1432%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (17 samples, 0.02%)</title><rect x="54.9050%" y="677" width="0.0166%" height="15" fill="rgb(224,165,40)" fg:x="56215" fg:w="17"/><text x="55.1550%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62 samples, 0.06%)</title><rect x="54.8698%" y="741" width="0.0606%" height="15" fill="rgb(246,100,4)" fg:x="56179" fg:w="62"/><text x="55.1198%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51 samples, 0.05%)</title><rect x="54.8806%" y="725" width="0.0498%" height="15" fill="rgb(222,103,0)" fg:x="56190" fg:w="51"/><text x="55.1306%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.04%)</title><rect x="54.8932%" y="709" width="0.0371%" height="15" fill="rgb(227,189,26)" fg:x="56203" fg:w="38"/><text x="55.1432%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.03%)</title><rect x="54.9050%" y="693" width="0.0254%" height="15" fill="rgb(214,202,17)" fg:x="56215" fg:w="26"/><text x="55.1550%" y="703.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (340 samples, 0.33%)</title><rect x="54.6129%" y="837" width="0.3321%" height="15" fill="rgb(229,111,3)" fg:x="55916" fg:w="340"/><text x="54.8629%" y="847.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (290 samples, 0.28%)</title><rect x="54.6618%" y="821" width="0.2832%" height="15" fill="rgb(229,172,15)" fg:x="55966" fg:w="290"/><text x="54.9118%" y="831.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (284 samples, 0.28%)</title><rect x="54.6676%" y="805" width="0.2774%" height="15" fill="rgb(230,224,35)" fg:x="55972" fg:w="284"/><text x="54.9176%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (108 samples, 0.11%)</title><rect x="54.8395%" y="789" width="0.1055%" height="15" fill="rgb(251,141,6)" fg:x="56148" fg:w="108"/><text x="55.0895%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77 samples, 0.08%)</title><rect x="54.8698%" y="773" width="0.0752%" height="15" fill="rgb(225,208,6)" fg:x="56179" fg:w="77"/><text x="55.1198%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (77 samples, 0.08%)</title><rect x="54.8698%" y="757" width="0.0752%" height="15" fill="rgb(246,181,16)" fg:x="56179" fg:w="77"/><text x="55.1198%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="54.9304%" y="741" width="0.0147%" height="15" fill="rgb(227,129,36)" fg:x="56241" fg:w="15"/><text x="55.1804%" y="751.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (403 samples, 0.39%)</title><rect x="54.6129%" y="853" width="0.3936%" height="15" fill="rgb(248,117,24)" fg:x="55916" fg:w="403"/><text x="54.8629%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (63 samples, 0.06%)</title><rect x="54.9450%" y="837" width="0.0615%" height="15" fill="rgb(214,185,35)" fg:x="56256" fg:w="63"/><text x="55.1950%" y="847.50"></text></g><g><title>core::ptr::write (63 samples, 0.06%)</title><rect x="54.9450%" y="821" width="0.0615%" height="15" fill="rgb(236,150,34)" fg:x="56256" fg:w="63"/><text x="55.1950%" y="831.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="55.0065%" y="725" width="0.0137%" height="15" fill="rgb(243,228,27)" fg:x="56319" fg:w="14"/><text x="55.2565%" y="735.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="55.0202%" y="693" width="0.0127%" height="15" fill="rgb(245,77,44)" fg:x="56333" fg:w="13"/><text x="55.2702%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="55.0515%" y="629" width="0.0117%" height="15" fill="rgb(235,214,42)" fg:x="56365" fg:w="12"/><text x="55.3015%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (25 samples, 0.02%)</title><rect x="55.0466%" y="645" width="0.0244%" height="15" fill="rgb(221,74,3)" fg:x="56360" fg:w="25"/><text x="55.2966%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (15 samples, 0.01%)</title><rect x="55.0837%" y="629" width="0.0147%" height="15" fill="rgb(206,121,29)" fg:x="56398" fg:w="15"/><text x="55.3337%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.15%)</title><rect x="55.0466%" y="677" width="0.1455%" height="15" fill="rgb(249,131,53)" fg:x="56360" fg:w="149"/><text x="55.2966%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (149 samples, 0.15%)</title><rect x="55.0466%" y="661" width="0.1455%" height="15" fill="rgb(236,170,29)" fg:x="56360" fg:w="149"/><text x="55.2966%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (124 samples, 0.12%)</title><rect x="55.0710%" y="645" width="0.1211%" height="15" fill="rgb(247,96,15)" fg:x="56385" fg:w="124"/><text x="55.3210%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (96 samples, 0.09%)</title><rect x="55.0984%" y="629" width="0.0938%" height="15" fill="rgb(211,210,7)" fg:x="56413" fg:w="96"/><text x="55.3484%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (96 samples, 0.09%)</title><rect x="55.0984%" y="613" width="0.0938%" height="15" fill="rgb(240,88,50)" fg:x="56413" fg:w="96"/><text x="55.3484%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (96 samples, 0.09%)</title><rect x="55.0984%" y="597" width="0.0938%" height="15" fill="rgb(209,229,26)" fg:x="56413" fg:w="96"/><text x="55.3484%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="55.2009%" y="629" width="0.0273%" height="15" fill="rgb(210,68,23)" fg:x="56518" fg:w="28"/><text x="55.4509%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (28 samples, 0.03%)</title><rect x="55.2009%" y="613" width="0.0273%" height="15" fill="rgb(229,180,13)" fg:x="56518" fg:w="28"/><text x="55.4509%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (20 samples, 0.02%)</title><rect x="55.2087%" y="597" width="0.0195%" height="15" fill="rgb(236,53,44)" fg:x="56526" fg:w="20"/><text x="55.4587%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="55.2087%" y="581" width="0.0195%" height="15" fill="rgb(244,214,29)" fg:x="56526" fg:w="20"/><text x="55.4587%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="55.1990%" y="677" width="0.0303%" height="15" fill="rgb(220,75,29)" fg:x="56516" fg:w="31"/><text x="55.4490%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="55.1990%" y="661" width="0.0303%" height="15" fill="rgb(214,183,37)" fg:x="56516" fg:w="31"/><text x="55.4490%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="55.1990%" y="645" width="0.0303%" height="15" fill="rgb(239,117,29)" fg:x="56516" fg:w="31"/><text x="55.4490%" y="655.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (718 samples, 0.70%)</title><rect x="54.5836%" y="885" width="0.7013%" height="15" fill="rgb(237,171,35)" fg:x="55886" fg:w="718"/><text x="54.8336%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (696 samples, 0.68%)</title><rect x="54.6051%" y="869" width="0.6798%" height="15" fill="rgb(229,178,53)" fg:x="55908" fg:w="696"/><text x="54.8551%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (285 samples, 0.28%)</title><rect x="55.0065%" y="853" width="0.2784%" height="15" fill="rgb(210,102,19)" fg:x="56319" fg:w="285"/><text x="55.2565%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (285 samples, 0.28%)</title><rect x="55.0065%" y="837" width="0.2784%" height="15" fill="rgb(235,127,22)" fg:x="56319" fg:w="285"/><text x="55.2565%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (285 samples, 0.28%)</title><rect x="55.0065%" y="821" width="0.2784%" height="15" fill="rgb(244,31,31)" fg:x="56319" fg:w="285"/><text x="55.2565%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (285 samples, 0.28%)</title><rect x="55.0065%" y="805" width="0.2784%" height="15" fill="rgb(231,43,21)" fg:x="56319" fg:w="285"/><text x="55.2565%" y="815.50"></text></g><g><title>alloc::alloc::alloc (285 samples, 0.28%)</title><rect x="55.0065%" y="789" width="0.2784%" height="15" fill="rgb(217,131,35)" fg:x="56319" fg:w="285"/><text x="55.2565%" y="799.50"></text></g><g><title>__rg_alloc (285 samples, 0.28%)</title><rect x="55.0065%" y="773" width="0.2784%" height="15" fill="rgb(221,149,4)" fg:x="56319" fg:w="285"/><text x="55.2565%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (285 samples, 0.28%)</title><rect x="55.0065%" y="757" width="0.2784%" height="15" fill="rgb(232,170,28)" fg:x="56319" fg:w="285"/><text x="55.2565%" y="767.50"></text></g><g><title>rust_alloc (285 samples, 0.28%)</title><rect x="55.0065%" y="741" width="0.2784%" height="15" fill="rgb(238,56,10)" fg:x="56319" fg:w="285"/><text x="55.2565%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (271 samples, 0.26%)</title><rect x="55.0202%" y="725" width="0.2647%" height="15" fill="rgb(235,196,14)" fg:x="56333" fg:w="271"/><text x="55.2702%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (271 samples, 0.26%)</title><rect x="55.0202%" y="709" width="0.2647%" height="15" fill="rgb(216,45,48)" fg:x="56333" fg:w="271"/><text x="55.2702%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (258 samples, 0.25%)</title><rect x="55.0329%" y="693" width="0.2520%" height="15" fill="rgb(238,213,17)" fg:x="56346" fg:w="258"/><text x="55.2829%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (56 samples, 0.05%)</title><rect x="55.2302%" y="677" width="0.0547%" height="15" fill="rgb(212,13,2)" fg:x="56548" fg:w="56"/><text x="55.4802%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (56 samples, 0.05%)</title><rect x="55.2302%" y="661" width="0.0547%" height="15" fill="rgb(240,114,20)" fg:x="56548" fg:w="56"/><text x="55.4802%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,580 samples, 3.50%)</title><rect x="52.1351%" y="981" width="3.4966%" height="15" fill="rgb(228,41,40)" fg:x="53379" fg:w="3580"/><text x="52.3851%" y="991.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,580 samples, 3.50%)</title><rect x="52.1351%" y="965" width="3.4966%" height="15" fill="rgb(244,132,35)" fg:x="53379" fg:w="3580"/><text x="52.3851%" y="975.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,580 samples, 3.50%)</title><rect x="52.1351%" y="949" width="3.4966%" height="15" fill="rgb(253,189,4)" fg:x="53379" fg:w="3580"/><text x="52.3851%" y="959.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,580 samples, 3.50%)</title><rect x="52.1351%" y="933" width="3.4966%" height="15" fill="rgb(224,37,19)" fg:x="53379" fg:w="3580"/><text x="52.3851%" y="943.50">tre..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,519 samples, 2.46%)</title><rect x="53.1713%" y="917" width="2.4603%" height="15" fill="rgb(235,223,18)" fg:x="54440" fg:w="2519"/><text x="53.4213%" y="927.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,394 samples, 1.36%)</title><rect x="54.2701%" y="901" width="1.3615%" height="15" fill="rgb(235,163,25)" fg:x="55565" fg:w="1394"/><text x="54.5201%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (355 samples, 0.35%)</title><rect x="55.2849%" y="885" width="0.3467%" height="15" fill="rgb(217,145,28)" fg:x="56604" fg:w="355"/><text x="55.5349%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.01%)</title><rect x="55.7566%" y="869" width="0.0107%" height="15" fill="rgb(223,223,32)" fg:x="57087" fg:w="11"/><text x="56.0066%" y="879.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="55.7566%" y="853" width="0.0107%" height="15" fill="rgb(227,189,39)" fg:x="57087" fg:w="11"/><text x="56.0066%" y="863.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="55.7566%" y="837" width="0.0107%" height="15" fill="rgb(248,10,22)" fg:x="57087" fg:w="11"/><text x="56.0066%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (183 samples, 0.18%)</title><rect x="55.8416%" y="853" width="0.1787%" height="15" fill="rgb(248,46,39)" fg:x="57174" fg:w="183"/><text x="56.0916%" y="863.50"></text></g><g><title>core::mem::replace (183 samples, 0.18%)</title><rect x="55.8416%" y="837" width="0.1787%" height="15" fill="rgb(248,113,48)" fg:x="57174" fg:w="183"/><text x="56.0916%" y="847.50"></text></g><g><title>core::ptr::read (182 samples, 0.18%)</title><rect x="55.8426%" y="821" width="0.1778%" height="15" fill="rgb(245,16,25)" fg:x="57175" fg:w="182"/><text x="56.0926%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (317 samples, 0.31%)</title><rect x="55.7674%" y="869" width="0.3096%" height="15" fill="rgb(249,152,16)" fg:x="57098" fg:w="317"/><text x="56.0174%" y="879.50"></text></g><g><title>core::mem::drop (58 samples, 0.06%)</title><rect x="56.0204%" y="853" width="0.0566%" height="15" fill="rgb(250,16,1)" fg:x="57357" fg:w="58"/><text x="56.2704%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (58 samples, 0.06%)</title><rect x="56.0204%" y="837" width="0.0566%" height="15" fill="rgb(249,138,3)" fg:x="57357" fg:w="58"/><text x="56.2704%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="56.0770%" y="853" width="0.0117%" height="15" fill="rgb(227,71,41)" fg:x="57415" fg:w="12"/><text x="56.3270%" y="863.50"></text></g><g><title>std::sync::poison::Flag::done (14 samples, 0.01%)</title><rect x="56.0995%" y="821" width="0.0137%" height="15" fill="rgb(209,184,23)" fg:x="57438" fg:w="14"/><text x="56.3495%" y="831.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="56.0995%" y="805" width="0.0137%" height="15" fill="rgb(223,215,31)" fg:x="57438" fg:w="14"/><text x="56.3495%" y="815.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="56.0995%" y="789" width="0.0137%" height="15" fill="rgb(210,146,28)" fg:x="57438" fg:w="14"/><text x="56.3495%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="56.0995%" y="773" width="0.0137%" height="15" fill="rgb(209,183,41)" fg:x="57438" fg:w="14"/><text x="56.3495%" y="783.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="56.1131%" y="805" width="0.0117%" height="15" fill="rgb(209,224,45)" fg:x="57452" fg:w="12"/><text x="56.3631%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (360 samples, 0.35%)</title><rect x="56.1249%" y="789" width="0.3516%" height="15" fill="rgb(224,209,51)" fg:x="57464" fg:w="360"/><text x="56.3749%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (420 samples, 0.41%)</title><rect x="56.0770%" y="869" width="0.4102%" height="15" fill="rgb(223,17,39)" fg:x="57415" fg:w="420"/><text x="56.3270%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (408 samples, 0.40%)</title><rect x="56.0887%" y="853" width="0.3985%" height="15" fill="rgb(234,204,37)" fg:x="57427" fg:w="408"/><text x="56.3387%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (408 samples, 0.40%)</title><rect x="56.0887%" y="837" width="0.3985%" height="15" fill="rgb(236,120,5)" fg:x="57427" fg:w="408"/><text x="56.3387%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (383 samples, 0.37%)</title><rect x="56.1131%" y="821" width="0.3741%" height="15" fill="rgb(248,97,27)" fg:x="57452" fg:w="383"/><text x="56.3631%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (371 samples, 0.36%)</title><rect x="56.1249%" y="805" width="0.3624%" height="15" fill="rgb(240,66,17)" fg:x="57464" fg:w="371"/><text x="56.3749%" y="815.50"></text></g><g><title>___pthread_mutex_unlock (11 samples, 0.01%)</title><rect x="56.4765%" y="789" width="0.0107%" height="15" fill="rgb(210,79,3)" fg:x="57824" fg:w="11"/><text x="56.7265%" y="799.50"></text></g><g><title>core::task::wake::Waker::will_wake (76 samples, 0.07%)</title><rect x="56.4901%" y="869" width="0.0742%" height="15" fill="rgb(214,176,27)" fg:x="57838" fg:w="76"/><text x="56.7401%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (76 samples, 0.07%)</title><rect x="56.4901%" y="853" width="0.0742%" height="15" fill="rgb(235,185,3)" fg:x="57838" fg:w="76"/><text x="56.7401%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (54 samples, 0.05%)</title><rect x="56.5116%" y="837" width="0.0527%" height="15" fill="rgb(227,24,12)" fg:x="57860" fg:w="54"/><text x="56.7616%" y="847.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (54 samples, 0.05%)</title><rect x="56.5116%" y="821" width="0.0527%" height="15" fill="rgb(252,169,48)" fg:x="57860" fg:w="54"/><text x="56.7616%" y="831.50"></text></g><g><title>std::sync::poison::Flag::get (161 samples, 0.16%)</title><rect x="56.5810%" y="805" width="0.1572%" height="15" fill="rgb(212,65,1)" fg:x="57931" fg:w="161"/><text x="56.8310%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (161 samples, 0.16%)</title><rect x="56.5810%" y="789" width="0.1572%" height="15" fill="rgb(242,39,24)" fg:x="57931" fg:w="161"/><text x="56.8310%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (144 samples, 0.14%)</title><rect x="56.5976%" y="773" width="0.1406%" height="15" fill="rgb(249,32,23)" fg:x="57948" fg:w="144"/><text x="56.8476%" y="783.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (179 samples, 0.17%)</title><rect x="56.5810%" y="837" width="0.1748%" height="15" fill="rgb(251,195,23)" fg:x="57931" fg:w="179"/><text x="56.8310%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (179 samples, 0.17%)</title><rect x="56.5810%" y="821" width="0.1748%" height="15" fill="rgb(236,174,8)" fg:x="57931" fg:w="179"/><text x="56.8310%" y="831.50"></text></g><g><title>std::thread::panicking (18 samples, 0.02%)</title><rect x="56.7382%" y="805" width="0.0176%" height="15" fill="rgb(220,197,8)" fg:x="58092" fg:w="18"/><text x="56.9882%" y="815.50"></text></g><g><title>std::panicking::panicking (18 samples, 0.02%)</title><rect x="56.7382%" y="789" width="0.0176%" height="15" fill="rgb(240,108,37)" fg:x="58092" fg:w="18"/><text x="56.9882%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (18 samples, 0.02%)</title><rect x="56.7382%" y="773" width="0.0176%" height="15" fill="rgb(232,176,24)" fg:x="58092" fg:w="18"/><text x="56.9882%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="56.7382%" y="757" width="0.0176%" height="15" fill="rgb(243,35,29)" fg:x="58092" fg:w="18"/><text x="56.9882%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="56.7382%" y="741" width="0.0176%" height="15" fill="rgb(210,37,18)" fg:x="58092" fg:w="18"/><text x="56.9882%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,161 samples, 2.11%)</title><rect x="55.6629%" y="885" width="2.1106%" height="15" fill="rgb(224,184,40)" fg:x="56991" fg:w="2161"/><text x="55.9129%" y="895.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,238 samples, 1.21%)</title><rect x="56.5644%" y="869" width="1.2091%" height="15" fill="rgb(236,39,29)" fg:x="57914" fg:w="1238"/><text x="56.8144%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,221 samples, 1.19%)</title><rect x="56.5810%" y="853" width="1.1925%" height="15" fill="rgb(232,48,39)" fg:x="57931" fg:w="1221"/><text x="56.8310%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,042 samples, 1.02%)</title><rect x="56.7558%" y="837" width="1.0177%" height="15" fill="rgb(236,34,42)" fg:x="58110" fg:w="1042"/><text x="57.0058%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1,016 samples, 0.99%)</title><rect x="56.7812%" y="821" width="0.9923%" height="15" fill="rgb(243,106,37)" fg:x="58136" fg:w="1016"/><text x="57.0312%" y="831.50"></text></g><g><title>___pthread_mutex_lock (1,016 samples, 0.99%)</title><rect x="56.7812%" y="805" width="0.9923%" height="15" fill="rgb(218,96,6)" fg:x="58136" fg:w="1016"/><text x="57.0312%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1157" width="5.6580%" height="15" fill="rgb(235,130,12)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1167.50">async_t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1141" width="5.6580%" height="15" fill="rgb(231,95,0)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1151.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1125" width="5.6580%" height="15" fill="rgb(228,12,23)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1135.50">&lt;core::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1109" width="5.6580%" height="15" fill="rgb(216,12,1)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1119.50">async_e..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1093" width="5.6580%" height="15" fill="rgb(219,59,3)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1103.50">&lt;async_..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1077" width="5.6580%" height="15" fill="rgb(215,208,46)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1087.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1061" width="5.6580%" height="15" fill="rgb(254,224,29)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1071.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1045" width="5.6580%" height="15" fill="rgb(232,14,29)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1055.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1029" width="5.6580%" height="15" fill="rgb(208,45,52)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1039.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,793 samples, 5.66%)</title><rect x="52.1351%" y="1013" width="5.6580%" height="15" fill="rgb(234,191,28)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1023.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,793 samples, 5.66%)</title><rect x="52.1351%" y="997" width="5.6580%" height="15" fill="rgb(244,67,43)" fg:x="53379" fg:w="5793"/><text x="52.3851%" y="1007.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,213 samples, 2.16%)</title><rect x="55.6316%" y="981" width="2.1614%" height="15" fill="rgb(236,189,24)" fg:x="56959" fg:w="2213"/><text x="55.8816%" y="991.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,213 samples, 2.16%)</title><rect x="55.6316%" y="965" width="2.1614%" height="15" fill="rgb(239,214,33)" fg:x="56959" fg:w="2213"/><text x="55.8816%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,213 samples, 2.16%)</title><rect x="55.6316%" y="949" width="2.1614%" height="15" fill="rgb(226,176,41)" fg:x="56959" fg:w="2213"/><text x="55.8816%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,213 samples, 2.16%)</title><rect x="55.6316%" y="933" width="2.1614%" height="15" fill="rgb(248,47,8)" fg:x="56959" fg:w="2213"/><text x="55.8816%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,213 samples, 2.16%)</title><rect x="55.6316%" y="917" width="2.1614%" height="15" fill="rgb(218,81,44)" fg:x="56959" fg:w="2213"/><text x="55.8816%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,213 samples, 2.16%)</title><rect x="55.6316%" y="901" width="2.1614%" height="15" fill="rgb(213,98,6)" fg:x="56959" fg:w="2213"/><text x="55.8816%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (20 samples, 0.02%)</title><rect x="57.7735%" y="885" width="0.0195%" height="15" fill="rgb(222,85,22)" fg:x="59152" fg:w="20"/><text x="58.0235%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (22 samples, 0.02%)</title><rect x="57.7960%" y="1157" width="0.0215%" height="15" fill="rgb(239,46,39)" fg:x="59175" fg:w="22"/><text x="58.0460%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (21 samples, 0.02%)</title><rect x="57.8175%" y="1157" width="0.0205%" height="15" fill="rgb(237,12,29)" fg:x="59197" fg:w="21"/><text x="58.0675%" y="1167.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="57.8741%" y="293" width="0.0117%" height="15" fill="rgb(214,77,8)" fg:x="59255" fg:w="12"/><text x="58.1241%" y="303.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="57.9024%" y="277" width="0.0117%" height="15" fill="rgb(217,168,37)" fg:x="59284" fg:w="12"/><text x="58.1524%" y="287.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="57.9034%" y="261" width="0.0107%" height="15" fill="rgb(221,217,23)" fg:x="59285" fg:w="11"/><text x="58.1534%" y="271.50"></text></g><g><title>sizeclass_to_size (16 samples, 0.02%)</title><rect x="57.9191%" y="213" width="0.0156%" height="15" fill="rgb(243,229,36)" fg:x="59301" fg:w="16"/><text x="58.1691%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (16 samples, 0.02%)</title><rect x="57.9191%" y="197" width="0.0156%" height="15" fill="rgb(251,163,40)" fg:x="59301" fg:w="16"/><text x="58.1691%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (19 samples, 0.02%)</title><rect x="57.9347%" y="213" width="0.0186%" height="15" fill="rgb(237,222,12)" fg:x="59317" fg:w="19"/><text x="58.1847%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="58.0587%" y="181" width="0.0205%" height="15" fill="rgb(248,132,6)" fg:x="59444" fg:w="21"/><text x="58.3087%" y="191.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="58.0587%" y="165" width="0.0205%" height="15" fill="rgb(227,167,50)" fg:x="59444" fg:w="21"/><text x="58.3087%" y="175.50"></text></g><g><title>snmalloc::Remote::set_info (48 samples, 0.05%)</title><rect x="58.0792%" y="181" width="0.0469%" height="15" fill="rgb(242,84,37)" fg:x="59465" fg:w="48"/><text x="58.3292%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (191 samples, 0.19%)</title><rect x="57.9532%" y="213" width="0.1865%" height="15" fill="rgb(212,4,50)" fg:x="59336" fg:w="191"/><text x="58.2032%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (154 samples, 0.15%)</title><rect x="57.9894%" y="197" width="0.1504%" height="15" fill="rgb(230,228,32)" fg:x="59373" fg:w="154"/><text x="58.2394%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (14 samples, 0.01%)</title><rect x="58.1261%" y="181" width="0.0137%" height="15" fill="rgb(248,217,23)" fg:x="59513" fg:w="14"/><text x="58.3761%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (255 samples, 0.25%)</title><rect x="57.9142%" y="245" width="0.2491%" height="15" fill="rgb(238,197,32)" fg:x="59296" fg:w="255"/><text x="58.1642%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (255 samples, 0.25%)</title><rect x="57.9142%" y="229" width="0.2491%" height="15" fill="rgb(236,106,1)" fg:x="59296" fg:w="255"/><text x="58.1642%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (24 samples, 0.02%)</title><rect x="58.1398%" y="213" width="0.0234%" height="15" fill="rgb(219,228,13)" fg:x="59527" fg:w="24"/><text x="58.3898%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (271 samples, 0.26%)</title><rect x="57.9142%" y="277" width="0.2647%" height="15" fill="rgb(238,30,35)" fg:x="59296" fg:w="271"/><text x="58.1642%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (271 samples, 0.26%)</title><rect x="57.9142%" y="261" width="0.2647%" height="15" fill="rgb(236,70,23)" fg:x="59296" fg:w="271"/><text x="58.1642%" y="271.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="58.1632%" y="245" width="0.0156%" height="15" fill="rgb(249,104,48)" fg:x="59551" fg:w="16"/><text x="58.4132%" y="255.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="58.1632%" y="229" width="0.0156%" height="15" fill="rgb(254,117,50)" fg:x="59551" fg:w="16"/><text x="58.4132%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.02%)</title><rect x="58.1632%" y="213" width="0.0156%" height="15" fill="rgb(223,152,4)" fg:x="59551" fg:w="16"/><text x="58.4132%" y="223.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.02%)</title><rect x="58.1632%" y="197" width="0.0156%" height="15" fill="rgb(245,6,2)" fg:x="59551" fg:w="16"/><text x="58.4132%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (309 samples, 0.30%)</title><rect x="57.8858%" y="293" width="0.3018%" height="15" fill="rgb(249,150,24)" fg:x="59267" fg:w="309"/><text x="58.1358%" y="303.50"></text></g><g><title>rust_dealloc (350 samples, 0.34%)</title><rect x="57.8604%" y="309" width="0.3418%" height="15" fill="rgb(228,185,42)" fg:x="59241" fg:w="350"/><text x="58.1104%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="58.1876%" y="293" width="0.0147%" height="15" fill="rgb(226,39,33)" fg:x="59576" fg:w="15"/><text x="58.4376%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (363 samples, 0.35%)</title><rect x="57.8487%" y="373" width="0.3545%" height="15" fill="rgb(221,166,19)" fg:x="59229" fg:w="363"/><text x="58.0987%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (363 samples, 0.35%)</title><rect x="57.8487%" y="357" width="0.3545%" height="15" fill="rgb(209,109,2)" fg:x="59229" fg:w="363"/><text x="58.0987%" y="367.50"></text></g><g><title>__rg_dealloc (363 samples, 0.35%)</title><rect x="57.8487%" y="341" width="0.3545%" height="15" fill="rgb(252,216,26)" fg:x="59229" fg:w="363"/><text x="58.0987%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (363 samples, 0.35%)</title><rect x="57.8487%" y="325" width="0.3545%" height="15" fill="rgb(227,173,36)" fg:x="59229" fg:w="363"/><text x="58.0987%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (376 samples, 0.37%)</title><rect x="57.8468%" y="437" width="0.3672%" height="15" fill="rgb(209,90,7)" fg:x="59227" fg:w="376"/><text x="58.0968%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (376 samples, 0.37%)</title><rect x="57.8468%" y="421" width="0.3672%" height="15" fill="rgb(250,194,11)" fg:x="59227" fg:w="376"/><text x="58.0968%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (376 samples, 0.37%)</title><rect x="57.8468%" y="405" width="0.3672%" height="15" fill="rgb(220,72,50)" fg:x="59227" fg:w="376"/><text x="58.0968%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (376 samples, 0.37%)</title><rect x="57.8468%" y="389" width="0.3672%" height="15" fill="rgb(222,106,48)" fg:x="59227" fg:w="376"/><text x="58.0968%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="58.2033%" y="373" width="0.0107%" height="15" fill="rgb(216,220,45)" fg:x="59592" fg:w="11"/><text x="58.4533%" y="383.50"></text></g><g><title>rust_dealloc (35 samples, 0.03%)</title><rect x="58.9133%" y="229" width="0.0342%" height="15" fill="rgb(234,112,18)" fg:x="60319" fg:w="35"/><text x="59.1633%" y="239.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="58.9475%" y="229" width="0.0156%" height="15" fill="rgb(206,179,9)" fg:x="60354" fg:w="16"/><text x="59.1975%" y="239.50"></text></g><g><title>rust_dealloc (52 samples, 0.05%)</title><rect x="58.9631%" y="165" width="0.0508%" height="15" fill="rgb(215,115,40)" fg:x="60370" fg:w="52"/><text x="59.2131%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (32 samples, 0.03%)</title><rect x="59.1194%" y="133" width="0.0313%" height="15" fill="rgb(222,69,34)" fg:x="60530" fg:w="32"/><text x="59.3694%" y="143.50"></text></g><g><title> (32 samples, 0.03%)</title><rect x="59.1194%" y="117" width="0.0313%" height="15" fill="rgb(209,161,10)" fg:x="60530" fg:w="32"/><text x="59.3694%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (153 samples, 0.15%)</title><rect x="59.0217%" y="165" width="0.1494%" height="15" fill="rgb(217,6,38)" fg:x="60430" fg:w="153"/><text x="59.2717%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (137 samples, 0.13%)</title><rect x="59.0374%" y="149" width="0.1338%" height="15" fill="rgb(229,229,48)" fg:x="60446" fg:w="137"/><text x="59.2874%" y="159.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="59.1595%" y="133" width="0.0117%" height="15" fill="rgb(225,21,28)" fg:x="60571" fg:w="12"/><text x="59.4095%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (245 samples, 0.24%)</title><rect x="58.9631%" y="229" width="0.2393%" height="15" fill="rgb(206,33,13)" fg:x="60370" fg:w="245"/><text x="59.2131%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (245 samples, 0.24%)</title><rect x="58.9631%" y="213" width="0.2393%" height="15" fill="rgb(242,178,17)" fg:x="60370" fg:w="245"/><text x="59.2131%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (245 samples, 0.24%)</title><rect x="58.9631%" y="197" width="0.2393%" height="15" fill="rgb(220,162,5)" fg:x="60370" fg:w="245"/><text x="59.2131%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (245 samples, 0.24%)</title><rect x="58.9631%" y="181" width="0.2393%" height="15" fill="rgb(210,33,43)" fg:x="60370" fg:w="245"/><text x="59.2131%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (32 samples, 0.03%)</title><rect x="59.1712%" y="165" width="0.0313%" height="15" fill="rgb(216,116,54)" fg:x="60583" fg:w="32"/><text x="59.4212%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (301 samples, 0.29%)</title><rect x="58.9133%" y="245" width="0.2940%" height="15" fill="rgb(249,92,24)" fg:x="60319" fg:w="301"/><text x="59.1633%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (324 samples, 0.32%)</title><rect x="58.8977%" y="277" width="0.3164%" height="15" fill="rgb(231,189,14)" fg:x="60303" fg:w="324"/><text x="59.1477%" y="287.50"></text></g><g><title>rust_dealloc (324 samples, 0.32%)</title><rect x="58.8977%" y="261" width="0.3164%" height="15" fill="rgb(230,8,41)" fg:x="60303" fg:w="324"/><text x="59.1477%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (338 samples, 0.33%)</title><rect x="58.8977%" y="325" width="0.3301%" height="15" fill="rgb(249,7,27)" fg:x="60303" fg:w="338"/><text x="59.1477%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (338 samples, 0.33%)</title><rect x="58.8977%" y="309" width="0.3301%" height="15" fill="rgb(232,86,5)" fg:x="60303" fg:w="338"/><text x="59.1477%" y="319.50"></text></g><g><title>__rg_dealloc (338 samples, 0.33%)</title><rect x="58.8977%" y="293" width="0.3301%" height="15" fill="rgb(224,175,18)" fg:x="60303" fg:w="338"/><text x="59.1477%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (14 samples, 0.01%)</title><rect x="59.2142%" y="277" width="0.0137%" height="15" fill="rgb(220,129,12)" fg:x="60627" fg:w="14"/><text x="59.4642%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,065 samples, 1.04%)</title><rect x="58.2140%" y="421" width="1.0402%" height="15" fill="rgb(210,19,36)" fg:x="59603" fg:w="1065"/><text x="58.4640%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1,064 samples, 1.04%)</title><rect x="58.2150%" y="405" width="1.0392%" height="15" fill="rgb(219,96,14)" fg:x="59604" fg:w="1064"/><text x="58.4650%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,040 samples, 1.02%)</title><rect x="58.2384%" y="389" width="1.0158%" height="15" fill="rgb(249,106,1)" fg:x="59628" fg:w="1040"/><text x="58.4884%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,040 samples, 1.02%)</title><rect x="58.2384%" y="373" width="1.0158%" height="15" fill="rgb(249,155,20)" fg:x="59628" fg:w="1040"/><text x="58.4884%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,040 samples, 1.02%)</title><rect x="58.2384%" y="357" width="1.0158%" height="15" fill="rgb(244,168,9)" fg:x="59628" fg:w="1040"/><text x="58.4884%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,040 samples, 1.02%)</title><rect x="58.2384%" y="341" width="1.0158%" height="15" fill="rgb(216,23,50)" fg:x="59628" fg:w="1040"/><text x="58.4884%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (27 samples, 0.03%)</title><rect x="59.2278%" y="325" width="0.0264%" height="15" fill="rgb(224,219,20)" fg:x="60641" fg:w="27"/><text x="59.4778%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (14 samples, 0.01%)</title><rect x="59.2542%" y="421" width="0.0137%" height="15" fill="rgb(222,156,15)" fg:x="60668" fg:w="14"/><text x="59.5042%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="59.2542%" y="405" width="0.0137%" height="15" fill="rgb(231,97,17)" fg:x="60668" fg:w="14"/><text x="59.5042%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="59.2542%" y="389" width="0.0137%" height="15" fill="rgb(218,70,48)" fg:x="60668" fg:w="14"/><text x="59.5042%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,480 samples, 1.45%)</title><rect x="57.8380%" y="453" width="1.4455%" height="15" fill="rgb(212,196,52)" fg:x="59218" fg:w="1480"/><text x="58.0880%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1,095 samples, 1.07%)</title><rect x="58.2140%" y="437" width="1.0695%" height="15" fill="rgb(243,203,18)" fg:x="59603" fg:w="1095"/><text x="58.4640%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (16 samples, 0.02%)</title><rect x="59.2679%" y="421" width="0.0156%" height="15" fill="rgb(252,125,41)" fg:x="60682" fg:w="16"/><text x="59.5179%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,481 samples, 1.45%)</title><rect x="57.8380%" y="469" width="1.4465%" height="15" fill="rgb(223,180,33)" fg:x="59218" fg:w="1481"/><text x="58.0880%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (39 samples, 0.04%)</title><rect x="59.2845%" y="469" width="0.0381%" height="15" fill="rgb(254,159,46)" fg:x="60699" fg:w="39"/><text x="59.5345%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (39 samples, 0.04%)</title><rect x="59.2845%" y="453" width="0.0381%" height="15" fill="rgb(254,38,10)" fg:x="60699" fg:w="39"/><text x="59.5345%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="59.2845%" y="437" width="0.0381%" height="15" fill="rgb(208,217,32)" fg:x="60699" fg:w="39"/><text x="59.5345%" y="447.50"></text></g><g><title>core::mem::drop (39 samples, 0.04%)</title><rect x="59.2845%" y="421" width="0.0381%" height="15" fill="rgb(221,120,13)" fg:x="60699" fg:w="39"/><text x="59.5345%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (39 samples, 0.04%)</title><rect x="59.2845%" y="405" width="0.0381%" height="15" fill="rgb(246,54,52)" fg:x="60699" fg:w="39"/><text x="59.5345%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="59.2845%" y="389" width="0.0381%" height="15" fill="rgb(242,34,25)" fg:x="60699" fg:w="39"/><text x="59.5345%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (39 samples, 0.04%)</title><rect x="59.2845%" y="373" width="0.0381%" height="15" fill="rgb(247,209,9)" fg:x="60699" fg:w="39"/><text x="59.5345%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (28 samples, 0.03%)</title><rect x="59.2952%" y="357" width="0.0273%" height="15" fill="rgb(228,71,26)" fg:x="60710" fg:w="28"/><text x="59.5452%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (28 samples, 0.03%)</title><rect x="59.2952%" y="341" width="0.0273%" height="15" fill="rgb(222,145,49)" fg:x="60710" fg:w="28"/><text x="59.5452%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (18 samples, 0.02%)</title><rect x="59.3050%" y="325" width="0.0176%" height="15" fill="rgb(218,121,17)" fg:x="60720" fg:w="18"/><text x="59.5550%" y="335.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="59.3050%" y="309" width="0.0176%" height="15" fill="rgb(244,50,7)" fg:x="60720" fg:w="18"/><text x="59.5550%" y="319.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="59.3069%" y="293" width="0.0156%" height="15" fill="rgb(246,229,37)" fg:x="60722" fg:w="16"/><text x="59.5569%" y="303.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,626 samples, 1.59%)</title><rect x="57.8380%" y="549" width="1.5881%" height="15" fill="rgb(225,18,5)" fg:x="59218" fg:w="1626"/><text x="58.0880%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,626 samples, 1.59%)</title><rect x="57.8380%" y="533" width="1.5881%" height="15" fill="rgb(213,204,8)" fg:x="59218" fg:w="1626"/><text x="58.0880%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,626 samples, 1.59%)</title><rect x="57.8380%" y="517" width="1.5881%" height="15" fill="rgb(238,103,6)" fg:x="59218" fg:w="1626"/><text x="58.0880%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,626 samples, 1.59%)</title><rect x="57.8380%" y="501" width="1.5881%" height="15" fill="rgb(222,25,35)" fg:x="59218" fg:w="1626"/><text x="58.0880%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (1,626 samples, 1.59%)</title><rect x="57.8380%" y="485" width="1.5881%" height="15" fill="rgb(213,203,35)" fg:x="59218" fg:w="1626"/><text x="58.0880%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (106 samples, 0.10%)</title><rect x="59.3226%" y="469" width="0.1035%" height="15" fill="rgb(221,79,53)" fg:x="60738" fg:w="106"/><text x="59.5726%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (100 samples, 0.10%)</title><rect x="59.3284%" y="453" width="0.0977%" height="15" fill="rgb(243,200,35)" fg:x="60744" fg:w="100"/><text x="59.5784%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (100 samples, 0.10%)</title><rect x="59.3284%" y="437" width="0.0977%" height="15" fill="rgb(248,60,25)" fg:x="60744" fg:w="100"/><text x="59.5784%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="59.4124%" y="421" width="0.0137%" height="15" fill="rgb(227,53,46)" fg:x="60830" fg:w="14"/><text x="59.6624%" y="431.50"></text></g><g><title>alloc::alloc::box_free (14 samples, 0.01%)</title><rect x="59.4124%" y="405" width="0.0137%" height="15" fill="rgb(216,120,32)" fg:x="60830" fg:w="14"/><text x="59.6624%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="59.4124%" y="389" width="0.0137%" height="15" fill="rgb(220,134,1)" fg:x="60830" fg:w="14"/><text x="59.6624%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="59.4124%" y="373" width="0.0137%" height="15" fill="rgb(237,168,5)" fg:x="60830" fg:w="14"/><text x="59.6624%" y="383.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="59.4124%" y="357" width="0.0137%" height="15" fill="rgb(231,100,33)" fg:x="60830" fg:w="14"/><text x="59.6624%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="59.4124%" y="341" width="0.0137%" height="15" fill="rgb(236,177,47)" fg:x="60830" fg:w="14"/><text x="59.6624%" y="351.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (51 samples, 0.05%)</title><rect x="59.4261%" y="549" width="0.0498%" height="15" fill="rgb(235,7,49)" fg:x="60844" fg:w="51"/><text x="59.6761%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (310 samples, 0.30%)</title><rect x="59.5648%" y="517" width="0.3028%" height="15" fill="rgb(232,119,22)" fg:x="60986" fg:w="310"/><text x="59.8148%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (177 samples, 0.17%)</title><rect x="59.8969%" y="501" width="0.1729%" height="15" fill="rgb(254,73,53)" fg:x="61326" fg:w="177"/><text x="60.1469%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::control_plane::{{closure}} (375 samples, 0.37%)</title><rect x="59.8676%" y="517" width="0.3663%" height="15" fill="rgb(251,35,20)" fg:x="61296" fg:w="375"/><text x="60.1176%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::needs_control_plane_msg (168 samples, 0.16%)</title><rect x="60.0697%" y="501" width="0.1641%" height="15" fill="rgb(241,119,20)" fg:x="61503" fg:w="168"/><text x="60.3197%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (153 samples, 0.15%)</title><rect x="60.0844%" y="485" width="0.1494%" height="15" fill="rgb(207,102,14)" fg:x="61518" fg:w="153"/><text x="60.3344%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (153 samples, 0.15%)</title><rect x="60.0844%" y="469" width="0.1494%" height="15" fill="rgb(248,201,50)" fg:x="61518" fg:w="153"/><text x="60.3344%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (103 samples, 0.10%)</title><rect x="60.1332%" y="453" width="0.1006%" height="15" fill="rgb(222,185,44)" fg:x="61568" fg:w="103"/><text x="60.3832%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (88 samples, 0.09%)</title><rect x="60.1479%" y="437" width="0.0859%" height="15" fill="rgb(218,107,18)" fg:x="61583" fg:w="88"/><text x="60.3979%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (88 samples, 0.09%)</title><rect x="60.1479%" y="421" width="0.0859%" height="15" fill="rgb(237,177,39)" fg:x="61583" fg:w="88"/><text x="60.3979%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="61.2232%" y="501" width="0.0176%" height="15" fill="rgb(246,69,6)" fg:x="62684" fg:w="18"/><text x="61.4732%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="61.2232%" y="485" width="0.0176%" height="15" fill="rgb(234,208,37)" fg:x="62684" fg:w="18"/><text x="61.4732%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (15 samples, 0.01%)</title><rect x="61.2261%" y="469" width="0.0147%" height="15" fill="rgb(225,4,6)" fg:x="62687" fg:w="15"/><text x="61.4761%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (536 samples, 0.52%)</title><rect x="61.2437%" y="501" width="0.5235%" height="15" fill="rgb(233,45,0)" fg:x="62705" fg:w="536"/><text x="61.4937%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="61.7682%" y="501" width="0.0117%" height="15" fill="rgb(226,136,5)" fg:x="63242" fg:w="12"/><text x="62.0182%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (39 samples, 0.04%)</title><rect x="61.7848%" y="437" width="0.0381%" height="15" fill="rgb(211,91,47)" fg:x="63259" fg:w="39"/><text x="62.0348%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (19 samples, 0.02%)</title><rect x="61.8043%" y="421" width="0.0186%" height="15" fill="rgb(242,88,51)" fg:x="63279" fg:w="19"/><text x="62.0543%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="61.8043%" y="405" width="0.0186%" height="15" fill="rgb(230,91,28)" fg:x="63279" fg:w="19"/><text x="62.0543%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="61.8043%" y="389" width="0.0186%" height="15" fill="rgb(254,186,29)" fg:x="63279" fg:w="19"/><text x="62.0543%" y="399.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="61.8043%" y="373" width="0.0186%" height="15" fill="rgb(238,6,4)" fg:x="63279" fg:w="19"/><text x="62.0543%" y="383.50"></text></g><g><title>__rg_alloc (19 samples, 0.02%)</title><rect x="61.8043%" y="357" width="0.0186%" height="15" fill="rgb(221,151,16)" fg:x="63279" fg:w="19"/><text x="62.0543%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (19 samples, 0.02%)</title><rect x="61.8043%" y="341" width="0.0186%" height="15" fill="rgb(251,143,52)" fg:x="63279" fg:w="19"/><text x="62.0543%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (52 samples, 0.05%)</title><rect x="61.7799%" y="501" width="0.0508%" height="15" fill="rgb(206,90,15)" fg:x="63254" fg:w="52"/><text x="62.0299%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (47 samples, 0.05%)</title><rect x="61.7848%" y="485" width="0.0459%" height="15" fill="rgb(218,35,8)" fg:x="63259" fg:w="47"/><text x="62.0348%" y="495.50"></text></g><g><title>value_trait::Builder::object (47 samples, 0.05%)</title><rect x="61.7848%" y="469" width="0.0459%" height="15" fill="rgb(239,215,6)" fg:x="63259" fg:w="47"/><text x="62.0348%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (47 samples, 0.05%)</title><rect x="61.7848%" y="453" width="0.0459%" height="15" fill="rgb(245,116,39)" fg:x="63259" fg:w="47"/><text x="62.0348%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="61.8307%" y="501" width="0.0137%" height="15" fill="rgb(242,65,28)" fg:x="63306" fg:w="14"/><text x="62.0807%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (17 samples, 0.02%)</title><rect x="61.8444%" y="501" width="0.0166%" height="15" fill="rgb(252,132,53)" fg:x="63320" fg:w="17"/><text x="62.0944%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (37 samples, 0.04%)</title><rect x="61.9391%" y="357" width="0.0361%" height="15" fill="rgb(224,159,50)" fg:x="63417" fg:w="37"/><text x="62.1891%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (37 samples, 0.04%)</title><rect x="61.9391%" y="341" width="0.0361%" height="15" fill="rgb(224,93,4)" fg:x="63417" fg:w="37"/><text x="62.1891%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (73 samples, 0.07%)</title><rect x="61.9147%" y="405" width="0.0713%" height="15" fill="rgb(208,81,34)" fg:x="63392" fg:w="73"/><text x="62.1647%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (73 samples, 0.07%)</title><rect x="61.9147%" y="389" width="0.0713%" height="15" fill="rgb(233,92,54)" fg:x="63392" fg:w="73"/><text x="62.1647%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.07%)</title><rect x="61.9176%" y="373" width="0.0684%" height="15" fill="rgb(237,21,14)" fg:x="63395" fg:w="70"/><text x="62.1676%" y="383.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="61.9753%" y="357" width="0.0107%" height="15" fill="rgb(249,128,51)" fg:x="63454" fg:w="11"/><text x="62.2253%" y="367.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="61.9753%" y="341" width="0.0107%" height="15" fill="rgb(223,129,24)" fg:x="63454" fg:w="11"/><text x="62.2253%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (109 samples, 0.11%)</title><rect x="61.8835%" y="469" width="0.1065%" height="15" fill="rgb(231,168,25)" fg:x="63360" fg:w="109"/><text x="62.1335%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (109 samples, 0.11%)</title><rect x="61.8835%" y="453" width="0.1065%" height="15" fill="rgb(224,39,20)" fg:x="63360" fg:w="109"/><text x="62.1335%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (109 samples, 0.11%)</title><rect x="61.8835%" y="437" width="0.1065%" height="15" fill="rgb(225,152,53)" fg:x="63360" fg:w="109"/><text x="62.1335%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (109 samples, 0.11%)</title><rect x="61.8835%" y="421" width="0.1065%" height="15" fill="rgb(252,17,24)" fg:x="63360" fg:w="109"/><text x="62.1335%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (126 samples, 0.12%)</title><rect x="61.8708%" y="485" width="0.1231%" height="15" fill="rgb(250,114,30)" fg:x="63347" fg:w="126"/><text x="62.1208%" y="495.50"></text></g><g><title>rust_dealloc (138 samples, 0.13%)</title><rect x="61.8610%" y="501" width="0.1348%" height="15" fill="rgb(229,5,4)" fg:x="63337" fg:w="138"/><text x="62.1110%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,815 samples, 1.77%)</title><rect x="60.2338%" y="517" width="1.7727%" height="15" fill="rgb(225,176,49)" fg:x="61671" fg:w="1815"/><text x="60.4838%" y="527.50">t..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (11 samples, 0.01%)</title><rect x="61.9958%" y="501" width="0.0107%" height="15" fill="rgb(224,221,49)" fg:x="63475" fg:w="11"/><text x="62.2458%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,592 samples, 2.53%)</title><rect x="59.5648%" y="533" width="2.5316%" height="15" fill="rgb(253,169,27)" fg:x="60986" fg:w="2592"/><text x="59.8148%" y="543.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (92 samples, 0.09%)</title><rect x="62.0065%" y="517" width="0.0899%" height="15" fill="rgb(211,206,16)" fg:x="63486" fg:w="92"/><text x="62.2565%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="62.0964%" y="533" width="0.0127%" height="15" fill="rgb(244,87,35)" fg:x="63578" fg:w="13"/><text x="62.3464%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="62.0964%" y="517" width="0.0127%" height="15" fill="rgb(246,28,10)" fg:x="63578" fg:w="13"/><text x="62.3464%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.01%)</title><rect x="62.1091%" y="533" width="0.0147%" height="15" fill="rgb(229,12,44)" fg:x="63591" fg:w="15"/><text x="62.3591%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (23 samples, 0.02%)</title><rect x="62.1237%" y="533" width="0.0225%" height="15" fill="rgb(210,145,37)" fg:x="63606" fg:w="23"/><text x="62.3737%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (23 samples, 0.02%)</title><rect x="62.1237%" y="517" width="0.0225%" height="15" fill="rgb(227,112,52)" fg:x="63606" fg:w="23"/><text x="62.3737%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (563 samples, 0.55%)</title><rect x="62.1462%" y="533" width="0.5499%" height="15" fill="rgb(238,155,34)" fg:x="63629" fg:w="563"/><text x="62.3962%" y="543.50"></text></g><g><title>rust_dealloc (26 samples, 0.03%)</title><rect x="62.7303%" y="325" width="0.0254%" height="15" fill="rgb(239,226,36)" fg:x="64227" fg:w="26"/><text x="62.9803%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="62.7742%" y="277" width="0.0147%" height="15" fill="rgb(230,16,23)" fg:x="64272" fg:w="15"/><text x="63.0242%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (43 samples, 0.04%)</title><rect x="62.7557%" y="325" width="0.0420%" height="15" fill="rgb(236,171,36)" fg:x="64253" fg:w="43"/><text x="63.0057%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (43 samples, 0.04%)</title><rect x="62.7557%" y="309" width="0.0420%" height="15" fill="rgb(221,22,14)" fg:x="64253" fg:w="43"/><text x="63.0057%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (38 samples, 0.04%)</title><rect x="62.7605%" y="293" width="0.0371%" height="15" fill="rgb(242,43,11)" fg:x="64258" fg:w="38"/><text x="63.0105%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (82 samples, 0.08%)</title><rect x="62.7303%" y="357" width="0.0801%" height="15" fill="rgb(232,69,23)" fg:x="64227" fg:w="82"/><text x="62.9803%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (82 samples, 0.08%)</title><rect x="62.7303%" y="341" width="0.0801%" height="15" fill="rgb(216,180,54)" fg:x="64227" fg:w="82"/><text x="62.9803%" y="351.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="62.7976%" y="325" width="0.0127%" height="15" fill="rgb(216,5,24)" fg:x="64296" fg:w="13"/><text x="63.0476%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (95 samples, 0.09%)</title><rect x="62.7303%" y="389" width="0.0928%" height="15" fill="rgb(225,89,9)" fg:x="64227" fg:w="95"/><text x="62.9803%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (95 samples, 0.09%)</title><rect x="62.7303%" y="373" width="0.0928%" height="15" fill="rgb(243,75,33)" fg:x="64227" fg:w="95"/><text x="62.9803%" y="383.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="62.8103%" y="357" width="0.0127%" height="15" fill="rgb(247,141,45)" fg:x="64309" fg:w="13"/><text x="63.0603%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="62.8103%" y="341" width="0.0127%" height="15" fill="rgb(232,177,36)" fg:x="64309" fg:w="13"/><text x="63.0603%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="62.8103%" y="325" width="0.0127%" height="15" fill="rgb(219,125,36)" fg:x="64309" fg:w="13"/><text x="63.0603%" y="335.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="62.8103%" y="309" width="0.0127%" height="15" fill="rgb(227,94,9)" fg:x="64309" fg:w="13"/><text x="63.0603%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (113 samples, 0.11%)</title><rect x="62.7254%" y="405" width="0.1104%" height="15" fill="rgb(240,34,52)" fg:x="64222" fg:w="113"/><text x="62.9754%" y="415.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="62.8230%" y="389" width="0.0127%" height="15" fill="rgb(216,45,12)" fg:x="64322" fg:w="13"/><text x="63.0730%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="62.8230%" y="373" width="0.0127%" height="15" fill="rgb(246,21,19)" fg:x="64322" fg:w="13"/><text x="63.0730%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="62.8230%" y="357" width="0.0127%" height="15" fill="rgb(213,98,42)" fg:x="64322" fg:w="13"/><text x="63.0730%" y="367.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="62.8230%" y="341" width="0.0127%" height="15" fill="rgb(250,136,47)" fg:x="64322" fg:w="13"/><text x="63.0730%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (141 samples, 0.14%)</title><rect x="62.7058%" y="533" width="0.1377%" height="15" fill="rgb(251,124,27)" fg:x="64202" fg:w="141"/><text x="62.9558%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (141 samples, 0.14%)</title><rect x="62.7058%" y="517" width="0.1377%" height="15" fill="rgb(229,180,14)" fg:x="64202" fg:w="141"/><text x="62.9558%" y="527.50"></text></g><g><title>alloc::alloc::box_free (141 samples, 0.14%)</title><rect x="62.7058%" y="501" width="0.1377%" height="15" fill="rgb(245,216,25)" fg:x="64202" fg:w="141"/><text x="62.9558%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (132 samples, 0.13%)</title><rect x="62.7146%" y="485" width="0.1289%" height="15" fill="rgb(251,43,5)" fg:x="64211" fg:w="132"/><text x="62.9646%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (131 samples, 0.13%)</title><rect x="62.7156%" y="469" width="0.1279%" height="15" fill="rgb(250,128,24)" fg:x="64212" fg:w="131"/><text x="62.9656%" y="479.50"></text></g><g><title>__rg_dealloc (131 samples, 0.13%)</title><rect x="62.7156%" y="453" width="0.1279%" height="15" fill="rgb(217,117,27)" fg:x="64212" fg:w="131"/><text x="62.9656%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (131 samples, 0.13%)</title><rect x="62.7156%" y="437" width="0.1279%" height="15" fill="rgb(245,147,4)" fg:x="64212" fg:w="131"/><text x="62.9656%" y="447.50"></text></g><g><title>rust_dealloc (131 samples, 0.13%)</title><rect x="62.7156%" y="421" width="0.1279%" height="15" fill="rgb(242,201,35)" fg:x="64212" fg:w="131"/><text x="62.9656%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1157" width="5.0720%" height="15" fill="rgb(218,181,1)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1167.50">core::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1141" width="5.0720%" height="15" fill="rgb(222,6,29)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1151.50">std::t..</text></g><g><title>std::panic::catch_unwind (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1125" width="5.0720%" height="15" fill="rgb(208,186,3)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1135.50">std::p..</text></g><g><title>std::panicking::try (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1109" width="5.0720%" height="15" fill="rgb(216,36,26)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1119.50">std::p..</text></g><g><title>std::panicking::try::do_call (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1093" width="5.0720%" height="15" fill="rgb(248,201,23)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1103.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1077" width="5.0720%" height="15" fill="rgb(251,170,31)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1087.50">&lt;core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1061" width="5.0720%" height="15" fill="rgb(207,110,25)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1071.50">std::t..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1045" width="5.0720%" height="15" fill="rgb(250,54,15)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1055.50">std::s..</text></g><g><title>core::ops::function::FnOnce::call_once (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1029" width="5.0720%" height="15" fill="rgb(227,68,33)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1039.50">core::..</text></g><g><title>async_global_executor::threading::thread_main_loop (5,193 samples, 5.07%)</title><rect x="57.8380%" y="1013" width="5.0720%" height="15" fill="rgb(238,34,41)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1023.50">async_..</text></g><g><title>std::panic::catch_unwind (5,193 samples, 5.07%)</title><rect x="57.8380%" y="997" width="5.0720%" height="15" fill="rgb(220,11,15)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="1007.50">std::p..</text></g><g><title>std::panicking::try (5,193 samples, 5.07%)</title><rect x="57.8380%" y="981" width="5.0720%" height="15" fill="rgb(246,111,35)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="991.50">std::p..</text></g><g><title>std::panicking::try::do_call (5,193 samples, 5.07%)</title><rect x="57.8380%" y="965" width="5.0720%" height="15" fill="rgb(209,88,53)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="975.50">std::p..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="949" width="5.0720%" height="15" fill="rgb(231,185,47)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="959.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,193 samples, 5.07%)</title><rect x="57.8380%" y="933" width="5.0720%" height="15" fill="rgb(233,154,1)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="943.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,193 samples, 5.07%)</title><rect x="57.8380%" y="917" width="5.0720%" height="15" fill="rgb(225,15,46)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="927.50">std::t..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="901" width="5.0720%" height="15" fill="rgb(211,135,41)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="911.50">async_..</text></g><g><title>async_global_executor::reactor::block_on (5,193 samples, 5.07%)</title><rect x="57.8380%" y="885" width="5.0720%" height="15" fill="rgb(208,54,0)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="895.50">async_..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="869" width="5.0720%" height="15" fill="rgb(244,136,14)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="879.50">async_..</text></g><g><title>async_io::driver::block_on (5,193 samples, 5.07%)</title><rect x="57.8380%" y="853" width="5.0720%" height="15" fill="rgb(241,56,14)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="863.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5,193 samples, 5.07%)</title><rect x="57.8380%" y="837" width="5.0720%" height="15" fill="rgb(205,80,24)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="847.50">&lt;futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,193 samples, 5.07%)</title><rect x="57.8380%" y="821" width="5.0720%" height="15" fill="rgb(220,57,4)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="831.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="805" width="5.0720%" height="15" fill="rgb(226,193,50)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="815.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5,193 samples, 5.07%)</title><rect x="57.8380%" y="789" width="5.0720%" height="15" fill="rgb(231,168,22)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="799.50">&lt;futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,193 samples, 5.07%)</title><rect x="57.8380%" y="773" width="5.0720%" height="15" fill="rgb(254,215,14)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="783.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="757" width="5.0720%" height="15" fill="rgb(211,115,16)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="767.50">async_..</text></g><g><title>async_task::runnable::Runnable::run (5,193 samples, 5.07%)</title><rect x="57.8380%" y="741" width="5.0720%" height="15" fill="rgb(236,210,16)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="751.50">async_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,193 samples, 5.07%)</title><rect x="57.8380%" y="725" width="5.0720%" height="15" fill="rgb(221,94,12)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="735.50">async_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,193 samples, 5.07%)</title><rect x="57.8380%" y="709" width="5.0720%" height="15" fill="rgb(235,218,49)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="719.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,193 samples, 5.07%)</title><rect x="57.8380%" y="693" width="5.0720%" height="15" fill="rgb(217,114,14)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="703.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="677" width="5.0720%" height="15" fill="rgb(216,145,22)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="687.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,193 samples, 5.07%)</title><rect x="57.8380%" y="661" width="5.0720%" height="15" fill="rgb(217,112,39)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="671.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,193 samples, 5.07%)</title><rect x="57.8380%" y="645" width="5.0720%" height="15" fill="rgb(225,85,32)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="655.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,193 samples, 5.07%)</title><rect x="57.8380%" y="629" width="5.0720%" height="15" fill="rgb(245,209,47)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="639.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,193 samples, 5.07%)</title><rect x="57.8380%" y="613" width="5.0720%" height="15" fill="rgb(218,220,15)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="623.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="597" width="5.0720%" height="15" fill="rgb(222,202,31)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="607.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,193 samples, 5.07%)</title><rect x="57.8380%" y="581" width="5.0720%" height="15" fill="rgb(243,203,4)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="591.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,193 samples, 5.07%)</title><rect x="57.8380%" y="565" width="5.0720%" height="15" fill="rgb(237,92,17)" fg:x="59218" fg:w="5193"/><text x="58.0880%" y="575.50">&lt;core:..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,516 samples, 3.43%)</title><rect x="59.4759%" y="549" width="3.4341%" height="15" fill="rgb(231,119,7)" fg:x="60895" fg:w="3516"/><text x="59.7259%" y="559.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (68 samples, 0.07%)</title><rect x="62.8436%" y="533" width="0.0664%" height="15" fill="rgb(237,82,41)" fg:x="64343" fg:w="68"/><text x="63.0936%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (20 samples, 0.02%)</title><rect x="62.8904%" y="517" width="0.0195%" height="15" fill="rgb(226,81,48)" fg:x="64391" fg:w="20"/><text x="63.1404%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="62.9334%" y="1157" width="0.0293%" height="15" fill="rgb(234,70,51)" fg:x="64435" fg:w="30"/><text x="63.1834%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="62.9627%" y="1157" width="0.0293%" height="15" fill="rgb(251,86,4)" fg:x="64465" fg:w="30"/><text x="63.2127%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (93 samples, 0.09%)</title><rect x="62.9920%" y="1157" width="0.0908%" height="15" fill="rgb(244,144,28)" fg:x="64495" fg:w="93"/><text x="63.2420%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (27 samples, 0.03%)</title><rect x="63.0828%" y="1157" width="0.0264%" height="15" fill="rgb(232,161,39)" fg:x="64588" fg:w="27"/><text x="63.3328%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (27 samples, 0.03%)</title><rect x="63.0828%" y="1141" width="0.0264%" height="15" fill="rgb(247,34,51)" fg:x="64588" fg:w="27"/><text x="63.3328%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (27 samples, 0.03%)</title><rect x="63.0828%" y="1125" width="0.0264%" height="15" fill="rgb(225,132,2)" fg:x="64588" fg:w="27"/><text x="63.3328%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="63.0828%" y="1109" width="0.0264%" height="15" fill="rgb(209,159,44)" fg:x="64588" fg:w="27"/><text x="63.3328%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.03%)</title><rect x="63.0828%" y="1093" width="0.0264%" height="15" fill="rgb(251,214,1)" fg:x="64588" fg:w="27"/><text x="63.3328%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.03%)</title><rect x="63.0828%" y="1077" width="0.0264%" height="15" fill="rgb(247,84,47)" fg:x="64588" fg:w="27"/><text x="63.3328%" y="1087.50"></text></g><g><title>__rg_dealloc (27 samples, 0.03%)</title><rect x="63.0828%" y="1061" width="0.0264%" height="15" fill="rgb(240,111,43)" fg:x="64588" fg:w="27"/><text x="63.3328%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (27 samples, 0.03%)</title><rect x="63.0828%" y="1045" width="0.0264%" height="15" fill="rgb(215,214,35)" fg:x="64588" fg:w="27"/><text x="63.3328%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (97 samples, 0.09%)</title><rect x="63.1092%" y="1157" width="0.0947%" height="15" fill="rgb(248,207,23)" fg:x="64615" fg:w="97"/><text x="63.3592%" y="1167.50"></text></g><g><title>event_listener::Event::notify (28 samples, 0.03%)</title><rect x="63.2040%" y="1157" width="0.0273%" height="15" fill="rgb(214,186,4)" fg:x="64712" fg:w="28"/><text x="63.4540%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (22 samples, 0.02%)</title><rect x="63.2420%" y="1157" width="0.0215%" height="15" fill="rgb(220,133,22)" fg:x="64751" fg:w="22"/><text x="63.4920%" y="1167.50"></text></g><g><title>rust_alloc (54 samples, 0.05%)</title><rect x="63.2733%" y="1157" width="0.0527%" height="15" fill="rgb(239,134,19)" fg:x="64783" fg:w="54"/><text x="63.5233%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (12 samples, 0.01%)</title><rect x="63.3378%" y="1157" width="0.0117%" height="15" fill="rgb(250,140,9)" fg:x="64849" fg:w="12"/><text x="63.5878%" y="1167.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (13 samples, 0.01%)</title><rect x="63.3495%" y="1157" width="0.0127%" height="15" fill="rgb(225,59,14)" fg:x="64861" fg:w="13"/><text x="63.5995%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.09%)</title><rect x="64.7813%" y="437" width="0.0889%" height="15" fill="rgb(214,152,51)" fg:x="66327" fg:w="91"/><text x="65.0313%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.05%)</title><rect x="65.0948%" y="421" width="0.0469%" height="15" fill="rgb(251,227,43)" fg:x="66648" fg:w="48"/><text x="65.3448%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (872 samples, 0.85%)</title><rect x="65.1417%" y="421" width="0.8517%" height="15" fill="rgb(241,96,17)" fg:x="66696" fg:w="872"/><text x="65.3917%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="65.9973%" y="357" width="0.0391%" height="15" fill="rgb(234,198,43)" fg:x="67572" fg:w="40"/><text x="66.2473%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (52 samples, 0.05%)</title><rect x="65.9973%" y="421" width="0.0508%" height="15" fill="rgb(220,108,29)" fg:x="67572" fg:w="52"/><text x="66.2473%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (52 samples, 0.05%)</title><rect x="65.9973%" y="405" width="0.0508%" height="15" fill="rgb(226,163,33)" fg:x="67572" fg:w="52"/><text x="66.2473%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (52 samples, 0.05%)</title><rect x="65.9973%" y="389" width="0.0508%" height="15" fill="rgb(205,194,45)" fg:x="67572" fg:w="52"/><text x="66.2473%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (52 samples, 0.05%)</title><rect x="65.9973%" y="373" width="0.0508%" height="15" fill="rgb(206,143,44)" fg:x="67572" fg:w="52"/><text x="66.2473%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.01%)</title><rect x="66.0364%" y="357" width="0.0117%" height="15" fill="rgb(236,136,36)" fg:x="67612" fg:w="12"/><text x="66.2864%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (12 samples, 0.01%)</title><rect x="66.0364%" y="341" width="0.0117%" height="15" fill="rgb(249,172,42)" fg:x="67612" fg:w="12"/><text x="66.2864%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="66.0481%" y="389" width="0.0107%" height="15" fill="rgb(216,139,23)" fg:x="67624" fg:w="11"/><text x="66.2981%" y="399.50"></text></g><g><title>rust_dealloc (22 samples, 0.02%)</title><rect x="66.0999%" y="229" width="0.0215%" height="15" fill="rgb(207,166,20)" fg:x="67677" fg:w="22"/><text x="66.3499%" y="239.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="66.1213%" y="229" width="0.0117%" height="15" fill="rgb(210,209,22)" fg:x="67699" fg:w="12"/><text x="66.3713%" y="239.50"></text></g><g><title>rust_dealloc (61 samples, 0.06%)</title><rect x="66.1331%" y="165" width="0.0596%" height="15" fill="rgb(232,118,20)" fg:x="67711" fg:w="61"/><text x="66.3831%" y="175.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (33 samples, 0.03%)</title><rect x="66.2434%" y="117" width="0.0322%" height="15" fill="rgb(238,113,42)" fg:x="67824" fg:w="33"/><text x="66.4934%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (29 samples, 0.03%)</title><rect x="66.2473%" y="101" width="0.0283%" height="15" fill="rgb(231,42,5)" fg:x="67828" fg:w="29"/><text x="66.4973%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (89 samples, 0.09%)</title><rect x="66.1966%" y="165" width="0.0869%" height="15" fill="rgb(243,166,24)" fg:x="67776" fg:w="89"/><text x="66.4466%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (89 samples, 0.09%)</title><rect x="66.1966%" y="149" width="0.0869%" height="15" fill="rgb(237,226,12)" fg:x="67776" fg:w="89"/><text x="66.4466%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (78 samples, 0.08%)</title><rect x="66.2073%" y="133" width="0.0762%" height="15" fill="rgb(229,133,24)" fg:x="67787" fg:w="78"/><text x="66.4573%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (284 samples, 0.28%)</title><rect x="66.0999%" y="245" width="0.2774%" height="15" fill="rgb(238,33,43)" fg:x="67677" fg:w="284"/><text x="66.3499%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (250 samples, 0.24%)</title><rect x="66.1331%" y="229" width="0.2442%" height="15" fill="rgb(227,59,38)" fg:x="67711" fg:w="250"/><text x="66.3831%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (250 samples, 0.24%)</title><rect x="66.1331%" y="213" width="0.2442%" height="15" fill="rgb(230,97,0)" fg:x="67711" fg:w="250"/><text x="66.3831%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (250 samples, 0.24%)</title><rect x="66.1331%" y="197" width="0.2442%" height="15" fill="rgb(250,173,50)" fg:x="67711" fg:w="250"/><text x="66.3831%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (250 samples, 0.24%)</title><rect x="66.1331%" y="181" width="0.2442%" height="15" fill="rgb(240,15,50)" fg:x="67711" fg:w="250"/><text x="66.3831%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (96 samples, 0.09%)</title><rect x="66.2835%" y="165" width="0.0938%" height="15" fill="rgb(221,93,22)" fg:x="67865" fg:w="96"/><text x="66.5335%" y="175.50"></text></g><g><title>rust_dealloc (297 samples, 0.29%)</title><rect x="66.0891%" y="261" width="0.2901%" height="15" fill="rgb(245,180,53)" fg:x="67666" fg:w="297"/><text x="66.3391%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (38 samples, 0.04%)</title><rect x="66.3899%" y="245" width="0.0371%" height="15" fill="rgb(231,88,51)" fg:x="67974" fg:w="38"/><text x="66.6399%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (394 samples, 0.38%)</title><rect x="66.0481%" y="405" width="0.3848%" height="15" fill="rgb(240,58,21)" fg:x="67624" fg:w="394"/><text x="66.2981%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (383 samples, 0.37%)</title><rect x="66.0588%" y="389" width="0.3741%" height="15" fill="rgb(237,21,10)" fg:x="67635" fg:w="383"/><text x="66.3088%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (373 samples, 0.36%)</title><rect x="66.0686%" y="373" width="0.3643%" height="15" fill="rgb(218,43,11)" fg:x="67645" fg:w="373"/><text x="66.3186%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (373 samples, 0.36%)</title><rect x="66.0686%" y="357" width="0.3643%" height="15" fill="rgb(218,221,29)" fg:x="67645" fg:w="373"/><text x="66.3186%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (373 samples, 0.36%)</title><rect x="66.0686%" y="341" width="0.3643%" height="15" fill="rgb(214,118,42)" fg:x="67645" fg:w="373"/><text x="66.3186%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (360 samples, 0.35%)</title><rect x="66.0813%" y="325" width="0.3516%" height="15" fill="rgb(251,200,26)" fg:x="67658" fg:w="360"/><text x="66.3313%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (360 samples, 0.35%)</title><rect x="66.0813%" y="309" width="0.3516%" height="15" fill="rgb(237,101,39)" fg:x="67658" fg:w="360"/><text x="66.3313%" y="319.50"></text></g><g><title>__rg_dealloc (360 samples, 0.35%)</title><rect x="66.0813%" y="293" width="0.3516%" height="15" fill="rgb(251,117,11)" fg:x="67658" fg:w="360"/><text x="66.3313%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (352 samples, 0.34%)</title><rect x="66.0891%" y="277" width="0.3438%" height="15" fill="rgb(216,223,23)" fg:x="67666" fg:w="352"/><text x="66.3391%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (55 samples, 0.05%)</title><rect x="66.3792%" y="261" width="0.0537%" height="15" fill="rgb(251,54,12)" fg:x="67963" fg:w="55"/><text x="66.6292%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="66.4974%" y="165" width="0.0176%" height="15" fill="rgb(254,176,54)" fg:x="68084" fg:w="18"/><text x="66.7474%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="66.4983%" y="149" width="0.0166%" height="15" fill="rgb(210,32,8)" fg:x="68085" fg:w="17"/><text x="66.7483%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (60 samples, 0.06%)</title><rect x="66.4710%" y="213" width="0.0586%" height="15" fill="rgb(235,52,38)" fg:x="68057" fg:w="60"/><text x="66.7210%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (60 samples, 0.06%)</title><rect x="66.4710%" y="197" width="0.0586%" height="15" fill="rgb(231,4,44)" fg:x="68057" fg:w="60"/><text x="66.7210%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (60 samples, 0.06%)</title><rect x="66.4710%" y="181" width="0.0586%" height="15" fill="rgb(249,2,32)" fg:x="68057" fg:w="60"/><text x="66.7210%" y="191.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="66.5150%" y="165" width="0.0147%" height="15" fill="rgb(224,65,26)" fg:x="68102" fg:w="15"/><text x="66.7650%" y="175.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="66.5150%" y="149" width="0.0147%" height="15" fill="rgb(250,73,40)" fg:x="68102" fg:w="15"/><text x="66.7650%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (80 samples, 0.08%)</title><rect x="66.4573%" y="245" width="0.0781%" height="15" fill="rgb(253,177,16)" fg:x="68043" fg:w="80"/><text x="66.7073%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (80 samples, 0.08%)</title><rect x="66.4573%" y="229" width="0.0781%" height="15" fill="rgb(217,32,34)" fg:x="68043" fg:w="80"/><text x="66.7073%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (97 samples, 0.09%)</title><rect x="66.4495%" y="293" width="0.0947%" height="15" fill="rgb(212,7,10)" fg:x="68035" fg:w="97"/><text x="66.6995%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (89 samples, 0.09%)</title><rect x="66.4573%" y="277" width="0.0869%" height="15" fill="rgb(245,89,8)" fg:x="68043" fg:w="89"/><text x="66.7073%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (89 samples, 0.09%)</title><rect x="66.4573%" y="261" width="0.0869%" height="15" fill="rgb(237,16,53)" fg:x="68043" fg:w="89"/><text x="66.7073%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (510 samples, 0.50%)</title><rect x="66.0481%" y="421" width="0.4981%" height="15" fill="rgb(250,204,30)" fg:x="67624" fg:w="510"/><text x="66.2981%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (116 samples, 0.11%)</title><rect x="66.4329%" y="405" width="0.1133%" height="15" fill="rgb(208,77,27)" fg:x="68018" fg:w="116"/><text x="66.6829%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.11%)</title><rect x="66.4329%" y="389" width="0.1133%" height="15" fill="rgb(250,204,28)" fg:x="68018" fg:w="116"/><text x="66.6829%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (116 samples, 0.11%)</title><rect x="66.4329%" y="373" width="0.1133%" height="15" fill="rgb(244,63,21)" fg:x="68018" fg:w="116"/><text x="66.6829%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (109 samples, 0.11%)</title><rect x="66.4397%" y="357" width="0.1065%" height="15" fill="rgb(236,85,44)" fg:x="68025" fg:w="109"/><text x="66.6897%" y="367.50"></text></g><g><title>__rg_dealloc (109 samples, 0.11%)</title><rect x="66.4397%" y="341" width="0.1065%" height="15" fill="rgb(215,98,4)" fg:x="68025" fg:w="109"/><text x="66.6897%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (109 samples, 0.11%)</title><rect x="66.4397%" y="325" width="0.1065%" height="15" fill="rgb(235,38,11)" fg:x="68025" fg:w="109"/><text x="66.6897%" y="335.50"></text></g><g><title>rust_dealloc (109 samples, 0.11%)</title><rect x="66.4397%" y="309" width="0.1065%" height="15" fill="rgb(254,186,25)" fg:x="68025" fg:w="109"/><text x="66.6897%" y="319.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (12 samples, 0.01%)</title><rect x="66.6195%" y="373" width="0.0117%" height="15" fill="rgb(225,55,31)" fg:x="68209" fg:w="12"/><text x="66.8695%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (12 samples, 0.01%)</title><rect x="66.6195%" y="357" width="0.0117%" height="15" fill="rgb(211,15,21)" fg:x="68209" fg:w="12"/><text x="66.8695%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (11 samples, 0.01%)</title><rect x="66.6322%" y="357" width="0.0107%" height="15" fill="rgb(215,187,41)" fg:x="68222" fg:w="11"/><text x="66.8822%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (25 samples, 0.02%)</title><rect x="66.6722%" y="341" width="0.0244%" height="15" fill="rgb(248,69,32)" fg:x="68263" fg:w="25"/><text x="66.9222%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (17 samples, 0.02%)</title><rect x="66.6800%" y="325" width="0.0166%" height="15" fill="rgb(252,102,52)" fg:x="68271" fg:w="17"/><text x="66.9300%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (66 samples, 0.06%)</title><rect x="66.6429%" y="357" width="0.0645%" height="15" fill="rgb(253,140,32)" fg:x="68233" fg:w="66"/><text x="66.8929%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (11 samples, 0.01%)</title><rect x="66.6966%" y="341" width="0.0107%" height="15" fill="rgb(216,56,42)" fg:x="68288" fg:w="11"/><text x="66.9466%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (78 samples, 0.08%)</title><rect x="66.6322%" y="373" width="0.0762%" height="15" fill="rgb(216,184,14)" fg:x="68222" fg:w="78"/><text x="66.8822%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (190 samples, 0.19%)</title><rect x="66.5462%" y="421" width="0.1856%" height="15" fill="rgb(237,187,27)" fg:x="68134" fg:w="190"/><text x="66.7962%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (178 samples, 0.17%)</title><rect x="66.5579%" y="405" width="0.1739%" height="15" fill="rgb(219,65,3)" fg:x="68146" fg:w="178"/><text x="66.8079%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (176 samples, 0.17%)</title><rect x="66.5599%" y="389" width="0.1719%" height="15" fill="rgb(245,83,25)" fg:x="68148" fg:w="176"/><text x="66.8099%" y="399.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::update_min_max (15 samples, 0.01%)</title><rect x="66.7171%" y="373" width="0.0147%" height="15" fill="rgb(214,205,45)" fg:x="68309" fg:w="15"/><text x="66.9671%" y="383.50"></text></g><g><title>std::time::SystemTime::duration_since (24 samples, 0.02%)</title><rect x="66.7767%" y="405" width="0.0234%" height="15" fill="rgb(241,20,18)" fg:x="68370" fg:w="24"/><text x="67.0267%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (24 samples, 0.02%)</title><rect x="66.7767%" y="389" width="0.0234%" height="15" fill="rgb(232,163,23)" fg:x="68370" fg:w="24"/><text x="67.0267%" y="399.50"></text></g><g><title>tremor_common::time::nanotime (275 samples, 0.27%)</title><rect x="66.7318%" y="421" width="0.2686%" height="15" fill="rgb(214,5,46)" fg:x="68324" fg:w="275"/><text x="66.9818%" y="431.50"></text></g><g><title>std::time::SystemTime::now (205 samples, 0.20%)</title><rect x="66.8001%" y="405" width="0.2002%" height="15" fill="rgb(229,78,17)" fg:x="68394" fg:w="205"/><text x="67.0501%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (205 samples, 0.20%)</title><rect x="66.8001%" y="389" width="0.2002%" height="15" fill="rgb(248,89,10)" fg:x="68394" fg:w="205"/><text x="67.0501%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (205 samples, 0.20%)</title><rect x="66.8001%" y="373" width="0.2002%" height="15" fill="rgb(248,54,15)" fg:x="68394" fg:w="205"/><text x="67.0501%" y="383.50"></text></g><g><title>__clock_gettime_2 (47 samples, 0.05%)</title><rect x="66.9545%" y="357" width="0.0459%" height="15" fill="rgb(223,116,6)" fg:x="68552" fg:w="47"/><text x="67.2045%" y="367.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.01%)</title><rect x="66.9857%" y="341" width="0.0147%" height="15" fill="rgb(205,125,38)" fg:x="68584" fg:w="15"/><text x="67.2357%" y="351.50"></text></g><g><title>start_thread (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1157" width="3.6480%" height="15" fill="rgb(251,78,38)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1167.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1141" width="3.6480%" height="15" fill="rgb(253,78,28)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1151.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1125" width="3.6480%" height="15" fill="rgb(209,120,3)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1135.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1109" width="3.6480%" height="15" fill="rgb(238,229,9)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1119.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1093" width="3.6480%" height="15" fill="rgb(253,159,18)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1103.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1077" width="3.6480%" height="15" fill="rgb(244,42,34)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1087.50">std:..</text></g><g><title>std::panic::catch_unwind (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1061" width="3.6480%" height="15" fill="rgb(224,8,7)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1071.50">std:..</text></g><g><title>std::panicking::try (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1045" width="3.6480%" height="15" fill="rgb(210,201,45)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1055.50">std:..</text></g><g><title>std::panicking::try::do_call (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1029" width="3.6480%" height="15" fill="rgb(252,185,21)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1039.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,735 samples, 3.65%)</title><rect x="63.3622%" y="1013" width="3.6480%" height="15" fill="rgb(223,131,1)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1023.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="997" width="3.6480%" height="15" fill="rgb(245,141,16)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="1007.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,735 samples, 3.65%)</title><rect x="63.3622%" y="981" width="3.6480%" height="15" fill="rgb(229,55,45)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="991.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (3,735 samples, 3.65%)</title><rect x="63.3622%" y="965" width="3.6480%" height="15" fill="rgb(208,92,15)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="975.50">core..</text></g><g><title>async_global_executor::threading::thread_main_loop (3,735 samples, 3.65%)</title><rect x="63.3622%" y="949" width="3.6480%" height="15" fill="rgb(234,185,47)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="959.50">asyn..</text></g><g><title>std::panic::catch_unwind (3,735 samples, 3.65%)</title><rect x="63.3622%" y="933" width="3.6480%" height="15" fill="rgb(253,104,50)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="943.50">std:..</text></g><g><title>std::panicking::try (3,735 samples, 3.65%)</title><rect x="63.3622%" y="917" width="3.6480%" height="15" fill="rgb(205,70,7)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="927.50">std:..</text></g><g><title>std::panicking::try::do_call (3,735 samples, 3.65%)</title><rect x="63.3622%" y="901" width="3.6480%" height="15" fill="rgb(240,178,43)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="911.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="885" width="3.6480%" height="15" fill="rgb(214,112,2)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="895.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,735 samples, 3.65%)</title><rect x="63.3622%" y="869" width="3.6480%" height="15" fill="rgb(206,46,17)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="879.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,735 samples, 3.65%)</title><rect x="63.3622%" y="853" width="3.6480%" height="15" fill="rgb(225,220,16)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="863.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="837" width="3.6480%" height="15" fill="rgb(238,65,40)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="847.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (3,735 samples, 3.65%)</title><rect x="63.3622%" y="821" width="3.6480%" height="15" fill="rgb(230,151,21)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="831.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="805" width="3.6480%" height="15" fill="rgb(218,58,49)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="815.50">asyn..</text></g><g><title>async_io::driver::block_on (3,735 samples, 3.65%)</title><rect x="63.3622%" y="789" width="3.6480%" height="15" fill="rgb(219,179,14)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="799.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="773" width="3.6480%" height="15" fill="rgb(223,72,1)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="783.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="757" width="3.6480%" height="15" fill="rgb(238,126,10)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="767.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="741" width="3.6480%" height="15" fill="rgb(224,206,38)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="751.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="725" width="3.6480%" height="15" fill="rgb(212,201,54)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="735.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="709" width="3.6480%" height="15" fill="rgb(218,154,48)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="719.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="693" width="3.6480%" height="15" fill="rgb(232,93,24)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="703.50">asyn..</text></g><g><title>async_task::runnable::Runnable::run (3,735 samples, 3.65%)</title><rect x="63.3622%" y="677" width="3.6480%" height="15" fill="rgb(245,30,21)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="687.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,735 samples, 3.65%)</title><rect x="63.3622%" y="661" width="3.6480%" height="15" fill="rgb(242,148,29)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="671.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="645" width="3.6480%" height="15" fill="rgb(244,153,54)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="655.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="629" width="3.6480%" height="15" fill="rgb(252,87,22)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="639.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="613" width="3.6480%" height="15" fill="rgb(210,51,29)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="623.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="597" width="3.6480%" height="15" fill="rgb(242,136,47)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="607.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,735 samples, 3.65%)</title><rect x="63.3622%" y="581" width="3.6480%" height="15" fill="rgb(238,68,4)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="591.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,735 samples, 3.65%)</title><rect x="63.3622%" y="565" width="3.6480%" height="15" fill="rgb(242,161,30)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="575.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,735 samples, 3.65%)</title><rect x="63.3622%" y="549" width="3.6480%" height="15" fill="rgb(218,58,44)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="559.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="533" width="3.6480%" height="15" fill="rgb(252,125,32)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="543.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="517" width="3.6480%" height="15" fill="rgb(219,178,0)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="527.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="501" width="3.6480%" height="15" fill="rgb(213,152,7)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="511.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,735 samples, 3.65%)</title><rect x="63.3622%" y="485" width="3.6480%" height="15" fill="rgb(249,109,34)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="495.50">trem..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="469" width="3.6480%" height="15" fill="rgb(232,96,21)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="479.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,735 samples, 3.65%)</title><rect x="63.3622%" y="453" width="3.6480%" height="15" fill="rgb(228,27,39)" fg:x="64874" fg:w="3735"/><text x="63.6122%" y="463.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (2,191 samples, 2.14%)</title><rect x="64.8702%" y="437" width="2.1399%" height="15" fill="rgb(211,182,52)" fg:x="66418" fg:w="2191"/><text x="65.1202%" y="447.50">&lt;..</text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="67.0346%" y="389" width="0.0127%" height="15" fill="rgb(234,178,38)" fg:x="68634" fg:w="13"/><text x="67.2846%" y="399.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="67.0502%" y="309" width="0.0137%" height="15" fill="rgb(221,111,3)" fg:x="68650" fg:w="14"/><text x="67.3002%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="67.1049%" y="277" width="0.0195%" height="15" fill="rgb(228,175,21)" fg:x="68706" fg:w="20"/><text x="67.3549%" y="287.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="67.1049%" y="261" width="0.0195%" height="15" fill="rgb(228,174,43)" fg:x="68706" fg:w="20"/><text x="67.3549%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (76 samples, 0.07%)</title><rect x="67.0648%" y="309" width="0.0742%" height="15" fill="rgb(211,191,0)" fg:x="68665" fg:w="76"/><text x="67.3148%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (61 samples, 0.06%)</title><rect x="67.0795%" y="293" width="0.0596%" height="15" fill="rgb(253,117,3)" fg:x="68680" fg:w="61"/><text x="67.3295%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (14 samples, 0.01%)</title><rect x="67.1254%" y="277" width="0.0137%" height="15" fill="rgb(241,127,19)" fg:x="68727" fg:w="14"/><text x="67.3754%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (98 samples, 0.10%)</title><rect x="67.0502%" y="341" width="0.0957%" height="15" fill="rgb(218,103,12)" fg:x="68650" fg:w="98"/><text x="67.3002%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (98 samples, 0.10%)</title><rect x="67.0502%" y="325" width="0.0957%" height="15" fill="rgb(236,214,43)" fg:x="68650" fg:w="98"/><text x="67.3002%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (114 samples, 0.11%)</title><rect x="67.0502%" y="373" width="0.1113%" height="15" fill="rgb(244,144,19)" fg:x="68650" fg:w="114"/><text x="67.3002%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (114 samples, 0.11%)</title><rect x="67.0502%" y="357" width="0.1113%" height="15" fill="rgb(246,188,10)" fg:x="68650" fg:w="114"/><text x="67.3002%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="67.1459%" y="341" width="0.0156%" height="15" fill="rgb(212,193,33)" fg:x="68748" fg:w="16"/><text x="67.3959%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="67.1459%" y="325" width="0.0156%" height="15" fill="rgb(241,51,29)" fg:x="68748" fg:w="16"/><text x="67.3959%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.02%)</title><rect x="67.1459%" y="309" width="0.0156%" height="15" fill="rgb(211,58,19)" fg:x="68748" fg:w="16"/><text x="67.3959%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.02%)</title><rect x="67.1459%" y="293" width="0.0156%" height="15" fill="rgb(229,111,26)" fg:x="68748" fg:w="16"/><text x="67.3959%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (128 samples, 0.13%)</title><rect x="67.0473%" y="389" width="0.1250%" height="15" fill="rgb(213,115,40)" fg:x="68647" fg:w="128"/><text x="67.2973%" y="399.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="67.1615%" y="373" width="0.0107%" height="15" fill="rgb(209,56,44)" fg:x="68764" fg:w="11"/><text x="67.4115%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="67.1615%" y="357" width="0.0107%" height="15" fill="rgb(230,108,32)" fg:x="68764" fg:w="11"/><text x="67.4115%" y="367.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="67.1615%" y="341" width="0.0107%" height="15" fill="rgb(216,165,31)" fg:x="68764" fg:w="11"/><text x="67.4115%" y="351.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="67.1615%" y="325" width="0.0107%" height="15" fill="rgb(218,122,21)" fg:x="68764" fg:w="11"/><text x="67.4115%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (155 samples, 0.15%)</title><rect x="67.0306%" y="421" width="0.1514%" height="15" fill="rgb(223,224,47)" fg:x="68630" fg:w="155"/><text x="67.2806%" y="431.50"></text></g><g><title>rust_dealloc (151 samples, 0.15%)</title><rect x="67.0346%" y="405" width="0.1475%" height="15" fill="rgb(238,102,44)" fg:x="68634" fg:w="151"/><text x="67.2846%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (37 samples, 0.04%)</title><rect x="67.1830%" y="373" width="0.0361%" height="15" fill="rgb(236,46,40)" fg:x="68786" fg:w="37"/><text x="67.4330%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (26 samples, 0.03%)</title><rect x="67.1938%" y="357" width="0.0254%" height="15" fill="rgb(247,202,50)" fg:x="68797" fg:w="26"/><text x="67.4438%" y="367.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="67.2192%" y="373" width="0.0117%" height="15" fill="rgb(209,99,20)" fg:x="68823" fg:w="12"/><text x="67.4692%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (12 samples, 0.01%)</title><rect x="67.2192%" y="357" width="0.0117%" height="15" fill="rgb(252,27,34)" fg:x="68823" fg:w="12"/><text x="67.4692%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="67.2192%" y="341" width="0.0117%" height="15" fill="rgb(215,206,23)" fg:x="68823" fg:w="12"/><text x="67.4692%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (61 samples, 0.06%)</title><rect x="67.1830%" y="421" width="0.0596%" height="15" fill="rgb(212,135,36)" fg:x="68786" fg:w="61"/><text x="67.4330%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (61 samples, 0.06%)</title><rect x="67.1830%" y="405" width="0.0596%" height="15" fill="rgb(240,189,1)" fg:x="68786" fg:w="61"/><text x="67.4330%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.06%)</title><rect x="67.1830%" y="389" width="0.0596%" height="15" fill="rgb(242,56,20)" fg:x="68786" fg:w="61"/><text x="67.4330%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (12 samples, 0.01%)</title><rect x="67.2309%" y="373" width="0.0117%" height="15" fill="rgb(247,132,33)" fg:x="68835" fg:w="12"/><text x="67.4809%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="67.7817%" y="261" width="0.0244%" height="15" fill="rgb(208,149,11)" fg:x="69399" fg:w="25"/><text x="68.0317%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="67.7817%" y="245" width="0.0244%" height="15" fill="rgb(211,33,11)" fg:x="69399" fg:w="25"/><text x="68.0317%" y="255.50"></text></g><g><title>__rg_dealloc (25 samples, 0.02%)</title><rect x="67.7817%" y="229" width="0.0244%" height="15" fill="rgb(221,29,38)" fg:x="69399" fg:w="25"/><text x="68.0317%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (25 samples, 0.02%)</title><rect x="67.7817%" y="213" width="0.0244%" height="15" fill="rgb(206,182,49)" fg:x="69399" fg:w="25"/><text x="68.0317%" y="223.50"></text></g><g><title>core::mem::drop (818 samples, 0.80%)</title><rect x="67.7808%" y="309" width="0.7989%" height="15" fill="rgb(216,140,1)" fg:x="69398" fg:w="818"/><text x="68.0308%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (818 samples, 0.80%)</title><rect x="67.7808%" y="293" width="0.7989%" height="15" fill="rgb(232,57,40)" fg:x="69398" fg:w="818"/><text x="68.0308%" y="303.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (818 samples, 0.80%)</title><rect x="67.7808%" y="277" width="0.7989%" height="15" fill="rgb(224,186,18)" fg:x="69398" fg:w="818"/><text x="68.0308%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (784 samples, 0.77%)</title><rect x="67.8140%" y="261" width="0.7657%" height="15" fill="rgb(215,121,11)" fg:x="69432" fg:w="784"/><text x="68.0640%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (784 samples, 0.77%)</title><rect x="67.8140%" y="245" width="0.7657%" height="15" fill="rgb(245,147,10)" fg:x="69432" fg:w="784"/><text x="68.0640%" y="255.50"></text></g><g><title>aligned_size (17 samples, 0.02%)</title><rect x="68.6022%" y="165" width="0.0166%" height="15" fill="rgb(238,153,13)" fg:x="70239" fg:w="17"/><text x="68.8522%" y="175.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="68.6197%" y="85" width="0.0205%" height="15" fill="rgb(233,108,0)" fg:x="70257" fg:w="21"/><text x="68.8697%" y="95.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (39 samples, 0.04%)</title><rect x="68.7135%" y="53" width="0.0381%" height="15" fill="rgb(212,157,17)" fg:x="70353" fg:w="39"/><text x="68.9635%" y="63.50"></text></g><g><title> (39 samples, 0.04%)</title><rect x="68.7135%" y="37" width="0.0381%" height="15" fill="rgb(225,213,38)" fg:x="70353" fg:w="39"/><text x="68.9635%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (134 samples, 0.13%)</title><rect x="68.6432%" y="85" width="0.1309%" height="15" fill="rgb(248,16,11)" fg:x="70281" fg:w="134"/><text x="68.8932%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (126 samples, 0.12%)</title><rect x="68.6510%" y="69" width="0.1231%" height="15" fill="rgb(241,33,4)" fg:x="70289" fg:w="126"/><text x="68.9010%" y="79.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (16 samples, 0.02%)</title><rect x="68.7584%" y="53" width="0.0156%" height="15" fill="rgb(222,26,43)" fg:x="70399" fg:w="16"/><text x="69.0084%" y="63.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (190 samples, 0.19%)</title><rect x="68.6197%" y="117" width="0.1856%" height="15" fill="rgb(243,29,36)" fg:x="70257" fg:w="190"/><text x="68.8697%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (190 samples, 0.19%)</title><rect x="68.6197%" y="101" width="0.1856%" height="15" fill="rgb(241,9,27)" fg:x="70257" fg:w="190"/><text x="68.8697%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (31 samples, 0.03%)</title><rect x="68.7750%" y="85" width="0.0303%" height="15" fill="rgb(205,117,26)" fg:x="70416" fg:w="31"/><text x="69.0250%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (205 samples, 0.20%)</title><rect x="68.6197%" y="149" width="0.2002%" height="15" fill="rgb(209,80,39)" fg:x="70257" fg:w="205"/><text x="68.8697%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (205 samples, 0.20%)</title><rect x="68.6197%" y="133" width="0.2002%" height="15" fill="rgb(239,155,6)" fg:x="70257" fg:w="205"/><text x="68.8697%" y="143.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="68.8053%" y="117" width="0.0147%" height="15" fill="rgb(212,104,12)" fg:x="70447" fg:w="15"/><text x="69.0553%" y="127.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="68.8053%" y="101" width="0.0147%" height="15" fill="rgb(234,204,3)" fg:x="70447" fg:w="15"/><text x="69.0553%" y="111.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (15 samples, 0.01%)</title><rect x="68.8053%" y="85" width="0.0147%" height="15" fill="rgb(251,218,7)" fg:x="70447" fg:w="15"/><text x="69.0553%" y="95.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="68.8053%" y="69" width="0.0147%" height="15" fill="rgb(221,81,32)" fg:x="70447" fg:w="15"/><text x="69.0553%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (218 samples, 0.21%)</title><rect x="68.6188%" y="165" width="0.2129%" height="15" fill="rgb(214,152,26)" fg:x="70256" fg:w="218"/><text x="68.8688%" y="175.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="68.8200%" y="149" width="0.0117%" height="15" fill="rgb(223,22,3)" fg:x="70462" fg:w="12"/><text x="69.0700%" y="159.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="68.8200%" y="133" width="0.0117%" height="15" fill="rgb(207,174,7)" fg:x="70462" fg:w="12"/><text x="69.0700%" y="143.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="68.8200%" y="117" width="0.0117%" height="15" fill="rgb(224,19,52)" fg:x="70462" fg:w="12"/><text x="69.0700%" y="127.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="68.8200%" y="101" width="0.0117%" height="15" fill="rgb(228,24,14)" fg:x="70462" fg:w="12"/><text x="69.0700%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (247 samples, 0.24%)</title><rect x="68.6012%" y="245" width="0.2412%" height="15" fill="rgb(230,153,43)" fg:x="70238" fg:w="247"/><text x="68.8512%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (247 samples, 0.24%)</title><rect x="68.6012%" y="229" width="0.2412%" height="15" fill="rgb(231,106,12)" fg:x="70238" fg:w="247"/><text x="68.8512%" y="239.50"></text></g><g><title>__rg_dealloc (247 samples, 0.24%)</title><rect x="68.6012%" y="213" width="0.2412%" height="15" fill="rgb(215,92,2)" fg:x="70238" fg:w="247"/><text x="68.8512%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (247 samples, 0.24%)</title><rect x="68.6012%" y="197" width="0.2412%" height="15" fill="rgb(249,143,25)" fg:x="70238" fg:w="247"/><text x="68.8512%" y="207.50"></text></g><g><title>rust_dealloc (247 samples, 0.24%)</title><rect x="68.6012%" y="181" width="0.2412%" height="15" fill="rgb(252,7,35)" fg:x="70238" fg:w="247"/><text x="68.8512%" y="191.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="68.8317%" y="165" width="0.0107%" height="15" fill="rgb(216,69,40)" fg:x="70474" fg:w="11"/><text x="69.0817%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,093 samples, 1.07%)</title><rect x="67.7759%" y="325" width="1.0675%" height="15" fill="rgb(240,36,33)" fg:x="69393" fg:w="1093"/><text x="68.0259%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (270 samples, 0.26%)</title><rect x="68.5797%" y="309" width="0.2637%" height="15" fill="rgb(231,128,14)" fg:x="70216" fg:w="270"/><text x="68.8297%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (270 samples, 0.26%)</title><rect x="68.5797%" y="293" width="0.2637%" height="15" fill="rgb(245,143,14)" fg:x="70216" fg:w="270"/><text x="68.8297%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (270 samples, 0.26%)</title><rect x="68.5797%" y="277" width="0.2637%" height="15" fill="rgb(222,130,28)" fg:x="70216" fg:w="270"/><text x="68.8297%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270 samples, 0.26%)</title><rect x="68.5797%" y="261" width="0.2637%" height="15" fill="rgb(212,10,48)" fg:x="70216" fg:w="270"/><text x="68.8297%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,197 samples, 1.17%)</title><rect x="68.8434%" y="325" width="1.1691%" height="15" fill="rgb(254,118,45)" fg:x="70486" fg:w="1197"/><text x="69.0934%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,197 samples, 1.17%)</title><rect x="68.8434%" y="309" width="1.1691%" height="15" fill="rgb(228,6,45)" fg:x="70486" fg:w="1197"/><text x="69.0934%" y="319.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="70.0398%" y="293" width="0.0127%" height="15" fill="rgb(241,18,35)" fg:x="71711" fg:w="13"/><text x="70.2898%" y="303.50"></text></g><g><title>sizeclass_to_size (20 samples, 0.02%)</title><rect x="70.0613%" y="229" width="0.0195%" height="15" fill="rgb(227,214,53)" fg:x="71733" fg:w="20"/><text x="70.3113%" y="239.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (20 samples, 0.02%)</title><rect x="70.0613%" y="213" width="0.0195%" height="15" fill="rgb(224,107,51)" fg:x="71733" fg:w="20"/><text x="70.3113%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="70.1082%" y="197" width="0.0205%" height="15" fill="rgb(248,60,28)" fg:x="71781" fg:w="21"/><text x="70.3582%" y="207.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="70.1082%" y="181" width="0.0205%" height="15" fill="rgb(249,101,23)" fg:x="71781" fg:w="21"/><text x="70.3582%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (60 samples, 0.06%)</title><rect x="70.0809%" y="229" width="0.0586%" height="15" fill="rgb(228,51,19)" fg:x="71753" fg:w="60"/><text x="70.3309%" y="239.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (49 samples, 0.05%)</title><rect x="70.0916%" y="213" width="0.0479%" height="15" fill="rgb(213,20,6)" fg:x="71764" fg:w="49"/><text x="70.3416%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="70.1287%" y="197" width="0.0107%" height="15" fill="rgb(212,124,10)" fg:x="71802" fg:w="11"/><text x="70.3787%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (115 samples, 0.11%)</title><rect x="70.0320%" y="309" width="0.1123%" height="15" fill="rgb(248,3,40)" fg:x="71703" fg:w="115"/><text x="70.2820%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (94 samples, 0.09%)</title><rect x="70.0525%" y="293" width="0.0918%" height="15" fill="rgb(223,178,23)" fg:x="71724" fg:w="94"/><text x="70.3025%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (94 samples, 0.09%)</title><rect x="70.0525%" y="277" width="0.0918%" height="15" fill="rgb(240,132,45)" fg:x="71724" fg:w="94"/><text x="70.3025%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (94 samples, 0.09%)</title><rect x="70.0525%" y="261" width="0.0918%" height="15" fill="rgb(245,164,36)" fg:x="71724" fg:w="94"/><text x="70.3025%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (94 samples, 0.09%)</title><rect x="70.0525%" y="245" width="0.0918%" height="15" fill="rgb(231,188,53)" fg:x="71724" fg:w="94"/><text x="70.3025%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,972 samples, 2.90%)</title><rect x="67.2426%" y="389" width="2.9027%" height="15" fill="rgb(237,198,39)" fg:x="68847" fg:w="2972"/><text x="67.4926%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,956 samples, 2.89%)</title><rect x="67.2582%" y="373" width="2.8871%" height="15" fill="rgb(223,120,35)" fg:x="68863" fg:w="2956"/><text x="67.5082%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,945 samples, 2.88%)</title><rect x="67.2690%" y="357" width="2.8764%" height="15" fill="rgb(253,107,49)" fg:x="68874" fg:w="2945"/><text x="67.5190%" y="367.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,945 samples, 2.88%)</title><rect x="67.2690%" y="341" width="2.8764%" height="15" fill="rgb(216,44,31)" fg:x="68874" fg:w="2945"/><text x="67.5190%" y="351.50">&lt;a..</text></g><g><title>rust_dealloc (136 samples, 0.13%)</title><rect x="70.0125%" y="325" width="0.1328%" height="15" fill="rgb(253,87,21)" fg:x="71683" fg:w="136"/><text x="70.2625%" y="335.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="70.1502%" y="277" width="0.0137%" height="15" fill="rgb(226,18,2)" fg:x="71824" fg:w="14"/><text x="70.4002%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (13 samples, 0.01%)</title><rect x="70.1854%" y="197" width="0.0127%" height="15" fill="rgb(216,8,46)" fg:x="71860" fg:w="13"/><text x="70.4354%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="70.2352%" y="165" width="0.0147%" height="15" fill="rgb(226,140,39)" fg:x="71911" fg:w="15"/><text x="70.4852%" y="175.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="70.2352%" y="149" width="0.0147%" height="15" fill="rgb(221,194,54)" fg:x="71911" fg:w="15"/><text x="70.4852%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (68 samples, 0.07%)</title><rect x="70.1981%" y="197" width="0.0664%" height="15" fill="rgb(213,92,11)" fg:x="71873" fg:w="68"/><text x="70.4481%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (52 samples, 0.05%)</title><rect x="70.2137%" y="181" width="0.0508%" height="15" fill="rgb(229,162,46)" fg:x="71889" fg:w="52"/><text x="70.4637%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (15 samples, 0.01%)</title><rect x="70.2498%" y="165" width="0.0147%" height="15" fill="rgb(214,111,36)" fg:x="71926" fg:w="15"/><text x="70.4998%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (97 samples, 0.09%)</title><rect x="70.1795%" y="229" width="0.0947%" height="15" fill="rgb(207,6,21)" fg:x="71854" fg:w="97"/><text x="70.4295%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (97 samples, 0.09%)</title><rect x="70.1795%" y="213" width="0.0947%" height="15" fill="rgb(213,127,38)" fg:x="71854" fg:w="97"/><text x="70.4295%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (110 samples, 0.11%)</title><rect x="70.1795%" y="261" width="0.1074%" height="15" fill="rgb(238,118,32)" fg:x="71854" fg:w="110"/><text x="70.4295%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (110 samples, 0.11%)</title><rect x="70.1795%" y="245" width="0.1074%" height="15" fill="rgb(240,139,39)" fg:x="71854" fg:w="110"/><text x="70.4295%" y="255.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="70.2743%" y="229" width="0.0127%" height="15" fill="rgb(235,10,37)" fg:x="71951" fg:w="13"/><text x="70.5243%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="70.2743%" y="213" width="0.0127%" height="15" fill="rgb(249,171,38)" fg:x="71951" fg:w="13"/><text x="70.5243%" y="223.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="70.2743%" y="197" width="0.0127%" height="15" fill="rgb(242,144,32)" fg:x="71951" fg:w="13"/><text x="70.5243%" y="207.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="70.2743%" y="181" width="0.0127%" height="15" fill="rgb(217,117,21)" fg:x="71951" fg:w="13"/><text x="70.5243%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (127 samples, 0.12%)</title><rect x="70.1639%" y="277" width="0.1240%" height="15" fill="rgb(249,87,1)" fg:x="71838" fg:w="127"/><text x="70.4139%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (147 samples, 0.14%)</title><rect x="70.1453%" y="389" width="0.1436%" height="15" fill="rgb(248,196,48)" fg:x="71819" fg:w="147"/><text x="70.3953%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.14%)</title><rect x="70.1453%" y="373" width="0.1436%" height="15" fill="rgb(251,206,33)" fg:x="71819" fg:w="147"/><text x="70.3953%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (147 samples, 0.14%)</title><rect x="70.1453%" y="357" width="0.1436%" height="15" fill="rgb(232,141,28)" fg:x="71819" fg:w="147"/><text x="70.3953%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (142 samples, 0.14%)</title><rect x="70.1502%" y="341" width="0.1387%" height="15" fill="rgb(209,167,14)" fg:x="71824" fg:w="142"/><text x="70.4002%" y="351.50"></text></g><g><title>__rg_dealloc (142 samples, 0.14%)</title><rect x="70.1502%" y="325" width="0.1387%" height="15" fill="rgb(225,11,50)" fg:x="71824" fg:w="142"/><text x="70.4002%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (142 samples, 0.14%)</title><rect x="70.1502%" y="309" width="0.1387%" height="15" fill="rgb(209,50,20)" fg:x="71824" fg:w="142"/><text x="70.4002%" y="319.50"></text></g><g><title>rust_dealloc (142 samples, 0.14%)</title><rect x="70.1502%" y="293" width="0.1387%" height="15" fill="rgb(212,17,46)" fg:x="71824" fg:w="142"/><text x="70.4002%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (3,121 samples, 3.05%)</title><rect x="67.2426%" y="405" width="3.0483%" height="15" fill="rgb(216,101,39)" fg:x="68847" fg:w="3121"/><text x="67.4926%" y="415.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (13 samples, 0.01%)</title><rect x="70.2909%" y="389" width="0.0127%" height="15" fill="rgb(212,228,48)" fg:x="71968" fg:w="13"/><text x="70.5409%" y="399.50"></text></g><g><title>rust_dealloc (22 samples, 0.02%)</title><rect x="70.3153%" y="357" width="0.0215%" height="15" fill="rgb(250,6,50)" fg:x="71993" fg:w="22"/><text x="70.5653%" y="367.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="70.3368%" y="357" width="0.0156%" height="15" fill="rgb(250,160,48)" fg:x="72015" fg:w="16"/><text x="70.5868%" y="367.50"></text></g><g><title>sizeclass_to_size (17 samples, 0.02%)</title><rect x="70.3631%" y="293" width="0.0166%" height="15" fill="rgb(244,216,33)" fg:x="72042" fg:w="17"/><text x="70.6131%" y="303.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (17 samples, 0.02%)</title><rect x="70.3631%" y="277" width="0.0166%" height="15" fill="rgb(207,157,5)" fg:x="72042" fg:w="17"/><text x="70.6131%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="70.4129%" y="261" width="0.0127%" height="15" fill="rgb(228,199,8)" fg:x="72093" fg:w="13"/><text x="70.6629%" y="271.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="70.4129%" y="245" width="0.0127%" height="15" fill="rgb(227,80,20)" fg:x="72093" fg:w="13"/><text x="70.6629%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (65 samples, 0.06%)</title><rect x="70.3807%" y="293" width="0.0635%" height="15" fill="rgb(222,9,33)" fg:x="72060" fg:w="65"/><text x="70.6307%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (52 samples, 0.05%)</title><rect x="70.3934%" y="277" width="0.0508%" height="15" fill="rgb(239,44,28)" fg:x="72073" fg:w="52"/><text x="70.6434%" y="287.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (17 samples, 0.02%)</title><rect x="70.4276%" y="261" width="0.0166%" height="15" fill="rgb(249,187,43)" fg:x="72108" fg:w="17"/><text x="70.6776%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (3,523 samples, 3.44%)</title><rect x="67.0101%" y="437" width="3.4409%" height="15" fill="rgb(216,141,28)" fg:x="68609" fg:w="3523"/><text x="67.2601%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,285 samples, 3.21%)</title><rect x="67.2426%" y="421" width="3.2084%" height="15" fill="rgb(230,154,53)" fg:x="68847" fg:w="3285"/><text x="67.4926%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (164 samples, 0.16%)</title><rect x="70.2909%" y="405" width="0.1602%" height="15" fill="rgb(227,82,4)" fg:x="71968" fg:w="164"/><text x="70.5409%" y="415.50"></text></g><g><title>rust_dealloc (151 samples, 0.15%)</title><rect x="70.3036%" y="389" width="0.1475%" height="15" fill="rgb(220,107,16)" fg:x="71981" fg:w="151"/><text x="70.5536%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (139 samples, 0.14%)</title><rect x="70.3153%" y="373" width="0.1358%" height="15" fill="rgb(207,187,2)" fg:x="71993" fg:w="139"/><text x="70.5653%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (101 samples, 0.10%)</title><rect x="70.3524%" y="357" width="0.0986%" height="15" fill="rgb(210,162,52)" fg:x="72031" fg:w="101"/><text x="70.6024%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (101 samples, 0.10%)</title><rect x="70.3524%" y="341" width="0.0986%" height="15" fill="rgb(217,216,49)" fg:x="72031" fg:w="101"/><text x="70.6024%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (101 samples, 0.10%)</title><rect x="70.3524%" y="325" width="0.0986%" height="15" fill="rgb(218,146,49)" fg:x="72031" fg:w="101"/><text x="70.6024%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (101 samples, 0.10%)</title><rect x="70.3524%" y="309" width="0.0986%" height="15" fill="rgb(216,55,40)" fg:x="72031" fg:w="101"/><text x="70.6024%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (85 samples, 0.08%)</title><rect x="70.5243%" y="373" width="0.0830%" height="15" fill="rgb(208,196,21)" fg:x="72207" fg:w="85"/><text x="70.7743%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::ge (85 samples, 0.08%)</title><rect x="70.5243%" y="357" width="0.0830%" height="15" fill="rgb(242,117,42)" fg:x="72207" fg:w="85"/><text x="70.7743%" y="367.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (81 samples, 0.08%)</title><rect x="70.5282%" y="341" width="0.0791%" height="15" fill="rgb(210,11,23)" fg:x="72211" fg:w="81"/><text x="70.7782%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (81 samples, 0.08%)</title><rect x="70.5282%" y="325" width="0.0791%" height="15" fill="rgb(217,110,2)" fg:x="72211" fg:w="81"/><text x="70.7782%" y="335.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (81 samples, 0.08%)</title><rect x="70.5282%" y="309" width="0.0791%" height="15" fill="rgb(229,77,54)" fg:x="72211" fg:w="81"/><text x="70.7782%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (41 samples, 0.04%)</title><rect x="70.5673%" y="293" width="0.0400%" height="15" fill="rgb(218,53,16)" fg:x="72251" fg:w="41"/><text x="70.8173%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (183 samples, 0.18%)</title><rect x="70.4510%" y="421" width="0.1787%" height="15" fill="rgb(215,38,13)" fg:x="72132" fg:w="183"/><text x="70.7010%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (183 samples, 0.18%)</title><rect x="70.4510%" y="405" width="0.1787%" height="15" fill="rgb(235,42,18)" fg:x="72132" fg:w="183"/><text x="70.7010%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (183 samples, 0.18%)</title><rect x="70.4510%" y="389" width="0.1787%" height="15" fill="rgb(219,66,54)" fg:x="72132" fg:w="183"/><text x="70.7010%" y="399.50"></text></g><g><title>core::time::Duration::new (23 samples, 0.02%)</title><rect x="70.6073%" y="373" width="0.0225%" height="15" fill="rgb(222,205,4)" fg:x="72292" fg:w="23"/><text x="70.8573%" y="383.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1157" width="4.2848%" height="15" fill="rgb(227,213,46)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1167.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1141" width="4.2848%" height="15" fill="rgb(250,145,42)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1151.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1125" width="4.2848%" height="15" fill="rgb(219,15,2)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1135.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1109" width="4.2848%" height="15" fill="rgb(231,181,52)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1119.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1093" width="4.2848%" height="15" fill="rgb(235,1,42)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1103.50">std::..</text></g><g><title>std::panic::catch_unwind (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1077" width="4.2848%" height="15" fill="rgb(249,88,27)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1087.50">std::..</text></g><g><title>std::panicking::try (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1061" width="4.2848%" height="15" fill="rgb(235,145,16)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1071.50">std::..</text></g><g><title>std::panicking::try::do_call (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1045" width="4.2848%" height="15" fill="rgb(237,114,19)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1055.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1029" width="4.2848%" height="15" fill="rgb(238,51,50)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1039.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="1013" width="4.2848%" height="15" fill="rgb(205,194,25)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1023.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,387 samples, 4.28%)</title><rect x="67.0101%" y="997" width="4.2848%" height="15" fill="rgb(215,203,17)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="1007.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (4,387 samples, 4.28%)</title><rect x="67.0101%" y="981" width="4.2848%" height="15" fill="rgb(233,112,49)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="991.50">core:..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,387 samples, 4.28%)</title><rect x="67.0101%" y="965" width="4.2848%" height="15" fill="rgb(241,130,26)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="975.50">async..</text></g><g><title>std::panic::catch_unwind (4,387 samples, 4.28%)</title><rect x="67.0101%" y="949" width="4.2848%" height="15" fill="rgb(252,223,19)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="959.50">std::..</text></g><g><title>std::panicking::try (4,387 samples, 4.28%)</title><rect x="67.0101%" y="933" width="4.2848%" height="15" fill="rgb(211,95,25)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="943.50">std::..</text></g><g><title>std::panicking::try::do_call (4,387 samples, 4.28%)</title><rect x="67.0101%" y="917" width="4.2848%" height="15" fill="rgb(251,182,27)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="927.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="901" width="4.2848%" height="15" fill="rgb(238,24,4)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="911.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,387 samples, 4.28%)</title><rect x="67.0101%" y="885" width="4.2848%" height="15" fill="rgb(224,220,25)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="895.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,387 samples, 4.28%)</title><rect x="67.0101%" y="869" width="4.2848%" height="15" fill="rgb(239,133,26)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="879.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="853" width="4.2848%" height="15" fill="rgb(211,94,48)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="863.50">async..</text></g><g><title>async_global_executor::reactor::block_on (4,387 samples, 4.28%)</title><rect x="67.0101%" y="837" width="4.2848%" height="15" fill="rgb(239,87,6)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="847.50">async..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="821" width="4.2848%" height="15" fill="rgb(227,62,0)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="831.50">async..</text></g><g><title>async_io::driver::block_on (4,387 samples, 4.28%)</title><rect x="67.0101%" y="805" width="4.2848%" height="15" fill="rgb(211,226,4)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="815.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="789" width="4.2848%" height="15" fill="rgb(253,38,52)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="799.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="773" width="4.2848%" height="15" fill="rgb(229,126,40)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="783.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="757" width="4.2848%" height="15" fill="rgb(229,165,44)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="767.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="741" width="4.2848%" height="15" fill="rgb(247,95,47)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="751.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="725" width="4.2848%" height="15" fill="rgb(216,140,30)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="735.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="709" width="4.2848%" height="15" fill="rgb(246,214,8)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="719.50">async..</text></g><g><title>async_task::runnable::Runnable::run (4,387 samples, 4.28%)</title><rect x="67.0101%" y="693" width="4.2848%" height="15" fill="rgb(227,224,15)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="703.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,387 samples, 4.28%)</title><rect x="67.0101%" y="677" width="4.2848%" height="15" fill="rgb(233,175,4)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="687.50">async..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="661" width="4.2848%" height="15" fill="rgb(221,66,45)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="671.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="645" width="4.2848%" height="15" fill="rgb(221,178,18)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="655.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="629" width="4.2848%" height="15" fill="rgb(213,81,29)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="639.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="613" width="4.2848%" height="15" fill="rgb(220,89,49)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="623.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,387 samples, 4.28%)</title><rect x="67.0101%" y="597" width="4.2848%" height="15" fill="rgb(227,60,33)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="607.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,387 samples, 4.28%)</title><rect x="67.0101%" y="581" width="4.2848%" height="15" fill="rgb(205,113,12)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="591.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,387 samples, 4.28%)</title><rect x="67.0101%" y="565" width="4.2848%" height="15" fill="rgb(211,32,1)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="575.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="549" width="4.2848%" height="15" fill="rgb(246,2,12)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="559.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="533" width="4.2848%" height="15" fill="rgb(243,37,27)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="543.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="517" width="4.2848%" height="15" fill="rgb(248,211,31)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="527.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="501" width="4.2848%" height="15" fill="rgb(242,146,47)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="511.50">tremo..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="485" width="4.2848%" height="15" fill="rgb(206,70,20)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="495.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,387 samples, 4.28%)</title><rect x="67.0101%" y="469" width="4.2848%" height="15" fill="rgb(215,10,51)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="479.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,387 samples, 4.28%)</title><rect x="67.0101%" y="453" width="4.2848%" height="15" fill="rgb(243,178,53)" fg:x="68609" fg:w="4387"/><text x="67.2601%" y="463.50">&lt;trem..</text></g><g><title>tremor_common::time::nanotime (864 samples, 0.84%)</title><rect x="70.4510%" y="437" width="0.8439%" height="15" fill="rgb(233,221,20)" fg:x="72132" fg:w="864"/><text x="70.7010%" y="447.50"></text></g><g><title>std::time::SystemTime::now (681 samples, 0.67%)</title><rect x="70.6298%" y="421" width="0.6651%" height="15" fill="rgb(218,95,35)" fg:x="72315" fg:w="681"/><text x="70.8798%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (681 samples, 0.67%)</title><rect x="70.6298%" y="405" width="0.6651%" height="15" fill="rgb(229,13,5)" fg:x="72315" fg:w="681"/><text x="70.8798%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::now (681 samples, 0.67%)</title><rect x="70.6298%" y="389" width="0.6651%" height="15" fill="rgb(252,164,30)" fg:x="72315" fg:w="681"/><text x="70.8798%" y="399.50"></text></g><g><title>__clock_gettime_2 (681 samples, 0.67%)</title><rect x="70.6298%" y="373" width="0.6651%" height="15" fill="rgb(232,68,36)" fg:x="72315" fg:w="681"/><text x="70.8798%" y="383.50"></text></g><g><title>__vdso_clock_gettime (681 samples, 0.67%)</title><rect x="70.6298%" y="357" width="0.6651%" height="15" fill="rgb(219,59,54)" fg:x="72315" fg:w="681"/><text x="70.8798%" y="367.50"></text></g><g><title>[[vdso]] (454 samples, 0.44%)</title><rect x="70.8515%" y="341" width="0.4434%" height="15" fill="rgb(250,92,33)" fg:x="72542" fg:w="454"/><text x="71.1015%" y="351.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (65 samples, 0.06%)</title><rect x="71.2949%" y="1157" width="0.0635%" height="15" fill="rgb(229,162,54)" fg:x="72996" fg:w="65"/><text x="71.5449%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (880 samples, 0.86%)</title><rect x="71.4580%" y="581" width="0.8595%" height="15" fill="rgb(244,114,52)" fg:x="73163" fg:w="880"/><text x="71.7080%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (932 samples, 0.91%)</title><rect x="71.4199%" y="597" width="0.9103%" height="15" fill="rgb(212,211,43)" fg:x="73124" fg:w="932"/><text x="71.6699%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="72.3175%" y="581" width="0.0127%" height="15" fill="rgb(226,147,8)" fg:x="74043" fg:w="13"/><text x="72.5675%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,448 samples, 1.41%)</title><rect x="71.3848%" y="613" width="1.4143%" height="15" fill="rgb(226,23,13)" fg:x="73088" fg:w="1448"/><text x="71.6348%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (480 samples, 0.47%)</title><rect x="72.3302%" y="597" width="0.4688%" height="15" fill="rgb(240,63,4)" fg:x="74056" fg:w="480"/><text x="72.5802%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,488 samples, 1.45%)</title><rect x="71.3584%" y="645" width="1.4533%" height="15" fill="rgb(221,1,32)" fg:x="73061" fg:w="1488"/><text x="71.6084%" y="655.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,488 samples, 1.45%)</title><rect x="71.3584%" y="629" width="1.4533%" height="15" fill="rgb(242,117,10)" fg:x="73061" fg:w="1488"/><text x="71.6084%" y="639.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="72.7990%" y="613" width="0.0127%" height="15" fill="rgb(249,172,44)" fg:x="74536" fg:w="13"/><text x="73.0490%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.05%)</title><rect x="72.9299%" y="453" width="0.0459%" height="15" fill="rgb(244,46,45)" fg:x="74670" fg:w="47"/><text x="73.1799%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (41 samples, 0.04%)</title><rect x="72.9358%" y="437" width="0.0400%" height="15" fill="rgb(206,43,17)" fg:x="74676" fg:w="41"/><text x="73.1858%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,668 samples, 1.63%)</title><rect x="71.3584%" y="661" width="1.6291%" height="15" fill="rgb(239,218,39)" fg:x="73061" fg:w="1668"/><text x="71.6084%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (180 samples, 0.18%)</title><rect x="72.8117%" y="645" width="0.1758%" height="15" fill="rgb(208,169,54)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.18%)</title><rect x="72.8117%" y="629" width="0.1758%" height="15" fill="rgb(247,25,42)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (180 samples, 0.18%)</title><rect x="72.8117%" y="613" width="0.1758%" height="15" fill="rgb(226,23,31)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (180 samples, 0.18%)</title><rect x="72.8117%" y="597" width="0.1758%" height="15" fill="rgb(247,16,28)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (180 samples, 0.18%)</title><rect x="72.8117%" y="581" width="0.1758%" height="15" fill="rgb(231,147,38)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (180 samples, 0.18%)</title><rect x="72.8117%" y="565" width="0.1758%" height="15" fill="rgb(253,81,48)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (180 samples, 0.18%)</title><rect x="72.8117%" y="549" width="0.1758%" height="15" fill="rgb(249,222,43)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (180 samples, 0.18%)</title><rect x="72.8117%" y="533" width="0.1758%" height="15" fill="rgb(221,3,27)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (180 samples, 0.18%)</title><rect x="72.8117%" y="517" width="0.1758%" height="15" fill="rgb(228,180,5)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (180 samples, 0.18%)</title><rect x="72.8117%" y="501" width="0.1758%" height="15" fill="rgb(227,131,42)" fg:x="74549" fg:w="180"/><text x="73.0617%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (59 samples, 0.06%)</title><rect x="72.9299%" y="485" width="0.0576%" height="15" fill="rgb(212,3,39)" fg:x="74670" fg:w="59"/><text x="73.1799%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (59 samples, 0.06%)</title><rect x="72.9299%" y="469" width="0.0576%" height="15" fill="rgb(226,45,5)" fg:x="74670" fg:w="59"/><text x="73.1799%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (12 samples, 0.01%)</title><rect x="72.9758%" y="453" width="0.0117%" height="15" fill="rgb(215,167,45)" fg:x="74717" fg:w="12"/><text x="73.2258%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="72.9758%" y="437" width="0.0117%" height="15" fill="rgb(250,218,53)" fg:x="74717" fg:w="12"/><text x="73.2258%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="72.9768%" y="421" width="0.0107%" height="15" fill="rgb(207,140,0)" fg:x="74718" fg:w="11"/><text x="73.2268%" y="431.50"></text></g><g><title>rust_alloc (16 samples, 0.02%)</title><rect x="72.9983%" y="389" width="0.0156%" height="15" fill="rgb(238,133,51)" fg:x="74740" fg:w="16"/><text x="73.2483%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (290 samples, 0.28%)</title><rect x="72.9973%" y="421" width="0.2832%" height="15" fill="rgb(218,203,53)" fg:x="74739" fg:w="290"/><text x="73.2473%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (289 samples, 0.28%)</title><rect x="72.9983%" y="405" width="0.2823%" height="15" fill="rgb(226,184,25)" fg:x="74740" fg:w="289"/><text x="73.2483%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (268 samples, 0.26%)</title><rect x="73.0188%" y="389" width="0.2618%" height="15" fill="rgb(231,121,21)" fg:x="74761" fg:w="268"/><text x="73.2688%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (238 samples, 0.23%)</title><rect x="73.0481%" y="373" width="0.2325%" height="15" fill="rgb(251,14,34)" fg:x="74791" fg:w="238"/><text x="73.2981%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (238 samples, 0.23%)</title><rect x="73.0481%" y="357" width="0.2325%" height="15" fill="rgb(249,193,11)" fg:x="74791" fg:w="238"/><text x="73.2981%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (302 samples, 0.29%)</title><rect x="72.9875%" y="645" width="0.2950%" height="15" fill="rgb(220,172,37)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (302 samples, 0.29%)</title><rect x="72.9875%" y="629" width="0.2950%" height="15" fill="rgb(231,229,43)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (302 samples, 0.29%)</title><rect x="72.9875%" y="613" width="0.2950%" height="15" fill="rgb(250,161,5)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (302 samples, 0.29%)</title><rect x="72.9875%" y="597" width="0.2950%" height="15" fill="rgb(218,225,18)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="607.50"></text></g><g><title>value_trait::Builder::object (302 samples, 0.29%)</title><rect x="72.9875%" y="581" width="0.2950%" height="15" fill="rgb(245,45,42)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (302 samples, 0.29%)</title><rect x="72.9875%" y="565" width="0.2950%" height="15" fill="rgb(211,115,1)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (302 samples, 0.29%)</title><rect x="72.9875%" y="549" width="0.2950%" height="15" fill="rgb(248,133,52)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (302 samples, 0.29%)</title><rect x="72.9875%" y="533" width="0.2950%" height="15" fill="rgb(238,100,21)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (302 samples, 0.29%)</title><rect x="72.9875%" y="517" width="0.2950%" height="15" fill="rgb(247,144,11)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (302 samples, 0.29%)</title><rect x="72.9875%" y="501" width="0.2950%" height="15" fill="rgb(206,164,16)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="511.50"></text></g><g><title>alloc::alloc::alloc (302 samples, 0.29%)</title><rect x="72.9875%" y="485" width="0.2950%" height="15" fill="rgb(222,34,3)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="495.50"></text></g><g><title>__rg_alloc (302 samples, 0.29%)</title><rect x="72.9875%" y="469" width="0.2950%" height="15" fill="rgb(248,82,4)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (302 samples, 0.29%)</title><rect x="72.9875%" y="453" width="0.2950%" height="15" fill="rgb(228,81,46)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="463.50"></text></g><g><title>rust_alloc (302 samples, 0.29%)</title><rect x="72.9875%" y="437" width="0.2950%" height="15" fill="rgb(227,67,47)" fg:x="74729" fg:w="302"/><text x="73.2375%" y="447.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="73.2971%" y="469" width="0.0127%" height="15" fill="rgb(215,93,53)" fg:x="75046" fg:w="13"/><text x="73.5471%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="73.3186%" y="453" width="0.0147%" height="15" fill="rgb(248,194,39)" fg:x="75068" fg:w="15"/><text x="73.5686%" y="463.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (13 samples, 0.01%)</title><rect x="73.3206%" y="437" width="0.0127%" height="15" fill="rgb(215,5,19)" fg:x="75070" fg:w="13"/><text x="73.5706%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::empty (14 samples, 0.01%)</title><rect x="73.3333%" y="453" width="0.0137%" height="15" fill="rgb(226,215,51)" fg:x="75083" fg:w="14"/><text x="73.5833%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (14 samples, 0.01%)</title><rect x="73.3333%" y="437" width="0.0137%" height="15" fill="rgb(225,56,26)" fg:x="75083" fg:w="14"/><text x="73.5833%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="73.2971%" y="501" width="0.0986%" height="15" fill="rgb(222,75,29)" fg:x="75046" fg:w="101"/><text x="73.5471%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="73.2971%" y="485" width="0.0986%" height="15" fill="rgb(236,139,6)" fg:x="75046" fg:w="101"/><text x="73.5471%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (84 samples, 0.08%)</title><rect x="73.3137%" y="469" width="0.0820%" height="15" fill="rgb(223,137,36)" fg:x="75063" fg:w="84"/><text x="73.5637%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (50 samples, 0.05%)</title><rect x="73.3469%" y="453" width="0.0488%" height="15" fill="rgb(226,99,2)" fg:x="75097" fg:w="50"/><text x="73.5969%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (50 samples, 0.05%)</title><rect x="73.3469%" y="437" width="0.0488%" height="15" fill="rgb(206,133,23)" fg:x="75097" fg:w="50"/><text x="73.5969%" y="447.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1157" width="2.0393%" height="15" fill="rgb(243,173,15)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1167.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1141" width="2.0393%" height="15" fill="rgb(228,69,28)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1151.50">c..</text></g><g><title>async_global_executor::threading::thread_main_loop (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1125" width="2.0393%" height="15" fill="rgb(212,51,22)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1135.50">a..</text></g><g><title>std::panic::catch_unwind (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1109" width="2.0393%" height="15" fill="rgb(227,113,0)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1119.50">s..</text></g><g><title>std::panicking::try (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1093" width="2.0393%" height="15" fill="rgb(252,84,27)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1103.50">s..</text></g><g><title>std::panicking::try::do_call (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1077" width="2.0393%" height="15" fill="rgb(223,145,39)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1087.50">s..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1061" width="2.0393%" height="15" fill="rgb(239,219,30)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1071.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1045" width="2.0393%" height="15" fill="rgb(224,196,39)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1055.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1029" width="2.0393%" height="15" fill="rgb(205,35,43)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1039.50">s..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (2,088 samples, 2.04%)</title><rect x="71.3584%" y="1013" width="2.0393%" height="15" fill="rgb(228,201,21)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1023.50">a..</text></g><g><title>async_global_executor::reactor::block_on (2,088 samples, 2.04%)</title><rect x="71.3584%" y="997" width="2.0393%" height="15" fill="rgb(237,118,16)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="1007.50">a..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,088 samples, 2.04%)</title><rect x="71.3584%" y="981" width="2.0393%" height="15" fill="rgb(241,17,19)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="991.50">a..</text></g><g><title>async_io::driver::block_on (2,088 samples, 2.04%)</title><rect x="71.3584%" y="965" width="2.0393%" height="15" fill="rgb(214,10,25)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="975.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.04%)</title><rect x="71.3584%" y="949" width="2.0393%" height="15" fill="rgb(238,37,29)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="959.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.04%)</title><rect x="71.3584%" y="933" width="2.0393%" height="15" fill="rgb(253,83,25)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="943.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (2,088 samples, 2.04%)</title><rect x="71.3584%" y="917" width="2.0393%" height="15" fill="rgb(234,192,12)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="927.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.04%)</title><rect x="71.3584%" y="901" width="2.0393%" height="15" fill="rgb(241,216,45)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="911.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.04%)</title><rect x="71.3584%" y="885" width="2.0393%" height="15" fill="rgb(242,22,33)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="895.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,088 samples, 2.04%)</title><rect x="71.3584%" y="869" width="2.0393%" height="15" fill="rgb(231,105,49)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="879.50">a..</text></g><g><title>async_task::runnable::Runnable::run (2,088 samples, 2.04%)</title><rect x="71.3584%" y="853" width="2.0393%" height="15" fill="rgb(218,204,15)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="863.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,088 samples, 2.04%)</title><rect x="71.3584%" y="837" width="2.0393%" height="15" fill="rgb(235,138,41)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="847.50">a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.04%)</title><rect x="71.3584%" y="821" width="2.0393%" height="15" fill="rgb(246,0,9)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="831.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.04%)</title><rect x="71.3584%" y="805" width="2.0393%" height="15" fill="rgb(210,74,4)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="815.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,088 samples, 2.04%)</title><rect x="71.3584%" y="789" width="2.0393%" height="15" fill="rgb(250,60,41)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="799.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.04%)</title><rect x="71.3584%" y="773" width="2.0393%" height="15" fill="rgb(220,115,12)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="783.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,088 samples, 2.04%)</title><rect x="71.3584%" y="757" width="2.0393%" height="15" fill="rgb(237,100,13)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="767.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,088 samples, 2.04%)</title><rect x="71.3584%" y="741" width="2.0393%" height="15" fill="rgb(213,55,26)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="751.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,088 samples, 2.04%)</title><rect x="71.3584%" y="725" width="2.0393%" height="15" fill="rgb(216,17,4)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="735.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,088 samples, 2.04%)</title><rect x="71.3584%" y="709" width="2.0393%" height="15" fill="rgb(220,153,47)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="719.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,088 samples, 2.04%)</title><rect x="71.3584%" y="693" width="2.0393%" height="15" fill="rgb(215,131,9)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="703.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.04%)</title><rect x="71.3584%" y="677" width="2.0393%" height="15" fill="rgb(233,46,42)" fg:x="73061" fg:w="2088"/><text x="71.6084%" y="687.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (420 samples, 0.41%)</title><rect x="72.9875%" y="661" width="0.4102%" height="15" fill="rgb(226,86,7)" fg:x="74729" fg:w="420"/><text x="73.2375%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (118 samples, 0.12%)</title><rect x="73.2825%" y="645" width="0.1153%" height="15" fill="rgb(239,226,21)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (118 samples, 0.12%)</title><rect x="73.2825%" y="629" width="0.1153%" height="15" fill="rgb(244,137,22)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (118 samples, 0.12%)</title><rect x="73.2825%" y="613" width="0.1153%" height="15" fill="rgb(211,139,35)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (118 samples, 0.12%)</title><rect x="73.2825%" y="597" width="0.1153%" height="15" fill="rgb(214,62,50)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (118 samples, 0.12%)</title><rect x="73.2825%" y="581" width="0.1153%" height="15" fill="rgb(212,113,44)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="591.50"></text></g><g><title>alloc::alloc::alloc (118 samples, 0.12%)</title><rect x="73.2825%" y="565" width="0.1153%" height="15" fill="rgb(226,150,43)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="575.50"></text></g><g><title>__rg_alloc (118 samples, 0.12%)</title><rect x="73.2825%" y="549" width="0.1153%" height="15" fill="rgb(250,71,37)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (118 samples, 0.12%)</title><rect x="73.2825%" y="533" width="0.1153%" height="15" fill="rgb(219,76,19)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="543.50"></text></g><g><title>rust_alloc (118 samples, 0.12%)</title><rect x="73.2825%" y="517" width="0.1153%" height="15" fill="rgb(250,39,11)" fg:x="75031" fg:w="118"/><text x="73.5325%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="73.5696%" y="933" width="0.0195%" height="15" fill="rgb(230,64,31)" fg:x="75325" fg:w="20"/><text x="73.8196%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (20 samples, 0.02%)</title><rect x="73.5696%" y="917" width="0.0195%" height="15" fill="rgb(208,222,23)" fg:x="75325" fg:w="20"/><text x="73.8196%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="73.5696%" y="901" width="0.0195%" height="15" fill="rgb(227,125,18)" fg:x="75325" fg:w="20"/><text x="73.8196%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="73.5696%" y="885" width="0.0195%" height="15" fill="rgb(234,210,9)" fg:x="75325" fg:w="20"/><text x="73.8196%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.02%)</title><rect x="73.5940%" y="837" width="0.0156%" height="15" fill="rgb(217,127,24)" fg:x="75350" fg:w="16"/><text x="73.8440%" y="847.50"></text></g><g><title>__GI___lll_lock_wake (11 samples, 0.01%)</title><rect x="73.5989%" y="821" width="0.0107%" height="15" fill="rgb(239,141,48)" fg:x="75355" fg:w="11"/><text x="73.8489%" y="831.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="73.5940%" y="933" width="0.0176%" height="15" fill="rgb(227,109,8)" fg:x="75350" fg:w="18"/><text x="73.8440%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="73.5940%" y="917" width="0.0176%" height="15" fill="rgb(235,184,23)" fg:x="75350" fg:w="18"/><text x="73.8440%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (18 samples, 0.02%)</title><rect x="73.5940%" y="901" width="0.0176%" height="15" fill="rgb(227,226,48)" fg:x="75350" fg:w="18"/><text x="73.8440%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="73.5940%" y="885" width="0.0176%" height="15" fill="rgb(206,150,11)" fg:x="75350" fg:w="18"/><text x="73.8440%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="73.5940%" y="869" width="0.0176%" height="15" fill="rgb(254,2,33)" fg:x="75350" fg:w="18"/><text x="73.8440%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="73.5940%" y="853" width="0.0176%" height="15" fill="rgb(243,160,20)" fg:x="75350" fg:w="18"/><text x="73.8440%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (30 samples, 0.03%)</title><rect x="73.6116%" y="933" width="0.0293%" height="15" fill="rgb(218,208,30)" fg:x="75368" fg:w="30"/><text x="73.8616%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (29 samples, 0.03%)</title><rect x="73.6126%" y="917" width="0.0283%" height="15" fill="rgb(224,120,49)" fg:x="75369" fg:w="29"/><text x="73.8626%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="73.6126%" y="901" width="0.0283%" height="15" fill="rgb(246,12,2)" fg:x="75369" fg:w="29"/><text x="73.8626%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.03%)</title><rect x="73.6136%" y="885" width="0.0273%" height="15" fill="rgb(236,117,3)" fg:x="75370" fg:w="28"/><text x="73.8636%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.03%)</title><rect x="73.6146%" y="869" width="0.0264%" height="15" fill="rgb(216,128,52)" fg:x="75371" fg:w="27"/><text x="73.8646%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="73.6146%" y="853" width="0.0264%" height="15" fill="rgb(246,145,19)" fg:x="75371" fg:w="27"/><text x="73.8646%" y="863.50"></text></g><g><title>event_listener::Inner::lock (120 samples, 0.12%)</title><rect x="73.6409%" y="933" width="0.1172%" height="15" fill="rgb(222,11,46)" fg:x="75398" fg:w="120"/><text x="73.8909%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (120 samples, 0.12%)</title><rect x="73.6409%" y="917" width="0.1172%" height="15" fill="rgb(245,82,36)" fg:x="75398" fg:w="120"/><text x="73.8909%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (111 samples, 0.11%)</title><rect x="73.6497%" y="901" width="0.1084%" height="15" fill="rgb(250,73,51)" fg:x="75407" fg:w="111"/><text x="73.8997%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (103 samples, 0.10%)</title><rect x="73.6575%" y="885" width="0.1006%" height="15" fill="rgb(221,189,23)" fg:x="75415" fg:w="103"/><text x="73.9075%" y="895.50"></text></g><g><title>___pthread_mutex_lock (103 samples, 0.10%)</title><rect x="73.6575%" y="869" width="0.1006%" height="15" fill="rgb(210,33,7)" fg:x="75415" fg:w="103"/><text x="73.9075%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (32 samples, 0.03%)</title><rect x="73.7269%" y="853" width="0.0313%" height="15" fill="rgb(210,107,22)" fg:x="75486" fg:w="32"/><text x="73.9769%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (241 samples, 0.24%)</title><rect x="73.5618%" y="949" width="0.2354%" height="15" fill="rgb(222,116,37)" fg:x="75317" fg:w="241"/><text x="73.8118%" y="959.50"></text></g><g><title>event_listener::List::remove (40 samples, 0.04%)</title><rect x="73.7581%" y="933" width="0.0391%" height="15" fill="rgb(254,17,48)" fg:x="75518" fg:w="40"/><text x="74.0081%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (31 samples, 0.03%)</title><rect x="73.7669%" y="917" width="0.0303%" height="15" fill="rgb(224,36,32)" fg:x="75527" fg:w="31"/><text x="74.0169%" y="927.50"></text></g><g><title>core::mem::replace (31 samples, 0.03%)</title><rect x="73.7669%" y="901" width="0.0303%" height="15" fill="rgb(232,90,46)" fg:x="75527" fg:w="31"/><text x="74.0169%" y="911.50"></text></g><g><title>core::ptr::read (31 samples, 0.03%)</title><rect x="73.7669%" y="885" width="0.0303%" height="15" fill="rgb(241,66,40)" fg:x="75527" fg:w="31"/><text x="74.0169%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (63 samples, 0.06%)</title><rect x="73.8226%" y="933" width="0.0615%" height="15" fill="rgb(249,184,29)" fg:x="75584" fg:w="63"/><text x="74.0726%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (46 samples, 0.04%)</title><rect x="74.0140%" y="917" width="0.0449%" height="15" fill="rgb(231,181,1)" fg:x="75780" fg:w="46"/><text x="74.2640%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (44 samples, 0.04%)</title><rect x="74.0160%" y="901" width="0.0430%" height="15" fill="rgb(224,94,2)" fg:x="75782" fg:w="44"/><text x="74.2660%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (44 samples, 0.04%)</title><rect x="74.0160%" y="885" width="0.0430%" height="15" fill="rgb(229,170,15)" fg:x="75782" fg:w="44"/><text x="74.2660%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.04%)</title><rect x="74.0160%" y="869" width="0.0430%" height="15" fill="rgb(240,127,35)" fg:x="75782" fg:w="44"/><text x="74.2660%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (262 samples, 0.26%)</title><rect x="74.0668%" y="917" width="0.2559%" height="15" fill="rgb(248,196,34)" fg:x="75834" fg:w="262"/><text x="74.3168%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (262 samples, 0.26%)</title><rect x="74.0668%" y="901" width="0.2559%" height="15" fill="rgb(236,137,7)" fg:x="75834" fg:w="262"/><text x="74.3168%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (514 samples, 0.50%)</title><rect x="74.3227%" y="917" width="0.5020%" height="15" fill="rgb(235,127,16)" fg:x="76096" fg:w="514"/><text x="74.5727%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (513 samples, 0.50%)</title><rect x="74.3236%" y="901" width="0.5010%" height="15" fill="rgb(250,192,54)" fg:x="76097" fg:w="513"/><text x="74.5736%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (978 samples, 0.96%)</title><rect x="73.8841%" y="933" width="0.9552%" height="15" fill="rgb(218,98,20)" fg:x="75647" fg:w="978"/><text x="74.1341%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (15 samples, 0.01%)</title><rect x="74.8247%" y="917" width="0.0147%" height="15" fill="rgb(230,176,47)" fg:x="76610" fg:w="15"/><text x="75.0747%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_store (15 samples, 0.01%)</title><rect x="74.8247%" y="901" width="0.0147%" height="15" fill="rgb(244,2,33)" fg:x="76610" fg:w="15"/><text x="75.0747%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="74.8540%" y="917" width="0.0147%" height="15" fill="rgb(231,100,17)" fg:x="76640" fg:w="15"/><text x="75.1040%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="74.8540%" y="901" width="0.0147%" height="15" fill="rgb(245,23,12)" fg:x="76640" fg:w="15"/><text x="75.1040%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="74.8540%" y="885" width="0.0147%" height="15" fill="rgb(249,55,22)" fg:x="76640" fg:w="15"/><text x="75.1040%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="74.8550%" y="869" width="0.0137%" height="15" fill="rgb(207,134,9)" fg:x="76641" fg:w="14"/><text x="75.1050%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="74.8550%" y="853" width="0.0137%" height="15" fill="rgb(218,134,0)" fg:x="76641" fg:w="14"/><text x="75.1050%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="74.8550%" y="837" width="0.0137%" height="15" fill="rgb(213,212,33)" fg:x="76641" fg:w="14"/><text x="75.1050%" y="847.50"></text></g><g><title>event_listener::Inner::lock (20 samples, 0.02%)</title><rect x="74.8774%" y="917" width="0.0195%" height="15" fill="rgb(252,106,18)" fg:x="76664" fg:w="20"/><text x="75.1274%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="74.8774%" y="901" width="0.0195%" height="15" fill="rgb(208,126,42)" fg:x="76664" fg:w="20"/><text x="75.1274%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="74.8774%" y="885" width="0.0195%" height="15" fill="rgb(246,175,29)" fg:x="76664" fg:w="20"/><text x="75.1274%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="74.8784%" y="869" width="0.0186%" height="15" fill="rgb(215,13,50)" fg:x="76665" fg:w="19"/><text x="75.1284%" y="879.50"></text></g><g><title>___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="74.8784%" y="853" width="0.0186%" height="15" fill="rgb(216,172,15)" fg:x="76665" fg:w="19"/><text x="75.1284%" y="863.50"></text></g><g><title>parking::Unparker::unpark (20 samples, 0.02%)</title><rect x="74.9136%" y="773" width="0.0195%" height="15" fill="rgb(212,103,13)" fg:x="76701" fg:w="20"/><text x="75.1636%" y="783.50"></text></g><g><title>parking::Inner::unpark (17 samples, 0.02%)</title><rect x="74.9165%" y="757" width="0.0166%" height="15" fill="rgb(231,171,36)" fg:x="76704" fg:w="17"/><text x="75.1665%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (26 samples, 0.03%)</title><rect x="74.9087%" y="789" width="0.0254%" height="15" fill="rgb(250,123,20)" fg:x="76696" fg:w="26"/><text x="75.1587%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (28 samples, 0.03%)</title><rect x="74.9087%" y="821" width="0.0273%" height="15" fill="rgb(212,53,50)" fg:x="76696" fg:w="28"/><text x="75.1587%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (28 samples, 0.03%)</title><rect x="74.9087%" y="805" width="0.0273%" height="15" fill="rgb(243,54,12)" fg:x="76696" fg:w="28"/><text x="75.1587%" y="815.50"></text></g><g><title>async_executor::State::notify (37 samples, 0.04%)</title><rect x="74.9038%" y="837" width="0.0361%" height="15" fill="rgb(234,101,34)" fg:x="76691" fg:w="37"/><text x="75.1538%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (49 samples, 0.05%)</title><rect x="74.9038%" y="853" width="0.0479%" height="15" fill="rgb(254,67,22)" fg:x="76691" fg:w="49"/><text x="75.1538%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="74.9399%" y="837" width="0.0117%" height="15" fill="rgb(250,35,47)" fg:x="76728" fg:w="12"/><text x="75.1899%" y="847.50"></text></g><g><title>event_listener::List::notify (61 samples, 0.06%)</title><rect x="74.8970%" y="917" width="0.0596%" height="15" fill="rgb(226,126,38)" fg:x="76684" fg:w="61"/><text x="75.1470%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (57 samples, 0.06%)</title><rect x="74.9009%" y="901" width="0.0557%" height="15" fill="rgb(216,138,53)" fg:x="76688" fg:w="57"/><text x="75.1509%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (57 samples, 0.06%)</title><rect x="74.9009%" y="885" width="0.0557%" height="15" fill="rgb(246,199,43)" fg:x="76688" fg:w="57"/><text x="75.1509%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (54 samples, 0.05%)</title><rect x="74.9038%" y="869" width="0.0527%" height="15" fill="rgb(232,125,11)" fg:x="76691" fg:w="54"/><text x="75.1538%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,074 samples, 2.03%)</title><rect x="73.7972%" y="949" width="2.0257%" height="15" fill="rgb(218,219,45)" fg:x="75558" fg:w="2074"/><text x="74.0472%" y="959.50">a..</text></g><g><title>event_listener::Event::notify (1,007 samples, 0.98%)</title><rect x="74.8393%" y="933" width="0.9835%" height="15" fill="rgb(216,102,54)" fg:x="76625" fg:w="1007"/><text x="75.0893%" y="943.50"></text></g><g><title>event_listener::full_fence (887 samples, 0.87%)</title><rect x="74.9565%" y="917" width="0.8663%" height="15" fill="rgb(250,228,7)" fg:x="76745" fg:w="887"/><text x="75.2065%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (886 samples, 0.87%)</title><rect x="74.9575%" y="901" width="0.8654%" height="15" fill="rgb(226,125,25)" fg:x="76746" fg:w="886"/><text x="75.2075%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (886 samples, 0.87%)</title><rect x="74.9575%" y="885" width="0.8654%" height="15" fill="rgb(224,165,27)" fg:x="76746" fg:w="886"/><text x="75.2075%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (886 samples, 0.87%)</title><rect x="74.9575%" y="869" width="0.8654%" height="15" fill="rgb(233,86,3)" fg:x="76746" fg:w="886"/><text x="75.2075%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (31 samples, 0.03%)</title><rect x="75.8453%" y="901" width="0.0303%" height="15" fill="rgb(228,116,20)" fg:x="77655" fg:w="31"/><text x="76.0953%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (31 samples, 0.03%)</title><rect x="75.8453%" y="885" width="0.0303%" height="15" fill="rgb(209,192,17)" fg:x="77655" fg:w="31"/><text x="76.0953%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="75.8453%" y="869" width="0.0303%" height="15" fill="rgb(224,88,34)" fg:x="77655" fg:w="31"/><text x="76.0953%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.03%)</title><rect x="75.8463%" y="853" width="0.0293%" height="15" fill="rgb(233,38,6)" fg:x="77656" fg:w="30"/><text x="76.0963%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (29 samples, 0.03%)</title><rect x="75.8473%" y="837" width="0.0283%" height="15" fill="rgb(212,59,30)" fg:x="77657" fg:w="29"/><text x="76.0973%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (29 samples, 0.03%)</title><rect x="75.8473%" y="821" width="0.0283%" height="15" fill="rgb(213,80,3)" fg:x="77657" fg:w="29"/><text x="76.0973%" y="831.50"></text></g><g><title>event_listener::Inner::lock (80 samples, 0.08%)</title><rect x="75.8766%" y="901" width="0.0781%" height="15" fill="rgb(251,178,7)" fg:x="77687" fg:w="80"/><text x="76.1266%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (80 samples, 0.08%)</title><rect x="75.8766%" y="885" width="0.0781%" height="15" fill="rgb(213,154,26)" fg:x="77687" fg:w="80"/><text x="76.1266%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (75 samples, 0.07%)</title><rect x="75.8815%" y="869" width="0.0733%" height="15" fill="rgb(238,165,49)" fg:x="77692" fg:w="75"/><text x="76.1315%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (73 samples, 0.07%)</title><rect x="75.8834%" y="853" width="0.0713%" height="15" fill="rgb(248,91,46)" fg:x="77694" fg:w="73"/><text x="76.1334%" y="863.50"></text></g><g><title>___pthread_mutex_lock (73 samples, 0.07%)</title><rect x="75.8834%" y="837" width="0.0713%" height="15" fill="rgb(244,21,52)" fg:x="77694" fg:w="73"/><text x="76.1334%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (22 samples, 0.02%)</title><rect x="75.9332%" y="821" width="0.0215%" height="15" fill="rgb(247,122,20)" fg:x="77745" fg:w="22"/><text x="76.1832%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (119 samples, 0.12%)</title><rect x="75.8453%" y="917" width="0.1162%" height="15" fill="rgb(218,27,9)" fg:x="77655" fg:w="119"/><text x="76.0953%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (160 samples, 0.16%)</title><rect x="75.8268%" y="949" width="0.1563%" height="15" fill="rgb(246,7,6)" fg:x="77636" fg:w="160"/><text x="76.0768%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (141 samples, 0.14%)</title><rect x="75.8453%" y="933" width="0.1377%" height="15" fill="rgb(227,135,54)" fg:x="77655" fg:w="141"/><text x="76.0953%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (22 samples, 0.02%)</title><rect x="75.9616%" y="917" width="0.0215%" height="15" fill="rgb(247,14,11)" fg:x="77774" fg:w="22"/><text x="76.2116%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="75.9616%" y="901" width="0.0215%" height="15" fill="rgb(206,149,34)" fg:x="77774" fg:w="22"/><text x="76.2116%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="75.9616%" y="885" width="0.0215%" height="15" fill="rgb(227,228,4)" fg:x="77774" fg:w="22"/><text x="76.2116%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="75.9616%" y="869" width="0.0215%" height="15" fill="rgb(238,218,28)" fg:x="77774" fg:w="22"/><text x="76.2116%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="75.9840%" y="933" width="0.0283%" height="15" fill="rgb(252,86,40)" fg:x="77797" fg:w="29"/><text x="76.2340%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (29 samples, 0.03%)</title><rect x="75.9840%" y="917" width="0.0283%" height="15" fill="rgb(251,225,11)" fg:x="77797" fg:w="29"/><text x="76.2340%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (29 samples, 0.03%)</title><rect x="75.9840%" y="901" width="0.0283%" height="15" fill="rgb(206,46,49)" fg:x="77797" fg:w="29"/><text x="76.2340%" y="911.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (39 samples, 0.04%)</title><rect x="76.0133%" y="853" width="0.0381%" height="15" fill="rgb(245,128,24)" fg:x="77827" fg:w="39"/><text x="76.2633%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (41 samples, 0.04%)</title><rect x="76.0123%" y="933" width="0.0400%" height="15" fill="rgb(219,177,34)" fg:x="77826" fg:w="41"/><text x="76.2623%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (40 samples, 0.04%)</title><rect x="76.0133%" y="917" width="0.0391%" height="15" fill="rgb(218,60,48)" fg:x="77827" fg:w="40"/><text x="76.2633%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="76.0133%" y="901" width="0.0391%" height="15" fill="rgb(221,11,5)" fg:x="77827" fg:w="40"/><text x="76.2633%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="76.0133%" y="885" width="0.0391%" height="15" fill="rgb(220,148,13)" fg:x="77827" fg:w="40"/><text x="76.2633%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (40 samples, 0.04%)</title><rect x="76.0133%" y="869" width="0.0391%" height="15" fill="rgb(210,16,3)" fg:x="77827" fg:w="40"/><text x="76.2633%" y="879.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.03%)</title><rect x="76.0534%" y="933" width="0.0293%" height="15" fill="rgb(236,80,2)" fg:x="77868" fg:w="30"/><text x="76.3034%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="76.0534%" y="917" width="0.0293%" height="15" fill="rgb(239,129,19)" fg:x="77868" fg:w="30"/><text x="76.3034%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="76.0534%" y="901" width="0.0293%" height="15" fill="rgb(220,106,35)" fg:x="77868" fg:w="30"/><text x="76.3034%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="76.0534%" y="885" width="0.0293%" height="15" fill="rgb(252,139,45)" fg:x="77868" fg:w="30"/><text x="76.3034%" y="895.50"></text></g><g><title>___pthread_mutex_lock (29 samples, 0.03%)</title><rect x="76.0543%" y="869" width="0.0283%" height="15" fill="rgb(229,8,36)" fg:x="77869" fg:w="29"/><text x="76.3043%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,631 samples, 2.57%)</title><rect x="73.5227%" y="965" width="2.5697%" height="15" fill="rgb(230,126,33)" fg:x="75277" fg:w="2631"/><text x="73.7727%" y="975.50">&lt;a..</text></g><g><title>event_listener::Event::listen (112 samples, 0.11%)</title><rect x="75.9830%" y="949" width="0.1094%" height="15" fill="rgb(239,140,21)" fg:x="77796" fg:w="112"/><text x="76.2330%" y="959.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.02%)</title><rect x="76.0924%" y="965" width="0.0156%" height="15" fill="rgb(254,104,9)" fg:x="77908" fg:w="16"/><text x="76.3424%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (878 samples, 0.86%)</title><rect x="76.1081%" y="965" width="0.8575%" height="15" fill="rgb(239,52,14)" fg:x="77924" fg:w="878"/><text x="76.3581%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (249 samples, 0.24%)</title><rect x="76.9783%" y="949" width="0.2432%" height="15" fill="rgb(208,227,44)" fg:x="78815" fg:w="249"/><text x="77.2283%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (680 samples, 0.66%)</title><rect x="77.2381%" y="917" width="0.6642%" height="15" fill="rgb(246,18,19)" fg:x="79081" fg:w="680"/><text x="77.4881%" y="927.50"></text></g><g><title>rust_dealloc (16 samples, 0.02%)</title><rect x="77.9355%" y="805" width="0.0156%" height="15" fill="rgb(235,228,25)" fg:x="79795" fg:w="16"/><text x="78.1855%" y="815.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="77.9589%" y="741" width="0.0147%" height="15" fill="rgb(240,156,20)" fg:x="79819" fg:w="15"/><text x="78.2089%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (28 samples, 0.03%)</title><rect x="78.0429%" y="709" width="0.0273%" height="15" fill="rgb(224,8,20)" fg:x="79905" fg:w="28"/><text x="78.2929%" y="719.50"></text></g><g><title> (28 samples, 0.03%)</title><rect x="78.0429%" y="693" width="0.0273%" height="15" fill="rgb(214,12,52)" fg:x="79905" fg:w="28"/><text x="78.2929%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (102 samples, 0.10%)</title><rect x="77.9853%" y="741" width="0.0996%" height="15" fill="rgb(211,220,47)" fg:x="79846" fg:w="102"/><text x="78.2353%" y="751.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (85 samples, 0.08%)</title><rect x="78.0019%" y="725" width="0.0830%" height="15" fill="rgb(250,173,5)" fg:x="79863" fg:w="85"/><text x="78.2519%" y="735.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="78.0732%" y="709" width="0.0117%" height="15" fill="rgb(250,125,52)" fg:x="79936" fg:w="12"/><text x="78.3232%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (181 samples, 0.18%)</title><rect x="77.9560%" y="773" width="0.1768%" height="15" fill="rgb(209,133,18)" fg:x="79816" fg:w="181"/><text x="78.2060%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (181 samples, 0.18%)</title><rect x="77.9560%" y="757" width="0.1768%" height="15" fill="rgb(216,173,22)" fg:x="79816" fg:w="181"/><text x="78.2060%" y="767.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (49 samples, 0.05%)</title><rect x="78.0849%" y="741" width="0.0479%" height="15" fill="rgb(205,3,22)" fg:x="79948" fg:w="49"/><text x="78.3349%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (187 samples, 0.18%)</title><rect x="77.9560%" y="805" width="0.1826%" height="15" fill="rgb(248,22,20)" fg:x="79816" fg:w="187"/><text x="78.2060%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (187 samples, 0.18%)</title><rect x="77.9560%" y="789" width="0.1826%" height="15" fill="rgb(233,6,29)" fg:x="79816" fg:w="187"/><text x="78.2060%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (221 samples, 0.22%)</title><rect x="77.9276%" y="821" width="0.2158%" height="15" fill="rgb(240,22,54)" fg:x="79787" fg:w="221"/><text x="78.1776%" y="831.50"></text></g><g><title>rust_dealloc (241 samples, 0.24%)</title><rect x="77.9130%" y="837" width="0.2354%" height="15" fill="rgb(231,133,32)" fg:x="79772" fg:w="241"/><text x="78.1630%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,771 samples, 4.66%)</title><rect x="73.4895%" y="981" width="4.6598%" height="15" fill="rgb(248,193,4)" fg:x="75243" fg:w="4771"/><text x="73.7395%" y="991.50">&lt;asyn..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,212 samples, 1.18%)</title><rect x="76.9656%" y="965" width="1.1838%" height="15" fill="rgb(211,178,46)" fg:x="78802" fg:w="1212"/><text x="77.2156%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (950 samples, 0.93%)</title><rect x="77.2215%" y="949" width="0.9279%" height="15" fill="rgb(224,5,42)" fg:x="79064" fg:w="950"/><text x="77.4715%" y="959.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (950 samples, 0.93%)</title><rect x="77.2215%" y="933" width="0.9279%" height="15" fill="rgb(239,176,25)" fg:x="79064" fg:w="950"/><text x="77.4715%" y="943.50"></text></g><g><title>alloc::alloc::box_free (253 samples, 0.25%)</title><rect x="77.9023%" y="917" width="0.2471%" height="15" fill="rgb(245,187,50)" fg:x="79761" fg:w="253"/><text x="78.1523%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (253 samples, 0.25%)</title><rect x="77.9023%" y="901" width="0.2471%" height="15" fill="rgb(248,24,15)" fg:x="79761" fg:w="253"/><text x="78.1523%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (253 samples, 0.25%)</title><rect x="77.9023%" y="885" width="0.2471%" height="15" fill="rgb(205,166,13)" fg:x="79761" fg:w="253"/><text x="78.1523%" y="895.50"></text></g><g><title>__rg_dealloc (253 samples, 0.25%)</title><rect x="77.9023%" y="869" width="0.2471%" height="15" fill="rgb(208,114,23)" fg:x="79761" fg:w="253"/><text x="78.1523%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (253 samples, 0.25%)</title><rect x="77.9023%" y="853" width="0.2471%" height="15" fill="rgb(239,127,18)" fg:x="79761" fg:w="253"/><text x="78.1523%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,271 samples, 5.15%)</title><rect x="73.4329%" y="997" width="5.1482%" height="15" fill="rgb(219,154,28)" fg:x="75185" fg:w="5271"/><text x="73.6829%" y="1007.50">&lt;async..</text></g><g><title>__memcpy_avx_unaligned_erms (442 samples, 0.43%)</title><rect x="78.1494%" y="981" width="0.4317%" height="15" fill="rgb(225,157,23)" fg:x="80014" fg:w="442"/><text x="78.3994%" y="991.50"></text></g><g><title>__memcpy_avx_unaligned_erms (512 samples, 0.50%)</title><rect x="78.5811%" y="997" width="0.5001%" height="15" fill="rgb(219,8,6)" fg:x="80456" fg:w="512"/><text x="78.8311%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,820 samples, 5.68%)</title><rect x="73.3977%" y="1157" width="5.6844%" height="15" fill="rgb(212,47,6)" fg:x="75149" fg:w="5820"/><text x="73.6477%" y="1167.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1141" width="5.6834%" height="15" fill="rgb(224,190,4)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1151.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1125" width="5.6834%" height="15" fill="rgb(239,183,29)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1135.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1109" width="5.6834%" height="15" fill="rgb(213,57,7)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1119.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1093" width="5.6834%" height="15" fill="rgb(216,148,1)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1103.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1077" width="5.6834%" height="15" fill="rgb(236,182,29)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1087.50">tremor_..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1061" width="5.6834%" height="15" fill="rgb(244,120,48)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1071.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1045" width="5.6834%" height="15" fill="rgb(206,71,34)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1055.50">&lt;tremor..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1029" width="5.6834%" height="15" fill="rgb(242,32,6)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1039.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,819 samples, 5.68%)</title><rect x="73.3987%" y="1013" width="5.6834%" height="15" fill="rgb(241,35,3)" fg:x="75150" fg:w="5819"/><text x="73.6487%" y="1023.50">&lt;tremor..</text></g><g><title>tremor_common::time::nanotime (29 samples, 0.03%)</title><rect x="79.0821%" y="1157" width="0.0283%" height="15" fill="rgb(222,62,19)" fg:x="80969" fg:w="29"/><text x="79.3321%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (29 samples, 0.03%)</title><rect x="79.0821%" y="1141" width="0.0283%" height="15" fill="rgb(223,110,41)" fg:x="80969" fg:w="29"/><text x="79.3321%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (29 samples, 0.03%)</title><rect x="79.0821%" y="1125" width="0.0283%" height="15" fill="rgb(208,224,4)" fg:x="80969" fg:w="29"/><text x="79.3321%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (29 samples, 0.03%)</title><rect x="79.0821%" y="1109" width="0.0283%" height="15" fill="rgb(241,137,19)" fg:x="80969" fg:w="29"/><text x="79.3321%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (59 samples, 0.06%)</title><rect x="79.1104%" y="1157" width="0.0576%" height="15" fill="rgb(244,24,17)" fg:x="80998" fg:w="59"/><text x="79.3604%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (15 samples, 0.01%)</title><rect x="79.1759%" y="1157" width="0.0147%" height="15" fill="rgb(245,178,49)" fg:x="81065" fg:w="15"/><text x="79.4259%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="79.2667%" y="1045" width="0.0147%" height="15" fill="rgb(219,160,38)" fg:x="81158" fg:w="15"/><text x="79.5167%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="79.2667%" y="1029" width="0.0147%" height="15" fill="rgb(228,137,14)" fg:x="81158" fg:w="15"/><text x="79.5167%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="79.2667%" y="1013" width="0.0147%" height="15" fill="rgb(237,134,11)" fg:x="81158" fg:w="15"/><text x="79.5167%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="79.2667%" y="997" width="0.0147%" height="15" fill="rgb(211,126,44)" fg:x="81158" fg:w="15"/><text x="79.5167%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="79.2667%" y="981" width="0.0147%" height="15" fill="rgb(226,171,33)" fg:x="81158" fg:w="15"/><text x="79.5167%" y="991.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="79.2667%" y="965" width="0.0147%" height="15" fill="rgb(253,99,13)" fg:x="81158" fg:w="15"/><text x="79.5167%" y="975.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="79.2667%" y="949" width="0.0147%" height="15" fill="rgb(244,48,7)" fg:x="81158" fg:w="15"/><text x="79.5167%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="79.2667%" y="933" width="0.0147%" height="15" fill="rgb(244,217,54)" fg:x="81158" fg:w="15"/><text x="79.5167%" y="943.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="79.2540%" y="1141" width="0.0498%" height="15" fill="rgb(224,15,18)" fg:x="81145" fg:w="51"/><text x="79.5040%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="79.2667%" y="1125" width="0.0371%" height="15" fill="rgb(244,99,12)" fg:x="81158" fg:w="38"/><text x="79.5167%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="79.2667%" y="1109" width="0.0371%" height="15" fill="rgb(233,226,8)" fg:x="81158" fg:w="38"/><text x="79.5167%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.04%)</title><rect x="79.2667%" y="1093" width="0.0371%" height="15" fill="rgb(229,211,3)" fg:x="81158" fg:w="38"/><text x="79.5167%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.04%)</title><rect x="79.2667%" y="1077" width="0.0371%" height="15" fill="rgb(216,140,21)" fg:x="81158" fg:w="38"/><text x="79.5167%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.04%)</title><rect x="79.2667%" y="1061" width="0.0371%" height="15" fill="rgb(234,122,30)" fg:x="81158" fg:w="38"/><text x="79.5167%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (23 samples, 0.02%)</title><rect x="79.2813%" y="1045" width="0.0225%" height="15" fill="rgb(236,25,46)" fg:x="81173" fg:w="23"/><text x="79.5313%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.02%)</title><rect x="79.2813%" y="1029" width="0.0225%" height="15" fill="rgb(217,52,54)" fg:x="81173" fg:w="23"/><text x="79.5313%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="79.3038%" y="1141" width="0.0117%" height="15" fill="rgb(222,29,26)" fg:x="81196" fg:w="12"/><text x="79.5538%" y="1151.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="79.3038%" y="1125" width="0.0117%" height="15" fill="rgb(216,177,29)" fg:x="81196" fg:w="12"/><text x="79.5538%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (136 samples, 0.13%)</title><rect x="79.1944%" y="1157" width="0.1328%" height="15" fill="rgb(247,136,51)" fg:x="81084" fg:w="136"/><text x="79.4444%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (34 samples, 0.03%)</title><rect x="79.3273%" y="1157" width="0.0332%" height="15" fill="rgb(231,47,47)" fg:x="81220" fg:w="34"/><text x="79.5773%" y="1167.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="79.5363%" y="1013" width="0.0147%" height="15" fill="rgb(211,192,36)" fg:x="81434" fg:w="15"/><text x="79.7863%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.01%)</title><rect x="79.5509%" y="1013" width="0.0137%" height="15" fill="rgb(229,156,32)" fg:x="81449" fg:w="14"/><text x="79.8009%" y="1023.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="79.5509%" y="997" width="0.0137%" height="15" fill="rgb(248,213,20)" fg:x="81449" fg:w="14"/><text x="79.8009%" y="1007.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="79.5519%" y="981" width="0.0127%" height="15" fill="rgb(217,64,7)" fg:x="81450" fg:w="13"/><text x="79.8019%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (210 samples, 0.21%)</title><rect x="79.6496%" y="997" width="0.2051%" height="15" fill="rgb(232,142,8)" fg:x="81550" fg:w="210"/><text x="79.8996%" y="1007.50"></text></g><g><title>core::mem::replace (210 samples, 0.21%)</title><rect x="79.6496%" y="981" width="0.2051%" height="15" fill="rgb(224,92,44)" fg:x="81550" fg:w="210"/><text x="79.8996%" y="991.50"></text></g><g><title>core::ptr::read (209 samples, 0.20%)</title><rect x="79.6505%" y="965" width="0.2041%" height="15" fill="rgb(214,169,17)" fg:x="81551" fg:w="209"/><text x="79.9005%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (373 samples, 0.36%)</title><rect x="79.5646%" y="1013" width="0.3643%" height="15" fill="rgb(210,59,37)" fg:x="81463" fg:w="373"/><text x="79.8146%" y="1023.50"></text></g><g><title>core::mem::drop (76 samples, 0.07%)</title><rect x="79.8547%" y="997" width="0.0742%" height="15" fill="rgb(214,116,48)" fg:x="81760" fg:w="76"/><text x="80.1047%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (76 samples, 0.07%)</title><rect x="79.8547%" y="981" width="0.0742%" height="15" fill="rgb(244,191,6)" fg:x="81760" fg:w="76"/><text x="80.1047%" y="991.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="79.9289%" y="997" width="0.0137%" height="15" fill="rgb(241,50,52)" fg:x="81836" fg:w="14"/><text x="80.1789%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::done (13 samples, 0.01%)</title><rect x="79.9514%" y="965" width="0.0127%" height="15" fill="rgb(236,75,39)" fg:x="81859" fg:w="13"/><text x="80.2014%" y="975.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="79.9514%" y="949" width="0.0127%" height="15" fill="rgb(236,99,0)" fg:x="81859" fg:w="13"/><text x="80.2014%" y="959.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="79.9514%" y="933" width="0.0127%" height="15" fill="rgb(207,202,15)" fg:x="81859" fg:w="13"/><text x="80.2014%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="79.9514%" y="917" width="0.0127%" height="15" fill="rgb(233,207,14)" fg:x="81859" fg:w="13"/><text x="80.2014%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="79.9641%" y="949" width="0.0127%" height="15" fill="rgb(226,27,51)" fg:x="81872" fg:w="13"/><text x="80.2141%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (364 samples, 0.36%)</title><rect x="79.9768%" y="933" width="0.3555%" height="15" fill="rgb(206,104,42)" fg:x="81885" fg:w="364"/><text x="80.2268%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (423 samples, 0.41%)</title><rect x="79.9289%" y="1013" width="0.4131%" height="15" fill="rgb(212,225,4)" fg:x="81836" fg:w="423"/><text x="80.1789%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (409 samples, 0.40%)</title><rect x="79.9426%" y="997" width="0.3995%" height="15" fill="rgb(233,96,42)" fg:x="81850" fg:w="409"/><text x="80.1926%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (409 samples, 0.40%)</title><rect x="79.9426%" y="981" width="0.3995%" height="15" fill="rgb(229,21,32)" fg:x="81850" fg:w="409"/><text x="80.1926%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (387 samples, 0.38%)</title><rect x="79.9641%" y="965" width="0.3780%" height="15" fill="rgb(226,216,24)" fg:x="81872" fg:w="387"/><text x="80.2141%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (374 samples, 0.37%)</title><rect x="79.9768%" y="949" width="0.3653%" height="15" fill="rgb(221,163,17)" fg:x="81885" fg:w="374"/><text x="80.2268%" y="959.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (26 samples, 0.03%)</title><rect x="80.3547%" y="965" width="0.0254%" height="15" fill="rgb(216,216,42)" fg:x="82272" fg:w="26"/><text x="80.6047%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (51 samples, 0.05%)</title><rect x="80.3420%" y="1013" width="0.0498%" height="15" fill="rgb(240,118,7)" fg:x="82259" fg:w="51"/><text x="80.5920%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (51 samples, 0.05%)</title><rect x="80.3420%" y="997" width="0.0498%" height="15" fill="rgb(221,67,37)" fg:x="82259" fg:w="51"/><text x="80.5920%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (38 samples, 0.04%)</title><rect x="80.3547%" y="981" width="0.0371%" height="15" fill="rgb(241,32,44)" fg:x="82272" fg:w="38"/><text x="80.6047%" y="991.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="80.3801%" y="965" width="0.0117%" height="15" fill="rgb(235,204,43)" fg:x="82298" fg:w="12"/><text x="80.6301%" y="975.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="80.4055%" y="981" width="0.0137%" height="15" fill="rgb(213,116,10)" fg:x="82324" fg:w="14"/><text x="80.6555%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (14 samples, 0.01%)</title><rect x="80.4055%" y="965" width="0.0137%" height="15" fill="rgb(239,15,48)" fg:x="82324" fg:w="14"/><text x="80.6555%" y="975.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="80.4055%" y="949" width="0.0137%" height="15" fill="rgb(207,123,36)" fg:x="82324" fg:w="14"/><text x="80.6555%" y="959.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="80.4055%" y="933" width="0.0137%" height="15" fill="rgb(209,103,30)" fg:x="82324" fg:w="14"/><text x="80.6555%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="80.4055%" y="917" width="0.0137%" height="15" fill="rgb(238,100,19)" fg:x="82324" fg:w="14"/><text x="80.6555%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="80.4055%" y="901" width="0.0137%" height="15" fill="rgb(244,30,14)" fg:x="82324" fg:w="14"/><text x="80.6555%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="80.4055%" y="885" width="0.0137%" height="15" fill="rgb(249,174,6)" fg:x="82324" fg:w="14"/><text x="80.6555%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,433 samples, 1.40%)</title><rect x="79.4396%" y="1029" width="1.3996%" height="15" fill="rgb(235,213,41)" fg:x="81335" fg:w="1433"/><text x="79.6896%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (458 samples, 0.45%)</title><rect x="80.3919%" y="1013" width="0.4473%" height="15" fill="rgb(213,118,6)" fg:x="82310" fg:w="458"/><text x="80.6419%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (444 samples, 0.43%)</title><rect x="80.4055%" y="997" width="0.4337%" height="15" fill="rgb(235,44,51)" fg:x="82324" fg:w="444"/><text x="80.6555%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (430 samples, 0.42%)</title><rect x="80.4192%" y="981" width="0.4200%" height="15" fill="rgb(217,9,53)" fg:x="82338" fg:w="430"/><text x="80.6692%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (424 samples, 0.41%)</title><rect x="80.4251%" y="965" width="0.4141%" height="15" fill="rgb(237,172,34)" fg:x="82344" fg:w="424"/><text x="80.6751%" y="975.50"></text></g><g><title>___pthread_mutex_lock (424 samples, 0.41%)</title><rect x="80.4251%" y="949" width="0.4141%" height="15" fill="rgb(206,206,11)" fg:x="82344" fg:w="424"/><text x="80.6751%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,536 samples, 1.50%)</title><rect x="79.3624%" y="1141" width="1.5002%" height="15" fill="rgb(214,149,29)" fg:x="81256" fg:w="1536"/><text x="79.6124%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,536 samples, 1.50%)</title><rect x="79.3624%" y="1125" width="1.5002%" height="15" fill="rgb(208,123,3)" fg:x="81256" fg:w="1536"/><text x="79.6124%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,536 samples, 1.50%)</title><rect x="79.3624%" y="1109" width="1.5002%" height="15" fill="rgb(229,126,4)" fg:x="81256" fg:w="1536"/><text x="79.6124%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,536 samples, 1.50%)</title><rect x="79.3624%" y="1093" width="1.5002%" height="15" fill="rgb(222,92,36)" fg:x="81256" fg:w="1536"/><text x="79.6124%" y="1103.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,536 samples, 1.50%)</title><rect x="79.3624%" y="1077" width="1.5002%" height="15" fill="rgb(216,39,41)" fg:x="81256" fg:w="1536"/><text x="79.6124%" y="1087.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,536 samples, 1.50%)</title><rect x="79.3624%" y="1061" width="1.5002%" height="15" fill="rgb(253,127,28)" fg:x="81256" fg:w="1536"/><text x="79.6124%" y="1071.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,536 samples, 1.50%)</title><rect x="79.3624%" y="1045" width="1.5002%" height="15" fill="rgb(249,152,51)" fg:x="81256" fg:w="1536"/><text x="79.6124%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (22 samples, 0.02%)</title><rect x="80.8411%" y="1029" width="0.0215%" height="15" fill="rgb(209,123,42)" fg:x="82770" fg:w="22"/><text x="81.0911%" y="1039.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="80.9261%" y="1061" width="0.0293%" height="15" fill="rgb(241,118,22)" fg:x="82857" fg:w="30"/><text x="81.1761%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (469 samples, 0.46%)</title><rect x="81.0179%" y="1045" width="0.4581%" height="15" fill="rgb(208,25,7)" fg:x="82951" fg:w="469"/><text x="81.2679%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (798 samples, 0.78%)</title><rect x="81.5317%" y="1029" width="0.7794%" height="15" fill="rgb(243,144,39)" fg:x="83477" fg:w="798"/><text x="81.7817%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (245 samples, 0.24%)</title><rect x="82.4009%" y="1013" width="0.2393%" height="15" fill="rgb(250,50,5)" fg:x="84367" fg:w="245"/><text x="82.6509%" y="1023.50"></text></g><g><title>core::ptr::write (245 samples, 0.24%)</title><rect x="82.4009%" y="997" width="0.2393%" height="15" fill="rgb(207,67,11)" fg:x="84367" fg:w="245"/><text x="82.6509%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (231 samples, 0.23%)</title><rect x="82.4146%" y="981" width="0.2256%" height="15" fill="rgb(245,204,40)" fg:x="84381" fg:w="231"/><text x="82.6646%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (352 samples, 0.34%)</title><rect x="82.6402%" y="1013" width="0.3438%" height="15" fill="rgb(238,228,24)" fg:x="84612" fg:w="352"/><text x="82.8902%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (352 samples, 0.34%)</title><rect x="82.6402%" y="997" width="0.3438%" height="15" fill="rgb(217,116,22)" fg:x="84612" fg:w="352"/><text x="82.8902%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (65 samples, 0.06%)</title><rect x="82.9840%" y="1013" width="0.0635%" height="15" fill="rgb(234,98,12)" fg:x="84964" fg:w="65"/><text x="83.2340%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (65 samples, 0.06%)</title><rect x="82.9840%" y="997" width="0.0635%" height="15" fill="rgb(242,170,50)" fg:x="84964" fg:w="65"/><text x="83.2340%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,623 samples, 1.59%)</title><rect x="81.4760%" y="1045" width="1.5852%" height="15" fill="rgb(235,7,5)" fg:x="83420" fg:w="1623"/><text x="81.7260%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (768 samples, 0.75%)</title><rect x="82.3111%" y="1029" width="0.7501%" height="15" fill="rgb(241,114,28)" fg:x="84275" fg:w="768"/><text x="82.5611%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (14 samples, 0.01%)</title><rect x="83.0475%" y="1013" width="0.0137%" height="15" fill="rgb(246,112,42)" fg:x="85029" fg:w="14"/><text x="83.2975%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.01%)</title><rect x="83.0475%" y="997" width="0.0137%" height="15" fill="rgb(248,228,14)" fg:x="85029" fg:w="14"/><text x="83.2975%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (31 samples, 0.03%)</title><rect x="83.0875%" y="949" width="0.0303%" height="15" fill="rgb(208,133,18)" fg:x="85070" fg:w="31"/><text x="83.3375%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (38 samples, 0.04%)</title><rect x="83.0836%" y="1029" width="0.0371%" height="15" fill="rgb(207,35,49)" fg:x="85066" fg:w="38"/><text x="83.3336%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (36 samples, 0.04%)</title><rect x="83.0856%" y="1013" width="0.0352%" height="15" fill="rgb(205,68,36)" fg:x="85068" fg:w="36"/><text x="83.3356%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="83.0856%" y="997" width="0.0352%" height="15" fill="rgb(245,62,40)" fg:x="85068" fg:w="36"/><text x="83.3356%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.03%)</title><rect x="83.0875%" y="981" width="0.0332%" height="15" fill="rgb(228,27,24)" fg:x="85070" fg:w="34"/><text x="83.3375%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (34 samples, 0.03%)</title><rect x="83.0875%" y="965" width="0.0332%" height="15" fill="rgb(253,19,12)" fg:x="85070" fg:w="34"/><text x="83.3375%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="83.1207%" y="1029" width="0.0205%" height="15" fill="rgb(232,28,20)" fg:x="85104" fg:w="21"/><text x="83.3707%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="83.1207%" y="1013" width="0.0205%" height="15" fill="rgb(218,35,51)" fg:x="85104" fg:w="21"/><text x="83.3707%" y="1023.50"></text></g><g><title>event_listener::Inner::lock (48 samples, 0.05%)</title><rect x="83.1412%" y="1029" width="0.0469%" height="15" fill="rgb(212,90,40)" fg:x="85125" fg:w="48"/><text x="83.3912%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (48 samples, 0.05%)</title><rect x="83.1412%" y="1013" width="0.0469%" height="15" fill="rgb(220,172,12)" fg:x="85125" fg:w="48"/><text x="83.3912%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (48 samples, 0.05%)</title><rect x="83.1412%" y="997" width="0.0469%" height="15" fill="rgb(226,159,20)" fg:x="85125" fg:w="48"/><text x="83.3912%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (47 samples, 0.05%)</title><rect x="83.1422%" y="981" width="0.0459%" height="15" fill="rgb(234,205,16)" fg:x="85126" fg:w="47"/><text x="83.3922%" y="991.50"></text></g><g><title>___pthread_mutex_lock (47 samples, 0.05%)</title><rect x="83.1422%" y="965" width="0.0459%" height="15" fill="rgb(207,9,39)" fg:x="85126" fg:w="47"/><text x="83.3922%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (17 samples, 0.02%)</title><rect x="83.2106%" y="933" width="0.0166%" height="15" fill="rgb(249,143,15)" fg:x="85196" fg:w="17"/><text x="83.4606%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="83.2106%" y="917" width="0.0166%" height="15" fill="rgb(253,133,29)" fg:x="85196" fg:w="17"/><text x="83.4606%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.02%)</title><rect x="83.2106%" y="901" width="0.0166%" height="15" fill="rgb(221,187,0)" fg:x="85196" fg:w="17"/><text x="83.4606%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (17 samples, 0.02%)</title><rect x="83.2106%" y="885" width="0.0166%" height="15" fill="rgb(205,204,26)" fg:x="85196" fg:w="17"/><text x="83.4606%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="83.2106%" y="869" width="0.0166%" height="15" fill="rgb(224,68,54)" fg:x="85196" fg:w="17"/><text x="83.4606%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (17 samples, 0.02%)</title><rect x="83.2565%" y="853" width="0.0166%" height="15" fill="rgb(209,67,4)" fg:x="85243" fg:w="17"/><text x="83.5065%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (17 samples, 0.02%)</title><rect x="83.2565%" y="837" width="0.0166%" height="15" fill="rgb(228,229,18)" fg:x="85243" fg:w="17"/><text x="83.5065%" y="847.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (20 samples, 0.02%)</title><rect x="83.2731%" y="853" width="0.0195%" height="15" fill="rgb(231,89,13)" fg:x="85260" fg:w="20"/><text x="83.5231%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (20 samples, 0.02%)</title><rect x="83.2731%" y="837" width="0.0195%" height="15" fill="rgb(210,182,18)" fg:x="85260" fg:w="20"/><text x="83.5231%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (20 samples, 0.02%)</title><rect x="83.2731%" y="821" width="0.0195%" height="15" fill="rgb(240,105,2)" fg:x="85260" fg:w="20"/><text x="83.5231%" y="831.50"></text></g><g><title>__GI___pthread_cond_signal (20 samples, 0.02%)</title><rect x="83.2731%" y="805" width="0.0195%" height="15" fill="rgb(207,170,50)" fg:x="85260" fg:w="20"/><text x="83.5231%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (73 samples, 0.07%)</title><rect x="83.2379%" y="901" width="0.0713%" height="15" fill="rgb(232,133,24)" fg:x="85224" fg:w="73"/><text x="83.4879%" y="911.50"></text></g><g><title>parking::Unparker::unpark (62 samples, 0.06%)</title><rect x="83.2487%" y="885" width="0.0606%" height="15" fill="rgb(235,166,27)" fg:x="85235" fg:w="62"/><text x="83.4987%" y="895.50"></text></g><g><title>parking::Inner::unpark (59 samples, 0.06%)</title><rect x="83.2516%" y="869" width="0.0576%" height="15" fill="rgb(209,19,13)" fg:x="85238" fg:w="59"/><text x="83.5016%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="83.2926%" y="853" width="0.0166%" height="15" fill="rgb(226,79,39)" fg:x="85280" fg:w="17"/><text x="83.5426%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="83.2926%" y="837" width="0.0166%" height="15" fill="rgb(222,163,10)" fg:x="85280" fg:w="17"/><text x="83.5426%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="83.2926%" y="821" width="0.0166%" height="15" fill="rgb(214,44,19)" fg:x="85280" fg:w="17"/><text x="83.5426%" y="831.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="83.2926%" y="805" width="0.0166%" height="15" fill="rgb(210,217,13)" fg:x="85280" fg:w="17"/><text x="83.5426%" y="815.50"></text></g><g><title>core::task::wake::Waker::wake (91 samples, 0.09%)</title><rect x="83.2370%" y="933" width="0.0889%" height="15" fill="rgb(237,61,54)" fg:x="85223" fg:w="91"/><text x="83.4870%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (90 samples, 0.09%)</title><rect x="83.2379%" y="917" width="0.0879%" height="15" fill="rgb(226,184,24)" fg:x="85224" fg:w="90"/><text x="83.4879%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="83.3092%" y="901" width="0.0166%" height="15" fill="rgb(223,226,4)" fg:x="85297" fg:w="17"/><text x="83.5592%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="83.3092%" y="885" width="0.0166%" height="15" fill="rgb(210,26,41)" fg:x="85297" fg:w="17"/><text x="83.5592%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="83.3092%" y="869" width="0.0166%" height="15" fill="rgb(220,221,6)" fg:x="85297" fg:w="17"/><text x="83.5592%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="83.3092%" y="853" width="0.0166%" height="15" fill="rgb(225,89,49)" fg:x="85297" fg:w="17"/><text x="83.5592%" y="863.50"></text></g><g><title>async_executor::State::notify (158 samples, 0.15%)</title><rect x="83.2057%" y="949" width="0.1543%" height="15" fill="rgb(218,70,45)" fg:x="85191" fg:w="158"/><text x="83.4557%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.03%)</title><rect x="83.3258%" y="933" width="0.0342%" height="15" fill="rgb(238,166,21)" fg:x="85314" fg:w="35"/><text x="83.5758%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.03%)</title><rect x="83.3278%" y="917" width="0.0322%" height="15" fill="rgb(224,141,44)" fg:x="85316" fg:w="33"/><text x="83.5778%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="83.3307%" y="901" width="0.0293%" height="15" fill="rgb(230,12,49)" fg:x="85319" fg:w="30"/><text x="83.5807%" y="911.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="83.3307%" y="885" width="0.0293%" height="15" fill="rgb(212,174,12)" fg:x="85319" fg:w="30"/><text x="83.5807%" y="895.50"></text></g><g><title>__GI___lll_lock_wait (11 samples, 0.01%)</title><rect x="83.3493%" y="869" width="0.0107%" height="15" fill="rgb(246,67,9)" fg:x="85338" fg:w="11"/><text x="83.5993%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (28 samples, 0.03%)</title><rect x="83.3737%" y="917" width="0.0273%" height="15" fill="rgb(239,35,23)" fg:x="85363" fg:w="28"/><text x="83.6237%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.03%)</title><rect x="83.3737%" y="901" width="0.0273%" height="15" fill="rgb(211,167,0)" fg:x="85363" fg:w="28"/><text x="83.6237%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (23 samples, 0.02%)</title><rect x="83.4011%" y="917" width="0.0225%" height="15" fill="rgb(225,119,45)" fg:x="85391" fg:w="23"/><text x="83.6511%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_or (23 samples, 0.02%)</title><rect x="83.4011%" y="901" width="0.0225%" height="15" fill="rgb(210,162,6)" fg:x="85391" fg:w="23"/><text x="83.6511%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (233 samples, 0.23%)</title><rect x="83.2028%" y="965" width="0.2276%" height="15" fill="rgb(208,118,35)" fg:x="85188" fg:w="233"/><text x="83.4528%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (72 samples, 0.07%)</title><rect x="83.3600%" y="949" width="0.0703%" height="15" fill="rgb(239,4,53)" fg:x="85349" fg:w="72"/><text x="83.6100%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (69 samples, 0.07%)</title><rect x="83.3630%" y="933" width="0.0674%" height="15" fill="rgb(213,130,21)" fg:x="85352" fg:w="69"/><text x="83.6130%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (30 samples, 0.03%)</title><rect x="83.4304%" y="965" width="0.0293%" height="15" fill="rgb(235,148,0)" fg:x="85421" fg:w="30"/><text x="83.6804%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.03%)</title><rect x="83.4304%" y="949" width="0.0293%" height="15" fill="rgb(244,224,18)" fg:x="85421" fg:w="30"/><text x="83.6804%" y="959.50"></text></g><g><title>event_listener::List::notify (282 samples, 0.28%)</title><rect x="83.1881%" y="1029" width="0.2754%" height="15" fill="rgb(211,214,4)" fg:x="85173" fg:w="282"/><text x="83.4381%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (273 samples, 0.27%)</title><rect x="83.1969%" y="1013" width="0.2666%" height="15" fill="rgb(206,119,25)" fg:x="85182" fg:w="273"/><text x="83.4469%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (273 samples, 0.27%)</title><rect x="83.1969%" y="997" width="0.2666%" height="15" fill="rgb(243,93,47)" fg:x="85182" fg:w="273"/><text x="83.4469%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (267 samples, 0.26%)</title><rect x="83.2028%" y="981" width="0.2608%" height="15" fill="rgb(224,194,6)" fg:x="85188" fg:w="267"/><text x="83.4528%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,715 samples, 3.63%)</title><rect x="80.9574%" y="1061" width="3.6284%" height="15" fill="rgb(243,229,6)" fg:x="82889" fg:w="3715"/><text x="81.2074%" y="1071.50">asyn..</text></g><g><title>event_listener::Event::notify (1,561 samples, 1.52%)</title><rect x="83.0612%" y="1045" width="1.5246%" height="15" fill="rgb(207,23,50)" fg:x="85043" fg:w="1561"/><text x="83.3112%" y="1055.50"></text></g><g><title>event_listener::full_fence (1,149 samples, 1.12%)</title><rect x="83.4636%" y="1029" width="1.1222%" height="15" fill="rgb(253,192,32)" fg:x="85455" fg:w="1149"/><text x="83.7136%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,120 samples, 1.09%)</title><rect x="83.4919%" y="1013" width="1.0939%" height="15" fill="rgb(213,21,6)" fg:x="85484" fg:w="1120"/><text x="83.7419%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,120 samples, 1.09%)</title><rect x="83.4919%" y="997" width="1.0939%" height="15" fill="rgb(243,151,13)" fg:x="85484" fg:w="1120"/><text x="83.7419%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,120 samples, 1.09%)</title><rect x="83.4919%" y="981" width="1.0939%" height="15" fill="rgb(233,165,41)" fg:x="85484" fg:w="1120"/><text x="83.7419%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (22 samples, 0.02%)</title><rect x="84.5858%" y="1061" width="0.0215%" height="15" fill="rgb(246,176,45)" fg:x="86604" fg:w="22"/><text x="84.8358%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (421 samples, 0.41%)</title><rect x="84.6073%" y="1061" width="0.4112%" height="15" fill="rgb(217,170,52)" fg:x="86626" fg:w="421"/><text x="84.8573%" y="1071.50"></text></g><g><title>core::mem::replace (421 samples, 0.41%)</title><rect x="84.6073%" y="1045" width="0.4112%" height="15" fill="rgb(214,203,54)" fg:x="86626" fg:w="421"/><text x="84.8573%" y="1055.50"></text></g><g><title>core::ptr::read (413 samples, 0.40%)</title><rect x="84.6151%" y="1029" width="0.4034%" height="15" fill="rgb(248,215,49)" fg:x="86634" fg:w="413"/><text x="84.8651%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (388 samples, 0.38%)</title><rect x="84.6395%" y="1013" width="0.3790%" height="15" fill="rgb(208,46,10)" fg:x="86659" fg:w="388"/><text x="84.8895%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (501 samples, 0.49%)</title><rect x="85.0185%" y="1061" width="0.4893%" height="15" fill="rgb(254,5,31)" fg:x="87047" fg:w="501"/><text x="85.2685%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (484 samples, 0.47%)</title><rect x="85.0351%" y="1045" width="0.4727%" height="15" fill="rgb(222,104,33)" fg:x="87064" fg:w="484"/><text x="85.2851%" y="1055.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,625 samples, 6.47%)</title><rect x="79.3624%" y="1157" width="6.4706%" height="15" fill="rgb(248,49,16)" fg:x="81256" fg:w="6625"/><text x="79.6124%" y="1167.50">tremor_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,089 samples, 4.97%)</title><rect x="80.8626%" y="1141" width="4.9704%" height="15" fill="rgb(232,198,41)" fg:x="82792" fg:w="5089"/><text x="81.1126%" y="1151.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (5,089 samples, 4.97%)</title><rect x="80.8626%" y="1125" width="4.9704%" height="15" fill="rgb(214,125,3)" fg:x="82792" fg:w="5089"/><text x="81.1126%" y="1135.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,089 samples, 4.97%)</title><rect x="80.8626%" y="1109" width="4.9704%" height="15" fill="rgb(229,220,28)" fg:x="82792" fg:w="5089"/><text x="81.1126%" y="1119.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (5,089 samples, 4.97%)</title><rect x="80.8626%" y="1093" width="4.9704%" height="15" fill="rgb(222,64,37)" fg:x="82792" fg:w="5089"/><text x="81.1126%" y="1103.50">tremor..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (5,089 samples, 4.97%)</title><rect x="80.8626%" y="1077" width="4.9704%" height="15" fill="rgb(249,184,13)" fg:x="82792" fg:w="5089"/><text x="81.1126%" y="1087.50">&lt;async..</text></g><g><title>event_listener::Event::notify (331 samples, 0.32%)</title><rect x="85.5097%" y="1061" width="0.3233%" height="15" fill="rgb(252,176,6)" fg:x="87550" fg:w="331"/><text x="85.7597%" y="1071.50"></text></g><g><title>event_listener::full_fence (312 samples, 0.30%)</title><rect x="85.5283%" y="1045" width="0.3047%" height="15" fill="rgb(228,153,7)" fg:x="87569" fg:w="312"/><text x="85.7783%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (300 samples, 0.29%)</title><rect x="85.5400%" y="1029" width="0.2930%" height="15" fill="rgb(242,193,5)" fg:x="87581" fg:w="300"/><text x="85.7900%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (300 samples, 0.29%)</title><rect x="85.5400%" y="1013" width="0.2930%" height="15" fill="rgb(232,140,9)" fg:x="87581" fg:w="300"/><text x="85.7900%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (300 samples, 0.29%)</title><rect x="85.5400%" y="997" width="0.2930%" height="15" fill="rgb(213,222,16)" fg:x="87581" fg:w="300"/><text x="85.7900%" y="1007.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (21 samples, 0.02%)</title><rect x="85.8330%" y="1157" width="0.0205%" height="15" fill="rgb(222,75,50)" fg:x="87881" fg:w="21"/><text x="86.0830%" y="1167.50"></text></g><g><title>[unknown] (82,275 samples, 80.36%)</title><rect x="5.5115%" y="1173" width="80.3577%" height="15" fill="rgb(205,180,2)" fg:x="5643" fg:w="82275"/><text x="5.7615%" y="1183.50">[unknown]</text></g><g><title>tremor_script::srs::EventPayload::try_new (16 samples, 0.02%)</title><rect x="85.8535%" y="1157" width="0.0156%" height="15" fill="rgb(216,34,7)" fg:x="87902" fg:w="16"/><text x="86.1035%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (22 samples, 0.02%)</title><rect x="86.0547%" y="469" width="0.0215%" height="15" fill="rgb(253,16,32)" fg:x="88108" fg:w="22"/><text x="86.3047%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (17 samples, 0.02%)</title><rect x="86.0596%" y="453" width="0.0166%" height="15" fill="rgb(208,97,28)" fg:x="88113" fg:w="17"/><text x="86.3096%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="86.0762%" y="469" width="0.0156%" height="15" fill="rgb(225,92,11)" fg:x="88130" fg:w="16"/><text x="86.3262%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (120 samples, 0.12%)</title><rect x="85.9952%" y="533" width="0.1172%" height="15" fill="rgb(243,38,12)" fg:x="88047" fg:w="120"/><text x="86.2452%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (99 samples, 0.10%)</title><rect x="86.0157%" y="517" width="0.0967%" height="15" fill="rgb(208,139,16)" fg:x="88068" fg:w="99"/><text x="86.2657%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (71 samples, 0.07%)</title><rect x="86.0430%" y="501" width="0.0693%" height="15" fill="rgb(227,24,9)" fg:x="88096" fg:w="71"/><text x="86.2930%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (63 samples, 0.06%)</title><rect x="86.0508%" y="485" width="0.0615%" height="15" fill="rgb(206,62,11)" fg:x="88104" fg:w="63"/><text x="86.3008%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="86.1016%" y="469" width="0.0107%" height="15" fill="rgb(228,134,27)" fg:x="88156" fg:w="11"/><text x="86.3516%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (11 samples, 0.01%)</title><rect x="86.1016%" y="453" width="0.0107%" height="15" fill="rgb(205,55,33)" fg:x="88156" fg:w="11"/><text x="86.3516%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (126 samples, 0.12%)</title><rect x="85.9952%" y="565" width="0.1231%" height="15" fill="rgb(243,75,43)" fg:x="88047" fg:w="126"/><text x="86.2452%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (126 samples, 0.12%)</title><rect x="85.9952%" y="549" width="0.1231%" height="15" fill="rgb(223,27,42)" fg:x="88047" fg:w="126"/><text x="86.2452%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (235 samples, 0.23%)</title><rect x="86.2130%" y="533" width="0.2295%" height="15" fill="rgb(232,189,33)" fg:x="88270" fg:w="235"/><text x="86.4630%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (164 samples, 0.16%)</title><rect x="86.2823%" y="517" width="0.1602%" height="15" fill="rgb(210,9,39)" fg:x="88341" fg:w="164"/><text x="86.5323%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (164 samples, 0.16%)</title><rect x="86.2823%" y="501" width="0.1602%" height="15" fill="rgb(242,85,26)" fg:x="88341" fg:w="164"/><text x="86.5323%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (329 samples, 0.32%)</title><rect x="86.1280%" y="549" width="0.3213%" height="15" fill="rgb(248,44,4)" fg:x="88183" fg:w="329"/><text x="86.3780%" y="559.50"></text></g><g><title>async_executor::steal (340 samples, 0.33%)</title><rect x="86.1182%" y="565" width="0.3321%" height="15" fill="rgb(250,96,46)" fg:x="88173" fg:w="340"/><text x="86.3682%" y="575.50"></text></g><g><title>concurrent_queue::full_fence (381 samples, 0.37%)</title><rect x="86.6925%" y="533" width="0.3721%" height="15" fill="rgb(229,116,26)" fg:x="88761" fg:w="381"/><text x="86.9425%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (378 samples, 0.37%)</title><rect x="86.6954%" y="517" width="0.3692%" height="15" fill="rgb(246,94,34)" fg:x="88764" fg:w="378"/><text x="86.9454%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (378 samples, 0.37%)</title><rect x="86.6954%" y="501" width="0.3692%" height="15" fill="rgb(251,73,21)" fg:x="88764" fg:w="378"/><text x="86.9454%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (378 samples, 0.37%)</title><rect x="86.6954%" y="485" width="0.3692%" height="15" fill="rgb(254,121,25)" fg:x="88764" fg:w="378"/><text x="86.9454%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (596 samples, 0.58%)</title><rect x="86.5323%" y="549" width="0.5821%" height="15" fill="rgb(215,161,49)" fg:x="88597" fg:w="596"/><text x="86.7823%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (51 samples, 0.05%)</title><rect x="87.0646%" y="533" width="0.0498%" height="15" fill="rgb(221,43,13)" fg:x="89142" fg:w="51"/><text x="87.3146%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (47 samples, 0.05%)</title><rect x="87.0685%" y="517" width="0.0459%" height="15" fill="rgb(249,5,37)" fg:x="89146" fg:w="47"/><text x="87.3185%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (161 samples, 0.16%)</title><rect x="87.1389%" y="533" width="0.1572%" height="15" fill="rgb(226,25,44)" fg:x="89218" fg:w="161"/><text x="87.3889%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (160 samples, 0.16%)</title><rect x="87.1398%" y="517" width="0.1563%" height="15" fill="rgb(238,189,16)" fg:x="89219" fg:w="160"/><text x="87.3898%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (160 samples, 0.16%)</title><rect x="87.1398%" y="501" width="0.1563%" height="15" fill="rgb(251,186,8)" fg:x="89219" fg:w="160"/><text x="87.3898%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (160 samples, 0.16%)</title><rect x="87.1398%" y="485" width="0.1563%" height="15" fill="rgb(254,34,31)" fg:x="89219" fg:w="160"/><text x="87.3898%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="87.3010%" y="517" width="0.0137%" height="15" fill="rgb(225,215,27)" fg:x="89384" fg:w="14"/><text x="87.5510%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="87.3010%" y="501" width="0.0137%" height="15" fill="rgb(221,192,48)" fg:x="89384" fg:w="14"/><text x="87.5510%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (15 samples, 0.01%)</title><rect x="87.3010%" y="533" width="0.0147%" height="15" fill="rgb(219,137,20)" fg:x="89384" fg:w="15"/><text x="87.5510%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (41 samples, 0.04%)</title><rect x="87.3215%" y="533" width="0.0400%" height="15" fill="rgb(219,84,11)" fg:x="89405" fg:w="41"/><text x="87.5715%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41 samples, 0.04%)</title><rect x="87.3215%" y="517" width="0.0400%" height="15" fill="rgb(224,10,23)" fg:x="89405" fg:w="41"/><text x="87.5715%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (40 samples, 0.04%)</title><rect x="87.3616%" y="533" width="0.0391%" height="15" fill="rgb(248,22,39)" fg:x="89446" fg:w="40"/><text x="87.6116%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (40 samples, 0.04%)</title><rect x="87.3616%" y="517" width="0.0391%" height="15" fill="rgb(212,154,20)" fg:x="89446" fg:w="40"/><text x="87.6116%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,057 samples, 1.03%)</title><rect x="86.4503%" y="565" width="1.0324%" height="15" fill="rgb(236,199,50)" fg:x="88513" fg:w="1057"/><text x="86.7003%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (377 samples, 0.37%)</title><rect x="87.1144%" y="549" width="0.3682%" height="15" fill="rgb(211,9,17)" fg:x="89193" fg:w="377"/><text x="87.3644%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (84 samples, 0.08%)</title><rect x="87.4006%" y="533" width="0.0820%" height="15" fill="rgb(243,216,36)" fg:x="89486" fg:w="84"/><text x="87.6506%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (84 samples, 0.08%)</title><rect x="87.4006%" y="517" width="0.0820%" height="15" fill="rgb(250,2,10)" fg:x="89486" fg:w="84"/><text x="87.6506%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (99 samples, 0.10%)</title><rect x="87.4993%" y="501" width="0.0967%" height="15" fill="rgb(226,50,48)" fg:x="89587" fg:w="99"/><text x="87.7493%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (99 samples, 0.10%)</title><rect x="87.4993%" y="485" width="0.0967%" height="15" fill="rgb(243,81,16)" fg:x="89587" fg:w="99"/><text x="87.7493%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (205 samples, 0.20%)</title><rect x="87.4827%" y="565" width="0.2002%" height="15" fill="rgb(250,14,2)" fg:x="89570" fg:w="205"/><text x="87.7327%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (205 samples, 0.20%)</title><rect x="87.4827%" y="549" width="0.2002%" height="15" fill="rgb(233,135,29)" fg:x="89570" fg:w="205"/><text x="87.7327%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (203 samples, 0.20%)</title><rect x="87.4846%" y="533" width="0.1983%" height="15" fill="rgb(224,64,43)" fg:x="89572" fg:w="203"/><text x="87.7346%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (191 samples, 0.19%)</title><rect x="87.4963%" y="517" width="0.1865%" height="15" fill="rgb(238,84,13)" fg:x="89584" fg:w="191"/><text x="87.7463%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (89 samples, 0.09%)</title><rect x="87.5960%" y="501" width="0.0869%" height="15" fill="rgb(253,48,26)" fg:x="89686" fg:w="89"/><text x="87.8460%" y="511.50"></text></g><g><title>___pthread_rwlock_unlock (89 samples, 0.09%)</title><rect x="87.5960%" y="485" width="0.0869%" height="15" fill="rgb(205,223,31)" fg:x="89686" fg:w="89"/><text x="87.8460%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="87.6878%" y="533" width="0.0137%" height="15" fill="rgb(221,41,32)" fg:x="89780" fg:w="14"/><text x="87.9378%" y="543.50"></text></g><g><title>fastrand::usize::{{closure}} (11 samples, 0.01%)</title><rect x="87.6907%" y="517" width="0.0107%" height="15" fill="rgb(213,158,31)" fg:x="89783" fg:w="11"/><text x="87.9407%" y="527.50"></text></g><g><title>fastrand::usize (20 samples, 0.02%)</title><rect x="87.6848%" y="565" width="0.0195%" height="15" fill="rgb(245,126,43)" fg:x="89777" fg:w="20"/><text x="87.9348%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.02%)</title><rect x="87.6858%" y="549" width="0.0186%" height="15" fill="rgb(227,7,22)" fg:x="89778" fg:w="19"/><text x="87.9358%" y="559.50"></text></g><g><title>___pthread_rwlock_rdlock (125 samples, 0.12%)</title><rect x="87.7132%" y="517" width="0.1221%" height="15" fill="rgb(252,90,44)" fg:x="89806" fg:w="125"/><text x="87.9632%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,958 samples, 1.91%)</title><rect x="85.9619%" y="581" width="1.9124%" height="15" fill="rgb(253,91,0)" fg:x="88013" fg:w="1958"/><text x="86.2119%" y="591.50">a..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (174 samples, 0.17%)</title><rect x="87.7044%" y="565" width="0.1699%" height="15" fill="rgb(252,175,49)" fg:x="89797" fg:w="174"/><text x="87.9544%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (168 samples, 0.16%)</title><rect x="87.7102%" y="549" width="0.1641%" height="15" fill="rgb(246,150,1)" fg:x="89803" fg:w="168"/><text x="87.9602%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (167 samples, 0.16%)</title><rect x="87.7112%" y="533" width="0.1631%" height="15" fill="rgb(241,192,25)" fg:x="89804" fg:w="167"/><text x="87.9612%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (40 samples, 0.04%)</title><rect x="87.8353%" y="517" width="0.0391%" height="15" fill="rgb(239,187,11)" fg:x="89931" fg:w="40"/><text x="88.0853%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (40 samples, 0.04%)</title><rect x="87.8353%" y="501" width="0.0391%" height="15" fill="rgb(218,202,51)" fg:x="89931" fg:w="40"/><text x="88.0853%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (13 samples, 0.01%)</title><rect x="87.8753%" y="565" width="0.0127%" height="15" fill="rgb(225,176,8)" fg:x="89972" fg:w="13"/><text x="88.1253%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="87.8753%" y="549" width="0.0127%" height="15" fill="rgb(219,122,41)" fg:x="89972" fg:w="13"/><text x="88.1253%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="87.8753%" y="533" width="0.0127%" height="15" fill="rgb(248,140,20)" fg:x="89972" fg:w="13"/><text x="88.1253%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="87.8753%" y="517" width="0.0127%" height="15" fill="rgb(245,41,37)" fg:x="89972" fg:w="13"/><text x="88.1253%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="87.8753%" y="501" width="0.0127%" height="15" fill="rgb(235,82,39)" fg:x="89972" fg:w="13"/><text x="88.1253%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (27 samples, 0.03%)</title><rect x="87.8880%" y="565" width="0.0264%" height="15" fill="rgb(230,108,42)" fg:x="89985" fg:w="27"/><text x="88.1380%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.03%)</title><rect x="87.8880%" y="549" width="0.0264%" height="15" fill="rgb(215,150,50)" fg:x="89985" fg:w="27"/><text x="88.1380%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::notify (16 samples, 0.02%)</title><rect x="87.9144%" y="517" width="0.0156%" height="15" fill="rgb(233,212,5)" fg:x="90012" fg:w="16"/><text x="88.1644%" y="527.50"></text></g><g><title>polling::Poller::notify (16 samples, 0.02%)</title><rect x="87.9144%" y="501" width="0.0156%" height="15" fill="rgb(245,80,22)" fg:x="90012" fg:w="16"/><text x="88.1644%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (32 samples, 0.03%)</title><rect x="87.9495%" y="485" width="0.0313%" height="15" fill="rgb(238,129,16)" fg:x="90048" fg:w="32"/><text x="88.1995%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (32 samples, 0.03%)</title><rect x="87.9495%" y="469" width="0.0313%" height="15" fill="rgb(240,19,0)" fg:x="90048" fg:w="32"/><text x="88.1995%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (64 samples, 0.06%)</title><rect x="87.9808%" y="485" width="0.0625%" height="15" fill="rgb(232,42,35)" fg:x="90080" fg:w="64"/><text x="88.2308%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (64 samples, 0.06%)</title><rect x="87.9808%" y="469" width="0.0625%" height="15" fill="rgb(223,130,24)" fg:x="90080" fg:w="64"/><text x="88.2308%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (64 samples, 0.06%)</title><rect x="87.9808%" y="453" width="0.0625%" height="15" fill="rgb(237,16,22)" fg:x="90080" fg:w="64"/><text x="88.2308%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (64 samples, 0.06%)</title><rect x="87.9808%" y="437" width="0.0625%" height="15" fill="rgb(248,192,20)" fg:x="90080" fg:w="64"/><text x="88.2308%" y="447.50"></text></g><g><title>parking::Unparker::unpark (158 samples, 0.15%)</title><rect x="87.9329%" y="517" width="0.1543%" height="15" fill="rgb(233,167,2)" fg:x="90031" fg:w="158"/><text x="88.1829%" y="527.50"></text></g><g><title>parking::Inner::unpark (151 samples, 0.15%)</title><rect x="87.9398%" y="501" width="0.1475%" height="15" fill="rgb(252,71,44)" fg:x="90038" fg:w="151"/><text x="88.1898%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.04%)</title><rect x="88.0433%" y="485" width="0.0440%" height="15" fill="rgb(238,37,47)" fg:x="90144" fg:w="45"/><text x="88.2933%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (45 samples, 0.04%)</title><rect x="88.0433%" y="469" width="0.0440%" height="15" fill="rgb(214,202,54)" fg:x="90144" fg:w="45"/><text x="88.2933%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (45 samples, 0.04%)</title><rect x="88.0433%" y="453" width="0.0440%" height="15" fill="rgb(254,165,40)" fg:x="90144" fg:w="45"/><text x="88.2933%" y="463.50"></text></g><g><title>___pthread_mutex_lock (45 samples, 0.04%)</title><rect x="88.0433%" y="437" width="0.0440%" height="15" fill="rgb(246,173,38)" fg:x="90144" fg:w="45"/><text x="88.2933%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (189 samples, 0.18%)</title><rect x="87.9144%" y="533" width="0.1846%" height="15" fill="rgb(215,3,27)" fg:x="90012" fg:w="189"/><text x="88.1644%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.01%)</title><rect x="88.0872%" y="517" width="0.0117%" height="15" fill="rgb(239,169,51)" fg:x="90189" fg:w="12"/><text x="88.3372%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="88.0872%" y="501" width="0.0117%" height="15" fill="rgb(212,5,25)" fg:x="90189" fg:w="12"/><text x="88.3372%" y="511.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (12 samples, 0.01%)</title><rect x="88.0872%" y="485" width="0.0117%" height="15" fill="rgb(243,45,17)" fg:x="90189" fg:w="12"/><text x="88.3372%" y="495.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="88.0872%" y="469" width="0.0117%" height="15" fill="rgb(242,97,9)" fg:x="90189" fg:w="12"/><text x="88.3372%" y="479.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="88.0872%" y="453" width="0.0117%" height="15" fill="rgb(228,71,31)" fg:x="90189" fg:w="12"/><text x="88.3372%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="88.0872%" y="437" width="0.0117%" height="15" fill="rgb(252,184,16)" fg:x="90189" fg:w="12"/><text x="88.3372%" y="447.50"></text></g><g><title>core::task::wake::Waker::wake (214 samples, 0.21%)</title><rect x="87.9144%" y="565" width="0.2090%" height="15" fill="rgb(236,169,46)" fg:x="90012" fg:w="214"/><text x="88.1644%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (214 samples, 0.21%)</title><rect x="87.9144%" y="549" width="0.2090%" height="15" fill="rgb(207,17,47)" fg:x="90012" fg:w="214"/><text x="88.1644%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="88.0990%" y="533" width="0.0244%" height="15" fill="rgb(206,201,28)" fg:x="90201" fg:w="25"/><text x="88.3490%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="88.0990%" y="517" width="0.0244%" height="15" fill="rgb(224,184,23)" fg:x="90201" fg:w="25"/><text x="88.3490%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.02%)</title><rect x="88.0990%" y="501" width="0.0244%" height="15" fill="rgb(208,139,48)" fg:x="90201" fg:w="25"/><text x="88.3490%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (25 samples, 0.02%)</title><rect x="88.0990%" y="485" width="0.0244%" height="15" fill="rgb(208,130,10)" fg:x="90201" fg:w="25"/><text x="88.3490%" y="495.50"></text></g><g><title>async_executor::State::notify (275 samples, 0.27%)</title><rect x="87.8743%" y="581" width="0.2686%" height="15" fill="rgb(211,213,45)" fg:x="89971" fg:w="275"/><text x="88.1243%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="88.1234%" y="565" width="0.0195%" height="15" fill="rgb(235,100,30)" fg:x="90226" fg:w="20"/><text x="88.3734%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="88.1234%" y="549" width="0.0195%" height="15" fill="rgb(206,144,31)" fg:x="90226" fg:w="20"/><text x="88.3734%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="88.1234%" y="533" width="0.0195%" height="15" fill="rgb(224,200,26)" fg:x="90226" fg:w="20"/><text x="88.3734%" y="543.50"></text></g><g><title>___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="88.1234%" y="517" width="0.0195%" height="15" fill="rgb(247,104,53)" fg:x="90226" fg:w="20"/><text x="88.3734%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="88.1507%" y="549" width="0.0498%" height="15" fill="rgb(220,14,17)" fg:x="90254" fg:w="51"/><text x="88.4007%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (50 samples, 0.05%)</title><rect x="88.1517%" y="533" width="0.0488%" height="15" fill="rgb(230,140,40)" fg:x="90255" fg:w="50"/><text x="88.4017%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.05%)</title><rect x="88.1527%" y="517" width="0.0479%" height="15" fill="rgb(229,2,41)" fg:x="90256" fg:w="49"/><text x="88.4027%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.05%)</title><rect x="88.1527%" y="501" width="0.0479%" height="15" fill="rgb(232,89,16)" fg:x="90256" fg:w="49"/><text x="88.4027%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (49 samples, 0.05%)</title><rect x="88.1527%" y="485" width="0.0479%" height="15" fill="rgb(247,59,52)" fg:x="90256" fg:w="49"/><text x="88.4027%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (49 samples, 0.05%)</title><rect x="88.1527%" y="469" width="0.0479%" height="15" fill="rgb(226,110,21)" fg:x="90256" fg:w="49"/><text x="88.4027%" y="479.50"></text></g><g><title>async_executor::Sleepers::insert (67 samples, 0.07%)</title><rect x="88.1478%" y="565" width="0.0654%" height="15" fill="rgb(224,176,43)" fg:x="90251" fg:w="67"/><text x="88.3978%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="88.2298%" y="549" width="0.0322%" height="15" fill="rgb(221,73,6)" fg:x="90335" fg:w="33"/><text x="88.4798%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (33 samples, 0.03%)</title><rect x="88.2298%" y="533" width="0.0322%" height="15" fill="rgb(232,78,19)" fg:x="90335" fg:w="33"/><text x="88.4798%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="88.2298%" y="517" width="0.0322%" height="15" fill="rgb(233,112,48)" fg:x="90335" fg:w="33"/><text x="88.4798%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="88.2298%" y="501" width="0.0322%" height="15" fill="rgb(243,131,47)" fg:x="90335" fg:w="33"/><text x="88.4798%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.03%)</title><rect x="88.2308%" y="485" width="0.0313%" height="15" fill="rgb(226,51,1)" fg:x="90336" fg:w="32"/><text x="88.4808%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.03%)</title><rect x="88.2308%" y="469" width="0.0313%" height="15" fill="rgb(247,58,7)" fg:x="90336" fg:w="32"/><text x="88.4808%" y="479.50"></text></g><g><title>async_executor::Sleepers::update (56 samples, 0.05%)</title><rect x="88.2171%" y="565" width="0.0547%" height="15" fill="rgb(209,7,32)" fg:x="90322" fg:w="56"/><text x="88.4671%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (85 samples, 0.08%)</title><rect x="88.2748%" y="501" width="0.0830%" height="15" fill="rgb(209,39,41)" fg:x="90381" fg:w="85"/><text x="88.5248%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (92 samples, 0.09%)</title><rect x="88.2718%" y="565" width="0.0899%" height="15" fill="rgb(226,182,46)" fg:x="90378" fg:w="92"/><text x="88.5218%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.09%)</title><rect x="88.2718%" y="549" width="0.0899%" height="15" fill="rgb(230,219,10)" fg:x="90378" fg:w="92"/><text x="88.5218%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (91 samples, 0.09%)</title><rect x="88.2728%" y="533" width="0.0889%" height="15" fill="rgb(227,175,30)" fg:x="90379" fg:w="91"/><text x="88.5228%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (89 samples, 0.09%)</title><rect x="88.2748%" y="517" width="0.0869%" height="15" fill="rgb(217,2,50)" fg:x="90381" fg:w="89"/><text x="88.5248%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (48 samples, 0.05%)</title><rect x="88.3617%" y="565" width="0.0469%" height="15" fill="rgb(229,160,0)" fg:x="90470" fg:w="48"/><text x="88.6117%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (48 samples, 0.05%)</title><rect x="88.3617%" y="549" width="0.0469%" height="15" fill="rgb(207,78,37)" fg:x="90470" fg:w="48"/><text x="88.6117%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (39 samples, 0.04%)</title><rect x="88.4086%" y="565" width="0.0381%" height="15" fill="rgb(225,57,0)" fg:x="90518" fg:w="39"/><text x="88.6586%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (39 samples, 0.04%)</title><rect x="88.4086%" y="549" width="0.0381%" height="15" fill="rgb(232,154,2)" fg:x="90518" fg:w="39"/><text x="88.6586%" y="559.50"></text></g><g><title>async_executor::Ticker::sleep (496 samples, 0.48%)</title><rect x="88.1429%" y="581" width="0.4844%" height="15" fill="rgb(241,212,25)" fg:x="90246" fg:w="496"/><text x="88.3929%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (185 samples, 0.18%)</title><rect x="88.4467%" y="565" width="0.1807%" height="15" fill="rgb(226,69,20)" fg:x="90557" fg:w="185"/><text x="88.6967%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (177 samples, 0.17%)</title><rect x="88.4545%" y="549" width="0.1729%" height="15" fill="rgb(247,184,54)" fg:x="90565" fg:w="177"/><text x="88.7045%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (171 samples, 0.17%)</title><rect x="88.4603%" y="533" width="0.1670%" height="15" fill="rgb(210,145,0)" fg:x="90571" fg:w="171"/><text x="88.7103%" y="543.50"></text></g><g><title>___pthread_mutex_lock (171 samples, 0.17%)</title><rect x="88.4603%" y="517" width="0.1670%" height="15" fill="rgb(253,82,12)" fg:x="90571" fg:w="171"/><text x="88.7103%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (17 samples, 0.02%)</title><rect x="88.6107%" y="501" width="0.0166%" height="15" fill="rgb(245,42,11)" fg:x="90725" fg:w="17"/><text x="88.8607%" y="511.50"></text></g><g><title>async_executor::Sleepers::remove (19 samples, 0.02%)</title><rect x="88.6283%" y="565" width="0.0186%" height="15" fill="rgb(219,147,32)" fg:x="90743" fg:w="19"/><text x="88.8783%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (11 samples, 0.01%)</title><rect x="88.6361%" y="549" width="0.0107%" height="15" fill="rgb(246,12,7)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (11 samples, 0.01%)</title><rect x="88.6361%" y="533" width="0.0107%" height="15" fill="rgb(243,50,9)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="88.6361%" y="517" width="0.0107%" height="15" fill="rgb(219,149,6)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (11 samples, 0.01%)</title><rect x="88.6361%" y="501" width="0.0107%" height="15" fill="rgb(241,51,42)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="511.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="88.6361%" y="485" width="0.0107%" height="15" fill="rgb(226,128,27)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="88.6361%" y="469" width="0.0107%" height="15" fill="rgb(244,144,4)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="88.6361%" y="453" width="0.0107%" height="15" fill="rgb(221,4,13)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="88.6361%" y="437" width="0.0107%" height="15" fill="rgb(208,170,28)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="88.6361%" y="421" width="0.0107%" height="15" fill="rgb(226,131,13)" fg:x="90751" fg:w="11"/><text x="88.8861%" y="431.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (25 samples, 0.02%)</title><rect x="88.6488%" y="501" width="0.0244%" height="15" fill="rgb(215,72,41)" fg:x="90764" fg:w="25"/><text x="88.8988%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (29 samples, 0.03%)</title><rect x="88.6469%" y="565" width="0.0283%" height="15" fill="rgb(243,108,20)" fg:x="90762" fg:w="29"/><text x="88.8969%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="88.6469%" y="549" width="0.0283%" height="15" fill="rgb(230,189,17)" fg:x="90762" fg:w="29"/><text x="88.8969%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (27 samples, 0.03%)</title><rect x="88.6488%" y="533" width="0.0264%" height="15" fill="rgb(220,50,17)" fg:x="90764" fg:w="27"/><text x="88.8988%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.03%)</title><rect x="88.6488%" y="517" width="0.0264%" height="15" fill="rgb(248,152,48)" fg:x="90764" fg:w="27"/><text x="88.8988%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (22 samples, 0.02%)</title><rect x="88.6762%" y="565" width="0.0215%" height="15" fill="rgb(244,91,11)" fg:x="90792" fg:w="22"/><text x="88.9262%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (22 samples, 0.02%)</title><rect x="88.6762%" y="549" width="0.0215%" height="15" fill="rgb(220,157,5)" fg:x="90792" fg:w="22"/><text x="88.9262%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (25 samples, 0.02%)</title><rect x="88.6977%" y="565" width="0.0244%" height="15" fill="rgb(253,137,8)" fg:x="90814" fg:w="25"/><text x="88.9477%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (25 samples, 0.02%)</title><rect x="88.6977%" y="549" width="0.0244%" height="15" fill="rgb(217,137,51)" fg:x="90814" fg:w="25"/><text x="88.9477%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,889 samples, 2.82%)</title><rect x="85.9414%" y="645" width="2.8217%" height="15" fill="rgb(218,209,53)" fg:x="87992" fg:w="2889"/><text x="86.1914%" y="655.50">&lt;c..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (2,882 samples, 2.81%)</title><rect x="85.9483%" y="629" width="2.8148%" height="15" fill="rgb(249,137,25)" fg:x="87999" fg:w="2882"/><text x="86.1983%" y="639.50">as..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,879 samples, 2.81%)</title><rect x="85.9512%" y="613" width="2.8119%" height="15" fill="rgb(239,155,26)" fg:x="88002" fg:w="2879"/><text x="86.2012%" y="623.50">&lt;f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2,874 samples, 2.81%)</title><rect x="85.9561%" y="597" width="2.8070%" height="15" fill="rgb(227,85,46)" fg:x="88007" fg:w="2874"/><text x="86.2061%" y="607.50">as..</text></g><g><title>async_executor::Ticker::wake (139 samples, 0.14%)</title><rect x="88.6274%" y="581" width="0.1358%" height="15" fill="rgb(251,107,43)" fg:x="90742" fg:w="139"/><text x="88.8774%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42 samples, 0.04%)</title><rect x="88.7221%" y="565" width="0.0410%" height="15" fill="rgb(234,170,33)" fg:x="90839" fg:w="42"/><text x="88.9721%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (41 samples, 0.04%)</title><rect x="88.7231%" y="549" width="0.0400%" height="15" fill="rgb(206,29,35)" fg:x="90840" fg:w="41"/><text x="88.9731%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (37 samples, 0.04%)</title><rect x="88.7270%" y="533" width="0.0361%" height="15" fill="rgb(227,138,25)" fg:x="90844" fg:w="37"/><text x="88.9770%" y="543.50"></text></g><g><title>___pthread_mutex_lock (37 samples, 0.04%)</title><rect x="88.7270%" y="517" width="0.0361%" height="15" fill="rgb(249,131,35)" fg:x="90844" fg:w="37"/><text x="88.9770%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,928 samples, 2.86%)</title><rect x="85.9278%" y="677" width="2.8598%" height="15" fill="rgb(239,6,40)" fg:x="87978" fg:w="2928"/><text x="86.1778%" y="687.50">&lt;c..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (2,925 samples, 2.86%)</title><rect x="85.9307%" y="661" width="2.8568%" height="15" fill="rgb(246,136,47)" fg:x="87981" fg:w="2925"/><text x="86.1807%" y="671.50">as..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (25 samples, 0.02%)</title><rect x="88.7631%" y="645" width="0.0244%" height="15" fill="rgb(253,58,26)" fg:x="90881" fg:w="25"/><text x="89.0131%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (25 samples, 0.02%)</title><rect x="88.7631%" y="629" width="0.0244%" height="15" fill="rgb(237,141,10)" fg:x="90881" fg:w="25"/><text x="89.0131%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (34 samples, 0.03%)</title><rect x="88.8510%" y="549" width="0.0332%" height="15" fill="rgb(234,156,12)" fg:x="90971" fg:w="34"/><text x="89.1010%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (31 samples, 0.03%)</title><rect x="88.8539%" y="533" width="0.0303%" height="15" fill="rgb(243,224,36)" fg:x="90974" fg:w="31"/><text x="89.1039%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (29 samples, 0.03%)</title><rect x="88.8842%" y="533" width="0.0283%" height="15" fill="rgb(205,229,51)" fg:x="91005" fg:w="29"/><text x="89.1342%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (28 samples, 0.03%)</title><rect x="88.9213%" y="485" width="0.0273%" height="15" fill="rgb(223,189,4)" fg:x="91043" fg:w="28"/><text x="89.1713%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (22 samples, 0.02%)</title><rect x="89.5855%" y="469" width="0.0215%" height="15" fill="rgb(249,167,54)" fg:x="91723" fg:w="22"/><text x="89.8355%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (22 samples, 0.02%)</title><rect x="89.5855%" y="453" width="0.0215%" height="15" fill="rgb(218,34,28)" fg:x="91723" fg:w="22"/><text x="89.8355%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="89.5943%" y="437" width="0.0127%" height="15" fill="rgb(232,109,42)" fg:x="91732" fg:w="13"/><text x="89.8443%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="89.6070%" y="469" width="0.0137%" height="15" fill="rgb(248,214,46)" fg:x="91745" fg:w="14"/><text x="89.8570%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="89.6099%" y="453" width="0.0107%" height="15" fill="rgb(244,216,40)" fg:x="91748" fg:w="11"/><text x="89.8599%" y="463.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="89.6207%" y="469" width="0.0225%" height="15" fill="rgb(231,226,31)" fg:x="91759" fg:w="23"/><text x="89.8707%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="89.6685%" y="453" width="0.0147%" height="15" fill="rgb(238,38,43)" fg:x="91808" fg:w="15"/><text x="89.9185%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (19 samples, 0.02%)</title><rect x="89.9840%" y="421" width="0.0186%" height="15" fill="rgb(208,88,43)" fg:x="92131" fg:w="19"/><text x="90.2340%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (19 samples, 0.02%)</title><rect x="89.9840%" y="405" width="0.0186%" height="15" fill="rgb(205,136,37)" fg:x="92131" fg:w="19"/><text x="90.2340%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (19 samples, 0.02%)</title><rect x="89.9840%" y="389" width="0.0186%" height="15" fill="rgb(237,34,14)" fg:x="92131" fg:w="19"/><text x="90.2340%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="89.9840%" y="373" width="0.0186%" height="15" fill="rgb(236,193,44)" fg:x="92131" fg:w="19"/><text x="90.2340%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (19 samples, 0.02%)</title><rect x="89.9840%" y="357" width="0.0186%" height="15" fill="rgb(231,48,10)" fg:x="92131" fg:w="19"/><text x="90.2340%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (38 samples, 0.04%)</title><rect x="90.0025%" y="373" width="0.0371%" height="15" fill="rgb(213,141,34)" fg:x="92150" fg:w="38"/><text x="90.2525%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (20 samples, 0.02%)</title><rect x="90.0201%" y="357" width="0.0195%" height="15" fill="rgb(249,130,34)" fg:x="92168" fg:w="20"/><text x="90.2701%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (493 samples, 0.48%)</title><rect x="89.6441%" y="469" width="0.4815%" height="15" fill="rgb(219,42,41)" fg:x="91783" fg:w="493"/><text x="89.8941%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (453 samples, 0.44%)</title><rect x="89.6832%" y="453" width="0.4424%" height="15" fill="rgb(224,100,54)" fg:x="91823" fg:w="453"/><text x="89.9332%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (145 samples, 0.14%)</title><rect x="89.9840%" y="437" width="0.1416%" height="15" fill="rgb(229,200,27)" fg:x="92131" fg:w="145"/><text x="90.2340%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (126 samples, 0.12%)</title><rect x="90.0025%" y="421" width="0.1231%" height="15" fill="rgb(217,118,10)" fg:x="92150" fg:w="126"/><text x="90.2525%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (126 samples, 0.12%)</title><rect x="90.0025%" y="405" width="0.1231%" height="15" fill="rgb(206,22,3)" fg:x="92150" fg:w="126"/><text x="90.2525%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.12%)</title><rect x="90.0025%" y="389" width="0.1231%" height="15" fill="rgb(232,163,46)" fg:x="92150" fg:w="126"/><text x="90.2525%" y="399.50"></text></g><g><title>core::mem::drop (88 samples, 0.09%)</title><rect x="90.0397%" y="373" width="0.0859%" height="15" fill="rgb(206,95,13)" fg:x="92188" fg:w="88"/><text x="90.2897%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (88 samples, 0.09%)</title><rect x="90.0397%" y="357" width="0.0859%" height="15" fill="rgb(253,154,18)" fg:x="92188" fg:w="88"/><text x="90.2897%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.09%)</title><rect x="90.0397%" y="341" width="0.0859%" height="15" fill="rgb(219,32,23)" fg:x="92188" fg:w="88"/><text x="90.2897%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (47 samples, 0.05%)</title><rect x="90.0797%" y="325" width="0.0459%" height="15" fill="rgb(230,191,45)" fg:x="92229" fg:w="47"/><text x="90.3297%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (17 samples, 0.02%)</title><rect x="90.1090%" y="309" width="0.0166%" height="15" fill="rgb(229,64,36)" fg:x="92259" fg:w="17"/><text x="90.3590%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (17 samples, 0.02%)</title><rect x="90.1090%" y="293" width="0.0166%" height="15" fill="rgb(205,129,25)" fg:x="92259" fg:w="17"/><text x="90.3590%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (14 samples, 0.01%)</title><rect x="90.1119%" y="277" width="0.0137%" height="15" fill="rgb(254,112,7)" fg:x="92262" fg:w="14"/><text x="90.3619%" y="287.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="90.1119%" y="261" width="0.0137%" height="15" fill="rgb(226,53,48)" fg:x="92262" fg:w="14"/><text x="90.3619%" y="271.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (289 samples, 0.28%)</title><rect x="90.1324%" y="469" width="0.2823%" height="15" fill="rgb(214,153,38)" fg:x="92283" fg:w="289"/><text x="90.3824%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="90.3952%" y="453" width="0.0195%" height="15" fill="rgb(243,101,7)" fg:x="92552" fg:w="20"/><text x="90.6452%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (20 samples, 0.02%)</title><rect x="90.3952%" y="437" width="0.0195%" height="15" fill="rgb(240,140,22)" fg:x="92552" fg:w="20"/><text x="90.6452%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (305 samples, 0.30%)</title><rect x="90.4450%" y="437" width="0.2979%" height="15" fill="rgb(235,114,2)" fg:x="92603" fg:w="305"/><text x="90.6950%" y="447.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="90.7517%" y="325" width="0.0107%" height="15" fill="rgb(242,59,12)" fg:x="92917" fg:w="11"/><text x="91.0017%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.02%)</title><rect x="90.8112%" y="165" width="0.0156%" height="15" fill="rgb(252,134,9)" fg:x="92978" fg:w="16"/><text x="91.0612%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="90.8122%" y="149" width="0.0147%" height="15" fill="rgb(236,4,44)" fg:x="92979" fg:w="15"/><text x="91.0622%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.04%)</title><rect x="90.8005%" y="213" width="0.0352%" height="15" fill="rgb(254,172,41)" fg:x="92967" fg:w="36"/><text x="91.0505%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.04%)</title><rect x="90.8005%" y="197" width="0.0352%" height="15" fill="rgb(244,63,20)" fg:x="92967" fg:w="36"/><text x="91.0505%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (32 samples, 0.03%)</title><rect x="90.8044%" y="181" width="0.0313%" height="15" fill="rgb(250,73,31)" fg:x="92971" fg:w="32"/><text x="91.0544%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (46 samples, 0.04%)</title><rect x="90.8005%" y="229" width="0.0449%" height="15" fill="rgb(241,38,36)" fg:x="92967" fg:w="46"/><text x="91.0505%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (62 samples, 0.06%)</title><rect x="90.7898%" y="245" width="0.0606%" height="15" fill="rgb(245,211,2)" fg:x="92956" fg:w="62"/><text x="91.0398%" y="255.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (33 samples, 0.03%)</title><rect x="90.8689%" y="229" width="0.0322%" height="15" fill="rgb(206,120,28)" fg:x="93037" fg:w="33"/><text x="91.1189%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (367 samples, 0.36%)</title><rect x="90.7898%" y="277" width="0.3584%" height="15" fill="rgb(211,59,34)" fg:x="92956" fg:w="367"/><text x="91.0398%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (367 samples, 0.36%)</title><rect x="90.7898%" y="261" width="0.3584%" height="15" fill="rgb(233,168,5)" fg:x="92956" fg:w="367"/><text x="91.0398%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (305 samples, 0.30%)</title><rect x="90.8503%" y="245" width="0.2979%" height="15" fill="rgb(234,33,13)" fg:x="93018" fg:w="305"/><text x="91.1003%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (253 samples, 0.25%)</title><rect x="90.9011%" y="229" width="0.2471%" height="15" fill="rgb(231,150,26)" fg:x="93070" fg:w="253"/><text x="91.1511%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (253 samples, 0.25%)</title><rect x="90.9011%" y="213" width="0.2471%" height="15" fill="rgb(217,191,4)" fg:x="93070" fg:w="253"/><text x="91.1511%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (253 samples, 0.25%)</title><rect x="90.9011%" y="197" width="0.2471%" height="15" fill="rgb(246,198,38)" fg:x="93070" fg:w="253"/><text x="91.1511%" y="207.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (15 samples, 0.01%)</title><rect x="91.1482%" y="261" width="0.0147%" height="15" fill="rgb(245,64,37)" fg:x="93323" fg:w="15"/><text x="91.3982%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (11 samples, 0.01%)</title><rect x="91.1629%" y="245" width="0.0107%" height="15" fill="rgb(250,30,36)" fg:x="93338" fg:w="11"/><text x="91.4129%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::take (18 samples, 0.02%)</title><rect x="91.1736%" y="245" width="0.0176%" height="15" fill="rgb(217,86,53)" fg:x="93349" fg:w="18"/><text x="91.4236%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (18 samples, 0.02%)</title><rect x="91.1736%" y="229" width="0.0176%" height="15" fill="rgb(228,157,16)" fg:x="93349" fg:w="18"/><text x="91.4236%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.05%)</title><rect x="91.1482%" y="277" width="0.0469%" height="15" fill="rgb(217,59,31)" fg:x="93323" fg:w="48"/><text x="91.3982%" y="287.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (33 samples, 0.03%)</title><rect x="91.1629%" y="261" width="0.0322%" height="15" fill="rgb(237,138,41)" fg:x="93338" fg:w="33"/><text x="91.4129%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (21 samples, 0.02%)</title><rect x="91.1961%" y="277" width="0.0205%" height="15" fill="rgb(227,91,49)" fg:x="93372" fg:w="21"/><text x="91.4461%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (21 samples, 0.02%)</title><rect x="91.1961%" y="261" width="0.0205%" height="15" fill="rgb(247,21,44)" fg:x="93372" fg:w="21"/><text x="91.4461%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (609 samples, 0.59%)</title><rect x="90.7653%" y="325" width="0.5948%" height="15" fill="rgb(219,210,51)" fg:x="92931" fg:w="609"/><text x="91.0153%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (609 samples, 0.59%)</title><rect x="90.7653%" y="309" width="0.5948%" height="15" fill="rgb(209,140,6)" fg:x="92931" fg:w="609"/><text x="91.0153%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (595 samples, 0.58%)</title><rect x="90.7790%" y="293" width="0.5811%" height="15" fill="rgb(221,188,24)" fg:x="92945" fg:w="595"/><text x="91.0290%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (147 samples, 0.14%)</title><rect x="91.2166%" y="277" width="0.1436%" height="15" fill="rgb(232,154,20)" fg:x="93393" fg:w="147"/><text x="91.4666%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (147 samples, 0.14%)</title><rect x="91.2166%" y="261" width="0.1436%" height="15" fill="rgb(244,137,50)" fg:x="93393" fg:w="147"/><text x="91.4666%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (976 samples, 0.95%)</title><rect x="90.4147%" y="453" width="0.9533%" height="15" fill="rgb(225,185,43)" fg:x="92572" fg:w="976"/><text x="90.6647%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (640 samples, 0.63%)</title><rect x="90.7429%" y="437" width="0.6251%" height="15" fill="rgb(213,205,38)" fg:x="92908" fg:w="640"/><text x="90.9929%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (640 samples, 0.63%)</title><rect x="90.7429%" y="421" width="0.6251%" height="15" fill="rgb(236,73,12)" fg:x="92908" fg:w="640"/><text x="90.9929%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (640 samples, 0.63%)</title><rect x="90.7429%" y="405" width="0.6251%" height="15" fill="rgb(235,219,13)" fg:x="92908" fg:w="640"/><text x="90.9929%" y="415.50"></text></g><g><title>alloc::alloc::alloc (634 samples, 0.62%)</title><rect x="90.7487%" y="389" width="0.6192%" height="15" fill="rgb(218,59,36)" fg:x="92914" fg:w="634"/><text x="90.9987%" y="399.50"></text></g><g><title>__rg_alloc (634 samples, 0.62%)</title><rect x="90.7487%" y="373" width="0.6192%" height="15" fill="rgb(205,110,39)" fg:x="92914" fg:w="634"/><text x="90.9987%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (634 samples, 0.62%)</title><rect x="90.7487%" y="357" width="0.6192%" height="15" fill="rgb(218,206,42)" fg:x="92914" fg:w="634"/><text x="90.9987%" y="367.50"></text></g><g><title>rust_alloc (631 samples, 0.62%)</title><rect x="90.7517%" y="341" width="0.6163%" height="15" fill="rgb(248,125,24)" fg:x="92917" fg:w="631"/><text x="91.0017%" y="351.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (990 samples, 0.97%)</title><rect x="90.4147%" y="469" width="0.9669%" height="15" fill="rgb(242,28,27)" fg:x="92572" fg:w="990"/><text x="90.6647%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (14 samples, 0.01%)</title><rect x="91.3680%" y="453" width="0.0137%" height="15" fill="rgb(216,228,15)" fg:x="93548" fg:w="14"/><text x="91.6180%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="91.4695%" y="373" width="0.0117%" height="15" fill="rgb(235,116,46)" fg:x="93652" fg:w="12"/><text x="91.7195%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (14 samples, 0.01%)</title><rect x="91.4871%" y="325" width="0.0137%" height="15" fill="rgb(224,18,32)" fg:x="93670" fg:w="14"/><text x="91.7371%" y="335.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (117 samples, 0.11%)</title><rect x="91.3992%" y="453" width="0.1143%" height="15" fill="rgb(252,5,12)" fg:x="93580" fg:w="117"/><text x="91.6492%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (67 samples, 0.07%)</title><rect x="91.4480%" y="437" width="0.0654%" height="15" fill="rgb(251,36,5)" fg:x="93630" fg:w="67"/><text x="91.6980%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45 samples, 0.04%)</title><rect x="91.4695%" y="421" width="0.0440%" height="15" fill="rgb(217,53,14)" fg:x="93652" fg:w="45"/><text x="91.7195%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (45 samples, 0.04%)</title><rect x="91.4695%" y="405" width="0.0440%" height="15" fill="rgb(215,86,45)" fg:x="93652" fg:w="45"/><text x="91.7195%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45 samples, 0.04%)</title><rect x="91.4695%" y="389" width="0.0440%" height="15" fill="rgb(242,169,11)" fg:x="93652" fg:w="45"/><text x="91.7195%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="91.4822%" y="373" width="0.0313%" height="15" fill="rgb(211,213,45)" fg:x="93665" fg:w="32"/><text x="91.7322%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="91.4871%" y="357" width="0.0264%" height="15" fill="rgb(205,88,11)" fg:x="93670" fg:w="27"/><text x="91.7371%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.03%)</title><rect x="91.4871%" y="341" width="0.0264%" height="15" fill="rgb(252,69,26)" fg:x="93670" fg:w="27"/><text x="91.7371%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (13 samples, 0.01%)</title><rect x="91.5008%" y="325" width="0.0127%" height="15" fill="rgb(246,123,37)" fg:x="93684" fg:w="13"/><text x="91.7508%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (13 samples, 0.01%)</title><rect x="91.5008%" y="309" width="0.0127%" height="15" fill="rgb(212,205,5)" fg:x="93684" fg:w="13"/><text x="91.7508%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (13 samples, 0.01%)</title><rect x="91.5008%" y="293" width="0.0127%" height="15" fill="rgb(253,148,0)" fg:x="93684" fg:w="13"/><text x="91.7508%" y="303.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (472 samples, 0.46%)</title><rect x="91.5135%" y="453" width="0.4610%" height="15" fill="rgb(239,22,4)" fg:x="93697" fg:w="472"/><text x="91.7635%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="91.9374%" y="437" width="0.0371%" height="15" fill="rgb(226,26,53)" fg:x="94131" fg:w="38"/><text x="92.1874%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (19 samples, 0.02%)</title><rect x="91.9559%" y="421" width="0.0186%" height="15" fill="rgb(225,229,45)" fg:x="94150" fg:w="19"/><text x="92.2059%" y="431.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (608 samples, 0.59%)</title><rect x="91.3816%" y="469" width="0.5938%" height="15" fill="rgb(220,60,37)" fg:x="93562" fg:w="608"/><text x="91.6316%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2,500 samples, 2.44%)</title><rect x="91.9755%" y="469" width="2.4417%" height="15" fill="rgb(217,180,35)" fg:x="94170" fg:w="2500"/><text x="92.2255%" y="479.50">__..</text></g><g><title>rust_dealloc (28 samples, 0.03%)</title><rect x="94.4475%" y="277" width="0.0273%" height="15" fill="rgb(229,7,53)" fg:x="96701" fg:w="28"/><text x="94.6975%" y="287.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="94.4748%" y="277" width="0.0117%" height="15" fill="rgb(254,137,3)" fg:x="96729" fg:w="12"/><text x="94.7248%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (36 samples, 0.04%)</title><rect x="94.5872%" y="181" width="0.0352%" height="15" fill="rgb(215,140,41)" fg:x="96844" fg:w="36"/><text x="94.8372%" y="191.50"></text></g><g><title> (36 samples, 0.04%)</title><rect x="94.5872%" y="165" width="0.0352%" height="15" fill="rgb(250,80,15)" fg:x="96844" fg:w="36"/><text x="94.8372%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (136 samples, 0.13%)</title><rect x="94.5110%" y="213" width="0.1328%" height="15" fill="rgb(252,191,6)" fg:x="96766" fg:w="136"/><text x="94.7610%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (122 samples, 0.12%)</title><rect x="94.5246%" y="197" width="0.1192%" height="15" fill="rgb(246,217,18)" fg:x="96780" fg:w="122"/><text x="94.7746%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (20 samples, 0.02%)</title><rect x="94.6243%" y="181" width="0.0195%" height="15" fill="rgb(223,93,7)" fg:x="96882" fg:w="20"/><text x="94.8743%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (215 samples, 0.21%)</title><rect x="94.4866%" y="245" width="0.2100%" height="15" fill="rgb(225,55,52)" fg:x="96741" fg:w="215"/><text x="94.7366%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (215 samples, 0.21%)</title><rect x="94.4866%" y="229" width="0.2100%" height="15" fill="rgb(240,31,24)" fg:x="96741" fg:w="215"/><text x="94.7366%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (53 samples, 0.05%)</title><rect x="94.6448%" y="213" width="0.0518%" height="15" fill="rgb(205,56,52)" fg:x="96903" fg:w="53"/><text x="94.8948%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (216 samples, 0.21%)</title><rect x="94.4866%" y="277" width="0.2110%" height="15" fill="rgb(246,146,12)" fg:x="96741" fg:w="216"/><text x="94.7366%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (216 samples, 0.21%)</title><rect x="94.4866%" y="261" width="0.2110%" height="15" fill="rgb(239,84,36)" fg:x="96741" fg:w="216"/><text x="94.7366%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (259 samples, 0.25%)</title><rect x="94.4465%" y="293" width="0.2530%" height="15" fill="rgb(207,41,40)" fg:x="96700" fg:w="259"/><text x="94.6965%" y="303.50"></text></g><g><title>rust_dealloc (340 samples, 0.33%)</title><rect x="94.4260%" y="309" width="0.3321%" height="15" fill="rgb(241,179,25)" fg:x="96679" fg:w="340"/><text x="94.6760%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (60 samples, 0.06%)</title><rect x="94.6995%" y="293" width="0.0586%" height="15" fill="rgb(210,0,34)" fg:x="96959" fg:w="60"/><text x="94.9495%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (351 samples, 0.34%)</title><rect x="94.4172%" y="469" width="0.3428%" height="15" fill="rgb(225,217,29)" fg:x="96670" fg:w="351"/><text x="94.6672%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (351 samples, 0.34%)</title><rect x="94.4172%" y="453" width="0.3428%" height="15" fill="rgb(216,191,38)" fg:x="96670" fg:w="351"/><text x="94.6672%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (342 samples, 0.33%)</title><rect x="94.4260%" y="437" width="0.3340%" height="15" fill="rgb(232,140,52)" fg:x="96679" fg:w="342"/><text x="94.6760%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (342 samples, 0.33%)</title><rect x="94.4260%" y="421" width="0.3340%" height="15" fill="rgb(223,158,51)" fg:x="96679" fg:w="342"/><text x="94.6760%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (342 samples, 0.33%)</title><rect x="94.4260%" y="405" width="0.3340%" height="15" fill="rgb(235,29,51)" fg:x="96679" fg:w="342"/><text x="94.6760%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (342 samples, 0.33%)</title><rect x="94.4260%" y="389" width="0.3340%" height="15" fill="rgb(215,181,18)" fg:x="96679" fg:w="342"/><text x="94.6760%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (342 samples, 0.33%)</title><rect x="94.4260%" y="373" width="0.3340%" height="15" fill="rgb(227,125,34)" fg:x="96679" fg:w="342"/><text x="94.6760%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (342 samples, 0.33%)</title><rect x="94.4260%" y="357" width="0.3340%" height="15" fill="rgb(230,197,49)" fg:x="96679" fg:w="342"/><text x="94.6760%" y="367.50"></text></g><g><title>__rg_dealloc (342 samples, 0.33%)</title><rect x="94.4260%" y="341" width="0.3340%" height="15" fill="rgb(239,141,16)" fg:x="96679" fg:w="342"/><text x="94.6760%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (342 samples, 0.33%)</title><rect x="94.4260%" y="325" width="0.3340%" height="15" fill="rgb(225,105,43)" fg:x="96679" fg:w="342"/><text x="94.6760%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (42 samples, 0.04%)</title><rect x="94.7600%" y="453" width="0.0410%" height="15" fill="rgb(214,131,14)" fg:x="97021" fg:w="42"/><text x="95.0100%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (45 samples, 0.04%)</title><rect x="94.7600%" y="469" width="0.0440%" height="15" fill="rgb(229,177,11)" fg:x="97021" fg:w="45"/><text x="95.0100%" y="479.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="94.8372%" y="341" width="0.0137%" height="15" fill="rgb(231,180,14)" fg:x="97100" fg:w="14"/><text x="95.0872%" y="351.50"></text></g><g><title>rust_dealloc (16 samples, 0.02%)</title><rect x="94.8509%" y="325" width="0.0156%" height="15" fill="rgb(232,88,2)" fg:x="97114" fg:w="16"/><text x="95.1009%" y="335.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="94.8665%" y="261" width="0.0205%" height="15" fill="rgb(205,220,8)" fg:x="97130" fg:w="21"/><text x="95.1165%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (42 samples, 0.04%)</title><rect x="94.9192%" y="213" width="0.0410%" height="15" fill="rgb(225,23,53)" fg:x="97184" fg:w="42"/><text x="95.1692%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (30 samples, 0.03%)</title><rect x="94.9309%" y="197" width="0.0293%" height="15" fill="rgb(213,62,29)" fg:x="97196" fg:w="30"/><text x="95.1809%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (92 samples, 0.09%)</title><rect x="94.8880%" y="261" width="0.0899%" height="15" fill="rgb(227,75,7)" fg:x="97152" fg:w="92"/><text x="95.1380%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (92 samples, 0.09%)</title><rect x="94.8880%" y="245" width="0.0899%" height="15" fill="rgb(207,105,14)" fg:x="97152" fg:w="92"/><text x="95.1380%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (89 samples, 0.09%)</title><rect x="94.8909%" y="229" width="0.0869%" height="15" fill="rgb(245,62,29)" fg:x="97155" fg:w="89"/><text x="95.1409%" y="239.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (18 samples, 0.02%)</title><rect x="94.9602%" y="213" width="0.0176%" height="15" fill="rgb(236,202,4)" fg:x="97226" fg:w="18"/><text x="95.2102%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (18 samples, 0.02%)</title><rect x="94.9602%" y="197" width="0.0176%" height="15" fill="rgb(250,67,1)" fg:x="97226" fg:w="18"/><text x="95.2102%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (127 samples, 0.12%)</title><rect x="94.8665%" y="293" width="0.1240%" height="15" fill="rgb(253,115,44)" fg:x="97130" fg:w="127"/><text x="95.1165%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (127 samples, 0.12%)</title><rect x="94.8665%" y="277" width="0.1240%" height="15" fill="rgb(251,139,18)" fg:x="97130" fg:w="127"/><text x="95.1165%" y="287.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="94.9778%" y="261" width="0.0127%" height="15" fill="rgb(218,22,32)" fg:x="97244" fg:w="13"/><text x="95.2278%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (138 samples, 0.13%)</title><rect x="94.8665%" y="325" width="0.1348%" height="15" fill="rgb(243,53,5)" fg:x="97130" fg:w="138"/><text x="95.1165%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (138 samples, 0.13%)</title><rect x="94.8665%" y="309" width="0.1348%" height="15" fill="rgb(227,56,16)" fg:x="97130" fg:w="138"/><text x="95.1165%" y="319.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="94.9905%" y="293" width="0.0107%" height="15" fill="rgb(245,53,0)" fg:x="97257" fg:w="11"/><text x="95.2405%" y="303.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="94.9905%" y="277" width="0.0107%" height="15" fill="rgb(216,170,35)" fg:x="97257" fg:w="11"/><text x="95.2405%" y="287.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="94.9905%" y="261" width="0.0107%" height="15" fill="rgb(211,200,8)" fg:x="97257" fg:w="11"/><text x="95.2405%" y="271.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="94.9905%" y="245" width="0.0107%" height="15" fill="rgb(228,204,44)" fg:x="97257" fg:w="11"/><text x="95.2405%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (165 samples, 0.16%)</title><rect x="94.8509%" y="341" width="0.1612%" height="15" fill="rgb(214,121,17)" fg:x="97114" fg:w="165"/><text x="95.1009%" y="351.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="95.0013%" y="325" width="0.0107%" height="15" fill="rgb(233,64,38)" fg:x="97268" fg:w="11"/><text x="95.2513%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="95.0013%" y="309" width="0.0107%" height="15" fill="rgb(253,54,19)" fg:x="97268" fg:w="11"/><text x="95.2513%" y="319.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="95.0013%" y="293" width="0.0107%" height="15" fill="rgb(253,94,18)" fg:x="97268" fg:w="11"/><text x="95.2513%" y="303.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="95.0013%" y="277" width="0.0107%" height="15" fill="rgb(227,57,52)" fg:x="97268" fg:w="11"/><text x="95.2513%" y="287.50"></text></g><g><title>rust_dealloc (196 samples, 0.19%)</title><rect x="94.8362%" y="357" width="0.1914%" height="15" fill="rgb(230,228,50)" fg:x="97099" fg:w="196"/><text x="95.0862%" y="367.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="95.0120%" y="341" width="0.0156%" height="15" fill="rgb(217,205,27)" fg:x="97279" fg:w="16"/><text x="95.2620%" y="351.50"></text></g><g><title>alloc::alloc::box_free (227 samples, 0.22%)</title><rect x="94.8167%" y="437" width="0.2217%" height="15" fill="rgb(252,71,50)" fg:x="97079" fg:w="227"/><text x="95.0667%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (209 samples, 0.20%)</title><rect x="94.8343%" y="421" width="0.2041%" height="15" fill="rgb(209,86,4)" fg:x="97097" fg:w="209"/><text x="95.0843%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (207 samples, 0.20%)</title><rect x="94.8362%" y="405" width="0.2022%" height="15" fill="rgb(229,94,0)" fg:x="97099" fg:w="207"/><text x="95.0862%" y="415.50"></text></g><g><title>__rg_dealloc (207 samples, 0.20%)</title><rect x="94.8362%" y="389" width="0.2022%" height="15" fill="rgb(252,223,21)" fg:x="97099" fg:w="207"/><text x="95.0862%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (207 samples, 0.20%)</title><rect x="94.8362%" y="373" width="0.2022%" height="15" fill="rgb(230,210,4)" fg:x="97099" fg:w="207"/><text x="95.0862%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (11 samples, 0.01%)</title><rect x="95.0276%" y="357" width="0.0107%" height="15" fill="rgb(240,149,38)" fg:x="97295" fg:w="11"/><text x="95.2776%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (254 samples, 0.25%)</title><rect x="94.8040%" y="469" width="0.2481%" height="15" fill="rgb(254,105,20)" fg:x="97066" fg:w="254"/><text x="95.0540%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (254 samples, 0.25%)</title><rect x="94.8040%" y="453" width="0.2481%" height="15" fill="rgb(253,87,46)" fg:x="97066" fg:w="254"/><text x="95.0540%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="95.0384%" y="437" width="0.0137%" height="15" fill="rgb(253,116,33)" fg:x="97306" fg:w="14"/><text x="95.2884%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="95.0384%" y="421" width="0.0137%" height="15" fill="rgb(229,198,5)" fg:x="97306" fg:w="14"/><text x="95.2884%" y="431.50"></text></g><g><title>core::time::Duration::as_nanos (32 samples, 0.03%)</title><rect x="95.1321%" y="453" width="0.0313%" height="15" fill="rgb(242,38,37)" fg:x="97402" fg:w="32"/><text x="95.3821%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (194 samples, 0.19%)</title><rect x="95.3187%" y="405" width="0.1895%" height="15" fill="rgb(242,69,53)" fg:x="97593" fg:w="194"/><text x="95.5687%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (194 samples, 0.19%)</title><rect x="95.3187%" y="389" width="0.1895%" height="15" fill="rgb(249,80,16)" fg:x="97593" fg:w="194"/><text x="95.5687%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (191 samples, 0.19%)</title><rect x="95.3216%" y="373" width="0.1865%" height="15" fill="rgb(206,128,11)" fg:x="97596" fg:w="191"/><text x="95.5716%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (191 samples, 0.19%)</title><rect x="95.3216%" y="357" width="0.1865%" height="15" fill="rgb(212,35,20)" fg:x="97596" fg:w="191"/><text x="95.5716%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (191 samples, 0.19%)</title><rect x="95.3216%" y="341" width="0.1865%" height="15" fill="rgb(236,79,13)" fg:x="97596" fg:w="191"/><text x="95.5716%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (93 samples, 0.09%)</title><rect x="95.4173%" y="325" width="0.0908%" height="15" fill="rgb(233,123,3)" fg:x="97694" fg:w="93"/><text x="95.6673%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (436 samples, 0.43%)</title><rect x="95.1634%" y="437" width="0.4258%" height="15" fill="rgb(214,93,52)" fg:x="97434" fg:w="436"/><text x="95.4134%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (436 samples, 0.43%)</title><rect x="95.1634%" y="421" width="0.4258%" height="15" fill="rgb(251,37,40)" fg:x="97434" fg:w="436"/><text x="95.4134%" y="431.50"></text></g><g><title>core::time::Duration::new (83 samples, 0.08%)</title><rect x="95.5082%" y="405" width="0.0811%" height="15" fill="rgb(227,80,54)" fg:x="97787" fg:w="83"/><text x="95.7582%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (473 samples, 0.46%)</title><rect x="95.1634%" y="453" width="0.4620%" height="15" fill="rgb(254,48,11)" fg:x="97434" fg:w="473"/><text x="95.4134%" y="463.50"></text></g><g><title>tremor_common::time::nanotime (37 samples, 0.04%)</title><rect x="95.5892%" y="437" width="0.0361%" height="15" fill="rgb(235,193,26)" fg:x="97870" fg:w="37"/><text x="95.8392%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (2,346 samples, 2.29%)</title><rect x="95.0521%" y="469" width="2.2913%" height="15" fill="rgb(229,99,21)" fg:x="97320" fg:w="2346"/><text x="95.3021%" y="479.50">t..</text></g><g><title>std::time::SystemTime::now (1,759 samples, 1.72%)</title><rect x="95.6254%" y="453" width="1.7180%" height="15" fill="rgb(211,140,41)" fg:x="97907" fg:w="1759"/><text x="95.8754%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,759 samples, 1.72%)</title><rect x="95.6254%" y="437" width="1.7180%" height="15" fill="rgb(240,227,30)" fg:x="97907" fg:w="1759"/><text x="95.8754%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (1,759 samples, 1.72%)</title><rect x="95.6254%" y="421" width="1.7180%" height="15" fill="rgb(215,224,45)" fg:x="97907" fg:w="1759"/><text x="95.8754%" y="431.50"></text></g><g><title>__clock_gettime_2 (1,406 samples, 1.37%)</title><rect x="95.9702%" y="405" width="1.3732%" height="15" fill="rgb(206,123,31)" fg:x="98260" fg:w="1406"/><text x="96.2202%" y="415.50"></text></g><g><title>__vdso_clock_gettime (1,344 samples, 1.31%)</title><rect x="96.0307%" y="389" width="1.3127%" height="15" fill="rgb(210,138,16)" fg:x="98322" fg:w="1344"/><text x="96.2807%" y="399.50"></text></g><g><title>[[vdso]] (868 samples, 0.85%)</title><rect x="96.4956%" y="373" width="0.8478%" height="15" fill="rgb(228,57,28)" fg:x="98798" fg:w="868"/><text x="96.7456%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (22 samples, 0.02%)</title><rect x="97.3561%" y="405" width="0.0215%" height="15" fill="rgb(242,170,10)" fg:x="99679" fg:w="22"/><text x="97.6061%" y="415.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (15 samples, 0.01%)</title><rect x="97.3629%" y="389" width="0.0147%" height="15" fill="rgb(228,214,39)" fg:x="99686" fg:w="15"/><text x="97.6129%" y="399.50"></text></g><g><title>core::mem::drop (26 samples, 0.03%)</title><rect x="97.3776%" y="405" width="0.0254%" height="15" fill="rgb(218,179,33)" fg:x="99701" fg:w="26"/><text x="97.6276%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (26 samples, 0.03%)</title><rect x="97.3776%" y="389" width="0.0254%" height="15" fill="rgb(235,193,39)" fg:x="99701" fg:w="26"/><text x="97.6276%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="97.3776%" y="373" width="0.0254%" height="15" fill="rgb(219,221,36)" fg:x="99701" fg:w="26"/><text x="97.6276%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (25 samples, 0.02%)</title><rect x="97.3785%" y="357" width="0.0244%" height="15" fill="rgb(248,218,19)" fg:x="99702" fg:w="25"/><text x="97.6285%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (23 samples, 0.02%)</title><rect x="97.3805%" y="341" width="0.0225%" height="15" fill="rgb(205,50,9)" fg:x="99704" fg:w="23"/><text x="97.6305%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (23 samples, 0.02%)</title><rect x="97.3805%" y="325" width="0.0225%" height="15" fill="rgb(238,81,28)" fg:x="99704" fg:w="23"/><text x="97.6305%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.01%)</title><rect x="97.3883%" y="309" width="0.0147%" height="15" fill="rgb(235,110,19)" fg:x="99712" fg:w="15"/><text x="97.6383%" y="319.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="97.3883%" y="293" width="0.0147%" height="15" fill="rgb(214,7,14)" fg:x="99712" fg:w="15"/><text x="97.6383%" y="303.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="97.3903%" y="277" width="0.0127%" height="15" fill="rgb(211,77,3)" fg:x="99714" fg:w="13"/><text x="97.6403%" y="287.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (70 samples, 0.07%)</title><rect x="97.3434%" y="469" width="0.0684%" height="15" fill="rgb(229,5,9)" fg:x="99666" fg:w="70"/><text x="97.5934%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (57 samples, 0.06%)</title><rect x="97.3561%" y="453" width="0.0557%" height="15" fill="rgb(225,90,11)" fg:x="99679" fg:w="57"/><text x="97.6061%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (57 samples, 0.06%)</title><rect x="97.3561%" y="437" width="0.0557%" height="15" fill="rgb(242,56,8)" fg:x="99679" fg:w="57"/><text x="97.6061%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.06%)</title><rect x="97.3561%" y="421" width="0.0557%" height="15" fill="rgb(249,212,39)" fg:x="99679" fg:w="57"/><text x="97.6061%" y="431.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,682 samples, 8.48%)</title><rect x="88.9487%" y="485" width="8.4797%" height="15" fill="rgb(236,90,9)" fg:x="91071" fg:w="8682"/><text x="89.1987%" y="495.50">tremor_runti..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (17 samples, 0.02%)</title><rect x="97.4118%" y="469" width="0.0166%" height="15" fill="rgb(206,88,35)" fg:x="99736" fg:w="17"/><text x="97.6618%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,720 samples, 8.52%)</title><rect x="88.9135%" y="517" width="8.5168%" height="15" fill="rgb(205,126,30)" fg:x="91035" fg:w="8720"/><text x="89.1635%" y="527.50">&lt;async_std::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,720 samples, 8.52%)</title><rect x="88.9135%" y="501" width="8.5168%" height="15" fill="rgb(230,176,12)" fg:x="91035" fg:w="8720"/><text x="89.1635%" y="511.50">&lt;core::futur..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,811 samples, 8.61%)</title><rect x="88.8276%" y="645" width="8.6057%" height="15" fill="rgb(243,19,9)" fg:x="90947" fg:w="8811"/><text x="89.0776%" y="655.50">&lt;core::pin::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,811 samples, 8.61%)</title><rect x="88.8276%" y="629" width="8.6057%" height="15" fill="rgb(245,171,17)" fg:x="90947" fg:w="8811"/><text x="89.0776%" y="639.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,811 samples, 8.61%)</title><rect x="88.8276%" y="613" width="8.6057%" height="15" fill="rgb(227,52,21)" fg:x="90947" fg:w="8811"/><text x="89.0776%" y="623.50">async_execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,789 samples, 8.58%)</title><rect x="88.8491%" y="597" width="8.5842%" height="15" fill="rgb(238,69,14)" fg:x="90969" fg:w="8789"/><text x="89.0991%" y="607.50">&lt;async_std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,789 samples, 8.58%)</title><rect x="88.8491%" y="581" width="8.5842%" height="15" fill="rgb(241,156,39)" fg:x="90969" fg:w="8789"/><text x="89.0991%" y="591.50">async_std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,788 samples, 8.58%)</title><rect x="88.8500%" y="565" width="8.5832%" height="15" fill="rgb(212,227,28)" fg:x="90970" fg:w="8788"/><text x="89.1000%" y="575.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,753 samples, 8.55%)</title><rect x="88.8842%" y="549" width="8.5490%" height="15" fill="rgb(209,118,27)" fg:x="91005" fg:w="8753"/><text x="89.1342%" y="559.50">std::thread:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,723 samples, 8.52%)</title><rect x="88.9135%" y="533" width="8.5197%" height="15" fill="rgb(226,102,5)" fg:x="91035" fg:w="8723"/><text x="89.1635%" y="543.50">async_std::t..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (19 samples, 0.02%)</title><rect x="97.4332%" y="645" width="0.0186%" height="15" fill="rgb(223,34,3)" fg:x="99758" fg:w="19"/><text x="97.6832%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="97.4342%" y="629" width="0.0176%" height="15" fill="rgb(221,81,38)" fg:x="99759" fg:w="18"/><text x="97.6842%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="97.4342%" y="613" width="0.0176%" height="15" fill="rgb(236,219,28)" fg:x="99759" fg:w="18"/><text x="97.6842%" y="623.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (17 samples, 0.02%)</title><rect x="97.4577%" y="565" width="0.0166%" height="15" fill="rgb(213,200,14)" fg:x="99783" fg:w="17"/><text x="97.7077%" y="575.50"></text></g><g><title>parking::Unparker::unpark (15 samples, 0.01%)</title><rect x="97.4596%" y="549" width="0.0147%" height="15" fill="rgb(240,33,19)" fg:x="99785" fg:w="15"/><text x="97.7096%" y="559.50"></text></g><g><title>parking::Inner::unpark (13 samples, 0.01%)</title><rect x="97.4616%" y="533" width="0.0127%" height="15" fill="rgb(233,113,27)" fg:x="99787" fg:w="13"/><text x="97.7116%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (20 samples, 0.02%)</title><rect x="97.4577%" y="597" width="0.0195%" height="15" fill="rgb(220,221,18)" fg:x="99783" fg:w="20"/><text x="97.7077%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (20 samples, 0.02%)</title><rect x="97.4577%" y="581" width="0.0195%" height="15" fill="rgb(238,92,8)" fg:x="99783" fg:w="20"/><text x="97.7077%" y="591.50"></text></g><g><title>async_executor::State::notify (31 samples, 0.03%)</title><rect x="97.4518%" y="613" width="0.0303%" height="15" fill="rgb(222,164,16)" fg:x="99777" fg:w="31"/><text x="97.7018%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (36 samples, 0.04%)</title><rect x="97.4518%" y="629" width="0.0352%" height="15" fill="rgb(241,119,3)" fg:x="99777" fg:w="36"/><text x="97.7018%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (37 samples, 0.04%)</title><rect x="97.4518%" y="645" width="0.0361%" height="15" fill="rgb(241,44,8)" fg:x="99777" fg:w="37"/><text x="97.7018%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (68 samples, 0.07%)</title><rect x="97.4879%" y="645" width="0.0664%" height="15" fill="rgb(230,36,40)" fg:x="99814" fg:w="68"/><text x="97.7379%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (68 samples, 0.07%)</title><rect x="97.4879%" y="629" width="0.0664%" height="15" fill="rgb(243,16,36)" fg:x="99814" fg:w="68"/><text x="97.7379%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (8,977 samples, 8.77%)</title><rect x="88.7875%" y="677" width="8.7678%" height="15" fill="rgb(231,4,26)" fg:x="90906" fg:w="8977"/><text x="89.0375%" y="687.50">async_task::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,963 samples, 8.75%)</title><rect x="88.8012%" y="661" width="8.7541%" height="15" fill="rgb(240,9,31)" fg:x="90920" fg:w="8963"/><text x="89.0512%" y="671.50">async_task::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,916 samples, 11.64%)</title><rect x="85.9219%" y="725" width="11.6383%" height="15" fill="rgb(207,173,15)" fg:x="87972" fg:w="11916"/><text x="86.1719%" y="735.50">&lt;futures_lite::fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,916 samples, 11.64%)</title><rect x="85.9219%" y="709" width="11.6383%" height="15" fill="rgb(224,192,53)" fg:x="87972" fg:w="11916"/><text x="86.1719%" y="719.50">&lt;core::future::fr..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,915 samples, 11.64%)</title><rect x="85.9229%" y="693" width="11.6373%" height="15" fill="rgb(223,67,28)" fg:x="87973" fg:w="11915"/><text x="86.1729%" y="703.50">async_executor::E..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,918 samples, 11.64%)</title><rect x="85.9219%" y="741" width="11.6403%" height="15" fill="rgb(211,20,47)" fg:x="87972" fg:w="11918"/><text x="86.1719%" y="751.50">async_executor::E..</text></g><g><title>concurrent_queue::full_fence (19 samples, 0.02%)</title><rect x="97.6383%" y="501" width="0.0186%" height="15" fill="rgb(240,228,2)" fg:x="99968" fg:w="19"/><text x="97.8883%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (19 samples, 0.02%)</title><rect x="97.6383%" y="485" width="0.0186%" height="15" fill="rgb(248,151,12)" fg:x="99968" fg:w="19"/><text x="97.8883%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.02%)</title><rect x="97.6383%" y="469" width="0.0186%" height="15" fill="rgb(244,8,39)" fg:x="99968" fg:w="19"/><text x="97.8883%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="97.6383%" y="453" width="0.0186%" height="15" fill="rgb(222,26,8)" fg:x="99968" fg:w="19"/><text x="97.8883%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (60 samples, 0.06%)</title><rect x="97.6286%" y="517" width="0.0586%" height="15" fill="rgb(213,106,44)" fg:x="99958" fg:w="60"/><text x="97.8786%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.03%)</title><rect x="97.6569%" y="501" width="0.0303%" height="15" fill="rgb(214,129,20)" fg:x="99987" fg:w="31"/><text x="97.9069%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.03%)</title><rect x="97.6579%" y="485" width="0.0293%" height="15" fill="rgb(212,32,13)" fg:x="99988" fg:w="30"/><text x="97.9079%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (17 samples, 0.02%)</title><rect x="97.6911%" y="501" width="0.0166%" height="15" fill="rgb(208,168,33)" fg:x="100022" fg:w="17"/><text x="97.9411%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (17 samples, 0.02%)</title><rect x="97.6911%" y="485" width="0.0166%" height="15" fill="rgb(231,207,8)" fg:x="100022" fg:w="17"/><text x="97.9411%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.02%)</title><rect x="97.6911%" y="469" width="0.0166%" height="15" fill="rgb(235,219,23)" fg:x="100022" fg:w="17"/><text x="97.9411%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="97.6911%" y="453" width="0.0166%" height="15" fill="rgb(226,216,26)" fg:x="100022" fg:w="17"/><text x="97.9411%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (105 samples, 0.10%)</title><rect x="97.6169%" y="533" width="0.1026%" height="15" fill="rgb(239,137,16)" fg:x="99946" fg:w="105"/><text x="97.8669%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (33 samples, 0.03%)</title><rect x="97.6872%" y="517" width="0.0322%" height="15" fill="rgb(207,12,36)" fg:x="100018" fg:w="33"/><text x="97.9372%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.01%)</title><rect x="97.7223%" y="469" width="0.0147%" height="15" fill="rgb(210,214,24)" fg:x="100054" fg:w="15"/><text x="97.9723%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.01%)</title><rect x="97.7223%" y="453" width="0.0147%" height="15" fill="rgb(206,56,30)" fg:x="100054" fg:w="15"/><text x="97.9723%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="97.7194%" y="533" width="0.0420%" height="15" fill="rgb(228,143,26)" fg:x="100051" fg:w="43"/><text x="97.9694%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="97.7194%" y="517" width="0.0420%" height="15" fill="rgb(216,218,46)" fg:x="100051" fg:w="43"/><text x="97.9694%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (42 samples, 0.04%)</title><rect x="97.7204%" y="501" width="0.0410%" height="15" fill="rgb(206,6,19)" fg:x="100052" fg:w="42"/><text x="97.9704%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (41 samples, 0.04%)</title><rect x="97.7214%" y="485" width="0.0400%" height="15" fill="rgb(239,177,51)" fg:x="100053" fg:w="41"/><text x="97.9714%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (25 samples, 0.02%)</title><rect x="97.7370%" y="469" width="0.0244%" height="15" fill="rgb(216,55,25)" fg:x="100069" fg:w="25"/><text x="97.9870%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (25 samples, 0.02%)</title><rect x="97.7370%" y="453" width="0.0244%" height="15" fill="rgb(231,163,29)" fg:x="100069" fg:w="25"/><text x="97.9870%" y="463.50"></text></g><g><title>fastrand::usize (14 samples, 0.01%)</title><rect x="97.7614%" y="533" width="0.0137%" height="15" fill="rgb(232,149,50)" fg:x="100094" fg:w="14"/><text x="98.0114%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="97.7624%" y="517" width="0.0127%" height="15" fill="rgb(223,142,48)" fg:x="100095" fg:w="13"/><text x="98.0124%" y="527.50"></text></g><g><title>___pthread_rwlock_rdlock (20 samples, 0.02%)</title><rect x="97.7790%" y="485" width="0.0195%" height="15" fill="rgb(245,83,23)" fg:x="100112" fg:w="20"/><text x="98.0290%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (207 samples, 0.20%)</title><rect x="97.6090%" y="549" width="0.2022%" height="15" fill="rgb(224,63,2)" fg:x="99938" fg:w="207"/><text x="97.8590%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (37 samples, 0.04%)</title><rect x="97.7751%" y="533" width="0.0361%" height="15" fill="rgb(218,65,53)" fg:x="100108" fg:w="37"/><text x="98.0251%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (34 samples, 0.03%)</title><rect x="97.7780%" y="517" width="0.0332%" height="15" fill="rgb(221,84,29)" fg:x="100111" fg:w="34"/><text x="98.0280%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (34 samples, 0.03%)</title><rect x="97.7780%" y="501" width="0.0332%" height="15" fill="rgb(234,0,32)" fg:x="100111" fg:w="34"/><text x="98.0280%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.01%)</title><rect x="97.7985%" y="485" width="0.0127%" height="15" fill="rgb(206,20,16)" fg:x="100132" fg:w="13"/><text x="98.0485%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="97.7985%" y="469" width="0.0127%" height="15" fill="rgb(244,172,18)" fg:x="100132" fg:w="13"/><text x="98.0485%" y="479.50"></text></g><g><title>async_executor::Sleepers::update (20 samples, 0.02%)</title><rect x="97.8151%" y="533" width="0.0195%" height="15" fill="rgb(254,133,1)" fg:x="100149" fg:w="20"/><text x="98.0651%" y="543.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.02%)</title><rect x="97.8356%" y="469" width="0.0215%" height="15" fill="rgb(222,206,41)" fg:x="100170" fg:w="22"/><text x="98.0856%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (24 samples, 0.02%)</title><rect x="97.8347%" y="533" width="0.0234%" height="15" fill="rgb(212,3,42)" fg:x="100169" fg:w="24"/><text x="98.0847%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="97.8347%" y="517" width="0.0234%" height="15" fill="rgb(241,11,4)" fg:x="100169" fg:w="24"/><text x="98.0847%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="97.8347%" y="501" width="0.0234%" height="15" fill="rgb(205,19,26)" fg:x="100169" fg:w="24"/><text x="98.0847%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (23 samples, 0.02%)</title><rect x="97.8356%" y="485" width="0.0225%" height="15" fill="rgb(210,179,32)" fg:x="100170" fg:w="23"/><text x="98.0856%" y="495.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (306 samples, 0.30%)</title><rect x="97.5856%" y="661" width="0.2989%" height="15" fill="rgb(227,116,49)" fg:x="99914" fg:w="306"/><text x="97.8356%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (302 samples, 0.29%)</title><rect x="97.5895%" y="645" width="0.2950%" height="15" fill="rgb(211,146,6)" fg:x="99918" fg:w="302"/><text x="97.8395%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (301 samples, 0.29%)</title><rect x="97.5905%" y="629" width="0.2940%" height="15" fill="rgb(219,44,39)" fg:x="99919" fg:w="301"/><text x="97.8405%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (294 samples, 0.29%)</title><rect x="97.5973%" y="613" width="0.2871%" height="15" fill="rgb(234,128,11)" fg:x="99926" fg:w="294"/><text x="97.8473%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (290 samples, 0.28%)</title><rect x="97.6012%" y="597" width="0.2832%" height="15" fill="rgb(220,183,53)" fg:x="99930" fg:w="290"/><text x="97.8512%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (287 samples, 0.28%)</title><rect x="97.6042%" y="581" width="0.2803%" height="15" fill="rgb(213,219,32)" fg:x="99933" fg:w="287"/><text x="97.8542%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (284 samples, 0.28%)</title><rect x="97.6071%" y="565" width="0.2774%" height="15" fill="rgb(232,156,16)" fg:x="99936" fg:w="284"/><text x="97.8571%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (75 samples, 0.07%)</title><rect x="97.8112%" y="549" width="0.0733%" height="15" fill="rgb(246,135,34)" fg:x="100145" fg:w="75"/><text x="98.0612%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.03%)</title><rect x="97.8581%" y="533" width="0.0264%" height="15" fill="rgb(241,99,0)" fg:x="100193" fg:w="27"/><text x="98.1081%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.03%)</title><rect x="97.8581%" y="517" width="0.0264%" height="15" fill="rgb(222,103,45)" fg:x="100193" fg:w="27"/><text x="98.1081%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (26 samples, 0.03%)</title><rect x="97.8591%" y="501" width="0.0254%" height="15" fill="rgb(212,57,4)" fg:x="100194" fg:w="26"/><text x="98.1091%" y="511.50"></text></g><g><title>___pthread_mutex_lock (26 samples, 0.03%)</title><rect x="97.8591%" y="485" width="0.0254%" height="15" fill="rgb(215,68,47)" fg:x="100194" fg:w="26"/><text x="98.1091%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (20 samples, 0.02%)</title><rect x="97.9323%" y="597" width="0.0195%" height="15" fill="rgb(230,84,2)" fg:x="100269" fg:w="20"/><text x="98.1823%" y="607.50"></text></g><g><title>core::mem::replace (20 samples, 0.02%)</title><rect x="97.9323%" y="581" width="0.0195%" height="15" fill="rgb(220,102,14)" fg:x="100269" fg:w="20"/><text x="98.1823%" y="591.50"></text></g><g><title>core::ptr::read (20 samples, 0.02%)</title><rect x="97.9323%" y="565" width="0.0195%" height="15" fill="rgb(240,10,32)" fg:x="100269" fg:w="20"/><text x="98.1823%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (25 samples, 0.02%)</title><rect x="97.9304%" y="613" width="0.0244%" height="15" fill="rgb(215,47,27)" fg:x="100267" fg:w="25"/><text x="98.1804%" y="623.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="97.9587%" y="533" width="0.0176%" height="15" fill="rgb(233,188,43)" fg:x="100296" fg:w="18"/><text x="98.2087%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (23 samples, 0.02%)</title><rect x="97.9548%" y="613" width="0.0225%" height="15" fill="rgb(253,190,1)" fg:x="100292" fg:w="23"/><text x="98.2048%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.02%)</title><rect x="97.9548%" y="597" width="0.0225%" height="15" fill="rgb(206,114,52)" fg:x="100292" fg:w="23"/><text x="98.2048%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="97.9548%" y="581" width="0.0225%" height="15" fill="rgb(233,120,37)" fg:x="100292" fg:w="23"/><text x="98.2048%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="97.9558%" y="565" width="0.0215%" height="15" fill="rgb(214,52,39)" fg:x="100293" fg:w="22"/><text x="98.2058%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="97.9587%" y="549" width="0.0186%" height="15" fill="rgb(223,80,29)" fg:x="100296" fg:w="19"/><text x="98.2087%" y="559.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (115 samples, 0.11%)</title><rect x="97.9216%" y="629" width="0.1123%" height="15" fill="rgb(230,101,40)" fg:x="100258" fg:w="115"/><text x="98.1716%" y="639.50"></text></g><g><title>event_listener::Inner::lock (54 samples, 0.05%)</title><rect x="97.9812%" y="613" width="0.0527%" height="15" fill="rgb(219,211,8)" fg:x="100319" fg:w="54"/><text x="98.2312%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (51 samples, 0.05%)</title><rect x="97.9841%" y="597" width="0.0498%" height="15" fill="rgb(252,126,28)" fg:x="100322" fg:w="51"/><text x="98.2341%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (50 samples, 0.05%)</title><rect x="97.9851%" y="581" width="0.0488%" height="15" fill="rgb(215,56,38)" fg:x="100323" fg:w="50"/><text x="98.2351%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (43 samples, 0.04%)</title><rect x="97.9919%" y="565" width="0.0420%" height="15" fill="rgb(249,55,44)" fg:x="100330" fg:w="43"/><text x="98.2419%" y="575.50"></text></g><g><title>___pthread_mutex_lock (43 samples, 0.04%)</title><rect x="97.9919%" y="549" width="0.0420%" height="15" fill="rgb(220,221,32)" fg:x="100330" fg:w="43"/><text x="98.2419%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (533 samples, 0.52%)</title><rect x="97.5846%" y="693" width="0.5206%" height="15" fill="rgb(212,216,41)" fg:x="99913" fg:w="533"/><text x="97.8346%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (533 samples, 0.52%)</title><rect x="97.5846%" y="677" width="0.5206%" height="15" fill="rgb(228,213,43)" fg:x="99913" fg:w="533"/><text x="97.8346%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (226 samples, 0.22%)</title><rect x="97.8845%" y="661" width="0.2207%" height="15" fill="rgb(211,31,26)" fg:x="100220" fg:w="226"/><text x="98.1345%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (223 samples, 0.22%)</title><rect x="97.8874%" y="645" width="0.2178%" height="15" fill="rgb(229,202,19)" fg:x="100223" fg:w="223"/><text x="98.1374%" y="655.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (73 samples, 0.07%)</title><rect x="98.0339%" y="629" width="0.0713%" height="15" fill="rgb(229,105,46)" fg:x="100373" fg:w="73"/><text x="98.2839%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (73 samples, 0.07%)</title><rect x="98.0339%" y="613" width="0.0713%" height="15" fill="rgb(235,108,1)" fg:x="100373" fg:w="73"/><text x="98.2839%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (39 samples, 0.04%)</title><rect x="98.0671%" y="597" width="0.0381%" height="15" fill="rgb(245,111,35)" fg:x="100407" fg:w="39"/><text x="98.3171%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (37 samples, 0.04%)</title><rect x="98.0691%" y="581" width="0.0361%" height="15" fill="rgb(219,185,31)" fg:x="100409" fg:w="37"/><text x="98.3191%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.04%)</title><rect x="98.0691%" y="565" width="0.0361%" height="15" fill="rgb(214,4,43)" fg:x="100409" fg:w="37"/><text x="98.3191%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.04%)</title><rect x="98.0691%" y="549" width="0.0361%" height="15" fill="rgb(235,227,40)" fg:x="100409" fg:w="37"/><text x="98.3191%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,493 samples, 12.20%)</title><rect x="85.9112%" y="773" width="12.2019%" height="15" fill="rgb(230,88,30)" fg:x="87961" fg:w="12493"/><text x="86.1612%" y="783.50">&lt;futures_lite::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,488 samples, 12.20%)</title><rect x="85.9160%" y="757" width="12.1970%" height="15" fill="rgb(216,217,1)" fg:x="87966" fg:w="12488"/><text x="86.1660%" y="767.50">&lt;core::future::fro..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (564 samples, 0.55%)</title><rect x="97.5622%" y="741" width="0.5509%" height="15" fill="rgb(248,139,50)" fg:x="99890" fg:w="564"/><text x="97.8122%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (543 samples, 0.53%)</title><rect x="97.5827%" y="725" width="0.5303%" height="15" fill="rgb(233,1,21)" fg:x="99911" fg:w="543"/><text x="97.8327%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (543 samples, 0.53%)</title><rect x="97.5827%" y="709" width="0.5303%" height="15" fill="rgb(215,183,12)" fg:x="99911" fg:w="543"/><text x="97.8327%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (114 samples, 0.11%)</title><rect x="98.1218%" y="773" width="0.1113%" height="15" fill="rgb(229,104,42)" fg:x="100463" fg:w="114"/><text x="98.3718%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (114 samples, 0.11%)</title><rect x="98.1218%" y="757" width="0.1113%" height="15" fill="rgb(243,34,48)" fg:x="100463" fg:w="114"/><text x="98.3718%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (113 samples, 0.11%)</title><rect x="98.1228%" y="741" width="0.1104%" height="15" fill="rgb(239,11,44)" fg:x="100464" fg:w="113"/><text x="98.3728%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (110 samples, 0.11%)</title><rect x="98.1257%" y="725" width="0.1074%" height="15" fill="rgb(231,98,35)" fg:x="100467" fg:w="110"/><text x="98.3757%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (110 samples, 0.11%)</title><rect x="98.1257%" y="709" width="0.1074%" height="15" fill="rgb(233,28,25)" fg:x="100467" fg:w="110"/><text x="98.3757%" y="719.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="98.2517%" y="597" width="0.0137%" height="15" fill="rgb(234,123,11)" fg:x="100596" fg:w="14"/><text x="98.5017%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (18 samples, 0.02%)</title><rect x="98.2488%" y="693" width="0.0176%" height="15" fill="rgb(220,69,3)" fg:x="100593" fg:w="18"/><text x="98.4988%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (17 samples, 0.02%)</title><rect x="98.2498%" y="677" width="0.0166%" height="15" fill="rgb(214,64,36)" fg:x="100594" fg:w="17"/><text x="98.4998%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="98.2498%" y="661" width="0.0166%" height="15" fill="rgb(211,138,32)" fg:x="100594" fg:w="17"/><text x="98.4998%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="98.2507%" y="645" width="0.0156%" height="15" fill="rgb(213,118,47)" fg:x="100595" fg:w="16"/><text x="98.5007%" y="655.50"></text></g><g><title>__rg_dealloc (16 samples, 0.02%)</title><rect x="98.2507%" y="629" width="0.0156%" height="15" fill="rgb(243,124,49)" fg:x="100595" fg:w="16"/><text x="98.5007%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="98.2517%" y="613" width="0.0147%" height="15" fill="rgb(221,30,28)" fg:x="100596" fg:w="15"/><text x="98.5017%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="98.2468%" y="741" width="0.0205%" height="15" fill="rgb(246,37,13)" fg:x="100591" fg:w="21"/><text x="98.4968%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (21 samples, 0.02%)</title><rect x="98.2468%" y="725" width="0.0205%" height="15" fill="rgb(249,66,14)" fg:x="100591" fg:w="21"/><text x="98.4968%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="98.2488%" y="709" width="0.0186%" height="15" fill="rgb(213,166,5)" fg:x="100593" fg:w="19"/><text x="98.4988%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (60 samples, 0.06%)</title><rect x="98.3103%" y="453" width="0.0586%" height="15" fill="rgb(221,66,24)" fg:x="100656" fg:w="60"/><text x="98.5603%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (60 samples, 0.06%)</title><rect x="98.3103%" y="437" width="0.0586%" height="15" fill="rgb(210,132,17)" fg:x="100656" fg:w="60"/><text x="98.5603%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (51 samples, 0.05%)</title><rect x="98.3191%" y="421" width="0.0498%" height="15" fill="rgb(243,202,5)" fg:x="100665" fg:w="51"/><text x="98.5691%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (46 samples, 0.04%)</title><rect x="98.3240%" y="405" width="0.0449%" height="15" fill="rgb(233,70,48)" fg:x="100670" fg:w="46"/><text x="98.5740%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (46 samples, 0.04%)</title><rect x="98.3240%" y="389" width="0.0449%" height="15" fill="rgb(238,41,26)" fg:x="100670" fg:w="46"/><text x="98.5740%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (46 samples, 0.04%)</title><rect x="98.3240%" y="373" width="0.0449%" height="15" fill="rgb(241,19,31)" fg:x="100670" fg:w="46"/><text x="98.5740%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.09%)</title><rect x="98.3074%" y="501" width="0.0899%" height="15" fill="rgb(214,76,10)" fg:x="100653" fg:w="92"/><text x="98.5574%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="98.3084%" y="485" width="0.0889%" height="15" fill="rgb(254,202,22)" fg:x="100654" fg:w="91"/><text x="98.5584%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="98.3084%" y="469" width="0.0889%" height="15" fill="rgb(214,72,24)" fg:x="100654" fg:w="91"/><text x="98.5584%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (21 samples, 0.02%)</title><rect x="98.3767%" y="453" width="0.0205%" height="15" fill="rgb(221,92,46)" fg:x="100724" fg:w="21"/><text x="98.6267%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (21 samples, 0.02%)</title><rect x="98.3767%" y="437" width="0.0205%" height="15" fill="rgb(246,13,50)" fg:x="100724" fg:w="21"/><text x="98.6267%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (130 samples, 0.13%)</title><rect x="98.2712%" y="741" width="0.1270%" height="15" fill="rgb(240,165,38)" fg:x="100616" fg:w="130"/><text x="98.5212%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (126 samples, 0.12%)</title><rect x="98.2752%" y="725" width="0.1231%" height="15" fill="rgb(241,24,51)" fg:x="100620" fg:w="126"/><text x="98.5252%" y="735.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (93 samples, 0.09%)</title><rect x="98.3074%" y="709" width="0.0908%" height="15" fill="rgb(227,51,44)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (93 samples, 0.09%)</title><rect x="98.3074%" y="693" width="0.0908%" height="15" fill="rgb(231,121,3)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (93 samples, 0.09%)</title><rect x="98.3074%" y="677" width="0.0908%" height="15" fill="rgb(245,3,41)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (93 samples, 0.09%)</title><rect x="98.3074%" y="661" width="0.0908%" height="15" fill="rgb(214,13,26)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (93 samples, 0.09%)</title><rect x="98.3074%" y="645" width="0.0908%" height="15" fill="rgb(252,75,11)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (93 samples, 0.09%)</title><rect x="98.3074%" y="629" width="0.0908%" height="15" fill="rgb(218,226,17)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (93 samples, 0.09%)</title><rect x="98.3074%" y="613" width="0.0908%" height="15" fill="rgb(248,89,38)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (93 samples, 0.09%)</title><rect x="98.3074%" y="597" width="0.0908%" height="15" fill="rgb(237,73,46)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (93 samples, 0.09%)</title><rect x="98.3074%" y="581" width="0.0908%" height="15" fill="rgb(242,78,33)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="591.50"></text></g><g><title>alloc::alloc::alloc (93 samples, 0.09%)</title><rect x="98.3074%" y="565" width="0.0908%" height="15" fill="rgb(235,60,3)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="575.50"></text></g><g><title>__rg_alloc (93 samples, 0.09%)</title><rect x="98.3074%" y="549" width="0.0908%" height="15" fill="rgb(216,172,19)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (93 samples, 0.09%)</title><rect x="98.3074%" y="533" width="0.0908%" height="15" fill="rgb(227,6,42)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="543.50"></text></g><g><title>rust_alloc (93 samples, 0.09%)</title><rect x="98.3074%" y="517" width="0.0908%" height="15" fill="rgb(223,207,42)" fg:x="100653" fg:w="93"/><text x="98.5574%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (11 samples, 0.01%)</title><rect x="98.4031%" y="693" width="0.0107%" height="15" fill="rgb(246,138,30)" fg:x="100751" fg:w="11"/><text x="98.6531%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (11 samples, 0.01%)</title><rect x="98.4031%" y="677" width="0.0107%" height="15" fill="rgb(251,199,47)" fg:x="100751" fg:w="11"/><text x="98.6531%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.01%)</title><rect x="98.4031%" y="661" width="0.0107%" height="15" fill="rgb(228,218,44)" fg:x="100751" fg:w="11"/><text x="98.6531%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="98.4031%" y="645" width="0.0107%" height="15" fill="rgb(220,68,6)" fg:x="100751" fg:w="11"/><text x="98.6531%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (19 samples, 0.02%)</title><rect x="98.3982%" y="741" width="0.0186%" height="15" fill="rgb(240,60,26)" fg:x="100746" fg:w="19"/><text x="98.6482%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (19 samples, 0.02%)</title><rect x="98.3982%" y="725" width="0.0186%" height="15" fill="rgb(211,200,19)" fg:x="100746" fg:w="19"/><text x="98.6482%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="98.3992%" y="709" width="0.0176%" height="15" fill="rgb(242,145,30)" fg:x="100747" fg:w="18"/><text x="98.6492%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="98.4168%" y="709" width="0.0176%" height="15" fill="rgb(225,64,13)" fg:x="100765" fg:w="18"/><text x="98.6668%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.02%)</title><rect x="98.4178%" y="693" width="0.0166%" height="15" fill="rgb(218,103,35)" fg:x="100766" fg:w="17"/><text x="98.6678%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (17 samples, 0.02%)</title><rect x="98.4178%" y="677" width="0.0166%" height="15" fill="rgb(216,93,46)" fg:x="100766" fg:w="17"/><text x="98.6678%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="98.4178%" y="661" width="0.0166%" height="15" fill="rgb(225,159,27)" fg:x="100766" fg:w="17"/><text x="98.6678%" y="671.50"></text></g><g><title>core::mem::drop (20 samples, 0.02%)</title><rect x="98.4168%" y="741" width="0.0195%" height="15" fill="rgb(225,204,11)" fg:x="100765" fg:w="20"/><text x="98.6668%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="98.4168%" y="725" width="0.0195%" height="15" fill="rgb(205,56,4)" fg:x="100765" fg:w="20"/><text x="98.6668%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (236 samples, 0.23%)</title><rect x="98.2419%" y="757" width="0.2305%" height="15" fill="rgb(206,6,35)" fg:x="100586" fg:w="236"/><text x="98.4919%" y="767.50"></text></g><g><title>std::time::Instant::now (26 samples, 0.03%)</title><rect x="98.4471%" y="741" width="0.0254%" height="15" fill="rgb(247,73,52)" fg:x="100796" fg:w="26"/><text x="98.6971%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (26 samples, 0.03%)</title><rect x="98.4471%" y="725" width="0.0254%" height="15" fill="rgb(246,97,4)" fg:x="100796" fg:w="26"/><text x="98.6971%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (26 samples, 0.03%)</title><rect x="98.4471%" y="709" width="0.0254%" height="15" fill="rgb(212,37,15)" fg:x="100796" fg:w="26"/><text x="98.6971%" y="719.50"></text></g><g><title>__clock_gettime_2 (24 samples, 0.02%)</title><rect x="98.4490%" y="693" width="0.0234%" height="15" fill="rgb(208,130,40)" fg:x="100798" fg:w="24"/><text x="98.6990%" y="703.50"></text></g><g><title>__vdso_clock_gettime (23 samples, 0.02%)</title><rect x="98.4500%" y="677" width="0.0225%" height="15" fill="rgb(236,55,29)" fg:x="100799" fg:w="23"/><text x="98.7000%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (22 samples, 0.02%)</title><rect x="98.4861%" y="741" width="0.0215%" height="15" fill="rgb(209,156,45)" fg:x="100836" fg:w="22"/><text x="98.7361%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="98.4861%" y="725" width="0.0215%" height="15" fill="rgb(249,107,4)" fg:x="100836" fg:w="22"/><text x="98.7361%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="98.4861%" y="709" width="0.0215%" height="15" fill="rgb(227,7,13)" fg:x="100836" fg:w="22"/><text x="98.7361%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (22 samples, 0.02%)</title><rect x="98.4861%" y="693" width="0.0215%" height="15" fill="rgb(250,129,14)" fg:x="100836" fg:w="22"/><text x="98.7361%" y="703.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.02%)</title><rect x="98.4861%" y="677" width="0.0215%" height="15" fill="rgb(229,92,13)" fg:x="100836" fg:w="22"/><text x="98.7361%" y="687.50"></text></g><g><title>__libc_read (12 samples, 0.01%)</title><rect x="98.5408%" y="725" width="0.0117%" height="15" fill="rgb(245,98,39)" fg:x="100892" fg:w="12"/><text x="98.7908%" y="735.50"></text></g><g><title>epoll_wait (57 samples, 0.06%)</title><rect x="98.5525%" y="725" width="0.0557%" height="15" fill="rgb(234,135,48)" fg:x="100904" fg:w="57"/><text x="98.8025%" y="735.50"></text></g><g><title>__GI_epoll_ctl (13 samples, 0.01%)</title><rect x="98.6199%" y="693" width="0.0127%" height="15" fill="rgb(230,98,28)" fg:x="100973" fg:w="13"/><text x="98.8699%" y="703.50"></text></g><g><title>polling::epoll::Poller::modify (22 samples, 0.02%)</title><rect x="98.6141%" y="725" width="0.0215%" height="15" fill="rgb(223,121,0)" fg:x="100967" fg:w="22"/><text x="98.8641%" y="735.50"></text></g><g><title>polling::epoll::Poller::ctl (17 samples, 0.02%)</title><rect x="98.6190%" y="709" width="0.0166%" height="15" fill="rgb(234,173,33)" fg:x="100972" fg:w="17"/><text x="98.8690%" y="719.50"></text></g><g><title>polling::epoll::Poller::wait (130 samples, 0.13%)</title><rect x="98.5174%" y="741" width="0.1270%" height="15" fill="rgb(245,47,8)" fg:x="100868" fg:w="130"/><text x="98.7674%" y="751.50"></text></g><g><title>async_io::reactor::ReactorLock::react (429 samples, 0.42%)</title><rect x="98.2332%" y="773" width="0.4190%" height="15" fill="rgb(205,17,20)" fg:x="100577" fg:w="429"/><text x="98.4832%" y="783.50"></text></g><g><title>polling::Poller::wait (178 samples, 0.17%)</title><rect x="98.4783%" y="757" width="0.1739%" height="15" fill="rgb(232,151,16)" fg:x="100828" fg:w="178"/><text x="98.7283%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="98.6522%" y="773" width="0.0107%" height="15" fill="rgb(208,30,32)" fg:x="101006" fg:w="11"/><text x="98.9022%" y="783.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="98.6522%" y="757" width="0.0107%" height="15" fill="rgb(254,26,3)" fg:x="101006" fg:w="11"/><text x="98.9022%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (11 samples, 0.01%)</title><rect x="98.6522%" y="741" width="0.0107%" height="15" fill="rgb(240,177,30)" fg:x="101006" fg:w="11"/><text x="98.9022%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (45 samples, 0.04%)</title><rect x="98.6844%" y="741" width="0.0440%" height="15" fill="rgb(248,76,44)" fg:x="101039" fg:w="45"/><text x="98.9344%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (23 samples, 0.02%)</title><rect x="98.7059%" y="725" width="0.0225%" height="15" fill="rgb(241,186,54)" fg:x="101061" fg:w="23"/><text x="98.9559%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (57 samples, 0.06%)</title><rect x="98.7303%" y="741" width="0.0557%" height="15" fill="rgb(249,171,29)" fg:x="101086" fg:w="57"/><text x="98.9803%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (57 samples, 0.06%)</title><rect x="98.7303%" y="725" width="0.0557%" height="15" fill="rgb(237,151,44)" fg:x="101086" fg:w="57"/><text x="98.9803%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="98.8797%" y="677" width="0.0147%" height="15" fill="rgb(228,174,30)" fg:x="101239" fg:w="15"/><text x="99.1297%" y="687.50"></text></g><g><title>__condvar_confirm_wakeup (22 samples, 0.02%)</title><rect x="98.8944%" y="677" width="0.0215%" height="15" fill="rgb(252,14,37)" fg:x="101254" fg:w="22"/><text x="99.1444%" y="687.50"></text></g><g><title>__condvar_dec_grefs (103 samples, 0.10%)</title><rect x="98.9159%" y="677" width="0.1006%" height="15" fill="rgb(207,111,40)" fg:x="101276" fg:w="103"/><text x="99.1659%" y="687.50"></text></g><g><title>__GI___pthread_disable_asynccancel (22 samples, 0.02%)</title><rect x="99.1962%" y="661" width="0.0215%" height="15" fill="rgb(248,171,54)" fg:x="101563" fg:w="22"/><text x="99.4462%" y="671.50"></text></g><g><title>__futex_abstimed_wait_common (216 samples, 0.21%)</title><rect x="99.0165%" y="677" width="0.2110%" height="15" fill="rgb(211,127,2)" fg:x="101379" fg:w="216"/><text x="99.2665%" y="687.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (472 samples, 0.46%)</title><rect x="98.7918%" y="709" width="0.4610%" height="15" fill="rgb(236,87,47)" fg:x="101149" fg:w="472"/><text x="99.0418%" y="719.50"></text></g><g><title>__GI___pthread_cond_wait (472 samples, 0.46%)</title><rect x="98.7918%" y="693" width="0.4610%" height="15" fill="rgb(223,190,45)" fg:x="101149" fg:w="472"/><text x="99.0418%" y="703.50"></text></g><g><title>__pthread_mutex_cond_lock (18 samples, 0.02%)</title><rect x="99.2352%" y="677" width="0.0176%" height="15" fill="rgb(215,5,16)" fg:x="101603" fg:w="18"/><text x="99.4852%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (495 samples, 0.48%)</title><rect x="98.7860%" y="741" width="0.4835%" height="15" fill="rgb(252,82,33)" fg:x="101143" fg:w="495"/><text x="99.0360%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (489 samples, 0.48%)</title><rect x="98.7918%" y="725" width="0.4776%" height="15" fill="rgb(247,213,44)" fg:x="101149" fg:w="489"/><text x="99.0418%" y="735.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (17 samples, 0.02%)</title><rect x="99.2528%" y="709" width="0.0166%" height="15" fill="rgb(205,196,44)" fg:x="101621" fg:w="17"/><text x="99.5028%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.02%)</title><rect x="99.2538%" y="693" width="0.0156%" height="15" fill="rgb(237,96,54)" fg:x="101622" fg:w="16"/><text x="99.5038%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.02%)</title><rect x="99.2538%" y="677" width="0.0156%" height="15" fill="rgb(230,113,34)" fg:x="101622" fg:w="16"/><text x="99.5038%" y="687.50"></text></g><g><title>parking::Parker::park (624 samples, 0.61%)</title><rect x="98.6805%" y="773" width="0.6095%" height="15" fill="rgb(221,224,12)" fg:x="101035" fg:w="624"/><text x="98.9305%" y="783.50"></text></g><g><title>parking::Inner::park (623 samples, 0.61%)</title><rect x="98.6815%" y="757" width="0.6085%" height="15" fill="rgb(219,112,44)" fg:x="101036" fg:w="623"/><text x="98.9315%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="99.2694%" y="741" width="0.0205%" height="15" fill="rgb(210,31,13)" fg:x="101638" fg:w="21"/><text x="99.5194%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="99.2694%" y="725" width="0.0205%" height="15" fill="rgb(230,25,16)" fg:x="101638" fg:w="21"/><text x="99.5194%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (21 samples, 0.02%)</title><rect x="99.2694%" y="709" width="0.0205%" height="15" fill="rgb(246,108,53)" fg:x="101638" fg:w="21"/><text x="99.5194%" y="719.50"></text></g><g><title>___pthread_mutex_lock (21 samples, 0.02%)</title><rect x="99.2694%" y="693" width="0.0205%" height="15" fill="rgb(241,172,50)" fg:x="101638" fg:w="21"/><text x="99.5194%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (69 samples, 0.07%)</title><rect x="99.2899%" y="773" width="0.0674%" height="15" fill="rgb(235,141,10)" fg:x="101659" fg:w="69"/><text x="99.5399%" y="783.50"></text></g><g><title>parking::Inner::park (67 samples, 0.07%)</title><rect x="99.2919%" y="757" width="0.0654%" height="15" fill="rgb(220,174,43)" fg:x="101661" fg:w="67"/><text x="99.5419%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (62 samples, 0.06%)</title><rect x="99.2968%" y="741" width="0.0606%" height="15" fill="rgb(215,181,40)" fg:x="101666" fg:w="62"/><text x="99.5468%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (62 samples, 0.06%)</title><rect x="99.2968%" y="725" width="0.0606%" height="15" fill="rgb(230,97,2)" fg:x="101666" fg:w="62"/><text x="99.5468%" y="735.50"></text></g><g><title>std::panic::catch_unwind (13,796 samples, 13.47%)</title><rect x="85.8926%" y="1061" width="13.4745%" height="15" fill="rgb(211,25,27)" fg:x="87942" fg:w="13796"/><text x="86.1426%" y="1071.50">std::panic::catch_un..</text></g><g><title>std::panicking::try (13,796 samples, 13.47%)</title><rect x="85.8926%" y="1045" width="13.4745%" height="15" fill="rgb(230,87,26)" fg:x="87942" fg:w="13796"/><text x="86.1426%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (13,796 samples, 13.47%)</title><rect x="85.8926%" y="1029" width="13.4745%" height="15" fill="rgb(227,160,17)" fg:x="87942" fg:w="13796"/><text x="86.1426%" y="1039.50">std::panicking::try:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13,796 samples, 13.47%)</title><rect x="85.8926%" y="1013" width="13.4745%" height="15" fill="rgb(244,85,34)" fg:x="87942" fg:w="13796"/><text x="86.1426%" y="1023.50">&lt;core::panic::unwind..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13,796 samples, 13.47%)</title><rect x="85.8926%" y="997" width="13.4745%" height="15" fill="rgb(207,70,0)" fg:x="87942" fg:w="13796"/><text x="86.1426%" y="1007.50">std::thread::Builder..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13,796 samples, 13.47%)</title><rect x="85.8926%" y="981" width="13.4745%" height="15" fill="rgb(223,129,7)" fg:x="87942" fg:w="13796"/><text x="86.1426%" y="991.50">std::sys_common::bac..</text></g><g><title>core::ops::function::FnOnce::call_once (13,796 samples, 13.47%)</title><rect x="85.8926%" y="965" width="13.4745%" height="15" fill="rgb(246,105,7)" fg:x="87942" fg:w="13796"/><text x="86.1426%" y="975.50">core::ops::function:..</text></g><g><title>async_global_executor::threading::thread_main_loop (13,796 samples, 13.47%)</title><rect x="85.8926%" y="949" width="13.4745%" height="15" fill="rgb(215,154,42)" fg:x="87942" fg:w="13796"/><text x="86.1426%" y="959.50">async_global_executo..</text></g><g><title>std::panic::catch_unwind (13,786 samples, 13.46%)</title><rect x="85.9024%" y="933" width="13.4647%" height="15" fill="rgb(220,215,30)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="943.50">std::panic::catch_un..</text></g><g><title>std::panicking::try (13,786 samples, 13.46%)</title><rect x="85.9024%" y="917" width="13.4647%" height="15" fill="rgb(228,81,51)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (13,786 samples, 13.46%)</title><rect x="85.9024%" y="901" width="13.4647%" height="15" fill="rgb(247,71,54)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="911.50">std::panicking::try:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (13,786 samples, 13.46%)</title><rect x="85.9024%" y="885" width="13.4647%" height="15" fill="rgb(234,176,34)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="895.50">async_global_executo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,786 samples, 13.46%)</title><rect x="85.9024%" y="869" width="13.4647%" height="15" fill="rgb(241,103,54)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="879.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,786 samples, 13.46%)</title><rect x="85.9024%" y="853" width="13.4647%" height="15" fill="rgb(228,22,34)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="863.50">std::thread::local::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (13,786 samples, 13.46%)</title><rect x="85.9024%" y="837" width="13.4647%" height="15" fill="rgb(241,179,48)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="847.50">async_global_executo..</text></g><g><title>async_global_executor::reactor::block_on (13,786 samples, 13.46%)</title><rect x="85.9024%" y="821" width="13.4647%" height="15" fill="rgb(235,167,37)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="831.50">async_global_executo..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (13,786 samples, 13.46%)</title><rect x="85.9024%" y="805" width="13.4647%" height="15" fill="rgb(213,109,30)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="815.50">async_global_executo..</text></g><g><title>async_io::driver::block_on (13,786 samples, 13.46%)</title><rect x="85.9024%" y="789" width="13.4647%" height="15" fill="rgb(222,172,16)" fg:x="87952" fg:w="13786"/><text x="86.1524%" y="799.50">async_io::driver::bl..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13,802 samples, 13.48%)</title><rect x="85.8926%" y="1125" width="13.4804%" height="15" fill="rgb(233,192,5)" fg:x="87942" fg:w="13802"/><text x="86.1426%" y="1135.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13,802 samples, 13.48%)</title><rect x="85.8926%" y="1109" width="13.4804%" height="15" fill="rgb(247,189,41)" fg:x="87942" fg:w="13802"/><text x="86.1426%" y="1119.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13,802 samples, 13.48%)</title><rect x="85.8926%" y="1093" width="13.4804%" height="15" fill="rgb(218,134,47)" fg:x="87942" fg:w="13802"/><text x="86.1426%" y="1103.50">core::ops::function:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (13,802 samples, 13.48%)</title><rect x="85.8926%" y="1077" width="13.4804%" height="15" fill="rgb(216,29,3)" fg:x="87942" fg:w="13802"/><text x="86.1426%" y="1087.50">std::thread::Builder..</text></g><g><title>__GI___clone (13,827 samples, 13.50%)</title><rect x="85.8692%" y="1173" width="13.5048%" height="15" fill="rgb(246,140,12)" fg:x="87918" fg:w="13827"/><text x="86.1192%" y="1183.50">__GI___clone</text></g><g><title>start_thread (13,805 samples, 13.48%)</title><rect x="85.8906%" y="1157" width="13.4833%" height="15" fill="rgb(230,136,11)" fg:x="87940" fg:w="13805"/><text x="86.1406%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13,803 samples, 13.48%)</title><rect x="85.8926%" y="1141" width="13.4813%" height="15" fill="rgb(247,22,47)" fg:x="87942" fg:w="13803"/><text x="86.1426%" y="1151.50">std::sys::unix::thre..</text></g><g><title>__clock_gettime_2 (15 samples, 0.01%)</title><rect x="99.3808%" y="1173" width="0.0147%" height="15" fill="rgb(218,84,22)" fg:x="101752" fg:w="15"/><text x="99.6308%" y="1183.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="99.3954%" y="1173" width="0.0147%" height="15" fill="rgb(216,87,39)" fg:x="101767" fg:w="15"/><text x="99.6454%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (20 samples, 0.02%)</title><rect x="99.4120%" y="1157" width="0.0195%" height="15" fill="rgb(221,178,8)" fg:x="101784" fg:w="20"/><text x="99.6620%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (20 samples, 0.02%)</title><rect x="99.4120%" y="1141" width="0.0195%" height="15" fill="rgb(230,42,11)" fg:x="101784" fg:w="20"/><text x="99.6620%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (20 samples, 0.02%)</title><rect x="99.4120%" y="1125" width="0.0195%" height="15" fill="rgb(237,229,4)" fg:x="101784" fg:w="20"/><text x="99.6620%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="99.4120%" y="1109" width="0.0195%" height="15" fill="rgb(222,31,33)" fg:x="101784" fg:w="20"/><text x="99.6620%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="99.4120%" y="1093" width="0.0195%" height="15" fill="rgb(210,17,39)" fg:x="101784" fg:w="20"/><text x="99.6620%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="99.4120%" y="1077" width="0.0195%" height="15" fill="rgb(244,93,20)" fg:x="101784" fg:w="20"/><text x="99.6620%" y="1087.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="99.4120%" y="1061" width="0.0195%" height="15" fill="rgb(210,40,47)" fg:x="101784" fg:w="20"/><text x="99.6620%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="99.4120%" y="1045" width="0.0195%" height="15" fill="rgb(239,211,47)" fg:x="101784" fg:w="20"/><text x="99.6620%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (28 samples, 0.03%)</title><rect x="99.4316%" y="1157" width="0.0273%" height="15" fill="rgb(251,223,49)" fg:x="101804" fg:w="28"/><text x="99.6816%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (53 samples, 0.05%)</title><rect x="99.4101%" y="1173" width="0.0518%" height="15" fill="rgb(221,149,5)" fg:x="101782" fg:w="53"/><text x="99.6601%" y="1183.50"></text></g><g><title>async_executor::steal (28 samples, 0.03%)</title><rect x="99.4833%" y="1173" width="0.0273%" height="15" fill="rgb(219,224,51)" fg:x="101857" fg:w="28"/><text x="99.7333%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (11 samples, 0.01%)</title><rect x="99.5107%" y="1173" width="0.0107%" height="15" fill="rgb(223,7,8)" fg:x="101885" fg:w="11"/><text x="99.7607%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="99.5214%" y="1173" width="0.0176%" height="15" fill="rgb(241,217,22)" fg:x="101896" fg:w="18"/><text x="99.7714%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (38 samples, 0.04%)</title><rect x="99.5390%" y="1173" width="0.0371%" height="15" fill="rgb(248,209,0)" fg:x="101914" fg:w="38"/><text x="99.7890%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (22 samples, 0.02%)</title><rect x="99.5830%" y="1173" width="0.0215%" height="15" fill="rgb(217,205,4)" fg:x="101959" fg:w="22"/><text x="99.8330%" y="1183.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (15 samples, 0.01%)</title><rect x="99.6044%" y="1173" width="0.0147%" height="15" fill="rgb(228,124,39)" fg:x="101981" fg:w="15"/><text x="99.8544%" y="1183.50"></text></g><g><title>async-std/runti (101,948 samples, 99.57%)</title><rect x="0.0547%" y="1189" width="99.5722%" height="15" fill="rgb(250,116,42)" fg:x="56" fg:w="101948"/><text x="0.3047%" y="1199.50">async-std/runti</text></g><g><title>__futex_abstimed_wait_common (16 samples, 0.02%)</title><rect x="99.6367%" y="869" width="0.0156%" height="15" fill="rgb(223,202,9)" fg:x="102014" fg:w="16"/><text x="99.8867%" y="879.50"></text></g><g><title>blocking-1 (31 samples, 0.03%)</title><rect x="99.6269%" y="1189" width="0.0303%" height="15" fill="rgb(242,222,40)" fg:x="102004" fg:w="31"/><text x="99.8769%" y="1199.50"></text></g><g><title>__GI___clone (30 samples, 0.03%)</title><rect x="99.6279%" y="1173" width="0.0293%" height="15" fill="rgb(229,99,46)" fg:x="102005" fg:w="30"/><text x="99.8779%" y="1183.50"></text></g><g><title>start_thread (26 samples, 0.03%)</title><rect x="99.6318%" y="1157" width="0.0254%" height="15" fill="rgb(225,56,46)" fg:x="102009" fg:w="26"/><text x="99.8818%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (25 samples, 0.02%)</title><rect x="99.6328%" y="1141" width="0.0244%" height="15" fill="rgb(227,94,5)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="99.6328%" y="1125" width="0.0244%" height="15" fill="rgb(205,112,38)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="99.6328%" y="1109" width="0.0244%" height="15" fill="rgb(231,133,46)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (25 samples, 0.02%)</title><rect x="99.6328%" y="1093" width="0.0244%" height="15" fill="rgb(217,16,9)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (25 samples, 0.02%)</title><rect x="99.6328%" y="1077" width="0.0244%" height="15" fill="rgb(249,173,9)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.02%)</title><rect x="99.6328%" y="1061" width="0.0244%" height="15" fill="rgb(205,163,53)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1071.50"></text></g><g><title>std::panicking::try (25 samples, 0.02%)</title><rect x="99.6328%" y="1045" width="0.0244%" height="15" fill="rgb(217,54,41)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.02%)</title><rect x="99.6328%" y="1029" width="0.0244%" height="15" fill="rgb(228,216,12)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="99.6328%" y="1013" width="0.0244%" height="15" fill="rgb(244,228,15)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (25 samples, 0.02%)</title><rect x="99.6328%" y="997" width="0.0244%" height="15" fill="rgb(221,176,53)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 0.02%)</title><rect x="99.6328%" y="981" width="0.0244%" height="15" fill="rgb(205,94,34)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (25 samples, 0.02%)</title><rect x="99.6328%" y="965" width="0.0244%" height="15" fill="rgb(213,110,48)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (25 samples, 0.02%)</title><rect x="99.6328%" y="949" width="0.0244%" height="15" fill="rgb(236,142,28)" fg:x="102010" fg:w="25"/><text x="99.8828%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (24 samples, 0.02%)</title><rect x="99.6337%" y="933" width="0.0234%" height="15" fill="rgb(225,135,29)" fg:x="102011" fg:w="24"/><text x="99.8837%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (24 samples, 0.02%)</title><rect x="99.6337%" y="917" width="0.0234%" height="15" fill="rgb(252,45,31)" fg:x="102011" fg:w="24"/><text x="99.8837%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (24 samples, 0.02%)</title><rect x="99.6337%" y="901" width="0.0234%" height="15" fill="rgb(211,187,50)" fg:x="102011" fg:w="24"/><text x="99.8837%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (23 samples, 0.02%)</title><rect x="99.6347%" y="885" width="0.0225%" height="15" fill="rgb(229,109,7)" fg:x="102012" fg:w="23"/><text x="99.8847%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common (27 samples, 0.03%)</title><rect x="99.6650%" y="869" width="0.0264%" height="15" fill="rgb(251,131,51)" fg:x="102043" fg:w="27"/><text x="99.9150%" y="879.50"></text></g><g><title>blocking-2 (37 samples, 0.04%)</title><rect x="99.6572%" y="1189" width="0.0361%" height="15" fill="rgb(251,180,35)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1199.50"></text></g><g><title>__GI___clone (37 samples, 0.04%)</title><rect x="99.6572%" y="1173" width="0.0361%" height="15" fill="rgb(211,46,32)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1183.50"></text></g><g><title>start_thread (37 samples, 0.04%)</title><rect x="99.6572%" y="1157" width="0.0361%" height="15" fill="rgb(248,123,17)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (37 samples, 0.04%)</title><rect x="99.6572%" y="1141" width="0.0361%" height="15" fill="rgb(227,141,18)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.04%)</title><rect x="99.6572%" y="1125" width="0.0361%" height="15" fill="rgb(216,102,9)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.04%)</title><rect x="99.6572%" y="1109" width="0.0361%" height="15" fill="rgb(253,47,13)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (37 samples, 0.04%)</title><rect x="99.6572%" y="1093" width="0.0361%" height="15" fill="rgb(226,93,23)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (37 samples, 0.04%)</title><rect x="99.6572%" y="1077" width="0.0361%" height="15" fill="rgb(247,104,17)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.04%)</title><rect x="99.6572%" y="1061" width="0.0361%" height="15" fill="rgb(233,203,26)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1071.50"></text></g><g><title>std::panicking::try (37 samples, 0.04%)</title><rect x="99.6572%" y="1045" width="0.0361%" height="15" fill="rgb(244,98,49)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.04%)</title><rect x="99.6572%" y="1029" width="0.0361%" height="15" fill="rgb(235,134,22)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.04%)</title><rect x="99.6572%" y="1013" width="0.0361%" height="15" fill="rgb(221,70,32)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (37 samples, 0.04%)</title><rect x="99.6572%" y="997" width="0.0361%" height="15" fill="rgb(238,15,50)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (37 samples, 0.04%)</title><rect x="99.6572%" y="981" width="0.0361%" height="15" fill="rgb(215,221,48)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (37 samples, 0.04%)</title><rect x="99.6572%" y="965" width="0.0361%" height="15" fill="rgb(236,73,3)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (37 samples, 0.04%)</title><rect x="99.6572%" y="949" width="0.0361%" height="15" fill="rgb(250,107,11)" fg:x="102035" fg:w="37"/><text x="99.9072%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (30 samples, 0.03%)</title><rect x="99.6640%" y="933" width="0.0293%" height="15" fill="rgb(242,39,14)" fg:x="102042" fg:w="30"/><text x="99.9140%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (30 samples, 0.03%)</title><rect x="99.6640%" y="917" width="0.0293%" height="15" fill="rgb(248,164,37)" fg:x="102042" fg:w="30"/><text x="99.9140%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (30 samples, 0.03%)</title><rect x="99.6640%" y="901" width="0.0293%" height="15" fill="rgb(217,60,12)" fg:x="102042" fg:w="30"/><text x="99.9140%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (30 samples, 0.03%)</title><rect x="99.6640%" y="885" width="0.0293%" height="15" fill="rgb(240,125,29)" fg:x="102042" fg:w="30"/><text x="99.9140%" y="895.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.01%)</title><rect x="99.6943%" y="1061" width="0.0127%" height="15" fill="rgb(208,207,28)" fg:x="102073" fg:w="13"/><text x="99.9443%" y="1071.50"></text></g><g><title>std::panicking::try (13 samples, 0.01%)</title><rect x="99.6943%" y="1045" width="0.0127%" height="15" fill="rgb(209,159,27)" fg:x="102073" fg:w="13"/><text x="99.9443%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.01%)</title><rect x="99.6943%" y="1029" width="0.0127%" height="15" fill="rgb(251,176,53)" fg:x="102073" fg:w="13"/><text x="99.9443%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.01%)</title><rect x="99.6943%" y="1013" width="0.0127%" height="15" fill="rgb(211,85,7)" fg:x="102073" fg:w="13"/><text x="99.9443%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13 samples, 0.01%)</title><rect x="99.6943%" y="997" width="0.0127%" height="15" fill="rgb(216,64,54)" fg:x="102073" fg:w="13"/><text x="99.9443%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.01%)</title><rect x="99.6943%" y="981" width="0.0127%" height="15" fill="rgb(217,54,24)" fg:x="102073" fg:w="13"/><text x="99.9443%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (13 samples, 0.01%)</title><rect x="99.6943%" y="965" width="0.0127%" height="15" fill="rgb(208,206,53)" fg:x="102073" fg:w="13"/><text x="99.9443%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (13 samples, 0.01%)</title><rect x="99.6943%" y="949" width="0.0127%" height="15" fill="rgb(251,74,39)" fg:x="102073" fg:w="13"/><text x="99.9443%" y="959.50"></text></g><g><title>blocking-3 (15 samples, 0.01%)</title><rect x="99.6933%" y="1189" width="0.0147%" height="15" fill="rgb(226,47,5)" fg:x="102072" fg:w="15"/><text x="99.9433%" y="1199.50"></text></g><g><title>__GI___clone (14 samples, 0.01%)</title><rect x="99.6943%" y="1173" width="0.0137%" height="15" fill="rgb(234,111,33)" fg:x="102073" fg:w="14"/><text x="99.9443%" y="1183.50"></text></g><g><title>start_thread (14 samples, 0.01%)</title><rect x="99.6943%" y="1157" width="0.0137%" height="15" fill="rgb(251,14,10)" fg:x="102073" fg:w="14"/><text x="99.9443%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14 samples, 0.01%)</title><rect x="99.6943%" y="1141" width="0.0137%" height="15" fill="rgb(232,43,0)" fg:x="102073" fg:w="14"/><text x="99.9443%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="99.6943%" y="1125" width="0.0137%" height="15" fill="rgb(222,68,43)" fg:x="102073" fg:w="14"/><text x="99.9443%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.01%)</title><rect x="99.6943%" y="1109" width="0.0137%" height="15" fill="rgb(217,24,23)" fg:x="102073" fg:w="14"/><text x="99.9443%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14 samples, 0.01%)</title><rect x="99.6943%" y="1093" width="0.0137%" height="15" fill="rgb(229,209,14)" fg:x="102073" fg:w="14"/><text x="99.9443%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (14 samples, 0.01%)</title><rect x="99.6943%" y="1077" width="0.0137%" height="15" fill="rgb(250,149,48)" fg:x="102073" fg:w="14"/><text x="99.9443%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (72 samples, 0.07%)</title><rect x="99.7177%" y="1061" width="0.0703%" height="15" fill="rgb(210,120,37)" fg:x="102097" fg:w="72"/><text x="99.9677%" y="1071.50"></text></g><g><title>std::panicking::try (72 samples, 0.07%)</title><rect x="99.7177%" y="1045" width="0.0703%" height="15" fill="rgb(210,21,8)" fg:x="102097" fg:w="72"/><text x="99.9677%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (72 samples, 0.07%)</title><rect x="99.7177%" y="1029" width="0.0703%" height="15" fill="rgb(243,145,7)" fg:x="102097" fg:w="72"/><text x="99.9677%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (72 samples, 0.07%)</title><rect x="99.7177%" y="1013" width="0.0703%" height="15" fill="rgb(238,178,32)" fg:x="102097" fg:w="72"/><text x="99.9677%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (72 samples, 0.07%)</title><rect x="99.7177%" y="997" width="0.0703%" height="15" fill="rgb(222,4,10)" fg:x="102097" fg:w="72"/><text x="99.9677%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (72 samples, 0.07%)</title><rect x="99.7177%" y="981" width="0.0703%" height="15" fill="rgb(239,7,37)" fg:x="102097" fg:w="72"/><text x="99.9677%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (72 samples, 0.07%)</title><rect x="99.7177%" y="965" width="0.0703%" height="15" fill="rgb(215,31,37)" fg:x="102097" fg:w="72"/><text x="99.9677%" y="975.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (72 samples, 0.07%)</title><rect x="99.7177%" y="949" width="0.0703%" height="15" fill="rgb(224,83,33)" fg:x="102097" fg:w="72"/><text x="99.9677%" y="959.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (71 samples, 0.07%)</title><rect x="99.7187%" y="933" width="0.0693%" height="15" fill="rgb(239,55,3)" fg:x="102098" fg:w="71"/><text x="99.9687%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (71 samples, 0.07%)</title><rect x="99.7187%" y="917" width="0.0693%" height="15" fill="rgb(247,92,11)" fg:x="102098" fg:w="71"/><text x="99.9687%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (67 samples, 0.07%)</title><rect x="99.7226%" y="901" width="0.0654%" height="15" fill="rgb(239,200,7)" fg:x="102102" fg:w="67"/><text x="99.9726%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (67 samples, 0.07%)</title><rect x="99.7226%" y="885" width="0.0654%" height="15" fill="rgb(227,115,8)" fg:x="102102" fg:w="67"/><text x="99.9726%" y="895.50"></text></g><g><title>___pthread_mutex_lock (67 samples, 0.07%)</title><rect x="99.7226%" y="869" width="0.0654%" height="15" fill="rgb(215,189,27)" fg:x="102102" fg:w="67"/><text x="99.9726%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (63 samples, 0.06%)</title><rect x="99.7265%" y="853" width="0.0615%" height="15" fill="rgb(251,216,39)" fg:x="102106" fg:w="63"/><text x="99.9765%" y="863.50"></text></g><g><title>tokio-runtime-w (79 samples, 0.08%)</title><rect x="99.7158%" y="1189" width="0.0772%" height="15" fill="rgb(207,29,47)" fg:x="102095" fg:w="79"/><text x="99.9658%" y="1199.50"></text></g><g><title>__GI___clone (77 samples, 0.08%)</title><rect x="99.7177%" y="1173" width="0.0752%" height="15" fill="rgb(210,71,34)" fg:x="102097" fg:w="77"/><text x="99.9677%" y="1183.50"></text></g><g><title>start_thread (77 samples, 0.08%)</title><rect x="99.7177%" y="1157" width="0.0752%" height="15" fill="rgb(253,217,51)" fg:x="102097" fg:w="77"/><text x="99.9677%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (77 samples, 0.08%)</title><rect x="99.7177%" y="1141" width="0.0752%" height="15" fill="rgb(222,117,46)" fg:x="102097" fg:w="77"/><text x="99.9677%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (77 samples, 0.08%)</title><rect x="99.7177%" y="1125" width="0.0752%" height="15" fill="rgb(226,132,6)" fg:x="102097" fg:w="77"/><text x="99.9677%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (77 samples, 0.08%)</title><rect x="99.7177%" y="1109" width="0.0752%" height="15" fill="rgb(254,145,51)" fg:x="102097" fg:w="77"/><text x="99.9677%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (77 samples, 0.08%)</title><rect x="99.7177%" y="1093" width="0.0752%" height="15" fill="rgb(231,199,27)" fg:x="102097" fg:w="77"/><text x="99.9677%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (77 samples, 0.08%)</title><rect x="99.7177%" y="1077" width="0.0752%" height="15" fill="rgb(245,158,14)" fg:x="102097" fg:w="77"/><text x="99.9677%" y="1087.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.7968%" y="1173" width="0.0107%" height="15" fill="rgb(240,113,14)" fg:x="102178" fg:w="11"/><text x="100.0468%" y="1183.50"></text></g><g><title>__GI___clone (189 samples, 0.18%)</title><rect x="99.8076%" y="1173" width="0.1846%" height="15" fill="rgb(210,20,13)" fg:x="102189" fg:w="189"/><text x="100.0576%" y="1183.50"></text></g><g><title>start_thread (25 samples, 0.02%)</title><rect x="99.9678%" y="1157" width="0.0244%" height="15" fill="rgb(241,144,13)" fg:x="102353" fg:w="25"/><text x="100.2178%" y="1167.50"></text></g><g><title>all (102,386 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(235,43,34)" fg:x="0" fg:w="102386"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor-connecto (212 samples, 0.21%)</title><rect x="99.7929%" y="1189" width="0.2071%" height="15" fill="rgb(208,36,20)" fg:x="102174" fg:w="212"/><text x="100.0429%" y="1199.50"></text></g></svg></svg>