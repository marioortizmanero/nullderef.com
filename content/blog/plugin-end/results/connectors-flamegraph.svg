<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="101938"><g><title>std::panic::catch_unwind (33 samples, 0.03%)</title><rect x="0.0029%" y="1061" width="0.0324%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="33"/><text x="0.2529%" y="1071.50"></text></g><g><title>std::panicking::try (33 samples, 0.03%)</title><rect x="0.0029%" y="1045" width="0.0324%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="33"/><text x="0.2529%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.03%)</title><rect x="0.0029%" y="1029" width="0.0324%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="33"/><text x="0.2529%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33 samples, 0.03%)</title><rect x="0.0029%" y="1013" width="0.0324%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="33"/><text x="0.2529%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="0.0029%" y="997" width="0.0324%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="33"/><text x="0.2529%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (33 samples, 0.03%)</title><rect x="0.0029%" y="981" width="0.0324%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="33"/><text x="0.2529%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="0.0029%" y="965" width="0.0324%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="33"/><text x="0.2529%" y="975.50"></text></g><g><title>async_io::driver::main_loop (33 samples, 0.03%)</title><rect x="0.0029%" y="949" width="0.0324%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="33"/><text x="0.2529%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (26 samples, 0.03%)</title><rect x="0.0098%" y="933" width="0.0255%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="26"/><text x="0.2598%" y="943.50"></text></g><g><title>parking::Inner::park (26 samples, 0.03%)</title><rect x="0.0098%" y="917" width="0.0255%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="26"/><text x="0.2598%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (26 samples, 0.03%)</title><rect x="0.0098%" y="901" width="0.0255%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="26"/><text x="0.2598%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (24 samples, 0.02%)</title><rect x="0.0118%" y="885" width="0.0235%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="24"/><text x="0.2618%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (24 samples, 0.02%)</title><rect x="0.0118%" y="869" width="0.0235%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="24"/><text x="0.2618%" y="879.50"></text></g><g><title>__pthread_cond_timedwait (23 samples, 0.02%)</title><rect x="0.0128%" y="853" width="0.0226%" height="15" fill="rgb(206,188,39)" fg:x="13" fg:w="23"/><text x="0.2628%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common64 (22 samples, 0.02%)</title><rect x="0.0137%" y="837" width="0.0216%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="22"/><text x="0.2637%" y="847.50"></text></g><g><title>__GI___clone (34 samples, 0.03%)</title><rect x="0.0029%" y="1173" width="0.0334%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="34"/><text x="0.2529%" y="1183.50"></text></g><g><title>start_thread (34 samples, 0.03%)</title><rect x="0.0029%" y="1157" width="0.0334%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="34"/><text x="0.2529%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (34 samples, 0.03%)</title><rect x="0.0029%" y="1141" width="0.0334%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="34"/><text x="0.2529%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34 samples, 0.03%)</title><rect x="0.0029%" y="1125" width="0.0334%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="34"/><text x="0.2529%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34 samples, 0.03%)</title><rect x="0.0029%" y="1109" width="0.0334%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="34"/><text x="0.2529%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (34 samples, 0.03%)</title><rect x="0.0029%" y="1093" width="0.0334%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="34"/><text x="0.2529%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (34 samples, 0.03%)</title><rect x="0.0029%" y="1077" width="0.0334%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="34"/><text x="0.2529%" y="1087.50"></text></g><g><title>async-io (36 samples, 0.04%)</title><rect x="0.0020%" y="1189" width="0.0353%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="36"/><text x="0.2520%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.04%)</title><rect x="0.3777%" y="1173" width="0.0422%" height="15" fill="rgb(247,18,42)" fg:x="385" fg:w="43"/><text x="0.6277%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="0.4228%" y="1173" width="0.0137%" height="15" fill="rgb(241,131,45)" fg:x="431" fg:w="14"/><text x="0.6728%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="0.4473%" y="1157" width="0.0265%" height="15" fill="rgb(249,31,29)" fg:x="456" fg:w="27"/><text x="0.6973%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (77 samples, 0.08%)</title><rect x="0.4738%" y="1157" width="0.0755%" height="15" fill="rgb(225,111,53)" fg:x="483" fg:w="77"/><text x="0.7238%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (24 samples, 0.02%)</title><rect x="0.5258%" y="1141" width="0.0235%" height="15" fill="rgb(238,160,17)" fg:x="536" fg:w="24"/><text x="0.7758%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="0.5494%" y="1157" width="0.0275%" height="15" fill="rgb(214,148,48)" fg:x="560" fg:w="28"/><text x="0.7994%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (11 samples, 0.01%)</title><rect x="0.5660%" y="1141" width="0.0108%" height="15" fill="rgb(232,36,49)" fg:x="577" fg:w="11"/><text x="0.8160%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="0.5660%" y="1125" width="0.0108%" height="15" fill="rgb(209,103,24)" fg:x="577" fg:w="11"/><text x="0.8160%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (11 samples, 0.01%)</title><rect x="0.5660%" y="1109" width="0.0108%" height="15" fill="rgb(229,88,8)" fg:x="577" fg:w="11"/><text x="0.8160%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="0.5660%" y="1093" width="0.0108%" height="15" fill="rgb(213,181,19)" fg:x="577" fg:w="11"/><text x="0.8160%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="0.5660%" y="1077" width="0.0108%" height="15" fill="rgb(254,191,54)" fg:x="577" fg:w="11"/><text x="0.8160%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="0.5660%" y="1061" width="0.0108%" height="15" fill="rgb(241,83,37)" fg:x="577" fg:w="11"/><text x="0.8160%" y="1071.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="0.5660%" y="1045" width="0.0108%" height="15" fill="rgb(233,36,39)" fg:x="577" fg:w="11"/><text x="0.8160%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="0.5660%" y="1029" width="0.0108%" height="15" fill="rgb(226,3,54)" fg:x="577" fg:w="11"/><text x="0.8160%" y="1039.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (31 samples, 0.03%)</title><rect x="0.7161%" y="1141" width="0.0304%" height="15" fill="rgb(245,192,40)" fg:x="730" fg:w="31"/><text x="0.9661%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (174 samples, 0.17%)</title><rect x="0.5768%" y="1157" width="0.1707%" height="15" fill="rgb(238,167,29)" fg:x="588" fg:w="174"/><text x="0.8268%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (18 samples, 0.02%)</title><rect x="0.9251%" y="1141" width="0.0177%" height="15" fill="rgb(232,182,51)" fg:x="943" fg:w="18"/><text x="1.1751%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (211 samples, 0.21%)</title><rect x="0.7534%" y="1157" width="0.2070%" height="15" fill="rgb(231,60,39)" fg:x="768" fg:w="211"/><text x="1.0034%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="1.2998%" y="1125" width="0.0206%" height="15" fill="rgb(208,69,12)" fg:x="1325" fg:w="21"/><text x="1.5498%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="1.3086%" y="1109" width="0.0118%" height="15" fill="rgb(235,93,37)" fg:x="1334" fg:w="12"/><text x="1.5586%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="1.3086%" y="1093" width="0.0118%" height="15" fill="rgb(213,116,39)" fg:x="1334" fg:w="12"/><text x="1.5586%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="1.3086%" y="1077" width="0.0118%" height="15" fill="rgb(222,207,29)" fg:x="1334" fg:w="12"/><text x="1.5586%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="1.3086%" y="1061" width="0.0118%" height="15" fill="rgb(206,96,30)" fg:x="1334" fg:w="12"/><text x="1.5586%" y="1071.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="1.3086%" y="1045" width="0.0118%" height="15" fill="rgb(218,138,4)" fg:x="1334" fg:w="12"/><text x="1.5586%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="1.3086%" y="1029" width="0.0118%" height="15" fill="rgb(250,191,14)" fg:x="1334" fg:w="12"/><text x="1.5586%" y="1039.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (131 samples, 0.13%)</title><rect x="1.2223%" y="1141" width="0.1285%" height="15" fill="rgb(239,60,40)" fg:x="1246" fg:w="131"/><text x="1.4723%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (31 samples, 0.03%)</title><rect x="1.3204%" y="1125" width="0.0304%" height="15" fill="rgb(206,27,48)" fg:x="1346" fg:w="31"/><text x="1.5704%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (11 samples, 0.01%)</title><rect x="1.3508%" y="1141" width="0.0108%" height="15" fill="rgb(225,35,8)" fg:x="1377" fg:w="11"/><text x="1.6008%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="1.3508%" y="1125" width="0.0108%" height="15" fill="rgb(250,213,24)" fg:x="1377" fg:w="11"/><text x="1.6008%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="1.3508%" y="1109" width="0.0108%" height="15" fill="rgb(247,123,22)" fg:x="1377" fg:w="11"/><text x="1.6008%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11 samples, 0.01%)</title><rect x="1.3508%" y="1093" width="0.0108%" height="15" fill="rgb(231,138,38)" fg:x="1377" fg:w="11"/><text x="1.6008%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (11 samples, 0.01%)</title><rect x="1.3508%" y="1077" width="0.0108%" height="15" fill="rgb(231,145,46)" fg:x="1377" fg:w="11"/><text x="1.6008%" y="1087.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (14 samples, 0.01%)</title><rect x="1.3616%" y="1141" width="0.0137%" height="15" fill="rgb(251,118,11)" fg:x="1388" fg:w="14"/><text x="1.6116%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="1.3616%" y="1125" width="0.0137%" height="15" fill="rgb(217,147,25)" fg:x="1388" fg:w="14"/><text x="1.6116%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (14 samples, 0.01%)</title><rect x="1.3616%" y="1109" width="0.0137%" height="15" fill="rgb(247,81,37)" fg:x="1388" fg:w="14"/><text x="1.6116%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="1.4313%" y="1125" width="0.0167%" height="15" fill="rgb(209,12,38)" fg:x="1459" fg:w="17"/><text x="1.6813%" y="1135.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="1.4313%" y="1109" width="0.0167%" height="15" fill="rgb(227,1,9)" fg:x="1459" fg:w="17"/><text x="1.6813%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="1.4577%" y="1125" width="0.0216%" height="15" fill="rgb(248,47,43)" fg:x="1486" fg:w="22"/><text x="1.7077%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="1.4676%" y="1109" width="0.0118%" height="15" fill="rgb(221,10,30)" fg:x="1496" fg:w="12"/><text x="1.7176%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="1.4676%" y="1093" width="0.0118%" height="15" fill="rgb(210,229,1)" fg:x="1496" fg:w="12"/><text x="1.7176%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="1.4676%" y="1077" width="0.0118%" height="15" fill="rgb(222,148,37)" fg:x="1496" fg:w="12"/><text x="1.7176%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="1.4676%" y="1061" width="0.0118%" height="15" fill="rgb(234,67,33)" fg:x="1496" fg:w="12"/><text x="1.7176%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="1.4676%" y="1045" width="0.0118%" height="15" fill="rgb(247,98,35)" fg:x="1496" fg:w="12"/><text x="1.7176%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="1.4676%" y="1029" width="0.0118%" height="15" fill="rgb(247,138,52)" fg:x="1496" fg:w="12"/><text x="1.7176%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (116 samples, 0.11%)</title><rect x="1.3793%" y="1141" width="0.1138%" height="15" fill="rgb(213,79,30)" fg:x="1406" fg:w="116"/><text x="1.6293%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="1.4793%" y="1125" width="0.0137%" height="15" fill="rgb(246,177,23)" fg:x="1508" fg:w="14"/><text x="1.7293%" y="1135.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (14 samples, 0.01%)</title><rect x="1.4931%" y="1141" width="0.0137%" height="15" fill="rgb(230,62,27)" fg:x="1522" fg:w="14"/><text x="1.7431%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (54 samples, 0.05%)</title><rect x="1.5068%" y="1141" width="0.0530%" height="15" fill="rgb(216,154,8)" fg:x="1536" fg:w="54"/><text x="1.7568%" y="1151.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="1.6500%" y="1125" width="0.0128%" height="15" fill="rgb(244,35,45)" fg:x="1682" fg:w="13"/><text x="1.9000%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="1.6500%" y="1109" width="0.0128%" height="15" fill="rgb(251,115,12)" fg:x="1682" fg:w="13"/><text x="1.9000%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (13 samples, 0.01%)</title><rect x="1.6500%" y="1093" width="0.0128%" height="15" fill="rgb(240,54,50)" fg:x="1682" fg:w="13"/><text x="1.9000%" y="1103.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="1.6500%" y="1077" width="0.0128%" height="15" fill="rgb(233,84,52)" fg:x="1682" fg:w="13"/><text x="1.9000%" y="1087.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (17 samples, 0.02%)</title><rect x="1.6628%" y="1125" width="0.0167%" height="15" fill="rgb(207,117,47)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (17 samples, 0.02%)</title><rect x="1.6628%" y="1109" width="0.0167%" height="15" fill="rgb(249,43,39)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (17 samples, 0.02%)</title><rect x="1.6628%" y="1093" width="0.0167%" height="15" fill="rgb(209,38,44)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (17 samples, 0.02%)</title><rect x="1.6628%" y="1077" width="0.0167%" height="15" fill="rgb(236,212,23)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (17 samples, 0.02%)</title><rect x="1.6628%" y="1061" width="0.0167%" height="15" fill="rgb(242,79,21)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.02%)</title><rect x="1.6628%" y="1045" width="0.0167%" height="15" fill="rgb(211,96,35)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.02%)</title><rect x="1.6628%" y="1029" width="0.0167%" height="15" fill="rgb(253,215,40)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.02%)</title><rect x="1.6628%" y="1013" width="0.0167%" height="15" fill="rgb(211,81,21)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="1.6628%" y="997" width="0.0167%" height="15" fill="rgb(208,190,38)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="1.6628%" y="981" width="0.0167%" height="15" fill="rgb(235,213,38)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="1.6628%" y="965" width="0.0167%" height="15" fill="rgb(237,122,38)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="1.6628%" y="949" width="0.0167%" height="15" fill="rgb(244,218,35)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="1.6628%" y="933" width="0.0167%" height="15" fill="rgb(240,68,47)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="943.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="1.6628%" y="917" width="0.0167%" height="15" fill="rgb(210,16,53)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="927.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="1.6628%" y="901" width="0.0167%" height="15" fill="rgb(235,124,12)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="1.6628%" y="885" width="0.0167%" height="15" fill="rgb(224,169,11)" fg:x="1695" fg:w="17"/><text x="1.9128%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (749 samples, 0.73%)</title><rect x="0.9604%" y="1157" width="0.7348%" height="15" fill="rgb(250,166,2)" fg:x="979" fg:w="749"/><text x="1.2104%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (138 samples, 0.14%)</title><rect x="1.5598%" y="1141" width="0.1354%" height="15" fill="rgb(242,216,29)" fg:x="1590" fg:w="138"/><text x="1.8098%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (16 samples, 0.02%)</title><rect x="1.6795%" y="1125" width="0.0157%" height="15" fill="rgb(230,116,27)" fg:x="1712" fg:w="16"/><text x="1.9295%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="1.6795%" y="1109" width="0.0157%" height="15" fill="rgb(228,99,48)" fg:x="1712" fg:w="16"/><text x="1.9295%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (29 samples, 0.03%)</title><rect x="1.8315%" y="1141" width="0.0284%" height="15" fill="rgb(253,11,6)" fg:x="1867" fg:w="29"/><text x="2.0815%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (29 samples, 0.03%)</title><rect x="1.8315%" y="1125" width="0.0284%" height="15" fill="rgb(247,143,39)" fg:x="1867" fg:w="29"/><text x="2.0815%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="1.8315%" y="1109" width="0.0284%" height="15" fill="rgb(236,97,10)" fg:x="1867" fg:w="29"/><text x="2.0815%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.03%)</title><rect x="1.8315%" y="1093" width="0.0284%" height="15" fill="rgb(233,208,19)" fg:x="1867" fg:w="29"/><text x="2.0815%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (29 samples, 0.03%)</title><rect x="1.8315%" y="1077" width="0.0284%" height="15" fill="rgb(216,164,2)" fg:x="1867" fg:w="29"/><text x="2.0815%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (198 samples, 0.19%)</title><rect x="1.6951%" y="1157" width="0.1942%" height="15" fill="rgb(220,129,5)" fg:x="1728" fg:w="198"/><text x="1.9451%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.03%)</title><rect x="1.8600%" y="1141" width="0.0294%" height="15" fill="rgb(242,17,10)" fg:x="1896" fg:w="30"/><text x="2.1100%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="1.8600%" y="1125" width="0.0294%" height="15" fill="rgb(242,107,0)" fg:x="1896" fg:w="30"/><text x="2.1100%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.03%)</title><rect x="1.8600%" y="1109" width="0.0294%" height="15" fill="rgb(251,28,31)" fg:x="1896" fg:w="30"/><text x="2.1100%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="1.8600%" y="1093" width="0.0294%" height="15" fill="rgb(233,223,10)" fg:x="1896" fg:w="30"/><text x="2.1100%" y="1103.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="1.9110%" y="1109" width="0.0177%" height="15" fill="rgb(215,21,27)" fg:x="1948" fg:w="18"/><text x="2.1610%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (39 samples, 0.04%)</title><rect x="1.8933%" y="1157" width="0.0383%" height="15" fill="rgb(232,23,21)" fg:x="1930" fg:w="39"/><text x="2.1433%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (27 samples, 0.03%)</title><rect x="1.9051%" y="1141" width="0.0265%" height="15" fill="rgb(244,5,23)" fg:x="1942" fg:w="27"/><text x="2.1551%" y="1151.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (26 samples, 0.03%)</title><rect x="1.9061%" y="1125" width="0.0255%" height="15" fill="rgb(226,81,46)" fg:x="1943" fg:w="26"/><text x="2.1561%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (58 samples, 0.06%)</title><rect x="1.9316%" y="1157" width="0.0569%" height="15" fill="rgb(247,70,30)" fg:x="1969" fg:w="58"/><text x="2.1816%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (217 samples, 0.21%)</title><rect x="1.9885%" y="1157" width="0.2129%" height="15" fill="rgb(212,68,19)" fg:x="2027" fg:w="217"/><text x="2.2385%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (137 samples, 0.13%)</title><rect x="2.0669%" y="1141" width="0.1344%" height="15" fill="rgb(240,187,13)" fg:x="2107" fg:w="137"/><text x="2.3169%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (107 samples, 0.10%)</title><rect x="2.0964%" y="1125" width="0.1050%" height="15" fill="rgb(223,113,26)" fg:x="2137" fg:w="107"/><text x="2.3464%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (31 samples, 0.03%)</title><rect x="2.1709%" y="1109" width="0.0304%" height="15" fill="rgb(206,192,2)" fg:x="2213" fg:w="31"/><text x="2.4209%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (28 samples, 0.03%)</title><rect x="2.1739%" y="1093" width="0.0275%" height="15" fill="rgb(241,108,4)" fg:x="2216" fg:w="28"/><text x="2.4239%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (28 samples, 0.03%)</title><rect x="2.1739%" y="1077" width="0.0275%" height="15" fill="rgb(247,173,49)" fg:x="2216" fg:w="28"/><text x="2.4239%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (28 samples, 0.03%)</title><rect x="2.1739%" y="1061" width="0.0275%" height="15" fill="rgb(224,114,35)" fg:x="2216" fg:w="28"/><text x="2.4239%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.03%)</title><rect x="2.1739%" y="1045" width="0.0275%" height="15" fill="rgb(245,159,27)" fg:x="2216" fg:w="28"/><text x="2.4239%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.03%)</title><rect x="2.1739%" y="1029" width="0.0275%" height="15" fill="rgb(245,172,44)" fg:x="2216" fg:w="28"/><text x="2.4239%" y="1039.50"></text></g><g><title>__rg_dealloc (28 samples, 0.03%)</title><rect x="2.1739%" y="1013" width="0.0275%" height="15" fill="rgb(236,23,11)" fg:x="2216" fg:w="28"/><text x="2.4239%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (28 samples, 0.03%)</title><rect x="2.1739%" y="997" width="0.0275%" height="15" fill="rgb(205,117,38)" fg:x="2216" fg:w="28"/><text x="2.4239%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="2.2013%" y="1157" width="0.0324%" height="15" fill="rgb(237,72,25)" fg:x="2244" fg:w="33"/><text x="2.4513%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="2.2141%" y="1141" width="0.0196%" height="15" fill="rgb(244,70,9)" fg:x="2257" fg:w="20"/><text x="2.4641%" y="1151.50"></text></g><g><title>__GI___pthread_mutex_lock (40 samples, 0.04%)</title><rect x="2.2347%" y="1157" width="0.0392%" height="15" fill="rgb(217,125,39)" fg:x="2278" fg:w="40"/><text x="2.4847%" y="1167.50"></text></g><g><title>__clock_gettime_2 (25 samples, 0.02%)</title><rect x="2.2818%" y="1157" width="0.0245%" height="15" fill="rgb(235,36,10)" fg:x="2326" fg:w="25"/><text x="2.5318%" y="1167.50"></text></g><g><title>__memmove_avx_unaligned_erms (55 samples, 0.05%)</title><rect x="2.3102%" y="1157" width="0.0540%" height="15" fill="rgb(251,123,47)" fg:x="2355" fg:w="55"/><text x="2.5602%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (73 samples, 0.07%)</title><rect x="2.3750%" y="1157" width="0.0716%" height="15" fill="rgb(221,13,13)" fg:x="2421" fg:w="73"/><text x="2.6250%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (19 samples, 0.02%)</title><rect x="2.4466%" y="1157" width="0.0186%" height="15" fill="rgb(238,131,9)" fg:x="2494" fg:w="19"/><text x="2.6966%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.01%)</title><rect x="2.4662%" y="1157" width="0.0128%" height="15" fill="rgb(211,50,8)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="2.4662%" y="1141" width="0.0128%" height="15" fill="rgb(245,182,24)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="2.4662%" y="1125" width="0.0128%" height="15" fill="rgb(242,14,37)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="2.4662%" y="1109" width="0.0128%" height="15" fill="rgb(246,228,12)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="2.4662%" y="1093" width="0.0128%" height="15" fill="rgb(213,55,15)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="2.4662%" y="1077" width="0.0128%" height="15" fill="rgb(209,9,3)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="2.4662%" y="1061" width="0.0128%" height="15" fill="rgb(230,59,30)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1071.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="2.4662%" y="1045" width="0.0128%" height="15" fill="rgb(209,121,21)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="2.4662%" y="1029" width="0.0128%" height="15" fill="rgb(220,109,13)" fg:x="2514" fg:w="13"/><text x="2.7162%" y="1039.50"></text></g><g><title>async_executor::Ticker::sleep (18 samples, 0.02%)</title><rect x="2.4917%" y="1157" width="0.0177%" height="15" fill="rgb(232,18,1)" fg:x="2540" fg:w="18"/><text x="2.7417%" y="1167.50"></text></g><g><title>async_executor::steal (27 samples, 0.03%)</title><rect x="2.5162%" y="1157" width="0.0265%" height="15" fill="rgb(215,41,42)" fg:x="2565" fg:w="27"/><text x="2.7662%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11 samples, 0.01%)</title><rect x="2.5476%" y="1157" width="0.0108%" height="15" fill="rgb(224,123,36)" fg:x="2597" fg:w="11"/><text x="2.7976%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (153 samples, 0.15%)</title><rect x="2.5584%" y="1157" width="0.1501%" height="15" fill="rgb(240,125,3)" fg:x="2608" fg:w="153"/><text x="2.8084%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (60 samples, 0.06%)</title><rect x="2.7085%" y="1157" width="0.0589%" height="15" fill="rgb(205,98,50)" fg:x="2761" fg:w="60"/><text x="2.9585%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (145 samples, 0.14%)</title><rect x="2.7674%" y="1157" width="0.1422%" height="15" fill="rgb(205,185,37)" fg:x="2821" fg:w="145"/><text x="3.0174%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (16 samples, 0.02%)</title><rect x="2.8939%" y="1141" width="0.0157%" height="15" fill="rgb(238,207,15)" fg:x="2950" fg:w="16"/><text x="3.1439%" y="1151.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="2.8939%" y="1125" width="0.0157%" height="15" fill="rgb(213,199,42)" fg:x="2950" fg:w="16"/><text x="3.1439%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (56 samples, 0.05%)</title><rect x="2.9096%" y="1157" width="0.0549%" height="15" fill="rgb(235,201,11)" fg:x="2966" fg:w="56"/><text x="3.1596%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (90 samples, 0.09%)</title><rect x="2.9724%" y="1157" width="0.0883%" height="15" fill="rgb(207,46,11)" fg:x="3030" fg:w="90"/><text x="3.2224%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="3.0116%" y="1141" width="0.0490%" height="15" fill="rgb(241,35,35)" fg:x="3070" fg:w="50"/><text x="3.2616%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="3.0607%" y="1157" width="0.0108%" height="15" fill="rgb(243,32,47)" fg:x="3120" fg:w="11"/><text x="3.3107%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="3.0715%" y="1157" width="0.0167%" height="15" fill="rgb(247,202,23)" fg:x="3131" fg:w="17"/><text x="3.3215%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (90 samples, 0.09%)</title><rect x="3.0882%" y="1157" width="0.0883%" height="15" fill="rgb(219,102,11)" fg:x="3148" fg:w="90"/><text x="3.3382%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (90 samples, 0.09%)</title><rect x="3.0882%" y="1141" width="0.0883%" height="15" fill="rgb(243,110,44)" fg:x="3148" fg:w="90"/><text x="3.3382%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (28 samples, 0.03%)</title><rect x="3.1764%" y="1157" width="0.0275%" height="15" fill="rgb(222,74,54)" fg:x="3238" fg:w="28"/><text x="3.4264%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="3.1902%" y="1141" width="0.0137%" height="15" fill="rgb(216,99,12)" fg:x="3252" fg:w="14"/><text x="3.4402%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="3.2039%" y="1157" width="0.0167%" height="15" fill="rgb(226,22,26)" fg:x="3266" fg:w="17"/><text x="3.4539%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="3.2206%" y="1157" width="0.0128%" height="15" fill="rgb(217,163,10)" fg:x="3283" fg:w="13"/><text x="3.4706%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="3.2333%" y="1157" width="0.0294%" height="15" fill="rgb(213,25,53)" fg:x="3296" fg:w="30"/><text x="3.4833%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="3.2628%" y="1157" width="0.0137%" height="15" fill="rgb(252,105,26)" fg:x="3326" fg:w="14"/><text x="3.5128%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="3.2628%" y="1141" width="0.0137%" height="15" fill="rgb(220,39,43)" fg:x="3326" fg:w="14"/><text x="3.5128%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="3.2765%" y="1157" width="0.0235%" height="15" fill="rgb(229,68,48)" fg:x="3340" fg:w="24"/><text x="3.5265%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (90 samples, 0.09%)</title><rect x="3.3000%" y="1157" width="0.0883%" height="15" fill="rgb(252,8,32)" fg:x="3364" fg:w="90"/><text x="3.5500%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="3.4482%" y="1109" width="0.0206%" height="15" fill="rgb(223,20,43)" fg:x="3515" fg:w="21"/><text x="3.6982%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (21 samples, 0.02%)</title><rect x="3.4482%" y="1093" width="0.0206%" height="15" fill="rgb(229,81,49)" fg:x="3515" fg:w="21"/><text x="3.6982%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="3.4482%" y="1077" width="0.0206%" height="15" fill="rgb(236,28,36)" fg:x="3515" fg:w="21"/><text x="3.6982%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="3.4482%" y="1061" width="0.0206%" height="15" fill="rgb(249,185,26)" fg:x="3515" fg:w="21"/><text x="3.6982%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="3.4482%" y="1125" width="0.0402%" height="15" fill="rgb(249,174,33)" fg:x="3515" fg:w="41"/><text x="3.6982%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (20 samples, 0.02%)</title><rect x="3.4688%" y="1109" width="0.0196%" height="15" fill="rgb(233,201,37)" fg:x="3536" fg:w="20"/><text x="3.7188%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="3.4688%" y="1093" width="0.0196%" height="15" fill="rgb(221,78,26)" fg:x="3536" fg:w="20"/><text x="3.7188%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="3.4688%" y="1077" width="0.0196%" height="15" fill="rgb(250,127,30)" fg:x="3536" fg:w="20"/><text x="3.7188%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="3.4688%" y="1061" width="0.0196%" height="15" fill="rgb(230,49,44)" fg:x="3536" fg:w="20"/><text x="3.7188%" y="1071.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="3.4688%" y="1045" width="0.0196%" height="15" fill="rgb(229,67,23)" fg:x="3536" fg:w="20"/><text x="3.7188%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="3.4688%" y="1029" width="0.0196%" height="15" fill="rgb(249,83,47)" fg:x="3536" fg:w="20"/><text x="3.7188%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (129 samples, 0.13%)</title><rect x="3.3883%" y="1157" width="0.1265%" height="15" fill="rgb(215,43,3)" fg:x="3454" fg:w="129"/><text x="3.6383%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (68 samples, 0.07%)</title><rect x="3.4482%" y="1141" width="0.0667%" height="15" fill="rgb(238,154,13)" fg:x="3515" fg:w="68"/><text x="3.6982%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (27 samples, 0.03%)</title><rect x="3.4884%" y="1125" width="0.0265%" height="15" fill="rgb(219,56,2)" fg:x="3556" fg:w="27"/><text x="3.7384%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (49 samples, 0.05%)</title><rect x="3.5600%" y="1141" width="0.0481%" height="15" fill="rgb(233,0,4)" fg:x="3629" fg:w="49"/><text x="3.8100%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (49 samples, 0.05%)</title><rect x="3.5600%" y="1125" width="0.0481%" height="15" fill="rgb(235,30,7)" fg:x="3629" fg:w="49"/><text x="3.8100%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (49 samples, 0.05%)</title><rect x="3.5600%" y="1109" width="0.0481%" height="15" fill="rgb(250,79,13)" fg:x="3629" fg:w="49"/><text x="3.8100%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="3.5600%" y="1093" width="0.0481%" height="15" fill="rgb(211,146,34)" fg:x="3629" fg:w="49"/><text x="3.8100%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.05%)</title><rect x="3.5600%" y="1077" width="0.0481%" height="15" fill="rgb(228,22,38)" fg:x="3629" fg:w="49"/><text x="3.8100%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.05%)</title><rect x="3.5600%" y="1061" width="0.0481%" height="15" fill="rgb(235,168,5)" fg:x="3629" fg:w="49"/><text x="3.8100%" y="1071.50"></text></g><g><title>__rg_dealloc (49 samples, 0.05%)</title><rect x="3.5600%" y="1045" width="0.0481%" height="15" fill="rgb(221,155,16)" fg:x="3629" fg:w="49"/><text x="3.8100%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (49 samples, 0.05%)</title><rect x="3.5600%" y="1029" width="0.0481%" height="15" fill="rgb(215,215,53)" fg:x="3629" fg:w="49"/><text x="3.8100%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.6081%" y="1125" width="0.0137%" height="15" fill="rgb(223,4,10)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (14 samples, 0.01%)</title><rect x="3.6081%" y="1109" width="0.0137%" height="15" fill="rgb(234,103,6)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (14 samples, 0.01%)</title><rect x="3.6081%" y="1093" width="0.0137%" height="15" fill="rgb(227,97,0)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="3.6081%" y="1077" width="0.0137%" height="15" fill="rgb(234,150,53)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.01%)</title><rect x="3.6081%" y="1061" width="0.0137%" height="15" fill="rgb(228,201,54)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="3.6081%" y="1045" width="0.0137%" height="15" fill="rgb(222,22,37)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="3.6081%" y="1029" width="0.0137%" height="15" fill="rgb(237,53,32)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="3.6081%" y="1013" width="0.0137%" height="15" fill="rgb(233,25,53)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1023.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="3.6081%" y="997" width="0.0137%" height="15" fill="rgb(210,40,34)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="3.6081%" y="981" width="0.0137%" height="15" fill="rgb(241,220,44)" fg:x="3678" fg:w="14"/><text x="3.8581%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (135 samples, 0.13%)</title><rect x="3.5149%" y="1157" width="0.1324%" height="15" fill="rgb(235,28,35)" fg:x="3583" fg:w="135"/><text x="3.7649%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (40 samples, 0.04%)</title><rect x="3.6081%" y="1141" width="0.0392%" height="15" fill="rgb(210,56,17)" fg:x="3678" fg:w="40"/><text x="3.8581%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (26 samples, 0.03%)</title><rect x="3.6218%" y="1125" width="0.0255%" height="15" fill="rgb(224,130,29)" fg:x="3692" fg:w="26"/><text x="3.8718%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="3.6218%" y="1109" width="0.0255%" height="15" fill="rgb(235,212,8)" fg:x="3692" fg:w="26"/><text x="3.8718%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.03%)</title><rect x="3.6218%" y="1093" width="0.0255%" height="15" fill="rgb(223,33,50)" fg:x="3692" fg:w="26"/><text x="3.8718%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.03%)</title><rect x="3.6218%" y="1077" width="0.0255%" height="15" fill="rgb(219,149,13)" fg:x="3692" fg:w="26"/><text x="3.8718%" y="1087.50"></text></g><g><title>__rg_dealloc (26 samples, 0.03%)</title><rect x="3.6218%" y="1061" width="0.0255%" height="15" fill="rgb(250,156,29)" fg:x="3692" fg:w="26"/><text x="3.8718%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (26 samples, 0.03%)</title><rect x="3.6218%" y="1045" width="0.0255%" height="15" fill="rgb(216,193,19)" fg:x="3692" fg:w="26"/><text x="3.8718%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (137 samples, 0.13%)</title><rect x="3.6473%" y="1157" width="0.1344%" height="15" fill="rgb(216,135,14)" fg:x="3718" fg:w="137"/><text x="3.8973%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="3.7533%" y="1141" width="0.0284%" height="15" fill="rgb(241,47,5)" fg:x="3826" fg:w="29"/><text x="4.0033%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="3.7533%" y="1125" width="0.0284%" height="15" fill="rgb(233,42,35)" fg:x="3826" fg:w="29"/><text x="4.0033%" y="1135.50"></text></g><g><title>event_listener::Event::notify (259 samples, 0.25%)</title><rect x="3.7896%" y="1157" width="0.2541%" height="15" fill="rgb(231,13,6)" fg:x="3863" fg:w="259"/><text x="4.0396%" y="1167.50"></text></g><g><title>event_listener::full_fence (111 samples, 0.11%)</title><rect x="3.9347%" y="1141" width="0.1089%" height="15" fill="rgb(207,181,40)" fg:x="4011" fg:w="111"/><text x="4.1847%" y="1151.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (78 samples, 0.08%)</title><rect x="4.0515%" y="1157" width="0.0765%" height="15" fill="rgb(254,173,49)" fg:x="4130" fg:w="78"/><text x="4.3015%" y="1167.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (13 samples, 0.01%)</title><rect x="4.1152%" y="1141" width="0.0128%" height="15" fill="rgb(221,1,38)" fg:x="4195" fg:w="13"/><text x="4.3652%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (13 samples, 0.01%)</title><rect x="4.1152%" y="1125" width="0.0128%" height="15" fill="rgb(206,124,46)" fg:x="4195" fg:w="13"/><text x="4.3652%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.01%)</title><rect x="4.1152%" y="1109" width="0.0128%" height="15" fill="rgb(249,21,11)" fg:x="4195" fg:w="13"/><text x="4.3652%" y="1119.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (13 samples, 0.01%)</title><rect x="4.1152%" y="1093" width="0.0128%" height="15" fill="rgb(222,201,40)" fg:x="4195" fg:w="13"/><text x="4.3652%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.01%)</title><rect x="4.1152%" y="1077" width="0.0128%" height="15" fill="rgb(235,61,29)" fg:x="4195" fg:w="13"/><text x="4.3652%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.01%)</title><rect x="4.1152%" y="1061" width="0.0128%" height="15" fill="rgb(219,207,3)" fg:x="4195" fg:w="13"/><text x="4.3652%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.01%)</title><rect x="4.1152%" y="1045" width="0.0128%" height="15" fill="rgb(222,56,46)" fg:x="4195" fg:w="13"/><text x="4.3652%" y="1055.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (23 samples, 0.02%)</title><rect x="4.1280%" y="1157" width="0.0226%" height="15" fill="rgb(239,76,54)" fg:x="4208" fg:w="23"/><text x="4.3780%" y="1167.50"></text></g><g><title>parking::Inner::park (18 samples, 0.02%)</title><rect x="4.1506%" y="1157" width="0.0177%" height="15" fill="rgb(231,124,27)" fg:x="4231" fg:w="18"/><text x="4.4006%" y="1167.50"></text></g><g><title>rust_alloc (70 samples, 0.07%)</title><rect x="4.1810%" y="1157" width="0.0687%" height="15" fill="rgb(249,195,6)" fg:x="4262" fg:w="70"/><text x="4.4310%" y="1167.50"></text></g><g><title>rust_dealloc (22 samples, 0.02%)</title><rect x="4.2496%" y="1157" width="0.0216%" height="15" fill="rgb(237,174,47)" fg:x="4332" fg:w="22"/><text x="4.4996%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (18 samples, 0.02%)</title><rect x="4.2536%" y="1141" width="0.0177%" height="15" fill="rgb(206,201,31)" fg:x="4336" fg:w="18"/><text x="4.5036%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (18 samples, 0.02%)</title><rect x="4.2536%" y="1125" width="0.0177%" height="15" fill="rgb(231,57,52)" fg:x="4336" fg:w="18"/><text x="4.5036%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (18 samples, 0.02%)</title><rect x="4.2536%" y="1109" width="0.0177%" height="15" fill="rgb(248,177,22)" fg:x="4336" fg:w="18"/><text x="4.5036%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (18 samples, 0.02%)</title><rect x="4.2536%" y="1093" width="0.0177%" height="15" fill="rgb(215,211,37)" fg:x="4336" fg:w="18"/><text x="4.5036%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (18 samples, 0.02%)</title><rect x="4.2536%" y="1077" width="0.0177%" height="15" fill="rgb(241,128,51)" fg:x="4336" fg:w="18"/><text x="4.5036%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="4.2536%" y="1061" width="0.0177%" height="15" fill="rgb(227,165,31)" fg:x="4336" fg:w="18"/><text x="4.5036%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="4.2536%" y="1045" width="0.0177%" height="15" fill="rgb(228,167,24)" fg:x="4336" fg:w="18"/><text x="4.5036%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (18 samples, 0.02%)</title><rect x="4.2536%" y="1029" width="0.0177%" height="15" fill="rgb(228,143,12)" fg:x="4336" fg:w="18"/><text x="4.5036%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (24 samples, 0.02%)</title><rect x="4.2889%" y="1157" width="0.0235%" height="15" fill="rgb(249,149,8)" fg:x="4372" fg:w="24"/><text x="4.5389%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (59 samples, 0.06%)</title><rect x="4.3134%" y="1157" width="0.0579%" height="15" fill="rgb(243,35,44)" fg:x="4397" fg:w="59"/><text x="4.5634%" y="1167.50"></text></g><g><title>tremor_common::time::nanotime (91 samples, 0.09%)</title><rect x="4.3801%" y="1157" width="0.0893%" height="15" fill="rgb(246,89,9)" fg:x="4465" fg:w="91"/><text x="4.6301%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (82 samples, 0.08%)</title><rect x="4.3889%" y="1141" width="0.0804%" height="15" fill="rgb(233,213,13)" fg:x="4474" fg:w="82"/><text x="4.6389%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (82 samples, 0.08%)</title><rect x="4.3889%" y="1125" width="0.0804%" height="15" fill="rgb(233,141,41)" fg:x="4474" fg:w="82"/><text x="4.6389%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (82 samples, 0.08%)</title><rect x="4.3889%" y="1109" width="0.0804%" height="15" fill="rgb(239,167,4)" fg:x="4474" fg:w="82"/><text x="4.6389%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (28 samples, 0.03%)</title><rect x="4.4694%" y="1157" width="0.0275%" height="15" fill="rgb(209,217,16)" fg:x="4556" fg:w="28"/><text x="4.7194%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="4.6116%" y="1141" width="0.0284%" height="15" fill="rgb(219,88,35)" fg:x="4701" fg:w="29"/><text x="4.8616%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (17 samples, 0.02%)</title><rect x="4.6401%" y="1141" width="0.0167%" height="15" fill="rgb(220,193,23)" fg:x="4730" fg:w="17"/><text x="4.8901%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (17 samples, 0.02%)</title><rect x="4.6401%" y="1125" width="0.0167%" height="15" fill="rgb(230,90,52)" fg:x="4730" fg:w="17"/><text x="4.8901%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (12 samples, 0.01%)</title><rect x="4.6568%" y="1141" width="0.0118%" height="15" fill="rgb(252,106,19)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.6568%" y="1125" width="0.0118%" height="15" fill="rgb(206,74,20)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.01%)</title><rect x="4.6568%" y="1109" width="0.0118%" height="15" fill="rgb(230,138,44)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="4.6568%" y="1093" width="0.0118%" height="15" fill="rgb(235,182,43)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="4.6568%" y="1077" width="0.0118%" height="15" fill="rgb(242,16,51)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.6568%" y="1061" width="0.0118%" height="15" fill="rgb(248,9,4)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="4.6568%" y="1045" width="0.0118%" height="15" fill="rgb(210,31,22)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="4.6568%" y="1029" width="0.0118%" height="15" fill="rgb(239,54,39)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1039.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="4.6568%" y="1013" width="0.0118%" height="15" fill="rgb(230,99,41)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="4.6568%" y="997" width="0.0118%" height="15" fill="rgb(253,106,12)" fg:x="4747" fg:w="12"/><text x="4.9068%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (36 samples, 0.04%)</title><rect x="4.6685%" y="1141" width="0.0353%" height="15" fill="rgb(213,46,41)" fg:x="4759" fg:w="36"/><text x="4.9185%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (36 samples, 0.04%)</title><rect x="4.6685%" y="1125" width="0.0353%" height="15" fill="rgb(215,133,35)" fg:x="4759" fg:w="36"/><text x="4.9185%" y="1135.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="4.6930%" y="1109" width="0.0108%" height="15" fill="rgb(213,28,5)" fg:x="4784" fg:w="11"/><text x="4.9430%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="4.6930%" y="1093" width="0.0108%" height="15" fill="rgb(215,77,49)" fg:x="4784" fg:w="11"/><text x="4.9430%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="4.6930%" y="1077" width="0.0108%" height="15" fill="rgb(248,100,22)" fg:x="4784" fg:w="11"/><text x="4.9430%" y="1087.50"></text></g><g><title>__rg_dealloc (11 samples, 0.01%)</title><rect x="4.6930%" y="1061" width="0.0108%" height="15" fill="rgb(208,67,9)" fg:x="4784" fg:w="11"/><text x="4.9430%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.01%)</title><rect x="4.6930%" y="1045" width="0.0108%" height="15" fill="rgb(219,133,21)" fg:x="4784" fg:w="11"/><text x="4.9430%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (237 samples, 0.23%)</title><rect x="4.4978%" y="1157" width="0.2325%" height="15" fill="rgb(246,46,29)" fg:x="4585" fg:w="237"/><text x="4.7478%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (27 samples, 0.03%)</title><rect x="4.7038%" y="1141" width="0.0265%" height="15" fill="rgb(246,185,52)" fg:x="4795" fg:w="27"/><text x="4.9538%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (16 samples, 0.02%)</title><rect x="4.7146%" y="1125" width="0.0157%" height="15" fill="rgb(252,136,11)" fg:x="4806" fg:w="16"/><text x="4.9646%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (16 samples, 0.02%)</title><rect x="4.7146%" y="1109" width="0.0157%" height="15" fill="rgb(219,138,53)" fg:x="4806" fg:w="16"/><text x="4.9646%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="4.7146%" y="1093" width="0.0157%" height="15" fill="rgb(211,51,23)" fg:x="4806" fg:w="16"/><text x="4.9646%" y="1103.50"></text></g><g><title>core::mem::drop (16 samples, 0.02%)</title><rect x="4.7146%" y="1077" width="0.0157%" height="15" fill="rgb(247,221,28)" fg:x="4806" fg:w="16"/><text x="4.9646%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (16 samples, 0.02%)</title><rect x="4.7146%" y="1061" width="0.0157%" height="15" fill="rgb(251,222,45)" fg:x="4806" fg:w="16"/><text x="4.9646%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 0.08%)</title><rect x="4.7470%" y="1141" width="0.0755%" height="15" fill="rgb(217,162,53)" fg:x="4839" fg:w="77"/><text x="4.9970%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (65 samples, 0.06%)</title><rect x="4.7588%" y="1125" width="0.0638%" height="15" fill="rgb(229,93,14)" fg:x="4851" fg:w="65"/><text x="5.0088%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (114 samples, 0.11%)</title><rect x="4.7313%" y="1157" width="0.1118%" height="15" fill="rgb(209,67,49)" fg:x="4823" fg:w="114"/><text x="4.9813%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="4.8304%" y="1141" width="0.0128%" height="15" fill="rgb(213,87,29)" fg:x="4924" fg:w="13"/><text x="5.0804%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (13 samples, 0.01%)</title><rect x="4.8304%" y="1125" width="0.0128%" height="15" fill="rgb(205,151,52)" fg:x="4924" fg:w="13"/><text x="5.0804%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (43 samples, 0.04%)</title><rect x="4.8431%" y="1157" width="0.0422%" height="15" fill="rgb(253,215,39)" fg:x="4937" fg:w="43"/><text x="5.0931%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (16 samples, 0.02%)</title><rect x="4.8932%" y="1157" width="0.0157%" height="15" fill="rgb(221,220,41)" fg:x="4988" fg:w="16"/><text x="5.1432%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (25 samples, 0.02%)</title><rect x="4.9089%" y="1157" width="0.0245%" height="15" fill="rgb(218,133,21)" fg:x="5004" fg:w="25"/><text x="5.1589%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (32 samples, 0.03%)</title><rect x="4.9334%" y="1157" width="0.0314%" height="15" fill="rgb(221,193,43)" fg:x="5029" fg:w="32"/><text x="5.1834%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="5.0511%" y="1109" width="0.0186%" height="15" fill="rgb(240,128,52)" fg:x="5149" fg:w="19"/><text x="5.3011%" y="1119.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="5.0511%" y="1093" width="0.0186%" height="15" fill="rgb(253,114,12)" fg:x="5149" fg:w="19"/><text x="5.3011%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (114 samples, 0.11%)</title><rect x="4.9648%" y="1157" width="0.1118%" height="15" fill="rgb(215,223,47)" fg:x="5061" fg:w="114"/><text x="5.2148%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="5.0462%" y="1141" width="0.0304%" height="15" fill="rgb(248,225,23)" fg:x="5144" fg:w="31"/><text x="5.2962%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (31 samples, 0.03%)</title><rect x="5.0462%" y="1125" width="0.0304%" height="15" fill="rgb(250,108,0)" fg:x="5144" fg:w="31"/><text x="5.2962%" y="1135.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (69 samples, 0.07%)</title><rect x="5.0766%" y="1157" width="0.0677%" height="15" fill="rgb(228,208,7)" fg:x="5175" fg:w="69"/><text x="5.3266%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="5.1286%" y="1141" width="0.0157%" height="15" fill="rgb(244,45,10)" fg:x="5228" fg:w="16"/><text x="5.3786%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="5.1286%" y="1125" width="0.0157%" height="15" fill="rgb(207,125,25)" fg:x="5228" fg:w="16"/><text x="5.3786%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="5.1286%" y="1109" width="0.0157%" height="15" fill="rgb(210,195,18)" fg:x="5228" fg:w="16"/><text x="5.3786%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="5.1286%" y="1093" width="0.0157%" height="15" fill="rgb(249,80,12)" fg:x="5228" fg:w="16"/><text x="5.3786%" y="1103.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="5.1286%" y="1077" width="0.0157%" height="15" fill="rgb(221,65,9)" fg:x="5228" fg:w="16"/><text x="5.3786%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="5.1286%" y="1061" width="0.0157%" height="15" fill="rgb(235,49,36)" fg:x="5228" fg:w="16"/><text x="5.3786%" y="1071.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (68 samples, 0.07%)</title><rect x="5.1443%" y="1157" width="0.0667%" height="15" fill="rgb(225,32,20)" fg:x="5244" fg:w="68"/><text x="5.3943%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="5.1953%" y="1141" width="0.0157%" height="15" fill="rgb(215,141,46)" fg:x="5296" fg:w="16"/><text x="5.4453%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="5.1953%" y="1125" width="0.0157%" height="15" fill="rgb(250,160,47)" fg:x="5296" fg:w="16"/><text x="5.4453%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="5.1953%" y="1109" width="0.0157%" height="15" fill="rgb(216,222,40)" fg:x="5296" fg:w="16"/><text x="5.4453%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="5.1953%" y="1093" width="0.0157%" height="15" fill="rgb(234,217,39)" fg:x="5296" fg:w="16"/><text x="5.4453%" y="1103.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="5.1953%" y="1077" width="0.0157%" height="15" fill="rgb(207,178,40)" fg:x="5296" fg:w="16"/><text x="5.4453%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="5.1953%" y="1061" width="0.0157%" height="15" fill="rgb(221,136,13)" fg:x="5296" fg:w="16"/><text x="5.4453%" y="1071.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (79 samples, 0.08%)</title><rect x="5.2110%" y="1157" width="0.0775%" height="15" fill="rgb(249,199,10)" fg:x="5312" fg:w="79"/><text x="5.4610%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (24 samples, 0.02%)</title><rect x="5.2650%" y="1141" width="0.0235%" height="15" fill="rgb(249,222,13)" fg:x="5367" fg:w="24"/><text x="5.5150%" y="1151.50"></text></g><g><title>[anon] (4,947 samples, 4.85%)</title><rect x="0.4454%" y="1173" width="4.8529%" height="15" fill="rgb(244,185,38)" fg:x="454" fg:w="4947"/><text x="0.6954%" y="1183.50">[anon]</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (25 samples, 0.02%)</title><rect x="5.3022%" y="1157" width="0.0245%" height="15" fill="rgb(236,202,9)" fg:x="5405" fg:w="25"/><text x="5.5522%" y="1167.50"></text></g><g><title>[libc-2.33.so] (31 samples, 0.03%)</title><rect x="5.2983%" y="1173" width="0.0304%" height="15" fill="rgb(250,229,37)" fg:x="5401" fg:w="31"/><text x="5.5483%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (80 samples, 0.08%)</title><rect x="5.3327%" y="1157" width="0.0785%" height="15" fill="rgb(206,174,23)" fg:x="5436" fg:w="80"/><text x="5.5827%" y="1167.50"></text></g><g><title>[tremor-connectors] (94 samples, 0.09%)</title><rect x="5.3287%" y="1173" width="0.0922%" height="15" fill="rgb(211,33,43)" fg:x="5432" fg:w="94"/><text x="5.5787%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="5.4209%" y="1157" width="0.0235%" height="15" fill="rgb(245,58,50)" fg:x="5526" fg:w="24"/><text x="5.6709%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="5.5632%" y="1013" width="0.0167%" height="15" fill="rgb(244,68,36)" fg:x="5671" fg:w="17"/><text x="5.8132%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.02%)</title><rect x="5.5632%" y="997" width="0.0167%" height="15" fill="rgb(232,229,15)" fg:x="5671" fg:w="17"/><text x="5.8132%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.02%)</title><rect x="5.5632%" y="981" width="0.0167%" height="15" fill="rgb(254,30,23)" fg:x="5671" fg:w="17"/><text x="5.8132%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="5.5632%" y="965" width="0.0167%" height="15" fill="rgb(235,160,14)" fg:x="5671" fg:w="17"/><text x="5.8132%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="5.5632%" y="949" width="0.0167%" height="15" fill="rgb(212,155,44)" fg:x="5671" fg:w="17"/><text x="5.8132%" y="959.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.02%)</title><rect x="5.5632%" y="933" width="0.0167%" height="15" fill="rgb(226,2,50)" fg:x="5671" fg:w="17"/><text x="5.8132%" y="943.50"></text></g><g><title>__rg_alloc (17 samples, 0.02%)</title><rect x="5.5632%" y="917" width="0.0167%" height="15" fill="rgb(234,177,6)" fg:x="5671" fg:w="17"/><text x="5.8132%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17 samples, 0.02%)</title><rect x="5.5632%" y="901" width="0.0167%" height="15" fill="rgb(217,24,9)" fg:x="5671" fg:w="17"/><text x="5.8132%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="5.5632%" y="1093" width="0.0343%" height="15" fill="rgb(220,13,46)" fg:x="5671" fg:w="35"/><text x="5.8132%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="5.5632%" y="1077" width="0.0343%" height="15" fill="rgb(239,221,27)" fg:x="5671" fg:w="35"/><text x="5.8132%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.03%)</title><rect x="5.5632%" y="1061" width="0.0343%" height="15" fill="rgb(222,198,25)" fg:x="5671" fg:w="35"/><text x="5.8132%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.03%)</title><rect x="5.5632%" y="1045" width="0.0343%" height="15" fill="rgb(211,99,13)" fg:x="5671" fg:w="35"/><text x="5.8132%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.03%)</title><rect x="5.5632%" y="1029" width="0.0343%" height="15" fill="rgb(232,111,31)" fg:x="5671" fg:w="35"/><text x="5.8132%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (18 samples, 0.02%)</title><rect x="5.5799%" y="1013" width="0.0177%" height="15" fill="rgb(245,82,37)" fg:x="5688" fg:w="18"/><text x="5.8299%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="5.5799%" y="997" width="0.0177%" height="15" fill="rgb(227,149,46)" fg:x="5688" fg:w="18"/><text x="5.8299%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (180 samples, 0.18%)</title><rect x="5.4445%" y="1157" width="0.1766%" height="15" fill="rgb(218,36,50)" fg:x="5550" fg:w="180"/><text x="5.6945%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (59 samples, 0.06%)</title><rect x="5.5632%" y="1141" width="0.0579%" height="15" fill="rgb(226,80,48)" fg:x="5671" fg:w="59"/><text x="5.8132%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (59 samples, 0.06%)</title><rect x="5.5632%" y="1125" width="0.0579%" height="15" fill="rgb(238,224,15)" fg:x="5671" fg:w="59"/><text x="5.8132%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.06%)</title><rect x="5.5632%" y="1109" width="0.0579%" height="15" fill="rgb(241,136,10)" fg:x="5671" fg:w="59"/><text x="5.8132%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="5.5975%" y="1093" width="0.0235%" height="15" fill="rgb(208,32,45)" fg:x="5706" fg:w="24"/><text x="5.8475%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="5.5975%" y="1077" width="0.0235%" height="15" fill="rgb(207,135,9)" fg:x="5706" fg:w="24"/><text x="5.8475%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.02%)</title><rect x="5.5975%" y="1061" width="0.0235%" height="15" fill="rgb(206,86,44)" fg:x="5706" fg:w="24"/><text x="5.8475%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="5.5975%" y="1045" width="0.0235%" height="15" fill="rgb(245,177,15)" fg:x="5706" fg:w="24"/><text x="5.8475%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="5.5975%" y="1029" width="0.0235%" height="15" fill="rgb(206,64,50)" fg:x="5706" fg:w="24"/><text x="5.8475%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="5.5975%" y="1013" width="0.0235%" height="15" fill="rgb(234,36,40)" fg:x="5706" fg:w="24"/><text x="5.8475%" y="1023.50"></text></g><g><title>__rg_alloc (24 samples, 0.02%)</title><rect x="5.5975%" y="997" width="0.0235%" height="15" fill="rgb(213,64,8)" fg:x="5706" fg:w="24"/><text x="5.8475%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (24 samples, 0.02%)</title><rect x="5.5975%" y="981" width="0.0235%" height="15" fill="rgb(210,75,36)" fg:x="5706" fg:w="24"/><text x="5.8475%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="5.6211%" y="1157" width="0.0167%" height="15" fill="rgb(229,88,21)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (17 samples, 0.02%)</title><rect x="5.6211%" y="1141" width="0.0167%" height="15" fill="rgb(252,204,47)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="5.6211%" y="1125" width="0.0167%" height="15" fill="rgb(208,77,27)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (17 samples, 0.02%)</title><rect x="5.6211%" y="1109" width="0.0167%" height="15" fill="rgb(221,76,26)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="5.6211%" y="1093" width="0.0167%" height="15" fill="rgb(225,139,18)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="5.6211%" y="1077" width="0.0167%" height="15" fill="rgb(230,137,11)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="5.6211%" y="1061" width="0.0167%" height="15" fill="rgb(212,28,1)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1071.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="5.6211%" y="1045" width="0.0167%" height="15" fill="rgb(248,164,17)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="5.6211%" y="1029" width="0.0167%" height="15" fill="rgb(222,171,42)" fg:x="5730" fg:w="17"/><text x="5.8711%" y="1039.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (225 samples, 0.22%)</title><rect x="5.6377%" y="1157" width="0.2207%" height="15" fill="rgb(243,84,45)" fg:x="5747" fg:w="225"/><text x="5.8877%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (34 samples, 0.03%)</title><rect x="5.8251%" y="1141" width="0.0334%" height="15" fill="rgb(252,49,23)" fg:x="5938" fg:w="34"/><text x="6.0751%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="5.8585%" y="1157" width="0.0235%" height="15" fill="rgb(215,19,7)" fg:x="5972" fg:w="24"/><text x="6.1085%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (14 samples, 0.01%)</title><rect x="6.0831%" y="1141" width="0.0137%" height="15" fill="rgb(238,81,41)" fg:x="6201" fg:w="14"/><text x="6.3331%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="6.1106%" y="1029" width="0.0235%" height="15" fill="rgb(210,199,37)" fg:x="6229" fg:w="24"/><text x="6.3606%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="6.1106%" y="1013" width="0.0235%" height="15" fill="rgb(244,192,49)" fg:x="6229" fg:w="24"/><text x="6.3606%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.02%)</title><rect x="6.1106%" y="997" width="0.0235%" height="15" fill="rgb(226,211,11)" fg:x="6229" fg:w="24"/><text x="6.3606%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="6.1106%" y="981" width="0.0235%" height="15" fill="rgb(236,162,54)" fg:x="6229" fg:w="24"/><text x="6.3606%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="6.1106%" y="965" width="0.0235%" height="15" fill="rgb(220,229,9)" fg:x="6229" fg:w="24"/><text x="6.3606%" y="975.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="6.1106%" y="949" width="0.0235%" height="15" fill="rgb(250,87,22)" fg:x="6229" fg:w="24"/><text x="6.3606%" y="959.50"></text></g><g><title>__rg_alloc (24 samples, 0.02%)</title><rect x="6.1106%" y="933" width="0.0235%" height="15" fill="rgb(239,43,17)" fg:x="6229" fg:w="24"/><text x="6.3606%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (24 samples, 0.02%)</title><rect x="6.1106%" y="917" width="0.0235%" height="15" fill="rgb(231,177,25)" fg:x="6229" fg:w="24"/><text x="6.3606%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (58 samples, 0.06%)</title><rect x="6.0968%" y="1125" width="0.0569%" height="15" fill="rgb(219,179,1)" fg:x="6215" fg:w="58"/><text x="6.3468%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="6.1106%" y="1109" width="0.0432%" height="15" fill="rgb(238,219,53)" fg:x="6229" fg:w="44"/><text x="6.3606%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="6.1106%" y="1093" width="0.0432%" height="15" fill="rgb(232,167,36)" fg:x="6229" fg:w="44"/><text x="6.3606%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (44 samples, 0.04%)</title><rect x="6.1106%" y="1077" width="0.0432%" height="15" fill="rgb(244,19,51)" fg:x="6229" fg:w="44"/><text x="6.3606%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (44 samples, 0.04%)</title><rect x="6.1106%" y="1061" width="0.0432%" height="15" fill="rgb(224,6,22)" fg:x="6229" fg:w="44"/><text x="6.3606%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (44 samples, 0.04%)</title><rect x="6.1106%" y="1045" width="0.0432%" height="15" fill="rgb(224,145,5)" fg:x="6229" fg:w="44"/><text x="6.3606%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20 samples, 0.02%)</title><rect x="6.1341%" y="1029" width="0.0196%" height="15" fill="rgb(234,130,49)" fg:x="6253" fg:w="20"/><text x="6.3841%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="6.1341%" y="1013" width="0.0196%" height="15" fill="rgb(254,6,2)" fg:x="6253" fg:w="20"/><text x="6.3841%" y="1023.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (64 samples, 0.06%)</title><rect x="6.0968%" y="1141" width="0.0628%" height="15" fill="rgb(208,96,46)" fg:x="6215" fg:w="64"/><text x="6.3468%" y="1151.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (27 samples, 0.03%)</title><rect x="6.1596%" y="1141" width="0.0265%" height="15" fill="rgb(239,3,39)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="6.1596%" y="1125" width="0.0265%" height="15" fill="rgb(233,210,1)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="6.1596%" y="1109" width="0.0265%" height="15" fill="rgb(244,137,37)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (27 samples, 0.03%)</title><rect x="6.1596%" y="1093" width="0.0265%" height="15" fill="rgb(240,136,2)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (27 samples, 0.03%)</title><rect x="6.1596%" y="1077" width="0.0265%" height="15" fill="rgb(239,18,37)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (27 samples, 0.03%)</title><rect x="6.1596%" y="1061" width="0.0265%" height="15" fill="rgb(218,185,22)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="6.1596%" y="1045" width="0.0265%" height="15" fill="rgb(225,218,4)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="6.1596%" y="1029" width="0.0265%" height="15" fill="rgb(230,182,32)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (27 samples, 0.03%)</title><rect x="6.1596%" y="1013" width="0.0265%" height="15" fill="rgb(242,56,43)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="6.1596%" y="997" width="0.0265%" height="15" fill="rgb(233,99,24)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (27 samples, 0.03%)</title><rect x="6.1596%" y="981" width="0.0265%" height="15" fill="rgb(234,209,42)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.03%)</title><rect x="6.1596%" y="965" width="0.0265%" height="15" fill="rgb(227,7,12)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.03%)</title><rect x="6.1596%" y="949" width="0.0265%" height="15" fill="rgb(245,203,43)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (27 samples, 0.03%)</title><rect x="6.1596%" y="933" width="0.0265%" height="15" fill="rgb(238,205,33)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (27 samples, 0.03%)</title><rect x="6.1596%" y="917" width="0.0265%" height="15" fill="rgb(231,56,7)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="6.1596%" y="901" width="0.0265%" height="15" fill="rgb(244,186,29)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (27 samples, 0.03%)</title><rect x="6.1596%" y="885" width="0.0265%" height="15" fill="rgb(234,111,31)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.03%)</title><rect x="6.1596%" y="869" width="0.0265%" height="15" fill="rgb(241,149,10)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (27 samples, 0.03%)</title><rect x="6.1596%" y="853" width="0.0265%" height="15" fill="rgb(249,206,44)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (27 samples, 0.03%)</title><rect x="6.1596%" y="837" width="0.0265%" height="15" fill="rgb(251,153,30)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="6.1596%" y="821" width="0.0265%" height="15" fill="rgb(239,152,38)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (27 samples, 0.03%)</title><rect x="6.1596%" y="805" width="0.0265%" height="15" fill="rgb(249,139,47)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="6.1596%" y="789" width="0.0265%" height="15" fill="rgb(244,64,35)" fg:x="6279" fg:w="27"/><text x="6.4096%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (376 samples, 0.37%)</title><rect x="6.2126%" y="949" width="0.3689%" height="15" fill="rgb(216,46,15)" fg:x="6333" fg:w="376"/><text x="6.4626%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="6.7060%" y="933" width="0.0118%" height="15" fill="rgb(250,74,19)" fg:x="6836" fg:w="12"/><text x="6.9560%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,108 samples, 1.09%)</title><rect x="6.7178%" y="933" width="1.0869%" height="15" fill="rgb(249,42,33)" fg:x="6848" fg:w="1108"/><text x="6.9678%" y="943.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="7.8175%" y="885" width="0.0108%" height="15" fill="rgb(242,149,17)" fg:x="7969" fg:w="11"/><text x="8.0675%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (25 samples, 0.02%)</title><rect x="7.8047%" y="917" width="0.0245%" height="15" fill="rgb(244,29,21)" fg:x="7956" fg:w="25"/><text x="8.0547%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (12 samples, 0.01%)</title><rect x="7.8175%" y="901" width="0.0118%" height="15" fill="rgb(220,130,37)" fg:x="7969" fg:w="12"/><text x="8.0675%" y="911.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1141" width="1.6530%" height="15" fill="rgb(211,67,2)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1125" width="1.6530%" height="15" fill="rgb(235,68,52)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1109" width="1.6530%" height="15" fill="rgb(246,142,3)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1093" width="1.6530%" height="15" fill="rgb(241,25,7)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1077" width="1.6530%" height="15" fill="rgb(242,119,39)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1061" width="1.6530%" height="15" fill="rgb(241,98,45)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1045" width="1.6530%" height="15" fill="rgb(254,28,30)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1029" width="1.6530%" height="15" fill="rgb(241,142,54)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,685 samples, 1.65%)</title><rect x="6.1861%" y="1013" width="1.6530%" height="15" fill="rgb(222,85,15)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,685 samples, 1.65%)</title><rect x="6.1861%" y="997" width="1.6530%" height="15" fill="rgb(210,85,47)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,685 samples, 1.65%)</title><rect x="6.1861%" y="981" width="1.6530%" height="15" fill="rgb(224,206,25)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,685 samples, 1.65%)</title><rect x="6.1861%" y="965" width="1.6530%" height="15" fill="rgb(243,201,19)" fg:x="6306" fg:w="1685"/><text x="6.4361%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,282 samples, 1.26%)</title><rect x="6.5815%" y="949" width="1.2576%" height="15" fill="rgb(236,59,4)" fg:x="6709" fg:w="1282"/><text x="6.8315%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (35 samples, 0.03%)</title><rect x="7.8047%" y="933" width="0.0343%" height="15" fill="rgb(254,179,45)" fg:x="7956" fg:w="35"/><text x="8.0547%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,003 samples, 1.96%)</title><rect x="5.8820%" y="1157" width="1.9649%" height="15" fill="rgb(226,14,10)" fg:x="5996" fg:w="2003"/><text x="6.1320%" y="1167.50">&lt;..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="7.8469%" y="1157" width="0.0108%" height="15" fill="rgb(244,27,41)" fg:x="7999" fg:w="11"/><text x="8.0969%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (15 samples, 0.01%)</title><rect x="7.8597%" y="1157" width="0.0147%" height="15" fill="rgb(235,35,32)" fg:x="8012" fg:w="15"/><text x="8.1097%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (61 samples, 0.06%)</title><rect x="7.8744%" y="1157" width="0.0598%" height="15" fill="rgb(218,68,31)" fg:x="8027" fg:w="61"/><text x="8.1244%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="7.9342%" y="1157" width="0.0235%" height="15" fill="rgb(207,120,37)" fg:x="8088" fg:w="24"/><text x="8.1842%" y="1167.50"></text></g><g><title>[libc-2.33.so] (22 samples, 0.02%)</title><rect x="7.9578%" y="1157" width="0.0216%" height="15" fill="rgb(227,98,0)" fg:x="8112" fg:w="22"/><text x="8.2078%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (22 samples, 0.02%)</title><rect x="7.9578%" y="1141" width="0.0216%" height="15" fill="rgb(207,7,3)" fg:x="8112" fg:w="22"/><text x="8.2078%" y="1151.50"></text></g><g><title>__GI___pthread_mutex_lock (26 samples, 0.03%)</title><rect x="7.9794%" y="1157" width="0.0255%" height="15" fill="rgb(206,98,19)" fg:x="8134" fg:w="26"/><text x="8.2294%" y="1167.50"></text></g><g><title>__clock_gettime_2 (153 samples, 0.15%)</title><rect x="8.0049%" y="1157" width="0.1501%" height="15" fill="rgb(217,5,26)" fg:x="8160" fg:w="153"/><text x="8.2549%" y="1167.50"></text></g><g><title>__memmove_avx_unaligned_erms (143 samples, 0.14%)</title><rect x="8.1569%" y="1157" width="0.1403%" height="15" fill="rgb(235,190,38)" fg:x="8315" fg:w="143"/><text x="8.4069%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (31 samples, 0.03%)</title><rect x="8.3011%" y="1157" width="0.0304%" height="15" fill="rgb(247,86,24)" fg:x="8462" fg:w="31"/><text x="8.5511%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (40 samples, 0.04%)</title><rect x="8.3325%" y="1157" width="0.0392%" height="15" fill="rgb(205,101,16)" fg:x="8494" fg:w="40"/><text x="8.5825%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (132 samples, 0.13%)</title><rect x="8.3718%" y="1157" width="0.1295%" height="15" fill="rgb(246,168,33)" fg:x="8534" fg:w="132"/><text x="8.6218%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.01%)</title><rect x="8.5680%" y="725" width="0.0147%" height="15" fill="rgb(231,114,1)" fg:x="8734" fg:w="15"/><text x="8.8180%" y="735.50"></text></g><g><title>core::mem::drop (17 samples, 0.02%)</title><rect x="8.5984%" y="709" width="0.0167%" height="15" fill="rgb(207,184,53)" fg:x="8765" fg:w="17"/><text x="8.8484%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (17 samples, 0.02%)</title><rect x="8.5984%" y="693" width="0.0167%" height="15" fill="rgb(224,95,51)" fg:x="8765" fg:w="17"/><text x="8.8484%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.02%)</title><rect x="8.5993%" y="677" width="0.0157%" height="15" fill="rgb(212,188,45)" fg:x="8766" fg:w="16"/><text x="8.8493%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="8.5993%" y="661" width="0.0157%" height="15" fill="rgb(223,154,38)" fg:x="8766" fg:w="16"/><text x="8.8493%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.02%)</title><rect x="8.5993%" y="645" width="0.0157%" height="15" fill="rgb(251,22,52)" fg:x="8766" fg:w="16"/><text x="8.8493%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="8.6003%" y="629" width="0.0147%" height="15" fill="rgb(229,209,22)" fg:x="8767" fg:w="15"/><text x="8.8503%" y="639.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="8.6003%" y="613" width="0.0147%" height="15" fill="rgb(234,138,34)" fg:x="8767" fg:w="15"/><text x="8.8503%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="8.6150%" y="709" width="0.0128%" height="15" fill="rgb(212,95,11)" fg:x="8782" fg:w="13"/><text x="8.8650%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (12 samples, 0.01%)</title><rect x="8.6160%" y="693" width="0.0118%" height="15" fill="rgb(240,179,47)" fg:x="8783" fg:w="12"/><text x="8.8660%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="8.6160%" y="677" width="0.0118%" height="15" fill="rgb(240,163,11)" fg:x="8783" fg:w="12"/><text x="8.8660%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="8.6160%" y="661" width="0.0118%" height="15" fill="rgb(236,37,12)" fg:x="8783" fg:w="12"/><text x="8.8660%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.01%)</title><rect x="8.6160%" y="645" width="0.0118%" height="15" fill="rgb(232,164,16)" fg:x="8783" fg:w="12"/><text x="8.8660%" y="655.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="8.6160%" y="629" width="0.0118%" height="15" fill="rgb(244,205,15)" fg:x="8783" fg:w="12"/><text x="8.8660%" y="639.50"></text></g><g><title>event_listener::Inner::lock (78 samples, 0.08%)</title><rect x="8.6278%" y="709" width="0.0765%" height="15" fill="rgb(223,117,47)" fg:x="8795" fg:w="78"/><text x="8.8778%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (78 samples, 0.08%)</title><rect x="8.6278%" y="693" width="0.0765%" height="15" fill="rgb(244,107,35)" fg:x="8795" fg:w="78"/><text x="8.8778%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (73 samples, 0.07%)</title><rect x="8.6327%" y="677" width="0.0716%" height="15" fill="rgb(205,140,8)" fg:x="8800" fg:w="73"/><text x="8.8827%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (66 samples, 0.06%)</title><rect x="8.6396%" y="661" width="0.0647%" height="15" fill="rgb(228,84,46)" fg:x="8807" fg:w="66"/><text x="8.8896%" y="671.50"></text></g><g><title>__GI___pthread_mutex_lock (66 samples, 0.06%)</title><rect x="8.6396%" y="645" width="0.0647%" height="15" fill="rgb(254,188,9)" fg:x="8807" fg:w="66"/><text x="8.8896%" y="655.50"></text></g><g><title>__lll_lock_wait (13 samples, 0.01%)</title><rect x="8.6916%" y="629" width="0.0128%" height="15" fill="rgb(206,112,54)" fg:x="8860" fg:w="13"/><text x="8.9416%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (142 samples, 0.14%)</title><rect x="8.5827%" y="725" width="0.1393%" height="15" fill="rgb(216,84,49)" fg:x="8749" fg:w="142"/><text x="8.8327%" y="735.50"></text></g><g><title>event_listener::List::remove (18 samples, 0.02%)</title><rect x="8.7043%" y="709" width="0.0177%" height="15" fill="rgb(214,194,35)" fg:x="8873" fg:w="18"/><text x="8.9543%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="8.7073%" y="693" width="0.0147%" height="15" fill="rgb(249,28,3)" fg:x="8876" fg:w="15"/><text x="8.9573%" y="703.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="8.7073%" y="677" width="0.0147%" height="15" fill="rgb(222,56,52)" fg:x="8876" fg:w="15"/><text x="8.9573%" y="687.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="8.7073%" y="661" width="0.0147%" height="15" fill="rgb(245,217,50)" fg:x="8876" fg:w="15"/><text x="8.9573%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (816 samples, 0.80%)</title><rect x="8.7220%" y="725" width="0.8005%" height="15" fill="rgb(213,201,24)" fg:x="8891" fg:w="816"/><text x="8.9720%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (840 samples, 0.82%)</title><rect x="9.5813%" y="709" width="0.8240%" height="15" fill="rgb(248,116,28)" fg:x="9767" fg:w="840"/><text x="9.8313%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (334 samples, 0.33%)</title><rect x="10.6418%" y="677" width="0.3277%" height="15" fill="rgb(219,72,43)" fg:x="10848" fg:w="334"/><text x="10.8918%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (44 samples, 0.04%)</title><rect x="10.9694%" y="677" width="0.0432%" height="15" fill="rgb(209,138,14)" fg:x="11182" fg:w="44"/><text x="11.2194%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (41 samples, 0.04%)</title><rect x="10.9724%" y="661" width="0.0402%" height="15" fill="rgb(222,18,33)" fg:x="11185" fg:w="41"/><text x="11.2224%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (41 samples, 0.04%)</title><rect x="10.9724%" y="645" width="0.0402%" height="15" fill="rgb(213,199,7)" fg:x="11185" fg:w="41"/><text x="11.2224%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (41 samples, 0.04%)</title><rect x="10.9724%" y="629" width="0.0402%" height="15" fill="rgb(250,110,10)" fg:x="11185" fg:w="41"/><text x="11.2224%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (423 samples, 0.41%)</title><rect x="11.0165%" y="677" width="0.4150%" height="15" fill="rgb(248,123,6)" fg:x="11230" fg:w="423"/><text x="11.2665%" y="687.50"></text></g><g><title>core::ptr::read (423 samples, 0.41%)</title><rect x="11.0165%" y="661" width="0.4150%" height="15" fill="rgb(206,91,31)" fg:x="11230" fg:w="423"/><text x="11.2665%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (423 samples, 0.41%)</title><rect x="11.0165%" y="645" width="0.4150%" height="15" fill="rgb(211,154,13)" fg:x="11230" fg:w="423"/><text x="11.2665%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (907 samples, 0.89%)</title><rect x="11.4315%" y="677" width="0.8898%" height="15" fill="rgb(225,148,7)" fg:x="11653" fg:w="907"/><text x="11.6815%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (907 samples, 0.89%)</title><rect x="11.4315%" y="661" width="0.8898%" height="15" fill="rgb(220,160,43)" fg:x="11653" fg:w="907"/><text x="11.6815%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,234 samples, 2.19%)</title><rect x="10.4053%" y="709" width="2.1915%" height="15" fill="rgb(213,52,39)" fg:x="10607" fg:w="2234"/><text x="10.6553%" y="719.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,171 samples, 2.13%)</title><rect x="10.4671%" y="693" width="2.1297%" height="15" fill="rgb(243,137,7)" fg:x="10670" fg:w="2171"/><text x="10.7171%" y="703.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::load (281 samples, 0.28%)</title><rect x="12.3212%" y="677" width="0.2757%" height="15" fill="rgb(230,79,13)" fg:x="12560" fg:w="281"/><text x="12.5712%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (272 samples, 0.27%)</title><rect x="12.3300%" y="661" width="0.2668%" height="15" fill="rgb(247,105,23)" fg:x="12569" fg:w="272"/><text x="12.5800%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="12.6028%" y="693" width="0.0177%" height="15" fill="rgb(223,179,41)" fg:x="12847" fg:w="18"/><text x="12.8528%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (16 samples, 0.02%)</title><rect x="12.6047%" y="677" width="0.0157%" height="15" fill="rgb(218,9,34)" fg:x="12849" fg:w="16"/><text x="12.8547%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="12.6047%" y="661" width="0.0157%" height="15" fill="rgb(222,106,8)" fg:x="12849" fg:w="16"/><text x="12.8547%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.02%)</title><rect x="12.6047%" y="645" width="0.0157%" height="15" fill="rgb(211,220,0)" fg:x="12849" fg:w="16"/><text x="12.8547%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.02%)</title><rect x="12.6047%" y="629" width="0.0157%" height="15" fill="rgb(229,52,16)" fg:x="12849" fg:w="16"/><text x="12.8547%" y="639.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (16 samples, 0.02%)</title><rect x="12.6047%" y="613" width="0.0157%" height="15" fill="rgb(212,155,18)" fg:x="12849" fg:w="16"/><text x="12.8547%" y="623.50"></text></g><g><title>event_listener::Inner::lock (11 samples, 0.01%)</title><rect x="12.6283%" y="693" width="0.0108%" height="15" fill="rgb(242,21,14)" fg:x="12873" fg:w="11"/><text x="12.8783%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="12.6283%" y="677" width="0.0108%" height="15" fill="rgb(222,19,48)" fg:x="12873" fg:w="11"/><text x="12.8783%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="12.6283%" y="661" width="0.0108%" height="15" fill="rgb(232,45,27)" fg:x="12873" fg:w="11"/><text x="12.8783%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="12.6283%" y="645" width="0.0108%" height="15" fill="rgb(249,103,42)" fg:x="12873" fg:w="11"/><text x="12.8783%" y="655.50"></text></g><g><title>__GI___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="12.6283%" y="629" width="0.0108%" height="15" fill="rgb(246,81,33)" fg:x="12873" fg:w="11"/><text x="12.8783%" y="639.50"></text></g><g><title>async_executor::State::notify (17 samples, 0.02%)</title><rect x="12.6430%" y="613" width="0.0167%" height="15" fill="rgb(252,33,42)" fg:x="12888" fg:w="17"/><text x="12.8930%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (21 samples, 0.02%)</title><rect x="12.6430%" y="629" width="0.0206%" height="15" fill="rgb(209,212,41)" fg:x="12888" fg:w="21"/><text x="12.8930%" y="639.50"></text></g><g><title>event_listener::List::notify (26 samples, 0.03%)</title><rect x="12.6391%" y="693" width="0.0255%" height="15" fill="rgb(207,154,6)" fg:x="12884" fg:w="26"/><text x="12.8891%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (23 samples, 0.02%)</title><rect x="12.6420%" y="677" width="0.0226%" height="15" fill="rgb(223,64,47)" fg:x="12887" fg:w="23"/><text x="12.8920%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (23 samples, 0.02%)</title><rect x="12.6420%" y="661" width="0.0226%" height="15" fill="rgb(211,161,38)" fg:x="12887" fg:w="23"/><text x="12.8920%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (22 samples, 0.02%)</title><rect x="12.6430%" y="645" width="0.0216%" height="15" fill="rgb(219,138,40)" fg:x="12888" fg:w="22"/><text x="12.8930%" y="655.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,603 samples, 3.53%)</title><rect x="9.5225%" y="725" width="3.5345%" height="15" fill="rgb(241,228,46)" fg:x="9707" fg:w="3603"/><text x="9.7725%" y="735.50">asy..</text></g><g><title>event_listener::Event::notify (469 samples, 0.46%)</title><rect x="12.5969%" y="709" width="0.4601%" height="15" fill="rgb(223,209,38)" fg:x="12841" fg:w="469"/><text x="12.8469%" y="719.50"></text></g><g><title>event_listener::full_fence (400 samples, 0.39%)</title><rect x="12.6646%" y="693" width="0.3924%" height="15" fill="rgb(236,164,45)" fg:x="12910" fg:w="400"/><text x="12.9146%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (396 samples, 0.39%)</title><rect x="12.6685%" y="677" width="0.3885%" height="15" fill="rgb(231,15,5)" fg:x="12914" fg:w="396"/><text x="12.9185%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (396 samples, 0.39%)</title><rect x="12.6685%" y="661" width="0.3885%" height="15" fill="rgb(252,35,15)" fg:x="12914" fg:w="396"/><text x="12.9185%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (396 samples, 0.39%)</title><rect x="12.6685%" y="645" width="0.3885%" height="15" fill="rgb(248,181,18)" fg:x="12914" fg:w="396"/><text x="12.9185%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (20 samples, 0.02%)</title><rect x="13.0570%" y="725" width="0.0196%" height="15" fill="rgb(233,39,42)" fg:x="13310" fg:w="20"/><text x="13.3070%" y="735.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="13.0972%" y="677" width="0.0137%" height="15" fill="rgb(238,110,33)" fg:x="13351" fg:w="14"/><text x="13.3472%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="13.0972%" y="661" width="0.0137%" height="15" fill="rgb(233,195,10)" fg:x="13351" fg:w="14"/><text x="13.3472%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="13.0972%" y="645" width="0.0137%" height="15" fill="rgb(254,105,3)" fg:x="13351" fg:w="14"/><text x="13.3472%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="13.0991%" y="629" width="0.0118%" height="15" fill="rgb(221,225,9)" fg:x="13353" fg:w="12"/><text x="13.3491%" y="639.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="13.0991%" y="613" width="0.0118%" height="15" fill="rgb(224,227,45)" fg:x="13353" fg:w="12"/><text x="13.3491%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="13.0874%" y="693" width="0.0265%" height="15" fill="rgb(229,198,43)" fg:x="13341" fg:w="27"/><text x="13.3374%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (44 samples, 0.04%)</title><rect x="13.0766%" y="725" width="0.0432%" height="15" fill="rgb(206,209,35)" fg:x="13330" fg:w="44"/><text x="13.3266%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (33 samples, 0.03%)</title><rect x="13.0874%" y="709" width="0.0324%" height="15" fill="rgb(245,195,53)" fg:x="13341" fg:w="33"/><text x="13.3374%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="13.1217%" y="709" width="0.0284%" height="15" fill="rgb(240,92,26)" fg:x="13376" fg:w="29"/><text x="13.3717%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (29 samples, 0.03%)</title><rect x="13.1217%" y="693" width="0.0284%" height="15" fill="rgb(207,40,23)" fg:x="13376" fg:w="29"/><text x="13.3717%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (29 samples, 0.03%)</title><rect x="13.1217%" y="677" width="0.0284%" height="15" fill="rgb(223,111,35)" fg:x="13376" fg:w="29"/><text x="13.3717%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (14 samples, 0.01%)</title><rect x="13.1502%" y="709" width="0.0137%" height="15" fill="rgb(229,147,28)" fg:x="13405" fg:w="14"/><text x="13.4002%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="13.1511%" y="693" width="0.0128%" height="15" fill="rgb(211,29,28)" fg:x="13406" fg:w="13"/><text x="13.4011%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="13.1511%" y="677" width="0.0128%" height="15" fill="rgb(228,72,33)" fg:x="13406" fg:w="13"/><text x="13.4011%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="13.1511%" y="661" width="0.0128%" height="15" fill="rgb(205,214,31)" fg:x="13406" fg:w="13"/><text x="13.4011%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="13.1511%" y="645" width="0.0128%" height="15" fill="rgb(224,111,15)" fg:x="13406" fg:w="13"/><text x="13.4011%" y="655.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="13.1521%" y="629" width="0.0118%" height="15" fill="rgb(253,21,26)" fg:x="13407" fg:w="12"/><text x="13.4021%" y="639.50"></text></g><g><title>event_listener::Inner::lock (29 samples, 0.03%)</title><rect x="13.1649%" y="709" width="0.0284%" height="15" fill="rgb(245,139,43)" fg:x="13420" fg:w="29"/><text x="13.4149%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="13.1649%" y="693" width="0.0284%" height="15" fill="rgb(252,170,7)" fg:x="13420" fg:w="29"/><text x="13.4149%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.03%)</title><rect x="13.1658%" y="677" width="0.0275%" height="15" fill="rgb(231,118,14)" fg:x="13421" fg:w="28"/><text x="13.4158%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (28 samples, 0.03%)</title><rect x="13.1658%" y="661" width="0.0275%" height="15" fill="rgb(238,83,0)" fg:x="13421" fg:w="28"/><text x="13.4158%" y="671.50"></text></g><g><title>__GI___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="13.1668%" y="645" width="0.0265%" height="15" fill="rgb(221,39,39)" fg:x="13422" fg:w="27"/><text x="13.4168%" y="655.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,786 samples, 4.70%)</title><rect x="8.5052%" y="805" width="4.6950%" height="15" fill="rgb(222,119,46)" fg:x="8670" fg:w="4786"/><text x="8.7552%" y="815.50">&lt;asyn..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,786 samples, 4.70%)</title><rect x="8.5052%" y="789" width="4.6950%" height="15" fill="rgb(222,165,49)" fg:x="8670" fg:w="4786"/><text x="8.7552%" y="799.50">&lt;trem..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,786 samples, 4.70%)</title><rect x="8.5052%" y="773" width="4.6950%" height="15" fill="rgb(219,113,52)" fg:x="8670" fg:w="4786"/><text x="8.7552%" y="783.50">&lt;asyn..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,786 samples, 4.70%)</title><rect x="8.5052%" y="757" width="4.6950%" height="15" fill="rgb(214,7,15)" fg:x="8670" fg:w="4786"/><text x="8.7552%" y="767.50">&lt;asyn..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,786 samples, 4.70%)</title><rect x="8.5052%" y="741" width="4.6950%" height="15" fill="rgb(235,32,4)" fg:x="8670" fg:w="4786"/><text x="8.7552%" y="751.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (82 samples, 0.08%)</title><rect x="13.1197%" y="725" width="0.0804%" height="15" fill="rgb(238,90,54)" fg:x="13374" fg:w="82"/><text x="13.3697%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::ValueAccess&gt;::as_str (11 samples, 0.01%)</title><rect x="13.2365%" y="709" width="0.0108%" height="15" fill="rgb(213,208,19)" fg:x="13493" fg:w="11"/><text x="13.4865%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,211 samples, 1.19%)</title><rect x="13.2473%" y="709" width="1.1880%" height="15" fill="rgb(233,156,4)" fg:x="13504" fg:w="1211"/><text x="13.4973%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.01%)</title><rect x="14.4352%" y="709" width="0.0118%" height="15" fill="rgb(207,194,5)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.01%)</title><rect x="14.4352%" y="693" width="0.0118%" height="15" fill="rgb(206,111,30)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.01%)</title><rect x="14.4352%" y="677" width="0.0118%" height="15" fill="rgb(243,70,54)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.01%)</title><rect x="14.4352%" y="661" width="0.0118%" height="15" fill="rgb(242,28,8)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="14.4352%" y="645" width="0.0118%" height="15" fill="rgb(219,106,18)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="14.4352%" y="629" width="0.0118%" height="15" fill="rgb(244,222,10)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="14.4352%" y="613" width="0.0118%" height="15" fill="rgb(236,179,52)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="14.4352%" y="597" width="0.0118%" height="15" fill="rgb(213,23,39)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="14.4352%" y="581" width="0.0118%" height="15" fill="rgb(238,48,10)" fg:x="14715" fg:w="12"/><text x="14.6852%" y="591.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="14.4470%" y="693" width="0.0128%" height="15" fill="rgb(251,196,23)" fg:x="14727" fg:w="13"/><text x="14.6970%" y="703.50"></text></g><g><title>size_to_sizeclass (37 samples, 0.04%)</title><rect x="14.4617%" y="661" width="0.0363%" height="15" fill="rgb(250,152,24)" fg:x="14742" fg:w="37"/><text x="14.7117%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (16 samples, 0.02%)</title><rect x="14.5078%" y="645" width="0.0157%" height="15" fill="rgb(209,150,17)" fg:x="14789" fg:w="16"/><text x="14.7578%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (16 samples, 0.02%)</title><rect x="14.5078%" y="629" width="0.0157%" height="15" fill="rgb(234,202,34)" fg:x="14789" fg:w="16"/><text x="14.7578%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (16 samples, 0.02%)</title><rect x="14.5078%" y="613" width="0.0157%" height="15" fill="rgb(253,148,53)" fg:x="14789" fg:w="16"/><text x="14.7578%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (16 samples, 0.02%)</title><rect x="14.5078%" y="597" width="0.0157%" height="15" fill="rgb(218,129,16)" fg:x="14789" fg:w="16"/><text x="14.7578%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (16 samples, 0.02%)</title><rect x="14.5078%" y="581" width="0.0157%" height="15" fill="rgb(216,85,19)" fg:x="14789" fg:w="16"/><text x="14.7578%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (16 samples, 0.02%)</title><rect x="14.5441%" y="533" width="0.0157%" height="15" fill="rgb(235,228,7)" fg:x="14826" fg:w="16"/><text x="14.7941%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="14.5441%" y="517" width="0.0157%" height="15" fill="rgb(245,175,0)" fg:x="14826" fg:w="16"/><text x="14.7941%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (28 samples, 0.03%)</title><rect x="14.5353%" y="581" width="0.0275%" height="15" fill="rgb(208,168,36)" fg:x="14817" fg:w="28"/><text x="14.7853%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (28 samples, 0.03%)</title><rect x="14.5353%" y="565" width="0.0275%" height="15" fill="rgb(246,171,24)" fg:x="14817" fg:w="28"/><text x="14.7853%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="14.5392%" y="549" width="0.0235%" height="15" fill="rgb(215,142,24)" fg:x="14821" fg:w="24"/><text x="14.7892%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (31 samples, 0.03%)</title><rect x="14.5353%" y="597" width="0.0304%" height="15" fill="rgb(250,187,7)" fg:x="14817" fg:w="31"/><text x="14.7853%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (59 samples, 0.06%)</title><rect x="14.5235%" y="613" width="0.0579%" height="15" fill="rgb(228,66,33)" fg:x="14805" fg:w="59"/><text x="14.7735%" y="623.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="14.5667%" y="597" width="0.0147%" height="15" fill="rgb(234,215,21)" fg:x="14849" fg:w="15"/><text x="14.8167%" y="607.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="14.5667%" y="581" width="0.0147%" height="15" fill="rgb(222,191,20)" fg:x="14849" fg:w="15"/><text x="14.8167%" y="591.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="14.5667%" y="565" width="0.0147%" height="15" fill="rgb(245,79,54)" fg:x="14849" fg:w="15"/><text x="14.8167%" y="575.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="14.5667%" y="549" width="0.0147%" height="15" fill="rgb(240,10,37)" fg:x="14849" fg:w="15"/><text x="14.8167%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (44 samples, 0.04%)</title><rect x="14.5991%" y="597" width="0.0432%" height="15" fill="rgb(214,192,32)" fg:x="14882" fg:w="44"/><text x="14.8491%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (451 samples, 0.44%)</title><rect x="14.5235%" y="645" width="0.4424%" height="15" fill="rgb(209,36,54)" fg:x="14805" fg:w="451"/><text x="14.7735%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (451 samples, 0.44%)</title><rect x="14.5235%" y="629" width="0.4424%" height="15" fill="rgb(220,10,11)" fg:x="14805" fg:w="451"/><text x="14.7735%" y="639.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (392 samples, 0.38%)</title><rect x="14.5814%" y="613" width="0.3845%" height="15" fill="rgb(221,106,17)" fg:x="14864" fg:w="392"/><text x="14.8314%" y="623.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (330 samples, 0.32%)</title><rect x="14.6422%" y="597" width="0.3237%" height="15" fill="rgb(251,142,44)" fg:x="14926" fg:w="330"/><text x="14.8922%" y="607.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (330 samples, 0.32%)</title><rect x="14.6422%" y="581" width="0.3237%" height="15" fill="rgb(238,13,15)" fg:x="14926" fg:w="330"/><text x="14.8922%" y="591.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (330 samples, 0.32%)</title><rect x="14.6422%" y="565" width="0.3237%" height="15" fill="rgb(208,107,27)" fg:x="14926" fg:w="330"/><text x="14.8922%" y="575.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (31 samples, 0.03%)</title><rect x="14.9699%" y="613" width="0.0304%" height="15" fill="rgb(205,136,37)" fg:x="15260" fg:w="31"/><text x="15.2199%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (31 samples, 0.03%)</title><rect x="14.9699%" y="597" width="0.0304%" height="15" fill="rgb(250,205,27)" fg:x="15260" fg:w="31"/><text x="15.2199%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (31 samples, 0.03%)</title><rect x="14.9699%" y="581" width="0.0304%" height="15" fill="rgb(210,80,43)" fg:x="15260" fg:w="31"/><text x="15.2199%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (34 samples, 0.03%)</title><rect x="15.0003%" y="613" width="0.0334%" height="15" fill="rgb(247,160,36)" fg:x="15291" fg:w="34"/><text x="15.2503%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (34 samples, 0.03%)</title><rect x="15.0003%" y="597" width="0.0334%" height="15" fill="rgb(234,13,49)" fg:x="15291" fg:w="34"/><text x="15.2503%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (75 samples, 0.07%)</title><rect x="14.9660%" y="645" width="0.0736%" height="15" fill="rgb(234,122,0)" fg:x="15256" fg:w="75"/><text x="15.2160%" y="655.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (73 samples, 0.07%)</title><rect x="14.9679%" y="629" width="0.0716%" height="15" fill="rgb(207,146,38)" fg:x="15258" fg:w="73"/><text x="15.2179%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="15.0395%" y="645" width="0.0304%" height="15" fill="rgb(207,177,25)" fg:x="15331" fg:w="31"/><text x="15.2895%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="15.0425%" y="629" width="0.0275%" height="15" fill="rgb(211,178,42)" fg:x="15334" fg:w="28"/><text x="15.2925%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="15.0454%" y="613" width="0.0245%" height="15" fill="rgb(230,69,54)" fg:x="15337" fg:w="25"/><text x="15.2954%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="15.0562%" y="597" width="0.0137%" height="15" fill="rgb(214,135,41)" fg:x="15348" fg:w="14"/><text x="15.3062%" y="607.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="15.0572%" y="581" width="0.0128%" height="15" fill="rgb(237,67,25)" fg:x="15349" fg:w="13"/><text x="15.3072%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::empty (42 samples, 0.04%)</title><rect x="15.0699%" y="645" width="0.0412%" height="15" fill="rgb(222,189,50)" fg:x="15362" fg:w="42"/><text x="15.3199%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (42 samples, 0.04%)</title><rect x="15.0699%" y="629" width="0.0412%" height="15" fill="rgb(245,148,34)" fg:x="15362" fg:w="42"/><text x="15.3199%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (999 samples, 0.98%)</title><rect x="14.4617%" y="693" width="0.9800%" height="15" fill="rgb(222,29,6)" fg:x="14742" fg:w="999"/><text x="14.7117%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (999 samples, 0.98%)</title><rect x="14.4617%" y="677" width="0.9800%" height="15" fill="rgb(221,189,43)" fg:x="14742" fg:w="999"/><text x="14.7117%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (962 samples, 0.94%)</title><rect x="14.4980%" y="661" width="0.9437%" height="15" fill="rgb(207,36,27)" fg:x="14779" fg:w="962"/><text x="14.7480%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (337 samples, 0.33%)</title><rect x="15.1111%" y="645" width="0.3306%" height="15" fill="rgb(217,90,24)" fg:x="15404" fg:w="337"/><text x="15.3611%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (337 samples, 0.33%)</title><rect x="15.1111%" y="629" width="0.3306%" height="15" fill="rgb(224,66,35)" fg:x="15404" fg:w="337"/><text x="15.3611%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,297 samples, 2.25%)</title><rect x="13.2002%" y="725" width="2.2533%" height="15" fill="rgb(221,13,50)" fg:x="13456" fg:w="2297"/><text x="13.4502%" y="735.50">&lt;..</text></g><g><title>rust_alloc (1,026 samples, 1.01%)</title><rect x="14.4470%" y="709" width="1.0065%" height="15" fill="rgb(236,68,49)" fg:x="14727" fg:w="1026"/><text x="14.6970%" y="719.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="15.4417%" y="693" width="0.0118%" height="15" fill="rgb(229,146,28)" fg:x="15741" fg:w="12"/><text x="15.6917%" y="703.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="15.7037%" y="597" width="0.0128%" height="15" fill="rgb(225,31,38)" fg:x="16008" fg:w="13"/><text x="15.9537%" y="607.50"></text></g><g><title>size_to_sizeclass (17 samples, 0.02%)</title><rect x="15.7203%" y="565" width="0.0167%" height="15" fill="rgb(250,208,3)" fg:x="16025" fg:w="17"/><text x="15.9703%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="15.7498%" y="549" width="0.0196%" height="15" fill="rgb(246,54,23)" fg:x="16055" fg:w="20"/><text x="15.9998%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (20 samples, 0.02%)</title><rect x="15.7498%" y="533" width="0.0196%" height="15" fill="rgb(243,76,11)" fg:x="16055" fg:w="20"/><text x="15.9998%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (18 samples, 0.02%)</title><rect x="15.7517%" y="517" width="0.0177%" height="15" fill="rgb(245,21,50)" fg:x="16057" fg:w="18"/><text x="16.0017%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (16 samples, 0.02%)</title><rect x="15.7537%" y="501" width="0.0157%" height="15" fill="rgb(228,9,43)" fg:x="16059" fg:w="16"/><text x="16.0037%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (16 samples, 0.02%)</title><rect x="15.7537%" y="485" width="0.0157%" height="15" fill="rgb(208,100,47)" fg:x="16059" fg:w="16"/><text x="16.0037%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (16 samples, 0.02%)</title><rect x="15.7537%" y="469" width="0.0157%" height="15" fill="rgb(232,26,8)" fg:x="16059" fg:w="16"/><text x="16.0037%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (30 samples, 0.03%)</title><rect x="15.7753%" y="549" width="0.0294%" height="15" fill="rgb(216,166,38)" fg:x="16081" fg:w="30"/><text x="16.0253%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (30 samples, 0.03%)</title><rect x="15.7753%" y="533" width="0.0294%" height="15" fill="rgb(251,202,51)" fg:x="16081" fg:w="30"/><text x="16.0253%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (585 samples, 0.57%)</title><rect x="15.7164%" y="597" width="0.5739%" height="15" fill="rgb(254,216,34)" fg:x="16021" fg:w="585"/><text x="15.9664%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (585 samples, 0.57%)</title><rect x="15.7164%" y="581" width="0.5739%" height="15" fill="rgb(251,32,27)" fg:x="16021" fg:w="585"/><text x="15.9664%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (564 samples, 0.55%)</title><rect x="15.7370%" y="565" width="0.5533%" height="15" fill="rgb(208,127,28)" fg:x="16042" fg:w="564"/><text x="15.9870%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (495 samples, 0.49%)</title><rect x="15.8047%" y="549" width="0.4856%" height="15" fill="rgb(224,137,22)" fg:x="16111" fg:w="495"/><text x="16.0547%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (495 samples, 0.49%)</title><rect x="15.8047%" y="533" width="0.4856%" height="15" fill="rgb(254,70,32)" fg:x="16111" fg:w="495"/><text x="16.0547%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (607 samples, 0.60%)</title><rect x="15.7027%" y="709" width="0.5955%" height="15" fill="rgb(229,75,37)" fg:x="16007" fg:w="607"/><text x="15.9527%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (607 samples, 0.60%)</title><rect x="15.7027%" y="693" width="0.5955%" height="15" fill="rgb(252,64,23)" fg:x="16007" fg:w="607"/><text x="15.9527%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (607 samples, 0.60%)</title><rect x="15.7027%" y="677" width="0.5955%" height="15" fill="rgb(232,162,48)" fg:x="16007" fg:w="607"/><text x="15.9527%" y="687.50"></text></g><g><title>alloc::alloc::alloc (607 samples, 0.60%)</title><rect x="15.7027%" y="661" width="0.5955%" height="15" fill="rgb(246,160,12)" fg:x="16007" fg:w="607"/><text x="15.9527%" y="671.50"></text></g><g><title>__rg_alloc (607 samples, 0.60%)</title><rect x="15.7027%" y="645" width="0.5955%" height="15" fill="rgb(247,166,0)" fg:x="16007" fg:w="607"/><text x="15.9527%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (607 samples, 0.60%)</title><rect x="15.7027%" y="629" width="0.5955%" height="15" fill="rgb(249,219,21)" fg:x="16007" fg:w="607"/><text x="15.9527%" y="639.50"></text></g><g><title>rust_alloc (606 samples, 0.59%)</title><rect x="15.7037%" y="613" width="0.5945%" height="15" fill="rgb(205,209,3)" fg:x="16008" fg:w="606"/><text x="15.9537%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (14 samples, 0.01%)</title><rect x="16.2981%" y="709" width="0.0137%" height="15" fill="rgb(243,44,1)" fg:x="16614" fg:w="14"/><text x="16.5481%" y="719.50"></text></g><g><title>alloc::slice::hack::into_vec (14 samples, 0.01%)</title><rect x="16.2981%" y="693" width="0.0137%" height="15" fill="rgb(206,159,16)" fg:x="16614" fg:w="14"/><text x="16.5481%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (14 samples, 0.01%)</title><rect x="16.2981%" y="677" width="0.0137%" height="15" fill="rgb(244,77,30)" fg:x="16614" fg:w="14"/><text x="16.5481%" y="687.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (12 samples, 0.01%)</title><rect x="16.3276%" y="709" width="0.0118%" height="15" fill="rgb(218,69,12)" fg:x="16644" fg:w="12"/><text x="16.5776%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (12 samples, 0.01%)</title><rect x="16.3276%" y="693" width="0.0118%" height="15" fill="rgb(212,87,7)" fg:x="16644" fg:w="12"/><text x="16.5776%" y="703.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="16.3276%" y="677" width="0.0118%" height="15" fill="rgb(245,114,25)" fg:x="16644" fg:w="12"/><text x="16.5776%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="16.3276%" y="661" width="0.0118%" height="15" fill="rgb(210,61,42)" fg:x="16644" fg:w="12"/><text x="16.5776%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.01%)</title><rect x="16.3276%" y="645" width="0.0118%" height="15" fill="rgb(211,52,33)" fg:x="16644" fg:w="12"/><text x="16.5776%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (80 samples, 0.08%)</title><rect x="16.4355%" y="645" width="0.0785%" height="15" fill="rgb(234,58,33)" fg:x="16754" fg:w="80"/><text x="16.6855%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (80 samples, 0.08%)</title><rect x="16.4355%" y="629" width="0.0785%" height="15" fill="rgb(220,115,36)" fg:x="16754" fg:w="80"/><text x="16.6855%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (80 samples, 0.08%)</title><rect x="16.4355%" y="613" width="0.0785%" height="15" fill="rgb(243,153,54)" fg:x="16754" fg:w="80"/><text x="16.6855%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (80 samples, 0.08%)</title><rect x="16.4355%" y="597" width="0.0785%" height="15" fill="rgb(251,47,18)" fg:x="16754" fg:w="80"/><text x="16.6855%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (80 samples, 0.08%)</title><rect x="16.4355%" y="581" width="0.0785%" height="15" fill="rgb(242,102,42)" fg:x="16754" fg:w="80"/><text x="16.6855%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (40 samples, 0.04%)</title><rect x="16.4747%" y="565" width="0.0392%" height="15" fill="rgb(234,31,38)" fg:x="16794" fg:w="40"/><text x="16.7247%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (164 samples, 0.16%)</title><rect x="16.3796%" y="677" width="0.1609%" height="15" fill="rgb(221,117,51)" fg:x="16697" fg:w="164"/><text x="16.6296%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (164 samples, 0.16%)</title><rect x="16.3796%" y="661" width="0.1609%" height="15" fill="rgb(212,20,18)" fg:x="16697" fg:w="164"/><text x="16.6296%" y="671.50"></text></g><g><title>core::time::Duration::new (27 samples, 0.03%)</title><rect x="16.5140%" y="645" width="0.0265%" height="15" fill="rgb(245,133,36)" fg:x="16834" fg:w="27"/><text x="16.7640%" y="655.50"></text></g><g><title>std::time::SystemTime::duration_since (179 samples, 0.18%)</title><rect x="16.3796%" y="693" width="0.1756%" height="15" fill="rgb(212,6,19)" fg:x="16697" fg:w="179"/><text x="16.6296%" y="703.50"></text></g><g><title>tremor_common::time::nanotime (15 samples, 0.01%)</title><rect x="16.5404%" y="677" width="0.0147%" height="15" fill="rgb(218,1,36)" fg:x="16861" fg:w="15"/><text x="16.7904%" y="687.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,982 samples, 8.81%)</title><rect x="8.5052%" y="821" width="8.8112%" height="15" fill="rgb(246,84,54)" fg:x="8670" fg:w="8982"/><text x="8.7552%" y="831.50">tremor_runti..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,196 samples, 4.12%)</title><rect x="13.2002%" y="805" width="4.1162%" height="15" fill="rgb(242,110,6)" fg:x="13456" fg:w="4196"/><text x="13.4502%" y="815.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,196 samples, 4.12%)</title><rect x="13.2002%" y="789" width="4.1162%" height="15" fill="rgb(214,47,5)" fg:x="13456" fg:w="4196"/><text x="13.4502%" y="799.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,196 samples, 4.12%)</title><rect x="13.2002%" y="773" width="4.1162%" height="15" fill="rgb(218,159,25)" fg:x="13456" fg:w="4196"/><text x="13.4502%" y="783.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (4,196 samples, 4.12%)</title><rect x="13.2002%" y="757" width="4.1162%" height="15" fill="rgb(215,211,28)" fg:x="13456" fg:w="4196"/><text x="13.4502%" y="767.50">trem..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (4,196 samples, 4.12%)</title><rect x="13.2002%" y="741" width="4.1162%" height="15" fill="rgb(238,59,32)" fg:x="13456" fg:w="4196"/><text x="13.4502%" y="751.50">trem..</text></g><g><title>tremor_runtime::postprocessor::postprocess (1,899 samples, 1.86%)</title><rect x="15.4535%" y="725" width="1.8629%" height="15" fill="rgb(226,82,3)" fg:x="15753" fg:w="1899"/><text x="15.7035%" y="735.50">t..</text></g><g><title>tremor_common::time::nanotime (996 samples, 0.98%)</title><rect x="16.3393%" y="709" width="0.9771%" height="15" fill="rgb(240,164,32)" fg:x="16656" fg:w="996"/><text x="16.5893%" y="719.50"></text></g><g><title>std::time::SystemTime::now (776 samples, 0.76%)</title><rect x="16.5552%" y="693" width="0.7612%" height="15" fill="rgb(232,46,7)" fg:x="16876" fg:w="776"/><text x="16.8052%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (776 samples, 0.76%)</title><rect x="16.5552%" y="677" width="0.7612%" height="15" fill="rgb(229,129,53)" fg:x="16876" fg:w="776"/><text x="16.8052%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::now (776 samples, 0.76%)</title><rect x="16.5552%" y="661" width="0.7612%" height="15" fill="rgb(234,188,29)" fg:x="16876" fg:w="776"/><text x="16.8052%" y="671.50"></text></g><g><title>__clock_gettime_2 (635 samples, 0.62%)</title><rect x="16.6935%" y="645" width="0.6229%" height="15" fill="rgb(246,141,4)" fg:x="17017" fg:w="635"/><text x="16.9435%" y="655.50"></text></g><g><title>__vdso_clock_gettime (589 samples, 0.58%)</title><rect x="16.7386%" y="629" width="0.5778%" height="15" fill="rgb(229,23,39)" fg:x="17063" fg:w="589"/><text x="16.9886%" y="639.50"></text></g><g><title>[[vdso]] (390 samples, 0.38%)</title><rect x="16.9338%" y="613" width="0.3826%" height="15" fill="rgb(206,12,3)" fg:x="17262" fg:w="390"/><text x="17.1838%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.02%)</title><rect x="17.6293%" y="741" width="0.0157%" height="15" fill="rgb(252,226,20)" fg:x="17971" fg:w="16"/><text x="17.8793%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (15 samples, 0.01%)</title><rect x="17.6303%" y="725" width="0.0147%" height="15" fill="rgb(216,123,35)" fg:x="17972" fg:w="15"/><text x="17.8803%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (15 samples, 0.01%)</title><rect x="17.6303%" y="709" width="0.0147%" height="15" fill="rgb(212,68,40)" fg:x="17972" fg:w="15"/><text x="17.8803%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (339 samples, 0.33%)</title><rect x="17.6490%" y="741" width="0.3326%" height="15" fill="rgb(254,125,32)" fg:x="17991" fg:w="339"/><text x="17.8990%" y="751.50"></text></g><g><title>core::ptr::read (320 samples, 0.31%)</title><rect x="17.6676%" y="725" width="0.3139%" height="15" fill="rgb(253,97,22)" fg:x="18010" fg:w="320"/><text x="17.9176%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (305 samples, 0.30%)</title><rect x="17.6823%" y="709" width="0.2992%" height="15" fill="rgb(241,101,14)" fg:x="18025" fg:w="305"/><text x="17.9323%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (174 samples, 0.17%)</title><rect x="18.0472%" y="725" width="0.1707%" height="15" fill="rgb(238,103,29)" fg:x="18397" fg:w="174"/><text x="18.2972%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (59 samples, 0.06%)</title><rect x="18.3994%" y="677" width="0.0579%" height="15" fill="rgb(233,195,47)" fg:x="18756" fg:w="59"/><text x="18.6494%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (456 samples, 0.45%)</title><rect x="18.5681%" y="661" width="0.4473%" height="15" fill="rgb(246,218,30)" fg:x="18928" fg:w="456"/><text x="18.8181%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (456 samples, 0.45%)</title><rect x="18.5681%" y="645" width="0.4473%" height="15" fill="rgb(219,145,47)" fg:x="18928" fg:w="456"/><text x="18.8181%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (475 samples, 0.47%)</title><rect x="19.0155%" y="661" width="0.4660%" height="15" fill="rgb(243,12,26)" fg:x="19384" fg:w="475"/><text x="19.2655%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (473 samples, 0.46%)</title><rect x="19.0174%" y="645" width="0.4640%" height="15" fill="rgb(214,87,16)" fg:x="19386" fg:w="473"/><text x="19.2674%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,060 samples, 1.04%)</title><rect x="18.4573%" y="677" width="1.0398%" height="15" fill="rgb(208,99,42)" fg:x="18815" fg:w="1060"/><text x="18.7073%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (16 samples, 0.02%)</title><rect x="19.4814%" y="661" width="0.0157%" height="15" fill="rgb(253,99,2)" fg:x="19859" fg:w="16"/><text x="19.7314%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_store (16 samples, 0.02%)</title><rect x="19.4814%" y="645" width="0.0157%" height="15" fill="rgb(220,168,23)" fg:x="19859" fg:w="16"/><text x="19.7314%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (49 samples, 0.05%)</title><rect x="19.5109%" y="661" width="0.0481%" height="15" fill="rgb(242,38,24)" fg:x="19889" fg:w="49"/><text x="19.7609%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (48 samples, 0.05%)</title><rect x="19.5119%" y="645" width="0.0471%" height="15" fill="rgb(225,182,9)" fg:x="19890" fg:w="48"/><text x="19.7619%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.05%)</title><rect x="19.5119%" y="629" width="0.0471%" height="15" fill="rgb(243,178,37)" fg:x="19890" fg:w="48"/><text x="19.7619%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (47 samples, 0.05%)</title><rect x="19.5128%" y="613" width="0.0461%" height="15" fill="rgb(232,139,19)" fg:x="19891" fg:w="47"/><text x="19.7628%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (47 samples, 0.05%)</title><rect x="19.5128%" y="597" width="0.0461%" height="15" fill="rgb(225,201,24)" fg:x="19891" fg:w="47"/><text x="19.7628%" y="607.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (47 samples, 0.05%)</title><rect x="19.5128%" y="581" width="0.0461%" height="15" fill="rgb(221,47,46)" fg:x="19891" fg:w="47"/><text x="19.7628%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="19.5589%" y="661" width="0.0216%" height="15" fill="rgb(249,23,13)" fg:x="19938" fg:w="22"/><text x="19.8089%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="19.5589%" y="645" width="0.0216%" height="15" fill="rgb(219,9,5)" fg:x="19938" fg:w="22"/><text x="19.8089%" y="655.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="19.5845%" y="629" width="0.0128%" height="15" fill="rgb(254,171,16)" fg:x="19964" fg:w="13"/><text x="19.8345%" y="639.50"></text></g><g><title>std::sync::poison::Flag::borrow (13 samples, 0.01%)</title><rect x="19.5845%" y="613" width="0.0128%" height="15" fill="rgb(230,171,20)" fg:x="19964" fg:w="13"/><text x="19.8345%" y="623.50"></text></g><g><title>std::sync::poison::Flag::get (13 samples, 0.01%)</title><rect x="19.5845%" y="597" width="0.0128%" height="15" fill="rgb(210,71,41)" fg:x="19964" fg:w="13"/><text x="19.8345%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (13 samples, 0.01%)</title><rect x="19.5845%" y="581" width="0.0128%" height="15" fill="rgb(206,173,20)" fg:x="19964" fg:w="13"/><text x="19.8345%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="19.5845%" y="565" width="0.0128%" height="15" fill="rgb(233,88,34)" fg:x="19964" fg:w="13"/><text x="19.8345%" y="575.50"></text></g><g><title>event_listener::Inner::lock (118 samples, 0.12%)</title><rect x="19.5845%" y="661" width="0.1158%" height="15" fill="rgb(223,209,46)" fg:x="19964" fg:w="118"/><text x="19.8345%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (118 samples, 0.12%)</title><rect x="19.5845%" y="645" width="0.1158%" height="15" fill="rgb(250,43,18)" fg:x="19964" fg:w="118"/><text x="19.8345%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (105 samples, 0.10%)</title><rect x="19.5972%" y="629" width="0.1030%" height="15" fill="rgb(208,13,10)" fg:x="19977" fg:w="105"/><text x="19.8472%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (98 samples, 0.10%)</title><rect x="19.6041%" y="613" width="0.0961%" height="15" fill="rgb(212,200,36)" fg:x="19984" fg:w="98"/><text x="19.8541%" y="623.50"></text></g><g><title>__GI___pthread_mutex_lock (98 samples, 0.10%)</title><rect x="19.6041%" y="597" width="0.0961%" height="15" fill="rgb(225,90,30)" fg:x="19984" fg:w="98"/><text x="19.8541%" y="607.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,204 samples, 2.16%)</title><rect x="18.3621%" y="693" width="2.1621%" height="15" fill="rgb(236,182,39)" fg:x="18718" fg:w="2204"/><text x="18.6121%" y="703.50">a..</text></g><g><title>event_listener::Event::notify (1,047 samples, 1.03%)</title><rect x="19.4971%" y="677" width="1.0271%" height="15" fill="rgb(212,144,35)" fg:x="19875" fg:w="1047"/><text x="19.7471%" y="687.50"></text></g><g><title>event_listener::full_fence (840 samples, 0.82%)</title><rect x="19.7002%" y="661" width="0.8240%" height="15" fill="rgb(228,63,44)" fg:x="20082" fg:w="840"/><text x="19.9502%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (820 samples, 0.80%)</title><rect x="19.7198%" y="645" width="0.8044%" height="15" fill="rgb(228,109,6)" fg:x="20102" fg:w="820"/><text x="19.9698%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (820 samples, 0.80%)</title><rect x="19.7198%" y="629" width="0.8044%" height="15" fill="rgb(238,117,24)" fg:x="20102" fg:w="820"/><text x="19.9698%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (820 samples, 0.80%)</title><rect x="19.7198%" y="613" width="0.8044%" height="15" fill="rgb(242,26,26)" fg:x="20102" fg:w="820"/><text x="19.9698%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (23 samples, 0.02%)</title><rect x="20.5242%" y="693" width="0.0226%" height="15" fill="rgb(221,92,48)" fg:x="20922" fg:w="23"/><text x="20.7742%" y="703.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="20.5468%" y="661" width="0.0108%" height="15" fill="rgb(209,209,32)" fg:x="20945" fg:w="11"/><text x="20.7968%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="20.5468%" y="693" width="0.0128%" height="15" fill="rgb(221,70,22)" fg:x="20945" fg:w="13"/><text x="20.7968%" y="703.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="20.5468%" y="677" width="0.0128%" height="15" fill="rgb(248,145,5)" fg:x="20945" fg:w="13"/><text x="20.7968%" y="687.50"></text></g><g><title>event_listener::Inner::lock (17 samples, 0.02%)</title><rect x="20.5772%" y="677" width="0.0167%" height="15" fill="rgb(226,116,26)" fg:x="20976" fg:w="17"/><text x="20.8272%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="20.5772%" y="661" width="0.0167%" height="15" fill="rgb(244,5,17)" fg:x="20976" fg:w="17"/><text x="20.8272%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="20.5811%" y="645" width="0.0128%" height="15" fill="rgb(252,159,33)" fg:x="20980" fg:w="13"/><text x="20.8311%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.01%)</title><rect x="20.5811%" y="629" width="0.0128%" height="15" fill="rgb(206,71,0)" fg:x="20980" fg:w="13"/><text x="20.8311%" y="639.50"></text></g><g><title>__GI___pthread_mutex_lock (13 samples, 0.01%)</title><rect x="20.5811%" y="613" width="0.0128%" height="15" fill="rgb(233,118,54)" fg:x="20980" fg:w="13"/><text x="20.8311%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,572 samples, 2.52%)</title><rect x="18.3033%" y="709" width="2.5231%" height="15" fill="rgb(234,83,48)" fg:x="18658" fg:w="2572"/><text x="18.5533%" y="719.50">&lt;a..</text></g><g><title>event_listener::Event::notify (271 samples, 0.27%)</title><rect x="20.5605%" y="693" width="0.2658%" height="15" fill="rgb(228,3,54)" fg:x="20959" fg:w="271"/><text x="20.8105%" y="703.50"></text></g><g><title>event_listener::full_fence (237 samples, 0.23%)</title><rect x="20.5939%" y="677" width="0.2325%" height="15" fill="rgb(226,155,13)" fg:x="20993" fg:w="237"/><text x="20.8439%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (226 samples, 0.22%)</title><rect x="20.6047%" y="661" width="0.2217%" height="15" fill="rgb(241,28,37)" fg:x="21004" fg:w="226"/><text x="20.8547%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (226 samples, 0.22%)</title><rect x="20.6047%" y="645" width="0.2217%" height="15" fill="rgb(233,93,10)" fg:x="21004" fg:w="226"/><text x="20.8547%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (226 samples, 0.22%)</title><rect x="20.6047%" y="629" width="0.2217%" height="15" fill="rgb(225,113,19)" fg:x="21004" fg:w="226"/><text x="20.8547%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="20.8421%" y="661" width="0.0108%" height="15" fill="rgb(241,2,18)" fg:x="21246" fg:w="11"/><text x="21.0921%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,922 samples, 2.87%)</title><rect x="17.9894%" y="741" width="2.8664%" height="15" fill="rgb(228,207,21)" fg:x="18338" fg:w="2922"/><text x="18.2394%" y="751.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,689 samples, 2.64%)</title><rect x="18.2179%" y="725" width="2.6379%" height="15" fill="rgb(213,211,35)" fg:x="18571" fg:w="2689"/><text x="18.4679%" y="735.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="20.8264%" y="709" width="0.0294%" height="15" fill="rgb(209,83,10)" fg:x="21230" fg:w="30"/><text x="21.0764%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (16 samples, 0.02%)</title><rect x="20.8401%" y="693" width="0.0157%" height="15" fill="rgb(209,164,1)" fg:x="21244" fg:w="16"/><text x="21.0901%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (14 samples, 0.01%)</title><rect x="20.8421%" y="677" width="0.0137%" height="15" fill="rgb(213,184,43)" fg:x="21246" fg:w="14"/><text x="21.0921%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="20.8656%" y="581" width="0.0137%" height="15" fill="rgb(231,61,34)" fg:x="21270" fg:w="14"/><text x="21.1156%" y="591.50"></text></g><g><title>size_to_sizeclass (63 samples, 0.06%)</title><rect x="20.8931%" y="437" width="0.0618%" height="15" fill="rgb(235,75,3)" fg:x="21298" fg:w="63"/><text x="21.1431%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="20.9686%" y="421" width="0.0432%" height="15" fill="rgb(220,106,47)" fg:x="21375" fg:w="44"/><text x="21.2186%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (44 samples, 0.04%)</title><rect x="20.9686%" y="405" width="0.0432%" height="15" fill="rgb(210,196,33)" fg:x="21375" fg:w="44"/><text x="21.2186%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (34 samples, 0.03%)</title><rect x="20.9784%" y="389" width="0.0334%" height="15" fill="rgb(229,154,42)" fg:x="21385" fg:w="34"/><text x="21.2284%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (26 samples, 0.03%)</title><rect x="20.9863%" y="373" width="0.0255%" height="15" fill="rgb(228,114,26)" fg:x="21393" fg:w="26"/><text x="21.2363%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (26 samples, 0.03%)</title><rect x="20.9863%" y="357" width="0.0255%" height="15" fill="rgb(208,144,1)" fg:x="21393" fg:w="26"/><text x="21.2363%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (26 samples, 0.03%)</title><rect x="20.9863%" y="341" width="0.0255%" height="15" fill="rgb(239,112,37)" fg:x="21393" fg:w="26"/><text x="21.2363%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (117 samples, 0.11%)</title><rect x="21.0177%" y="421" width="0.1148%" height="15" fill="rgb(210,96,50)" fg:x="21425" fg:w="117"/><text x="21.2677%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (117 samples, 0.11%)</title><rect x="21.0177%" y="405" width="0.1148%" height="15" fill="rgb(222,178,2)" fg:x="21425" fg:w="117"/><text x="21.2677%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (642 samples, 0.63%)</title><rect x="20.8911%" y="469" width="0.6298%" height="15" fill="rgb(226,74,18)" fg:x="21296" fg:w="642"/><text x="21.1411%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (640 samples, 0.63%)</title><rect x="20.8931%" y="453" width="0.6278%" height="15" fill="rgb(225,67,54)" fg:x="21298" fg:w="640"/><text x="21.1431%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (577 samples, 0.57%)</title><rect x="20.9549%" y="437" width="0.5660%" height="15" fill="rgb(251,92,32)" fg:x="21361" fg:w="577"/><text x="21.2049%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (396 samples, 0.39%)</title><rect x="21.1325%" y="421" width="0.3885%" height="15" fill="rgb(228,149,22)" fg:x="21542" fg:w="396"/><text x="21.3825%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (396 samples, 0.39%)</title><rect x="21.1325%" y="405" width="0.3885%" height="15" fill="rgb(243,54,13)" fg:x="21542" fg:w="396"/><text x="21.3825%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (681 samples, 0.67%)</title><rect x="20.8656%" y="613" width="0.6681%" height="15" fill="rgb(243,180,28)" fg:x="21270" fg:w="681"/><text x="21.1156%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (681 samples, 0.67%)</title><rect x="20.8656%" y="597" width="0.6681%" height="15" fill="rgb(208,167,24)" fg:x="21270" fg:w="681"/><text x="21.1156%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (667 samples, 0.65%)</title><rect x="20.8794%" y="581" width="0.6543%" height="15" fill="rgb(245,73,45)" fg:x="21284" fg:w="667"/><text x="21.1294%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (667 samples, 0.65%)</title><rect x="20.8794%" y="565" width="0.6543%" height="15" fill="rgb(237,203,48)" fg:x="21284" fg:w="667"/><text x="21.1294%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (667 samples, 0.65%)</title><rect x="20.8794%" y="549" width="0.6543%" height="15" fill="rgb(211,197,16)" fg:x="21284" fg:w="667"/><text x="21.1294%" y="559.50"></text></g><g><title>alloc::alloc::alloc (663 samples, 0.65%)</title><rect x="20.8833%" y="533" width="0.6504%" height="15" fill="rgb(243,99,51)" fg:x="21288" fg:w="663"/><text x="21.1333%" y="543.50"></text></g><g><title>__rg_alloc (663 samples, 0.65%)</title><rect x="20.8833%" y="517" width="0.6504%" height="15" fill="rgb(215,123,29)" fg:x="21288" fg:w="663"/><text x="21.1333%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (663 samples, 0.65%)</title><rect x="20.8833%" y="501" width="0.6504%" height="15" fill="rgb(239,186,37)" fg:x="21288" fg:w="663"/><text x="21.1333%" y="511.50"></text></g><g><title>rust_alloc (662 samples, 0.65%)</title><rect x="20.8843%" y="485" width="0.6494%" height="15" fill="rgb(252,136,39)" fg:x="21289" fg:w="662"/><text x="21.1343%" y="495.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="21.5209%" y="469" width="0.0128%" height="15" fill="rgb(223,213,32)" fg:x="21938" fg:w="13"/><text x="21.7709%" y="479.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (735 samples, 0.72%)</title><rect x="20.8656%" y="741" width="0.7210%" height="15" fill="rgb(233,115,5)" fg:x="21270" fg:w="735"/><text x="21.1156%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (735 samples, 0.72%)</title><rect x="20.8656%" y="725" width="0.7210%" height="15" fill="rgb(207,226,44)" fg:x="21270" fg:w="735"/><text x="21.1156%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (735 samples, 0.72%)</title><rect x="20.8656%" y="709" width="0.7210%" height="15" fill="rgb(208,126,0)" fg:x="21270" fg:w="735"/><text x="21.1156%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (735 samples, 0.72%)</title><rect x="20.8656%" y="693" width="0.7210%" height="15" fill="rgb(244,66,21)" fg:x="21270" fg:w="735"/><text x="21.1156%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (735 samples, 0.72%)</title><rect x="20.8656%" y="677" width="0.7210%" height="15" fill="rgb(222,97,12)" fg:x="21270" fg:w="735"/><text x="21.1156%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (735 samples, 0.72%)</title><rect x="20.8656%" y="661" width="0.7210%" height="15" fill="rgb(219,213,19)" fg:x="21270" fg:w="735"/><text x="21.1156%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (735 samples, 0.72%)</title><rect x="20.8656%" y="645" width="0.7210%" height="15" fill="rgb(252,169,30)" fg:x="21270" fg:w="735"/><text x="21.1156%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (735 samples, 0.72%)</title><rect x="20.8656%" y="629" width="0.7210%" height="15" fill="rgb(206,32,51)" fg:x="21270" fg:w="735"/><text x="21.1156%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (54 samples, 0.05%)</title><rect x="21.5337%" y="613" width="0.0530%" height="15" fill="rgb(250,172,42)" fg:x="21951" fg:w="54"/><text x="21.7837%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.05%)</title><rect x="21.5337%" y="597" width="0.0530%" height="15" fill="rgb(209,34,43)" fg:x="21951" fg:w="54"/><text x="21.7837%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (41 samples, 0.04%)</title><rect x="21.5464%" y="581" width="0.0402%" height="15" fill="rgb(223,11,35)" fg:x="21964" fg:w="41"/><text x="21.7964%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (912 samples, 0.89%)</title><rect x="21.5867%" y="741" width="0.8947%" height="15" fill="rgb(251,219,26)" fg:x="22005" fg:w="912"/><text x="21.8367%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (407 samples, 0.40%)</title><rect x="22.5068%" y="725" width="0.3993%" height="15" fill="rgb(231,119,3)" fg:x="22943" fg:w="407"/><text x="22.7568%" y="735.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="22.9179%" y="613" width="0.0147%" height="15" fill="rgb(216,97,11)" fg:x="23362" fg:w="15"/><text x="23.1679%" y="623.50"></text></g><g><title>size_to_sizeclass (84 samples, 0.08%)</title><rect x="22.9385%" y="581" width="0.0824%" height="15" fill="rgb(223,59,9)" fg:x="23383" fg:w="84"/><text x="23.1885%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="23.0562%" y="453" width="0.0128%" height="15" fill="rgb(233,93,31)" fg:x="23503" fg:w="13"/><text x="23.3062%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="23.0562%" y="437" width="0.0128%" height="15" fill="rgb(239,81,33)" fg:x="23503" fg:w="13"/><text x="23.3062%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (33 samples, 0.03%)</title><rect x="23.0454%" y="501" width="0.0324%" height="15" fill="rgb(213,120,34)" fg:x="23492" fg:w="33"/><text x="23.2954%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (33 samples, 0.03%)</title><rect x="23.0454%" y="485" width="0.0324%" height="15" fill="rgb(243,49,53)" fg:x="23492" fg:w="33"/><text x="23.2954%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (26 samples, 0.03%)</title><rect x="23.0522%" y="469" width="0.0255%" height="15" fill="rgb(247,216,33)" fg:x="23499" fg:w="26"/><text x="23.3022%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (52 samples, 0.05%)</title><rect x="23.0454%" y="517" width="0.0510%" height="15" fill="rgb(226,26,14)" fg:x="23492" fg:w="52"/><text x="23.2954%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="23.0778%" y="501" width="0.0186%" height="15" fill="rgb(215,49,53)" fg:x="23525" fg:w="19"/><text x="23.3278%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="23.0778%" y="485" width="0.0186%" height="15" fill="rgb(245,162,40)" fg:x="23525" fg:w="19"/><text x="23.3278%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (19 samples, 0.02%)</title><rect x="23.0778%" y="469" width="0.0186%" height="15" fill="rgb(229,68,17)" fg:x="23525" fg:w="19"/><text x="23.3278%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="23.0778%" y="453" width="0.0186%" height="15" fill="rgb(213,182,10)" fg:x="23525" fg:w="19"/><text x="23.3278%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (77 samples, 0.08%)</title><rect x="23.0336%" y="533" width="0.0755%" height="15" fill="rgb(245,125,30)" fg:x="23480" fg:w="77"/><text x="23.2836%" y="543.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="23.0984%" y="517" width="0.0108%" height="15" fill="rgb(232,202,2)" fg:x="23546" fg:w="11"/><text x="23.3484%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="23.0984%" y="501" width="0.0108%" height="15" fill="rgb(237,140,51)" fg:x="23546" fg:w="11"/><text x="23.3484%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="23.0984%" y="485" width="0.0108%" height="15" fill="rgb(236,157,25)" fg:x="23546" fg:w="11"/><text x="23.3484%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="23.0984%" y="469" width="0.0108%" height="15" fill="rgb(219,209,0)" fg:x="23546" fg:w="11"/><text x="23.3484%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (44 samples, 0.04%)</title><rect x="23.1288%" y="517" width="0.0432%" height="15" fill="rgb(240,116,54)" fg:x="23577" fg:w="44"/><text x="23.3788%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (429 samples, 0.42%)</title><rect x="23.0326%" y="565" width="0.4208%" height="15" fill="rgb(216,10,36)" fg:x="23479" fg:w="429"/><text x="23.2826%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (429 samples, 0.42%)</title><rect x="23.0326%" y="549" width="0.4208%" height="15" fill="rgb(222,72,44)" fg:x="23479" fg:w="429"/><text x="23.2826%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (351 samples, 0.34%)</title><rect x="23.1091%" y="533" width="0.3443%" height="15" fill="rgb(232,159,9)" fg:x="23557" fg:w="351"/><text x="23.3591%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (287 samples, 0.28%)</title><rect x="23.1719%" y="517" width="0.2815%" height="15" fill="rgb(210,39,32)" fg:x="23621" fg:w="287"/><text x="23.4219%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (287 samples, 0.28%)</title><rect x="23.1719%" y="501" width="0.2815%" height="15" fill="rgb(216,194,45)" fg:x="23621" fg:w="287"/><text x="23.4219%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (287 samples, 0.28%)</title><rect x="23.1719%" y="485" width="0.2815%" height="15" fill="rgb(218,18,35)" fg:x="23621" fg:w="287"/><text x="23.4219%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (16 samples, 0.02%)</title><rect x="23.4672%" y="517" width="0.0157%" height="15" fill="rgb(207,83,51)" fg:x="23922" fg:w="16"/><text x="23.7172%" y="527.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (16 samples, 0.02%)</title><rect x="23.4672%" y="501" width="0.0157%" height="15" fill="rgb(225,63,43)" fg:x="23922" fg:w="16"/><text x="23.7172%" y="511.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (12 samples, 0.01%)</title><rect x="23.4711%" y="485" width="0.0118%" height="15" fill="rgb(207,57,36)" fg:x="23926" fg:w="12"/><text x="23.7211%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (32 samples, 0.03%)</title><rect x="23.4829%" y="501" width="0.0314%" height="15" fill="rgb(216,99,33)" fg:x="23938" fg:w="32"/><text x="23.7329%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (32 samples, 0.03%)</title><rect x="23.4829%" y="485" width="0.0314%" height="15" fill="rgb(225,42,16)" fg:x="23938" fg:w="32"/><text x="23.7329%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (90 samples, 0.09%)</title><rect x="23.4623%" y="565" width="0.0883%" height="15" fill="rgb(220,201,45)" fg:x="23917" fg:w="90"/><text x="23.7123%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="23.4662%" y="549" width="0.0844%" height="15" fill="rgb(225,33,4)" fg:x="23921" fg:w="86"/><text x="23.7162%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (85 samples, 0.08%)</title><rect x="23.4672%" y="533" width="0.0834%" height="15" fill="rgb(224,33,50)" fg:x="23922" fg:w="85"/><text x="23.7172%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (69 samples, 0.07%)</title><rect x="23.4829%" y="517" width="0.0677%" height="15" fill="rgb(246,198,51)" fg:x="23938" fg:w="69"/><text x="23.7329%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (37 samples, 0.04%)</title><rect x="23.5143%" y="501" width="0.0363%" height="15" fill="rgb(205,22,4)" fg:x="23970" fg:w="37"/><text x="23.7643%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (23 samples, 0.02%)</title><rect x="23.5280%" y="485" width="0.0226%" height="15" fill="rgb(206,3,8)" fg:x="23984" fg:w="23"/><text x="23.7780%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="23.5280%" y="469" width="0.0226%" height="15" fill="rgb(251,23,15)" fg:x="23984" fg:w="23"/><text x="23.7780%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (22 samples, 0.02%)</title><rect x="23.5506%" y="565" width="0.0216%" height="15" fill="rgb(252,88,28)" fg:x="24007" fg:w="22"/><text x="23.8006%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (22 samples, 0.02%)</title><rect x="23.5506%" y="549" width="0.0216%" height="15" fill="rgb(212,127,14)" fg:x="24007" fg:w="22"/><text x="23.8006%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (817 samples, 0.80%)</title><rect x="22.9385%" y="613" width="0.8015%" height="15" fill="rgb(247,145,37)" fg:x="23383" fg:w="817"/><text x="23.1885%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (817 samples, 0.80%)</title><rect x="22.9385%" y="597" width="0.8015%" height="15" fill="rgb(209,117,53)" fg:x="23383" fg:w="817"/><text x="23.1885%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (733 samples, 0.72%)</title><rect x="23.0209%" y="581" width="0.7191%" height="15" fill="rgb(212,90,42)" fg:x="23467" fg:w="733"/><text x="23.2709%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (171 samples, 0.17%)</title><rect x="23.5722%" y="565" width="0.1677%" height="15" fill="rgb(218,164,37)" fg:x="24029" fg:w="171"/><text x="23.8222%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (171 samples, 0.17%)</title><rect x="23.5722%" y="549" width="0.1677%" height="15" fill="rgb(246,65,34)" fg:x="24029" fg:w="171"/><text x="23.8222%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,284 samples, 1.26%)</title><rect x="22.4813%" y="741" width="1.2596%" height="15" fill="rgb(231,100,33)" fg:x="22917" fg:w="1284"/><text x="22.7313%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (851 samples, 0.83%)</title><rect x="22.9061%" y="725" width="0.8348%" height="15" fill="rgb(228,126,14)" fg:x="23350" fg:w="851"/><text x="23.1561%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (851 samples, 0.83%)</title><rect x="22.9061%" y="709" width="0.8348%" height="15" fill="rgb(215,173,21)" fg:x="23350" fg:w="851"/><text x="23.1561%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (851 samples, 0.83%)</title><rect x="22.9061%" y="693" width="0.8348%" height="15" fill="rgb(210,6,40)" fg:x="23350" fg:w="851"/><text x="23.1561%" y="703.50"></text></g><g><title>alloc::alloc::alloc (851 samples, 0.83%)</title><rect x="22.9061%" y="677" width="0.8348%" height="15" fill="rgb(212,48,18)" fg:x="23350" fg:w="851"/><text x="23.1561%" y="687.50"></text></g><g><title>__rg_alloc (851 samples, 0.83%)</title><rect x="22.9061%" y="661" width="0.8348%" height="15" fill="rgb(230,214,11)" fg:x="23350" fg:w="851"/><text x="23.1561%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (851 samples, 0.83%)</title><rect x="22.9061%" y="645" width="0.8348%" height="15" fill="rgb(254,105,39)" fg:x="23350" fg:w="851"/><text x="23.1561%" y="655.50"></text></g><g><title>rust_alloc (839 samples, 0.82%)</title><rect x="22.9179%" y="629" width="0.8230%" height="15" fill="rgb(245,158,5)" fg:x="23362" fg:w="839"/><text x="23.1679%" y="639.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (12 samples, 0.01%)</title><rect x="23.7478%" y="709" width="0.0118%" height="15" fill="rgb(249,208,11)" fg:x="24208" fg:w="12"/><text x="23.9978%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (11 samples, 0.01%)</title><rect x="23.7487%" y="693" width="0.0108%" height="15" fill="rgb(210,39,28)" fg:x="24209" fg:w="11"/><text x="23.9987%" y="703.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (11 samples, 0.01%)</title><rect x="23.7487%" y="677" width="0.0108%" height="15" fill="rgb(211,56,53)" fg:x="24209" fg:w="11"/><text x="23.9987%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (11 samples, 0.01%)</title><rect x="23.7487%" y="661" width="0.0108%" height="15" fill="rgb(226,201,30)" fg:x="24209" fg:w="11"/><text x="23.9987%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (11 samples, 0.01%)</title><rect x="23.7487%" y="645" width="0.0108%" height="15" fill="rgb(239,101,34)" fg:x="24209" fg:w="11"/><text x="23.9987%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="23.7595%" y="645" width="0.0167%" height="15" fill="rgb(226,209,5)" fg:x="24220" fg:w="17"/><text x="24.0095%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="23.7615%" y="629" width="0.0147%" height="15" fill="rgb(250,105,47)" fg:x="24222" fg:w="15"/><text x="24.0115%" y="639.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="23.7615%" y="613" width="0.0147%" height="15" fill="rgb(230,72,3)" fg:x="24222" fg:w="15"/><text x="24.0115%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="23.7615%" y="597" width="0.0147%" height="15" fill="rgb(232,218,39)" fg:x="24222" fg:w="15"/><text x="24.0115%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (29 samples, 0.03%)</title><rect x="23.7595%" y="709" width="0.0284%" height="15" fill="rgb(248,166,6)" fg:x="24220" fg:w="29"/><text x="24.0095%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="23.7595%" y="693" width="0.0284%" height="15" fill="rgb(247,89,20)" fg:x="24220" fg:w="29"/><text x="24.0095%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (29 samples, 0.03%)</title><rect x="23.7595%" y="677" width="0.0284%" height="15" fill="rgb(248,130,54)" fg:x="24220" fg:w="29"/><text x="24.0095%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="23.7595%" y="661" width="0.0284%" height="15" fill="rgb(234,196,4)" fg:x="24220" fg:w="29"/><text x="24.0095%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="23.7762%" y="645" width="0.0118%" height="15" fill="rgb(250,143,31)" fg:x="24237" fg:w="12"/><text x="24.0262%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.06%)</title><rect x="23.7409%" y="725" width="0.0559%" height="15" fill="rgb(211,110,34)" fg:x="24201" fg:w="57"/><text x="23.9909%" y="735.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="23.8066%" y="693" width="0.0128%" height="15" fill="rgb(215,124,48)" fg:x="24268" fg:w="13"/><text x="24.0566%" y="703.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="23.8194%" y="629" width="0.0118%" height="15" fill="rgb(216,46,13)" fg:x="24281" fg:w="12"/><text x="24.0694%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (29 samples, 0.03%)</title><rect x="23.8567%" y="581" width="0.0284%" height="15" fill="rgb(205,184,25)" fg:x="24319" fg:w="29"/><text x="24.1067%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (27 samples, 0.03%)</title><rect x="23.8586%" y="565" width="0.0265%" height="15" fill="rgb(228,1,10)" fg:x="24321" fg:w="27"/><text x="24.1086%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (59 samples, 0.06%)</title><rect x="23.8419%" y="629" width="0.0579%" height="15" fill="rgb(213,116,27)" fg:x="24304" fg:w="59"/><text x="24.0919%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (59 samples, 0.06%)</title><rect x="23.8419%" y="613" width="0.0579%" height="15" fill="rgb(241,95,50)" fg:x="24304" fg:w="59"/><text x="24.0919%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (55 samples, 0.05%)</title><rect x="23.8459%" y="597" width="0.0540%" height="15" fill="rgb(238,48,32)" fg:x="24308" fg:w="55"/><text x="24.0959%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (15 samples, 0.01%)</title><rect x="23.8851%" y="581" width="0.0147%" height="15" fill="rgb(235,113,49)" fg:x="24348" fg:w="15"/><text x="24.1351%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (15 samples, 0.01%)</title><rect x="23.8851%" y="565" width="0.0147%" height="15" fill="rgb(205,127,43)" fg:x="24348" fg:w="15"/><text x="24.1351%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (108 samples, 0.11%)</title><rect x="23.8194%" y="661" width="0.1059%" height="15" fill="rgb(250,162,2)" fg:x="24281" fg:w="108"/><text x="24.0694%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (108 samples, 0.11%)</title><rect x="23.8194%" y="645" width="0.1059%" height="15" fill="rgb(220,13,41)" fg:x="24281" fg:w="108"/><text x="24.0694%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (26 samples, 0.03%)</title><rect x="23.8998%" y="629" width="0.0255%" height="15" fill="rgb(249,221,25)" fg:x="24363" fg:w="26"/><text x="24.1498%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (109 samples, 0.11%)</title><rect x="23.8194%" y="693" width="0.1069%" height="15" fill="rgb(215,208,19)" fg:x="24281" fg:w="109"/><text x="24.0694%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (109 samples, 0.11%)</title><rect x="23.8194%" y="677" width="0.1069%" height="15" fill="rgb(236,175,2)" fg:x="24281" fg:w="109"/><text x="24.0694%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (133 samples, 0.13%)</title><rect x="23.8056%" y="709" width="0.1305%" height="15" fill="rgb(241,52,2)" fg:x="24267" fg:w="133"/><text x="24.0556%" y="719.50"></text></g><g><title>rust_dealloc (159 samples, 0.16%)</title><rect x="23.7968%" y="725" width="0.1560%" height="15" fill="rgb(248,140,14)" fg:x="24258" fg:w="159"/><text x="24.0468%" y="735.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="23.9361%" y="709" width="0.0167%" height="15" fill="rgb(253,22,42)" fg:x="24400" fg:w="17"/><text x="24.1861%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (15 samples, 0.01%)</title><rect x="23.9567%" y="709" width="0.0147%" height="15" fill="rgb(234,61,47)" fg:x="24421" fg:w="15"/><text x="24.2067%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (239 samples, 0.23%)</title><rect x="23.7409%" y="741" width="0.2345%" height="15" fill="rgb(208,226,15)" fg:x="24201" fg:w="239"/><text x="23.9909%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (23 samples, 0.02%)</title><rect x="23.9528%" y="725" width="0.0226%" height="15" fill="rgb(217,221,4)" fg:x="24417" fg:w="23"/><text x="24.2028%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (12 samples, 0.01%)</title><rect x="23.9754%" y="741" width="0.0118%" height="15" fill="rgb(212,174,34)" fg:x="24440" fg:w="12"/><text x="24.2254%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="23.9754%" y="725" width="0.0118%" height="15" fill="rgb(253,83,4)" fg:x="24440" fg:w="12"/><text x="24.2254%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="23.9871%" y="741" width="0.0128%" height="15" fill="rgb(250,195,49)" fg:x="24452" fg:w="13"/><text x="24.2371%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="23.9871%" y="725" width="0.0128%" height="15" fill="rgb(241,192,25)" fg:x="24452" fg:w="13"/><text x="24.2371%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (25 samples, 0.02%)</title><rect x="23.9999%" y="741" width="0.0245%" height="15" fill="rgb(208,124,10)" fg:x="24465" fg:w="25"/><text x="24.2499%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (75 samples, 0.07%)</title><rect x="24.0244%" y="741" width="0.0736%" height="15" fill="rgb(222,33,0)" fg:x="24490" fg:w="75"/><text x="24.2744%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (75 samples, 0.07%)</title><rect x="24.0244%" y="725" width="0.0736%" height="15" fill="rgb(234,209,28)" fg:x="24490" fg:w="75"/><text x="24.2744%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (74 samples, 0.07%)</title><rect x="24.0254%" y="709" width="0.0726%" height="15" fill="rgb(224,11,23)" fg:x="24491" fg:w="74"/><text x="24.2754%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74 samples, 0.07%)</title><rect x="24.0254%" y="693" width="0.0726%" height="15" fill="rgb(232,99,1)" fg:x="24491" fg:w="74"/><text x="24.2754%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (44 samples, 0.04%)</title><rect x="24.0548%" y="677" width="0.0432%" height="15" fill="rgb(237,95,45)" fg:x="24521" fg:w="44"/><text x="24.3048%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (44 samples, 0.04%)</title><rect x="24.0548%" y="661" width="0.0432%" height="15" fill="rgb(208,109,11)" fg:x="24521" fg:w="44"/><text x="24.3048%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (44 samples, 0.04%)</title><rect x="24.0548%" y="645" width="0.0432%" height="15" fill="rgb(216,190,48)" fg:x="24521" fg:w="44"/><text x="24.3048%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (41 samples, 0.04%)</title><rect x="24.0578%" y="629" width="0.0402%" height="15" fill="rgb(251,171,36)" fg:x="24524" fg:w="41"/><text x="24.3078%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (26 samples, 0.03%)</title><rect x="24.0725%" y="613" width="0.0255%" height="15" fill="rgb(230,62,22)" fg:x="24539" fg:w="26"/><text x="24.3225%" y="623.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (22 samples, 0.02%)</title><rect x="24.1039%" y="741" width="0.0216%" height="15" fill="rgb(225,114,35)" fg:x="24571" fg:w="22"/><text x="24.3539%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,088 samples, 6.95%)</title><rect x="17.3164%" y="773" width="6.9532%" height="15" fill="rgb(215,118,42)" fg:x="17652" fg:w="7088"/><text x="17.5664%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (7,075 samples, 6.94%)</title><rect x="17.3292%" y="757" width="6.9405%" height="15" fill="rgb(243,119,21)" fg:x="17665" fg:w="7075"/><text x="17.5792%" y="767.50">tremor_ru..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (147 samples, 0.14%)</title><rect x="24.1254%" y="741" width="0.1442%" height="15" fill="rgb(252,177,53)" fg:x="24593" fg:w="147"/><text x="24.3754%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (147 samples, 0.14%)</title><rect x="24.1254%" y="725" width="0.1442%" height="15" fill="rgb(237,209,29)" fg:x="24593" fg:w="147"/><text x="24.3754%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (147 samples, 0.14%)</title><rect x="24.1254%" y="709" width="0.1442%" height="15" fill="rgb(212,65,23)" fg:x="24593" fg:w="147"/><text x="24.3754%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (89 samples, 0.09%)</title><rect x="24.1823%" y="693" width="0.0873%" height="15" fill="rgb(230,222,46)" fg:x="24651" fg:w="89"/><text x="24.4323%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="25.4782%" y="757" width="0.0147%" height="15" fill="rgb(215,135,32)" fg:x="25972" fg:w="15"/><text x="25.7282%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="25.4929%" y="757" width="0.0265%" height="15" fill="rgb(246,101,22)" fg:x="25987" fg:w="27"/><text x="25.7429%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="25.5194%" y="757" width="0.0177%" height="15" fill="rgb(206,107,13)" fg:x="26014" fg:w="18"/><text x="25.7694%" y="767.50"></text></g><g><title>aligned_size (22 samples, 0.02%)</title><rect x="25.8795%" y="517" width="0.0216%" height="15" fill="rgb(250,100,44)" fg:x="26381" fg:w="22"/><text x="26.1295%" y="527.50"></text></g><g><title>rust_alloc (13 samples, 0.01%)</title><rect x="25.9108%" y="485" width="0.0128%" height="15" fill="rgb(231,147,38)" fg:x="26413" fg:w="13"/><text x="26.1608%" y="495.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="25.9236%" y="485" width="0.0118%" height="15" fill="rgb(229,8,40)" fg:x="26426" fg:w="12"/><text x="26.1736%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.19%)</title><rect x="25.9108%" y="517" width="0.1883%" height="15" fill="rgb(221,135,30)" fg:x="26413" fg:w="192"/><text x="26.1608%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (192 samples, 0.19%)</title><rect x="25.9108%" y="501" width="0.1883%" height="15" fill="rgb(249,193,18)" fg:x="26413" fg:w="192"/><text x="26.1608%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (167 samples, 0.16%)</title><rect x="25.9354%" y="485" width="0.1638%" height="15" fill="rgb(209,133,39)" fg:x="26438" fg:w="167"/><text x="26.1854%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (146 samples, 0.14%)</title><rect x="25.9560%" y="469" width="0.1432%" height="15" fill="rgb(232,100,14)" fg:x="26459" fg:w="146"/><text x="26.2060%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (146 samples, 0.14%)</title><rect x="25.9560%" y="453" width="0.1432%" height="15" fill="rgb(224,185,1)" fg:x="26459" fg:w="146"/><text x="26.2060%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (267 samples, 0.26%)</title><rect x="25.8383%" y="661" width="0.2619%" height="15" fill="rgb(223,139,8)" fg:x="26339" fg:w="267"/><text x="26.0883%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (267 samples, 0.26%)</title><rect x="25.8383%" y="645" width="0.2619%" height="15" fill="rgb(232,213,38)" fg:x="26339" fg:w="267"/><text x="26.0883%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (267 samples, 0.26%)</title><rect x="25.8383%" y="629" width="0.2619%" height="15" fill="rgb(207,94,22)" fg:x="26339" fg:w="267"/><text x="26.0883%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (256 samples, 0.25%)</title><rect x="25.8490%" y="613" width="0.2511%" height="15" fill="rgb(219,183,54)" fg:x="26350" fg:w="256"/><text x="26.0990%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (256 samples, 0.25%)</title><rect x="25.8490%" y="597" width="0.2511%" height="15" fill="rgb(216,185,54)" fg:x="26350" fg:w="256"/><text x="26.0990%" y="607.50"></text></g><g><title>alloc::alloc::alloc (256 samples, 0.25%)</title><rect x="25.8490%" y="581" width="0.2511%" height="15" fill="rgb(254,217,39)" fg:x="26350" fg:w="256"/><text x="26.0990%" y="591.50"></text></g><g><title>__rg_alloc (256 samples, 0.25%)</title><rect x="25.8490%" y="565" width="0.2511%" height="15" fill="rgb(240,178,23)" fg:x="26350" fg:w="256"/><text x="26.0990%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (256 samples, 0.25%)</title><rect x="25.8490%" y="549" width="0.2511%" height="15" fill="rgb(218,11,47)" fg:x="26350" fg:w="256"/><text x="26.0990%" y="559.50"></text></g><g><title>rust_alloc (225 samples, 0.22%)</title><rect x="25.8795%" y="533" width="0.2207%" height="15" fill="rgb(218,51,51)" fg:x="26381" fg:w="225"/><text x="26.1295%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (387 samples, 0.38%)</title><rect x="25.7892%" y="741" width="0.3796%" height="15" fill="rgb(238,126,27)" fg:x="26289" fg:w="387"/><text x="26.0392%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (337 samples, 0.33%)</title><rect x="25.8383%" y="725" width="0.3306%" height="15" fill="rgb(249,202,22)" fg:x="26339" fg:w="337"/><text x="26.0883%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (337 samples, 0.33%)</title><rect x="25.8383%" y="709" width="0.3306%" height="15" fill="rgb(254,195,49)" fg:x="26339" fg:w="337"/><text x="26.0883%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (337 samples, 0.33%)</title><rect x="25.8383%" y="693" width="0.3306%" height="15" fill="rgb(208,123,14)" fg:x="26339" fg:w="337"/><text x="26.0883%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (337 samples, 0.33%)</title><rect x="25.8383%" y="677" width="0.3306%" height="15" fill="rgb(224,200,8)" fg:x="26339" fg:w="337"/><text x="26.0883%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (70 samples, 0.07%)</title><rect x="26.1002%" y="661" width="0.0687%" height="15" fill="rgb(217,61,36)" fg:x="26606" fg:w="70"/><text x="26.3502%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.07%)</title><rect x="26.1002%" y="645" width="0.0687%" height="15" fill="rgb(206,35,45)" fg:x="26606" fg:w="70"/><text x="26.3502%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (51 samples, 0.05%)</title><rect x="26.1188%" y="629" width="0.0500%" height="15" fill="rgb(217,65,33)" fg:x="26625" fg:w="51"/><text x="26.3688%" y="639.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="26.2326%" y="421" width="0.0118%" height="15" fill="rgb(222,158,48)" fg:x="26741" fg:w="12"/><text x="26.4826%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="26.2463%" y="405" width="0.0128%" height="15" fill="rgb(254,2,54)" fg:x="26755" fg:w="13"/><text x="26.4963%" y="415.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (13 samples, 0.01%)</title><rect x="26.2463%" y="389" width="0.0128%" height="15" fill="rgb(250,143,38)" fg:x="26755" fg:w="13"/><text x="26.4963%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (11 samples, 0.01%)</title><rect x="26.2483%" y="373" width="0.0108%" height="15" fill="rgb(248,25,0)" fg:x="26757" fg:w="11"/><text x="26.4983%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (11 samples, 0.01%)</title><rect x="26.2483%" y="357" width="0.0108%" height="15" fill="rgb(206,152,27)" fg:x="26757" fg:w="11"/><text x="26.4983%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.10%)</title><rect x="26.2326%" y="453" width="0.0961%" height="15" fill="rgb(240,77,30)" fg:x="26741" fg:w="98"/><text x="26.4826%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (98 samples, 0.10%)</title><rect x="26.2326%" y="437" width="0.0961%" height="15" fill="rgb(231,5,3)" fg:x="26741" fg:w="98"/><text x="26.4826%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (86 samples, 0.08%)</title><rect x="26.2444%" y="421" width="0.0844%" height="15" fill="rgb(207,226,32)" fg:x="26753" fg:w="86"/><text x="26.4944%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (64 samples, 0.06%)</title><rect x="26.2660%" y="405" width="0.0628%" height="15" fill="rgb(222,207,47)" fg:x="26775" fg:w="64"/><text x="26.5160%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (64 samples, 0.06%)</title><rect x="26.2660%" y="389" width="0.0628%" height="15" fill="rgb(229,115,45)" fg:x="26775" fg:w="64"/><text x="26.5160%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (133 samples, 0.13%)</title><rect x="26.2091%" y="597" width="0.1305%" height="15" fill="rgb(224,191,6)" fg:x="26717" fg:w="133"/><text x="26.4591%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (133 samples, 0.13%)</title><rect x="26.2091%" y="581" width="0.1305%" height="15" fill="rgb(230,227,24)" fg:x="26717" fg:w="133"/><text x="26.4591%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (133 samples, 0.13%)</title><rect x="26.2091%" y="565" width="0.1305%" height="15" fill="rgb(228,80,19)" fg:x="26717" fg:w="133"/><text x="26.4591%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (128 samples, 0.13%)</title><rect x="26.2140%" y="549" width="0.1256%" height="15" fill="rgb(247,229,0)" fg:x="26722" fg:w="128"/><text x="26.4640%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (128 samples, 0.13%)</title><rect x="26.2140%" y="533" width="0.1256%" height="15" fill="rgb(237,194,15)" fg:x="26722" fg:w="128"/><text x="26.4640%" y="543.50"></text></g><g><title>alloc::alloc::alloc (124 samples, 0.12%)</title><rect x="26.2179%" y="517" width="0.1216%" height="15" fill="rgb(219,203,20)" fg:x="26726" fg:w="124"/><text x="26.4679%" y="527.50"></text></g><g><title>__rg_alloc (124 samples, 0.12%)</title><rect x="26.2179%" y="501" width="0.1216%" height="15" fill="rgb(234,128,8)" fg:x="26726" fg:w="124"/><text x="26.4679%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (124 samples, 0.12%)</title><rect x="26.2179%" y="485" width="0.1216%" height="15" fill="rgb(248,202,8)" fg:x="26726" fg:w="124"/><text x="26.4679%" y="495.50"></text></g><g><title>rust_alloc (113 samples, 0.11%)</title><rect x="26.2287%" y="469" width="0.1109%" height="15" fill="rgb(206,104,37)" fg:x="26737" fg:w="113"/><text x="26.4787%" y="479.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="26.3287%" y="453" width="0.0108%" height="15" fill="rgb(223,8,27)" fg:x="26839" fg:w="11"/><text x="26.5787%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (209 samples, 0.21%)</title><rect x="26.2071%" y="677" width="0.2050%" height="15" fill="rgb(216,217,28)" fg:x="26715" fg:w="209"/><text x="26.4571%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (207 samples, 0.20%)</title><rect x="26.2091%" y="661" width="0.2031%" height="15" fill="rgb(249,199,1)" fg:x="26717" fg:w="207"/><text x="26.4591%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (207 samples, 0.20%)</title><rect x="26.2091%" y="645" width="0.2031%" height="15" fill="rgb(240,85,17)" fg:x="26717" fg:w="207"/><text x="26.4591%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (207 samples, 0.20%)</title><rect x="26.2091%" y="629" width="0.2031%" height="15" fill="rgb(206,108,45)" fg:x="26717" fg:w="207"/><text x="26.4591%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (207 samples, 0.20%)</title><rect x="26.2091%" y="613" width="0.2031%" height="15" fill="rgb(245,210,41)" fg:x="26717" fg:w="207"/><text x="26.4591%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (74 samples, 0.07%)</title><rect x="26.3395%" y="597" width="0.0726%" height="15" fill="rgb(206,13,37)" fg:x="26850" fg:w="74"/><text x="26.5895%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (74 samples, 0.07%)</title><rect x="26.3395%" y="581" width="0.0726%" height="15" fill="rgb(250,61,18)" fg:x="26850" fg:w="74"/><text x="26.5895%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (53 samples, 0.05%)</title><rect x="26.3601%" y="565" width="0.0520%" height="15" fill="rgb(235,172,48)" fg:x="26871" fg:w="53"/><text x="26.6101%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="26.4121%" y="677" width="0.0118%" height="15" fill="rgb(249,201,17)" fg:x="26924" fg:w="12"/><text x="26.6621%" y="687.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="26.4779%" y="501" width="0.0137%" height="15" fill="rgb(219,208,6)" fg:x="26991" fg:w="14"/><text x="26.7279%" y="511.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="26.4798%" y="485" width="0.0118%" height="15" fill="rgb(248,31,23)" fg:x="26993" fg:w="12"/><text x="26.7298%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (144 samples, 0.14%)</title><rect x="26.4769%" y="533" width="0.1413%" height="15" fill="rgb(245,15,42)" fg:x="26990" fg:w="144"/><text x="26.7269%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (143 samples, 0.14%)</title><rect x="26.4779%" y="517" width="0.1403%" height="15" fill="rgb(222,217,39)" fg:x="26991" fg:w="143"/><text x="26.7279%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (129 samples, 0.13%)</title><rect x="26.4916%" y="501" width="0.1265%" height="15" fill="rgb(210,219,27)" fg:x="27005" fg:w="129"/><text x="26.7416%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (111 samples, 0.11%)</title><rect x="26.5093%" y="485" width="0.1089%" height="15" fill="rgb(252,166,36)" fg:x="27023" fg:w="111"/><text x="26.7593%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (111 samples, 0.11%)</title><rect x="26.5093%" y="469" width="0.1089%" height="15" fill="rgb(245,132,34)" fg:x="27023" fg:w="111"/><text x="26.7593%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (182 samples, 0.18%)</title><rect x="26.4455%" y="629" width="0.1785%" height="15" fill="rgb(236,54,3)" fg:x="26958" fg:w="182"/><text x="26.6955%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (182 samples, 0.18%)</title><rect x="26.4455%" y="613" width="0.1785%" height="15" fill="rgb(241,173,43)" fg:x="26958" fg:w="182"/><text x="26.6955%" y="623.50"></text></g><g><title>alloc::alloc::alloc (167 samples, 0.16%)</title><rect x="26.4602%" y="597" width="0.1638%" height="15" fill="rgb(215,190,9)" fg:x="26973" fg:w="167"/><text x="26.7102%" y="607.50"></text></g><g><title>__rg_alloc (167 samples, 0.16%)</title><rect x="26.4602%" y="581" width="0.1638%" height="15" fill="rgb(242,101,16)" fg:x="26973" fg:w="167"/><text x="26.7102%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (167 samples, 0.16%)</title><rect x="26.4602%" y="565" width="0.1638%" height="15" fill="rgb(223,190,21)" fg:x="26973" fg:w="167"/><text x="26.7102%" y="575.50"></text></g><g><title>rust_alloc (161 samples, 0.16%)</title><rect x="26.4661%" y="549" width="0.1579%" height="15" fill="rgb(215,228,25)" fg:x="26979" fg:w="161"/><text x="26.7161%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (13 samples, 0.01%)</title><rect x="26.6240%" y="629" width="0.0128%" height="15" fill="rgb(225,36,22)" fg:x="27140" fg:w="13"/><text x="26.8740%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (233 samples, 0.23%)</title><rect x="26.4249%" y="677" width="0.2286%" height="15" fill="rgb(251,106,46)" fg:x="26937" fg:w="233"/><text x="26.6749%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (213 samples, 0.21%)</title><rect x="26.4445%" y="661" width="0.2090%" height="15" fill="rgb(208,90,1)" fg:x="26957" fg:w="213"/><text x="26.6945%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (212 samples, 0.21%)</title><rect x="26.4455%" y="645" width="0.2080%" height="15" fill="rgb(243,10,4)" fg:x="26958" fg:w="212"/><text x="26.6955%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array (17 samples, 0.02%)</title><rect x="26.6368%" y="629" width="0.0167%" height="15" fill="rgb(212,137,27)" fg:x="27153" fg:w="17"/><text x="26.8868%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16 samples, 0.02%)</title><rect x="26.6378%" y="613" width="0.0157%" height="15" fill="rgb(231,220,49)" fg:x="27154" fg:w="16"/><text x="26.8878%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (16 samples, 0.02%)</title><rect x="26.6378%" y="597" width="0.0157%" height="15" fill="rgb(237,96,20)" fg:x="27154" fg:w="16"/><text x="26.8878%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (479 samples, 0.47%)</title><rect x="26.2012%" y="693" width="0.4699%" height="15" fill="rgb(239,229,30)" fg:x="26709" fg:w="479"/><text x="26.4512%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (18 samples, 0.02%)</title><rect x="26.6535%" y="677" width="0.0177%" height="15" fill="rgb(219,65,33)" fg:x="27170" fg:w="18"/><text x="26.9035%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (523 samples, 0.51%)</title><rect x="26.1688%" y="741" width="0.5131%" height="15" fill="rgb(243,134,7)" fg:x="26676" fg:w="523"/><text x="26.4188%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (490 samples, 0.48%)</title><rect x="26.2012%" y="725" width="0.4807%" height="15" fill="rgb(216,177,54)" fg:x="26709" fg:w="490"/><text x="26.4512%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (490 samples, 0.48%)</title><rect x="26.2012%" y="709" width="0.4807%" height="15" fill="rgb(211,160,20)" fg:x="26709" fg:w="490"/><text x="26.4512%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="26.6711%" y="693" width="0.0108%" height="15" fill="rgb(239,85,39)" fg:x="27188" fg:w="11"/><text x="26.9211%" y="703.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,180 samples, 1.16%)</title><rect x="25.5371%" y="757" width="1.1576%" height="15" fill="rgb(232,125,22)" fg:x="26032" fg:w="1180"/><text x="25.7871%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="26.6819%" y="741" width="0.0128%" height="15" fill="rgb(244,57,34)" fg:x="27199" fg:w="13"/><text x="26.9319%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (209 samples, 0.21%)</title><rect x="26.6947%" y="757" width="0.2050%" height="15" fill="rgb(214,203,32)" fg:x="27212" fg:w="209"/><text x="26.9447%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (398 samples, 0.39%)</title><rect x="26.9066%" y="757" width="0.3904%" height="15" fill="rgb(207,58,43)" fg:x="27428" fg:w="398"/><text x="27.1566%" y="767.50"></text></g><g><title>core::ptr::write (378 samples, 0.37%)</title><rect x="26.9262%" y="741" width="0.3708%" height="15" fill="rgb(215,193,15)" fg:x="27448" fg:w="378"/><text x="27.1762%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (375 samples, 0.37%)</title><rect x="26.9291%" y="725" width="0.3679%" height="15" fill="rgb(232,15,44)" fg:x="27451" fg:w="375"/><text x="27.1791%" y="735.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="27.3215%" y="597" width="0.0118%" height="15" fill="rgb(212,3,48)" fg:x="27851" fg:w="12"/><text x="27.5715%" y="607.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="27.3431%" y="565" width="0.0128%" height="15" fill="rgb(218,128,7)" fg:x="27873" fg:w="13"/><text x="27.5931%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="27.3627%" y="501" width="0.0137%" height="15" fill="rgb(226,216,39)" fg:x="27893" fg:w="14"/><text x="27.6127%" y="511.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (13 samples, 0.01%)</title><rect x="27.3637%" y="485" width="0.0128%" height="15" fill="rgb(243,47,51)" fg:x="27894" fg:w="13"/><text x="27.6137%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="27.3627%" y="549" width="0.0147%" height="15" fill="rgb(241,183,40)" fg:x="27893" fg:w="15"/><text x="27.6127%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="27.3627%" y="533" width="0.0147%" height="15" fill="rgb(231,217,32)" fg:x="27893" fg:w="15"/><text x="27.6127%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="27.3627%" y="517" width="0.0147%" height="15" fill="rgb(229,61,38)" fg:x="27893" fg:w="15"/><text x="27.6127%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.08%)</title><rect x="27.3431%" y="597" width="0.0775%" height="15" fill="rgb(225,210,5)" fg:x="27873" fg:w="79"/><text x="27.5931%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (79 samples, 0.08%)</title><rect x="27.3431%" y="581" width="0.0775%" height="15" fill="rgb(231,79,45)" fg:x="27873" fg:w="79"/><text x="27.5931%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (66 samples, 0.06%)</title><rect x="27.3558%" y="565" width="0.0647%" height="15" fill="rgb(224,100,7)" fg:x="27886" fg:w="66"/><text x="27.6058%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (44 samples, 0.04%)</title><rect x="27.3774%" y="549" width="0.0432%" height="15" fill="rgb(241,198,18)" fg:x="27908" fg:w="44"/><text x="27.6274%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (44 samples, 0.04%)</title><rect x="27.3774%" y="533" width="0.0432%" height="15" fill="rgb(252,97,53)" fg:x="27908" fg:w="44"/><text x="27.6274%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.11%)</title><rect x="27.3097%" y="693" width="0.1118%" height="15" fill="rgb(220,88,7)" fg:x="27839" fg:w="114"/><text x="27.5597%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.11%)</title><rect x="27.3097%" y="677" width="0.1118%" height="15" fill="rgb(213,176,14)" fg:x="27839" fg:w="114"/><text x="27.5597%" y="687.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.11%)</title><rect x="27.3156%" y="661" width="0.1059%" height="15" fill="rgb(246,73,7)" fg:x="27845" fg:w="108"/><text x="27.5656%" y="671.50"></text></g><g><title>__rg_alloc (108 samples, 0.11%)</title><rect x="27.3156%" y="645" width="0.1059%" height="15" fill="rgb(245,64,36)" fg:x="27845" fg:w="108"/><text x="27.5656%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (108 samples, 0.11%)</title><rect x="27.3156%" y="629" width="0.1059%" height="15" fill="rgb(245,80,10)" fg:x="27845" fg:w="108"/><text x="27.5656%" y="639.50"></text></g><g><title>rust_alloc (102 samples, 0.10%)</title><rect x="27.3215%" y="613" width="0.1001%" height="15" fill="rgb(232,107,50)" fg:x="27851" fg:w="102"/><text x="27.5715%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (148 samples, 0.15%)</title><rect x="27.2970%" y="757" width="0.1452%" height="15" fill="rgb(253,3,0)" fg:x="27826" fg:w="148"/><text x="27.5470%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (148 samples, 0.15%)</title><rect x="27.2970%" y="741" width="0.1452%" height="15" fill="rgb(212,99,53)" fg:x="27826" fg:w="148"/><text x="27.5470%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (135 samples, 0.13%)</title><rect x="27.3097%" y="725" width="0.1324%" height="15" fill="rgb(249,111,54)" fg:x="27839" fg:w="135"/><text x="27.5597%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (135 samples, 0.13%)</title><rect x="27.3097%" y="709" width="0.1324%" height="15" fill="rgb(249,55,30)" fg:x="27839" fg:w="135"/><text x="27.5597%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (15 samples, 0.01%)</title><rect x="27.4275%" y="693" width="0.0147%" height="15" fill="rgb(237,47,42)" fg:x="27959" fg:w="15"/><text x="27.6775%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (15 samples, 0.01%)</title><rect x="27.4275%" y="677" width="0.0147%" height="15" fill="rgb(211,20,18)" fg:x="27959" fg:w="15"/><text x="27.6775%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (15 samples, 0.01%)</title><rect x="27.4275%" y="661" width="0.0147%" height="15" fill="rgb(231,203,46)" fg:x="27959" fg:w="15"/><text x="27.6775%" y="671.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="27.4638%" y="501" width="0.0128%" height="15" fill="rgb(237,142,3)" fg:x="27996" fg:w="13"/><text x="27.7138%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (51 samples, 0.05%)</title><rect x="27.5138%" y="453" width="0.0500%" height="15" fill="rgb(241,107,1)" fg:x="28047" fg:w="51"/><text x="27.7638%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (43 samples, 0.04%)</title><rect x="27.5216%" y="437" width="0.0422%" height="15" fill="rgb(229,83,13)" fg:x="28055" fg:w="43"/><text x="27.7716%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (102 samples, 0.10%)</title><rect x="27.4765%" y="501" width="0.1001%" height="15" fill="rgb(241,91,40)" fg:x="28009" fg:w="102"/><text x="27.7265%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (102 samples, 0.10%)</title><rect x="27.4765%" y="485" width="0.1001%" height="15" fill="rgb(225,3,45)" fg:x="28009" fg:w="102"/><text x="27.7265%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (98 samples, 0.10%)</title><rect x="27.4804%" y="469" width="0.0961%" height="15" fill="rgb(244,223,14)" fg:x="28013" fg:w="98"/><text x="27.7304%" y="479.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="27.5638%" y="453" width="0.0128%" height="15" fill="rgb(224,124,37)" fg:x="28098" fg:w="13"/><text x="27.8138%" y="463.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="27.5638%" y="437" width="0.0128%" height="15" fill="rgb(251,171,30)" fg:x="28098" fg:w="13"/><text x="27.8138%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (142 samples, 0.14%)</title><rect x="27.4638%" y="533" width="0.1393%" height="15" fill="rgb(236,46,54)" fg:x="27996" fg:w="142"/><text x="27.7138%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (142 samples, 0.14%)</title><rect x="27.4638%" y="517" width="0.1393%" height="15" fill="rgb(245,213,5)" fg:x="27996" fg:w="142"/><text x="27.7138%" y="527.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (27 samples, 0.03%)</title><rect x="27.5766%" y="501" width="0.0265%" height="15" fill="rgb(230,144,27)" fg:x="28111" fg:w="27"/><text x="27.8266%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (156 samples, 0.15%)</title><rect x="27.4638%" y="565" width="0.1530%" height="15" fill="rgb(220,86,6)" fg:x="27996" fg:w="156"/><text x="27.7138%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (156 samples, 0.15%)</title><rect x="27.4638%" y="549" width="0.1530%" height="15" fill="rgb(240,20,13)" fg:x="27996" fg:w="156"/><text x="27.7138%" y="559.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="27.6031%" y="533" width="0.0137%" height="15" fill="rgb(217,89,34)" fg:x="28138" fg:w="14"/><text x="27.8531%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="27.6031%" y="517" width="0.0137%" height="15" fill="rgb(229,13,5)" fg:x="28138" fg:w="14"/><text x="27.8531%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="27.6031%" y="501" width="0.0137%" height="15" fill="rgb(244,67,35)" fg:x="28138" fg:w="14"/><text x="27.8531%" y="511.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="27.6031%" y="485" width="0.0137%" height="15" fill="rgb(221,40,2)" fg:x="28138" fg:w="14"/><text x="27.8531%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (181 samples, 0.18%)</title><rect x="27.4569%" y="581" width="0.1776%" height="15" fill="rgb(237,157,21)" fg:x="27989" fg:w="181"/><text x="27.7069%" y="591.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="27.6168%" y="565" width="0.0177%" height="15" fill="rgb(222,94,11)" fg:x="28152" fg:w="18"/><text x="27.8668%" y="575.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (18 samples, 0.02%)</title><rect x="27.6168%" y="549" width="0.0177%" height="15" fill="rgb(249,113,6)" fg:x="28152" fg:w="18"/><text x="27.8668%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (18 samples, 0.02%)</title><rect x="27.6168%" y="533" width="0.0177%" height="15" fill="rgb(238,137,36)" fg:x="28152" fg:w="18"/><text x="27.8668%" y="543.50"></text></g><g><title>snmalloc::bits::align_down (18 samples, 0.02%)</title><rect x="27.6168%" y="517" width="0.0177%" height="15" fill="rgb(210,102,26)" fg:x="28152" fg:w="18"/><text x="27.8668%" y="527.50"></text></g><g><title>rust_dealloc (202 samples, 0.20%)</title><rect x="27.4471%" y="597" width="0.1982%" height="15" fill="rgb(218,30,30)" fg:x="27979" fg:w="202"/><text x="27.6971%" y="607.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="27.6344%" y="581" width="0.0108%" height="15" fill="rgb(214,67,26)" fg:x="28170" fg:w="11"/><text x="27.8844%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (207 samples, 0.20%)</title><rect x="27.4441%" y="661" width="0.2031%" height="15" fill="rgb(251,9,53)" fg:x="27976" fg:w="207"/><text x="27.6941%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (205 samples, 0.20%)</title><rect x="27.4461%" y="645" width="0.2011%" height="15" fill="rgb(228,204,25)" fg:x="27978" fg:w="205"/><text x="27.6961%" y="655.50"></text></g><g><title>__rg_dealloc (205 samples, 0.20%)</title><rect x="27.4461%" y="629" width="0.2011%" height="15" fill="rgb(207,153,8)" fg:x="27978" fg:w="205"/><text x="27.6961%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (205 samples, 0.20%)</title><rect x="27.4461%" y="613" width="0.2011%" height="15" fill="rgb(242,9,16)" fg:x="27978" fg:w="205"/><text x="27.6961%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (225 samples, 0.22%)</title><rect x="27.4422%" y="709" width="0.2207%" height="15" fill="rgb(217,211,10)" fg:x="27974" fg:w="225"/><text x="27.6922%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (223 samples, 0.22%)</title><rect x="27.4441%" y="693" width="0.2188%" height="15" fill="rgb(219,228,52)" fg:x="27976" fg:w="223"/><text x="27.6941%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (223 samples, 0.22%)</title><rect x="27.4441%" y="677" width="0.2188%" height="15" fill="rgb(231,92,29)" fg:x="27976" fg:w="223"/><text x="27.6941%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.02%)</title><rect x="27.6472%" y="661" width="0.0157%" height="15" fill="rgb(232,8,23)" fg:x="28183" fg:w="16"/><text x="27.8972%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (227 samples, 0.22%)</title><rect x="27.4422%" y="725" width="0.2227%" height="15" fill="rgb(216,211,34)" fg:x="27974" fg:w="227"/><text x="27.6922%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (238 samples, 0.23%)</title><rect x="27.4422%" y="741" width="0.2335%" height="15" fill="rgb(236,151,0)" fg:x="27974" fg:w="238"/><text x="27.6922%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (11 samples, 0.01%)</title><rect x="27.6649%" y="725" width="0.0108%" height="15" fill="rgb(209,168,3)" fg:x="28201" fg:w="11"/><text x="27.9149%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (248 samples, 0.24%)</title><rect x="27.4422%" y="757" width="0.2433%" height="15" fill="rgb(208,129,28)" fg:x="27974" fg:w="248"/><text x="27.6922%" y="767.50"></text></g><g><title>aligned_size (20 samples, 0.02%)</title><rect x="27.7080%" y="597" width="0.0196%" height="15" fill="rgb(229,78,22)" fg:x="28245" fg:w="20"/><text x="27.9580%" y="607.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="27.7394%" y="581" width="0.0108%" height="15" fill="rgb(228,187,13)" fg:x="28277" fg:w="11"/><text x="27.9894%" y="591.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="27.7571%" y="517" width="0.0108%" height="15" fill="rgb(240,119,24)" fg:x="28295" fg:w="11"/><text x="28.0071%" y="527.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (43 samples, 0.04%)</title><rect x="27.8169%" y="469" width="0.0422%" height="15" fill="rgb(209,194,42)" fg:x="28356" fg:w="43"/><text x="28.0669%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (38 samples, 0.04%)</title><rect x="27.8218%" y="453" width="0.0373%" height="15" fill="rgb(247,200,46)" fg:x="28361" fg:w="38"/><text x="28.0718%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (104 samples, 0.10%)</title><rect x="27.7836%" y="517" width="0.1020%" height="15" fill="rgb(218,76,16)" fg:x="28322" fg:w="104"/><text x="28.0336%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (104 samples, 0.10%)</title><rect x="27.7836%" y="501" width="0.1020%" height="15" fill="rgb(225,21,48)" fg:x="28322" fg:w="104"/><text x="28.0336%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (100 samples, 0.10%)</title><rect x="27.7875%" y="485" width="0.0981%" height="15" fill="rgb(239,223,50)" fg:x="28326" fg:w="100"/><text x="28.0375%" y="495.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (27 samples, 0.03%)</title><rect x="27.8591%" y="469" width="0.0265%" height="15" fill="rgb(244,45,21)" fg:x="28399" fg:w="27"/><text x="28.1091%" y="479.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (27 samples, 0.03%)</title><rect x="27.8591%" y="453" width="0.0265%" height="15" fill="rgb(232,33,43)" fg:x="28399" fg:w="27"/><text x="28.1091%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (146 samples, 0.14%)</title><rect x="27.7502%" y="549" width="0.1432%" height="15" fill="rgb(209,8,3)" fg:x="28288" fg:w="146"/><text x="28.0002%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (146 samples, 0.14%)</title><rect x="27.7502%" y="533" width="0.1432%" height="15" fill="rgb(214,25,53)" fg:x="28288" fg:w="146"/><text x="28.0002%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (153 samples, 0.15%)</title><rect x="27.7502%" y="581" width="0.1501%" height="15" fill="rgb(254,186,54)" fg:x="28288" fg:w="153"/><text x="28.0002%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (153 samples, 0.15%)</title><rect x="27.7502%" y="565" width="0.1501%" height="15" fill="rgb(208,174,49)" fg:x="28288" fg:w="153"/><text x="28.0002%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (184 samples, 0.18%)</title><rect x="27.7296%" y="597" width="0.1805%" height="15" fill="rgb(233,191,51)" fg:x="28267" fg:w="184"/><text x="27.9796%" y="607.50"></text></g><g><title>rust_dealloc (222 samples, 0.22%)</title><rect x="27.7031%" y="613" width="0.2178%" height="15" fill="rgb(222,134,10)" fg:x="28240" fg:w="222"/><text x="27.9531%" y="623.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="27.9101%" y="597" width="0.0108%" height="15" fill="rgb(230,226,20)" fg:x="28451" fg:w="11"/><text x="28.1601%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (229 samples, 0.22%)</title><rect x="27.7012%" y="677" width="0.2246%" height="15" fill="rgb(251,111,25)" fg:x="28238" fg:w="229"/><text x="27.9512%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (229 samples, 0.22%)</title><rect x="27.7012%" y="661" width="0.2246%" height="15" fill="rgb(224,40,46)" fg:x="28238" fg:w="229"/><text x="27.9512%" y="671.50"></text></g><g><title>__rg_dealloc (229 samples, 0.22%)</title><rect x="27.7012%" y="645" width="0.2246%" height="15" fill="rgb(236,108,47)" fg:x="28238" fg:w="229"/><text x="27.9512%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (229 samples, 0.22%)</title><rect x="27.7012%" y="629" width="0.2246%" height="15" fill="rgb(234,93,0)" fg:x="28238" fg:w="229"/><text x="27.9512%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (247 samples, 0.24%)</title><rect x="27.6874%" y="741" width="0.2423%" height="15" fill="rgb(224,213,32)" fg:x="28224" fg:w="247"/><text x="27.9374%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (247 samples, 0.24%)</title><rect x="27.6874%" y="725" width="0.2423%" height="15" fill="rgb(251,11,48)" fg:x="28224" fg:w="247"/><text x="27.9374%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (247 samples, 0.24%)</title><rect x="27.6874%" y="709" width="0.2423%" height="15" fill="rgb(236,173,5)" fg:x="28224" fg:w="247"/><text x="27.9374%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (247 samples, 0.24%)</title><rect x="27.6874%" y="693" width="0.2423%" height="15" fill="rgb(230,95,12)" fg:x="28224" fg:w="247"/><text x="27.9374%" y="703.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="27.9601%" y="549" width="0.0108%" height="15" fill="rgb(232,209,1)" fg:x="28502" fg:w="11"/><text x="28.2101%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (20 samples, 0.02%)</title><rect x="28.0229%" y="421" width="0.0196%" height="15" fill="rgb(232,6,1)" fg:x="28566" fg:w="20"/><text x="28.2729%" y="431.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="28.0268%" y="405" width="0.0157%" height="15" fill="rgb(210,224,50)" fg:x="28570" fg:w="16"/><text x="28.2768%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (62 samples, 0.06%)</title><rect x="27.9984%" y="469" width="0.0608%" height="15" fill="rgb(228,127,35)" fg:x="28541" fg:w="62"/><text x="28.2484%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (62 samples, 0.06%)</title><rect x="27.9984%" y="453" width="0.0608%" height="15" fill="rgb(245,102,45)" fg:x="28541" fg:w="62"/><text x="28.2484%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (61 samples, 0.06%)</title><rect x="27.9994%" y="437" width="0.0598%" height="15" fill="rgb(214,1,49)" fg:x="28542" fg:w="61"/><text x="28.2494%" y="447.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (17 samples, 0.02%)</title><rect x="28.0425%" y="421" width="0.0167%" height="15" fill="rgb(226,163,40)" fg:x="28586" fg:w="17"/><text x="28.2925%" y="431.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (17 samples, 0.02%)</title><rect x="28.0425%" y="405" width="0.0167%" height="15" fill="rgb(239,212,28)" fg:x="28586" fg:w="17"/><text x="28.2925%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (92 samples, 0.09%)</title><rect x="27.9807%" y="501" width="0.0903%" height="15" fill="rgb(220,20,13)" fg:x="28523" fg:w="92"/><text x="28.2307%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (92 samples, 0.09%)</title><rect x="27.9807%" y="485" width="0.0903%" height="15" fill="rgb(210,164,35)" fg:x="28523" fg:w="92"/><text x="28.2307%" y="495.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (12 samples, 0.01%)</title><rect x="28.0592%" y="469" width="0.0118%" height="15" fill="rgb(248,109,41)" fg:x="28603" fg:w="12"/><text x="28.3092%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (99 samples, 0.10%)</title><rect x="27.9807%" y="533" width="0.0971%" height="15" fill="rgb(238,23,50)" fg:x="28523" fg:w="99"/><text x="28.2307%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (99 samples, 0.10%)</title><rect x="27.9807%" y="517" width="0.0971%" height="15" fill="rgb(211,48,49)" fg:x="28523" fg:w="99"/><text x="28.2307%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (112 samples, 0.11%)</title><rect x="27.9729%" y="549" width="0.1099%" height="15" fill="rgb(223,36,21)" fg:x="28515" fg:w="112"/><text x="28.2229%" y="559.50"></text></g><g><title>rust_dealloc (131 samples, 0.13%)</title><rect x="27.9592%" y="565" width="0.1285%" height="15" fill="rgb(207,123,46)" fg:x="28501" fg:w="131"/><text x="28.2092%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (138 samples, 0.14%)</title><rect x="27.9542%" y="581" width="0.1354%" height="15" fill="rgb(240,218,32)" fg:x="28496" fg:w="138"/><text x="28.2042%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (147 samples, 0.14%)</title><rect x="27.9542%" y="629" width="0.1442%" height="15" fill="rgb(252,5,43)" fg:x="28496" fg:w="147"/><text x="28.2042%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (147 samples, 0.14%)</title><rect x="27.9542%" y="613" width="0.1442%" height="15" fill="rgb(252,84,19)" fg:x="28496" fg:w="147"/><text x="28.2042%" y="623.50"></text></g><g><title>__rg_dealloc (147 samples, 0.14%)</title><rect x="27.9542%" y="597" width="0.1442%" height="15" fill="rgb(243,152,39)" fg:x="28496" fg:w="147"/><text x="28.2042%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 0.18%)</title><rect x="27.9297%" y="725" width="0.1776%" height="15" fill="rgb(234,160,15)" fg:x="28471" fg:w="181"/><text x="28.1797%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (177 samples, 0.17%)</title><rect x="27.9336%" y="709" width="0.1736%" height="15" fill="rgb(237,34,20)" fg:x="28475" fg:w="177"/><text x="28.1836%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (161 samples, 0.16%)</title><rect x="27.9493%" y="693" width="0.1579%" height="15" fill="rgb(229,97,13)" fg:x="28491" fg:w="161"/><text x="28.1993%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (161 samples, 0.16%)</title><rect x="27.9493%" y="677" width="0.1579%" height="15" fill="rgb(234,71,50)" fg:x="28491" fg:w="161"/><text x="28.1993%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (161 samples, 0.16%)</title><rect x="27.9493%" y="661" width="0.1579%" height="15" fill="rgb(253,155,4)" fg:x="28491" fg:w="161"/><text x="28.1993%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.16%)</title><rect x="27.9493%" y="645" width="0.1579%" height="15" fill="rgb(222,185,37)" fg:x="28491" fg:w="161"/><text x="28.1993%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (18 samples, 0.02%)</title><rect x="28.1073%" y="725" width="0.0177%" height="15" fill="rgb(251,177,13)" fg:x="28652" fg:w="18"/><text x="28.3573%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="28.1073%" y="709" width="0.0177%" height="15" fill="rgb(250,179,40)" fg:x="28652" fg:w="18"/><text x="28.3573%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.02%)</title><rect x="28.1092%" y="693" width="0.0157%" height="15" fill="rgb(242,44,2)" fg:x="28654" fg:w="16"/><text x="28.3592%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (449 samples, 0.44%)</title><rect x="27.6855%" y="757" width="0.4405%" height="15" fill="rgb(216,177,13)" fg:x="28222" fg:w="449"/><text x="27.9355%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (200 samples, 0.20%)</title><rect x="27.9297%" y="741" width="0.1962%" height="15" fill="rgb(216,106,43)" fg:x="28471" fg:w="200"/><text x="28.1797%" y="751.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="28.1259%" y="741" width="0.0137%" height="15" fill="rgb(216,183,2)" fg:x="28671" fg:w="14"/><text x="28.3759%" y="751.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (26 samples, 0.03%)</title><rect x="28.1720%" y="613" width="0.0255%" height="15" fill="rgb(249,75,3)" fg:x="28718" fg:w="26"/><text x="28.4220%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="28.1818%" y="597" width="0.0157%" height="15" fill="rgb(219,67,39)" fg:x="28728" fg:w="16"/><text x="28.4318%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (57 samples, 0.06%)</title><rect x="28.1495%" y="661" width="0.0559%" height="15" fill="rgb(253,228,2)" fg:x="28695" fg:w="57"/><text x="28.3995%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (57 samples, 0.06%)</title><rect x="28.1495%" y="645" width="0.0559%" height="15" fill="rgb(235,138,27)" fg:x="28695" fg:w="57"/><text x="28.3995%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (57 samples, 0.06%)</title><rect x="28.1495%" y="629" width="0.0559%" height="15" fill="rgb(236,97,51)" fg:x="28695" fg:w="57"/><text x="28.3995%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (66 samples, 0.06%)</title><rect x="28.1416%" y="693" width="0.0647%" height="15" fill="rgb(240,80,30)" fg:x="28687" fg:w="66"/><text x="28.3916%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (66 samples, 0.06%)</title><rect x="28.1416%" y="677" width="0.0647%" height="15" fill="rgb(230,178,19)" fg:x="28687" fg:w="66"/><text x="28.3916%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (72 samples, 0.07%)</title><rect x="28.1416%" y="725" width="0.0706%" height="15" fill="rgb(210,190,27)" fg:x="28687" fg:w="72"/><text x="28.3916%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (72 samples, 0.07%)</title><rect x="28.1416%" y="709" width="0.0706%" height="15" fill="rgb(222,107,31)" fg:x="28687" fg:w="72"/><text x="28.3916%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (88 samples, 0.09%)</title><rect x="28.1397%" y="741" width="0.0863%" height="15" fill="rgb(216,127,34)" fg:x="28685" fg:w="88"/><text x="28.3897%" y="751.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="28.2122%" y="725" width="0.0137%" height="15" fill="rgb(234,116,52)" fg:x="28759" fg:w="14"/><text x="28.4622%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="28.2122%" y="709" width="0.0137%" height="15" fill="rgb(222,124,15)" fg:x="28759" fg:w="14"/><text x="28.4622%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="28.2122%" y="693" width="0.0137%" height="15" fill="rgb(231,179,28)" fg:x="28759" fg:w="14"/><text x="28.4622%" y="703.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="28.2122%" y="677" width="0.0137%" height="15" fill="rgb(226,93,45)" fg:x="28759" fg:w="14"/><text x="28.4622%" y="687.50"></text></g><g><title>rust_dealloc (117 samples, 0.11%)</title><rect x="28.1259%" y="757" width="0.1148%" height="15" fill="rgb(215,8,51)" fg:x="28671" fg:w="117"/><text x="28.3759%" y="767.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="28.2260%" y="741" width="0.0147%" height="15" fill="rgb(223,106,5)" fg:x="28773" fg:w="15"/><text x="28.4760%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (62 samples, 0.06%)</title><rect x="28.2476%" y="757" width="0.0608%" height="15" fill="rgb(250,191,5)" fg:x="28795" fg:w="62"/><text x="28.4976%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,218 samples, 11.00%)</title><rect x="17.3164%" y="805" width="11.0047%" height="15" fill="rgb(242,132,44)" fg:x="17652" fg:w="11218"/><text x="17.5664%" y="815.50">&lt;core::future::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (11,218 samples, 11.00%)</title><rect x="17.3164%" y="789" width="11.0047%" height="15" fill="rgb(251,152,29)" fg:x="17652" fg:w="11218"/><text x="17.5664%" y="799.50">tremor_runtime::..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,130 samples, 4.05%)</title><rect x="24.2697%" y="773" width="4.0515%" height="15" fill="rgb(218,179,5)" fg:x="24740" fg:w="4130"/><text x="24.5197%" y="783.50">trem..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="28.3211%" y="437" width="0.0147%" height="15" fill="rgb(227,67,19)" fg:x="28870" fg:w="15"/><text x="28.5711%" y="447.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="28.3408%" y="421" width="0.0167%" height="15" fill="rgb(233,119,31)" fg:x="28890" fg:w="17"/><text x="28.5908%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.09%)</title><rect x="28.3211%" y="469" width="0.0903%" height="15" fill="rgb(241,120,22)" fg:x="28870" fg:w="92"/><text x="28.5711%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (92 samples, 0.09%)</title><rect x="28.3211%" y="453" width="0.0903%" height="15" fill="rgb(224,102,30)" fg:x="28870" fg:w="92"/><text x="28.5711%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (77 samples, 0.08%)</title><rect x="28.3359%" y="437" width="0.0755%" height="15" fill="rgb(210,164,37)" fg:x="28885" fg:w="77"/><text x="28.5859%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (55 samples, 0.05%)</title><rect x="28.3574%" y="421" width="0.0540%" height="15" fill="rgb(226,191,16)" fg:x="28907" fg:w="55"/><text x="28.6074%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="28.3574%" y="405" width="0.0540%" height="15" fill="rgb(214,40,45)" fg:x="28907" fg:w="55"/><text x="28.6074%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="28.3574%" y="389" width="0.0540%" height="15" fill="rgb(244,29,26)" fg:x="28907" fg:w="55"/><text x="28.6074%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (97 samples, 0.10%)</title><rect x="28.3211%" y="741" width="0.0952%" height="15" fill="rgb(216,16,5)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (97 samples, 0.10%)</title><rect x="28.3211%" y="725" width="0.0952%" height="15" fill="rgb(249,76,35)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (97 samples, 0.10%)</title><rect x="28.3211%" y="709" width="0.0952%" height="15" fill="rgb(207,11,44)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (97 samples, 0.10%)</title><rect x="28.3211%" y="693" width="0.0952%" height="15" fill="rgb(228,190,49)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (97 samples, 0.10%)</title><rect x="28.3211%" y="677" width="0.0952%" height="15" fill="rgb(214,173,12)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (97 samples, 0.10%)</title><rect x="28.3211%" y="661" width="0.0952%" height="15" fill="rgb(218,26,35)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (97 samples, 0.10%)</title><rect x="28.3211%" y="645" width="0.0952%" height="15" fill="rgb(220,200,19)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (97 samples, 0.10%)</title><rect x="28.3211%" y="629" width="0.0952%" height="15" fill="rgb(239,95,49)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (97 samples, 0.10%)</title><rect x="28.3211%" y="613" width="0.0952%" height="15" fill="rgb(235,85,53)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (97 samples, 0.10%)</title><rect x="28.3211%" y="597" width="0.0952%" height="15" fill="rgb(233,133,31)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="607.50"></text></g><g><title>alloc::alloc::alloc (97 samples, 0.10%)</title><rect x="28.3211%" y="581" width="0.0952%" height="15" fill="rgb(218,25,20)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="591.50"></text></g><g><title>__rg_alloc (97 samples, 0.10%)</title><rect x="28.3211%" y="565" width="0.0952%" height="15" fill="rgb(252,210,38)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (97 samples, 0.10%)</title><rect x="28.3211%" y="549" width="0.0952%" height="15" fill="rgb(242,134,21)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="559.50"></text></g><g><title>rust_alloc (97 samples, 0.10%)</title><rect x="28.3211%" y="533" width="0.0952%" height="15" fill="rgb(213,28,48)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (97 samples, 0.10%)</title><rect x="28.3211%" y="517" width="0.0952%" height="15" fill="rgb(250,196,2)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (97 samples, 0.10%)</title><rect x="28.3211%" y="501" width="0.0952%" height="15" fill="rgb(227,5,17)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (97 samples, 0.10%)</title><rect x="28.3211%" y="485" width="0.0952%" height="15" fill="rgb(221,226,24)" fg:x="28870" fg:w="97"/><text x="28.5711%" y="495.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="28.4958%" y="453" width="0.0128%" height="15" fill="rgb(211,5,48)" fg:x="29048" fg:w="13"/><text x="28.7458%" y="463.50"></text></g><g><title>size_to_sizeclass (17 samples, 0.02%)</title><rect x="28.5124%" y="421" width="0.0167%" height="15" fill="rgb(219,150,6)" fg:x="29065" fg:w="17"/><text x="28.7624%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="28.5360%" y="357" width="0.0118%" height="15" fill="rgb(251,46,16)" fg:x="29089" fg:w="12"/><text x="28.7860%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (23 samples, 0.02%)</title><rect x="28.5320%" y="373" width="0.0226%" height="15" fill="rgb(220,204,40)" fg:x="29085" fg:w="23"/><text x="28.7820%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (109 samples, 0.11%)</title><rect x="28.5320%" y="405" width="0.1069%" height="15" fill="rgb(211,85,2)" fg:x="29085" fg:w="109"/><text x="28.7820%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (109 samples, 0.11%)</title><rect x="28.5320%" y="389" width="0.1069%" height="15" fill="rgb(229,17,7)" fg:x="29085" fg:w="109"/><text x="28.7820%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (86 samples, 0.08%)</title><rect x="28.5546%" y="373" width="0.0844%" height="15" fill="rgb(239,72,28)" fg:x="29108" fg:w="86"/><text x="28.8046%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (72 samples, 0.07%)</title><rect x="28.5683%" y="357" width="0.0706%" height="15" fill="rgb(230,47,54)" fg:x="29122" fg:w="72"/><text x="28.8183%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (72 samples, 0.07%)</title><rect x="28.5683%" y="341" width="0.0706%" height="15" fill="rgb(214,50,8)" fg:x="29122" fg:w="72"/><text x="28.8183%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (72 samples, 0.07%)</title><rect x="28.5683%" y="325" width="0.0706%" height="15" fill="rgb(216,198,43)" fg:x="29122" fg:w="72"/><text x="28.8183%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (294 samples, 0.29%)</title><rect x="28.5124%" y="453" width="0.2884%" height="15" fill="rgb(234,20,35)" fg:x="29065" fg:w="294"/><text x="28.7624%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (294 samples, 0.29%)</title><rect x="28.5124%" y="437" width="0.2884%" height="15" fill="rgb(254,45,19)" fg:x="29065" fg:w="294"/><text x="28.7624%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (277 samples, 0.27%)</title><rect x="28.5291%" y="421" width="0.2717%" height="15" fill="rgb(219,14,44)" fg:x="29082" fg:w="277"/><text x="28.7791%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (146 samples, 0.14%)</title><rect x="28.6576%" y="405" width="0.1432%" height="15" fill="rgb(217,220,26)" fg:x="29213" fg:w="146"/><text x="28.9076%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (146 samples, 0.14%)</title><rect x="28.6576%" y="389" width="0.1432%" height="15" fill="rgb(213,158,28)" fg:x="29213" fg:w="146"/><text x="28.9076%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (340 samples, 0.33%)</title><rect x="28.4742%" y="597" width="0.3335%" height="15" fill="rgb(252,51,52)" fg:x="29026" fg:w="340"/><text x="28.7242%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (340 samples, 0.33%)</title><rect x="28.4742%" y="581" width="0.3335%" height="15" fill="rgb(246,89,16)" fg:x="29026" fg:w="340"/><text x="28.7242%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (340 samples, 0.33%)</title><rect x="28.4742%" y="565" width="0.3335%" height="15" fill="rgb(216,158,49)" fg:x="29026" fg:w="340"/><text x="28.7242%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (336 samples, 0.33%)</title><rect x="28.4781%" y="549" width="0.3296%" height="15" fill="rgb(236,107,19)" fg:x="29030" fg:w="336"/><text x="28.7281%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (336 samples, 0.33%)</title><rect x="28.4781%" y="533" width="0.3296%" height="15" fill="rgb(228,185,30)" fg:x="29030" fg:w="336"/><text x="28.7281%" y="543.50"></text></g><g><title>alloc::alloc::alloc (330 samples, 0.32%)</title><rect x="28.4840%" y="517" width="0.3237%" height="15" fill="rgb(246,134,8)" fg:x="29036" fg:w="330"/><text x="28.7340%" y="527.50"></text></g><g><title>__rg_alloc (330 samples, 0.32%)</title><rect x="28.4840%" y="501" width="0.3237%" height="15" fill="rgb(214,143,50)" fg:x="29036" fg:w="330"/><text x="28.7340%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (330 samples, 0.32%)</title><rect x="28.4840%" y="485" width="0.3237%" height="15" fill="rgb(228,75,8)" fg:x="29036" fg:w="330"/><text x="28.7340%" y="495.50"></text></g><g><title>rust_alloc (318 samples, 0.31%)</title><rect x="28.4958%" y="469" width="0.3120%" height="15" fill="rgb(207,175,4)" fg:x="29048" fg:w="318"/><text x="28.7458%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (404 samples, 0.40%)</title><rect x="28.4653%" y="677" width="0.3963%" height="15" fill="rgb(205,108,24)" fg:x="29017" fg:w="404"/><text x="28.7153%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (395 samples, 0.39%)</title><rect x="28.4742%" y="661" width="0.3875%" height="15" fill="rgb(244,120,49)" fg:x="29026" fg:w="395"/><text x="28.7242%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (395 samples, 0.39%)</title><rect x="28.4742%" y="645" width="0.3875%" height="15" fill="rgb(223,47,38)" fg:x="29026" fg:w="395"/><text x="28.7242%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (395 samples, 0.39%)</title><rect x="28.4742%" y="629" width="0.3875%" height="15" fill="rgb(229,179,11)" fg:x="29026" fg:w="395"/><text x="28.7242%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (395 samples, 0.39%)</title><rect x="28.4742%" y="613" width="0.3875%" height="15" fill="rgb(231,122,1)" fg:x="29026" fg:w="395"/><text x="28.7242%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (55 samples, 0.05%)</title><rect x="28.8077%" y="597" width="0.0540%" height="15" fill="rgb(245,119,9)" fg:x="29366" fg:w="55"/><text x="29.0577%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.05%)</title><rect x="28.8077%" y="581" width="0.0540%" height="15" fill="rgb(241,163,25)" fg:x="29366" fg:w="55"/><text x="29.0577%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="28.8195%" y="565" width="0.0422%" height="15" fill="rgb(217,214,3)" fg:x="29378" fg:w="43"/><text x="29.0695%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="28.8617%" y="677" width="0.0216%" height="15" fill="rgb(240,86,28)" fg:x="29421" fg:w="22"/><text x="29.1117%" y="687.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="28.9195%" y="533" width="0.0108%" height="15" fill="rgb(215,47,9)" fg:x="29480" fg:w="11"/><text x="29.1695%" y="543.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="28.9323%" y="501" width="0.0147%" height="15" fill="rgb(252,25,45)" fg:x="29493" fg:w="15"/><text x="29.1823%" y="511.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="28.9352%" y="485" width="0.0118%" height="15" fill="rgb(251,164,9)" fg:x="29496" fg:w="12"/><text x="29.1852%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="28.9539%" y="437" width="0.0128%" height="15" fill="rgb(233,194,0)" fg:x="29515" fg:w="13"/><text x="29.2039%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (21 samples, 0.02%)</title><rect x="28.9490%" y="453" width="0.0206%" height="15" fill="rgb(249,111,24)" fg:x="29510" fg:w="21"/><text x="29.1990%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="28.9490%" y="485" width="0.0893%" height="15" fill="rgb(250,223,3)" fg:x="29510" fg:w="91"/><text x="29.1990%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (91 samples, 0.09%)</title><rect x="28.9490%" y="469" width="0.0893%" height="15" fill="rgb(236,178,37)" fg:x="29510" fg:w="91"/><text x="29.1990%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (70 samples, 0.07%)</title><rect x="28.9696%" y="453" width="0.0687%" height="15" fill="rgb(241,158,50)" fg:x="29531" fg:w="70"/><text x="29.2196%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (55 samples, 0.05%)</title><rect x="28.9843%" y="437" width="0.0540%" height="15" fill="rgb(213,121,41)" fg:x="29546" fg:w="55"/><text x="29.2343%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="28.9843%" y="421" width="0.0540%" height="15" fill="rgb(240,92,3)" fg:x="29546" fg:w="55"/><text x="29.2343%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="28.9843%" y="405" width="0.0540%" height="15" fill="rgb(205,123,3)" fg:x="29546" fg:w="55"/><text x="29.2343%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (287 samples, 0.28%)</title><rect x="28.9313%" y="533" width="0.2815%" height="15" fill="rgb(205,97,47)" fg:x="29492" fg:w="287"/><text x="29.1813%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (287 samples, 0.28%)</title><rect x="28.9313%" y="517" width="0.2815%" height="15" fill="rgb(247,152,14)" fg:x="29492" fg:w="287"/><text x="29.1813%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (271 samples, 0.27%)</title><rect x="28.9470%" y="501" width="0.2658%" height="15" fill="rgb(248,195,53)" fg:x="29508" fg:w="271"/><text x="29.1970%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (161 samples, 0.16%)</title><rect x="29.0549%" y="485" width="0.1579%" height="15" fill="rgb(226,201,16)" fg:x="29618" fg:w="161"/><text x="29.3049%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (161 samples, 0.16%)</title><rect x="29.0549%" y="469" width="0.1579%" height="15" fill="rgb(205,98,0)" fg:x="29618" fg:w="161"/><text x="29.3049%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (328 samples, 0.32%)</title><rect x="28.8989%" y="629" width="0.3218%" height="15" fill="rgb(214,191,48)" fg:x="29459" fg:w="328"/><text x="29.1489%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (328 samples, 0.32%)</title><rect x="28.8989%" y="613" width="0.3218%" height="15" fill="rgb(237,112,39)" fg:x="29459" fg:w="328"/><text x="29.1489%" y="623.50"></text></g><g><title>alloc::alloc::alloc (311 samples, 0.31%)</title><rect x="28.9156%" y="597" width="0.3051%" height="15" fill="rgb(247,203,27)" fg:x="29476" fg:w="311"/><text x="29.1656%" y="607.50"></text></g><g><title>__rg_alloc (311 samples, 0.31%)</title><rect x="28.9156%" y="581" width="0.3051%" height="15" fill="rgb(235,124,28)" fg:x="29476" fg:w="311"/><text x="29.1656%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (311 samples, 0.31%)</title><rect x="28.9156%" y="565" width="0.3051%" height="15" fill="rgb(208,207,46)" fg:x="29476" fg:w="311"/><text x="29.1656%" y="575.50"></text></g><g><title>rust_alloc (307 samples, 0.30%)</title><rect x="28.9195%" y="549" width="0.3012%" height="15" fill="rgb(234,176,4)" fg:x="29480" fg:w="307"/><text x="29.1695%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (16 samples, 0.02%)</title><rect x="29.2207%" y="629" width="0.0157%" height="15" fill="rgb(230,133,28)" fg:x="29787" fg:w="16"/><text x="29.4707%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (370 samples, 0.36%)</title><rect x="28.8832%" y="677" width="0.3630%" height="15" fill="rgb(211,137,40)" fg:x="29443" fg:w="370"/><text x="29.1332%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (356 samples, 0.35%)</title><rect x="28.8970%" y="661" width="0.3492%" height="15" fill="rgb(254,35,13)" fg:x="29457" fg:w="356"/><text x="29.1470%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (354 samples, 0.35%)</title><rect x="28.8989%" y="645" width="0.3473%" height="15" fill="rgb(225,49,51)" fg:x="29459" fg:w="354"/><text x="29.1489%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (819 samples, 0.80%)</title><rect x="28.4546%" y="693" width="0.8034%" height="15" fill="rgb(251,10,15)" fg:x="29006" fg:w="819"/><text x="28.7046%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.01%)</title><rect x="29.2462%" y="677" width="0.0118%" height="15" fill="rgb(228,207,15)" fg:x="29813" fg:w="12"/><text x="29.4962%" y="687.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (961 samples, 0.94%)</title><rect x="28.3211%" y="757" width="0.9427%" height="15" fill="rgb(241,99,19)" fg:x="28870" fg:w="961"/><text x="28.5711%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (864 samples, 0.85%)</title><rect x="28.4163%" y="741" width="0.8476%" height="15" fill="rgb(207,104,49)" fg:x="28967" fg:w="864"/><text x="28.6663%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (825 samples, 0.81%)</title><rect x="28.4546%" y="725" width="0.8093%" height="15" fill="rgb(234,99,18)" fg:x="29006" fg:w="825"/><text x="28.7046%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (825 samples, 0.81%)</title><rect x="28.4546%" y="709" width="0.8093%" height="15" fill="rgb(213,191,49)" fg:x="29006" fg:w="825"/><text x="28.7046%" y="719.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (41 samples, 0.04%)</title><rect x="29.3011%" y="373" width="0.0402%" height="15" fill="rgb(210,226,19)" fg:x="29869" fg:w="41"/><text x="29.5511%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (41 samples, 0.04%)</title><rect x="29.3011%" y="357" width="0.0402%" height="15" fill="rgb(229,97,18)" fg:x="29869" fg:w="41"/><text x="29.5511%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (92 samples, 0.09%)</title><rect x="29.2825%" y="421" width="0.0903%" height="15" fill="rgb(211,167,15)" fg:x="29850" fg:w="92"/><text x="29.5325%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (92 samples, 0.09%)</title><rect x="29.2825%" y="405" width="0.0903%" height="15" fill="rgb(210,169,34)" fg:x="29850" fg:w="92"/><text x="29.5325%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (84 samples, 0.08%)</title><rect x="29.2904%" y="389" width="0.0824%" height="15" fill="rgb(241,121,31)" fg:x="29858" fg:w="84"/><text x="29.5404%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (32 samples, 0.03%)</title><rect x="29.3414%" y="373" width="0.0314%" height="15" fill="rgb(232,40,11)" fg:x="29910" fg:w="32"/><text x="29.5914%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (32 samples, 0.03%)</title><rect x="29.3414%" y="357" width="0.0314%" height="15" fill="rgb(205,86,26)" fg:x="29910" fg:w="32"/><text x="29.5914%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (111 samples, 0.11%)</title><rect x="29.2825%" y="437" width="0.1089%" height="15" fill="rgb(231,126,28)" fg:x="29850" fg:w="111"/><text x="29.5325%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="29.3728%" y="421" width="0.0186%" height="15" fill="rgb(219,221,18)" fg:x="29942" fg:w="19"/><text x="29.6228%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="29.3728%" y="405" width="0.0186%" height="15" fill="rgb(211,40,0)" fg:x="29942" fg:w="19"/><text x="29.6228%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (19 samples, 0.02%)</title><rect x="29.3728%" y="389" width="0.0186%" height="15" fill="rgb(239,85,43)" fg:x="29942" fg:w="19"/><text x="29.6228%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="29.3728%" y="373" width="0.0186%" height="15" fill="rgb(231,55,21)" fg:x="29942" fg:w="19"/><text x="29.6228%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (162 samples, 0.16%)</title><rect x="29.2639%" y="453" width="0.1589%" height="15" fill="rgb(225,184,43)" fg:x="29831" fg:w="162"/><text x="29.5139%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (29 samples, 0.03%)</title><rect x="29.3943%" y="437" width="0.0284%" height="15" fill="rgb(251,158,41)" fg:x="29964" fg:w="29"/><text x="29.6443%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (29 samples, 0.03%)</title><rect x="29.3943%" y="421" width="0.0284%" height="15" fill="rgb(234,159,37)" fg:x="29964" fg:w="29"/><text x="29.6443%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (29 samples, 0.03%)</title><rect x="29.3943%" y="405" width="0.0284%" height="15" fill="rgb(216,204,22)" fg:x="29964" fg:w="29"/><text x="29.6443%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (29 samples, 0.03%)</title><rect x="29.3943%" y="389" width="0.0284%" height="15" fill="rgb(214,17,3)" fg:x="29964" fg:w="29"/><text x="29.6443%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (87 samples, 0.09%)</title><rect x="29.4866%" y="437" width="0.0853%" height="15" fill="rgb(212,111,17)" fg:x="30058" fg:w="87"/><text x="29.7366%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (851 samples, 0.83%)</title><rect x="29.2639%" y="485" width="0.8348%" height="15" fill="rgb(221,157,24)" fg:x="29831" fg:w="851"/><text x="29.5139%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (851 samples, 0.83%)</title><rect x="29.2639%" y="469" width="0.8348%" height="15" fill="rgb(252,16,13)" fg:x="29831" fg:w="851"/><text x="29.5139%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (689 samples, 0.68%)</title><rect x="29.4228%" y="453" width="0.6759%" height="15" fill="rgb(221,62,2)" fg:x="29993" fg:w="689"/><text x="29.6728%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (537 samples, 0.53%)</title><rect x="29.5719%" y="437" width="0.5268%" height="15" fill="rgb(247,87,22)" fg:x="30145" fg:w="537"/><text x="29.8219%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (537 samples, 0.53%)</title><rect x="29.5719%" y="421" width="0.5268%" height="15" fill="rgb(215,73,9)" fg:x="30145" fg:w="537"/><text x="29.8219%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (537 samples, 0.53%)</title><rect x="29.5719%" y="405" width="0.5268%" height="15" fill="rgb(207,175,33)" fg:x="30145" fg:w="537"/><text x="29.8219%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (24 samples, 0.02%)</title><rect x="30.0987%" y="437" width="0.0235%" height="15" fill="rgb(243,129,54)" fg:x="30682" fg:w="24"/><text x="30.3487%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (20 samples, 0.02%)</title><rect x="30.1026%" y="421" width="0.0196%" height="15" fill="rgb(227,119,45)" fg:x="30686" fg:w="20"/><text x="30.3526%" y="431.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (13 samples, 0.01%)</title><rect x="30.1095%" y="405" width="0.0128%" height="15" fill="rgb(205,109,36)" fg:x="30693" fg:w="13"/><text x="30.3595%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.03%)</title><rect x="30.1222%" y="437" width="0.0255%" height="15" fill="rgb(205,6,39)" fg:x="30706" fg:w="26"/><text x="30.3722%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (24 samples, 0.02%)</title><rect x="30.1242%" y="421" width="0.0235%" height="15" fill="rgb(221,32,16)" fg:x="30708" fg:w="24"/><text x="30.3742%" y="431.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (13,082 samples, 12.83%)</title><rect x="17.3164%" y="821" width="12.8333%" height="15" fill="rgb(228,144,50)" fg:x="17652" fg:w="13082"/><text x="17.5664%" y="831.50">tremor_runtime::con..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,864 samples, 1.83%)</title><rect x="28.3211%" y="805" width="1.8286%" height="15" fill="rgb(229,201,53)" fg:x="28870" fg:w="1864"/><text x="28.5711%" y="815.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,864 samples, 1.83%)</title><rect x="28.3211%" y="789" width="1.8286%" height="15" fill="rgb(249,153,27)" fg:x="28870" fg:w="1864"/><text x="28.5711%" y="799.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (1,864 samples, 1.83%)</title><rect x="28.3211%" y="773" width="1.8286%" height="15" fill="rgb(227,106,25)" fg:x="28870" fg:w="1864"/><text x="28.5711%" y="783.50">&lt;..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (903 samples, 0.89%)</title><rect x="29.2639%" y="757" width="0.8858%" height="15" fill="rgb(230,65,29)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (903 samples, 0.89%)</title><rect x="29.2639%" y="741" width="0.8858%" height="15" fill="rgb(221,57,46)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (903 samples, 0.89%)</title><rect x="29.2639%" y="725" width="0.8858%" height="15" fill="rgb(229,161,17)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (903 samples, 0.89%)</title><rect x="29.2639%" y="709" width="0.8858%" height="15" fill="rgb(222,213,11)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (903 samples, 0.89%)</title><rect x="29.2639%" y="693" width="0.8858%" height="15" fill="rgb(235,35,13)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (903 samples, 0.89%)</title><rect x="29.2639%" y="677" width="0.8858%" height="15" fill="rgb(233,158,34)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (903 samples, 0.89%)</title><rect x="29.2639%" y="661" width="0.8858%" height="15" fill="rgb(215,151,48)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (903 samples, 0.89%)</title><rect x="29.2639%" y="645" width="0.8858%" height="15" fill="rgb(229,84,14)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (903 samples, 0.89%)</title><rect x="29.2639%" y="629" width="0.8858%" height="15" fill="rgb(229,68,14)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (903 samples, 0.89%)</title><rect x="29.2639%" y="613" width="0.8858%" height="15" fill="rgb(243,106,26)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="623.50"></text></g><g><title>alloc::alloc::alloc (903 samples, 0.89%)</title><rect x="29.2639%" y="597" width="0.8858%" height="15" fill="rgb(206,45,38)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="607.50"></text></g><g><title>__rg_alloc (903 samples, 0.89%)</title><rect x="29.2639%" y="581" width="0.8858%" height="15" fill="rgb(226,6,15)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (903 samples, 0.89%)</title><rect x="29.2639%" y="565" width="0.8858%" height="15" fill="rgb(232,22,54)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="575.50"></text></g><g><title>rust_alloc (903 samples, 0.89%)</title><rect x="29.2639%" y="549" width="0.8858%" height="15" fill="rgb(229,222,32)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (903 samples, 0.89%)</title><rect x="29.2639%" y="533" width="0.8858%" height="15" fill="rgb(228,62,29)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (903 samples, 0.89%)</title><rect x="29.2639%" y="517" width="0.8858%" height="15" fill="rgb(251,103,34)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (903 samples, 0.89%)</title><rect x="29.2639%" y="501" width="0.8858%" height="15" fill="rgb(233,12,30)" fg:x="29831" fg:w="903"/><text x="29.5139%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="30.0987%" y="485" width="0.0510%" height="15" fill="rgb(238,52,0)" fg:x="30682" fg:w="52"/><text x="30.3487%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="30.0987%" y="469" width="0.0510%" height="15" fill="rgb(223,98,5)" fg:x="30682" fg:w="52"/><text x="30.3487%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (52 samples, 0.05%)</title><rect x="30.0987%" y="453" width="0.0510%" height="15" fill="rgb(228,75,37)" fg:x="30682" fg:w="52"/><text x="30.3487%" y="463.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="30.3106%" y="773" width="0.0137%" height="15" fill="rgb(205,115,49)" fg:x="30898" fg:w="14"/><text x="30.5606%" y="783.50"></text></g><g><title>rust_dealloc (42 samples, 0.04%)</title><rect x="30.3380%" y="709" width="0.0412%" height="15" fill="rgb(250,154,43)" fg:x="30926" fg:w="42"/><text x="30.5880%" y="719.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (33 samples, 0.03%)</title><rect x="30.4950%" y="677" width="0.0324%" height="15" fill="rgb(226,43,29)" fg:x="31086" fg:w="33"/><text x="30.7450%" y="687.50"></text></g><g><title> (33 samples, 0.03%)</title><rect x="30.4950%" y="661" width="0.0324%" height="15" fill="rgb(249,228,39)" fg:x="31086" fg:w="33"/><text x="30.7450%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (152 samples, 0.15%)</title><rect x="30.3871%" y="709" width="0.1491%" height="15" fill="rgb(216,79,43)" fg:x="30976" fg:w="152"/><text x="30.6371%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (126 samples, 0.12%)</title><rect x="30.4126%" y="693" width="0.1236%" height="15" fill="rgb(228,95,12)" fg:x="31002" fg:w="126"/><text x="30.6626%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (272 samples, 0.27%)</title><rect x="30.3243%" y="741" width="0.2668%" height="15" fill="rgb(249,221,15)" fg:x="30912" fg:w="272"/><text x="30.5743%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (272 samples, 0.27%)</title><rect x="30.3243%" y="725" width="0.2668%" height="15" fill="rgb(233,34,13)" fg:x="30912" fg:w="272"/><text x="30.5743%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (55 samples, 0.05%)</title><rect x="30.5372%" y="709" width="0.0540%" height="15" fill="rgb(214,103,39)" fg:x="31129" fg:w="55"/><text x="30.7872%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (277 samples, 0.27%)</title><rect x="30.3243%" y="773" width="0.2717%" height="15" fill="rgb(251,126,39)" fg:x="30912" fg:w="277"/><text x="30.5743%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (277 samples, 0.27%)</title><rect x="30.3243%" y="757" width="0.2717%" height="15" fill="rgb(214,216,36)" fg:x="30912" fg:w="277"/><text x="30.5743%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (300 samples, 0.29%)</title><rect x="30.3037%" y="789" width="0.2943%" height="15" fill="rgb(220,221,8)" fg:x="30891" fg:w="300"/><text x="30.5537%" y="799.50"></text></g><g><title>rust_dealloc (337 samples, 0.33%)</title><rect x="30.2880%" y="805" width="0.3306%" height="15" fill="rgb(240,216,3)" fg:x="30875" fg:w="337"/><text x="30.5380%" y="815.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (21 samples, 0.02%)</title><rect x="30.5980%" y="789" width="0.0206%" height="15" fill="rgb(232,218,17)" fg:x="31191" fg:w="21"/><text x="30.8480%" y="799.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (48 samples, 0.05%)</title><rect x="30.6284%" y="757" width="0.0471%" height="15" fill="rgb(229,163,45)" fg:x="31222" fg:w="48"/><text x="30.8784%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (42 samples, 0.04%)</title><rect x="30.6343%" y="741" width="0.0412%" height="15" fill="rgb(231,110,42)" fg:x="31228" fg:w="42"/><text x="30.8843%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="30.6343%" y="725" width="0.0412%" height="15" fill="rgb(208,170,48)" fg:x="31228" fg:w="42"/><text x="30.8843%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (42 samples, 0.04%)</title><rect x="30.6343%" y="709" width="0.0412%" height="15" fill="rgb(239,116,25)" fg:x="31228" fg:w="42"/><text x="30.8843%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (59 samples, 0.06%)</title><rect x="30.6186%" y="789" width="0.0579%" height="15" fill="rgb(219,200,50)" fg:x="31212" fg:w="59"/><text x="30.8686%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (59 samples, 0.06%)</title><rect x="30.6186%" y="773" width="0.0579%" height="15" fill="rgb(245,200,0)" fg:x="31212" fg:w="59"/><text x="30.8686%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (542 samples, 0.53%)</title><rect x="30.1497%" y="821" width="0.5317%" height="15" fill="rgb(245,119,33)" fg:x="30734" fg:w="542"/><text x="30.3997%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (64 samples, 0.06%)</title><rect x="30.6186%" y="805" width="0.0628%" height="15" fill="rgb(231,125,12)" fg:x="31212" fg:w="64"/><text x="30.8686%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="31.5702%" y="805" width="0.0314%" height="15" fill="rgb(216,96,41)" fg:x="32182" fg:w="32"/><text x="31.8202%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.02%)</title><rect x="31.5859%" y="789" width="0.0157%" height="15" fill="rgb(248,43,45)" fg:x="32198" fg:w="16"/><text x="31.8359%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="31.7203%" y="789" width="0.0108%" height="15" fill="rgb(217,222,7)" fg:x="32335" fg:w="11"/><text x="31.9703%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (607 samples, 0.60%)</title><rect x="32.0489%" y="773" width="0.5955%" height="15" fill="rgb(233,28,6)" fg:x="32670" fg:w="607"/><text x="32.2989%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (515 samples, 0.51%)</title><rect x="32.6444%" y="773" width="0.5052%" height="15" fill="rgb(231,218,15)" fg:x="33277" fg:w="515"/><text x="32.8944%" y="783.50"></text></g><g><title>core::ptr::write (437 samples, 0.43%)</title><rect x="32.7209%" y="757" width="0.4287%" height="15" fill="rgb(226,171,48)" fg:x="33355" fg:w="437"/><text x="32.9709%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (436 samples, 0.43%)</title><rect x="32.7219%" y="741" width="0.4277%" height="15" fill="rgb(235,201,9)" fg:x="33356" fg:w="436"/><text x="32.9719%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (61 samples, 0.06%)</title><rect x="33.1496%" y="773" width="0.0598%" height="15" fill="rgb(217,80,15)" fg:x="33792" fg:w="61"/><text x="33.3996%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (27 samples, 0.03%)</title><rect x="33.2369%" y="741" width="0.0265%" height="15" fill="rgb(219,152,8)" fg:x="33881" fg:w="27"/><text x="33.4869%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (27 samples, 0.03%)</title><rect x="33.2369%" y="725" width="0.0265%" height="15" fill="rgb(243,107,38)" fg:x="33881" fg:w="27"/><text x="33.4869%" y="735.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (899 samples, 0.88%)</title><rect x="33.2310%" y="757" width="0.8819%" height="15" fill="rgb(231,17,5)" fg:x="33875" fg:w="899"/><text x="33.4810%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (861 samples, 0.84%)</title><rect x="33.2683%" y="741" width="0.8446%" height="15" fill="rgb(209,25,54)" fg:x="33913" fg:w="861"/><text x="33.5183%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (861 samples, 0.84%)</title><rect x="33.2683%" y="725" width="0.8446%" height="15" fill="rgb(219,0,2)" fg:x="33913" fg:w="861"/><text x="33.5183%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (861 samples, 0.84%)</title><rect x="33.2683%" y="709" width="0.8446%" height="15" fill="rgb(246,9,5)" fg:x="33913" fg:w="861"/><text x="33.5183%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (861 samples, 0.84%)</title><rect x="33.2683%" y="693" width="0.8446%" height="15" fill="rgb(226,159,4)" fg:x="33913" fg:w="861"/><text x="33.5183%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (861 samples, 0.84%)</title><rect x="33.2683%" y="677" width="0.8446%" height="15" fill="rgb(219,175,34)" fg:x="33913" fg:w="861"/><text x="33.5183%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (733 samples, 0.72%)</title><rect x="33.3938%" y="661" width="0.7191%" height="15" fill="rgb(236,10,46)" fg:x="34041" fg:w="733"/><text x="33.6438%" y="671.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (938 samples, 0.92%)</title><rect x="33.2094%" y="773" width="0.9202%" height="15" fill="rgb(240,211,16)" fg:x="33853" fg:w="938"/><text x="33.4594%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (17 samples, 0.02%)</title><rect x="34.1129%" y="757" width="0.0167%" height="15" fill="rgb(205,3,43)" fg:x="34774" fg:w="17"/><text x="34.3629%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="34.8467%" y="741" width="0.0255%" height="15" fill="rgb(245,7,22)" fg:x="35522" fg:w="26"/><text x="35.0967%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (75 samples, 0.07%)</title><rect x="34.8722%" y="741" width="0.0736%" height="15" fill="rgb(239,132,32)" fg:x="35548" fg:w="75"/><text x="35.1222%" y="751.50"></text></g><g><title>core::ptr::read (40 samples, 0.04%)</title><rect x="34.9065%" y="725" width="0.0392%" height="15" fill="rgb(228,202,34)" fg:x="35583" fg:w="40"/><text x="35.1565%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.02%)</title><rect x="34.9497%" y="725" width="0.0167%" height="15" fill="rgb(254,200,22)" fg:x="35627" fg:w="17"/><text x="35.1997%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.02%)</title><rect x="34.9497%" y="709" width="0.0167%" height="15" fill="rgb(219,10,39)" fg:x="35627" fg:w="17"/><text x="35.1997%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (464 samples, 0.46%)</title><rect x="34.9458%" y="741" width="0.4552%" height="15" fill="rgb(226,210,39)" fg:x="35623" fg:w="464"/><text x="35.1958%" y="751.50"></text></g><g><title>core::ptr::write (443 samples, 0.43%)</title><rect x="34.9664%" y="725" width="0.4346%" height="15" fill="rgb(208,219,16)" fg:x="35644" fg:w="443"/><text x="35.2164%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (419 samples, 0.41%)</title><rect x="34.9899%" y="709" width="0.4110%" height="15" fill="rgb(216,158,51)" fg:x="35668" fg:w="419"/><text x="35.2399%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (14 samples, 0.01%)</title><rect x="35.4009%" y="741" width="0.0137%" height="15" fill="rgb(233,14,44)" fg:x="36087" fg:w="14"/><text x="35.6509%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="35.4009%" y="725" width="0.0137%" height="15" fill="rgb(237,97,39)" fg:x="36087" fg:w="14"/><text x="35.6509%" y="735.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,288 samples, 1.26%)</title><rect x="34.1531%" y="757" width="1.2635%" height="15" fill="rgb(218,198,43)" fg:x="34815" fg:w="1288"/><text x="34.4031%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,325 samples, 1.30%)</title><rect x="34.1296%" y="773" width="1.2998%" height="15" fill="rgb(231,104,20)" fg:x="34791" fg:w="1325"/><text x="34.3796%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (13 samples, 0.01%)</title><rect x="35.4166%" y="757" width="0.0128%" height="15" fill="rgb(254,36,13)" fg:x="36103" fg:w="13"/><text x="35.6666%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,778 samples, 3.71%)</title><rect x="31.7311%" y="789" width="3.7062%" height="15" fill="rgb(248,14,50)" fg:x="32346" fg:w="3778"/><text x="31.9811%" y="799.50">trem..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (111 samples, 0.11%)</title><rect x="35.4372%" y="789" width="0.1089%" height="15" fill="rgb(217,107,29)" fg:x="36124" fg:w="111"/><text x="35.6872%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,081 samples, 4.00%)</title><rect x="31.6045%" y="805" width="4.0034%" height="15" fill="rgb(251,169,33)" fg:x="32217" fg:w="4081"/><text x="31.8545%" y="815.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (63 samples, 0.06%)</title><rect x="35.5461%" y="789" width="0.0618%" height="15" fill="rgb(217,108,32)" fg:x="36235" fg:w="63"/><text x="35.7961%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,904 samples, 1.87%)</title><rect x="35.6079%" y="805" width="1.8678%" height="15" fill="rgb(219,66,42)" fg:x="36298" fg:w="1904"/><text x="35.8579%" y="815.50">_..</text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="37.4787%" y="789" width="0.0383%" height="15" fill="rgb(206,180,7)" fg:x="38205" fg:w="39"/><text x="37.7287%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (43 samples, 0.04%)</title><rect x="37.4787%" y="805" width="0.0422%" height="15" fill="rgb(208,226,31)" fg:x="38205" fg:w="43"/><text x="37.7287%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="37.5307%" y="805" width="0.0128%" height="15" fill="rgb(218,26,49)" fg:x="38258" fg:w="13"/><text x="37.7807%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="37.5307%" y="789" width="0.0128%" height="15" fill="rgb(233,197,48)" fg:x="38258" fg:w="13"/><text x="37.7807%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1157" width="29.0461%" height="15" fill="rgb(252,181,51)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1167.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1141" width="29.0461%" height="15" fill="rgb(253,90,19)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1151.50">async_global_executor::reactor::block_on::{{clo..</text></g><g><title>async_io::driver::block_on (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1125" width="29.0461%" height="15" fill="rgb(215,171,30)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1135.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1109" width="29.0461%" height="15" fill="rgb(214,222,9)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1119.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1093" width="29.0461%" height="15" fill="rgb(223,3,22)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1103.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>async_executor::Executor::run::{{closure}} (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1077" width="29.0461%" height="15" fill="rgb(225,196,46)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1087.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1061" width="29.0461%" height="15" fill="rgb(209,110,37)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1071.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1045" width="29.0461%" height="15" fill="rgb(249,89,12)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1055.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1029" width="29.0461%" height="15" fill="rgb(226,27,33)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1039.50">async_executor::Executor::run::{{closure}}::{{c..</text></g><g><title>async_task::runnable::Runnable::run (29,609 samples, 29.05%)</title><rect x="8.5052%" y="1013" width="29.0461%" height="15" fill="rgb(213,82,22)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1023.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (29,609 samples, 29.05%)</title><rect x="8.5052%" y="997" width="29.0461%" height="15" fill="rgb(248,140,0)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="1007.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (29,609 samples, 29.05%)</title><rect x="8.5052%" y="981" width="29.0461%" height="15" fill="rgb(228,106,3)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,609 samples, 29.05%)</title><rect x="8.5052%" y="965" width="29.0461%" height="15" fill="rgb(209,23,37)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="975.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (29,609 samples, 29.05%)</title><rect x="8.5052%" y="949" width="29.0461%" height="15" fill="rgb(241,93,50)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="959.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (29,609 samples, 29.05%)</title><rect x="8.5052%" y="933" width="29.0461%" height="15" fill="rgb(253,46,43)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="943.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (29,609 samples, 29.05%)</title><rect x="8.5052%" y="917" width="29.0461%" height="15" fill="rgb(226,206,43)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="927.50">async_std::task::task_locals_wrapper::TaskLocal..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29,609 samples, 29.05%)</title><rect x="8.5052%" y="901" width="29.0461%" height="15" fill="rgb(217,54,7)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="911.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29,609 samples, 29.05%)</title><rect x="8.5052%" y="885" width="29.0461%" height="15" fill="rgb(223,5,52)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="895.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (29,609 samples, 29.05%)</title><rect x="8.5052%" y="869" width="29.0461%" height="15" fill="rgb(206,52,46)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="879.50">async_std::task::task_locals_wrapper::TaskLocal..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (29,609 samples, 29.05%)</title><rect x="8.5052%" y="853" width="29.0461%" height="15" fill="rgb(253,136,11)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="863.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,609 samples, 29.05%)</title><rect x="8.5052%" y="837" width="29.0461%" height="15" fill="rgb(208,106,33)" fg:x="8670" fg:w="29609"/><text x="8.7552%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as ..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (7,003 samples, 6.87%)</title><rect x="30.6814%" y="821" width="6.8699%" height="15" fill="rgb(206,54,4)" fg:x="31276" fg:w="7003"/><text x="30.9314%" y="831.50">tremor_ru..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (796 samples, 0.78%)</title><rect x="37.6121%" y="597" width="0.7809%" height="15" fill="rgb(213,3,15)" fg:x="38341" fg:w="796"/><text x="37.8621%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (860 samples, 0.84%)</title><rect x="37.5513%" y="693" width="0.8437%" height="15" fill="rgb(252,211,39)" fg:x="38279" fg:w="860"/><text x="37.8013%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (860 samples, 0.84%)</title><rect x="37.5513%" y="677" width="0.8437%" height="15" fill="rgb(223,6,36)" fg:x="38279" fg:w="860"/><text x="37.8013%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (860 samples, 0.84%)</title><rect x="37.5513%" y="661" width="0.8437%" height="15" fill="rgb(252,169,45)" fg:x="38279" fg:w="860"/><text x="37.8013%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (860 samples, 0.84%)</title><rect x="37.5513%" y="645" width="0.8437%" height="15" fill="rgb(212,48,26)" fg:x="38279" fg:w="860"/><text x="37.8013%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (852 samples, 0.84%)</title><rect x="37.5591%" y="629" width="0.8358%" height="15" fill="rgb(251,102,48)" fg:x="38287" fg:w="852"/><text x="37.8091%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (852 samples, 0.84%)</title><rect x="37.5591%" y="613" width="0.8358%" height="15" fill="rgb(243,208,16)" fg:x="38287" fg:w="852"/><text x="37.8091%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="38.3998%" y="373" width="0.0118%" height="15" fill="rgb(219,96,24)" fg:x="39144" fg:w="12"/><text x="38.6498%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="38.4185%" y="357" width="0.0167%" height="15" fill="rgb(219,33,29)" fg:x="39163" fg:w="17"/><text x="38.6685%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (142 samples, 0.14%)</title><rect x="38.3998%" y="405" width="0.1393%" height="15" fill="rgb(223,176,5)" fg:x="39144" fg:w="142"/><text x="38.6498%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (142 samples, 0.14%)</title><rect x="38.3998%" y="389" width="0.1393%" height="15" fill="rgb(228,140,14)" fg:x="39144" fg:w="142"/><text x="38.6498%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (130 samples, 0.13%)</title><rect x="38.4116%" y="373" width="0.1275%" height="15" fill="rgb(217,179,31)" fg:x="39156" fg:w="130"/><text x="38.6616%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (106 samples, 0.10%)</title><rect x="38.4351%" y="357" width="0.1040%" height="15" fill="rgb(230,9,30)" fg:x="39180" fg:w="106"/><text x="38.6851%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (106 samples, 0.10%)</title><rect x="38.4351%" y="341" width="0.1040%" height="15" fill="rgb(230,136,20)" fg:x="39180" fg:w="106"/><text x="38.6851%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (106 samples, 0.10%)</title><rect x="38.4351%" y="325" width="0.1040%" height="15" fill="rgb(215,210,22)" fg:x="39180" fg:w="106"/><text x="38.6851%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (147 samples, 0.14%)</title><rect x="38.3998%" y="645" width="0.1442%" height="15" fill="rgb(218,43,5)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (147 samples, 0.14%)</title><rect x="38.3998%" y="629" width="0.1442%" height="15" fill="rgb(216,11,5)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="639.50"></text></g><g><title>value_trait::Builder::object (147 samples, 0.14%)</title><rect x="38.3998%" y="613" width="0.1442%" height="15" fill="rgb(209,82,29)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (147 samples, 0.14%)</title><rect x="38.3998%" y="597" width="0.1442%" height="15" fill="rgb(244,115,12)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (147 samples, 0.14%)</title><rect x="38.3998%" y="581" width="0.1442%" height="15" fill="rgb(222,82,18)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (147 samples, 0.14%)</title><rect x="38.3998%" y="565" width="0.1442%" height="15" fill="rgb(249,227,8)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (147 samples, 0.14%)</title><rect x="38.3998%" y="549" width="0.1442%" height="15" fill="rgb(253,141,45)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (147 samples, 0.14%)</title><rect x="38.3998%" y="533" width="0.1442%" height="15" fill="rgb(234,184,4)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="543.50"></text></g><g><title>alloc::alloc::alloc (147 samples, 0.14%)</title><rect x="38.3998%" y="517" width="0.1442%" height="15" fill="rgb(218,194,23)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="527.50"></text></g><g><title>__rg_alloc (147 samples, 0.14%)</title><rect x="38.3998%" y="501" width="0.1442%" height="15" fill="rgb(235,66,41)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (147 samples, 0.14%)</title><rect x="38.3998%" y="485" width="0.1442%" height="15" fill="rgb(245,217,1)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="495.50"></text></g><g><title>rust_alloc (147 samples, 0.14%)</title><rect x="38.3998%" y="469" width="0.1442%" height="15" fill="rgb(229,91,1)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (147 samples, 0.14%)</title><rect x="38.3998%" y="453" width="0.1442%" height="15" fill="rgb(207,101,30)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (147 samples, 0.14%)</title><rect x="38.3998%" y="437" width="0.1442%" height="15" fill="rgb(223,82,49)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (147 samples, 0.14%)</title><rect x="38.3998%" y="421" width="0.1442%" height="15" fill="rgb(218,167,17)" fg:x="39144" fg:w="147"/><text x="38.6498%" y="431.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="38.6097%" y="613" width="0.0128%" height="15" fill="rgb(208,103,14)" fg:x="39358" fg:w="13"/><text x="38.8597%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="38.6097%" y="597" width="0.0128%" height="15" fill="rgb(238,20,8)" fg:x="39358" fg:w="13"/><text x="38.8597%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="38.6097%" y="581" width="0.0128%" height="15" fill="rgb(218,80,54)" fg:x="39358" fg:w="13"/><text x="38.8597%" y="591.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="38.6097%" y="565" width="0.0128%" height="15" fill="rgb(240,144,17)" fg:x="39358" fg:w="13"/><text x="38.8597%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="38.6097%" y="549" width="0.0128%" height="15" fill="rgb(245,27,50)" fg:x="39358" fg:w="13"/><text x="38.8597%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="38.6382%" y="549" width="0.0147%" height="15" fill="rgb(251,51,7)" fg:x="39387" fg:w="15"/><text x="38.8882%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (14 samples, 0.01%)</title><rect x="38.6392%" y="533" width="0.0137%" height="15" fill="rgb(245,217,29)" fg:x="39388" fg:w="14"/><text x="38.8892%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (124 samples, 0.12%)</title><rect x="38.5499%" y="645" width="0.1216%" height="15" fill="rgb(221,176,29)" fg:x="39297" fg:w="124"/><text x="38.7999%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (69 samples, 0.07%)</title><rect x="38.6039%" y="629" width="0.0677%" height="15" fill="rgb(212,180,24)" fg:x="39352" fg:w="69"/><text x="38.8539%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (50 samples, 0.05%)</title><rect x="38.6225%" y="613" width="0.0490%" height="15" fill="rgb(254,24,2)" fg:x="39371" fg:w="50"/><text x="38.8725%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (50 samples, 0.05%)</title><rect x="38.6225%" y="597" width="0.0490%" height="15" fill="rgb(230,100,2)" fg:x="39371" fg:w="50"/><text x="38.8725%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (34 samples, 0.03%)</title><rect x="38.6382%" y="581" width="0.0334%" height="15" fill="rgb(219,142,25)" fg:x="39387" fg:w="34"/><text x="38.8882%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (34 samples, 0.03%)</title><rect x="38.6382%" y="565" width="0.0334%" height="15" fill="rgb(240,73,43)" fg:x="39387" fg:w="34"/><text x="38.8882%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (19 samples, 0.02%)</title><rect x="38.6529%" y="549" width="0.0186%" height="15" fill="rgb(214,114,15)" fg:x="39402" fg:w="19"/><text x="38.9029%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="38.6529%" y="533" width="0.0186%" height="15" fill="rgb(207,130,4)" fg:x="39402" fg:w="19"/><text x="38.9029%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.02%)</title><rect x="38.6539%" y="517" width="0.0177%" height="15" fill="rgb(221,25,40)" fg:x="39403" fg:w="18"/><text x="38.9039%" y="527.50"></text></g><g><title>core::time::Duration::as_nanos (13 samples, 0.01%)</title><rect x="38.7108%" y="629" width="0.0128%" height="15" fill="rgb(241,184,7)" fg:x="39461" fg:w="13"/><text x="38.9608%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (64 samples, 0.06%)</title><rect x="38.7942%" y="581" width="0.0628%" height="15" fill="rgb(235,159,4)" fg:x="39546" fg:w="64"/><text x="39.0442%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (64 samples, 0.06%)</title><rect x="38.7942%" y="565" width="0.0628%" height="15" fill="rgb(214,87,48)" fg:x="39546" fg:w="64"/><text x="39.0442%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (63 samples, 0.06%)</title><rect x="38.7951%" y="549" width="0.0618%" height="15" fill="rgb(246,198,24)" fg:x="39547" fg:w="63"/><text x="39.0451%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (63 samples, 0.06%)</title><rect x="38.7951%" y="533" width="0.0618%" height="15" fill="rgb(209,66,40)" fg:x="39547" fg:w="63"/><text x="39.0451%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (63 samples, 0.06%)</title><rect x="38.7951%" y="517" width="0.0618%" height="15" fill="rgb(233,147,39)" fg:x="39547" fg:w="63"/><text x="39.0451%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (31 samples, 0.03%)</title><rect x="38.8265%" y="501" width="0.0304%" height="15" fill="rgb(231,145,52)" fg:x="39579" fg:w="31"/><text x="39.0765%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (148 samples, 0.15%)</title><rect x="38.7235%" y="613" width="0.1452%" height="15" fill="rgb(206,20,26)" fg:x="39474" fg:w="148"/><text x="38.9735%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (148 samples, 0.15%)</title><rect x="38.7235%" y="597" width="0.1452%" height="15" fill="rgb(238,220,4)" fg:x="39474" fg:w="148"/><text x="38.9735%" y="607.50"></text></g><g><title>core::time::Duration::new (12 samples, 0.01%)</title><rect x="38.8570%" y="581" width="0.0118%" height="15" fill="rgb(252,195,42)" fg:x="39610" fg:w="12"/><text x="39.1070%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (160 samples, 0.16%)</title><rect x="38.7235%" y="629" width="0.1570%" height="15" fill="rgb(209,10,6)" fg:x="39474" fg:w="160"/><text x="38.9735%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (12 samples, 0.01%)</title><rect x="38.8687%" y="613" width="0.0118%" height="15" fill="rgb(229,3,52)" fg:x="39622" fg:w="12"/><text x="39.1187%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (965 samples, 0.95%)</title><rect x="38.6814%" y="645" width="0.9467%" height="15" fill="rgb(253,49,37)" fg:x="39431" fg:w="965"/><text x="38.9314%" y="655.50"></text></g><g><title>std::time::SystemTime::now (762 samples, 0.75%)</title><rect x="38.8805%" y="629" width="0.7475%" height="15" fill="rgb(240,103,49)" fg:x="39634" fg:w="762"/><text x="39.1305%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (762 samples, 0.75%)</title><rect x="38.8805%" y="613" width="0.7475%" height="15" fill="rgb(250,182,30)" fg:x="39634" fg:w="762"/><text x="39.1305%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (762 samples, 0.75%)</title><rect x="38.8805%" y="597" width="0.7475%" height="15" fill="rgb(248,8,30)" fg:x="39634" fg:w="762"/><text x="39.1305%" y="607.50"></text></g><g><title>__clock_gettime_2 (665 samples, 0.65%)</title><rect x="38.9757%" y="581" width="0.6524%" height="15" fill="rgb(237,120,30)" fg:x="39731" fg:w="665"/><text x="39.2257%" y="591.50"></text></g><g><title>__vdso_clock_gettime (621 samples, 0.61%)</title><rect x="39.0188%" y="565" width="0.6092%" height="15" fill="rgb(221,146,34)" fg:x="39775" fg:w="621"/><text x="39.2688%" y="575.50"></text></g><g><title>[[vdso]] (390 samples, 0.38%)</title><rect x="39.2454%" y="549" width="0.3826%" height="15" fill="rgb(242,55,13)" fg:x="40006" fg:w="390"/><text x="39.4954%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (27 samples, 0.03%)</title><rect x="39.6947%" y="565" width="0.0265%" height="15" fill="rgb(242,112,31)" fg:x="40464" fg:w="27"/><text x="39.9447%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,381 samples, 1.35%)</title><rect x="38.3949%" y="677" width="1.3547%" height="15" fill="rgb(249,192,27)" fg:x="39139" fg:w="1381"/><text x="38.6449%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,381 samples, 1.35%)</title><rect x="38.3949%" y="661" width="1.3547%" height="15" fill="rgb(208,204,44)" fg:x="39139" fg:w="1381"/><text x="38.6449%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (124 samples, 0.12%)</title><rect x="39.6280%" y="645" width="0.1216%" height="15" fill="rgb(208,93,54)" fg:x="40396" fg:w="124"/><text x="39.8780%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (102 samples, 0.10%)</title><rect x="39.6496%" y="629" width="0.1001%" height="15" fill="rgb(242,1,31)" fg:x="40418" fg:w="102"/><text x="39.8996%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (85 samples, 0.08%)</title><rect x="39.6663%" y="613" width="0.0834%" height="15" fill="rgb(241,83,25)" fg:x="40435" fg:w="85"/><text x="39.9163%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (85 samples, 0.08%)</title><rect x="39.6663%" y="597" width="0.0834%" height="15" fill="rgb(205,169,50)" fg:x="40435" fg:w="85"/><text x="39.9163%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (85 samples, 0.08%)</title><rect x="39.6663%" y="581" width="0.0834%" height="15" fill="rgb(239,186,37)" fg:x="40435" fg:w="85"/><text x="39.9163%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (29 samples, 0.03%)</title><rect x="39.7212%" y="565" width="0.0284%" height="15" fill="rgb(205,221,10)" fg:x="40491" fg:w="29"/><text x="39.9712%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="41.3938%" y="629" width="0.0118%" height="15" fill="rgb(218,196,15)" fg:x="42196" fg:w="12"/><text x="41.6438%" y="639.50"></text></g><g><title>aligned_size (18 samples, 0.02%)</title><rect x="41.7715%" y="389" width="0.0177%" height="15" fill="rgb(218,196,35)" fg:x="42581" fg:w="18"/><text x="42.0215%" y="399.50"></text></g><g><title>size_to_sizeclass (23 samples, 0.02%)</title><rect x="41.8009%" y="357" width="0.0226%" height="15" fill="rgb(233,63,24)" fg:x="42611" fg:w="23"/><text x="42.0509%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="41.8274%" y="341" width="0.0118%" height="15" fill="rgb(225,8,4)" fg:x="42638" fg:w="12"/><text x="42.0774%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (34 samples, 0.03%)</title><rect x="41.8392%" y="341" width="0.0334%" height="15" fill="rgb(234,105,35)" fg:x="42650" fg:w="34"/><text x="42.0892%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (34 samples, 0.03%)</title><rect x="41.8392%" y="325" width="0.0334%" height="15" fill="rgb(236,21,32)" fg:x="42650" fg:w="34"/><text x="42.0892%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (768 samples, 0.75%)</title><rect x="41.7960%" y="389" width="0.7534%" height="15" fill="rgb(228,109,6)" fg:x="42606" fg:w="768"/><text x="42.0460%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (767 samples, 0.75%)</title><rect x="41.7970%" y="373" width="0.7524%" height="15" fill="rgb(229,215,31)" fg:x="42607" fg:w="767"/><text x="42.0470%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (740 samples, 0.73%)</title><rect x="41.8235%" y="357" width="0.7259%" height="15" fill="rgb(221,52,54)" fg:x="42634" fg:w="740"/><text x="42.0735%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (690 samples, 0.68%)</title><rect x="41.8725%" y="341" width="0.6769%" height="15" fill="rgb(252,129,43)" fg:x="42684" fg:w="690"/><text x="42.1225%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (690 samples, 0.68%)</title><rect x="41.8725%" y="325" width="0.6769%" height="15" fill="rgb(248,183,27)" fg:x="42684" fg:w="690"/><text x="42.1225%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (850 samples, 0.83%)</title><rect x="41.7263%" y="533" width="0.8338%" height="15" fill="rgb(250,0,22)" fg:x="42535" fg:w="850"/><text x="41.9763%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (850 samples, 0.83%)</title><rect x="41.7263%" y="517" width="0.8338%" height="15" fill="rgb(213,166,10)" fg:x="42535" fg:w="850"/><text x="41.9763%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (850 samples, 0.83%)</title><rect x="41.7263%" y="501" width="0.8338%" height="15" fill="rgb(207,163,36)" fg:x="42535" fg:w="850"/><text x="41.9763%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (834 samples, 0.82%)</title><rect x="41.7420%" y="485" width="0.8181%" height="15" fill="rgb(208,122,22)" fg:x="42551" fg:w="834"/><text x="41.9920%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (834 samples, 0.82%)</title><rect x="41.7420%" y="469" width="0.8181%" height="15" fill="rgb(207,104,49)" fg:x="42551" fg:w="834"/><text x="41.9920%" y="479.50"></text></g><g><title>alloc::alloc::alloc (815 samples, 0.80%)</title><rect x="41.7607%" y="453" width="0.7995%" height="15" fill="rgb(248,211,50)" fg:x="42570" fg:w="815"/><text x="42.0107%" y="463.50"></text></g><g><title>__rg_alloc (815 samples, 0.80%)</title><rect x="41.7607%" y="437" width="0.7995%" height="15" fill="rgb(217,13,45)" fg:x="42570" fg:w="815"/><text x="42.0107%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (815 samples, 0.80%)</title><rect x="41.7607%" y="421" width="0.7995%" height="15" fill="rgb(211,216,49)" fg:x="42570" fg:w="815"/><text x="42.0107%" y="431.50"></text></g><g><title>rust_alloc (804 samples, 0.79%)</title><rect x="41.7715%" y="405" width="0.7887%" height="15" fill="rgb(221,58,53)" fg:x="42581" fg:w="804"/><text x="42.0215%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="42.5494%" y="389" width="0.0108%" height="15" fill="rgb(220,112,41)" fg:x="43374" fg:w="11"/><text x="42.7994%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (956 samples, 0.94%)</title><rect x="41.6950%" y="613" width="0.9378%" height="15" fill="rgb(236,38,28)" fg:x="42503" fg:w="956"/><text x="41.9450%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (924 samples, 0.91%)</title><rect x="41.7263%" y="597" width="0.9064%" height="15" fill="rgb(227,195,22)" fg:x="42535" fg:w="924"/><text x="41.9763%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (924 samples, 0.91%)</title><rect x="41.7263%" y="581" width="0.9064%" height="15" fill="rgb(214,55,33)" fg:x="42535" fg:w="924"/><text x="41.9763%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (924 samples, 0.91%)</title><rect x="41.7263%" y="565" width="0.9064%" height="15" fill="rgb(248,80,13)" fg:x="42535" fg:w="924"/><text x="41.9763%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (924 samples, 0.91%)</title><rect x="41.7263%" y="549" width="0.9064%" height="15" fill="rgb(238,52,6)" fg:x="42535" fg:w="924"/><text x="41.9763%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (74 samples, 0.07%)</title><rect x="42.5602%" y="533" width="0.0726%" height="15" fill="rgb(224,198,47)" fg:x="43385" fg:w="74"/><text x="42.8102%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (74 samples, 0.07%)</title><rect x="42.5602%" y="517" width="0.0726%" height="15" fill="rgb(233,171,20)" fg:x="43385" fg:w="74"/><text x="42.8102%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (69 samples, 0.07%)</title><rect x="42.5651%" y="501" width="0.0677%" height="15" fill="rgb(241,30,25)" fg:x="43390" fg:w="69"/><text x="42.8151%" y="511.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,263 samples, 1.24%)</title><rect x="41.4056%" y="629" width="1.2390%" height="15" fill="rgb(207,171,38)" fg:x="42208" fg:w="1263"/><text x="41.6556%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="42.6328%" y="613" width="0.0118%" height="15" fill="rgb(234,70,1)" fg:x="43459" fg:w="12"/><text x="42.8828%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (125 samples, 0.12%)</title><rect x="42.8221%" y="597" width="0.1226%" height="15" fill="rgb(232,178,18)" fg:x="43652" fg:w="125"/><text x="43.0721%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (83 samples, 0.08%)</title><rect x="42.8633%" y="581" width="0.0814%" height="15" fill="rgb(241,78,40)" fg:x="43694" fg:w="83"/><text x="43.1133%" y="591.50"></text></g><g><title>size_to_sizeclass (87 samples, 0.09%)</title><rect x="42.9820%" y="373" width="0.0853%" height="15" fill="rgb(222,35,25)" fg:x="43815" fg:w="87"/><text x="43.2320%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (14 samples, 0.01%)</title><rect x="43.0831%" y="357" width="0.0137%" height="15" fill="rgb(207,92,16)" fg:x="43918" fg:w="14"/><text x="43.3331%" y="367.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (14 samples, 0.01%)</title><rect x="43.0831%" y="341" width="0.0137%" height="15" fill="rgb(216,59,51)" fg:x="43918" fg:w="14"/><text x="43.3331%" y="351.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (14 samples, 0.01%)</title><rect x="43.0831%" y="325" width="0.0137%" height="15" fill="rgb(213,80,28)" fg:x="43918" fg:w="14"/><text x="43.3331%" y="335.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="43.0831%" y="309" width="0.0137%" height="15" fill="rgb(220,93,7)" fg:x="43918" fg:w="14"/><text x="43.3331%" y="319.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (14 samples, 0.01%)</title><rect x="43.0831%" y="293" width="0.0137%" height="15" fill="rgb(225,24,44)" fg:x="43918" fg:w="14"/><text x="43.3331%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (12 samples, 0.01%)</title><rect x="43.1017%" y="325" width="0.0118%" height="15" fill="rgb(243,74,40)" fg:x="43937" fg:w="12"/><text x="43.3517%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (11 samples, 0.01%)</title><rect x="43.1027%" y="309" width="0.0108%" height="15" fill="rgb(228,39,7)" fg:x="43938" fg:w="11"/><text x="43.3527%" y="319.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="43.1027%" y="293" width="0.0108%" height="15" fill="rgb(227,79,8)" fg:x="43938" fg:w="11"/><text x="43.3527%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (18 samples, 0.02%)</title><rect x="43.1135%" y="325" width="0.0177%" height="15" fill="rgb(236,58,11)" fg:x="43949" fg:w="18"/><text x="43.3635%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (18 samples, 0.02%)</title><rect x="43.1135%" y="309" width="0.0177%" height="15" fill="rgb(249,63,35)" fg:x="43949" fg:w="18"/><text x="43.3635%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="43.0968%" y="357" width="0.0373%" height="15" fill="rgb(252,114,16)" fg:x="43932" fg:w="38"/><text x="43.3468%" y="367.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (33 samples, 0.03%)</title><rect x="43.1017%" y="341" width="0.0324%" height="15" fill="rgb(254,151,24)" fg:x="43937" fg:w="33"/><text x="43.3517%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (76 samples, 0.07%)</title><rect x="43.1390%" y="357" width="0.0746%" height="15" fill="rgb(253,54,39)" fg:x="43975" fg:w="76"/><text x="43.3890%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (76 samples, 0.07%)</title><rect x="43.1390%" y="341" width="0.0746%" height="15" fill="rgb(243,25,45)" fg:x="43975" fg:w="76"/><text x="43.3890%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (542 samples, 0.53%)</title><rect x="42.9702%" y="405" width="0.5317%" height="15" fill="rgb(234,134,9)" fg:x="43803" fg:w="542"/><text x="43.2202%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (534 samples, 0.52%)</title><rect x="42.9781%" y="389" width="0.5238%" height="15" fill="rgb(227,166,31)" fg:x="43811" fg:w="534"/><text x="43.2281%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (443 samples, 0.43%)</title><rect x="43.0674%" y="373" width="0.4346%" height="15" fill="rgb(245,143,41)" fg:x="43902" fg:w="443"/><text x="43.3174%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (294 samples, 0.29%)</title><rect x="43.2135%" y="357" width="0.2884%" height="15" fill="rgb(238,181,32)" fg:x="44051" fg:w="294"/><text x="43.4635%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (294 samples, 0.29%)</title><rect x="43.2135%" y="341" width="0.2884%" height="15" fill="rgb(224,113,18)" fg:x="44051" fg:w="294"/><text x="43.4635%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (570 samples, 0.56%)</title><rect x="42.9447%" y="549" width="0.5592%" height="15" fill="rgb(240,229,28)" fg:x="43777" fg:w="570"/><text x="43.1947%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (570 samples, 0.56%)</title><rect x="42.9447%" y="533" width="0.5592%" height="15" fill="rgb(250,185,3)" fg:x="43777" fg:w="570"/><text x="43.1947%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (563 samples, 0.55%)</title><rect x="42.9516%" y="517" width="0.5523%" height="15" fill="rgb(212,59,25)" fg:x="43784" fg:w="563"/><text x="43.2016%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (563 samples, 0.55%)</title><rect x="42.9516%" y="501" width="0.5523%" height="15" fill="rgb(221,87,20)" fg:x="43784" fg:w="563"/><text x="43.2016%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (563 samples, 0.55%)</title><rect x="42.9516%" y="485" width="0.5523%" height="15" fill="rgb(213,74,28)" fg:x="43784" fg:w="563"/><text x="43.2016%" y="495.50"></text></g><g><title>alloc::alloc::alloc (560 samples, 0.55%)</title><rect x="42.9545%" y="469" width="0.5494%" height="15" fill="rgb(224,132,34)" fg:x="43787" fg:w="560"/><text x="43.2045%" y="479.50"></text></g><g><title>__rg_alloc (560 samples, 0.55%)</title><rect x="42.9545%" y="453" width="0.5494%" height="15" fill="rgb(222,101,24)" fg:x="43787" fg:w="560"/><text x="43.2045%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (560 samples, 0.55%)</title><rect x="42.9545%" y="437" width="0.5494%" height="15" fill="rgb(254,142,4)" fg:x="43787" fg:w="560"/><text x="43.2045%" y="447.50"></text></g><g><title>rust_alloc (557 samples, 0.55%)</title><rect x="42.9575%" y="421" width="0.5464%" height="15" fill="rgb(230,229,49)" fg:x="43790" fg:w="557"/><text x="43.2075%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,059 samples, 1.04%)</title><rect x="42.9447%" y="565" width="1.0389%" height="15" fill="rgb(238,70,47)" fg:x="43777" fg:w="1059"/><text x="43.1947%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (489 samples, 0.48%)</title><rect x="43.5039%" y="549" width="0.4797%" height="15" fill="rgb(231,160,17)" fg:x="44347" fg:w="489"/><text x="43.7539%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (489 samples, 0.48%)</title><rect x="43.5039%" y="533" width="0.4797%" height="15" fill="rgb(218,68,53)" fg:x="44347" fg:w="489"/><text x="43.7539%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (487 samples, 0.48%)</title><rect x="43.5059%" y="517" width="0.4777%" height="15" fill="rgb(236,111,10)" fg:x="44349" fg:w="487"/><text x="43.7559%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,187 samples, 1.16%)</title><rect x="42.8221%" y="613" width="1.1644%" height="15" fill="rgb(224,34,41)" fg:x="43652" fg:w="1187"/><text x="43.0721%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,062 samples, 1.04%)</title><rect x="42.9447%" y="597" width="1.0418%" height="15" fill="rgb(241,118,19)" fg:x="43777" fg:w="1062"/><text x="43.1947%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1,062 samples, 1.04%)</title><rect x="42.9447%" y="581" width="1.0418%" height="15" fill="rgb(238,129,25)" fg:x="43777" fg:w="1062"/><text x="43.1947%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,322 samples, 4.24%)</title><rect x="39.7497%" y="677" width="4.2398%" height="15" fill="rgb(238,22,31)" fg:x="40520" fg:w="4322"/><text x="39.9997%" y="687.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,322 samples, 4.24%)</title><rect x="39.7497%" y="661" width="4.2398%" height="15" fill="rgb(222,174,48)" fg:x="40520" fg:w="4322"/><text x="39.9997%" y="671.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (4,056 samples, 3.98%)</title><rect x="40.0106%" y="645" width="3.9789%" height="15" fill="rgb(206,152,40)" fg:x="40786" fg:w="4056"/><text x="40.2606%" y="655.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,371 samples, 1.34%)</title><rect x="42.6445%" y="629" width="1.3449%" height="15" fill="rgb(218,99,54)" fg:x="43471" fg:w="1371"/><text x="42.8945%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="43.9934%" y="437" width="0.0137%" height="15" fill="rgb(220,174,26)" fg:x="44846" fg:w="14"/><text x="44.2434%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (23 samples, 0.02%)</title><rect x="43.9895%" y="453" width="0.0226%" height="15" fill="rgb(245,116,9)" fg:x="44842" fg:w="23"/><text x="44.2395%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (30 samples, 0.03%)</title><rect x="44.0277%" y="437" width="0.0294%" height="15" fill="rgb(209,72,35)" fg:x="44881" fg:w="30"/><text x="44.2777%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (190 samples, 0.19%)</title><rect x="43.9895%" y="485" width="0.1864%" height="15" fill="rgb(226,126,21)" fg:x="44842" fg:w="190"/><text x="44.2395%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (190 samples, 0.19%)</title><rect x="43.9895%" y="469" width="0.1864%" height="15" fill="rgb(227,192,1)" fg:x="44842" fg:w="190"/><text x="44.2395%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (167 samples, 0.16%)</title><rect x="44.0120%" y="453" width="0.1638%" height="15" fill="rgb(237,180,29)" fg:x="44865" fg:w="167"/><text x="44.2620%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (121 samples, 0.12%)</title><rect x="44.0572%" y="437" width="0.1187%" height="15" fill="rgb(230,197,35)" fg:x="44911" fg:w="121"/><text x="44.3072%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (121 samples, 0.12%)</title><rect x="44.0572%" y="421" width="0.1187%" height="15" fill="rgb(246,193,31)" fg:x="44911" fg:w="121"/><text x="44.3072%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (121 samples, 0.12%)</title><rect x="44.0572%" y="405" width="0.1187%" height="15" fill="rgb(241,36,4)" fg:x="44911" fg:w="121"/><text x="44.3072%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (220 samples, 0.22%)</title><rect x="43.9895%" y="677" width="0.2158%" height="15" fill="rgb(241,130,17)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (220 samples, 0.22%)</title><rect x="43.9895%" y="661" width="0.2158%" height="15" fill="rgb(206,137,32)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (220 samples, 0.22%)</title><rect x="43.9895%" y="645" width="0.2158%" height="15" fill="rgb(237,228,51)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (220 samples, 0.22%)</title><rect x="43.9895%" y="629" width="0.2158%" height="15" fill="rgb(243,6,42)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (220 samples, 0.22%)</title><rect x="43.9895%" y="613" width="0.2158%" height="15" fill="rgb(251,74,28)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="623.50"></text></g><g><title>alloc::alloc::alloc (220 samples, 0.22%)</title><rect x="43.9895%" y="597" width="0.2158%" height="15" fill="rgb(218,20,49)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="607.50"></text></g><g><title>__rg_alloc (220 samples, 0.22%)</title><rect x="43.9895%" y="581" width="0.2158%" height="15" fill="rgb(238,28,14)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (220 samples, 0.22%)</title><rect x="43.9895%" y="565" width="0.2158%" height="15" fill="rgb(229,40,46)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="575.50"></text></g><g><title>rust_alloc (220 samples, 0.22%)</title><rect x="43.9895%" y="549" width="0.2158%" height="15" fill="rgb(244,195,20)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.22%)</title><rect x="43.9895%" y="533" width="0.2158%" height="15" fill="rgb(253,56,35)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.22%)</title><rect x="43.9895%" y="517" width="0.2158%" height="15" fill="rgb(210,149,44)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.22%)</title><rect x="43.9895%" y="501" width="0.2158%" height="15" fill="rgb(240,135,12)" fg:x="44842" fg:w="220"/><text x="44.2395%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="44.1759%" y="485" width="0.0294%" height="15" fill="rgb(251,24,50)" fg:x="45032" fg:w="30"/><text x="44.4259%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.03%)</title><rect x="44.1759%" y="469" width="0.0294%" height="15" fill="rgb(243,200,47)" fg:x="45032" fg:w="30"/><text x="44.4259%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="44.1778%" y="453" width="0.0275%" height="15" fill="rgb(224,166,26)" fg:x="45034" fg:w="28"/><text x="44.4278%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="44.1827%" y="437" width="0.0226%" height="15" fill="rgb(233,0,47)" fg:x="45039" fg:w="23"/><text x="44.4327%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (22 samples, 0.02%)</title><rect x="44.1837%" y="421" width="0.0216%" height="15" fill="rgb(253,80,5)" fg:x="45040" fg:w="22"/><text x="44.4337%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="44.1916%" y="405" width="0.0137%" height="15" fill="rgb(214,133,25)" fg:x="45048" fg:w="14"/><text x="44.4416%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="44.1916%" y="389" width="0.0137%" height="15" fill="rgb(209,27,14)" fg:x="45048" fg:w="14"/><text x="44.4416%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (39 samples, 0.04%)</title><rect x="44.2053%" y="661" width="0.0383%" height="15" fill="rgb(219,102,51)" fg:x="45062" fg:w="39"/><text x="44.4553%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (41 samples, 0.04%)</title><rect x="44.2053%" y="677" width="0.0402%" height="15" fill="rgb(237,18,16)" fg:x="45062" fg:w="41"/><text x="44.4553%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1157" width="6.7090%" height="15" fill="rgb(241,85,17)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1167.50">async_glo..</text></g><g><title>std::panic::catch_unwind (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1141" width="6.7090%" height="15" fill="rgb(236,90,42)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1151.50">std::pani..</text></g><g><title>std::panicking::try (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1125" width="6.7090%" height="15" fill="rgb(249,57,21)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1135.50">std::pani..</text></g><g><title>std::panicking::try::do_call (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1109" width="6.7090%" height="15" fill="rgb(243,12,36)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1119.50">std::pani..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1093" width="6.7090%" height="15" fill="rgb(253,128,47)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1103.50">async_glo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1077" width="6.7090%" height="15" fill="rgb(207,33,20)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1087.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1061" width="6.7090%" height="15" fill="rgb(233,215,35)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1071.50">std::thre..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1045" width="6.7090%" height="15" fill="rgb(249,188,52)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1055.50">async_glo..</text></g><g><title>async_global_executor::reactor::block_on (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1029" width="6.7090%" height="15" fill="rgb(225,12,32)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1039.50">async_glo..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (6,839 samples, 6.71%)</title><rect x="37.5513%" y="1013" width="6.7090%" height="15" fill="rgb(247,98,14)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1023.50">async_glo..</text></g><g><title>async_io::driver::block_on (6,839 samples, 6.71%)</title><rect x="37.5513%" y="997" width="6.7090%" height="15" fill="rgb(247,219,48)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="1007.50">async_io:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.71%)</title><rect x="37.5513%" y="981" width="6.7090%" height="15" fill="rgb(253,60,48)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="991.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.71%)</title><rect x="37.5513%" y="965" width="6.7090%" height="15" fill="rgb(245,15,52)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="975.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}} (6,839 samples, 6.71%)</title><rect x="37.5513%" y="949" width="6.7090%" height="15" fill="rgb(220,133,28)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="959.50">async_exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.71%)</title><rect x="37.5513%" y="933" width="6.7090%" height="15" fill="rgb(217,180,4)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="943.50">&lt;futures_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.71%)</title><rect x="37.5513%" y="917" width="6.7090%" height="15" fill="rgb(251,24,1)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="927.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6,839 samples, 6.71%)</title><rect x="37.5513%" y="901" width="6.7090%" height="15" fill="rgb(212,185,49)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="911.50">async_exe..</text></g><g><title>async_task::runnable::Runnable::run (6,839 samples, 6.71%)</title><rect x="37.5513%" y="885" width="6.7090%" height="15" fill="rgb(215,175,22)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="895.50">async_tas..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6,839 samples, 6.71%)</title><rect x="37.5513%" y="869" width="6.7090%" height="15" fill="rgb(250,205,14)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="879.50">async_tas..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.71%)</title><rect x="37.5513%" y="853" width="6.7090%" height="15" fill="rgb(225,211,22)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="863.50">&lt;core::pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.71%)</title><rect x="37.5513%" y="837" width="6.7090%" height="15" fill="rgb(251,179,42)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="847.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,839 samples, 6.71%)</title><rect x="37.5513%" y="821" width="6.7090%" height="15" fill="rgb(208,216,51)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="831.50">async_exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.71%)</title><rect x="37.5513%" y="805" width="6.7090%" height="15" fill="rgb(235,36,11)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="815.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,839 samples, 6.71%)</title><rect x="37.5513%" y="789" width="6.7090%" height="15" fill="rgb(213,189,28)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="799.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,839 samples, 6.71%)</title><rect x="37.5513%" y="773" width="6.7090%" height="15" fill="rgb(227,203,42)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="783.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,839 samples, 6.71%)</title><rect x="37.5513%" y="757" width="6.7090%" height="15" fill="rgb(244,72,36)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="767.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,839 samples, 6.71%)</title><rect x="37.5513%" y="741" width="6.7090%" height="15" fill="rgb(213,53,17)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="751.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,839 samples, 6.71%)</title><rect x="37.5513%" y="725" width="6.7090%" height="15" fill="rgb(207,167,3)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="735.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,839 samples, 6.71%)</title><rect x="37.5513%" y="709" width="6.7090%" height="15" fill="rgb(216,98,30)" fg:x="38279" fg:w="6839"/><text x="37.8013%" y="719.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,979 samples, 5.87%)</title><rect x="38.3949%" y="693" width="5.8653%" height="15" fill="rgb(236,123,15)" fg:x="39139" fg:w="5979"/><text x="38.6449%" y="703.50">tremor_..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (15 samples, 0.01%)</title><rect x="44.2455%" y="677" width="0.0147%" height="15" fill="rgb(248,81,50)" fg:x="45103" fg:w="15"/><text x="44.4955%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (15 samples, 0.01%)</title><rect x="44.2455%" y="661" width="0.0147%" height="15" fill="rgb(214,120,4)" fg:x="45103" fg:w="15"/><text x="44.4955%" y="671.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="44.2642%" y="725" width="0.0108%" height="15" fill="rgb(208,179,34)" fg:x="45122" fg:w="11"/><text x="44.5142%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (27 samples, 0.03%)</title><rect x="44.2916%" y="597" width="0.0265%" height="15" fill="rgb(227,140,7)" fg:x="45150" fg:w="27"/><text x="44.5416%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="44.2916%" y="581" width="0.0265%" height="15" fill="rgb(214,22,6)" fg:x="45150" fg:w="27"/><text x="44.5416%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (27 samples, 0.03%)</title><rect x="44.2916%" y="565" width="0.0265%" height="15" fill="rgb(207,137,27)" fg:x="45150" fg:w="27"/><text x="44.5416%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.03%)</title><rect x="44.2926%" y="549" width="0.0255%" height="15" fill="rgb(210,8,46)" fg:x="45151" fg:w="26"/><text x="44.5426%" y="559.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (25 samples, 0.02%)</title><rect x="44.2936%" y="533" width="0.0245%" height="15" fill="rgb(240,16,54)" fg:x="45152" fg:w="25"/><text x="44.5436%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (14 samples, 0.01%)</title><rect x="44.3377%" y="517" width="0.0137%" height="15" fill="rgb(211,209,29)" fg:x="45197" fg:w="14"/><text x="44.5877%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.01%)</title><rect x="44.3377%" y="501" width="0.0137%" height="15" fill="rgb(226,228,24)" fg:x="45197" fg:w="14"/><text x="44.5877%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (26 samples, 0.03%)</title><rect x="44.3515%" y="517" width="0.0255%" height="15" fill="rgb(222,84,9)" fg:x="45211" fg:w="26"/><text x="44.6015%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (26 samples, 0.03%)</title><rect x="44.3515%" y="501" width="0.0255%" height="15" fill="rgb(234,203,30)" fg:x="45211" fg:w="26"/><text x="44.6015%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (26 samples, 0.03%)</title><rect x="44.3515%" y="485" width="0.0255%" height="15" fill="rgb(238,109,14)" fg:x="45211" fg:w="26"/><text x="44.6015%" y="495.50"></text></g><g><title>__pthread_cond_signal (26 samples, 0.03%)</title><rect x="44.3515%" y="469" width="0.0255%" height="15" fill="rgb(233,206,34)" fg:x="45211" fg:w="26"/><text x="44.6015%" y="479.50"></text></g><g><title>parking::Unparker::unpark (73 samples, 0.07%)</title><rect x="44.3299%" y="549" width="0.0716%" height="15" fill="rgb(220,167,47)" fg:x="45189" fg:w="73"/><text x="44.5799%" y="559.50"></text></g><g><title>parking::Inner::unpark (69 samples, 0.07%)</title><rect x="44.3338%" y="533" width="0.0677%" height="15" fill="rgb(238,105,10)" fg:x="45193" fg:w="69"/><text x="44.5838%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.02%)</title><rect x="44.3770%" y="517" width="0.0245%" height="15" fill="rgb(213,227,17)" fg:x="45237" fg:w="25"/><text x="44.6270%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (25 samples, 0.02%)</title><rect x="44.3770%" y="501" width="0.0245%" height="15" fill="rgb(217,132,38)" fg:x="45237" fg:w="25"/><text x="44.6270%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (25 samples, 0.02%)</title><rect x="44.3770%" y="485" width="0.0245%" height="15" fill="rgb(242,146,4)" fg:x="45237" fg:w="25"/><text x="44.6270%" y="495.50"></text></g><g><title>__GI___pthread_mutex_lock (25 samples, 0.02%)</title><rect x="44.3770%" y="469" width="0.0245%" height="15" fill="rgb(212,61,9)" fg:x="45237" fg:w="25"/><text x="44.6270%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (84 samples, 0.08%)</title><rect x="44.3230%" y="565" width="0.0824%" height="15" fill="rgb(247,126,22)" fg:x="45182" fg:w="84"/><text x="44.5730%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (103 samples, 0.10%)</title><rect x="44.3230%" y="597" width="0.1010%" height="15" fill="rgb(220,196,2)" fg:x="45182" fg:w="103"/><text x="44.5730%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (103 samples, 0.10%)</title><rect x="44.3230%" y="581" width="0.1010%" height="15" fill="rgb(208,46,4)" fg:x="45182" fg:w="103"/><text x="44.5730%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="44.4054%" y="565" width="0.0186%" height="15" fill="rgb(252,104,46)" fg:x="45266" fg:w="19"/><text x="44.6554%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="44.4054%" y="549" width="0.0186%" height="15" fill="rgb(237,152,48)" fg:x="45266" fg:w="19"/><text x="44.6554%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="44.4064%" y="533" width="0.0177%" height="15" fill="rgb(221,59,37)" fg:x="45267" fg:w="18"/><text x="44.6564%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="44.4064%" y="517" width="0.0177%" height="15" fill="rgb(209,202,51)" fg:x="45267" fg:w="18"/><text x="44.6564%" y="527.50"></text></g><g><title>async_executor::State::notify (165 samples, 0.16%)</title><rect x="44.2887%" y="613" width="0.1619%" height="15" fill="rgb(228,81,30)" fg:x="45147" fg:w="165"/><text x="44.5387%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.03%)</title><rect x="44.4241%" y="597" width="0.0265%" height="15" fill="rgb(227,42,39)" fg:x="45285" fg:w="27"/><text x="44.6741%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.03%)</title><rect x="44.4241%" y="581" width="0.0265%" height="15" fill="rgb(221,26,2)" fg:x="45285" fg:w="27"/><text x="44.6741%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.02%)</title><rect x="44.4290%" y="565" width="0.0216%" height="15" fill="rgb(254,61,31)" fg:x="45290" fg:w="22"/><text x="44.6790%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="44.4290%" y="549" width="0.0216%" height="15" fill="rgb(222,173,38)" fg:x="45290" fg:w="22"/><text x="44.6790%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (24 samples, 0.02%)</title><rect x="44.4623%" y="581" width="0.0235%" height="15" fill="rgb(218,50,12)" fg:x="45324" fg:w="24"/><text x="44.7123%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.02%)</title><rect x="44.4623%" y="565" width="0.0235%" height="15" fill="rgb(223,88,40)" fg:x="45324" fg:w="24"/><text x="44.7123%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.01%)</title><rect x="44.4859%" y="581" width="0.0118%" height="15" fill="rgb(237,54,19)" fg:x="45348" fg:w="12"/><text x="44.7359%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.01%)</title><rect x="44.4859%" y="565" width="0.0118%" height="15" fill="rgb(251,129,25)" fg:x="45348" fg:w="12"/><text x="44.7359%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (218 samples, 0.21%)</title><rect x="44.2887%" y="629" width="0.2139%" height="15" fill="rgb(238,97,19)" fg:x="45147" fg:w="218"/><text x="44.5387%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (53 samples, 0.05%)</title><rect x="44.4505%" y="613" width="0.0520%" height="15" fill="rgb(240,169,18)" fg:x="45312" fg:w="53"/><text x="44.7005%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (49 samples, 0.05%)</title><rect x="44.4545%" y="597" width="0.0481%" height="15" fill="rgb(230,187,49)" fg:x="45316" fg:w="49"/><text x="44.7045%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (29 samples, 0.03%)</title><rect x="44.5025%" y="629" width="0.0284%" height="15" fill="rgb(209,44,26)" fg:x="45365" fg:w="29"/><text x="44.7525%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.03%)</title><rect x="44.5025%" y="613" width="0.0284%" height="15" fill="rgb(244,0,6)" fg:x="45365" fg:w="29"/><text x="44.7525%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (271 samples, 0.27%)</title><rect x="44.2750%" y="725" width="0.2658%" height="15" fill="rgb(248,18,21)" fg:x="45133" fg:w="271"/><text x="44.5250%" y="735.50"></text></g><g><title>event_listener::Event::notify (271 samples, 0.27%)</title><rect x="44.2750%" y="709" width="0.2658%" height="15" fill="rgb(245,180,19)" fg:x="45133" fg:w="271"/><text x="44.5250%" y="719.50"></text></g><g><title>event_listener::List::notify (271 samples, 0.27%)</title><rect x="44.2750%" y="693" width="0.2658%" height="15" fill="rgb(252,118,36)" fg:x="45133" fg:w="271"/><text x="44.5250%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (266 samples, 0.26%)</title><rect x="44.2799%" y="677" width="0.2609%" height="15" fill="rgb(210,224,19)" fg:x="45138" fg:w="266"/><text x="44.5299%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (265 samples, 0.26%)</title><rect x="44.2808%" y="661" width="0.2600%" height="15" fill="rgb(218,30,24)" fg:x="45139" fg:w="265"/><text x="44.5308%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (260 samples, 0.26%)</title><rect x="44.2857%" y="645" width="0.2551%" height="15" fill="rgb(219,75,50)" fg:x="45144" fg:w="260"/><text x="44.5357%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (298 samples, 0.29%)</title><rect x="44.2642%" y="805" width="0.2923%" height="15" fill="rgb(234,72,50)" fg:x="45122" fg:w="298"/><text x="44.5142%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (298 samples, 0.29%)</title><rect x="44.2642%" y="789" width="0.2923%" height="15" fill="rgb(219,100,48)" fg:x="45122" fg:w="298"/><text x="44.5142%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (298 samples, 0.29%)</title><rect x="44.2642%" y="773" width="0.2923%" height="15" fill="rgb(253,5,41)" fg:x="45122" fg:w="298"/><text x="44.5142%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (298 samples, 0.29%)</title><rect x="44.2642%" y="757" width="0.2923%" height="15" fill="rgb(247,181,11)" fg:x="45122" fg:w="298"/><text x="44.5142%" y="767.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (298 samples, 0.29%)</title><rect x="44.2642%" y="741" width="0.2923%" height="15" fill="rgb(222,223,25)" fg:x="45122" fg:w="298"/><text x="44.5142%" y="751.50"></text></g><g><title>event_listener::Event::listen (16 samples, 0.02%)</title><rect x="44.5408%" y="725" width="0.0157%" height="15" fill="rgb(214,198,28)" fg:x="45404" fg:w="16"/><text x="44.7908%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="44.5565%" y="469" width="0.0118%" height="15" fill="rgb(230,46,43)" fg:x="45420" fg:w="12"/><text x="44.8065%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (82 samples, 0.08%)</title><rect x="44.5565%" y="773" width="0.0804%" height="15" fill="rgb(233,65,53)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (82 samples, 0.08%)</title><rect x="44.5565%" y="757" width="0.0804%" height="15" fill="rgb(221,121,27)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (82 samples, 0.08%)</title><rect x="44.5565%" y="741" width="0.0804%" height="15" fill="rgb(247,70,47)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (82 samples, 0.08%)</title><rect x="44.5565%" y="725" width="0.0804%" height="15" fill="rgb(228,85,35)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (82 samples, 0.08%)</title><rect x="44.5565%" y="709" width="0.0804%" height="15" fill="rgb(209,50,18)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (82 samples, 0.08%)</title><rect x="44.5565%" y="693" width="0.0804%" height="15" fill="rgb(250,19,35)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (82 samples, 0.08%)</title><rect x="44.5565%" y="677" width="0.0804%" height="15" fill="rgb(253,107,29)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (82 samples, 0.08%)</title><rect x="44.5565%" y="661" width="0.0804%" height="15" fill="rgb(252,179,29)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (82 samples, 0.08%)</title><rect x="44.5565%" y="645" width="0.0804%" height="15" fill="rgb(238,194,6)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (82 samples, 0.08%)</title><rect x="44.5565%" y="629" width="0.0804%" height="15" fill="rgb(238,164,29)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="639.50"></text></g><g><title>alloc::alloc::alloc (82 samples, 0.08%)</title><rect x="44.5565%" y="613" width="0.0804%" height="15" fill="rgb(224,25,9)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="623.50"></text></g><g><title>__rg_alloc (82 samples, 0.08%)</title><rect x="44.5565%" y="597" width="0.0804%" height="15" fill="rgb(244,153,23)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (82 samples, 0.08%)</title><rect x="44.5565%" y="581" width="0.0804%" height="15" fill="rgb(212,203,14)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="591.50"></text></g><g><title>rust_alloc (82 samples, 0.08%)</title><rect x="44.5565%" y="565" width="0.0804%" height="15" fill="rgb(220,164,20)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="44.5565%" y="549" width="0.0804%" height="15" fill="rgb(222,203,48)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="44.5565%" y="533" width="0.0804%" height="15" fill="rgb(215,159,22)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="44.5565%" y="517" width="0.0804%" height="15" fill="rgb(216,183,47)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="44.5565%" y="501" width="0.0804%" height="15" fill="rgb(229,195,25)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (82 samples, 0.08%)</title><rect x="44.5565%" y="485" width="0.0804%" height="15" fill="rgb(224,132,51)" fg:x="45420" fg:w="82"/><text x="44.8065%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (70 samples, 0.07%)</title><rect x="44.5683%" y="469" width="0.0687%" height="15" fill="rgb(240,63,7)" fg:x="45432" fg:w="70"/><text x="44.8183%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (58 samples, 0.06%)</title><rect x="44.5800%" y="453" width="0.0569%" height="15" fill="rgb(249,182,41)" fg:x="45444" fg:w="58"/><text x="44.8300%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (58 samples, 0.06%)</title><rect x="44.5800%" y="437" width="0.0569%" height="15" fill="rgb(243,47,26)" fg:x="45444" fg:w="58"/><text x="44.8300%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (58 samples, 0.06%)</title><rect x="44.5800%" y="421" width="0.0569%" height="15" fill="rgb(233,48,2)" fg:x="45444" fg:w="58"/><text x="44.8300%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (18 samples, 0.02%)</title><rect x="44.6369%" y="405" width="0.0177%" height="15" fill="rgb(244,165,34)" fg:x="45502" fg:w="18"/><text x="44.8869%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="44.6369%" y="437" width="0.0922%" height="15" fill="rgb(207,89,7)" fg:x="45502" fg:w="94"/><text x="44.8869%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (94 samples, 0.09%)</title><rect x="44.6369%" y="421" width="0.0922%" height="15" fill="rgb(244,117,36)" fg:x="45502" fg:w="94"/><text x="44.8869%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (76 samples, 0.07%)</title><rect x="44.6546%" y="405" width="0.0746%" height="15" fill="rgb(226,144,34)" fg:x="45520" fg:w="76"/><text x="44.9046%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (64 samples, 0.06%)</title><rect x="44.6664%" y="389" width="0.0628%" height="15" fill="rgb(213,23,19)" fg:x="45532" fg:w="64"/><text x="44.9164%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="44.6664%" y="373" width="0.0628%" height="15" fill="rgb(217,75,12)" fg:x="45532" fg:w="64"/><text x="44.9164%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (64 samples, 0.06%)</title><rect x="44.6664%" y="357" width="0.0628%" height="15" fill="rgb(224,159,17)" fg:x="45532" fg:w="64"/><text x="44.9164%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (127 samples, 0.12%)</title><rect x="44.6369%" y="709" width="0.1246%" height="15" fill="rgb(217,118,1)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (127 samples, 0.12%)</title><rect x="44.6369%" y="693" width="0.1246%" height="15" fill="rgb(232,180,48)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (127 samples, 0.12%)</title><rect x="44.6369%" y="677" width="0.1246%" height="15" fill="rgb(230,27,33)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (127 samples, 0.12%)</title><rect x="44.6369%" y="661" width="0.1246%" height="15" fill="rgb(205,31,21)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (127 samples, 0.12%)</title><rect x="44.6369%" y="645" width="0.1246%" height="15" fill="rgb(253,59,4)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (127 samples, 0.12%)</title><rect x="44.6369%" y="629" width="0.1246%" height="15" fill="rgb(224,201,9)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (127 samples, 0.12%)</title><rect x="44.6369%" y="613" width="0.1246%" height="15" fill="rgb(229,206,30)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (127 samples, 0.12%)</title><rect x="44.6369%" y="597" width="0.1246%" height="15" fill="rgb(212,67,47)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (127 samples, 0.12%)</title><rect x="44.6369%" y="581" width="0.1246%" height="15" fill="rgb(211,96,50)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (127 samples, 0.12%)</title><rect x="44.6369%" y="565" width="0.1246%" height="15" fill="rgb(252,114,18)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="575.50"></text></g><g><title>alloc::alloc::alloc (127 samples, 0.12%)</title><rect x="44.6369%" y="549" width="0.1246%" height="15" fill="rgb(223,58,37)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="559.50"></text></g><g><title>__rg_alloc (127 samples, 0.12%)</title><rect x="44.6369%" y="533" width="0.1246%" height="15" fill="rgb(237,70,4)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (127 samples, 0.12%)</title><rect x="44.6369%" y="517" width="0.1246%" height="15" fill="rgb(244,85,46)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="527.50"></text></g><g><title>rust_alloc (127 samples, 0.12%)</title><rect x="44.6369%" y="501" width="0.1246%" height="15" fill="rgb(223,39,52)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (127 samples, 0.12%)</title><rect x="44.6369%" y="485" width="0.1246%" height="15" fill="rgb(218,200,14)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (127 samples, 0.12%)</title><rect x="44.6369%" y="469" width="0.1246%" height="15" fill="rgb(208,171,16)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (127 samples, 0.12%)</title><rect x="44.6369%" y="453" width="0.1246%" height="15" fill="rgb(234,200,18)" fg:x="45502" fg:w="127"/><text x="44.8869%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="44.7291%" y="437" width="0.0324%" height="15" fill="rgb(228,45,11)" fg:x="45596" fg:w="33"/><text x="44.9791%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="44.7291%" y="421" width="0.0324%" height="15" fill="rgb(237,182,11)" fg:x="45596" fg:w="33"/><text x="44.9791%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (33 samples, 0.03%)</title><rect x="44.7291%" y="405" width="0.0324%" height="15" fill="rgb(241,175,49)" fg:x="45596" fg:w="33"/><text x="44.9791%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (31 samples, 0.03%)</title><rect x="44.7311%" y="389" width="0.0304%" height="15" fill="rgb(247,38,35)" fg:x="45598" fg:w="31"/><text x="44.9811%" y="399.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (31 samples, 0.03%)</title><rect x="44.7311%" y="373" width="0.0304%" height="15" fill="rgb(228,39,49)" fg:x="45598" fg:w="31"/><text x="44.9811%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (12 samples, 0.01%)</title><rect x="44.7497%" y="357" width="0.0118%" height="15" fill="rgb(226,101,26)" fg:x="45617" fg:w="12"/><text x="44.9997%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (12 samples, 0.01%)</title><rect x="44.7497%" y="341" width="0.0118%" height="15" fill="rgb(206,141,19)" fg:x="45617" fg:w="12"/><text x="44.9997%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="44.7635%" y="469" width="0.0108%" height="15" fill="rgb(211,200,13)" fg:x="45631" fg:w="11"/><text x="45.0135%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (17 samples, 0.02%)</title><rect x="44.7615%" y="485" width="0.0167%" height="15" fill="rgb(241,121,6)" fg:x="45629" fg:w="17"/><text x="45.0115%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="44.7615%" y="517" width="0.0922%" height="15" fill="rgb(234,221,29)" fg:x="45629" fg:w="94"/><text x="45.0115%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (94 samples, 0.09%)</title><rect x="44.7615%" y="501" width="0.0922%" height="15" fill="rgb(229,136,5)" fg:x="45629" fg:w="94"/><text x="45.0115%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (77 samples, 0.08%)</title><rect x="44.7782%" y="485" width="0.0755%" height="15" fill="rgb(238,36,11)" fg:x="45646" fg:w="77"/><text x="45.0282%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (60 samples, 0.06%)</title><rect x="44.7949%" y="469" width="0.0589%" height="15" fill="rgb(251,55,41)" fg:x="45663" fg:w="60"/><text x="45.0449%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="44.7949%" y="453" width="0.0589%" height="15" fill="rgb(242,34,40)" fg:x="45663" fg:w="60"/><text x="45.0449%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="44.7949%" y="437" width="0.0589%" height="15" fill="rgb(215,42,17)" fg:x="45663" fg:w="60"/><text x="45.0449%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (305 samples, 0.30%)</title><rect x="44.5565%" y="789" width="0.2992%" height="15" fill="rgb(207,44,46)" fg:x="45420" fg:w="305"/><text x="44.8065%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (223 samples, 0.22%)</title><rect x="44.6369%" y="773" width="0.2188%" height="15" fill="rgb(211,206,28)" fg:x="45502" fg:w="223"/><text x="44.8869%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (223 samples, 0.22%)</title><rect x="44.6369%" y="757" width="0.2188%" height="15" fill="rgb(237,167,16)" fg:x="45502" fg:w="223"/><text x="44.8869%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (223 samples, 0.22%)</title><rect x="44.6369%" y="741" width="0.2188%" height="15" fill="rgb(233,66,6)" fg:x="45502" fg:w="223"/><text x="44.8869%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (223 samples, 0.22%)</title><rect x="44.6369%" y="725" width="0.2188%" height="15" fill="rgb(246,123,29)" fg:x="45502" fg:w="223"/><text x="44.8869%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (96 samples, 0.09%)</title><rect x="44.7615%" y="709" width="0.0942%" height="15" fill="rgb(209,62,40)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (96 samples, 0.09%)</title><rect x="44.7615%" y="693" width="0.0942%" height="15" fill="rgb(218,4,25)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (96 samples, 0.09%)</title><rect x="44.7615%" y="677" width="0.0942%" height="15" fill="rgb(253,91,49)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.09%)</title><rect x="44.7615%" y="661" width="0.0942%" height="15" fill="rgb(228,155,29)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.09%)</title><rect x="44.7615%" y="645" width="0.0942%" height="15" fill="rgb(243,57,37)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="655.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.09%)</title><rect x="44.7615%" y="629" width="0.0942%" height="15" fill="rgb(244,167,17)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="639.50"></text></g><g><title>__rg_alloc (96 samples, 0.09%)</title><rect x="44.7615%" y="613" width="0.0942%" height="15" fill="rgb(207,181,38)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (96 samples, 0.09%)</title><rect x="44.7615%" y="597" width="0.0942%" height="15" fill="rgb(211,8,23)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="607.50"></text></g><g><title>rust_alloc (96 samples, 0.09%)</title><rect x="44.7615%" y="581" width="0.0942%" height="15" fill="rgb(235,11,44)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="44.7615%" y="565" width="0.0942%" height="15" fill="rgb(248,18,52)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="44.7615%" y="549" width="0.0942%" height="15" fill="rgb(208,4,7)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="44.7615%" y="533" width="0.0942%" height="15" fill="rgb(240,17,39)" fg:x="45629" fg:w="96"/><text x="45.0115%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="44.8743%" y="469" width="0.0147%" height="15" fill="rgb(207,170,3)" fg:x="45744" fg:w="15"/><text x="45.1243%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="44.8753%" y="453" width="0.0137%" height="15" fill="rgb(236,100,52)" fg:x="45745" fg:w="14"/><text x="45.1253%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (30 samples, 0.03%)</title><rect x="44.8675%" y="517" width="0.0294%" height="15" fill="rgb(246,78,51)" fg:x="45737" fg:w="30"/><text x="45.1175%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (30 samples, 0.03%)</title><rect x="44.8675%" y="501" width="0.0294%" height="15" fill="rgb(211,17,15)" fg:x="45737" fg:w="30"/><text x="45.1175%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (24 samples, 0.02%)</title><rect x="44.8734%" y="485" width="0.0235%" height="15" fill="rgb(209,59,46)" fg:x="45743" fg:w="24"/><text x="45.1234%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (38 samples, 0.04%)</title><rect x="44.8675%" y="533" width="0.0373%" height="15" fill="rgb(210,92,25)" fg:x="45737" fg:w="38"/><text x="45.1175%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (59 samples, 0.06%)</title><rect x="44.8557%" y="549" width="0.0579%" height="15" fill="rgb(238,174,52)" fg:x="45725" fg:w="59"/><text x="45.1057%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (26 samples, 0.03%)</title><rect x="44.9391%" y="533" width="0.0255%" height="15" fill="rgb(230,73,7)" fg:x="45810" fg:w="26"/><text x="45.1891%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (312 samples, 0.31%)</title><rect x="44.8557%" y="581" width="0.3061%" height="15" fill="rgb(243,124,40)" fg:x="45725" fg:w="312"/><text x="45.1057%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (312 samples, 0.31%)</title><rect x="44.8557%" y="565" width="0.3061%" height="15" fill="rgb(244,170,11)" fg:x="45725" fg:w="312"/><text x="45.1057%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (253 samples, 0.25%)</title><rect x="44.9136%" y="549" width="0.2482%" height="15" fill="rgb(207,114,54)" fg:x="45784" fg:w="253"/><text x="45.1636%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (201 samples, 0.20%)</title><rect x="44.9646%" y="533" width="0.1972%" height="15" fill="rgb(205,42,20)" fg:x="45836" fg:w="201"/><text x="45.2146%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (201 samples, 0.20%)</title><rect x="44.9646%" y="517" width="0.1972%" height="15" fill="rgb(230,30,28)" fg:x="45836" fg:w="201"/><text x="45.2146%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (201 samples, 0.20%)</title><rect x="44.9646%" y="501" width="0.1972%" height="15" fill="rgb(205,73,54)" fg:x="45836" fg:w="201"/><text x="45.2146%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (320 samples, 0.31%)</title><rect x="44.8557%" y="789" width="0.3139%" height="15" fill="rgb(254,227,23)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (320 samples, 0.31%)</title><rect x="44.8557%" y="773" width="0.3139%" height="15" fill="rgb(228,202,34)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (320 samples, 0.31%)</title><rect x="44.8557%" y="757" width="0.3139%" height="15" fill="rgb(222,225,37)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (320 samples, 0.31%)</title><rect x="44.8557%" y="741" width="0.3139%" height="15" fill="rgb(221,14,54)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (320 samples, 0.31%)</title><rect x="44.8557%" y="725" width="0.3139%" height="15" fill="rgb(254,102,2)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (320 samples, 0.31%)</title><rect x="44.8557%" y="709" width="0.3139%" height="15" fill="rgb(232,104,17)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="719.50"></text></g><g><title>alloc::alloc::alloc (320 samples, 0.31%)</title><rect x="44.8557%" y="693" width="0.3139%" height="15" fill="rgb(250,220,14)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="703.50"></text></g><g><title>__rg_alloc (320 samples, 0.31%)</title><rect x="44.8557%" y="677" width="0.3139%" height="15" fill="rgb(241,158,9)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (320 samples, 0.31%)</title><rect x="44.8557%" y="661" width="0.3139%" height="15" fill="rgb(246,9,43)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="671.50"></text></g><g><title>rust_alloc (320 samples, 0.31%)</title><rect x="44.8557%" y="645" width="0.3139%" height="15" fill="rgb(206,73,33)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (320 samples, 0.31%)</title><rect x="44.8557%" y="629" width="0.3139%" height="15" fill="rgb(222,79,8)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (320 samples, 0.31%)</title><rect x="44.8557%" y="613" width="0.3139%" height="15" fill="rgb(234,8,54)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (320 samples, 0.31%)</title><rect x="44.8557%" y="597" width="0.3139%" height="15" fill="rgb(209,134,38)" fg:x="45725" fg:w="320"/><text x="45.1057%" y="607.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (576 samples, 0.57%)</title><rect x="45.4041%" y="757" width="0.5650%" height="15" fill="rgb(230,127,29)" fg:x="46284" fg:w="576"/><text x="45.6541%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="45.9564%" y="741" width="0.0128%" height="15" fill="rgb(242,44,41)" fg:x="46847" fg:w="13"/><text x="46.2064%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (13 samples, 0.01%)</title><rect x="45.9564%" y="725" width="0.0128%" height="15" fill="rgb(222,56,43)" fg:x="46847" fg:w="13"/><text x="46.2064%" y="735.50"></text></g><g><title>aligned_size (27 samples, 0.03%)</title><rect x="46.0456%" y="565" width="0.0265%" height="15" fill="rgb(238,39,47)" fg:x="46938" fg:w="27"/><text x="46.2956%" y="575.50"></text></g><g><title>size_to_sizeclass (21 samples, 0.02%)</title><rect x="46.0849%" y="533" width="0.0206%" height="15" fill="rgb(226,79,43)" fg:x="46978" fg:w="21"/><text x="46.3349%" y="543.50"></text></g><g><title>rust_alloc (18 samples, 0.02%)</title><rect x="46.0878%" y="517" width="0.0177%" height="15" fill="rgb(242,105,53)" fg:x="46981" fg:w="18"/><text x="46.3378%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="46.1182%" y="453" width="0.0177%" height="15" fill="rgb(251,132,46)" fg:x="47012" fg:w="18"/><text x="46.3682%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="46.1182%" y="437" width="0.0177%" height="15" fill="rgb(231,77,14)" fg:x="47012" fg:w="18"/><text x="46.3682%" y="447.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (17 samples, 0.02%)</title><rect x="46.1192%" y="421" width="0.0167%" height="15" fill="rgb(240,135,9)" fg:x="47013" fg:w="17"/><text x="46.3692%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (23 samples, 0.02%)</title><rect x="46.1182%" y="469" width="0.0226%" height="15" fill="rgb(248,109,14)" fg:x="47012" fg:w="23"/><text x="46.3682%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (38 samples, 0.04%)</title><rect x="46.1114%" y="485" width="0.0373%" height="15" fill="rgb(227,146,52)" fg:x="47005" fg:w="38"/><text x="46.3614%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (31 samples, 0.03%)</title><rect x="46.1673%" y="469" width="0.0304%" height="15" fill="rgb(232,54,3)" fg:x="47062" fg:w="31"/><text x="46.4173%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (224 samples, 0.22%)</title><rect x="46.1114%" y="517" width="0.2197%" height="15" fill="rgb(229,201,43)" fg:x="47005" fg:w="224"/><text x="46.3614%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (224 samples, 0.22%)</title><rect x="46.1114%" y="501" width="0.2197%" height="15" fill="rgb(252,161,33)" fg:x="47005" fg:w="224"/><text x="46.3614%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (186 samples, 0.18%)</title><rect x="46.1486%" y="485" width="0.1825%" height="15" fill="rgb(226,146,40)" fg:x="47043" fg:w="186"/><text x="46.3986%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (136 samples, 0.13%)</title><rect x="46.1977%" y="469" width="0.1334%" height="15" fill="rgb(219,47,25)" fg:x="47093" fg:w="136"/><text x="46.4477%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (136 samples, 0.13%)</title><rect x="46.1977%" y="453" width="0.1334%" height="15" fill="rgb(250,135,13)" fg:x="47093" fg:w="136"/><text x="46.4477%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (136 samples, 0.13%)</title><rect x="46.1977%" y="437" width="0.1334%" height="15" fill="rgb(219,229,18)" fg:x="47093" fg:w="136"/><text x="46.4477%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (12 samples, 0.01%)</title><rect x="46.3311%" y="517" width="0.0118%" height="15" fill="rgb(217,152,27)" fg:x="47229" fg:w="12"/><text x="46.5811%" y="527.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (11 samples, 0.01%)</title><rect x="46.3321%" y="501" width="0.0108%" height="15" fill="rgb(225,71,47)" fg:x="47230" fg:w="11"/><text x="46.5821%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (28 samples, 0.03%)</title><rect x="46.3488%" y="517" width="0.0275%" height="15" fill="rgb(220,139,14)" fg:x="47247" fg:w="28"/><text x="46.5988%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (28 samples, 0.03%)</title><rect x="46.3488%" y="501" width="0.0275%" height="15" fill="rgb(247,54,32)" fg:x="47247" fg:w="28"/><text x="46.5988%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (638 samples, 0.63%)</title><rect x="46.0741%" y="565" width="0.6259%" height="15" fill="rgb(252,131,39)" fg:x="46967" fg:w="638"/><text x="46.3241%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (631 samples, 0.62%)</title><rect x="46.0810%" y="549" width="0.6190%" height="15" fill="rgb(210,108,39)" fg:x="46974" fg:w="631"/><text x="46.3310%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (606 samples, 0.59%)</title><rect x="46.1055%" y="533" width="0.5945%" height="15" fill="rgb(205,23,29)" fg:x="46999" fg:w="606"/><text x="46.3555%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (330 samples, 0.32%)</title><rect x="46.3762%" y="517" width="0.3237%" height="15" fill="rgb(246,139,46)" fg:x="47275" fg:w="330"/><text x="46.6262%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (330 samples, 0.32%)</title><rect x="46.3762%" y="501" width="0.3237%" height="15" fill="rgb(250,81,26)" fg:x="47275" fg:w="330"/><text x="46.6262%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,397 samples, 1.37%)</title><rect x="45.3482%" y="773" width="1.3704%" height="15" fill="rgb(214,104,7)" fg:x="46227" fg:w="1397"/><text x="45.5982%" y="783.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (764 samples, 0.75%)</title><rect x="45.9691%" y="757" width="0.7495%" height="15" fill="rgb(233,189,8)" fg:x="46860" fg:w="764"/><text x="46.2191%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (762 samples, 0.75%)</title><rect x="45.9711%" y="741" width="0.7475%" height="15" fill="rgb(228,141,17)" fg:x="46862" fg:w="762"/><text x="46.2211%" y="751.50"></text></g><g><title>value_trait::Builder::object (762 samples, 0.75%)</title><rect x="45.9711%" y="725" width="0.7475%" height="15" fill="rgb(247,157,1)" fg:x="46862" fg:w="762"/><text x="46.2211%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (762 samples, 0.75%)</title><rect x="45.9711%" y="709" width="0.7475%" height="15" fill="rgb(249,225,5)" fg:x="46862" fg:w="762"/><text x="46.2211%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (762 samples, 0.75%)</title><rect x="45.9711%" y="693" width="0.7475%" height="15" fill="rgb(242,55,13)" fg:x="46862" fg:w="762"/><text x="46.2211%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (725 samples, 0.71%)</title><rect x="46.0074%" y="677" width="0.7112%" height="15" fill="rgb(230,49,50)" fg:x="46899" fg:w="725"/><text x="46.2574%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (725 samples, 0.71%)</title><rect x="46.0074%" y="661" width="0.7112%" height="15" fill="rgb(241,111,38)" fg:x="46899" fg:w="725"/><text x="46.2574%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (725 samples, 0.71%)</title><rect x="46.0074%" y="645" width="0.7112%" height="15" fill="rgb(252,155,4)" fg:x="46899" fg:w="725"/><text x="46.2574%" y="655.50"></text></g><g><title>alloc::alloc::alloc (718 samples, 0.70%)</title><rect x="46.0142%" y="629" width="0.7043%" height="15" fill="rgb(212,69,32)" fg:x="46906" fg:w="718"/><text x="46.2642%" y="639.50"></text></g><g><title>__rg_alloc (718 samples, 0.70%)</title><rect x="46.0142%" y="613" width="0.7043%" height="15" fill="rgb(243,107,47)" fg:x="46906" fg:w="718"/><text x="46.2642%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (718 samples, 0.70%)</title><rect x="46.0142%" y="597" width="0.7043%" height="15" fill="rgb(247,130,12)" fg:x="46906" fg:w="718"/><text x="46.2642%" y="607.50"></text></g><g><title>rust_alloc (686 samples, 0.67%)</title><rect x="46.0456%" y="581" width="0.6730%" height="15" fill="rgb(233,74,16)" fg:x="46938" fg:w="686"/><text x="46.2956%" y="591.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (19 samples, 0.02%)</title><rect x="46.7000%" y="565" width="0.0186%" height="15" fill="rgb(208,58,18)" fg:x="47605" fg:w="19"/><text x="46.9500%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (11 samples, 0.01%)</title><rect x="46.7284%" y="773" width="0.0108%" height="15" fill="rgb(242,225,1)" fg:x="47634" fg:w="11"/><text x="46.9784%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="46.7284%" y="757" width="0.0108%" height="15" fill="rgb(249,39,40)" fg:x="47634" fg:w="11"/><text x="46.9784%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (11 samples, 0.01%)</title><rect x="46.7284%" y="741" width="0.0108%" height="15" fill="rgb(207,72,44)" fg:x="47634" fg:w="11"/><text x="46.9784%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="46.7284%" y="725" width="0.0108%" height="15" fill="rgb(215,193,12)" fg:x="47634" fg:w="11"/><text x="46.9784%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="46.7392%" y="741" width="0.0108%" height="15" fill="rgb(248,41,39)" fg:x="47645" fg:w="11"/><text x="46.9892%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (11 samples, 0.01%)</title><rect x="46.7392%" y="725" width="0.0108%" height="15" fill="rgb(253,85,4)" fg:x="47645" fg:w="11"/><text x="46.9892%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (27 samples, 0.03%)</title><rect x="46.7392%" y="757" width="0.0265%" height="15" fill="rgb(243,70,31)" fg:x="47645" fg:w="27"/><text x="46.9892%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="46.7500%" y="741" width="0.0157%" height="15" fill="rgb(253,195,26)" fg:x="47656" fg:w="16"/><text x="47.0000%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="46.7500%" y="725" width="0.0157%" height="15" fill="rgb(243,42,11)" fg:x="47656" fg:w="16"/><text x="47.0000%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="46.7510%" y="709" width="0.0147%" height="15" fill="rgb(239,66,17)" fg:x="47657" fg:w="15"/><text x="47.0010%" y="719.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.02%)</title><rect x="46.8795%" y="709" width="0.0157%" height="15" fill="rgb(217,132,21)" fg:x="47788" fg:w="16"/><text x="47.1295%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="46.8795%" y="693" width="0.0157%" height="15" fill="rgb(252,202,21)" fg:x="47788" fg:w="16"/><text x="47.1295%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="46.8795%" y="677" width="0.0157%" height="15" fill="rgb(233,98,36)" fg:x="47788" fg:w="16"/><text x="47.1295%" y="687.50"></text></g><g><title>__rg_dealloc (16 samples, 0.02%)</title><rect x="46.8795%" y="661" width="0.0157%" height="15" fill="rgb(216,153,54)" fg:x="47788" fg:w="16"/><text x="47.1295%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.02%)</title><rect x="46.8795%" y="645" width="0.0157%" height="15" fill="rgb(250,99,7)" fg:x="47788" fg:w="16"/><text x="47.1295%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.06%)</title><rect x="46.9236%" y="645" width="0.0559%" height="15" fill="rgb(207,56,50)" fg:x="47833" fg:w="57"/><text x="47.1736%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (55 samples, 0.05%)</title><rect x="46.9256%" y="629" width="0.0540%" height="15" fill="rgb(244,61,34)" fg:x="47835" fg:w="55"/><text x="47.1756%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (219 samples, 0.21%)</title><rect x="46.7892%" y="741" width="0.2148%" height="15" fill="rgb(241,50,38)" fg:x="47696" fg:w="219"/><text x="47.0392%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (145 samples, 0.14%)</title><rect x="46.8618%" y="725" width="0.1422%" height="15" fill="rgb(212,166,30)" fg:x="47770" fg:w="145"/><text x="47.1118%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (111 samples, 0.11%)</title><rect x="46.8952%" y="709" width="0.1089%" height="15" fill="rgb(249,127,32)" fg:x="47804" fg:w="111"/><text x="47.1452%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (111 samples, 0.11%)</title><rect x="46.8952%" y="693" width="0.1089%" height="15" fill="rgb(209,103,0)" fg:x="47804" fg:w="111"/><text x="47.1452%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (82 samples, 0.08%)</title><rect x="46.9236%" y="677" width="0.0804%" height="15" fill="rgb(238,209,51)" fg:x="47833" fg:w="82"/><text x="47.1736%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (82 samples, 0.08%)</title><rect x="46.9236%" y="661" width="0.0804%" height="15" fill="rgb(237,56,23)" fg:x="47833" fg:w="82"/><text x="47.1736%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (25 samples, 0.02%)</title><rect x="46.9795%" y="645" width="0.0245%" height="15" fill="rgb(215,153,46)" fg:x="47890" fg:w="25"/><text x="47.2295%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="46.9795%" y="629" width="0.0245%" height="15" fill="rgb(224,49,31)" fg:x="47890" fg:w="25"/><text x="47.2295%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (21 samples, 0.02%)</title><rect x="46.9835%" y="613" width="0.0206%" height="15" fill="rgb(250,18,42)" fg:x="47894" fg:w="21"/><text x="47.2335%" y="623.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="47.0325%" y="709" width="0.0235%" height="15" fill="rgb(215,176,39)" fg:x="47944" fg:w="24"/><text x="47.2825%" y="719.50"></text></g><g><title>size_to_sizeclass (20 samples, 0.02%)</title><rect x="47.0561%" y="709" width="0.0196%" height="15" fill="rgb(223,77,29)" fg:x="47968" fg:w="20"/><text x="47.3061%" y="719.50"></text></g><g><title>rust_dealloc (16 samples, 0.02%)</title><rect x="47.0855%" y="645" width="0.0157%" height="15" fill="rgb(234,94,52)" fg:x="47998" fg:w="16"/><text x="47.3355%" y="655.50"></text></g><g><title>sizeclass_to_size (16 samples, 0.02%)</title><rect x="47.1012%" y="645" width="0.0157%" height="15" fill="rgb(220,154,50)" fg:x="48014" fg:w="16"/><text x="47.3512%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (16 samples, 0.02%)</title><rect x="47.1012%" y="629" width="0.0157%" height="15" fill="rgb(212,11,10)" fg:x="48014" fg:w="16"/><text x="47.3512%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (55 samples, 0.05%)</title><rect x="47.1591%" y="597" width="0.0540%" height="15" fill="rgb(205,166,19)" fg:x="48073" fg:w="55"/><text x="47.4091%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (49 samples, 0.05%)</title><rect x="47.1649%" y="581" width="0.0481%" height="15" fill="rgb(244,198,16)" fg:x="48079" fg:w="49"/><text x="47.4149%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (123 samples, 0.12%)</title><rect x="47.1208%" y="645" width="0.1207%" height="15" fill="rgb(219,69,12)" fg:x="48034" fg:w="123"/><text x="47.3708%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (123 samples, 0.12%)</title><rect x="47.1208%" y="629" width="0.1207%" height="15" fill="rgb(245,30,7)" fg:x="48034" fg:w="123"/><text x="47.3708%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (119 samples, 0.12%)</title><rect x="47.1247%" y="613" width="0.1167%" height="15" fill="rgb(218,221,48)" fg:x="48038" fg:w="119"/><text x="47.3747%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (29 samples, 0.03%)</title><rect x="47.2130%" y="597" width="0.0284%" height="15" fill="rgb(216,66,15)" fg:x="48128" fg:w="29"/><text x="47.4630%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (29 samples, 0.03%)</title><rect x="47.2130%" y="581" width="0.0284%" height="15" fill="rgb(226,122,50)" fg:x="48128" fg:w="29"/><text x="47.4630%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (192 samples, 0.19%)</title><rect x="47.0757%" y="677" width="0.1883%" height="15" fill="rgb(239,156,16)" fg:x="47988" fg:w="192"/><text x="47.3257%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (192 samples, 0.19%)</title><rect x="47.0757%" y="661" width="0.1883%" height="15" fill="rgb(224,27,38)" fg:x="47988" fg:w="192"/><text x="47.3257%" y="671.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="47.2415%" y="645" width="0.0226%" height="15" fill="rgb(224,39,27)" fg:x="48157" fg:w="23"/><text x="47.4915%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (193 samples, 0.19%)</title><rect x="47.0757%" y="709" width="0.1893%" height="15" fill="rgb(215,92,29)" fg:x="47988" fg:w="193"/><text x="47.3257%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (193 samples, 0.19%)</title><rect x="47.0757%" y="693" width="0.1893%" height="15" fill="rgb(207,159,16)" fg:x="47988" fg:w="193"/><text x="47.3257%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (239 samples, 0.23%)</title><rect x="47.0325%" y="725" width="0.2345%" height="15" fill="rgb(238,163,47)" fg:x="47944" fg:w="239"/><text x="47.2825%" y="735.50"></text></g><g><title>rust_dealloc (273 samples, 0.27%)</title><rect x="47.0041%" y="741" width="0.2678%" height="15" fill="rgb(219,91,49)" fg:x="47915" fg:w="273"/><text x="47.2541%" y="751.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (12 samples, 0.01%)</title><rect x="47.2729%" y="725" width="0.0118%" height="15" fill="rgb(227,167,31)" fg:x="48189" fg:w="12"/><text x="47.5229%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (559 samples, 0.55%)</title><rect x="46.7392%" y="773" width="0.5484%" height="15" fill="rgb(234,80,54)" fg:x="47645" fg:w="559"/><text x="46.9892%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (532 samples, 0.52%)</title><rect x="46.7657%" y="757" width="0.5219%" height="15" fill="rgb(212,114,2)" fg:x="47672" fg:w="532"/><text x="47.0157%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.02%)</title><rect x="47.2719%" y="741" width="0.0157%" height="15" fill="rgb(234,50,24)" fg:x="48188" fg:w="16"/><text x="47.5219%" y="751.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (27 samples, 0.03%)</title><rect x="47.2876%" y="773" width="0.0265%" height="15" fill="rgb(221,68,8)" fg:x="48204" fg:w="27"/><text x="47.5376%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,129 samples, 3.07%)</title><rect x="44.2642%" y="853" width="3.0695%" height="15" fill="rgb(254,180,31)" fg:x="45122" fg:w="3129"/><text x="44.5142%" y="863.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,129 samples, 3.07%)</title><rect x="44.2642%" y="837" width="3.0695%" height="15" fill="rgb(247,130,50)" fg:x="45122" fg:w="3129"/><text x="44.5142%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,129 samples, 3.07%)</title><rect x="44.2642%" y="821" width="3.0695%" height="15" fill="rgb(211,109,4)" fg:x="45122" fg:w="3129"/><text x="44.5142%" y="831.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,831 samples, 2.78%)</title><rect x="44.5565%" y="805" width="2.7772%" height="15" fill="rgb(238,50,21)" fg:x="45420" fg:w="2831"/><text x="44.8065%" y="815.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_event (2,200 samples, 2.16%)</title><rect x="45.1755%" y="789" width="2.1582%" height="15" fill="rgb(225,57,45)" fg:x="46051" fg:w="2200"/><text x="45.4255%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (20 samples, 0.02%)</title><rect x="47.3141%" y="773" width="0.0196%" height="15" fill="rgb(209,196,50)" fg:x="48231" fg:w="20"/><text x="47.5641%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (58 samples, 0.06%)</title><rect x="47.4563%" y="789" width="0.0569%" height="15" fill="rgb(242,140,13)" fg:x="48376" fg:w="58"/><text x="47.7063%" y="799.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (17 samples, 0.02%)</title><rect x="47.4965%" y="773" width="0.0167%" height="15" fill="rgb(217,111,7)" fg:x="48417" fg:w="17"/><text x="47.7465%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (982 samples, 0.96%)</title><rect x="47.3651%" y="805" width="0.9633%" height="15" fill="rgb(253,193,51)" fg:x="48283" fg:w="982"/><text x="47.6151%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (824 samples, 0.81%)</title><rect x="47.5201%" y="789" width="0.8083%" height="15" fill="rgb(252,70,29)" fg:x="48441" fg:w="824"/><text x="47.7701%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,492 samples, 1.46%)</title><rect x="47.3337%" y="837" width="1.4636%" height="15" fill="rgb(232,127,12)" fg:x="48251" fg:w="1492"/><text x="47.5837%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,492 samples, 1.46%)</title><rect x="47.3337%" y="821" width="1.4636%" height="15" fill="rgb(211,180,21)" fg:x="48251" fg:w="1492"/><text x="47.5837%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (478 samples, 0.47%)</title><rect x="48.3284%" y="805" width="0.4689%" height="15" fill="rgb(229,72,13)" fg:x="49265" fg:w="478"/><text x="48.5784%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="48.8405%" y="821" width="0.0177%" height="15" fill="rgb(240,211,49)" fg:x="49787" fg:w="18"/><text x="49.0905%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (355 samples, 0.35%)</title><rect x="48.8581%" y="821" width="0.3483%" height="15" fill="rgb(219,149,40)" fg:x="49805" fg:w="355"/><text x="49.1081%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (33 samples, 0.03%)</title><rect x="49.4320%" y="805" width="0.0324%" height="15" fill="rgb(210,127,46)" fg:x="50390" fg:w="33"/><text x="49.6820%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="49.4712%" y="789" width="0.0383%" height="15" fill="rgb(220,106,7)" fg:x="50430" fg:w="39"/><text x="49.7212%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (12 samples, 0.01%)</title><rect x="49.4977%" y="773" width="0.0118%" height="15" fill="rgb(249,31,22)" fg:x="50457" fg:w="12"/><text x="49.7477%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (297 samples, 0.29%)</title><rect x="49.4712%" y="805" width="0.2914%" height="15" fill="rgb(253,1,49)" fg:x="50430" fg:w="297"/><text x="49.7212%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (258 samples, 0.25%)</title><rect x="49.5095%" y="789" width="0.2531%" height="15" fill="rgb(227,144,33)" fg:x="50469" fg:w="258"/><text x="49.7595%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (247 samples, 0.24%)</title><rect x="49.5203%" y="773" width="0.2423%" height="15" fill="rgb(249,163,44)" fg:x="50480" fg:w="247"/><text x="49.7703%" y="783.50"></text></g><g><title>core::ptr::read (247 samples, 0.24%)</title><rect x="49.5203%" y="757" width="0.2423%" height="15" fill="rgb(234,15,39)" fg:x="50480" fg:w="247"/><text x="49.7703%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (244 samples, 0.24%)</title><rect x="49.5232%" y="741" width="0.2394%" height="15" fill="rgb(207,66,16)" fg:x="50483" fg:w="244"/><text x="49.7732%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="49.7685%" y="645" width="0.0118%" height="15" fill="rgb(233,112,24)" fg:x="50733" fg:w="12"/><text x="50.0185%" y="655.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="49.7960%" y="533" width="0.0147%" height="15" fill="rgb(230,90,22)" fg:x="50761" fg:w="15"/><text x="50.0460%" y="543.50"></text></g><g><title>size_to_sizeclass (48 samples, 0.05%)</title><rect x="49.8117%" y="501" width="0.0471%" height="15" fill="rgb(229,61,13)" fg:x="50777" fg:w="48"/><text x="50.0617%" y="511.50"></text></g><g><title>rust_alloc (17 samples, 0.02%)</title><rect x="49.8421%" y="485" width="0.0167%" height="15" fill="rgb(225,57,24)" fg:x="50808" fg:w="17"/><text x="50.0921%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (24 samples, 0.02%)</title><rect x="49.8803%" y="421" width="0.0235%" height="15" fill="rgb(208,169,48)" fg:x="50847" fg:w="24"/><text x="50.1303%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (24 samples, 0.02%)</title><rect x="49.8803%" y="405" width="0.0235%" height="15" fill="rgb(244,218,51)" fg:x="50847" fg:w="24"/><text x="50.1303%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (23 samples, 0.02%)</title><rect x="49.8813%" y="389" width="0.0226%" height="15" fill="rgb(214,148,10)" fg:x="50848" fg:w="23"/><text x="50.1313%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (28 samples, 0.03%)</title><rect x="49.8803%" y="437" width="0.0275%" height="15" fill="rgb(225,174,27)" fg:x="50847" fg:w="28"/><text x="50.1303%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (41 samples, 0.04%)</title><rect x="49.8744%" y="453" width="0.0402%" height="15" fill="rgb(230,96,26)" fg:x="50841" fg:w="41"/><text x="50.1244%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (19 samples, 0.02%)</title><rect x="49.9215%" y="437" width="0.0186%" height="15" fill="rgb(232,10,30)" fg:x="50889" fg:w="19"/><text x="50.1715%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (230 samples, 0.23%)</title><rect x="49.8744%" y="485" width="0.2256%" height="15" fill="rgb(222,8,50)" fg:x="50841" fg:w="230"/><text x="50.1244%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (230 samples, 0.23%)</title><rect x="49.8744%" y="469" width="0.2256%" height="15" fill="rgb(213,81,27)" fg:x="50841" fg:w="230"/><text x="50.1244%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (189 samples, 0.19%)</title><rect x="49.9147%" y="453" width="0.1854%" height="15" fill="rgb(245,50,10)" fg:x="50882" fg:w="189"/><text x="50.1647%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (163 samples, 0.16%)</title><rect x="49.9402%" y="437" width="0.1599%" height="15" fill="rgb(216,100,18)" fg:x="50908" fg:w="163"/><text x="50.1902%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (163 samples, 0.16%)</title><rect x="49.9402%" y="421" width="0.1599%" height="15" fill="rgb(236,147,54)" fg:x="50908" fg:w="163"/><text x="50.1902%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (163 samples, 0.16%)</title><rect x="49.9402%" y="405" width="0.1599%" height="15" fill="rgb(205,143,26)" fg:x="50908" fg:w="163"/><text x="50.1902%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (99 samples, 0.10%)</title><rect x="50.1079%" y="485" width="0.0971%" height="15" fill="rgb(236,26,9)" fg:x="51079" fg:w="99"/><text x="50.3579%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (99 samples, 0.10%)</title><rect x="50.1079%" y="469" width="0.0971%" height="15" fill="rgb(221,165,53)" fg:x="51079" fg:w="99"/><text x="50.3579%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (1,047 samples, 1.03%)</title><rect x="49.8107%" y="533" width="1.0271%" height="15" fill="rgb(214,110,17)" fg:x="50776" fg:w="1047"/><text x="50.0607%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (1,046 samples, 1.03%)</title><rect x="49.8117%" y="517" width="1.0261%" height="15" fill="rgb(237,197,12)" fg:x="50777" fg:w="1046"/><text x="50.0617%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (998 samples, 0.98%)</title><rect x="49.8587%" y="501" width="0.9790%" height="15" fill="rgb(205,84,17)" fg:x="50825" fg:w="998"/><text x="50.1087%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (645 samples, 0.63%)</title><rect x="50.2050%" y="485" width="0.6327%" height="15" fill="rgb(237,18,45)" fg:x="51178" fg:w="645"/><text x="50.4550%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (645 samples, 0.63%)</title><rect x="50.2050%" y="469" width="0.6327%" height="15" fill="rgb(221,87,14)" fg:x="51178" fg:w="645"/><text x="50.4550%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,098 samples, 1.08%)</title><rect x="49.7685%" y="677" width="1.0771%" height="15" fill="rgb(238,186,15)" fg:x="50733" fg:w="1098"/><text x="50.0185%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,098 samples, 1.08%)</title><rect x="49.7685%" y="661" width="1.0771%" height="15" fill="rgb(208,115,11)" fg:x="50733" fg:w="1098"/><text x="50.0185%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,086 samples, 1.07%)</title><rect x="49.7803%" y="645" width="1.0654%" height="15" fill="rgb(254,175,0)" fg:x="50745" fg:w="1086"/><text x="50.0303%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,086 samples, 1.07%)</title><rect x="49.7803%" y="629" width="1.0654%" height="15" fill="rgb(227,24,42)" fg:x="50745" fg:w="1086"/><text x="50.0303%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,086 samples, 1.07%)</title><rect x="49.7803%" y="613" width="1.0654%" height="15" fill="rgb(223,211,37)" fg:x="50745" fg:w="1086"/><text x="50.0303%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,077 samples, 1.06%)</title><rect x="49.7891%" y="597" width="1.0565%" height="15" fill="rgb(235,49,27)" fg:x="50754" fg:w="1077"/><text x="50.0391%" y="607.50"></text></g><g><title>__rg_alloc (1,077 samples, 1.06%)</title><rect x="49.7891%" y="581" width="1.0565%" height="15" fill="rgb(254,97,51)" fg:x="50754" fg:w="1077"/><text x="50.0391%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,077 samples, 1.06%)</title><rect x="49.7891%" y="565" width="1.0565%" height="15" fill="rgb(249,51,40)" fg:x="50754" fg:w="1077"/><text x="50.0391%" y="575.50"></text></g><g><title>rust_alloc (1,070 samples, 1.05%)</title><rect x="49.7960%" y="549" width="1.0497%" height="15" fill="rgb(210,128,45)" fg:x="50761" fg:w="1070"/><text x="50.0460%" y="559.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,144 samples, 1.12%)</title><rect x="49.7685%" y="805" width="1.1223%" height="15" fill="rgb(224,137,50)" fg:x="50733" fg:w="1144"/><text x="50.0185%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,144 samples, 1.12%)</title><rect x="49.7685%" y="789" width="1.1223%" height="15" fill="rgb(242,15,9)" fg:x="50733" fg:w="1144"/><text x="50.0185%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,144 samples, 1.12%)</title><rect x="49.7685%" y="773" width="1.1223%" height="15" fill="rgb(233,187,41)" fg:x="50733" fg:w="1144"/><text x="50.0185%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,144 samples, 1.12%)</title><rect x="49.7685%" y="757" width="1.1223%" height="15" fill="rgb(227,2,29)" fg:x="50733" fg:w="1144"/><text x="50.0185%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,144 samples, 1.12%)</title><rect x="49.7685%" y="741" width="1.1223%" height="15" fill="rgb(222,70,3)" fg:x="50733" fg:w="1144"/><text x="50.0185%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,144 samples, 1.12%)</title><rect x="49.7685%" y="725" width="1.1223%" height="15" fill="rgb(213,11,42)" fg:x="50733" fg:w="1144"/><text x="50.0185%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,144 samples, 1.12%)</title><rect x="49.7685%" y="709" width="1.1223%" height="15" fill="rgb(225,150,9)" fg:x="50733" fg:w="1144"/><text x="50.0185%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,144 samples, 1.12%)</title><rect x="49.7685%" y="693" width="1.1223%" height="15" fill="rgb(230,162,45)" fg:x="50733" fg:w="1144"/><text x="50.0185%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (46 samples, 0.05%)</title><rect x="50.8456%" y="677" width="0.0451%" height="15" fill="rgb(222,14,52)" fg:x="51831" fg:w="46"/><text x="51.0956%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.05%)</title><rect x="50.8456%" y="661" width="0.0451%" height="15" fill="rgb(254,198,14)" fg:x="51831" fg:w="46"/><text x="51.0956%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.03%)</title><rect x="50.8613%" y="645" width="0.0294%" height="15" fill="rgb(220,217,30)" fg:x="51847" fg:w="30"/><text x="51.1113%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,398 samples, 1.37%)</title><rect x="50.8907%" y="805" width="1.3714%" height="15" fill="rgb(215,146,41)" fg:x="51877" fg:w="1398"/><text x="51.1407%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (16 samples, 0.02%)</title><rect x="52.2651%" y="789" width="0.0157%" height="15" fill="rgb(217,27,36)" fg:x="53278" fg:w="16"/><text x="52.5151%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (26 samples, 0.03%)</title><rect x="52.2622%" y="805" width="0.0255%" height="15" fill="rgb(219,218,39)" fg:x="53275" fg:w="26"/><text x="52.5122%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (24 samples, 0.02%)</title><rect x="52.2877%" y="805" width="0.0235%" height="15" fill="rgb(219,4,42)" fg:x="53301" fg:w="24"/><text x="52.5377%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="52.2877%" y="789" width="0.0235%" height="15" fill="rgb(249,119,36)" fg:x="53301" fg:w="24"/><text x="52.5377%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="52.3181%" y="805" width="0.0235%" height="15" fill="rgb(209,23,33)" fg:x="53332" fg:w="24"/><text x="52.5681%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="52.3298%" y="789" width="0.0118%" height="15" fill="rgb(211,10,0)" fg:x="53344" fg:w="12"/><text x="52.5798%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (21 samples, 0.02%)</title><rect x="52.3416%" y="805" width="0.0206%" height="15" fill="rgb(208,99,37)" fg:x="53356" fg:w="21"/><text x="52.5916%" y="815.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (13 samples, 0.01%)</title><rect x="52.3818%" y="789" width="0.0128%" height="15" fill="rgb(213,132,31)" fg:x="53397" fg:w="13"/><text x="52.6318%" y="799.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (26 samples, 0.03%)</title><rect x="52.3975%" y="757" width="0.0255%" height="15" fill="rgb(243,129,40)" fg:x="53413" fg:w="26"/><text x="52.6475%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (250 samples, 0.25%)</title><rect x="52.3975%" y="773" width="0.2452%" height="15" fill="rgb(210,66,33)" fg:x="53413" fg:w="250"/><text x="52.6475%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (224 samples, 0.22%)</title><rect x="52.4230%" y="757" width="0.2197%" height="15" fill="rgb(209,189,4)" fg:x="53439" fg:w="224"/><text x="52.6730%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (224 samples, 0.22%)</title><rect x="52.4230%" y="741" width="0.2197%" height="15" fill="rgb(214,107,37)" fg:x="53439" fg:w="224"/><text x="52.6730%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (224 samples, 0.22%)</title><rect x="52.4230%" y="725" width="0.2197%" height="15" fill="rgb(245,88,54)" fg:x="53439" fg:w="224"/><text x="52.6730%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (224 samples, 0.22%)</title><rect x="52.4230%" y="709" width="0.2197%" height="15" fill="rgb(205,146,20)" fg:x="53439" fg:w="224"/><text x="52.6730%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (224 samples, 0.22%)</title><rect x="52.4230%" y="693" width="0.2197%" height="15" fill="rgb(220,161,25)" fg:x="53439" fg:w="224"/><text x="52.6730%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (108 samples, 0.11%)</title><rect x="52.5368%" y="677" width="0.1059%" height="15" fill="rgb(215,152,15)" fg:x="53555" fg:w="108"/><text x="52.7868%" y="687.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (287 samples, 0.28%)</title><rect x="52.3622%" y="805" width="0.2815%" height="15" fill="rgb(233,192,44)" fg:x="53377" fg:w="287"/><text x="52.6122%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (254 samples, 0.25%)</title><rect x="52.3946%" y="789" width="0.2492%" height="15" fill="rgb(240,170,46)" fg:x="53410" fg:w="254"/><text x="52.6446%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,617 samples, 3.55%)</title><rect x="49.2064%" y="821" width="3.5482%" height="15" fill="rgb(207,104,33)" fg:x="50160" fg:w="3617"/><text x="49.4564%" y="831.50">trem..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (113 samples, 0.11%)</title><rect x="52.6438%" y="805" width="0.1109%" height="15" fill="rgb(219,21,39)" fg:x="53664" fg:w="113"/><text x="52.8938%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (113 samples, 0.11%)</title><rect x="52.6438%" y="789" width="0.1109%" height="15" fill="rgb(214,133,29)" fg:x="53664" fg:w="113"/><text x="52.8938%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (113 samples, 0.11%)</title><rect x="52.6438%" y="773" width="0.1109%" height="15" fill="rgb(226,93,6)" fg:x="53664" fg:w="113"/><text x="52.8938%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (73 samples, 0.07%)</title><rect x="52.6830%" y="757" width="0.0716%" height="15" fill="rgb(252,222,34)" fg:x="53704" fg:w="73"/><text x="52.9330%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,660 samples, 8.50%)</title><rect x="44.2602%" y="1141" width="8.4954%" height="15" fill="rgb(252,92,48)" fg:x="45118" fg:w="8660"/><text x="44.5102%" y="1151.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.49%)</title><rect x="44.2642%" y="1125" width="8.4914%" height="15" fill="rgb(245,223,24)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1135.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,656 samples, 8.49%)</title><rect x="44.2642%" y="1109" width="8.4914%" height="15" fill="rgb(205,176,3)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1119.50">async_execut..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.49%)</title><rect x="44.2642%" y="1093" width="8.4914%" height="15" fill="rgb(235,151,15)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1103.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.49%)</title><rect x="44.2642%" y="1077" width="8.4914%" height="15" fill="rgb(237,209,11)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1087.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,656 samples, 8.49%)</title><rect x="44.2642%" y="1061" width="8.4914%" height="15" fill="rgb(243,227,24)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1071.50">async_execut..</text></g><g><title>async_task::runnable::Runnable::run (8,656 samples, 8.49%)</title><rect x="44.2642%" y="1045" width="8.4914%" height="15" fill="rgb(239,193,16)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1055.50">async_task::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,656 samples, 8.49%)</title><rect x="44.2642%" y="1029" width="8.4914%" height="15" fill="rgb(231,27,9)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1039.50">async_task::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.49%)</title><rect x="44.2642%" y="1013" width="8.4914%" height="15" fill="rgb(219,169,10)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1023.50">&lt;core::pin::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.49%)</title><rect x="44.2642%" y="997" width="8.4914%" height="15" fill="rgb(244,229,43)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="1007.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,656 samples, 8.49%)</title><rect x="44.2642%" y="981" width="8.4914%" height="15" fill="rgb(254,38,20)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="991.50">async_execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.49%)</title><rect x="44.2642%" y="965" width="8.4914%" height="15" fill="rgb(250,47,30)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="975.50">&lt;async_std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,656 samples, 8.49%)</title><rect x="44.2642%" y="949" width="8.4914%" height="15" fill="rgb(224,124,36)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="959.50">async_std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,656 samples, 8.49%)</title><rect x="44.2642%" y="933" width="8.4914%" height="15" fill="rgb(246,68,51)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="943.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,656 samples, 8.49%)</title><rect x="44.2642%" y="917" width="8.4914%" height="15" fill="rgb(253,43,49)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="927.50">std::thread:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,656 samples, 8.49%)</title><rect x="44.2642%" y="901" width="8.4914%" height="15" fill="rgb(219,54,36)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="911.50">async_std::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,656 samples, 8.49%)</title><rect x="44.2642%" y="885" width="8.4914%" height="15" fill="rgb(227,133,34)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="895.50">&lt;async_std::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,656 samples, 8.49%)</title><rect x="44.2642%" y="869" width="8.4914%" height="15" fill="rgb(247,227,15)" fg:x="45122" fg:w="8656"/><text x="44.5142%" y="879.50">&lt;core::futur..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,527 samples, 5.42%)</title><rect x="47.3337%" y="853" width="5.4219%" height="15" fill="rgb(229,96,14)" fg:x="48251" fg:w="5527"/><text x="47.5837%" y="863.50">tremor_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,035 samples, 3.96%)</title><rect x="48.7973%" y="837" width="3.9583%" height="15" fill="rgb(220,79,17)" fg:x="49743" fg:w="4035"/><text x="49.0473%" y="847.50">&lt;cor..</text></g><g><title>async_io::driver::block_on (8,663 samples, 8.50%)</title><rect x="44.2602%" y="1157" width="8.4983%" height="15" fill="rgb(205,131,53)" fg:x="45118" fg:w="8663"/><text x="44.5102%" y="1167.50">async_io::dr..</text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="53.3815%" y="757" width="0.0157%" height="15" fill="rgb(209,50,29)" fg:x="54416" fg:w="16"/><text x="53.6315%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="53.3991%" y="709" width="0.0118%" height="15" fill="rgb(245,86,46)" fg:x="54434" fg:w="12"/><text x="53.6491%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.08%)</title><rect x="53.3991%" y="741" width="0.0755%" height="15" fill="rgb(235,66,46)" fg:x="54434" fg:w="77"/><text x="53.6491%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (77 samples, 0.08%)</title><rect x="53.3991%" y="725" width="0.0755%" height="15" fill="rgb(232,148,31)" fg:x="54434" fg:w="77"/><text x="53.6491%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (65 samples, 0.06%)</title><rect x="53.4109%" y="709" width="0.0638%" height="15" fill="rgb(217,149,8)" fg:x="54446" fg:w="65"/><text x="53.6609%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (54 samples, 0.05%)</title><rect x="53.4217%" y="693" width="0.0530%" height="15" fill="rgb(209,183,11)" fg:x="54457" fg:w="54"/><text x="53.6717%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="53.4217%" y="677" width="0.0530%" height="15" fill="rgb(208,55,20)" fg:x="54457" fg:w="54"/><text x="53.6717%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (54 samples, 0.05%)</title><rect x="53.4217%" y="661" width="0.0530%" height="15" fill="rgb(218,39,14)" fg:x="54457" fg:w="54"/><text x="53.6717%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (14 samples, 0.01%)</title><rect x="53.4825%" y="741" width="0.0137%" height="15" fill="rgb(216,169,33)" fg:x="54519" fg:w="14"/><text x="53.7325%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (14 samples, 0.01%)</title><rect x="53.4825%" y="725" width="0.0137%" height="15" fill="rgb(233,80,24)" fg:x="54519" fg:w="14"/><text x="53.7325%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (391 samples, 0.38%)</title><rect x="53.3815%" y="789" width="0.3836%" height="15" fill="rgb(213,179,31)" fg:x="54416" fg:w="391"/><text x="53.6315%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (391 samples, 0.38%)</title><rect x="53.3815%" y="773" width="0.3836%" height="15" fill="rgb(209,19,5)" fg:x="54416" fg:w="391"/><text x="53.6315%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (375 samples, 0.37%)</title><rect x="53.3972%" y="757" width="0.3679%" height="15" fill="rgb(219,18,35)" fg:x="54432" fg:w="375"/><text x="53.6472%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (274 samples, 0.27%)</title><rect x="53.4962%" y="741" width="0.2688%" height="15" fill="rgb(209,169,16)" fg:x="54533" fg:w="274"/><text x="53.7462%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (274 samples, 0.27%)</title><rect x="53.4962%" y="725" width="0.2688%" height="15" fill="rgb(245,90,51)" fg:x="54533" fg:w="274"/><text x="53.7462%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (416 samples, 0.41%)</title><rect x="53.3628%" y="901" width="0.4081%" height="15" fill="rgb(220,99,45)" fg:x="54397" fg:w="416"/><text x="53.6128%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (416 samples, 0.41%)</title><rect x="53.3628%" y="885" width="0.4081%" height="15" fill="rgb(249,89,25)" fg:x="54397" fg:w="416"/><text x="53.6128%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (416 samples, 0.41%)</title><rect x="53.3628%" y="869" width="0.4081%" height="15" fill="rgb(239,193,0)" fg:x="54397" fg:w="416"/><text x="53.6128%" y="879.50"></text></g><g><title>alloc::alloc::alloc (416 samples, 0.41%)</title><rect x="53.3628%" y="853" width="0.4081%" height="15" fill="rgb(231,126,1)" fg:x="54397" fg:w="416"/><text x="53.6128%" y="863.50"></text></g><g><title>__rg_alloc (416 samples, 0.41%)</title><rect x="53.3628%" y="837" width="0.4081%" height="15" fill="rgb(243,166,3)" fg:x="54397" fg:w="416"/><text x="53.6128%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (416 samples, 0.41%)</title><rect x="53.3628%" y="821" width="0.4081%" height="15" fill="rgb(223,22,34)" fg:x="54397" fg:w="416"/><text x="53.6128%" y="831.50"></text></g><g><title>rust_alloc (410 samples, 0.40%)</title><rect x="53.3687%" y="805" width="0.4022%" height="15" fill="rgb(251,52,51)" fg:x="54403" fg:w="410"/><text x="53.6187%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (23 samples, 0.02%)</title><rect x="53.7709%" y="901" width="0.0226%" height="15" fill="rgb(221,165,28)" fg:x="54813" fg:w="23"/><text x="54.0209%" y="911.50"></text></g><g><title>alloc::slice::hack::into_vec (23 samples, 0.02%)</title><rect x="53.7709%" y="885" width="0.0226%" height="15" fill="rgb(218,121,47)" fg:x="54813" fg:w="23"/><text x="54.0209%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (23 samples, 0.02%)</title><rect x="53.7709%" y="869" width="0.0226%" height="15" fill="rgb(209,120,9)" fg:x="54813" fg:w="23"/><text x="54.0209%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="53.7935%" y="901" width="0.0226%" height="15" fill="rgb(236,68,12)" fg:x="54836" fg:w="23"/><text x="54.0435%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="53.8160%" y="901" width="0.0137%" height="15" fill="rgb(225,194,26)" fg:x="54859" fg:w="14"/><text x="54.0660%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="53.8160%" y="885" width="0.0137%" height="15" fill="rgb(231,84,39)" fg:x="54859" fg:w="14"/><text x="54.0660%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="53.8160%" y="869" width="0.0137%" height="15" fill="rgb(210,11,45)" fg:x="54859" fg:w="14"/><text x="54.0660%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="53.8160%" y="853" width="0.0137%" height="15" fill="rgb(224,54,52)" fg:x="54859" fg:w="14"/><text x="54.0660%" y="863.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (1,102 samples, 1.08%)</title><rect x="52.7595%" y="917" width="1.0810%" height="15" fill="rgb(238,102,14)" fg:x="53782" fg:w="1102"/><text x="53.0095%" y="927.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (11 samples, 0.01%)</title><rect x="53.8298%" y="901" width="0.0108%" height="15" fill="rgb(243,160,52)" fg:x="54873" fg:w="11"/><text x="54.0798%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (11 samples, 0.01%)</title><rect x="53.8298%" y="885" width="0.0108%" height="15" fill="rgb(216,114,19)" fg:x="54873" fg:w="11"/><text x="54.0798%" y="895.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="53.8298%" y="869" width="0.0108%" height="15" fill="rgb(244,166,37)" fg:x="54873" fg:w="11"/><text x="54.0798%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.01%)</title><rect x="53.8298%" y="853" width="0.0108%" height="15" fill="rgb(246,29,44)" fg:x="54873" fg:w="11"/><text x="54.0798%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="53.8298%" y="837" width="0.0108%" height="15" fill="rgb(215,56,53)" fg:x="54873" fg:w="11"/><text x="54.0798%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (170 samples, 0.17%)</title><rect x="54.2545%" y="901" width="0.1668%" height="15" fill="rgb(217,60,2)" fg:x="55306" fg:w="170"/><text x="54.5045%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (56 samples, 0.05%)</title><rect x="54.4527%" y="741" width="0.0549%" height="15" fill="rgb(207,26,24)" fg:x="55508" fg:w="56"/><text x="54.7027%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (56 samples, 0.05%)</title><rect x="54.4527%" y="725" width="0.0549%" height="15" fill="rgb(252,210,15)" fg:x="55508" fg:w="56"/><text x="54.7027%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (47 samples, 0.05%)</title><rect x="54.4615%" y="709" width="0.0461%" height="15" fill="rgb(253,209,26)" fg:x="55517" fg:w="47"/><text x="54.7115%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (37 samples, 0.04%)</title><rect x="54.4713%" y="693" width="0.0363%" height="15" fill="rgb(238,170,14)" fg:x="55527" fg:w="37"/><text x="54.7213%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (37 samples, 0.04%)</title><rect x="54.4713%" y="677" width="0.0363%" height="15" fill="rgb(216,178,15)" fg:x="55527" fg:w="37"/><text x="54.7213%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (37 samples, 0.04%)</title><rect x="54.4713%" y="661" width="0.0363%" height="15" fill="rgb(250,197,2)" fg:x="55527" fg:w="37"/><text x="54.7213%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (16 samples, 0.02%)</title><rect x="54.5155%" y="741" width="0.0157%" height="15" fill="rgb(212,70,42)" fg:x="55572" fg:w="16"/><text x="54.7655%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (16 samples, 0.02%)</title><rect x="54.5155%" y="725" width="0.0157%" height="15" fill="rgb(227,213,9)" fg:x="55572" fg:w="16"/><text x="54.7655%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.24%)</title><rect x="54.4390%" y="789" width="0.2354%" height="15" fill="rgb(245,99,25)" fg:x="55494" fg:w="240"/><text x="54.6890%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (232 samples, 0.23%)</title><rect x="54.4468%" y="773" width="0.2276%" height="15" fill="rgb(250,82,29)" fg:x="55502" fg:w="232"/><text x="54.6968%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (228 samples, 0.22%)</title><rect x="54.4507%" y="757" width="0.2237%" height="15" fill="rgb(241,226,54)" fg:x="55506" fg:w="228"/><text x="54.7007%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (146 samples, 0.14%)</title><rect x="54.5312%" y="741" width="0.1432%" height="15" fill="rgb(221,99,41)" fg:x="55588" fg:w="146"/><text x="54.7812%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (146 samples, 0.14%)</title><rect x="54.5312%" y="725" width="0.1432%" height="15" fill="rgb(213,90,21)" fg:x="55588" fg:w="146"/><text x="54.7812%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (270 samples, 0.26%)</title><rect x="54.4213%" y="901" width="0.2649%" height="15" fill="rgb(205,208,24)" fg:x="55476" fg:w="270"/><text x="54.6713%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (270 samples, 0.26%)</title><rect x="54.4213%" y="885" width="0.2649%" height="15" fill="rgb(246,31,12)" fg:x="55476" fg:w="270"/><text x="54.6713%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (270 samples, 0.26%)</title><rect x="54.4213%" y="869" width="0.2649%" height="15" fill="rgb(213,154,6)" fg:x="55476" fg:w="270"/><text x="54.6713%" y="879.50"></text></g><g><title>alloc::alloc::alloc (268 samples, 0.26%)</title><rect x="54.4233%" y="853" width="0.2629%" height="15" fill="rgb(222,163,29)" fg:x="55478" fg:w="268"/><text x="54.6733%" y="863.50"></text></g><g><title>__rg_alloc (268 samples, 0.26%)</title><rect x="54.4233%" y="837" width="0.2629%" height="15" fill="rgb(227,201,8)" fg:x="55478" fg:w="268"/><text x="54.6733%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (268 samples, 0.26%)</title><rect x="54.4233%" y="821" width="0.2629%" height="15" fill="rgb(233,9,32)" fg:x="55478" fg:w="268"/><text x="54.6733%" y="831.50"></text></g><g><title>rust_alloc (257 samples, 0.25%)</title><rect x="54.4341%" y="805" width="0.2521%" height="15" fill="rgb(217,54,24)" fg:x="55489" fg:w="257"/><text x="54.6841%" y="815.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="54.6744%" y="789" width="0.0118%" height="15" fill="rgb(235,192,0)" fg:x="55734" fg:w="12"/><text x="54.9244%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (12 samples, 0.01%)</title><rect x="54.7333%" y="661" width="0.0118%" height="15" fill="rgb(235,45,9)" fg:x="55794" fg:w="12"/><text x="54.9833%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (12 samples, 0.01%)</title><rect x="54.7333%" y="645" width="0.0118%" height="15" fill="rgb(246,42,40)" fg:x="55794" fg:w="12"/><text x="54.9833%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="54.7333%" y="677" width="0.0137%" height="15" fill="rgb(248,111,24)" fg:x="55794" fg:w="14"/><text x="54.9833%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (17 samples, 0.02%)</title><rect x="54.7313%" y="693" width="0.0167%" height="15" fill="rgb(249,65,22)" fg:x="55792" fg:w="17"/><text x="54.9813%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (103 samples, 0.10%)</title><rect x="54.7313%" y="725" width="0.1010%" height="15" fill="rgb(238,111,51)" fg:x="55792" fg:w="103"/><text x="54.9813%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (103 samples, 0.10%)</title><rect x="54.7313%" y="709" width="0.1010%" height="15" fill="rgb(250,118,22)" fg:x="55792" fg:w="103"/><text x="54.9813%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (86 samples, 0.08%)</title><rect x="54.7480%" y="693" width="0.0844%" height="15" fill="rgb(234,84,26)" fg:x="55809" fg:w="86"/><text x="54.9980%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (63 samples, 0.06%)</title><rect x="54.7705%" y="677" width="0.0618%" height="15" fill="rgb(243,172,12)" fg:x="55832" fg:w="63"/><text x="55.0205%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (63 samples, 0.06%)</title><rect x="54.7705%" y="661" width="0.0618%" height="15" fill="rgb(236,150,49)" fg:x="55832" fg:w="63"/><text x="55.0205%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (63 samples, 0.06%)</title><rect x="54.7705%" y="645" width="0.0618%" height="15" fill="rgb(225,197,26)" fg:x="55832" fg:w="63"/><text x="55.0205%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.05%)</title><rect x="54.8363%" y="725" width="0.0471%" height="15" fill="rgb(214,17,42)" fg:x="55899" fg:w="48"/><text x="55.0863%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.05%)</title><rect x="54.8363%" y="709" width="0.0471%" height="15" fill="rgb(224,165,40)" fg:x="55899" fg:w="48"/><text x="55.0863%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (47 samples, 0.05%)</title><rect x="54.8373%" y="693" width="0.0461%" height="15" fill="rgb(246,100,4)" fg:x="55900" fg:w="47"/><text x="55.0873%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="54.8392%" y="677" width="0.0441%" height="15" fill="rgb(222,103,0)" fg:x="55902" fg:w="45"/><text x="55.0892%" y="687.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (45 samples, 0.04%)</title><rect x="54.8392%" y="661" width="0.0441%" height="15" fill="rgb(227,189,26)" fg:x="55902" fg:w="45"/><text x="55.0892%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (20 samples, 0.02%)</title><rect x="54.8637%" y="645" width="0.0196%" height="15" fill="rgb(214,202,17)" fg:x="55927" fg:w="20"/><text x="55.1137%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="54.8637%" y="629" width="0.0196%" height="15" fill="rgb(229,111,3)" fg:x="55927" fg:w="20"/><text x="55.1137%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (236 samples, 0.23%)</title><rect x="54.7254%" y="773" width="0.2315%" height="15" fill="rgb(229,172,15)" fg:x="55786" fg:w="236"/><text x="54.9754%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (232 samples, 0.23%)</title><rect x="54.7293%" y="757" width="0.2276%" height="15" fill="rgb(230,224,35)" fg:x="55790" fg:w="232"/><text x="54.9793%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (230 samples, 0.23%)</title><rect x="54.7313%" y="741" width="0.2256%" height="15" fill="rgb(251,141,6)" fg:x="55792" fg:w="230"/><text x="54.9813%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (69 samples, 0.07%)</title><rect x="54.8892%" y="725" width="0.0677%" height="15" fill="rgb(225,208,6)" fg:x="55953" fg:w="69"/><text x="55.1392%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (69 samples, 0.07%)</title><rect x="54.8892%" y="709" width="0.0677%" height="15" fill="rgb(246,181,16)" fg:x="55953" fg:w="69"/><text x="55.1392%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (282 samples, 0.28%)</title><rect x="54.6862%" y="901" width="0.2766%" height="15" fill="rgb(227,129,36)" fg:x="55746" fg:w="282"/><text x="54.9362%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (260 samples, 0.26%)</title><rect x="54.7078%" y="885" width="0.2551%" height="15" fill="rgb(248,117,24)" fg:x="55768" fg:w="260"/><text x="54.9578%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (260 samples, 0.26%)</title><rect x="54.7078%" y="869" width="0.2551%" height="15" fill="rgb(214,185,35)" fg:x="55768" fg:w="260"/><text x="54.9578%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (260 samples, 0.26%)</title><rect x="54.7078%" y="853" width="0.2551%" height="15" fill="rgb(236,150,34)" fg:x="55768" fg:w="260"/><text x="54.9578%" y="863.50"></text></g><g><title>alloc::alloc::alloc (258 samples, 0.25%)</title><rect x="54.7097%" y="837" width="0.2531%" height="15" fill="rgb(243,228,27)" fg:x="55770" fg:w="258"/><text x="54.9597%" y="847.50"></text></g><g><title>__rg_alloc (258 samples, 0.25%)</title><rect x="54.7097%" y="821" width="0.2531%" height="15" fill="rgb(245,77,44)" fg:x="55770" fg:w="258"/><text x="54.9597%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (258 samples, 0.25%)</title><rect x="54.7097%" y="805" width="0.2531%" height="15" fill="rgb(235,214,42)" fg:x="55770" fg:w="258"/><text x="54.9597%" y="815.50"></text></g><g><title>rust_alloc (252 samples, 0.25%)</title><rect x="54.7156%" y="789" width="0.2472%" height="15" fill="rgb(221,74,3)" fg:x="55776" fg:w="252"/><text x="54.9656%" y="799.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (31 samples, 0.03%)</title><rect x="54.9628%" y="901" width="0.0304%" height="15" fill="rgb(206,121,29)" fg:x="56028" fg:w="31"/><text x="55.2128%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (31 samples, 0.03%)</title><rect x="54.9628%" y="885" width="0.0304%" height="15" fill="rgb(249,131,53)" fg:x="56028" fg:w="31"/><text x="55.2128%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (31 samples, 0.03%)</title><rect x="54.9628%" y="869" width="0.0304%" height="15" fill="rgb(236,170,29)" fg:x="56028" fg:w="31"/><text x="55.2128%" y="879.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (23 samples, 0.02%)</title><rect x="55.3150%" y="885" width="0.0226%" height="15" fill="rgb(247,96,15)" fg:x="56387" fg:w="23"/><text x="55.5650%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="55.6897%" y="693" width="0.0108%" height="15" fill="rgb(211,210,7)" fg:x="56769" fg:w="11"/><text x="55.9397%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (13 samples, 0.01%)</title><rect x="55.7015%" y="677" width="0.0128%" height="15" fill="rgb(240,88,50)" fg:x="56781" fg:w="13"/><text x="55.9515%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64 samples, 0.06%)</title><rect x="55.6593%" y="741" width="0.0628%" height="15" fill="rgb(209,229,26)" fg:x="56738" fg:w="64"/><text x="55.9093%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50 samples, 0.05%)</title><rect x="55.6731%" y="725" width="0.0490%" height="15" fill="rgb(210,68,23)" fg:x="56752" fg:w="50"/><text x="55.9231%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33 samples, 0.03%)</title><rect x="55.6897%" y="709" width="0.0324%" height="15" fill="rgb(229,180,13)" fg:x="56769" fg:w="33"/><text x="55.9397%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="55.7005%" y="693" width="0.0216%" height="15" fill="rgb(236,53,44)" fg:x="56780" fg:w="22"/><text x="55.9505%" y="703.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (327 samples, 0.32%)</title><rect x="55.4190%" y="821" width="0.3208%" height="15" fill="rgb(244,214,29)" fg:x="56493" fg:w="327"/><text x="55.6690%" y="831.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (305 samples, 0.30%)</title><rect x="55.4406%" y="805" width="0.2992%" height="15" fill="rgb(220,75,29)" fg:x="56515" fg:w="305"/><text x="55.6906%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (114 samples, 0.11%)</title><rect x="55.6279%" y="789" width="0.1118%" height="15" fill="rgb(214,183,37)" fg:x="56706" fg:w="114"/><text x="55.8779%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (82 samples, 0.08%)</title><rect x="55.6593%" y="773" width="0.0804%" height="15" fill="rgb(239,117,29)" fg:x="56738" fg:w="82"/><text x="55.9093%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (82 samples, 0.08%)</title><rect x="55.6593%" y="757" width="0.0804%" height="15" fill="rgb(237,171,35)" fg:x="56738" fg:w="82"/><text x="55.9093%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="55.7221%" y="741" width="0.0177%" height="15" fill="rgb(229,178,53)" fg:x="56802" fg:w="18"/><text x="55.9721%" y="751.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (381 samples, 0.37%)</title><rect x="55.3709%" y="837" width="0.3738%" height="15" fill="rgb(210,102,19)" fg:x="56444" fg:w="381"/><text x="55.6209%" y="847.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (445 samples, 0.44%)</title><rect x="55.3709%" y="853" width="0.4365%" height="15" fill="rgb(235,127,22)" fg:x="56444" fg:w="445"/><text x="55.6209%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (64 samples, 0.06%)</title><rect x="55.7447%" y="837" width="0.0628%" height="15" fill="rgb(244,31,31)" fg:x="56825" fg:w="64"/><text x="55.9947%" y="847.50"></text></g><g><title>core::ptr::write (64 samples, 0.06%)</title><rect x="55.7447%" y="821" width="0.0628%" height="15" fill="rgb(231,43,21)" fg:x="56825" fg:w="64"/><text x="55.9947%" y="831.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="55.8075%" y="725" width="0.0118%" height="15" fill="rgb(217,131,35)" fg:x="56889" fg:w="12"/><text x="56.0575%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="55.8437%" y="613" width="0.0137%" height="15" fill="rgb(221,149,4)" fg:x="56926" fg:w="14"/><text x="56.0937%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="55.8437%" y="597" width="0.0137%" height="15" fill="rgb(232,170,28)" fg:x="56926" fg:w="14"/><text x="56.0937%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (12 samples, 0.01%)</title><rect x="55.8457%" y="581" width="0.0118%" height="15" fill="rgb(238,56,10)" fg:x="56928" fg:w="12"/><text x="56.0957%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (19 samples, 0.02%)</title><rect x="55.8437%" y="629" width="0.0186%" height="15" fill="rgb(235,196,14)" fg:x="56926" fg:w="19"/><text x="56.0937%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (29 samples, 0.03%)</title><rect x="55.8379%" y="645" width="0.0284%" height="15" fill="rgb(216,45,48)" fg:x="56920" fg:w="29"/><text x="56.0879%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (139 samples, 0.14%)</title><rect x="55.8379%" y="677" width="0.1364%" height="15" fill="rgb(238,213,17)" fg:x="56920" fg:w="139"/><text x="56.0879%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (139 samples, 0.14%)</title><rect x="55.8379%" y="661" width="0.1364%" height="15" fill="rgb(212,13,2)" fg:x="56920" fg:w="139"/><text x="56.0879%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (110 samples, 0.11%)</title><rect x="55.8663%" y="645" width="0.1079%" height="15" fill="rgb(240,114,20)" fg:x="56949" fg:w="110"/><text x="56.1163%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (92 samples, 0.09%)</title><rect x="55.8840%" y="629" width="0.0903%" height="15" fill="rgb(228,41,40)" fg:x="56967" fg:w="92"/><text x="56.1340%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (92 samples, 0.09%)</title><rect x="55.8840%" y="613" width="0.0903%" height="15" fill="rgb(244,132,35)" fg:x="56967" fg:w="92"/><text x="56.1340%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (92 samples, 0.09%)</title><rect x="55.8840%" y="597" width="0.0903%" height="15" fill="rgb(253,189,4)" fg:x="56967" fg:w="92"/><text x="56.1340%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="55.9821%" y="677" width="0.0275%" height="15" fill="rgb(224,37,19)" fg:x="57067" fg:w="28"/><text x="56.2321%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="55.9821%" y="661" width="0.0275%" height="15" fill="rgb(235,223,18)" fg:x="57067" fg:w="28"/><text x="56.2321%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.03%)</title><rect x="55.9821%" y="645" width="0.0275%" height="15" fill="rgb(235,163,25)" fg:x="57067" fg:w="28"/><text x="56.2321%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="55.9830%" y="629" width="0.0265%" height="15" fill="rgb(217,145,28)" fg:x="57068" fg:w="27"/><text x="56.2330%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (27 samples, 0.03%)</title><rect x="55.9830%" y="613" width="0.0265%" height="15" fill="rgb(223,223,32)" fg:x="57068" fg:w="27"/><text x="56.2330%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (18 samples, 0.02%)</title><rect x="55.9919%" y="597" width="0.0177%" height="15" fill="rgb(227,189,39)" fg:x="57077" fg:w="18"/><text x="56.2419%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="55.9919%" y="581" width="0.0177%" height="15" fill="rgb(248,10,22)" fg:x="57077" fg:w="18"/><text x="56.2419%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (752 samples, 0.74%)</title><rect x="55.3376%" y="885" width="0.7377%" height="15" fill="rgb(248,46,39)" fg:x="56410" fg:w="752"/><text x="55.5876%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (723 samples, 0.71%)</title><rect x="55.3660%" y="869" width="0.7093%" height="15" fill="rgb(248,113,48)" fg:x="56439" fg:w="723"/><text x="55.6160%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (273 samples, 0.27%)</title><rect x="55.8075%" y="853" width="0.2678%" height="15" fill="rgb(245,16,25)" fg:x="56889" fg:w="273"/><text x="56.0575%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (273 samples, 0.27%)</title><rect x="55.8075%" y="837" width="0.2678%" height="15" fill="rgb(249,152,16)" fg:x="56889" fg:w="273"/><text x="56.0575%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (273 samples, 0.27%)</title><rect x="55.8075%" y="821" width="0.2678%" height="15" fill="rgb(250,16,1)" fg:x="56889" fg:w="273"/><text x="56.0575%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (273 samples, 0.27%)</title><rect x="55.8075%" y="805" width="0.2678%" height="15" fill="rgb(249,138,3)" fg:x="56889" fg:w="273"/><text x="56.0575%" y="815.50"></text></g><g><title>alloc::alloc::alloc (273 samples, 0.27%)</title><rect x="55.8075%" y="789" width="0.2678%" height="15" fill="rgb(227,71,41)" fg:x="56889" fg:w="273"/><text x="56.0575%" y="799.50"></text></g><g><title>__rg_alloc (273 samples, 0.27%)</title><rect x="55.8075%" y="773" width="0.2678%" height="15" fill="rgb(209,184,23)" fg:x="56889" fg:w="273"/><text x="56.0575%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (273 samples, 0.27%)</title><rect x="55.8075%" y="757" width="0.2678%" height="15" fill="rgb(223,215,31)" fg:x="56889" fg:w="273"/><text x="56.0575%" y="767.50"></text></g><g><title>rust_alloc (273 samples, 0.27%)</title><rect x="55.8075%" y="741" width="0.2678%" height="15" fill="rgb(210,146,28)" fg:x="56889" fg:w="273"/><text x="56.0575%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (261 samples, 0.26%)</title><rect x="55.8192%" y="725" width="0.2560%" height="15" fill="rgb(209,183,41)" fg:x="56901" fg:w="261"/><text x="56.0692%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (261 samples, 0.26%)</title><rect x="55.8192%" y="709" width="0.2560%" height="15" fill="rgb(209,224,45)" fg:x="56901" fg:w="261"/><text x="56.0692%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (253 samples, 0.25%)</title><rect x="55.8271%" y="693" width="0.2482%" height="15" fill="rgb(224,209,51)" fg:x="56909" fg:w="253"/><text x="56.0771%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (66 samples, 0.06%)</title><rect x="56.0105%" y="677" width="0.0647%" height="15" fill="rgb(223,17,39)" fg:x="57096" fg:w="66"/><text x="56.2605%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (66 samples, 0.06%)</title><rect x="56.0105%" y="661" width="0.0647%" height="15" fill="rgb(234,204,37)" fg:x="57096" fg:w="66"/><text x="56.2605%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,757 samples, 3.69%)</title><rect x="52.7595%" y="981" width="3.6856%" height="15" fill="rgb(236,120,5)" fg:x="53782" fg:w="3757"/><text x="53.0095%" y="991.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,757 samples, 3.69%)</title><rect x="52.7595%" y="965" width="3.6856%" height="15" fill="rgb(248,97,27)" fg:x="53782" fg:w="3757"/><text x="53.0095%" y="975.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,757 samples, 3.69%)</title><rect x="52.7595%" y="949" width="3.6856%" height="15" fill="rgb(240,66,17)" fg:x="53782" fg:w="3757"/><text x="53.0095%" y="959.50">trem..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,757 samples, 3.69%)</title><rect x="52.7595%" y="933" width="3.6856%" height="15" fill="rgb(210,79,3)" fg:x="53782" fg:w="3757"/><text x="53.0095%" y="943.50">trem..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,655 samples, 2.60%)</title><rect x="53.8406%" y="917" width="2.6045%" height="15" fill="rgb(214,176,27)" fg:x="54884" fg:w="2655"/><text x="54.0906%" y="927.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,480 samples, 1.45%)</title><rect x="54.9932%" y="901" width="1.4519%" height="15" fill="rgb(235,185,3)" fg:x="56059" fg:w="1480"/><text x="55.2432%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (377 samples, 0.37%)</title><rect x="56.0753%" y="885" width="0.3698%" height="15" fill="rgb(227,24,12)" fg:x="57162" fg:w="377"/><text x="56.3253%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="56.6197%" y="869" width="0.0118%" height="15" fill="rgb(252,169,48)" fg:x="57717" fg:w="12"/><text x="56.8697%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (25 samples, 0.02%)</title><rect x="56.6315%" y="869" width="0.0245%" height="15" fill="rgb(212,65,1)" fg:x="57729" fg:w="25"/><text x="56.8815%" y="879.50"></text></g><g><title>core::mem::replace (25 samples, 0.02%)</title><rect x="56.6315%" y="853" width="0.0245%" height="15" fill="rgb(242,39,24)" fg:x="57729" fg:w="25"/><text x="56.8815%" y="863.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="56.6344%" y="837" width="0.0216%" height="15" fill="rgb(249,32,23)" fg:x="57732" fg:w="22"/><text x="56.8844%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (202 samples, 0.20%)</title><rect x="56.7158%" y="853" width="0.1982%" height="15" fill="rgb(251,195,23)" fg:x="57815" fg:w="202"/><text x="56.9658%" y="863.50"></text></g><g><title>core::mem::replace (202 samples, 0.20%)</title><rect x="56.7158%" y="837" width="0.1982%" height="15" fill="rgb(236,174,8)" fg:x="57815" fg:w="202"/><text x="56.9658%" y="847.50"></text></g><g><title>core::ptr::read (201 samples, 0.20%)</title><rect x="56.7168%" y="821" width="0.1972%" height="15" fill="rgb(220,197,8)" fg:x="57816" fg:w="201"/><text x="56.9668%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (317 samples, 0.31%)</title><rect x="56.6560%" y="869" width="0.3110%" height="15" fill="rgb(240,108,37)" fg:x="57754" fg:w="317"/><text x="56.9060%" y="879.50"></text></g><g><title>core::mem::drop (54 samples, 0.05%)</title><rect x="56.9140%" y="853" width="0.0530%" height="15" fill="rgb(232,176,24)" fg:x="58017" fg:w="54"/><text x="57.1640%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (54 samples, 0.05%)</title><rect x="56.9140%" y="837" width="0.0530%" height="15" fill="rgb(243,35,29)" fg:x="58017" fg:w="54"/><text x="57.1640%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="56.9670%" y="853" width="0.0128%" height="15" fill="rgb(210,37,18)" fg:x="58071" fg:w="13"/><text x="57.2170%" y="863.50"></text></g><g><title>std::sync::poison::Flag::done (13 samples, 0.01%)</title><rect x="56.9915%" y="821" width="0.0128%" height="15" fill="rgb(224,184,40)" fg:x="58096" fg:w="13"/><text x="57.2415%" y="831.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="56.9915%" y="805" width="0.0128%" height="15" fill="rgb(236,39,29)" fg:x="58096" fg:w="13"/><text x="57.2415%" y="815.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="56.9915%" y="789" width="0.0128%" height="15" fill="rgb(232,48,39)" fg:x="58096" fg:w="13"/><text x="57.2415%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="56.9915%" y="773" width="0.0128%" height="15" fill="rgb(236,34,42)" fg:x="58096" fg:w="13"/><text x="57.2415%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock (21 samples, 0.02%)</title><rect x="57.0131%" y="789" width="0.0206%" height="15" fill="rgb(243,106,37)" fg:x="58118" fg:w="21"/><text x="57.2631%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (448 samples, 0.44%)</title><rect x="56.9670%" y="869" width="0.4395%" height="15" fill="rgb(218,96,6)" fg:x="58071" fg:w="448"/><text x="57.2170%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (435 samples, 0.43%)</title><rect x="56.9797%" y="853" width="0.4267%" height="15" fill="rgb(235,130,12)" fg:x="58084" fg:w="435"/><text x="57.2297%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (435 samples, 0.43%)</title><rect x="56.9797%" y="837" width="0.4267%" height="15" fill="rgb(231,95,0)" fg:x="58084" fg:w="435"/><text x="57.2297%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (410 samples, 0.40%)</title><rect x="57.0043%" y="821" width="0.4022%" height="15" fill="rgb(228,12,23)" fg:x="58109" fg:w="410"/><text x="57.2543%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (401 samples, 0.39%)</title><rect x="57.0131%" y="805" width="0.3934%" height="15" fill="rgb(216,12,1)" fg:x="58118" fg:w="401"/><text x="57.2631%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (380 samples, 0.37%)</title><rect x="57.0337%" y="789" width="0.3728%" height="15" fill="rgb(219,59,3)" fg:x="58139" fg:w="380"/><text x="57.2837%" y="799.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (25 samples, 0.02%)</title><rect x="57.4173%" y="821" width="0.0245%" height="15" fill="rgb(215,208,46)" fg:x="58530" fg:w="25"/><text x="57.6673%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (44 samples, 0.04%)</title><rect x="57.4074%" y="869" width="0.0432%" height="15" fill="rgb(254,224,29)" fg:x="58520" fg:w="44"/><text x="57.6574%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (44 samples, 0.04%)</title><rect x="57.4074%" y="853" width="0.0432%" height="15" fill="rgb(232,14,29)" fg:x="58520" fg:w="44"/><text x="57.6574%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (34 samples, 0.03%)</title><rect x="57.4173%" y="837" width="0.0334%" height="15" fill="rgb(208,45,52)" fg:x="58530" fg:w="34"/><text x="57.6673%" y="847.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="57.4692%" y="837" width="0.0177%" height="15" fill="rgb(234,191,28)" fg:x="58583" fg:w="18"/><text x="57.7192%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (18 samples, 0.02%)</title><rect x="57.4692%" y="821" width="0.0177%" height="15" fill="rgb(244,67,43)" fg:x="58583" fg:w="18"/><text x="57.7192%" y="831.50"></text></g><g><title>std::thread::panicking (18 samples, 0.02%)</title><rect x="57.4692%" y="805" width="0.0177%" height="15" fill="rgb(236,189,24)" fg:x="58583" fg:w="18"/><text x="57.7192%" y="815.50"></text></g><g><title>std::panicking::panicking (18 samples, 0.02%)</title><rect x="57.4692%" y="789" width="0.0177%" height="15" fill="rgb(239,214,33)" fg:x="58583" fg:w="18"/><text x="57.7192%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (18 samples, 0.02%)</title><rect x="57.4692%" y="773" width="0.0177%" height="15" fill="rgb(226,176,41)" fg:x="58583" fg:w="18"/><text x="57.7192%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.02%)</title><rect x="57.4702%" y="757" width="0.0167%" height="15" fill="rgb(248,47,8)" fg:x="58584" fg:w="17"/><text x="57.7202%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="57.4702%" y="741" width="0.0167%" height="15" fill="rgb(218,81,44)" fg:x="58584" fg:w="17"/><text x="57.7202%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,013 samples, 1.97%)</title><rect x="56.4990%" y="885" width="1.9747%" height="15" fill="rgb(213,98,6)" fg:x="57594" fg:w="2013"/><text x="56.7490%" y="895.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,043 samples, 1.02%)</title><rect x="57.4506%" y="869" width="1.0232%" height="15" fill="rgb(222,85,22)" fg:x="58564" fg:w="1043"/><text x="57.7006%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,024 samples, 1.00%)</title><rect x="57.4692%" y="853" width="1.0045%" height="15" fill="rgb(239,46,39)" fg:x="58583" fg:w="1024"/><text x="57.7192%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,006 samples, 0.99%)</title><rect x="57.4869%" y="837" width="0.9869%" height="15" fill="rgb(237,12,29)" fg:x="58601" fg:w="1006"/><text x="57.7369%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (944 samples, 0.93%)</title><rect x="57.5477%" y="821" width="0.9261%" height="15" fill="rgb(214,77,8)" fg:x="58663" fg:w="944"/><text x="57.7977%" y="831.50"></text></g><g><title>__GI___pthread_mutex_lock (944 samples, 0.93%)</title><rect x="57.5477%" y="805" width="0.9261%" height="15" fill="rgb(217,168,37)" fg:x="58663" fg:w="944"/><text x="57.7977%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1157" width="5.7339%" height="15" fill="rgb(221,217,23)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1167.50">async_t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1141" width="5.7339%" height="15" fill="rgb(243,229,36)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1151.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1125" width="5.7339%" height="15" fill="rgb(251,163,40)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1135.50">&lt;core::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1109" width="5.7339%" height="15" fill="rgb(237,222,12)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1119.50">async_e..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1093" width="5.7339%" height="15" fill="rgb(248,132,6)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1103.50">&lt;async_..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1077" width="5.7339%" height="15" fill="rgb(227,167,50)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1087.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1061" width="5.7339%" height="15" fill="rgb(242,84,37)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1071.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1045" width="5.7339%" height="15" fill="rgb(212,4,50)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1055.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1029" width="5.7339%" height="15" fill="rgb(230,228,32)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1039.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,845 samples, 5.73%)</title><rect x="52.7595%" y="1013" width="5.7339%" height="15" fill="rgb(248,217,23)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1023.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,845 samples, 5.73%)</title><rect x="52.7595%" y="997" width="5.7339%" height="15" fill="rgb(238,197,32)" fg:x="53782" fg:w="5845"/><text x="53.0095%" y="1007.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,088 samples, 2.05%)</title><rect x="56.4451%" y="981" width="2.0483%" height="15" fill="rgb(236,106,1)" fg:x="57539" fg:w="2088"/><text x="56.6951%" y="991.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,088 samples, 2.05%)</title><rect x="56.4451%" y="965" width="2.0483%" height="15" fill="rgb(219,228,13)" fg:x="57539" fg:w="2088"/><text x="56.6951%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,088 samples, 2.05%)</title><rect x="56.4451%" y="949" width="2.0483%" height="15" fill="rgb(238,30,35)" fg:x="57539" fg:w="2088"/><text x="56.6951%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,088 samples, 2.05%)</title><rect x="56.4451%" y="933" width="2.0483%" height="15" fill="rgb(236,70,23)" fg:x="57539" fg:w="2088"/><text x="56.6951%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,088 samples, 2.05%)</title><rect x="56.4451%" y="917" width="2.0483%" height="15" fill="rgb(249,104,48)" fg:x="57539" fg:w="2088"/><text x="56.6951%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,088 samples, 2.05%)</title><rect x="56.4451%" y="901" width="2.0483%" height="15" fill="rgb(254,117,50)" fg:x="57539" fg:w="2088"/><text x="56.6951%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (20 samples, 0.02%)</title><rect x="58.4738%" y="885" width="0.0196%" height="15" fill="rgb(223,152,4)" fg:x="59607" fg:w="20"/><text x="58.7238%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (26 samples, 0.03%)</title><rect x="58.5022%" y="1157" width="0.0255%" height="15" fill="rgb(245,6,2)" fg:x="59636" fg:w="26"/><text x="58.7522%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="58.5277%" y="1157" width="0.0128%" height="15" fill="rgb(249,150,24)" fg:x="59662" fg:w="13"/><text x="58.7777%" y="1167.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="58.5640%" y="293" width="0.0147%" height="15" fill="rgb(228,185,42)" fg:x="59699" fg:w="15"/><text x="58.8140%" y="303.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="58.5993%" y="277" width="0.0147%" height="15" fill="rgb(226,39,33)" fg:x="59735" fg:w="15"/><text x="58.8493%" y="287.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="58.6033%" y="261" width="0.0108%" height="15" fill="rgb(221,166,19)" fg:x="59739" fg:w="11"/><text x="58.8533%" y="271.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="58.6150%" y="213" width="0.0206%" height="15" fill="rgb(209,109,2)" fg:x="59751" fg:w="21"/><text x="58.8650%" y="223.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="58.6356%" y="213" width="0.0118%" height="15" fill="rgb(252,216,26)" fg:x="59772" fg:w="12"/><text x="58.8856%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="58.6356%" y="197" width="0.0118%" height="15" fill="rgb(227,173,36)" fg:x="59772" fg:w="12"/><text x="58.8856%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (18 samples, 0.02%)</title><rect x="58.6474%" y="213" width="0.0177%" height="15" fill="rgb(209,90,7)" fg:x="59784" fg:w="18"/><text x="58.8974%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (21 samples, 0.02%)</title><rect x="58.7681%" y="181" width="0.0206%" height="15" fill="rgb(250,194,11)" fg:x="59907" fg:w="21"/><text x="59.0181%" y="191.50"></text></g><g><title> (21 samples, 0.02%)</title><rect x="58.7681%" y="165" width="0.0206%" height="15" fill="rgb(220,72,50)" fg:x="59907" fg:w="21"/><text x="59.0181%" y="175.50"></text></g><g><title>snmalloc::Remote::set_info (31 samples, 0.03%)</title><rect x="58.7887%" y="181" width="0.0304%" height="15" fill="rgb(222,106,48)" fg:x="59928" fg:w="31"/><text x="59.0387%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (174 samples, 0.17%)</title><rect x="58.6651%" y="213" width="0.1707%" height="15" fill="rgb(216,220,45)" fg:x="59802" fg:w="174"/><text x="58.9151%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (139 samples, 0.14%)</title><rect x="58.6994%" y="197" width="0.1364%" height="15" fill="rgb(234,112,18)" fg:x="59837" fg:w="139"/><text x="58.9494%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (17 samples, 0.02%)</title><rect x="58.8191%" y="181" width="0.0167%" height="15" fill="rgb(206,179,9)" fg:x="59959" fg:w="17"/><text x="59.0691%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (241 samples, 0.24%)</title><rect x="58.6141%" y="245" width="0.2364%" height="15" fill="rgb(215,115,40)" fg:x="59750" fg:w="241"/><text x="58.8641%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (241 samples, 0.24%)</title><rect x="58.6141%" y="229" width="0.2364%" height="15" fill="rgb(222,69,34)" fg:x="59750" fg:w="241"/><text x="58.8641%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (14 samples, 0.01%)</title><rect x="58.8367%" y="213" width="0.0137%" height="15" fill="rgb(209,161,10)" fg:x="59977" fg:w="14"/><text x="59.0867%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (255 samples, 0.25%)</title><rect x="58.6141%" y="277" width="0.2502%" height="15" fill="rgb(217,6,38)" fg:x="59750" fg:w="255"/><text x="58.8641%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (255 samples, 0.25%)</title><rect x="58.6141%" y="261" width="0.2502%" height="15" fill="rgb(229,229,48)" fg:x="59750" fg:w="255"/><text x="58.8641%" y="271.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="58.8505%" y="245" width="0.0137%" height="15" fill="rgb(225,21,28)" fg:x="59991" fg:w="14"/><text x="59.1005%" y="255.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="58.8505%" y="229" width="0.0137%" height="15" fill="rgb(206,33,13)" fg:x="59991" fg:w="14"/><text x="59.1005%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="58.8505%" y="213" width="0.0137%" height="15" fill="rgb(242,178,17)" fg:x="59991" fg:w="14"/><text x="59.1005%" y="223.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="58.8505%" y="197" width="0.0137%" height="15" fill="rgb(220,162,5)" fg:x="59991" fg:w="14"/><text x="59.1005%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (290 samples, 0.28%)</title><rect x="58.5886%" y="293" width="0.2845%" height="15" fill="rgb(210,33,43)" fg:x="59724" fg:w="290"/><text x="58.8386%" y="303.50"></text></g><g><title>rust_dealloc (331 samples, 0.32%)</title><rect x="58.5591%" y="309" width="0.3247%" height="15" fill="rgb(216,116,54)" fg:x="59694" fg:w="331"/><text x="58.8091%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="58.8730%" y="293" width="0.0108%" height="15" fill="rgb(249,92,24)" fg:x="60014" fg:w="11"/><text x="59.1230%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (341 samples, 0.33%)</title><rect x="58.5513%" y="373" width="0.3345%" height="15" fill="rgb(231,189,14)" fg:x="59686" fg:w="341"/><text x="58.8013%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (341 samples, 0.33%)</title><rect x="58.5513%" y="357" width="0.3345%" height="15" fill="rgb(230,8,41)" fg:x="59686" fg:w="341"/><text x="58.8013%" y="367.50"></text></g><g><title>__rg_dealloc (341 samples, 0.33%)</title><rect x="58.5513%" y="341" width="0.3345%" height="15" fill="rgb(249,7,27)" fg:x="59686" fg:w="341"/><text x="58.8013%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (341 samples, 0.33%)</title><rect x="58.5513%" y="325" width="0.3345%" height="15" fill="rgb(232,86,5)" fg:x="59686" fg:w="341"/><text x="58.8013%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (358 samples, 0.35%)</title><rect x="58.5493%" y="437" width="0.3512%" height="15" fill="rgb(224,175,18)" fg:x="59684" fg:w="358"/><text x="58.7993%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (358 samples, 0.35%)</title><rect x="58.5493%" y="421" width="0.3512%" height="15" fill="rgb(220,129,12)" fg:x="59684" fg:w="358"/><text x="58.7993%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (358 samples, 0.35%)</title><rect x="58.5493%" y="405" width="0.3512%" height="15" fill="rgb(210,19,36)" fg:x="59684" fg:w="358"/><text x="58.7993%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (358 samples, 0.35%)</title><rect x="58.5493%" y="389" width="0.3512%" height="15" fill="rgb(219,96,14)" fg:x="59684" fg:w="358"/><text x="58.7993%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="58.8858%" y="373" width="0.0147%" height="15" fill="rgb(249,106,1)" fg:x="60027" fg:w="15"/><text x="59.1358%" y="383.50"></text></g><g><title>size_to_sizeclass (46 samples, 0.05%)</title><rect x="59.5607%" y="229" width="0.0451%" height="15" fill="rgb(249,155,20)" fg:x="60715" fg:w="46"/><text x="59.8107%" y="239.50"></text></g><g><title>rust_dealloc (36 samples, 0.04%)</title><rect x="59.6068%" y="165" width="0.0353%" height="15" fill="rgb(244,168,9)" fg:x="60762" fg:w="36"/><text x="59.8568%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (28 samples, 0.03%)</title><rect x="59.7324%" y="133" width="0.0275%" height="15" fill="rgb(216,23,50)" fg:x="60890" fg:w="28"/><text x="59.9824%" y="143.50"></text></g><g><title> (28 samples, 0.03%)</title><rect x="59.7324%" y="117" width="0.0275%" height="15" fill="rgb(224,219,20)" fg:x="60890" fg:w="28"/><text x="59.9824%" y="127.50"></text></g><g><title>snmalloc::Remote::set_info (12 samples, 0.01%)</title><rect x="59.7599%" y="133" width="0.0118%" height="15" fill="rgb(222,156,15)" fg:x="60918" fg:w="12"/><text x="60.0099%" y="143.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (134 samples, 0.13%)</title><rect x="59.6490%" y="165" width="0.1315%" height="15" fill="rgb(231,97,17)" fg:x="60805" fg:w="134"/><text x="59.8990%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (121 samples, 0.12%)</title><rect x="59.6618%" y="149" width="0.1187%" height="15" fill="rgb(218,70,48)" fg:x="60818" fg:w="121"/><text x="59.9118%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (204 samples, 0.20%)</title><rect x="59.6058%" y="229" width="0.2001%" height="15" fill="rgb(212,196,52)" fg:x="60761" fg:w="204"/><text x="59.8558%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (204 samples, 0.20%)</title><rect x="59.6058%" y="213" width="0.2001%" height="15" fill="rgb(243,203,18)" fg:x="60761" fg:w="204"/><text x="59.8558%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (204 samples, 0.20%)</title><rect x="59.6058%" y="197" width="0.2001%" height="15" fill="rgb(252,125,41)" fg:x="60761" fg:w="204"/><text x="59.8558%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (204 samples, 0.20%)</title><rect x="59.6058%" y="181" width="0.2001%" height="15" fill="rgb(223,180,33)" fg:x="60761" fg:w="204"/><text x="59.8558%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (23 samples, 0.02%)</title><rect x="59.7834%" y="165" width="0.0226%" height="15" fill="rgb(254,159,46)" fg:x="60942" fg:w="23"/><text x="60.0334%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (258 samples, 0.25%)</title><rect x="59.5548%" y="245" width="0.2531%" height="15" fill="rgb(254,38,10)" fg:x="60709" fg:w="258"/><text x="59.8048%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (280 samples, 0.27%)</title><rect x="59.5421%" y="277" width="0.2747%" height="15" fill="rgb(208,217,32)" fg:x="60696" fg:w="280"/><text x="59.7921%" y="287.50"></text></g><g><title>rust_dealloc (280 samples, 0.27%)</title><rect x="59.5421%" y="261" width="0.2747%" height="15" fill="rgb(221,120,13)" fg:x="60696" fg:w="280"/><text x="59.7921%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (291 samples, 0.29%)</title><rect x="59.5421%" y="325" width="0.2855%" height="15" fill="rgb(246,54,52)" fg:x="60696" fg:w="291"/><text x="59.7921%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (291 samples, 0.29%)</title><rect x="59.5421%" y="309" width="0.2855%" height="15" fill="rgb(242,34,25)" fg:x="60696" fg:w="291"/><text x="59.7921%" y="319.50"></text></g><g><title>__rg_dealloc (291 samples, 0.29%)</title><rect x="59.5421%" y="293" width="0.2855%" height="15" fill="rgb(247,209,9)" fg:x="60696" fg:w="291"/><text x="59.7921%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (11 samples, 0.01%)</title><rect x="59.8168%" y="277" width="0.0108%" height="15" fill="rgb(228,71,26)" fg:x="60976" fg:w="11"/><text x="60.0668%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (975 samples, 0.96%)</title><rect x="58.9005%" y="421" width="0.9565%" height="15" fill="rgb(222,145,49)" fg:x="60042" fg:w="975"/><text x="59.1505%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (974 samples, 0.96%)</title><rect x="58.9015%" y="405" width="0.9555%" height="15" fill="rgb(218,121,17)" fg:x="60043" fg:w="974"/><text x="59.1515%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (956 samples, 0.94%)</title><rect x="58.9191%" y="389" width="0.9378%" height="15" fill="rgb(244,50,7)" fg:x="60061" fg:w="956"/><text x="59.1691%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (956 samples, 0.94%)</title><rect x="58.9191%" y="373" width="0.9378%" height="15" fill="rgb(246,229,37)" fg:x="60061" fg:w="956"/><text x="59.1691%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (956 samples, 0.94%)</title><rect x="58.9191%" y="357" width="0.9378%" height="15" fill="rgb(225,18,5)" fg:x="60061" fg:w="956"/><text x="59.1691%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (956 samples, 0.94%)</title><rect x="58.9191%" y="341" width="0.9378%" height="15" fill="rgb(213,204,8)" fg:x="60061" fg:w="956"/><text x="59.1691%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (30 samples, 0.03%)</title><rect x="59.8275%" y="325" width="0.0294%" height="15" fill="rgb(238,103,6)" fg:x="60987" fg:w="30"/><text x="60.0775%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (14 samples, 0.01%)</title><rect x="59.8570%" y="421" width="0.0137%" height="15" fill="rgb(222,25,35)" fg:x="61017" fg:w="14"/><text x="60.1070%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="59.8570%" y="405" width="0.0137%" height="15" fill="rgb(213,203,35)" fg:x="61017" fg:w="14"/><text x="60.1070%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="59.8580%" y="389" width="0.0128%" height="15" fill="rgb(221,79,53)" fg:x="61018" fg:w="13"/><text x="60.1080%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,365 samples, 1.34%)</title><rect x="58.5405%" y="453" width="1.3390%" height="15" fill="rgb(243,200,35)" fg:x="59675" fg:w="1365"/><text x="58.7905%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (998 samples, 0.98%)</title><rect x="58.9005%" y="437" width="0.9790%" height="15" fill="rgb(248,60,25)" fg:x="60042" fg:w="998"/><text x="59.1505%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,366 samples, 1.34%)</title><rect x="58.5405%" y="469" width="1.3400%" height="15" fill="rgb(227,53,46)" fg:x="59675" fg:w="1366"/><text x="58.7905%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.01%)</title><rect x="59.8913%" y="325" width="0.0118%" height="15" fill="rgb(216,120,32)" fg:x="61052" fg:w="12"/><text x="60.1413%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (42 samples, 0.04%)</title><rect x="59.8805%" y="469" width="0.0412%" height="15" fill="rgb(220,134,1)" fg:x="61041" fg:w="42"/><text x="60.1305%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (42 samples, 0.04%)</title><rect x="59.8805%" y="453" width="0.0412%" height="15" fill="rgb(237,168,5)" fg:x="61041" fg:w="42"/><text x="60.1305%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="59.8805%" y="437" width="0.0412%" height="15" fill="rgb(231,100,33)" fg:x="61041" fg:w="42"/><text x="60.1305%" y="447.50"></text></g><g><title>core::mem::drop (42 samples, 0.04%)</title><rect x="59.8805%" y="421" width="0.0412%" height="15" fill="rgb(236,177,47)" fg:x="61041" fg:w="42"/><text x="60.1305%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (42 samples, 0.04%)</title><rect x="59.8805%" y="405" width="0.0412%" height="15" fill="rgb(235,7,49)" fg:x="61041" fg:w="42"/><text x="60.1305%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="59.8805%" y="389" width="0.0412%" height="15" fill="rgb(232,119,22)" fg:x="61041" fg:w="42"/><text x="60.1305%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (42 samples, 0.04%)</title><rect x="59.8805%" y="373" width="0.0412%" height="15" fill="rgb(254,73,53)" fg:x="61041" fg:w="42"/><text x="60.1305%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (31 samples, 0.03%)</title><rect x="59.8913%" y="357" width="0.0304%" height="15" fill="rgb(251,35,20)" fg:x="61052" fg:w="31"/><text x="60.1413%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (31 samples, 0.03%)</title><rect x="59.8913%" y="341" width="0.0304%" height="15" fill="rgb(241,119,20)" fg:x="61052" fg:w="31"/><text x="60.1413%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (19 samples, 0.02%)</title><rect x="59.9031%" y="325" width="0.0186%" height="15" fill="rgb(207,102,14)" fg:x="61064" fg:w="19"/><text x="60.1531%" y="335.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="59.9031%" y="309" width="0.0186%" height="15" fill="rgb(248,201,50)" fg:x="61064" fg:w="19"/><text x="60.1531%" y="319.50"></text></g><g><title>core::ptr::read (17 samples, 0.02%)</title><rect x="59.9050%" y="293" width="0.0167%" height="15" fill="rgb(222,185,44)" fg:x="61066" fg:w="17"/><text x="60.1550%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="59.9217%" y="437" width="0.0108%" height="15" fill="rgb(218,107,18)" fg:x="61083" fg:w="11"/><text x="60.1717%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (11 samples, 0.01%)</title><rect x="59.9217%" y="421" width="0.0108%" height="15" fill="rgb(237,177,39)" fg:x="61083" fg:w="11"/><text x="60.1717%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="59.9217%" y="405" width="0.0108%" height="15" fill="rgb(246,69,6)" fg:x="61083" fg:w="11"/><text x="60.1717%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="59.9217%" y="389" width="0.0108%" height="15" fill="rgb(234,208,37)" fg:x="61083" fg:w="11"/><text x="60.1717%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (11 samples, 0.01%)</title><rect x="59.9217%" y="373" width="0.0108%" height="15" fill="rgb(225,4,6)" fg:x="61083" fg:w="11"/><text x="60.1717%" y="383.50"></text></g><g><title>snmalloc::RemoteCache::post&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="59.9217%" y="357" width="0.0108%" height="15" fill="rgb(233,45,0)" fg:x="61083" fg:w="11"/><text x="60.1717%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="59.9217%" y="453" width="0.0118%" height="15" fill="rgb(226,136,5)" fg:x="61083" fg:w="12"/><text x="60.1717%" y="463.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,535 samples, 1.51%)</title><rect x="58.5405%" y="549" width="1.5058%" height="15" fill="rgb(211,91,47)" fg:x="59675" fg:w="1535"/><text x="58.7905%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,535 samples, 1.51%)</title><rect x="58.5405%" y="533" width="1.5058%" height="15" fill="rgb(242,88,51)" fg:x="59675" fg:w="1535"/><text x="58.7905%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,535 samples, 1.51%)</title><rect x="58.5405%" y="517" width="1.5058%" height="15" fill="rgb(230,91,28)" fg:x="59675" fg:w="1535"/><text x="58.7905%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,535 samples, 1.51%)</title><rect x="58.5405%" y="501" width="1.5058%" height="15" fill="rgb(254,186,29)" fg:x="59675" fg:w="1535"/><text x="58.7905%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (1,535 samples, 1.51%)</title><rect x="58.5405%" y="485" width="1.5058%" height="15" fill="rgb(238,6,4)" fg:x="59675" fg:w="1535"/><text x="58.7905%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (127 samples, 0.12%)</title><rect x="59.9217%" y="469" width="0.1246%" height="15" fill="rgb(221,151,16)" fg:x="61083" fg:w="127"/><text x="60.1717%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (115 samples, 0.11%)</title><rect x="59.9335%" y="453" width="0.1128%" height="15" fill="rgb(251,143,52)" fg:x="61095" fg:w="115"/><text x="60.1835%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (115 samples, 0.11%)</title><rect x="59.9335%" y="437" width="0.1128%" height="15" fill="rgb(206,90,15)" fg:x="61095" fg:w="115"/><text x="60.1835%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="60.0286%" y="421" width="0.0177%" height="15" fill="rgb(218,35,8)" fg:x="61192" fg:w="18"/><text x="60.2786%" y="431.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.02%)</title><rect x="60.0296%" y="405" width="0.0167%" height="15" fill="rgb(239,215,6)" fg:x="61193" fg:w="17"/><text x="60.2796%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.02%)</title><rect x="60.0296%" y="389" width="0.0167%" height="15" fill="rgb(245,116,39)" fg:x="61193" fg:w="17"/><text x="60.2796%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.02%)</title><rect x="60.0296%" y="373" width="0.0167%" height="15" fill="rgb(242,65,28)" fg:x="61193" fg:w="17"/><text x="60.2796%" y="383.50"></text></g><g><title>__rg_dealloc (17 samples, 0.02%)</title><rect x="60.0296%" y="357" width="0.0167%" height="15" fill="rgb(252,132,53)" fg:x="61193" fg:w="17"/><text x="60.2796%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.02%)</title><rect x="60.0296%" y="341" width="0.0167%" height="15" fill="rgb(224,159,50)" fg:x="61193" fg:w="17"/><text x="60.2796%" y="351.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (45 samples, 0.04%)</title><rect x="60.0463%" y="549" width="0.0441%" height="15" fill="rgb(224,93,4)" fg:x="61210" fg:w="45"/><text x="60.2963%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (399 samples, 0.39%)</title><rect x="60.2199%" y="517" width="0.3914%" height="15" fill="rgb(208,81,34)" fg:x="61387" fg:w="399"/><text x="60.4699%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (146 samples, 0.14%)</title><rect x="60.6329%" y="501" width="0.1432%" height="15" fill="rgb(233,92,54)" fg:x="61808" fg:w="146"/><text x="60.8829%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::needs_control_plane_msg (158 samples, 0.15%)</title><rect x="60.7762%" y="501" width="0.1550%" height="15" fill="rgb(237,21,14)" fg:x="61954" fg:w="158"/><text x="61.0262%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (151 samples, 0.15%)</title><rect x="60.7830%" y="485" width="0.1481%" height="15" fill="rgb(249,128,51)" fg:x="61961" fg:w="151"/><text x="61.0330%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (151 samples, 0.15%)</title><rect x="60.7830%" y="469" width="0.1481%" height="15" fill="rgb(223,129,24)" fg:x="61961" fg:w="151"/><text x="61.0330%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (72 samples, 0.07%)</title><rect x="60.8605%" y="453" width="0.0706%" height="15" fill="rgb(231,168,25)" fg:x="62040" fg:w="72"/><text x="61.1105%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (66 samples, 0.06%)</title><rect x="60.8664%" y="437" width="0.0647%" height="15" fill="rgb(224,39,20)" fg:x="62046" fg:w="66"/><text x="61.1164%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (66 samples, 0.06%)</title><rect x="60.8664%" y="421" width="0.0647%" height="15" fill="rgb(225,152,53)" fg:x="62046" fg:w="66"/><text x="61.1164%" y="431.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::control_plane::{{closure}} (330 samples, 0.32%)</title><rect x="60.6114%" y="517" width="0.3237%" height="15" fill="rgb(252,17,24)" fg:x="61786" fg:w="330"/><text x="60.8614%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="61.9651%" y="501" width="0.0167%" height="15" fill="rgb(250,114,30)" fg:x="63166" fg:w="17"/><text x="62.2151%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="61.9651%" y="485" width="0.0167%" height="15" fill="rgb(229,5,4)" fg:x="63166" fg:w="17"/><text x="62.2151%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (528 samples, 0.52%)</title><rect x="61.9887%" y="501" width="0.5180%" height="15" fill="rgb(225,176,49)" fg:x="63190" fg:w="528"/><text x="62.2387%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="62.5066%" y="501" width="0.0108%" height="15" fill="rgb(224,221,49)" fg:x="63718" fg:w="11"/><text x="62.7566%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.03%)</title><rect x="62.5213%" y="437" width="0.0255%" height="15" fill="rgb(253,169,27)" fg:x="63733" fg:w="26"/><text x="62.7713%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="62.5341%" y="421" width="0.0128%" height="15" fill="rgb(211,206,16)" fg:x="63746" fg:w="13"/><text x="62.7841%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="62.5341%" y="405" width="0.0128%" height="15" fill="rgb(244,87,35)" fg:x="63746" fg:w="13"/><text x="62.7841%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="62.5341%" y="389" width="0.0128%" height="15" fill="rgb(246,28,10)" fg:x="63746" fg:w="13"/><text x="62.7841%" y="399.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="62.5341%" y="373" width="0.0128%" height="15" fill="rgb(229,12,44)" fg:x="63746" fg:w="13"/><text x="62.7841%" y="383.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="62.5341%" y="357" width="0.0128%" height="15" fill="rgb(210,145,37)" fg:x="63746" fg:w="13"/><text x="62.7841%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="62.5341%" y="341" width="0.0128%" height="15" fill="rgb(227,112,52)" fg:x="63746" fg:w="13"/><text x="62.7841%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (41 samples, 0.04%)</title><rect x="62.5174%" y="501" width="0.0402%" height="15" fill="rgb(238,155,34)" fg:x="63729" fg:w="41"/><text x="62.7674%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.04%)</title><rect x="62.5213%" y="485" width="0.0363%" height="15" fill="rgb(239,226,36)" fg:x="63733" fg:w="37"/><text x="62.7713%" y="495.50"></text></g><g><title>value_trait::Builder::object (37 samples, 0.04%)</title><rect x="62.5213%" y="469" width="0.0363%" height="15" fill="rgb(230,16,23)" fg:x="63733" fg:w="37"/><text x="62.7713%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (37 samples, 0.04%)</title><rect x="62.5213%" y="453" width="0.0363%" height="15" fill="rgb(236,171,36)" fg:x="63733" fg:w="37"/><text x="62.7713%" y="463.50"></text></g><g><title>tremor_value::value::Value::Object (11 samples, 0.01%)</title><rect x="62.5468%" y="437" width="0.0108%" height="15" fill="rgb(221,22,14)" fg:x="63759" fg:w="11"/><text x="62.7968%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (12 samples, 0.01%)</title><rect x="62.5655%" y="501" width="0.0118%" height="15" fill="rgb(242,43,11)" fg:x="63778" fg:w="12"/><text x="62.8155%" y="511.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="62.5851%" y="469" width="0.0128%" height="15" fill="rgb(232,69,23)" fg:x="63798" fg:w="13"/><text x="62.8351%" y="479.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (39 samples, 0.04%)</title><rect x="62.6518%" y="357" width="0.0383%" height="15" fill="rgb(216,180,54)" fg:x="63866" fg:w="39"/><text x="62.9018%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (39 samples, 0.04%)</title><rect x="62.6518%" y="341" width="0.0383%" height="15" fill="rgb(216,5,24)" fg:x="63866" fg:w="39"/><text x="62.9018%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (74 samples, 0.07%)</title><rect x="62.6273%" y="405" width="0.0726%" height="15" fill="rgb(225,89,9)" fg:x="63841" fg:w="74"/><text x="62.8773%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (74 samples, 0.07%)</title><rect x="62.6273%" y="389" width="0.0726%" height="15" fill="rgb(243,75,33)" fg:x="63841" fg:w="74"/><text x="62.8773%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (70 samples, 0.07%)</title><rect x="62.6312%" y="373" width="0.0687%" height="15" fill="rgb(247,141,45)" fg:x="63845" fg:w="70"/><text x="62.8812%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (98 samples, 0.10%)</title><rect x="62.6057%" y="469" width="0.0961%" height="15" fill="rgb(232,177,36)" fg:x="63819" fg:w="98"/><text x="62.8557%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (98 samples, 0.10%)</title><rect x="62.6057%" y="453" width="0.0961%" height="15" fill="rgb(219,125,36)" fg:x="63819" fg:w="98"/><text x="62.8557%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (98 samples, 0.10%)</title><rect x="62.6057%" y="437" width="0.0961%" height="15" fill="rgb(227,94,9)" fg:x="63819" fg:w="98"/><text x="62.8557%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (98 samples, 0.10%)</title><rect x="62.6057%" y="421" width="0.0961%" height="15" fill="rgb(240,34,52)" fg:x="63819" fg:w="98"/><text x="62.8557%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (121 samples, 0.12%)</title><rect x="62.5851%" y="485" width="0.1187%" height="15" fill="rgb(216,45,12)" fg:x="63798" fg:w="121"/><text x="62.8351%" y="495.50"></text></g><g><title>rust_dealloc (133 samples, 0.13%)</title><rect x="62.5773%" y="501" width="0.1305%" height="15" fill="rgb(246,21,19)" fg:x="63790" fg:w="133"/><text x="62.8273%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,812 samples, 1.78%)</title><rect x="60.9351%" y="517" width="1.7776%" height="15" fill="rgb(213,98,42)" fg:x="62116" fg:w="1812"/><text x="61.1851%" y="527.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,638 samples, 2.59%)</title><rect x="60.2091%" y="533" width="2.5878%" height="15" fill="rgb(250,136,47)" fg:x="61376" fg:w="2638"/><text x="60.4591%" y="543.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (86 samples, 0.08%)</title><rect x="62.7126%" y="517" width="0.0844%" height="15" fill="rgb(251,124,27)" fg:x="63928" fg:w="86"/><text x="62.9626%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="62.7970%" y="533" width="0.0157%" height="15" fill="rgb(229,180,14)" fg:x="64014" fg:w="16"/><text x="63.0470%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="62.8009%" y="517" width="0.0118%" height="15" fill="rgb(245,216,25)" fg:x="64018" fg:w="12"/><text x="63.0509%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (24 samples, 0.02%)</title><rect x="62.8127%" y="533" width="0.0235%" height="15" fill="rgb(251,43,5)" fg:x="64030" fg:w="24"/><text x="63.0627%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (24 samples, 0.02%)</title><rect x="62.8127%" y="517" width="0.0235%" height="15" fill="rgb(250,128,24)" fg:x="64030" fg:w="24"/><text x="63.0627%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (616 samples, 0.60%)</title><rect x="62.8362%" y="533" width="0.6043%" height="15" fill="rgb(217,117,27)" fg:x="64054" fg:w="616"/><text x="63.0862%" y="543.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="63.4650%" y="325" width="0.0206%" height="15" fill="rgb(245,147,4)" fg:x="64695" fg:w="21"/><text x="63.7150%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (14 samples, 0.01%)</title><rect x="63.4866%" y="325" width="0.0137%" height="15" fill="rgb(242,201,35)" fg:x="64717" fg:w="14"/><text x="63.7366%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (22 samples, 0.02%)</title><rect x="63.5004%" y="325" width="0.0216%" height="15" fill="rgb(218,181,1)" fg:x="64731" fg:w="22"/><text x="63.7504%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (22 samples, 0.02%)</title><rect x="63.5004%" y="309" width="0.0216%" height="15" fill="rgb(222,6,29)" fg:x="64731" fg:w="22"/><text x="63.7504%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (20 samples, 0.02%)</title><rect x="63.5023%" y="293" width="0.0196%" height="15" fill="rgb(208,186,3)" fg:x="64733" fg:w="20"/><text x="63.7523%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (71 samples, 0.07%)</title><rect x="63.4650%" y="357" width="0.0697%" height="15" fill="rgb(216,36,26)" fg:x="64695" fg:w="71"/><text x="63.7150%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (71 samples, 0.07%)</title><rect x="63.4650%" y="341" width="0.0697%" height="15" fill="rgb(248,201,23)" fg:x="64695" fg:w="71"/><text x="63.7150%" y="351.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (13 samples, 0.01%)</title><rect x="63.5219%" y="325" width="0.0128%" height="15" fill="rgb(251,170,31)" fg:x="64753" fg:w="13"/><text x="63.7719%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (95 samples, 0.09%)</title><rect x="63.4503%" y="405" width="0.0932%" height="15" fill="rgb(207,110,25)" fg:x="64680" fg:w="95"/><text x="63.7003%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (80 samples, 0.08%)</title><rect x="63.4650%" y="389" width="0.0785%" height="15" fill="rgb(250,54,15)" fg:x="64695" fg:w="80"/><text x="63.7150%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (80 samples, 0.08%)</title><rect x="63.4650%" y="373" width="0.0785%" height="15" fill="rgb(227,68,33)" fg:x="64695" fg:w="80"/><text x="63.7150%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (107 samples, 0.10%)</title><rect x="63.4405%" y="533" width="0.1050%" height="15" fill="rgb(238,34,41)" fg:x="64670" fg:w="107"/><text x="63.6905%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (107 samples, 0.10%)</title><rect x="63.4405%" y="517" width="0.1050%" height="15" fill="rgb(220,11,15)" fg:x="64670" fg:w="107"/><text x="63.6905%" y="527.50"></text></g><g><title>alloc::alloc::box_free (106 samples, 0.10%)</title><rect x="63.4415%" y="501" width="0.1040%" height="15" fill="rgb(246,111,35)" fg:x="64671" fg:w="106"/><text x="63.6915%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (106 samples, 0.10%)</title><rect x="63.4415%" y="485" width="0.1040%" height="15" fill="rgb(209,88,53)" fg:x="64671" fg:w="106"/><text x="63.6915%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (104 samples, 0.10%)</title><rect x="63.4435%" y="469" width="0.1020%" height="15" fill="rgb(231,185,47)" fg:x="64673" fg:w="104"/><text x="63.6935%" y="479.50"></text></g><g><title>__rg_dealloc (104 samples, 0.10%)</title><rect x="63.4435%" y="453" width="0.1020%" height="15" fill="rgb(233,154,1)" fg:x="64673" fg:w="104"/><text x="63.6935%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (104 samples, 0.10%)</title><rect x="63.4435%" y="437" width="0.1020%" height="15" fill="rgb(225,15,46)" fg:x="64673" fg:w="104"/><text x="63.6935%" y="447.50"></text></g><g><title>rust_dealloc (104 samples, 0.10%)</title><rect x="63.4435%" y="421" width="0.1020%" height="15" fill="rgb(211,135,41)" fg:x="64673" fg:w="104"/><text x="63.6935%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1157" width="5.0570%" height="15" fill="rgb(208,54,0)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1167.50">core::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1141" width="5.0570%" height="15" fill="rgb(244,136,14)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1151.50">std::t..</text></g><g><title>std::panic::catch_unwind (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1125" width="5.0570%" height="15" fill="rgb(241,56,14)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1135.50">std::p..</text></g><g><title>std::panicking::try (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1109" width="5.0570%" height="15" fill="rgb(205,80,24)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1119.50">std::p..</text></g><g><title>std::panicking::try::do_call (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1093" width="5.0570%" height="15" fill="rgb(220,57,4)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1103.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1077" width="5.0570%" height="15" fill="rgb(226,193,50)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1087.50">&lt;core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1061" width="5.0570%" height="15" fill="rgb(231,168,22)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1071.50">std::t..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1045" width="5.0570%" height="15" fill="rgb(254,215,14)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1055.50">std::s..</text></g><g><title>core::ops::function::FnOnce::call_once (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1029" width="5.0570%" height="15" fill="rgb(211,115,16)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1039.50">core::..</text></g><g><title>async_global_executor::threading::thread_main_loop (5,155 samples, 5.06%)</title><rect x="58.5405%" y="1013" width="5.0570%" height="15" fill="rgb(236,210,16)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1023.50">async_..</text></g><g><title>std::panic::catch_unwind (5,155 samples, 5.06%)</title><rect x="58.5405%" y="997" width="5.0570%" height="15" fill="rgb(221,94,12)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="1007.50">std::p..</text></g><g><title>std::panicking::try (5,155 samples, 5.06%)</title><rect x="58.5405%" y="981" width="5.0570%" height="15" fill="rgb(235,218,49)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="991.50">std::p..</text></g><g><title>std::panicking::try::do_call (5,155 samples, 5.06%)</title><rect x="58.5405%" y="965" width="5.0570%" height="15" fill="rgb(217,114,14)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="975.50">std::p..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="949" width="5.0570%" height="15" fill="rgb(216,145,22)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="959.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,155 samples, 5.06%)</title><rect x="58.5405%" y="933" width="5.0570%" height="15" fill="rgb(217,112,39)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="943.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,155 samples, 5.06%)</title><rect x="58.5405%" y="917" width="5.0570%" height="15" fill="rgb(225,85,32)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="927.50">std::t..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="901" width="5.0570%" height="15" fill="rgb(245,209,47)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="911.50">async_..</text></g><g><title>async_global_executor::reactor::block_on (5,155 samples, 5.06%)</title><rect x="58.5405%" y="885" width="5.0570%" height="15" fill="rgb(218,220,15)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="895.50">async_..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="869" width="5.0570%" height="15" fill="rgb(222,202,31)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="879.50">async_..</text></g><g><title>async_io::driver::block_on (5,155 samples, 5.06%)</title><rect x="58.5405%" y="853" width="5.0570%" height="15" fill="rgb(243,203,4)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="863.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5,155 samples, 5.06%)</title><rect x="58.5405%" y="837" width="5.0570%" height="15" fill="rgb(237,92,17)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="847.50">&lt;futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,155 samples, 5.06%)</title><rect x="58.5405%" y="821" width="5.0570%" height="15" fill="rgb(231,119,7)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="831.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="805" width="5.0570%" height="15" fill="rgb(237,82,41)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="815.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5,155 samples, 5.06%)</title><rect x="58.5405%" y="789" width="5.0570%" height="15" fill="rgb(226,81,48)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="799.50">&lt;futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,155 samples, 5.06%)</title><rect x="58.5405%" y="773" width="5.0570%" height="15" fill="rgb(234,70,51)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="783.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="757" width="5.0570%" height="15" fill="rgb(251,86,4)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="767.50">async_..</text></g><g><title>async_task::runnable::Runnable::run (5,155 samples, 5.06%)</title><rect x="58.5405%" y="741" width="5.0570%" height="15" fill="rgb(244,144,28)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="751.50">async_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,155 samples, 5.06%)</title><rect x="58.5405%" y="725" width="5.0570%" height="15" fill="rgb(232,161,39)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="735.50">async_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,155 samples, 5.06%)</title><rect x="58.5405%" y="709" width="5.0570%" height="15" fill="rgb(247,34,51)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="719.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,155 samples, 5.06%)</title><rect x="58.5405%" y="693" width="5.0570%" height="15" fill="rgb(225,132,2)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="703.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="677" width="5.0570%" height="15" fill="rgb(209,159,44)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="687.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,155 samples, 5.06%)</title><rect x="58.5405%" y="661" width="5.0570%" height="15" fill="rgb(251,214,1)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="671.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,155 samples, 5.06%)</title><rect x="58.5405%" y="645" width="5.0570%" height="15" fill="rgb(247,84,47)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="655.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,155 samples, 5.06%)</title><rect x="58.5405%" y="629" width="5.0570%" height="15" fill="rgb(240,111,43)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="639.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,155 samples, 5.06%)</title><rect x="58.5405%" y="613" width="5.0570%" height="15" fill="rgb(215,214,35)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="623.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="597" width="5.0570%" height="15" fill="rgb(248,207,23)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="607.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,155 samples, 5.06%)</title><rect x="58.5405%" y="581" width="5.0570%" height="15" fill="rgb(214,186,4)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="591.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,155 samples, 5.06%)</title><rect x="58.5405%" y="565" width="5.0570%" height="15" fill="rgb(220,133,22)" fg:x="59675" fg:w="5155"/><text x="58.7905%" y="575.50">&lt;core:..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,575 samples, 3.51%)</title><rect x="60.0904%" y="549" width="3.5070%" height="15" fill="rgb(239,134,19)" fg:x="61255" fg:w="3575"/><text x="60.3404%" y="559.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (53 samples, 0.05%)</title><rect x="63.5455%" y="533" width="0.0520%" height="15" fill="rgb(250,140,9)" fg:x="64777" fg:w="53"/><text x="63.7955%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (23 samples, 0.02%)</title><rect x="63.5749%" y="517" width="0.0226%" height="15" fill="rgb(225,59,14)" fg:x="64807" fg:w="23"/><text x="63.8249%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="63.6024%" y="1157" width="0.0137%" height="15" fill="rgb(214,152,51)" fg:x="64835" fg:w="14"/><text x="63.8524%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="63.6161%" y="1157" width="0.0196%" height="15" fill="rgb(251,227,43)" fg:x="64849" fg:w="20"/><text x="63.8661%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="63.6367%" y="1157" width="0.0177%" height="15" fill="rgb(241,96,17)" fg:x="64870" fg:w="18"/><text x="63.8867%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (104 samples, 0.10%)</title><rect x="63.6544%" y="1157" width="0.1020%" height="15" fill="rgb(234,198,43)" fg:x="64888" fg:w="104"/><text x="63.9044%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (25 samples, 0.02%)</title><rect x="63.7564%" y="1157" width="0.0245%" height="15" fill="rgb(220,108,29)" fg:x="64992" fg:w="25"/><text x="64.0064%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (25 samples, 0.02%)</title><rect x="63.7564%" y="1141" width="0.0245%" height="15" fill="rgb(226,163,33)" fg:x="64992" fg:w="25"/><text x="64.0064%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (25 samples, 0.02%)</title><rect x="63.7564%" y="1125" width="0.0245%" height="15" fill="rgb(205,194,45)" fg:x="64992" fg:w="25"/><text x="64.0064%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="63.7564%" y="1109" width="0.0245%" height="15" fill="rgb(206,143,44)" fg:x="64992" fg:w="25"/><text x="64.0064%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="63.7564%" y="1093" width="0.0245%" height="15" fill="rgb(236,136,36)" fg:x="64992" fg:w="25"/><text x="64.0064%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="63.7564%" y="1077" width="0.0245%" height="15" fill="rgb(249,172,42)" fg:x="64992" fg:w="25"/><text x="64.0064%" y="1087.50"></text></g><g><title>__rg_dealloc (25 samples, 0.02%)</title><rect x="63.7564%" y="1061" width="0.0245%" height="15" fill="rgb(216,139,23)" fg:x="64992" fg:w="25"/><text x="64.0064%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (25 samples, 0.02%)</title><rect x="63.7564%" y="1045" width="0.0245%" height="15" fill="rgb(207,166,20)" fg:x="64992" fg:w="25"/><text x="64.0064%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (85 samples, 0.08%)</title><rect x="63.7809%" y="1157" width="0.0834%" height="15" fill="rgb(210,209,22)" fg:x="65017" fg:w="85"/><text x="64.0309%" y="1167.50"></text></g><g><title>event_listener::Event::notify (20 samples, 0.02%)</title><rect x="63.8663%" y="1157" width="0.0196%" height="15" fill="rgb(232,118,20)" fg:x="65104" fg:w="20"/><text x="64.1163%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (19 samples, 0.02%)</title><rect x="63.8918%" y="1157" width="0.0186%" height="15" fill="rgb(238,113,42)" fg:x="65130" fg:w="19"/><text x="64.1418%" y="1167.50"></text></g><g><title>rust_alloc (80 samples, 0.08%)</title><rect x="63.9202%" y="1157" width="0.0785%" height="15" fill="rgb(231,42,5)" fg:x="65159" fg:w="80"/><text x="64.1702%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (19 samples, 0.02%)</title><rect x="64.0222%" y="1157" width="0.0186%" height="15" fill="rgb(243,166,24)" fg:x="65263" fg:w="19"/><text x="64.2722%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (83 samples, 0.08%)</title><rect x="65.2436%" y="437" width="0.0814%" height="15" fill="rgb(237,226,12)" fg:x="66508" fg:w="83"/><text x="65.4936%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="65.5506%" y="421" width="0.0147%" height="15" fill="rgb(229,133,24)" fg:x="66821" fg:w="15"/><text x="65.8006%" y="431.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="65.5653%" y="421" width="0.0324%" height="15" fill="rgb(238,33,43)" fg:x="66836" fg:w="33"/><text x="65.8153%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (924 samples, 0.91%)</title><rect x="65.5977%" y="421" width="0.9064%" height="15" fill="rgb(227,59,38)" fg:x="66869" fg:w="924"/><text x="65.8477%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="66.5081%" y="357" width="0.0451%" height="15" fill="rgb(230,97,0)" fg:x="67797" fg:w="46"/><text x="66.7581%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (57 samples, 0.06%)</title><rect x="66.5081%" y="421" width="0.0559%" height="15" fill="rgb(250,173,50)" fg:x="67797" fg:w="57"/><text x="66.7581%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (57 samples, 0.06%)</title><rect x="66.5081%" y="405" width="0.0559%" height="15" fill="rgb(240,15,50)" fg:x="67797" fg:w="57"/><text x="66.7581%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (57 samples, 0.06%)</title><rect x="66.5081%" y="389" width="0.0559%" height="15" fill="rgb(221,93,22)" fg:x="67797" fg:w="57"/><text x="66.7581%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (57 samples, 0.06%)</title><rect x="66.5081%" y="373" width="0.0559%" height="15" fill="rgb(245,180,53)" fg:x="67797" fg:w="57"/><text x="66.7581%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.01%)</title><rect x="66.5532%" y="357" width="0.0108%" height="15" fill="rgb(231,88,51)" fg:x="67843" fg:w="11"/><text x="66.8032%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (11 samples, 0.01%)</title><rect x="66.5532%" y="341" width="0.0108%" height="15" fill="rgb(240,58,21)" fg:x="67843" fg:w="11"/><text x="66.8032%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="66.5640%" y="389" width="0.0108%" height="15" fill="rgb(237,21,10)" fg:x="67854" fg:w="11"/><text x="66.8140%" y="399.50"></text></g><g><title>size_to_sizeclass (23 samples, 0.02%)</title><rect x="66.6209%" y="229" width="0.0226%" height="15" fill="rgb(218,43,11)" fg:x="67912" fg:w="23"/><text x="66.8709%" y="239.50"></text></g><g><title>rust_dealloc (41 samples, 0.04%)</title><rect x="66.6434%" y="165" width="0.0402%" height="15" fill="rgb(218,221,29)" fg:x="67935" fg:w="41"/><text x="66.8934%" y="175.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (45 samples, 0.04%)</title><rect x="66.7602%" y="117" width="0.0441%" height="15" fill="rgb(214,118,42)" fg:x="68054" fg:w="45"/><text x="67.0102%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (44 samples, 0.04%)</title><rect x="66.7612%" y="101" width="0.0432%" height="15" fill="rgb(251,200,26)" fg:x="68055" fg:w="44"/><text x="67.0112%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (131 samples, 0.13%)</title><rect x="66.6896%" y="165" width="0.1285%" height="15" fill="rgb(237,101,39)" fg:x="67982" fg:w="131"/><text x="66.9396%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (131 samples, 0.13%)</title><rect x="66.6896%" y="149" width="0.1285%" height="15" fill="rgb(251,117,11)" fg:x="67982" fg:w="131"/><text x="66.9396%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (118 samples, 0.12%)</title><rect x="66.7023%" y="133" width="0.1158%" height="15" fill="rgb(216,223,23)" fg:x="67995" fg:w="118"/><text x="66.9523%" y="143.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (14 samples, 0.01%)</title><rect x="66.8043%" y="117" width="0.0137%" height="15" fill="rgb(251,54,12)" fg:x="68099" fg:w="14"/><text x="67.0543%" y="127.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (14 samples, 0.01%)</title><rect x="66.8043%" y="101" width="0.0137%" height="15" fill="rgb(254,176,54)" fg:x="68099" fg:w="14"/><text x="67.0543%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (267 samples, 0.26%)</title><rect x="66.6434%" y="229" width="0.2619%" height="15" fill="rgb(210,32,8)" fg:x="67935" fg:w="267"/><text x="66.8934%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (267 samples, 0.26%)</title><rect x="66.6434%" y="213" width="0.2619%" height="15" fill="rgb(235,52,38)" fg:x="67935" fg:w="267"/><text x="66.8934%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (267 samples, 0.26%)</title><rect x="66.6434%" y="197" width="0.2619%" height="15" fill="rgb(231,4,44)" fg:x="67935" fg:w="267"/><text x="66.8934%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (267 samples, 0.26%)</title><rect x="66.6434%" y="181" width="0.2619%" height="15" fill="rgb(249,2,32)" fg:x="67935" fg:w="267"/><text x="66.8934%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (89 samples, 0.09%)</title><rect x="66.8181%" y="165" width="0.0873%" height="15" fill="rgb(224,65,26)" fg:x="68113" fg:w="89"/><text x="67.0681%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (300 samples, 0.29%)</title><rect x="66.6121%" y="245" width="0.2943%" height="15" fill="rgb(250,73,40)" fg:x="67903" fg:w="300"/><text x="66.8621%" y="255.50"></text></g><g><title>rust_dealloc (312 samples, 0.31%)</title><rect x="66.6022%" y="261" width="0.3061%" height="15" fill="rgb(253,177,16)" fg:x="67893" fg:w="312"/><text x="66.8522%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (24 samples, 0.02%)</title><rect x="66.9191%" y="245" width="0.0235%" height="15" fill="rgb(217,32,34)" fg:x="68216" fg:w="24"/><text x="67.1691%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (391 samples, 0.38%)</title><rect x="66.5640%" y="405" width="0.3836%" height="15" fill="rgb(212,7,10)" fg:x="67854" fg:w="391"/><text x="66.8140%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (380 samples, 0.37%)</title><rect x="66.5748%" y="389" width="0.3728%" height="15" fill="rgb(245,89,8)" fg:x="67865" fg:w="380"/><text x="66.8248%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (368 samples, 0.36%)</title><rect x="66.5866%" y="373" width="0.3610%" height="15" fill="rgb(237,16,53)" fg:x="67877" fg:w="368"/><text x="66.8366%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (368 samples, 0.36%)</title><rect x="66.5866%" y="357" width="0.3610%" height="15" fill="rgb(250,204,30)" fg:x="67877" fg:w="368"/><text x="66.8366%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (368 samples, 0.36%)</title><rect x="66.5866%" y="341" width="0.3610%" height="15" fill="rgb(208,77,27)" fg:x="67877" fg:w="368"/><text x="66.8366%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (358 samples, 0.35%)</title><rect x="66.5964%" y="325" width="0.3512%" height="15" fill="rgb(250,204,28)" fg:x="67887" fg:w="358"/><text x="66.8464%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (358 samples, 0.35%)</title><rect x="66.5964%" y="309" width="0.3512%" height="15" fill="rgb(244,63,21)" fg:x="67887" fg:w="358"/><text x="66.8464%" y="319.50"></text></g><g><title>__rg_dealloc (358 samples, 0.35%)</title><rect x="66.5964%" y="293" width="0.3512%" height="15" fill="rgb(236,85,44)" fg:x="67887" fg:w="358"/><text x="66.8464%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (352 samples, 0.35%)</title><rect x="66.6022%" y="277" width="0.3453%" height="15" fill="rgb(215,98,4)" fg:x="67893" fg:w="352"/><text x="66.8522%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (40 samples, 0.04%)</title><rect x="66.9083%" y="261" width="0.0392%" height="15" fill="rgb(235,38,11)" fg:x="68205" fg:w="40"/><text x="67.1583%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.03%)</title><rect x="66.9976%" y="165" width="0.0265%" height="15" fill="rgb(254,186,25)" fg:x="68296" fg:w="27"/><text x="67.2476%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (27 samples, 0.03%)</title><rect x="66.9976%" y="149" width="0.0265%" height="15" fill="rgb(225,55,31)" fg:x="68296" fg:w="27"/><text x="67.2476%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (51 samples, 0.05%)</title><rect x="66.9819%" y="213" width="0.0500%" height="15" fill="rgb(211,15,21)" fg:x="68280" fg:w="51"/><text x="67.2319%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (51 samples, 0.05%)</title><rect x="66.9819%" y="197" width="0.0500%" height="15" fill="rgb(215,187,41)" fg:x="68280" fg:w="51"/><text x="67.2319%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (51 samples, 0.05%)</title><rect x="66.9819%" y="181" width="0.0500%" height="15" fill="rgb(248,69,32)" fg:x="68280" fg:w="51"/><text x="67.2319%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (84 samples, 0.08%)</title><rect x="66.9672%" y="245" width="0.0824%" height="15" fill="rgb(252,102,52)" fg:x="68265" fg:w="84"/><text x="67.2172%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (84 samples, 0.08%)</title><rect x="66.9672%" y="229" width="0.0824%" height="15" fill="rgb(253,140,32)" fg:x="68265" fg:w="84"/><text x="67.2172%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="67.0319%" y="213" width="0.0177%" height="15" fill="rgb(216,56,42)" fg:x="68331" fg:w="18"/><text x="67.2819%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (95 samples, 0.09%)</title><rect x="66.9672%" y="277" width="0.0932%" height="15" fill="rgb(216,184,14)" fg:x="68265" fg:w="95"/><text x="67.2172%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (95 samples, 0.09%)</title><rect x="66.9672%" y="261" width="0.0932%" height="15" fill="rgb(237,187,27)" fg:x="68265" fg:w="95"/><text x="67.2172%" y="271.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="67.0496%" y="245" width="0.0108%" height="15" fill="rgb(219,65,3)" fg:x="68349" fg:w="11"/><text x="67.2996%" y="255.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="67.0496%" y="229" width="0.0108%" height="15" fill="rgb(245,83,25)" fg:x="68349" fg:w="11"/><text x="67.2996%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="67.0496%" y="213" width="0.0108%" height="15" fill="rgb(214,205,45)" fg:x="68349" fg:w="11"/><text x="67.2996%" y="223.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="67.0496%" y="197" width="0.0108%" height="15" fill="rgb(241,20,18)" fg:x="68349" fg:w="11"/><text x="67.2996%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (106 samples, 0.10%)</title><rect x="66.9583%" y="293" width="0.1040%" height="15" fill="rgb(232,163,23)" fg:x="68256" fg:w="106"/><text x="67.2083%" y="303.50"></text></g><g><title>rust_dealloc (111 samples, 0.11%)</title><rect x="66.9544%" y="309" width="0.1089%" height="15" fill="rgb(214,5,46)" fg:x="68252" fg:w="111"/><text x="67.2044%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (511 samples, 0.50%)</title><rect x="66.5640%" y="421" width="0.5013%" height="15" fill="rgb(229,78,17)" fg:x="67854" fg:w="511"/><text x="66.8140%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (120 samples, 0.12%)</title><rect x="66.9476%" y="405" width="0.1177%" height="15" fill="rgb(248,89,10)" fg:x="68245" fg:w="120"/><text x="67.1976%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (120 samples, 0.12%)</title><rect x="66.9476%" y="389" width="0.1177%" height="15" fill="rgb(248,54,15)" fg:x="68245" fg:w="120"/><text x="67.1976%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (120 samples, 0.12%)</title><rect x="66.9476%" y="373" width="0.1177%" height="15" fill="rgb(223,116,6)" fg:x="68245" fg:w="120"/><text x="67.1976%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (113 samples, 0.11%)</title><rect x="66.9544%" y="357" width="0.1109%" height="15" fill="rgb(205,125,38)" fg:x="68252" fg:w="113"/><text x="67.2044%" y="367.50"></text></g><g><title>__rg_dealloc (113 samples, 0.11%)</title><rect x="66.9544%" y="341" width="0.1109%" height="15" fill="rgb(251,78,38)" fg:x="68252" fg:w="113"/><text x="67.2044%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (113 samples, 0.11%)</title><rect x="66.9544%" y="325" width="0.1109%" height="15" fill="rgb(253,78,28)" fg:x="68252" fg:w="113"/><text x="67.2044%" y="335.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (12 samples, 0.01%)</title><rect x="67.1290%" y="373" width="0.0118%" height="15" fill="rgb(209,120,3)" fg:x="68430" fg:w="12"/><text x="67.3790%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (12 samples, 0.01%)</title><rect x="67.1290%" y="357" width="0.0118%" height="15" fill="rgb(238,229,9)" fg:x="68430" fg:w="12"/><text x="67.3790%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (22 samples, 0.02%)</title><rect x="67.1781%" y="341" width="0.0216%" height="15" fill="rgb(253,159,18)" fg:x="68480" fg:w="22"/><text x="67.4281%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (15 samples, 0.01%)</title><rect x="67.1850%" y="325" width="0.0147%" height="15" fill="rgb(244,42,34)" fg:x="68487" fg:w="15"/><text x="67.4350%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (66 samples, 0.06%)</title><rect x="67.1487%" y="357" width="0.0647%" height="15" fill="rgb(224,8,7)" fg:x="68450" fg:w="66"/><text x="67.3987%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (14 samples, 0.01%)</title><rect x="67.1997%" y="341" width="0.0137%" height="15" fill="rgb(210,201,45)" fg:x="68502" fg:w="14"/><text x="67.4497%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (75 samples, 0.07%)</title><rect x="67.1428%" y="373" width="0.0736%" height="15" fill="rgb(252,185,21)" fg:x="68444" fg:w="75"/><text x="67.3928%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (16 samples, 0.02%)</title><rect x="67.2163%" y="373" width="0.0157%" height="15" fill="rgb(223,131,1)" fg:x="68519" fg:w="16"/><text x="67.4663%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (183 samples, 0.18%)</title><rect x="67.0653%" y="421" width="0.1795%" height="15" fill="rgb(245,141,16)" fg:x="68365" fg:w="183"/><text x="67.3153%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (177 samples, 0.17%)</title><rect x="67.0712%" y="405" width="0.1736%" height="15" fill="rgb(229,55,45)" fg:x="68371" fg:w="177"/><text x="67.3212%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (177 samples, 0.17%)</title><rect x="67.0712%" y="389" width="0.1736%" height="15" fill="rgb(208,92,15)" fg:x="68371" fg:w="177"/><text x="67.3212%" y="399.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::update_min_max (13 samples, 0.01%)</title><rect x="67.2320%" y="373" width="0.0128%" height="15" fill="rgb(234,185,47)" fg:x="68535" fg:w="13"/><text x="67.4820%" y="383.50"></text></g><g><title>core::time::Duration::as_nanos (15 samples, 0.01%)</title><rect x="67.2909%" y="405" width="0.0147%" height="15" fill="rgb(253,104,50)" fg:x="68595" fg:w="15"/><text x="67.5409%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (14 samples, 0.01%)</title><rect x="67.3056%" y="405" width="0.0137%" height="15" fill="rgb(205,70,7)" fg:x="68610" fg:w="14"/><text x="67.5556%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (14 samples, 0.01%)</title><rect x="67.3056%" y="389" width="0.0137%" height="15" fill="rgb(240,178,43)" fg:x="68610" fg:w="14"/><text x="67.5556%" y="399.50"></text></g><g><title>tremor_common::time::nanotime (276 samples, 0.27%)</title><rect x="67.2448%" y="421" width="0.2708%" height="15" fill="rgb(214,112,2)" fg:x="68548" fg:w="276"/><text x="67.4948%" y="431.50"></text></g><g><title>std::time::SystemTime::now (200 samples, 0.20%)</title><rect x="67.3194%" y="405" width="0.1962%" height="15" fill="rgb(206,46,17)" fg:x="68624" fg:w="200"/><text x="67.5694%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (200 samples, 0.20%)</title><rect x="67.3194%" y="389" width="0.1962%" height="15" fill="rgb(225,220,16)" fg:x="68624" fg:w="200"/><text x="67.5694%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (200 samples, 0.20%)</title><rect x="67.3194%" y="373" width="0.1962%" height="15" fill="rgb(238,65,40)" fg:x="68624" fg:w="200"/><text x="67.5694%" y="383.50"></text></g><g><title>__clock_gettime_2 (64 samples, 0.06%)</title><rect x="67.4528%" y="357" width="0.0628%" height="15" fill="rgb(230,151,21)" fg:x="68760" fg:w="64"/><text x="67.7028%" y="367.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.03%)</title><rect x="67.4900%" y="341" width="0.0255%" height="15" fill="rgb(218,58,49)" fg:x="68798" fg:w="26"/><text x="67.7400%" y="351.50"></text></g><g><title>start_thread (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1157" width="3.4776%" height="15" fill="rgb(219,179,14)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1167.50">sta..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1141" width="3.4776%" height="15" fill="rgb(223,72,1)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1151.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1125" width="3.4776%" height="15" fill="rgb(238,126,10)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1135.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1109" width="3.4776%" height="15" fill="rgb(224,206,38)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1119.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1093" width="3.4776%" height="15" fill="rgb(212,201,54)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1103.50">cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1077" width="3.4776%" height="15" fill="rgb(218,154,48)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1087.50">std..</text></g><g><title>std::panic::catch_unwind (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1061" width="3.4776%" height="15" fill="rgb(232,93,24)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1071.50">std..</text></g><g><title>std::panicking::try (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1045" width="3.4776%" height="15" fill="rgb(245,30,21)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1055.50">std..</text></g><g><title>std::panicking::try::do_call (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1029" width="3.4776%" height="15" fill="rgb(242,148,29)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1039.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,545 samples, 3.48%)</title><rect x="64.0468%" y="1013" width="3.4776%" height="15" fill="rgb(244,153,54)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1023.50">&lt;co..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="997" width="3.4776%" height="15" fill="rgb(252,87,22)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="1007.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,545 samples, 3.48%)</title><rect x="64.0468%" y="981" width="3.4776%" height="15" fill="rgb(210,51,29)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="991.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (3,545 samples, 3.48%)</title><rect x="64.0468%" y="965" width="3.4776%" height="15" fill="rgb(242,136,47)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="975.50">cor..</text></g><g><title>async_global_executor::threading::thread_main_loop (3,545 samples, 3.48%)</title><rect x="64.0468%" y="949" width="3.4776%" height="15" fill="rgb(238,68,4)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="959.50">asy..</text></g><g><title>std::panic::catch_unwind (3,545 samples, 3.48%)</title><rect x="64.0468%" y="933" width="3.4776%" height="15" fill="rgb(242,161,30)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="943.50">std..</text></g><g><title>std::panicking::try (3,545 samples, 3.48%)</title><rect x="64.0468%" y="917" width="3.4776%" height="15" fill="rgb(218,58,44)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="927.50">std..</text></g><g><title>std::panicking::try::do_call (3,545 samples, 3.48%)</title><rect x="64.0468%" y="901" width="3.4776%" height="15" fill="rgb(252,125,32)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="911.50">std..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="885" width="3.4776%" height="15" fill="rgb(219,178,0)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="895.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,545 samples, 3.48%)</title><rect x="64.0468%" y="869" width="3.4776%" height="15" fill="rgb(213,152,7)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="879.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,545 samples, 3.48%)</title><rect x="64.0468%" y="853" width="3.4776%" height="15" fill="rgb(249,109,34)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="863.50">std..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="837" width="3.4776%" height="15" fill="rgb(232,96,21)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="847.50">asy..</text></g><g><title>async_global_executor::reactor::block_on (3,545 samples, 3.48%)</title><rect x="64.0468%" y="821" width="3.4776%" height="15" fill="rgb(228,27,39)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="831.50">asy..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="805" width="3.4776%" height="15" fill="rgb(211,182,52)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="815.50">asy..</text></g><g><title>async_io::driver::block_on (3,545 samples, 3.48%)</title><rect x="64.0468%" y="789" width="3.4776%" height="15" fill="rgb(234,178,38)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="799.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="773" width="3.4776%" height="15" fill="rgb(221,111,3)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="783.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="757" width="3.4776%" height="15" fill="rgb(228,175,21)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="767.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="741" width="3.4776%" height="15" fill="rgb(228,174,43)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="751.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="725" width="3.4776%" height="15" fill="rgb(211,191,0)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="735.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="709" width="3.4776%" height="15" fill="rgb(253,117,3)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="719.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="693" width="3.4776%" height="15" fill="rgb(241,127,19)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="703.50">asy..</text></g><g><title>async_task::runnable::Runnable::run (3,545 samples, 3.48%)</title><rect x="64.0468%" y="677" width="3.4776%" height="15" fill="rgb(218,103,12)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="687.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,545 samples, 3.48%)</title><rect x="64.0468%" y="661" width="3.4776%" height="15" fill="rgb(236,214,43)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="671.50">asy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="645" width="3.4776%" height="15" fill="rgb(244,144,19)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="655.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="629" width="3.4776%" height="15" fill="rgb(246,188,10)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="639.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="613" width="3.4776%" height="15" fill="rgb(212,193,33)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="623.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="597" width="3.4776%" height="15" fill="rgb(241,51,29)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="607.50">&lt;as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,545 samples, 3.48%)</title><rect x="64.0468%" y="581" width="3.4776%" height="15" fill="rgb(211,58,19)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="591.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,545 samples, 3.48%)</title><rect x="64.0468%" y="565" width="3.4776%" height="15" fill="rgb(229,111,26)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="575.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,545 samples, 3.48%)</title><rect x="64.0468%" y="549" width="3.4776%" height="15" fill="rgb(213,115,40)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="559.50">std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="533" width="3.4776%" height="15" fill="rgb(209,56,44)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="543.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="517" width="3.4776%" height="15" fill="rgb(230,108,32)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="527.50">&lt;as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="501" width="3.4776%" height="15" fill="rgb(216,165,31)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="511.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,545 samples, 3.48%)</title><rect x="64.0468%" y="485" width="3.4776%" height="15" fill="rgb(218,122,21)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="495.50">tre..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="469" width="3.4776%" height="15" fill="rgb(223,224,47)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="479.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,545 samples, 3.48%)</title><rect x="64.0468%" y="453" width="3.4776%" height="15" fill="rgb(238,102,44)" fg:x="65288" fg:w="3545"/><text x="64.2968%" y="463.50">&lt;co..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (2,242 samples, 2.20%)</title><rect x="65.3250%" y="437" width="2.1994%" height="15" fill="rgb(236,46,40)" fg:x="66591" fg:w="2242"/><text x="65.5750%" y="447.50">&lt;..</text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="67.5656%" y="309" width="0.0177%" height="15" fill="rgb(247,202,50)" fg:x="68875" fg:w="18"/><text x="67.8156%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (23 samples, 0.02%)</title><rect x="67.6195%" y="277" width="0.0226%" height="15" fill="rgb(209,99,20)" fg:x="68930" fg:w="23"/><text x="67.8695%" y="287.50"></text></g><g><title> (23 samples, 0.02%)</title><rect x="67.6195%" y="261" width="0.0226%" height="15" fill="rgb(252,27,34)" fg:x="68930" fg:w="23"/><text x="67.8695%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (65 samples, 0.06%)</title><rect x="67.5842%" y="309" width="0.0638%" height="15" fill="rgb(215,206,23)" fg:x="68894" fg:w="65"/><text x="67.8342%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (52 samples, 0.05%)</title><rect x="67.5970%" y="293" width="0.0510%" height="15" fill="rgb(212,135,36)" fg:x="68907" fg:w="52"/><text x="67.8470%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (90 samples, 0.09%)</title><rect x="67.5656%" y="341" width="0.0883%" height="15" fill="rgb(240,189,1)" fg:x="68875" fg:w="90"/><text x="67.8156%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (90 samples, 0.09%)</title><rect x="67.5656%" y="325" width="0.0883%" height="15" fill="rgb(242,56,20)" fg:x="68875" fg:w="90"/><text x="67.8156%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (104 samples, 0.10%)</title><rect x="67.5656%" y="373" width="0.1020%" height="15" fill="rgb(247,132,33)" fg:x="68875" fg:w="104"/><text x="67.8156%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (104 samples, 0.10%)</title><rect x="67.5656%" y="357" width="0.1020%" height="15" fill="rgb(208,149,11)" fg:x="68875" fg:w="104"/><text x="67.8156%" y="367.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="67.6539%" y="341" width="0.0137%" height="15" fill="rgb(211,33,11)" fg:x="68965" fg:w="14"/><text x="67.9039%" y="351.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="67.6539%" y="325" width="0.0137%" height="15" fill="rgb(221,29,38)" fg:x="68965" fg:w="14"/><text x="67.9039%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="67.6539%" y="309" width="0.0137%" height="15" fill="rgb(206,182,49)" fg:x="68965" fg:w="14"/><text x="67.9039%" y="319.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="67.6539%" y="293" width="0.0137%" height="15" fill="rgb(216,140,1)" fg:x="68965" fg:w="14"/><text x="67.9039%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (112 samples, 0.11%)</title><rect x="67.5626%" y="389" width="0.1099%" height="15" fill="rgb(232,57,40)" fg:x="68872" fg:w="112"/><text x="67.8126%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (137 samples, 0.13%)</title><rect x="67.5499%" y="421" width="0.1344%" height="15" fill="rgb(224,186,18)" fg:x="68859" fg:w="137"/><text x="67.7999%" y="431.50"></text></g><g><title>rust_dealloc (133 samples, 0.13%)</title><rect x="67.5538%" y="405" width="0.1305%" height="15" fill="rgb(215,121,11)" fg:x="68863" fg:w="133"/><text x="67.8038%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="67.6725%" y="389" width="0.0118%" height="15" fill="rgb(245,147,10)" fg:x="68984" fg:w="12"/><text x="67.9225%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (22 samples, 0.02%)</title><rect x="67.6862%" y="373" width="0.0216%" height="15" fill="rgb(238,153,13)" fg:x="68998" fg:w="22"/><text x="67.9362%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (13 samples, 0.01%)</title><rect x="67.6951%" y="357" width="0.0128%" height="15" fill="rgb(233,108,0)" fg:x="69007" fg:w="13"/><text x="67.9451%" y="367.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="67.7078%" y="373" width="0.0147%" height="15" fill="rgb(212,157,17)" fg:x="69020" fg:w="15"/><text x="67.9578%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (15 samples, 0.01%)</title><rect x="67.7078%" y="357" width="0.0147%" height="15" fill="rgb(225,213,38)" fg:x="69020" fg:w="15"/><text x="67.9578%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="67.7078%" y="341" width="0.0147%" height="15" fill="rgb(248,16,11)" fg:x="69020" fg:w="15"/><text x="67.9578%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (49 samples, 0.05%)</title><rect x="67.6862%" y="421" width="0.0481%" height="15" fill="rgb(241,33,4)" fg:x="68998" fg:w="49"/><text x="67.9362%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (49 samples, 0.05%)</title><rect x="67.6862%" y="405" width="0.0481%" height="15" fill="rgb(222,26,43)" fg:x="68998" fg:w="49"/><text x="67.9362%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="67.6862%" y="389" width="0.0481%" height="15" fill="rgb(243,29,36)" fg:x="68998" fg:w="49"/><text x="67.9362%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (12 samples, 0.01%)</title><rect x="67.7225%" y="373" width="0.0118%" height="15" fill="rgb(241,9,27)" fg:x="69035" fg:w="12"/><text x="67.9725%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.02%)</title><rect x="68.2464%" y="261" width="0.0196%" height="15" fill="rgb(205,117,26)" fg:x="69569" fg:w="20"/><text x="68.4964%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.02%)</title><rect x="68.2464%" y="245" width="0.0196%" height="15" fill="rgb(209,80,39)" fg:x="69569" fg:w="20"/><text x="68.4964%" y="255.50"></text></g><g><title>__rg_dealloc (20 samples, 0.02%)</title><rect x="68.2464%" y="229" width="0.0196%" height="15" fill="rgb(239,155,6)" fg:x="69569" fg:w="20"/><text x="68.4964%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20 samples, 0.02%)</title><rect x="68.2464%" y="213" width="0.0196%" height="15" fill="rgb(212,104,12)" fg:x="69569" fg:w="20"/><text x="68.4964%" y="223.50"></text></g><g><title>core::mem::drop (726 samples, 0.71%)</title><rect x="68.2434%" y="309" width="0.7122%" height="15" fill="rgb(234,204,3)" fg:x="69566" fg:w="726"/><text x="68.4934%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (726 samples, 0.71%)</title><rect x="68.2434%" y="293" width="0.7122%" height="15" fill="rgb(251,218,7)" fg:x="69566" fg:w="726"/><text x="68.4934%" y="303.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (726 samples, 0.71%)</title><rect x="68.2434%" y="277" width="0.7122%" height="15" fill="rgb(221,81,32)" fg:x="69566" fg:w="726"/><text x="68.4934%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (699 samples, 0.69%)</title><rect x="68.2699%" y="261" width="0.6857%" height="15" fill="rgb(214,152,26)" fg:x="69593" fg:w="699"/><text x="68.5199%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (699 samples, 0.69%)</title><rect x="68.2699%" y="245" width="0.6857%" height="15" fill="rgb(223,22,3)" fg:x="69593" fg:w="699"/><text x="68.5199%" y="255.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="68.9851%" y="165" width="0.0118%" height="15" fill="rgb(207,174,7)" fg:x="70322" fg:w="12"/><text x="69.2351%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (19 samples, 0.02%)</title><rect x="69.0989%" y="53" width="0.0186%" height="15" fill="rgb(224,19,52)" fg:x="70438" fg:w="19"/><text x="69.3489%" y="63.50"></text></g><g><title> (19 samples, 0.02%)</title><rect x="69.0989%" y="37" width="0.0186%" height="15" fill="rgb(228,24,14)" fg:x="70438" fg:w="19"/><text x="69.3489%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (127 samples, 0.12%)</title><rect x="69.0106%" y="85" width="0.1246%" height="15" fill="rgb(230,153,43)" fg:x="70348" fg:w="127"/><text x="69.2606%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (109 samples, 0.11%)</title><rect x="69.0282%" y="69" width="0.1069%" height="15" fill="rgb(231,106,12)" fg:x="70366" fg:w="109"/><text x="69.2782%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (177 samples, 0.17%)</title><rect x="68.9978%" y="117" width="0.1736%" height="15" fill="rgb(215,92,2)" fg:x="70335" fg:w="177"/><text x="69.2478%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (177 samples, 0.17%)</title><rect x="68.9978%" y="101" width="0.1736%" height="15" fill="rgb(249,143,25)" fg:x="70335" fg:w="177"/><text x="69.2478%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (37 samples, 0.04%)</title><rect x="69.1352%" y="85" width="0.0363%" height="15" fill="rgb(252,7,35)" fg:x="70475" fg:w="37"/><text x="69.3852%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (191 samples, 0.19%)</title><rect x="68.9978%" y="149" width="0.1874%" height="15" fill="rgb(216,69,40)" fg:x="70335" fg:w="191"/><text x="69.2478%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (191 samples, 0.19%)</title><rect x="68.9978%" y="133" width="0.1874%" height="15" fill="rgb(240,36,33)" fg:x="70335" fg:w="191"/><text x="69.2478%" y="143.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="69.1715%" y="117" width="0.0137%" height="15" fill="rgb(231,128,14)" fg:x="70512" fg:w="14"/><text x="69.4215%" y="127.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="69.1715%" y="101" width="0.0137%" height="15" fill="rgb(245,143,14)" fg:x="70512" fg:w="14"/><text x="69.4215%" y="111.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="69.1715%" y="85" width="0.0137%" height="15" fill="rgb(222,130,28)" fg:x="70512" fg:w="14"/><text x="69.4215%" y="95.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="69.1715%" y="69" width="0.0137%" height="15" fill="rgb(212,10,48)" fg:x="70512" fg:w="14"/><text x="69.4215%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (207 samples, 0.20%)</title><rect x="68.9968%" y="165" width="0.2031%" height="15" fill="rgb(254,118,45)" fg:x="70334" fg:w="207"/><text x="69.2468%" y="175.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="69.1852%" y="149" width="0.0147%" height="15" fill="rgb(228,6,45)" fg:x="70526" fg:w="15"/><text x="69.4352%" y="159.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="69.1852%" y="133" width="0.0147%" height="15" fill="rgb(241,18,35)" fg:x="70526" fg:w="15"/><text x="69.4352%" y="143.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="69.1852%" y="117" width="0.0147%" height="15" fill="rgb(227,214,53)" fg:x="70526" fg:w="15"/><text x="69.4352%" y="127.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="69.1852%" y="101" width="0.0147%" height="15" fill="rgb(224,107,51)" fg:x="70526" fg:w="15"/><text x="69.4352%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (232 samples, 0.23%)</title><rect x="68.9841%" y="245" width="0.2276%" height="15" fill="rgb(248,60,28)" fg:x="70321" fg:w="232"/><text x="69.2341%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (232 samples, 0.23%)</title><rect x="68.9841%" y="229" width="0.2276%" height="15" fill="rgb(249,101,23)" fg:x="70321" fg:w="232"/><text x="69.2341%" y="239.50"></text></g><g><title>__rg_dealloc (232 samples, 0.23%)</title><rect x="68.9841%" y="213" width="0.2276%" height="15" fill="rgb(228,51,19)" fg:x="70321" fg:w="232"/><text x="69.2341%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (232 samples, 0.23%)</title><rect x="68.9841%" y="197" width="0.2276%" height="15" fill="rgb(213,20,6)" fg:x="70321" fg:w="232"/><text x="69.2341%" y="207.50"></text></g><g><title>rust_dealloc (232 samples, 0.23%)</title><rect x="68.9841%" y="181" width="0.2276%" height="15" fill="rgb(212,124,10)" fg:x="70321" fg:w="232"/><text x="69.2341%" y="191.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="69.1999%" y="165" width="0.0118%" height="15" fill="rgb(248,3,40)" fg:x="70541" fg:w="12"/><text x="69.4499%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (993 samples, 0.97%)</title><rect x="68.2405%" y="325" width="0.9741%" height="15" fill="rgb(223,178,23)" fg:x="69563" fg:w="993"/><text x="68.4905%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (264 samples, 0.26%)</title><rect x="68.9556%" y="309" width="0.2590%" height="15" fill="rgb(240,132,45)" fg:x="70292" fg:w="264"/><text x="69.2056%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (264 samples, 0.26%)</title><rect x="68.9556%" y="293" width="0.2590%" height="15" fill="rgb(245,164,36)" fg:x="70292" fg:w="264"/><text x="69.2056%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (264 samples, 0.26%)</title><rect x="68.9556%" y="277" width="0.2590%" height="15" fill="rgb(231,188,53)" fg:x="70292" fg:w="264"/><text x="69.2056%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264 samples, 0.26%)</title><rect x="68.9556%" y="261" width="0.2590%" height="15" fill="rgb(237,198,39)" fg:x="70292" fg:w="264"/><text x="69.2056%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,178 samples, 1.16%)</title><rect x="69.2146%" y="325" width="1.1556%" height="15" fill="rgb(223,120,35)" fg:x="70556" fg:w="1178"/><text x="69.4646%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,178 samples, 1.16%)</title><rect x="69.2146%" y="309" width="1.1556%" height="15" fill="rgb(253,107,49)" fg:x="70556" fg:w="1178"/><text x="69.4646%" y="319.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="70.3889%" y="293" width="0.0118%" height="15" fill="rgb(216,44,31)" fg:x="71753" fg:w="12"/><text x="70.6389%" y="303.50"></text></g><g><title>size_to_sizeclass (20 samples, 0.02%)</title><rect x="70.4006%" y="293" width="0.0196%" height="15" fill="rgb(253,87,21)" fg:x="71765" fg:w="20"/><text x="70.6506%" y="303.50"></text></g><g><title>sizeclass_to_size (12 samples, 0.01%)</title><rect x="70.4320%" y="229" width="0.0118%" height="15" fill="rgb(226,18,2)" fg:x="71797" fg:w="12"/><text x="70.6820%" y="239.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (12 samples, 0.01%)</title><rect x="70.4320%" y="213" width="0.0118%" height="15" fill="rgb(216,8,46)" fg:x="71797" fg:w="12"/><text x="70.6820%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (17 samples, 0.02%)</title><rect x="70.4762%" y="197" width="0.0167%" height="15" fill="rgb(226,140,39)" fg:x="71842" fg:w="17"/><text x="70.7262%" y="207.50"></text></g><g><title> (17 samples, 0.02%)</title><rect x="70.4762%" y="181" width="0.0167%" height="15" fill="rgb(221,194,54)" fg:x="71842" fg:w="17"/><text x="70.7262%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (59 samples, 0.06%)</title><rect x="70.4438%" y="229" width="0.0579%" height="15" fill="rgb(213,92,11)" fg:x="71809" fg:w="59"/><text x="70.6938%" y="239.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (42 samples, 0.04%)</title><rect x="70.4605%" y="213" width="0.0412%" height="15" fill="rgb(229,162,46)" fg:x="71826" fg:w="42"/><text x="70.7105%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,829 samples, 2.78%)</title><rect x="67.7343%" y="389" width="2.7752%" height="15" fill="rgb(214,111,36)" fg:x="69047" fg:w="2829"/><text x="67.9843%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,819 samples, 2.77%)</title><rect x="67.7441%" y="373" width="2.7654%" height="15" fill="rgb(207,6,21)" fg:x="69057" fg:w="2819"/><text x="67.9941%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,807 samples, 2.75%)</title><rect x="67.7559%" y="357" width="2.7536%" height="15" fill="rgb(213,127,38)" fg:x="69069" fg:w="2807"/><text x="68.0059%" y="367.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,807 samples, 2.75%)</title><rect x="67.7559%" y="341" width="2.7536%" height="15" fill="rgb(238,118,32)" fg:x="69069" fg:w="2807"/><text x="68.0059%" y="351.50">&lt;a..</text></g><g><title>rust_dealloc (142 samples, 0.14%)</title><rect x="70.3702%" y="325" width="0.1393%" height="15" fill="rgb(240,139,39)" fg:x="71734" fg:w="142"/><text x="70.6202%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (123 samples, 0.12%)</title><rect x="70.3889%" y="309" width="0.1207%" height="15" fill="rgb(235,10,37)" fg:x="71753" fg:w="123"/><text x="70.6389%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (91 samples, 0.09%)</title><rect x="70.4203%" y="293" width="0.0893%" height="15" fill="rgb(249,171,38)" fg:x="71785" fg:w="91"/><text x="70.6703%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (91 samples, 0.09%)</title><rect x="70.4203%" y="277" width="0.0893%" height="15" fill="rgb(242,144,32)" fg:x="71785" fg:w="91"/><text x="70.6703%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (91 samples, 0.09%)</title><rect x="70.4203%" y="261" width="0.0893%" height="15" fill="rgb(217,117,21)" fg:x="71785" fg:w="91"/><text x="70.6703%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (91 samples, 0.09%)</title><rect x="70.4203%" y="245" width="0.0893%" height="15" fill="rgb(249,87,1)" fg:x="71785" fg:w="91"/><text x="70.6703%" y="255.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="70.5213%" y="277" width="0.0118%" height="15" fill="rgb(248,196,48)" fg:x="71888" fg:w="12"/><text x="70.7713%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.02%)</title><rect x="70.5959%" y="165" width="0.0157%" height="15" fill="rgb(251,206,33)" fg:x="71964" fg:w="16"/><text x="70.8459%" y="175.50"></text></g><g><title> (16 samples, 0.02%)</title><rect x="70.5959%" y="149" width="0.0157%" height="15" fill="rgb(232,141,28)" fg:x="71964" fg:w="16"/><text x="70.8459%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (68 samples, 0.07%)</title><rect x="70.5566%" y="197" width="0.0667%" height="15" fill="rgb(209,167,14)" fg:x="71924" fg:w="68"/><text x="70.8066%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (47 samples, 0.05%)</title><rect x="70.5772%" y="181" width="0.0461%" height="15" fill="rgb(225,11,50)" fg:x="71945" fg:w="47"/><text x="70.8272%" y="191.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="70.6125%" y="165" width="0.0108%" height="15" fill="rgb(209,50,20)" fg:x="71981" fg:w="11"/><text x="70.8625%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (92 samples, 0.09%)</title><rect x="70.5439%" y="229" width="0.0903%" height="15" fill="rgb(212,17,46)" fg:x="71911" fg:w="92"/><text x="70.7939%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (92 samples, 0.09%)</title><rect x="70.5439%" y="213" width="0.0903%" height="15" fill="rgb(216,101,39)" fg:x="71911" fg:w="92"/><text x="70.7939%" y="223.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="70.6233%" y="197" width="0.0108%" height="15" fill="rgb(212,228,48)" fg:x="71992" fg:w="11"/><text x="70.8733%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (108 samples, 0.11%)</title><rect x="70.5439%" y="261" width="0.1059%" height="15" fill="rgb(250,6,50)" fg:x="71911" fg:w="108"/><text x="70.7939%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (108 samples, 0.11%)</title><rect x="70.5439%" y="245" width="0.1059%" height="15" fill="rgb(250,160,48)" fg:x="71911" fg:w="108"/><text x="70.7939%" y="255.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="70.6341%" y="229" width="0.0157%" height="15" fill="rgb(244,216,33)" fg:x="72003" fg:w="16"/><text x="70.8841%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (16 samples, 0.02%)</title><rect x="70.6341%" y="213" width="0.0157%" height="15" fill="rgb(207,157,5)" fg:x="72003" fg:w="16"/><text x="70.8841%" y="223.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (16 samples, 0.02%)</title><rect x="70.6341%" y="197" width="0.0157%" height="15" fill="rgb(228,199,8)" fg:x="72003" fg:w="16"/><text x="70.8841%" y="207.50"></text></g><g><title>snmalloc::bits::align_down (16 samples, 0.02%)</title><rect x="70.6341%" y="181" width="0.0157%" height="15" fill="rgb(227,80,20)" fg:x="72003" fg:w="16"/><text x="70.8841%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (121 samples, 0.12%)</title><rect x="70.5331%" y="277" width="0.1187%" height="15" fill="rgb(222,9,33)" fg:x="71900" fg:w="121"/><text x="70.7831%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (146 samples, 0.14%)</title><rect x="70.5095%" y="389" width="0.1432%" height="15" fill="rgb(239,44,28)" fg:x="71876" fg:w="146"/><text x="70.7595%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.14%)</title><rect x="70.5095%" y="373" width="0.1432%" height="15" fill="rgb(249,187,43)" fg:x="71876" fg:w="146"/><text x="70.7595%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (146 samples, 0.14%)</title><rect x="70.5095%" y="357" width="0.1432%" height="15" fill="rgb(216,141,28)" fg:x="71876" fg:w="146"/><text x="70.7595%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (134 samples, 0.13%)</title><rect x="70.5213%" y="341" width="0.1315%" height="15" fill="rgb(230,154,53)" fg:x="71888" fg:w="134"/><text x="70.7713%" y="351.50"></text></g><g><title>__rg_dealloc (134 samples, 0.13%)</title><rect x="70.5213%" y="325" width="0.1315%" height="15" fill="rgb(227,82,4)" fg:x="71888" fg:w="134"/><text x="70.7713%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (134 samples, 0.13%)</title><rect x="70.5213%" y="309" width="0.1315%" height="15" fill="rgb(220,107,16)" fg:x="71888" fg:w="134"/><text x="70.7713%" y="319.50"></text></g><g><title>rust_dealloc (134 samples, 0.13%)</title><rect x="70.5213%" y="293" width="0.1315%" height="15" fill="rgb(207,187,2)" fg:x="71888" fg:w="134"/><text x="70.7713%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (2,976 samples, 2.92%)</title><rect x="67.7343%" y="405" width="2.9194%" height="15" fill="rgb(210,162,52)" fg:x="69047" fg:w="2976"/><text x="67.9843%" y="415.50">co..</text></g><g><title>rust_dealloc (17 samples, 0.02%)</title><rect x="70.6763%" y="357" width="0.0167%" height="15" fill="rgb(217,216,49)" fg:x="72046" fg:w="17"/><text x="70.9263%" y="367.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="70.6930%" y="357" width="0.0128%" height="15" fill="rgb(218,146,49)" fg:x="72063" fg:w="13"/><text x="70.9430%" y="367.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="70.7204%" y="293" width="0.0108%" height="15" fill="rgb(216,55,40)" fg:x="72091" fg:w="11"/><text x="70.9704%" y="303.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="70.7204%" y="277" width="0.0108%" height="15" fill="rgb(208,196,21)" fg:x="72091" fg:w="11"/><text x="70.9704%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (13 samples, 0.01%)</title><rect x="70.7714%" y="261" width="0.0128%" height="15" fill="rgb(242,117,42)" fg:x="72143" fg:w="13"/><text x="71.0214%" y="271.50"></text></g><g><title> (13 samples, 0.01%)</title><rect x="70.7714%" y="245" width="0.0128%" height="15" fill="rgb(210,11,23)" fg:x="72143" fg:w="13"/><text x="71.0214%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (69 samples, 0.07%)</title><rect x="70.7312%" y="293" width="0.0677%" height="15" fill="rgb(217,110,2)" fg:x="72102" fg:w="69"/><text x="70.9812%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (57 samples, 0.06%)</title><rect x="70.7430%" y="277" width="0.0559%" height="15" fill="rgb(229,77,54)" fg:x="72114" fg:w="57"/><text x="70.9930%" y="287.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (14 samples, 0.01%)</title><rect x="70.7852%" y="261" width="0.0137%" height="15" fill="rgb(218,53,16)" fg:x="72157" fg:w="14"/><text x="71.0352%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (129 samples, 0.13%)</title><rect x="70.6753%" y="373" width="0.1265%" height="15" fill="rgb(215,38,13)" fg:x="72045" fg:w="129"/><text x="70.9253%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (98 samples, 0.10%)</title><rect x="70.7057%" y="357" width="0.0961%" height="15" fill="rgb(235,42,18)" fg:x="72076" fg:w="98"/><text x="70.9557%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (98 samples, 0.10%)</title><rect x="70.7057%" y="341" width="0.0961%" height="15" fill="rgb(219,66,54)" fg:x="72076" fg:w="98"/><text x="70.9557%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (98 samples, 0.10%)</title><rect x="70.7057%" y="325" width="0.0961%" height="15" fill="rgb(222,205,4)" fg:x="72076" fg:w="98"/><text x="70.9557%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (98 samples, 0.10%)</title><rect x="70.7057%" y="309" width="0.0961%" height="15" fill="rgb(227,213,46)" fg:x="72076" fg:w="98"/><text x="70.9557%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (3,344 samples, 3.28%)</title><rect x="67.5244%" y="437" width="3.2804%" height="15" fill="rgb(250,145,42)" fg:x="68833" fg:w="3344"/><text x="67.7744%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,130 samples, 3.07%)</title><rect x="67.7343%" y="421" width="3.0705%" height="15" fill="rgb(219,15,2)" fg:x="69047" fg:w="3130"/><text x="67.9843%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (154 samples, 0.15%)</title><rect x="70.6537%" y="405" width="0.1511%" height="15" fill="rgb(231,181,52)" fg:x="72023" fg:w="154"/><text x="70.9037%" y="415.50"></text></g><g><title>rust_dealloc (142 samples, 0.14%)</title><rect x="70.6655%" y="389" width="0.1393%" height="15" fill="rgb(235,1,42)" fg:x="72035" fg:w="142"/><text x="70.9155%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (82 samples, 0.08%)</title><rect x="70.8823%" y="373" width="0.0804%" height="15" fill="rgb(249,88,27)" fg:x="72256" fg:w="82"/><text x="71.1323%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::ge (82 samples, 0.08%)</title><rect x="70.8823%" y="357" width="0.0804%" height="15" fill="rgb(235,145,16)" fg:x="72256" fg:w="82"/><text x="71.1323%" y="367.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (80 samples, 0.08%)</title><rect x="70.8843%" y="341" width="0.0785%" height="15" fill="rgb(237,114,19)" fg:x="72258" fg:w="80"/><text x="71.1343%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (80 samples, 0.08%)</title><rect x="70.8843%" y="325" width="0.0785%" height="15" fill="rgb(238,51,50)" fg:x="72258" fg:w="80"/><text x="71.1343%" y="335.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (80 samples, 0.08%)</title><rect x="70.8843%" y="309" width="0.0785%" height="15" fill="rgb(205,194,25)" fg:x="72258" fg:w="80"/><text x="71.1343%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (41 samples, 0.04%)</title><rect x="70.9225%" y="293" width="0.0402%" height="15" fill="rgb(215,203,17)" fg:x="72297" fg:w="41"/><text x="71.1725%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (196 samples, 0.19%)</title><rect x="70.8048%" y="421" width="0.1923%" height="15" fill="rgb(233,112,49)" fg:x="72177" fg:w="196"/><text x="71.0548%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (196 samples, 0.19%)</title><rect x="70.8048%" y="405" width="0.1923%" height="15" fill="rgb(241,130,26)" fg:x="72177" fg:w="196"/><text x="71.0548%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (195 samples, 0.19%)</title><rect x="70.8058%" y="389" width="0.1913%" height="15" fill="rgb(252,223,19)" fg:x="72178" fg:w="195"/><text x="71.0558%" y="399.50"></text></g><g><title>core::time::Duration::new (35 samples, 0.03%)</title><rect x="70.9627%" y="373" width="0.0343%" height="15" fill="rgb(211,95,25)" fg:x="72338" fg:w="35"/><text x="71.2127%" y="383.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1157" width="4.1319%" height="15" fill="rgb(251,182,27)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1167.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1141" width="4.1319%" height="15" fill="rgb(238,24,4)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1151.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1125" width="4.1319%" height="15" fill="rgb(224,220,25)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1135.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1109" width="4.1319%" height="15" fill="rgb(239,133,26)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1119.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1093" width="4.1319%" height="15" fill="rgb(211,94,48)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1103.50">std::..</text></g><g><title>std::panic::catch_unwind (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1077" width="4.1319%" height="15" fill="rgb(239,87,6)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1087.50">std::..</text></g><g><title>std::panicking::try (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1061" width="4.1319%" height="15" fill="rgb(227,62,0)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1071.50">std::..</text></g><g><title>std::panicking::try::do_call (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1045" width="4.1319%" height="15" fill="rgb(211,226,4)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1055.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1029" width="4.1319%" height="15" fill="rgb(253,38,52)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1039.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="1013" width="4.1319%" height="15" fill="rgb(229,126,40)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1023.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,212 samples, 4.13%)</title><rect x="67.5244%" y="997" width="4.1319%" height="15" fill="rgb(229,165,44)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="1007.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (4,212 samples, 4.13%)</title><rect x="67.5244%" y="981" width="4.1319%" height="15" fill="rgb(247,95,47)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="991.50">core:..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,212 samples, 4.13%)</title><rect x="67.5244%" y="965" width="4.1319%" height="15" fill="rgb(216,140,30)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="975.50">async..</text></g><g><title>std::panic::catch_unwind (4,212 samples, 4.13%)</title><rect x="67.5244%" y="949" width="4.1319%" height="15" fill="rgb(246,214,8)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="959.50">std::..</text></g><g><title>std::panicking::try (4,212 samples, 4.13%)</title><rect x="67.5244%" y="933" width="4.1319%" height="15" fill="rgb(227,224,15)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="943.50">std::..</text></g><g><title>std::panicking::try::do_call (4,212 samples, 4.13%)</title><rect x="67.5244%" y="917" width="4.1319%" height="15" fill="rgb(233,175,4)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="927.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="901" width="4.1319%" height="15" fill="rgb(221,66,45)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="911.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,212 samples, 4.13%)</title><rect x="67.5244%" y="885" width="4.1319%" height="15" fill="rgb(221,178,18)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="895.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,212 samples, 4.13%)</title><rect x="67.5244%" y="869" width="4.1319%" height="15" fill="rgb(213,81,29)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="879.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="853" width="4.1319%" height="15" fill="rgb(220,89,49)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="863.50">async..</text></g><g><title>async_global_executor::reactor::block_on (4,212 samples, 4.13%)</title><rect x="67.5244%" y="837" width="4.1319%" height="15" fill="rgb(227,60,33)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="847.50">async..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="821" width="4.1319%" height="15" fill="rgb(205,113,12)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="831.50">async..</text></g><g><title>async_io::driver::block_on (4,212 samples, 4.13%)</title><rect x="67.5244%" y="805" width="4.1319%" height="15" fill="rgb(211,32,1)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="815.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="789" width="4.1319%" height="15" fill="rgb(246,2,12)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="799.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="773" width="4.1319%" height="15" fill="rgb(243,37,27)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="783.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="757" width="4.1319%" height="15" fill="rgb(248,211,31)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="767.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="741" width="4.1319%" height="15" fill="rgb(242,146,47)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="751.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="725" width="4.1319%" height="15" fill="rgb(206,70,20)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="735.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="709" width="4.1319%" height="15" fill="rgb(215,10,51)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="719.50">async..</text></g><g><title>async_task::runnable::Runnable::run (4,212 samples, 4.13%)</title><rect x="67.5244%" y="693" width="4.1319%" height="15" fill="rgb(243,178,53)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="703.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,212 samples, 4.13%)</title><rect x="67.5244%" y="677" width="4.1319%" height="15" fill="rgb(233,221,20)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="687.50">async..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="661" width="4.1319%" height="15" fill="rgb(218,95,35)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="671.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="645" width="4.1319%" height="15" fill="rgb(229,13,5)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="655.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="629" width="4.1319%" height="15" fill="rgb(252,164,30)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="639.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="613" width="4.1319%" height="15" fill="rgb(232,68,36)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="623.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,212 samples, 4.13%)</title><rect x="67.5244%" y="597" width="4.1319%" height="15" fill="rgb(219,59,54)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="607.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,212 samples, 4.13%)</title><rect x="67.5244%" y="581" width="4.1319%" height="15" fill="rgb(250,92,33)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="591.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,212 samples, 4.13%)</title><rect x="67.5244%" y="565" width="4.1319%" height="15" fill="rgb(229,162,54)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="575.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="549" width="4.1319%" height="15" fill="rgb(244,114,52)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="559.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="533" width="4.1319%" height="15" fill="rgb(212,211,43)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="543.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="517" width="4.1319%" height="15" fill="rgb(226,147,8)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="527.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="501" width="4.1319%" height="15" fill="rgb(226,23,13)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="511.50">tremo..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="485" width="4.1319%" height="15" fill="rgb(240,63,4)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="495.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,212 samples, 4.13%)</title><rect x="67.5244%" y="469" width="4.1319%" height="15" fill="rgb(221,1,32)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="479.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,212 samples, 4.13%)</title><rect x="67.5244%" y="453" width="4.1319%" height="15" fill="rgb(242,117,10)" fg:x="68833" fg:w="4212"/><text x="67.7744%" y="463.50">&lt;trem..</text></g><g><title>tremor_common::time::nanotime (868 samples, 0.85%)</title><rect x="70.8048%" y="437" width="0.8515%" height="15" fill="rgb(249,172,44)" fg:x="72177" fg:w="868"/><text x="71.0548%" y="447.50"></text></g><g><title>std::time::SystemTime::now (672 samples, 0.66%)</title><rect x="70.9971%" y="421" width="0.6592%" height="15" fill="rgb(244,46,45)" fg:x="72373" fg:w="672"/><text x="71.2471%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (672 samples, 0.66%)</title><rect x="70.9971%" y="405" width="0.6592%" height="15" fill="rgb(206,43,17)" fg:x="72373" fg:w="672"/><text x="71.2471%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::now (672 samples, 0.66%)</title><rect x="70.9971%" y="389" width="0.6592%" height="15" fill="rgb(239,218,39)" fg:x="72373" fg:w="672"/><text x="71.2471%" y="399.50"></text></g><g><title>__clock_gettime_2 (672 samples, 0.66%)</title><rect x="70.9971%" y="373" width="0.6592%" height="15" fill="rgb(208,169,54)" fg:x="72373" fg:w="672"/><text x="71.2471%" y="383.50"></text></g><g><title>__vdso_clock_gettime (672 samples, 0.66%)</title><rect x="70.9971%" y="357" width="0.6592%" height="15" fill="rgb(247,25,42)" fg:x="72373" fg:w="672"/><text x="71.2471%" y="367.50"></text></g><g><title>[[vdso]] (441 samples, 0.43%)</title><rect x="71.2237%" y="341" width="0.4326%" height="15" fill="rgb(226,23,31)" fg:x="72604" fg:w="441"/><text x="71.4737%" y="351.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (76 samples, 0.07%)</title><rect x="71.6563%" y="1157" width="0.0746%" height="15" fill="rgb(247,16,28)" fg:x="73045" fg:w="76"/><text x="71.9063%" y="1167.50"></text></g><g><title>__memmove_avx_unaligned_erms (771 samples, 0.76%)</title><rect x="71.8260%" y="581" width="0.7563%" height="15" fill="rgb(231,147,38)" fg:x="73218" fg:w="771"/><text x="72.0760%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (830 samples, 0.81%)</title><rect x="71.7799%" y="597" width="0.8142%" height="15" fill="rgb(253,81,48)" fg:x="73171" fg:w="830"/><text x="72.0299%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="72.5824%" y="581" width="0.0118%" height="15" fill="rgb(249,222,43)" fg:x="73989" fg:w="12"/><text x="72.8324%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,275 samples, 1.25%)</title><rect x="71.7446%" y="613" width="1.2508%" height="15" fill="rgb(221,3,27)" fg:x="73135" fg:w="1275"/><text x="71.9946%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (409 samples, 0.40%)</title><rect x="72.5941%" y="597" width="0.4012%" height="15" fill="rgb(228,180,5)" fg:x="74001" fg:w="409"/><text x="72.8441%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,301 samples, 1.28%)</title><rect x="71.7309%" y="645" width="1.2763%" height="15" fill="rgb(227,131,42)" fg:x="73121" fg:w="1301"/><text x="71.9809%" y="655.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,301 samples, 1.28%)</title><rect x="71.7309%" y="629" width="1.2763%" height="15" fill="rgb(212,3,39)" fg:x="73121" fg:w="1301"/><text x="71.9809%" y="639.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.01%)</title><rect x="72.9954%" y="613" width="0.0118%" height="15" fill="rgb(226,45,5)" fg:x="74410" fg:w="12"/><text x="73.2454%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.06%)</title><rect x="73.1190%" y="453" width="0.0579%" height="15" fill="rgb(215,167,45)" fg:x="74536" fg:w="59"/><text x="73.3690%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (50 samples, 0.05%)</title><rect x="73.1278%" y="437" width="0.0490%" height="15" fill="rgb(250,218,53)" fg:x="74545" fg:w="50"/><text x="73.3778%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,483 samples, 1.45%)</title><rect x="71.7309%" y="661" width="1.4548%" height="15" fill="rgb(207,140,0)" fg:x="73121" fg:w="1483"/><text x="71.9809%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (182 samples, 0.18%)</title><rect x="73.0071%" y="645" width="0.1785%" height="15" fill="rgb(238,133,51)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (182 samples, 0.18%)</title><rect x="73.0071%" y="629" width="0.1785%" height="15" fill="rgb(218,203,53)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (182 samples, 0.18%)</title><rect x="73.0071%" y="613" width="0.1785%" height="15" fill="rgb(226,184,25)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (182 samples, 0.18%)</title><rect x="73.0071%" y="597" width="0.1785%" height="15" fill="rgb(231,121,21)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (182 samples, 0.18%)</title><rect x="73.0071%" y="581" width="0.1785%" height="15" fill="rgb(251,14,34)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (182 samples, 0.18%)</title><rect x="73.0071%" y="565" width="0.1785%" height="15" fill="rgb(249,193,11)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (182 samples, 0.18%)</title><rect x="73.0071%" y="549" width="0.1785%" height="15" fill="rgb(220,172,37)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (182 samples, 0.18%)</title><rect x="73.0071%" y="533" width="0.1785%" height="15" fill="rgb(231,229,43)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (182 samples, 0.18%)</title><rect x="73.0071%" y="517" width="0.1785%" height="15" fill="rgb(250,161,5)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (182 samples, 0.18%)</title><rect x="73.0071%" y="501" width="0.1785%" height="15" fill="rgb(218,225,18)" fg:x="74422" fg:w="182"/><text x="73.2571%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (68 samples, 0.07%)</title><rect x="73.1190%" y="485" width="0.0667%" height="15" fill="rgb(245,45,42)" fg:x="74536" fg:w="68"/><text x="73.3690%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (68 samples, 0.07%)</title><rect x="73.1190%" y="469" width="0.0667%" height="15" fill="rgb(211,115,1)" fg:x="74536" fg:w="68"/><text x="73.3690%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="73.2072%" y="373" width="0.0128%" height="15" fill="rgb(248,133,52)" fg:x="74626" fg:w="13"/><text x="73.4572%" y="383.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (13 samples, 0.01%)</title><rect x="73.2072%" y="357" width="0.0128%" height="15" fill="rgb(238,100,21)" fg:x="74626" fg:w="13"/><text x="73.4572%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (273 samples, 0.27%)</title><rect x="73.1945%" y="421" width="0.2678%" height="15" fill="rgb(247,144,11)" fg:x="74613" fg:w="273"/><text x="73.4445%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (273 samples, 0.27%)</title><rect x="73.1945%" y="405" width="0.2678%" height="15" fill="rgb(206,164,16)" fg:x="74613" fg:w="273"/><text x="73.4445%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (264 samples, 0.26%)</title><rect x="73.2033%" y="389" width="0.2590%" height="15" fill="rgb(222,34,3)" fg:x="74622" fg:w="264"/><text x="73.4533%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (239 samples, 0.23%)</title><rect x="73.2278%" y="373" width="0.2345%" height="15" fill="rgb(248,82,4)" fg:x="74647" fg:w="239"/><text x="73.4778%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (239 samples, 0.23%)</title><rect x="73.2278%" y="357" width="0.2345%" height="15" fill="rgb(228,81,46)" fg:x="74647" fg:w="239"/><text x="73.4778%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (286 samples, 0.28%)</title><rect x="73.1857%" y="645" width="0.2806%" height="15" fill="rgb(227,67,47)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (286 samples, 0.28%)</title><rect x="73.1857%" y="629" width="0.2806%" height="15" fill="rgb(215,93,53)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (286 samples, 0.28%)</title><rect x="73.1857%" y="613" width="0.2806%" height="15" fill="rgb(248,194,39)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (286 samples, 0.28%)</title><rect x="73.1857%" y="597" width="0.2806%" height="15" fill="rgb(215,5,19)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="607.50"></text></g><g><title>value_trait::Builder::object (286 samples, 0.28%)</title><rect x="73.1857%" y="581" width="0.2806%" height="15" fill="rgb(226,215,51)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (286 samples, 0.28%)</title><rect x="73.1857%" y="565" width="0.2806%" height="15" fill="rgb(225,56,26)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (286 samples, 0.28%)</title><rect x="73.1857%" y="549" width="0.2806%" height="15" fill="rgb(222,75,29)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (286 samples, 0.28%)</title><rect x="73.1857%" y="533" width="0.2806%" height="15" fill="rgb(236,139,6)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (286 samples, 0.28%)</title><rect x="73.1857%" y="517" width="0.2806%" height="15" fill="rgb(223,137,36)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (286 samples, 0.28%)</title><rect x="73.1857%" y="501" width="0.2806%" height="15" fill="rgb(226,99,2)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="511.50"></text></g><g><title>alloc::alloc::alloc (286 samples, 0.28%)</title><rect x="73.1857%" y="485" width="0.2806%" height="15" fill="rgb(206,133,23)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="495.50"></text></g><g><title>__rg_alloc (286 samples, 0.28%)</title><rect x="73.1857%" y="469" width="0.2806%" height="15" fill="rgb(243,173,15)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (286 samples, 0.28%)</title><rect x="73.1857%" y="453" width="0.2806%" height="15" fill="rgb(228,69,28)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="463.50"></text></g><g><title>rust_alloc (286 samples, 0.28%)</title><rect x="73.1857%" y="437" width="0.2806%" height="15" fill="rgb(212,51,22)" fg:x="74604" fg:w="286"/><text x="73.4357%" y="447.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="73.4809%" y="469" width="0.0118%" height="15" fill="rgb(227,113,0)" fg:x="74905" fg:w="12"/><text x="73.7309%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (17 samples, 0.02%)</title><rect x="73.5035%" y="453" width="0.0167%" height="15" fill="rgb(252,84,27)" fg:x="74928" fg:w="17"/><text x="73.7535%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (17 samples, 0.02%)</title><rect x="73.5035%" y="437" width="0.0167%" height="15" fill="rgb(223,145,39)" fg:x="74928" fg:w="17"/><text x="73.7535%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (102 samples, 0.10%)</title><rect x="73.4711%" y="501" width="0.1001%" height="15" fill="rgb(239,219,30)" fg:x="74895" fg:w="102"/><text x="73.7211%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (93 samples, 0.09%)</title><rect x="73.4800%" y="485" width="0.0912%" height="15" fill="rgb(224,196,39)" fg:x="74904" fg:w="93"/><text x="73.7300%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (80 samples, 0.08%)</title><rect x="73.4927%" y="469" width="0.0785%" height="15" fill="rgb(205,35,43)" fg:x="74917" fg:w="80"/><text x="73.7427%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (52 samples, 0.05%)</title><rect x="73.5202%" y="453" width="0.0510%" height="15" fill="rgb(228,201,21)" fg:x="74945" fg:w="52"/><text x="73.7702%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (52 samples, 0.05%)</title><rect x="73.5202%" y="437" width="0.0510%" height="15" fill="rgb(237,118,16)" fg:x="74945" fg:w="52"/><text x="73.7702%" y="447.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1157" width="1.8452%" height="15" fill="rgb(241,17,19)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1167.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1141" width="1.8452%" height="15" fill="rgb(214,10,25)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1151.50">c..</text></g><g><title>async_global_executor::threading::thread_main_loop (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1125" width="1.8452%" height="15" fill="rgb(238,37,29)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1135.50">a..</text></g><g><title>std::panic::catch_unwind (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1109" width="1.8452%" height="15" fill="rgb(253,83,25)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1119.50">s..</text></g><g><title>std::panicking::try (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1093" width="1.8452%" height="15" fill="rgb(234,192,12)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1103.50">s..</text></g><g><title>std::panicking::try::do_call (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1077" width="1.8452%" height="15" fill="rgb(241,216,45)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1087.50">s..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1061" width="1.8452%" height="15" fill="rgb(242,22,33)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1071.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1045" width="1.8452%" height="15" fill="rgb(231,105,49)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1055.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1029" width="1.8452%" height="15" fill="rgb(218,204,15)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1039.50">s..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,881 samples, 1.85%)</title><rect x="71.7309%" y="1013" width="1.8452%" height="15" fill="rgb(235,138,41)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1023.50">a..</text></g><g><title>async_global_executor::reactor::block_on (1,881 samples, 1.85%)</title><rect x="71.7309%" y="997" width="1.8452%" height="15" fill="rgb(246,0,9)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="1007.50">a..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,881 samples, 1.85%)</title><rect x="71.7309%" y="981" width="1.8452%" height="15" fill="rgb(210,74,4)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="991.50">a..</text></g><g><title>async_io::driver::block_on (1,881 samples, 1.85%)</title><rect x="71.7309%" y="965" width="1.8452%" height="15" fill="rgb(250,60,41)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="975.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,881 samples, 1.85%)</title><rect x="71.7309%" y="949" width="1.8452%" height="15" fill="rgb(220,115,12)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="959.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,881 samples, 1.85%)</title><rect x="71.7309%" y="933" width="1.8452%" height="15" fill="rgb(237,100,13)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="943.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (1,881 samples, 1.85%)</title><rect x="71.7309%" y="917" width="1.8452%" height="15" fill="rgb(213,55,26)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="927.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,881 samples, 1.85%)</title><rect x="71.7309%" y="901" width="1.8452%" height="15" fill="rgb(216,17,4)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="911.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,881 samples, 1.85%)</title><rect x="71.7309%" y="885" width="1.8452%" height="15" fill="rgb(220,153,47)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="895.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,881 samples, 1.85%)</title><rect x="71.7309%" y="869" width="1.8452%" height="15" fill="rgb(215,131,9)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="879.50">a..</text></g><g><title>async_task::runnable::Runnable::run (1,881 samples, 1.85%)</title><rect x="71.7309%" y="853" width="1.8452%" height="15" fill="rgb(233,46,42)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="863.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,881 samples, 1.85%)</title><rect x="71.7309%" y="837" width="1.8452%" height="15" fill="rgb(226,86,7)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="847.50">a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,881 samples, 1.85%)</title><rect x="71.7309%" y="821" width="1.8452%" height="15" fill="rgb(239,226,21)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="831.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,881 samples, 1.85%)</title><rect x="71.7309%" y="805" width="1.8452%" height="15" fill="rgb(244,137,22)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="815.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,881 samples, 1.85%)</title><rect x="71.7309%" y="789" width="1.8452%" height="15" fill="rgb(211,139,35)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="799.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,881 samples, 1.85%)</title><rect x="71.7309%" y="773" width="1.8452%" height="15" fill="rgb(214,62,50)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="783.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,881 samples, 1.85%)</title><rect x="71.7309%" y="757" width="1.8452%" height="15" fill="rgb(212,113,44)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="767.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,881 samples, 1.85%)</title><rect x="71.7309%" y="741" width="1.8452%" height="15" fill="rgb(226,150,43)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="751.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,881 samples, 1.85%)</title><rect x="71.7309%" y="725" width="1.8452%" height="15" fill="rgb(250,71,37)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="735.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,881 samples, 1.85%)</title><rect x="71.7309%" y="709" width="1.8452%" height="15" fill="rgb(219,76,19)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="719.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,881 samples, 1.85%)</title><rect x="71.7309%" y="693" width="1.8452%" height="15" fill="rgb(250,39,11)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="703.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,881 samples, 1.85%)</title><rect x="71.7309%" y="677" width="1.8452%" height="15" fill="rgb(230,64,31)" fg:x="73121" fg:w="1881"/><text x="71.9809%" y="687.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (398 samples, 0.39%)</title><rect x="73.1857%" y="661" width="0.3904%" height="15" fill="rgb(208,222,23)" fg:x="74604" fg:w="398"/><text x="73.4357%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (112 samples, 0.11%)</title><rect x="73.4662%" y="645" width="0.1099%" height="15" fill="rgb(227,125,18)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (112 samples, 0.11%)</title><rect x="73.4662%" y="629" width="0.1099%" height="15" fill="rgb(234,210,9)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (112 samples, 0.11%)</title><rect x="73.4662%" y="613" width="0.1099%" height="15" fill="rgb(217,127,24)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 0.11%)</title><rect x="73.4662%" y="597" width="0.1099%" height="15" fill="rgb(239,141,48)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 0.11%)</title><rect x="73.4662%" y="581" width="0.1099%" height="15" fill="rgb(227,109,8)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="591.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.11%)</title><rect x="73.4662%" y="565" width="0.1099%" height="15" fill="rgb(235,184,23)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="575.50"></text></g><g><title>__rg_alloc (112 samples, 0.11%)</title><rect x="73.4662%" y="549" width="0.1099%" height="15" fill="rgb(227,226,48)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.11%)</title><rect x="73.4662%" y="533" width="0.1099%" height="15" fill="rgb(206,150,11)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="543.50"></text></g><g><title>rust_alloc (112 samples, 0.11%)</title><rect x="73.4662%" y="517" width="0.1099%" height="15" fill="rgb(254,2,33)" fg:x="74890" fg:w="112"/><text x="73.7162%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.01%)</title><rect x="73.7674%" y="901" width="0.0137%" height="15" fill="rgb(243,160,20)" fg:x="75197" fg:w="14"/><text x="74.0174%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.01%)</title><rect x="73.7674%" y="885" width="0.0137%" height="15" fill="rgb(218,208,30)" fg:x="75197" fg:w="14"/><text x="74.0174%" y="895.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="73.7674%" y="933" width="0.0167%" height="15" fill="rgb(224,120,49)" fg:x="75197" fg:w="17"/><text x="74.0174%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (17 samples, 0.02%)</title><rect x="73.7674%" y="917" width="0.0167%" height="15" fill="rgb(246,12,2)" fg:x="75197" fg:w="17"/><text x="74.0174%" y="927.50"></text></g><g><title>core::mem::drop (13 samples, 0.01%)</title><rect x="73.7880%" y="933" width="0.0128%" height="15" fill="rgb(236,117,3)" fg:x="75218" fg:w="13"/><text x="74.0380%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (13 samples, 0.01%)</title><rect x="73.7880%" y="917" width="0.0128%" height="15" fill="rgb(216,128,52)" fg:x="75218" fg:w="13"/><text x="74.0380%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (13 samples, 0.01%)</title><rect x="73.7880%" y="901" width="0.0128%" height="15" fill="rgb(246,145,19)" fg:x="75218" fg:w="13"/><text x="74.0380%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="73.7880%" y="885" width="0.0128%" height="15" fill="rgb(222,11,46)" fg:x="75218" fg:w="13"/><text x="74.0380%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="73.7880%" y="869" width="0.0128%" height="15" fill="rgb(245,82,36)" fg:x="75218" fg:w="13"/><text x="74.0380%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (13 samples, 0.01%)</title><rect x="73.7880%" y="853" width="0.0128%" height="15" fill="rgb(250,73,51)" fg:x="75218" fg:w="13"/><text x="74.0380%" y="863.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="73.7880%" y="837" width="0.0128%" height="15" fill="rgb(221,189,23)" fg:x="75218" fg:w="13"/><text x="74.0380%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.02%)</title><rect x="73.8007%" y="933" width="0.0177%" height="15" fill="rgb(210,33,7)" fg:x="75231" fg:w="18"/><text x="74.0507%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (17 samples, 0.02%)</title><rect x="73.8017%" y="917" width="0.0167%" height="15" fill="rgb(210,107,22)" fg:x="75232" fg:w="17"/><text x="74.0517%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="73.8017%" y="901" width="0.0167%" height="15" fill="rgb(222,116,37)" fg:x="75232" fg:w="17"/><text x="74.0517%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.02%)</title><rect x="73.8017%" y="885" width="0.0167%" height="15" fill="rgb(254,17,48)" fg:x="75232" fg:w="17"/><text x="74.0517%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.02%)</title><rect x="73.8027%" y="869" width="0.0157%" height="15" fill="rgb(224,36,32)" fg:x="75233" fg:w="16"/><text x="74.0527%" y="879.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (16 samples, 0.02%)</title><rect x="73.8027%" y="853" width="0.0157%" height="15" fill="rgb(232,90,46)" fg:x="75233" fg:w="16"/><text x="74.0527%" y="863.50"></text></g><g><title>event_listener::Inner::lock (98 samples, 0.10%)</title><rect x="73.8184%" y="933" width="0.0961%" height="15" fill="rgb(241,66,40)" fg:x="75249" fg:w="98"/><text x="74.0684%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (98 samples, 0.10%)</title><rect x="73.8184%" y="917" width="0.0961%" height="15" fill="rgb(249,184,29)" fg:x="75249" fg:w="98"/><text x="74.0684%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (93 samples, 0.09%)</title><rect x="73.8233%" y="901" width="0.0912%" height="15" fill="rgb(231,181,1)" fg:x="75254" fg:w="93"/><text x="74.0733%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (88 samples, 0.09%)</title><rect x="73.8282%" y="885" width="0.0863%" height="15" fill="rgb(224,94,2)" fg:x="75259" fg:w="88"/><text x="74.0782%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (88 samples, 0.09%)</title><rect x="73.8282%" y="869" width="0.0863%" height="15" fill="rgb(229,170,15)" fg:x="75259" fg:w="88"/><text x="74.0782%" y="879.50"></text></g><g><title>__lll_lock_wait (29 samples, 0.03%)</title><rect x="73.8861%" y="853" width="0.0284%" height="15" fill="rgb(240,127,35)" fg:x="75318" fg:w="29"/><text x="74.1361%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (175 samples, 0.17%)</title><rect x="73.7605%" y="949" width="0.1717%" height="15" fill="rgb(248,196,34)" fg:x="75190" fg:w="175"/><text x="74.0105%" y="959.50"></text></g><g><title>event_listener::List::remove (18 samples, 0.02%)</title><rect x="73.9145%" y="933" width="0.0177%" height="15" fill="rgb(236,137,7)" fg:x="75347" fg:w="18"/><text x="74.1645%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.01%)</title><rect x="73.9185%" y="917" width="0.0137%" height="15" fill="rgb(235,127,16)" fg:x="75351" fg:w="14"/><text x="74.1685%" y="927.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="73.9185%" y="901" width="0.0137%" height="15" fill="rgb(250,192,54)" fg:x="75351" fg:w="14"/><text x="74.1685%" y="911.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="73.9185%" y="885" width="0.0137%" height="15" fill="rgb(218,98,20)" fg:x="75351" fg:w="14"/><text x="74.1685%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (85 samples, 0.08%)</title><rect x="73.9548%" y="933" width="0.0834%" height="15" fill="rgb(230,176,47)" fg:x="75388" fg:w="85"/><text x="74.2048%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (39 samples, 0.04%)</title><rect x="74.1823%" y="917" width="0.0383%" height="15" fill="rgb(244,2,33)" fg:x="75620" fg:w="39"/><text x="74.4323%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (37 samples, 0.04%)</title><rect x="74.1843%" y="901" width="0.0363%" height="15" fill="rgb(231,100,17)" fg:x="75622" fg:w="37"/><text x="74.4343%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.04%)</title><rect x="74.1843%" y="885" width="0.0363%" height="15" fill="rgb(245,23,12)" fg:x="75622" fg:w="37"/><text x="74.4343%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.04%)</title><rect x="74.1843%" y="869" width="0.0363%" height="15" fill="rgb(249,55,22)" fg:x="75622" fg:w="37"/><text x="74.4343%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (238 samples, 0.23%)</title><rect x="74.2245%" y="917" width="0.2335%" height="15" fill="rgb(207,134,9)" fg:x="75663" fg:w="238"/><text x="74.4745%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (238 samples, 0.23%)</title><rect x="74.2245%" y="901" width="0.2335%" height="15" fill="rgb(218,134,0)" fg:x="75663" fg:w="238"/><text x="74.4745%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (578 samples, 0.57%)</title><rect x="74.4580%" y="917" width="0.5670%" height="15" fill="rgb(213,212,33)" fg:x="75901" fg:w="578"/><text x="74.7080%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (573 samples, 0.56%)</title><rect x="74.4629%" y="901" width="0.5621%" height="15" fill="rgb(252,106,18)" fg:x="75906" fg:w="573"/><text x="74.7129%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,025 samples, 1.01%)</title><rect x="74.0381%" y="933" width="1.0055%" height="15" fill="rgb(208,126,42)" fg:x="75473" fg:w="1025"/><text x="74.2881%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (19 samples, 0.02%)</title><rect x="75.0250%" y="917" width="0.0186%" height="15" fill="rgb(246,175,29)" fg:x="76479" fg:w="19"/><text x="75.2750%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_store (19 samples, 0.02%)</title><rect x="75.0250%" y="901" width="0.0186%" height="15" fill="rgb(215,13,50)" fg:x="76479" fg:w="19"/><text x="75.2750%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="75.0544%" y="917" width="0.0147%" height="15" fill="rgb(216,172,15)" fg:x="76509" fg:w="15"/><text x="75.3044%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="75.0544%" y="901" width="0.0147%" height="15" fill="rgb(212,103,13)" fg:x="76509" fg:w="15"/><text x="75.3044%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="75.0544%" y="885" width="0.0147%" height="15" fill="rgb(231,171,36)" fg:x="76509" fg:w="15"/><text x="75.3044%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="75.0544%" y="869" width="0.0147%" height="15" fill="rgb(250,123,20)" fg:x="76509" fg:w="15"/><text x="75.3044%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="75.0544%" y="853" width="0.0147%" height="15" fill="rgb(212,53,50)" fg:x="76509" fg:w="15"/><text x="75.3044%" y="863.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (15 samples, 0.01%)</title><rect x="75.0544%" y="837" width="0.0147%" height="15" fill="rgb(243,54,12)" fg:x="76509" fg:w="15"/><text x="75.3044%" y="847.50"></text></g><g><title>event_listener::Inner::lock (23 samples, 0.02%)</title><rect x="75.0780%" y="917" width="0.0226%" height="15" fill="rgb(234,101,34)" fg:x="76533" fg:w="23"/><text x="75.3280%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="75.0780%" y="901" width="0.0226%" height="15" fill="rgb(254,67,22)" fg:x="76533" fg:w="23"/><text x="75.3280%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="75.0800%" y="885" width="0.0206%" height="15" fill="rgb(250,35,47)" fg:x="76535" fg:w="21"/><text x="75.3300%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="75.0819%" y="869" width="0.0186%" height="15" fill="rgb(226,126,38)" fg:x="76537" fg:w="19"/><text x="75.3319%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="75.0819%" y="853" width="0.0186%" height="15" fill="rgb(216,138,53)" fg:x="76537" fg:w="19"/><text x="75.3319%" y="863.50"></text></g><g><title>parking::Unparker::unpark (11 samples, 0.01%)</title><rect x="75.1153%" y="773" width="0.0108%" height="15" fill="rgb(246,199,43)" fg:x="76571" fg:w="11"/><text x="75.3653%" y="783.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (19 samples, 0.02%)</title><rect x="75.1094%" y="789" width="0.0186%" height="15" fill="rgb(232,125,11)" fg:x="76565" fg:w="19"/><text x="75.3594%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (21 samples, 0.02%)</title><rect x="75.1094%" y="821" width="0.0206%" height="15" fill="rgb(218,219,45)" fg:x="76565" fg:w="21"/><text x="75.3594%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (21 samples, 0.02%)</title><rect x="75.1094%" y="805" width="0.0206%" height="15" fill="rgb(216,102,54)" fg:x="76565" fg:w="21"/><text x="75.3594%" y="815.50"></text></g><g><title>async_executor::State::notify (28 samples, 0.03%)</title><rect x="75.1055%" y="837" width="0.0275%" height="15" fill="rgb(250,228,7)" fg:x="76561" fg:w="28"/><text x="75.3555%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (37 samples, 0.04%)</title><rect x="75.1055%" y="853" width="0.0363%" height="15" fill="rgb(226,125,25)" fg:x="76561" fg:w="37"/><text x="75.3555%" y="863.50"></text></g><g><title>event_listener::List::notify (51 samples, 0.05%)</title><rect x="75.1006%" y="917" width="0.0500%" height="15" fill="rgb(224,165,27)" fg:x="76556" fg:w="51"/><text x="75.3506%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (49 samples, 0.05%)</title><rect x="75.1025%" y="901" width="0.0481%" height="15" fill="rgb(233,86,3)" fg:x="76558" fg:w="49"/><text x="75.3525%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (49 samples, 0.05%)</title><rect x="75.1025%" y="885" width="0.0481%" height="15" fill="rgb(228,116,20)" fg:x="76558" fg:w="49"/><text x="75.3525%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (46 samples, 0.05%)</title><rect x="75.1055%" y="869" width="0.0451%" height="15" fill="rgb(209,192,17)" fg:x="76561" fg:w="46"/><text x="75.3555%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,045 samples, 2.01%)</title><rect x="73.9322%" y="949" width="2.0061%" height="15" fill="rgb(224,88,34)" fg:x="75365" fg:w="2045"/><text x="74.1822%" y="959.50">a..</text></g><g><title>event_listener::Event::notify (912 samples, 0.89%)</title><rect x="75.0437%" y="933" width="0.8947%" height="15" fill="rgb(233,38,6)" fg:x="76498" fg:w="912"/><text x="75.2937%" y="943.50"></text></g><g><title>event_listener::full_fence (803 samples, 0.79%)</title><rect x="75.1506%" y="917" width="0.7877%" height="15" fill="rgb(212,59,30)" fg:x="76607" fg:w="803"/><text x="75.4006%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (803 samples, 0.79%)</title><rect x="75.1506%" y="901" width="0.7877%" height="15" fill="rgb(213,80,3)" fg:x="76607" fg:w="803"/><text x="75.4006%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (803 samples, 0.79%)</title><rect x="75.1506%" y="885" width="0.7877%" height="15" fill="rgb(251,178,7)" fg:x="76607" fg:w="803"/><text x="75.4006%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (803 samples, 0.79%)</title><rect x="75.1506%" y="869" width="0.7877%" height="15" fill="rgb(213,154,26)" fg:x="76607" fg:w="803"/><text x="75.4006%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (33 samples, 0.03%)</title><rect x="75.9570%" y="901" width="0.0324%" height="15" fill="rgb(238,165,49)" fg:x="77429" fg:w="33"/><text x="76.2070%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (33 samples, 0.03%)</title><rect x="75.9570%" y="885" width="0.0324%" height="15" fill="rgb(248,91,46)" fg:x="77429" fg:w="33"/><text x="76.2070%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="75.9570%" y="869" width="0.0324%" height="15" fill="rgb(244,21,52)" fg:x="77429" fg:w="33"/><text x="76.2070%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.03%)</title><rect x="75.9589%" y="853" width="0.0304%" height="15" fill="rgb(247,122,20)" fg:x="77431" fg:w="31"/><text x="76.2089%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (30 samples, 0.03%)</title><rect x="75.9599%" y="837" width="0.0294%" height="15" fill="rgb(218,27,9)" fg:x="77432" fg:w="30"/><text x="76.2099%" y="847.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (29 samples, 0.03%)</title><rect x="75.9609%" y="821" width="0.0284%" height="15" fill="rgb(246,7,6)" fg:x="77433" fg:w="29"/><text x="76.2109%" y="831.50"></text></g><g><title>event_listener::Inner::lock (57 samples, 0.06%)</title><rect x="75.9893%" y="901" width="0.0559%" height="15" fill="rgb(227,135,54)" fg:x="77462" fg:w="57"/><text x="76.2393%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (57 samples, 0.06%)</title><rect x="75.9893%" y="885" width="0.0559%" height="15" fill="rgb(247,14,11)" fg:x="77462" fg:w="57"/><text x="76.2393%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (50 samples, 0.05%)</title><rect x="75.9962%" y="869" width="0.0490%" height="15" fill="rgb(206,149,34)" fg:x="77469" fg:w="50"/><text x="76.2462%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (42 samples, 0.04%)</title><rect x="76.0040%" y="853" width="0.0412%" height="15" fill="rgb(227,228,4)" fg:x="77477" fg:w="42"/><text x="76.2540%" y="863.50"></text></g><g><title>__GI___pthread_mutex_lock (42 samples, 0.04%)</title><rect x="76.0040%" y="837" width="0.0412%" height="15" fill="rgb(238,218,28)" fg:x="77477" fg:w="42"/><text x="76.2540%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (95 samples, 0.09%)</title><rect x="75.9570%" y="917" width="0.0932%" height="15" fill="rgb(252,86,40)" fg:x="77429" fg:w="95"/><text x="76.2070%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (133 samples, 0.13%)</title><rect x="75.9422%" y="949" width="0.1305%" height="15" fill="rgb(251,225,11)" fg:x="77414" fg:w="133"/><text x="76.1922%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (118 samples, 0.12%)</title><rect x="75.9570%" y="933" width="0.1158%" height="15" fill="rgb(206,46,49)" fg:x="77429" fg:w="118"/><text x="76.2070%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (23 samples, 0.02%)</title><rect x="76.0501%" y="917" width="0.0226%" height="15" fill="rgb(245,128,24)" fg:x="77524" fg:w="23"/><text x="76.3001%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="76.0501%" y="901" width="0.0226%" height="15" fill="rgb(219,177,34)" fg:x="77524" fg:w="23"/><text x="76.3001%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="76.0501%" y="885" width="0.0226%" height="15" fill="rgb(218,60,48)" fg:x="77524" fg:w="23"/><text x="76.3001%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="76.0501%" y="869" width="0.0226%" height="15" fill="rgb(221,11,5)" fg:x="77524" fg:w="23"/><text x="76.3001%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="76.0747%" y="933" width="0.0314%" height="15" fill="rgb(220,148,13)" fg:x="77549" fg:w="32"/><text x="76.3247%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.03%)</title><rect x="76.0747%" y="917" width="0.0314%" height="15" fill="rgb(210,16,3)" fg:x="77549" fg:w="32"/><text x="76.3247%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.03%)</title><rect x="76.0747%" y="901" width="0.0314%" height="15" fill="rgb(236,80,2)" fg:x="77549" fg:w="32"/><text x="76.3247%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (35 samples, 0.03%)</title><rect x="76.1061%" y="933" width="0.0343%" height="15" fill="rgb(239,129,19)" fg:x="77581" fg:w="35"/><text x="76.3561%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.03%)</title><rect x="76.1061%" y="917" width="0.0343%" height="15" fill="rgb(220,106,35)" fg:x="77581" fg:w="35"/><text x="76.3561%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="76.1061%" y="901" width="0.0343%" height="15" fill="rgb(252,139,45)" fg:x="77581" fg:w="35"/><text x="76.3561%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (35 samples, 0.03%)</title><rect x="76.1061%" y="885" width="0.0343%" height="15" fill="rgb(229,8,36)" fg:x="77581" fg:w="35"/><text x="76.3561%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (35 samples, 0.03%)</title><rect x="76.1061%" y="869" width="0.0343%" height="15" fill="rgb(230,126,33)" fg:x="77581" fg:w="35"/><text x="76.3561%" y="879.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="76.1061%" y="853" width="0.0343%" height="15" fill="rgb(239,140,21)" fg:x="77581" fg:w="35"/><text x="76.3561%" y="863.50"></text></g><g><title>event_listener::Inner::lock (32 samples, 0.03%)</title><rect x="76.1404%" y="933" width="0.0314%" height="15" fill="rgb(254,104,9)" fg:x="77616" fg:w="32"/><text x="76.3904%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="76.1404%" y="917" width="0.0314%" height="15" fill="rgb(239,52,14)" fg:x="77616" fg:w="32"/><text x="76.3904%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="76.1404%" y="901" width="0.0314%" height="15" fill="rgb(208,227,44)" fg:x="77616" fg:w="32"/><text x="76.3904%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (32 samples, 0.03%)</title><rect x="76.1404%" y="885" width="0.0314%" height="15" fill="rgb(246,18,19)" fg:x="77616" fg:w="32"/><text x="76.3904%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (32 samples, 0.03%)</title><rect x="76.1404%" y="869" width="0.0314%" height="15" fill="rgb(235,228,25)" fg:x="77616" fg:w="32"/><text x="76.3904%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,515 samples, 2.47%)</title><rect x="73.7144%" y="965" width="2.4672%" height="15" fill="rgb(240,156,20)" fg:x="75143" fg:w="2515"/><text x="73.9644%" y="975.50">&lt;a..</text></g><g><title>event_listener::Event::listen (111 samples, 0.11%)</title><rect x="76.0727%" y="949" width="0.1089%" height="15" fill="rgb(224,8,20)" fg:x="77547" fg:w="111"/><text x="76.3227%" y="959.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="76.1816%" y="965" width="0.0128%" height="15" fill="rgb(214,12,52)" fg:x="77658" fg:w="13"/><text x="76.4316%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (744 samples, 0.73%)</title><rect x="76.1944%" y="965" width="0.7299%" height="15" fill="rgb(211,220,47)" fg:x="77671" fg:w="744"/><text x="76.4444%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (264 samples, 0.26%)</title><rect x="76.9340%" y="949" width="0.2590%" height="15" fill="rgb(250,173,5)" fg:x="78425" fg:w="264"/><text x="77.1840%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (619 samples, 0.61%)</title><rect x="77.2107%" y="917" width="0.6072%" height="15" fill="rgb(250,125,52)" fg:x="78707" fg:w="619"/><text x="77.4607%" y="927.50"></text></g><g><title>rust_dealloc (26 samples, 0.03%)</title><rect x="77.8542%" y="741" width="0.0255%" height="15" fill="rgb(209,133,18)" fg:x="79363" fg:w="26"/><text x="78.1042%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="77.9582%" y="709" width="0.0177%" height="15" fill="rgb(216,173,22)" fg:x="79469" fg:w="18"/><text x="78.2082%" y="719.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="77.9582%" y="693" width="0.0177%" height="15" fill="rgb(205,3,22)" fg:x="79469" fg:w="18"/><text x="78.2082%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (104 samples, 0.10%)</title><rect x="77.8856%" y="741" width="0.1020%" height="15" fill="rgb(248,22,20)" fg:x="79395" fg:w="104"/><text x="78.1356%" y="751.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (85 samples, 0.08%)</title><rect x="77.9042%" y="725" width="0.0834%" height="15" fill="rgb(233,6,29)" fg:x="79414" fg:w="85"/><text x="78.1542%" y="735.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="77.9758%" y="709" width="0.0118%" height="15" fill="rgb(240,22,54)" fg:x="79487" fg:w="12"/><text x="78.2258%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (155 samples, 0.15%)</title><rect x="77.8532%" y="773" width="0.1521%" height="15" fill="rgb(231,133,32)" fg:x="79362" fg:w="155"/><text x="78.1032%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (155 samples, 0.15%)</title><rect x="77.8532%" y="757" width="0.1521%" height="15" fill="rgb(248,193,4)" fg:x="79362" fg:w="155"/><text x="78.1032%" y="767.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (18 samples, 0.02%)</title><rect x="77.9876%" y="741" width="0.0177%" height="15" fill="rgb(211,178,46)" fg:x="79499" fg:w="18"/><text x="78.2376%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (169 samples, 0.17%)</title><rect x="77.8532%" y="805" width="0.1658%" height="15" fill="rgb(224,5,42)" fg:x="79362" fg:w="169"/><text x="78.1032%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (169 samples, 0.17%)</title><rect x="77.8532%" y="789" width="0.1658%" height="15" fill="rgb(239,176,25)" fg:x="79362" fg:w="169"/><text x="78.1032%" y="799.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="78.0053%" y="773" width="0.0137%" height="15" fill="rgb(245,187,50)" fg:x="79517" fg:w="14"/><text x="78.2553%" y="783.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="78.0053%" y="757" width="0.0137%" height="15" fill="rgb(248,24,15)" fg:x="79517" fg:w="14"/><text x="78.2553%" y="767.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="78.0053%" y="741" width="0.0137%" height="15" fill="rgb(205,166,13)" fg:x="79517" fg:w="14"/><text x="78.2553%" y="751.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="78.0053%" y="725" width="0.0137%" height="15" fill="rgb(208,114,23)" fg:x="79517" fg:w="14"/><text x="78.2553%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (191 samples, 0.19%)</title><rect x="77.8365%" y="821" width="0.1874%" height="15" fill="rgb(239,127,18)" fg:x="79345" fg:w="191"/><text x="78.0865%" y="831.50"></text></g><g><title>rust_dealloc (210 samples, 0.21%)</title><rect x="77.8238%" y="837" width="0.2060%" height="15" fill="rgb(219,154,28)" fg:x="79332" fg:w="210"/><text x="78.0738%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,446 samples, 4.36%)</title><rect x="73.6713%" y="981" width="4.3615%" height="15" fill="rgb(225,157,23)" fg:x="75099" fg:w="4446"/><text x="73.9213%" y="991.50">&lt;asyn..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,130 samples, 1.11%)</title><rect x="76.9242%" y="965" width="1.1085%" height="15" fill="rgb(219,8,6)" fg:x="78415" fg:w="1130"/><text x="77.1742%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (856 samples, 0.84%)</title><rect x="77.1930%" y="949" width="0.8397%" height="15" fill="rgb(212,47,6)" fg:x="78689" fg:w="856"/><text x="77.4430%" y="959.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (856 samples, 0.84%)</title><rect x="77.1930%" y="933" width="0.8397%" height="15" fill="rgb(224,190,4)" fg:x="78689" fg:w="856"/><text x="77.4430%" y="943.50"></text></g><g><title>alloc::alloc::box_free (219 samples, 0.21%)</title><rect x="77.8179%" y="917" width="0.2148%" height="15" fill="rgb(239,183,29)" fg:x="79326" fg:w="219"/><text x="78.0679%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (219 samples, 0.21%)</title><rect x="77.8179%" y="901" width="0.2148%" height="15" fill="rgb(213,57,7)" fg:x="79326" fg:w="219"/><text x="78.0679%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (219 samples, 0.21%)</title><rect x="77.8179%" y="885" width="0.2148%" height="15" fill="rgb(216,148,1)" fg:x="79326" fg:w="219"/><text x="78.0679%" y="895.50"></text></g><g><title>__rg_dealloc (219 samples, 0.21%)</title><rect x="77.8179%" y="869" width="0.2148%" height="15" fill="rgb(236,182,29)" fg:x="79326" fg:w="219"/><text x="78.0679%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (219 samples, 0.21%)</title><rect x="77.8179%" y="853" width="0.2148%" height="15" fill="rgb(244,120,48)" fg:x="79326" fg:w="219"/><text x="78.0679%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,899 samples, 4.81%)</title><rect x="73.6163%" y="997" width="4.8059%" height="15" fill="rgb(206,71,34)" fg:x="75043" fg:w="4899"/><text x="73.8663%" y="1007.50">&lt;async..</text></g><g><title>__memmove_avx_unaligned_erms (397 samples, 0.39%)</title><rect x="78.0327%" y="981" width="0.3895%" height="15" fill="rgb(242,32,6)" fg:x="79545" fg:w="397"/><text x="78.2827%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1157" width="5.2591%" height="15" fill="rgb(241,35,3)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1167.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1141" width="5.2591%" height="15" fill="rgb(222,62,19)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1151.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1125" width="5.2591%" height="15" fill="rgb(223,110,41)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1135.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1109" width="5.2591%" height="15" fill="rgb(208,224,4)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1119.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1093" width="5.2591%" height="15" fill="rgb(241,137,19)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1103.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1077" width="5.2591%" height="15" fill="rgb(244,24,17)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1087.50">tremor..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1061" width="5.2591%" height="15" fill="rgb(245,178,49)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1071.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1045" width="5.2591%" height="15" fill="rgb(219,160,38)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1055.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1029" width="5.2591%" height="15" fill="rgb(228,137,14)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1039.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,361 samples, 5.26%)</title><rect x="73.5761%" y="1013" width="5.2591%" height="15" fill="rgb(237,134,11)" fg:x="75002" fg:w="5361"/><text x="73.8261%" y="1023.50">&lt;tremo..</text></g><g><title>__memmove_avx_unaligned_erms (421 samples, 0.41%)</title><rect x="78.4222%" y="997" width="0.4130%" height="15" fill="rgb(211,126,44)" fg:x="79942" fg:w="421"/><text x="78.6722%" y="1007.50"></text></g><g><title>tremor_common::time::nanotime (32 samples, 0.03%)</title><rect x="78.8352%" y="1157" width="0.0314%" height="15" fill="rgb(226,171,33)" fg:x="80363" fg:w="32"/><text x="79.0852%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (29 samples, 0.03%)</title><rect x="78.8381%" y="1141" width="0.0284%" height="15" fill="rgb(253,99,13)" fg:x="80366" fg:w="29"/><text x="79.0881%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (29 samples, 0.03%)</title><rect x="78.8381%" y="1125" width="0.0284%" height="15" fill="rgb(244,48,7)" fg:x="80366" fg:w="29"/><text x="79.0881%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (29 samples, 0.03%)</title><rect x="78.8381%" y="1109" width="0.0284%" height="15" fill="rgb(244,217,54)" fg:x="80366" fg:w="29"/><text x="79.0881%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (63 samples, 0.06%)</title><rect x="78.8666%" y="1157" width="0.0618%" height="15" fill="rgb(224,15,18)" fg:x="80395" fg:w="63"/><text x="79.1166%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (11 samples, 0.01%)</title><rect x="78.9284%" y="1157" width="0.0108%" height="15" fill="rgb(244,99,12)" fg:x="80458" fg:w="11"/><text x="79.1784%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="78.9284%" y="1141" width="0.0108%" height="15" fill="rgb(233,226,8)" fg:x="80458" fg:w="11"/><text x="79.1784%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (11 samples, 0.01%)</title><rect x="78.9284%" y="1125" width="0.0108%" height="15" fill="rgb(229,211,3)" fg:x="80458" fg:w="11"/><text x="79.1784%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (11 samples, 0.01%)</title><rect x="78.9392%" y="1157" width="0.0108%" height="15" fill="rgb(216,140,21)" fg:x="80469" fg:w="11"/><text x="79.1892%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="79.0314%" y="1045" width="0.0265%" height="15" fill="rgb(234,122,30)" fg:x="80563" fg:w="27"/><text x="79.2814%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="79.0314%" y="1029" width="0.0265%" height="15" fill="rgb(236,25,46)" fg:x="80563" fg:w="27"/><text x="79.2814%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.03%)</title><rect x="79.0314%" y="1013" width="0.0265%" height="15" fill="rgb(217,52,54)" fg:x="80563" fg:w="27"/><text x="79.2814%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.03%)</title><rect x="79.0314%" y="997" width="0.0265%" height="15" fill="rgb(222,29,26)" fg:x="80563" fg:w="27"/><text x="79.2814%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.03%)</title><rect x="79.0314%" y="981" width="0.0265%" height="15" fill="rgb(216,177,29)" fg:x="80563" fg:w="27"/><text x="79.2814%" y="991.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.03%)</title><rect x="79.0314%" y="965" width="0.0265%" height="15" fill="rgb(247,136,51)" fg:x="80563" fg:w="27"/><text x="79.2814%" y="975.50"></text></g><g><title>__rg_alloc (27 samples, 0.03%)</title><rect x="79.0314%" y="949" width="0.0265%" height="15" fill="rgb(231,47,47)" fg:x="80563" fg:w="27"/><text x="79.2814%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (27 samples, 0.03%)</title><rect x="79.0314%" y="933" width="0.0265%" height="15" fill="rgb(211,192,36)" fg:x="80563" fg:w="27"/><text x="79.2814%" y="943.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (64 samples, 0.06%)</title><rect x="79.0235%" y="1141" width="0.0628%" height="15" fill="rgb(229,156,32)" fg:x="80555" fg:w="64"/><text x="79.2735%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="79.0314%" y="1125" width="0.0549%" height="15" fill="rgb(248,213,20)" fg:x="80563" fg:w="56"/><text x="79.2814%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="79.0314%" y="1109" width="0.0549%" height="15" fill="rgb(217,64,7)" fg:x="80563" fg:w="56"/><text x="79.2814%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (56 samples, 0.05%)</title><rect x="79.0314%" y="1093" width="0.0549%" height="15" fill="rgb(232,142,8)" fg:x="80563" fg:w="56"/><text x="79.2814%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (56 samples, 0.05%)</title><rect x="79.0314%" y="1077" width="0.0549%" height="15" fill="rgb(224,92,44)" fg:x="80563" fg:w="56"/><text x="79.2814%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (56 samples, 0.05%)</title><rect x="79.0314%" y="1061" width="0.0549%" height="15" fill="rgb(214,169,17)" fg:x="80563" fg:w="56"/><text x="79.2814%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (29 samples, 0.03%)</title><rect x="79.0579%" y="1045" width="0.0284%" height="15" fill="rgb(210,59,37)" fg:x="80590" fg:w="29"/><text x="79.3079%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.03%)</title><rect x="79.0579%" y="1029" width="0.0284%" height="15" fill="rgb(214,116,48)" fg:x="80590" fg:w="29"/><text x="79.3079%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.02%)</title><rect x="79.0863%" y="1141" width="0.0157%" height="15" fill="rgb(244,191,6)" fg:x="80619" fg:w="16"/><text x="79.3363%" y="1151.50"></text></g><g><title>core::ptr::write (16 samples, 0.02%)</title><rect x="79.0863%" y="1125" width="0.0157%" height="15" fill="rgb(241,50,52)" fg:x="80619" fg:w="16"/><text x="79.3363%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (171 samples, 0.17%)</title><rect x="78.9539%" y="1157" width="0.1677%" height="15" fill="rgb(236,75,39)" fg:x="80484" fg:w="171"/><text x="79.2039%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="79.1099%" y="1141" width="0.0118%" height="15" fill="rgb(236,99,0)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="79.1099%" y="1125" width="0.0118%" height="15" fill="rgb(207,202,15)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (12 samples, 0.01%)</title><rect x="79.1099%" y="1109" width="0.0118%" height="15" fill="rgb(233,207,14)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1119.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="79.1099%" y="1093" width="0.0118%" height="15" fill="rgb(226,27,51)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="79.1099%" y="1077" width="0.0118%" height="15" fill="rgb(206,104,42)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="79.1099%" y="1061" width="0.0118%" height="15" fill="rgb(212,225,4)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="79.1099%" y="1045" width="0.0118%" height="15" fill="rgb(233,96,42)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="79.1099%" y="1029" width="0.0118%" height="15" fill="rgb(229,21,32)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1039.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="79.1099%" y="1013" width="0.0118%" height="15" fill="rgb(226,216,24)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="79.1099%" y="997" width="0.0118%" height="15" fill="rgb(221,163,17)" fg:x="80643" fg:w="12"/><text x="79.3599%" y="1007.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (24 samples, 0.02%)</title><rect x="79.1216%" y="1157" width="0.0235%" height="15" fill="rgb(216,216,42)" fg:x="80655" fg:w="24"/><text x="79.3716%" y="1167.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="79.4267%" y="1013" width="0.0147%" height="15" fill="rgb(240,118,7)" fg:x="80966" fg:w="15"/><text x="79.6767%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (26 samples, 0.03%)</title><rect x="79.4414%" y="1013" width="0.0255%" height="15" fill="rgb(221,67,37)" fg:x="80981" fg:w="26"/><text x="79.6914%" y="1023.50"></text></g><g><title>core::mem::replace (26 samples, 0.03%)</title><rect x="79.4414%" y="997" width="0.0255%" height="15" fill="rgb(241,32,44)" fg:x="80981" fg:w="26"/><text x="79.6914%" y="1007.50"></text></g><g><title>core::ptr::read (26 samples, 0.03%)</title><rect x="79.4414%" y="981" width="0.0255%" height="15" fill="rgb(235,204,43)" fg:x="80981" fg:w="26"/><text x="79.6914%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (175 samples, 0.17%)</title><rect x="79.5454%" y="997" width="0.1717%" height="15" fill="rgb(213,116,10)" fg:x="81087" fg:w="175"/><text x="79.7954%" y="1007.50"></text></g><g><title>core::mem::replace (175 samples, 0.17%)</title><rect x="79.5454%" y="981" width="0.1717%" height="15" fill="rgb(239,15,48)" fg:x="81087" fg:w="175"/><text x="79.7954%" y="991.50"></text></g><g><title>core::ptr::read (171 samples, 0.17%)</title><rect x="79.5493%" y="965" width="0.1677%" height="15" fill="rgb(207,123,36)" fg:x="81091" fg:w="171"/><text x="79.7993%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (320 samples, 0.31%)</title><rect x="79.4669%" y="1013" width="0.3139%" height="15" fill="rgb(209,103,30)" fg:x="81007" fg:w="320"/><text x="79.7169%" y="1023.50"></text></g><g><title>core::mem::drop (65 samples, 0.06%)</title><rect x="79.7171%" y="997" width="0.0638%" height="15" fill="rgb(238,100,19)" fg:x="81262" fg:w="65"/><text x="79.9671%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (65 samples, 0.06%)</title><rect x="79.7171%" y="981" width="0.0638%" height="15" fill="rgb(244,30,14)" fg:x="81262" fg:w="65"/><text x="79.9671%" y="991.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="79.7808%" y="997" width="0.0186%" height="15" fill="rgb(249,174,6)" fg:x="81327" fg:w="19"/><text x="80.0308%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::done (15 samples, 0.01%)</title><rect x="79.8132%" y="965" width="0.0147%" height="15" fill="rgb(235,213,41)" fg:x="81360" fg:w="15"/><text x="80.0632%" y="975.50"></text></g><g><title>std::thread::panicking (15 samples, 0.01%)</title><rect x="79.8132%" y="949" width="0.0147%" height="15" fill="rgb(213,118,6)" fg:x="81360" fg:w="15"/><text x="80.0632%" y="959.50"></text></g><g><title>std::panicking::panicking (15 samples, 0.01%)</title><rect x="79.8132%" y="933" width="0.0147%" height="15" fill="rgb(235,44,51)" fg:x="81360" fg:w="15"/><text x="80.0632%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (15 samples, 0.01%)</title><rect x="79.8132%" y="917" width="0.0147%" height="15" fill="rgb(217,9,53)" fg:x="81360" fg:w="15"/><text x="80.0632%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="79.8309%" y="949" width="0.0108%" height="15" fill="rgb(237,172,34)" fg:x="81378" fg:w="11"/><text x="80.0809%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (419 samples, 0.41%)</title><rect x="79.7808%" y="1013" width="0.4110%" height="15" fill="rgb(206,206,11)" fg:x="81327" fg:w="419"/><text x="80.0308%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (400 samples, 0.39%)</title><rect x="79.7995%" y="997" width="0.3924%" height="15" fill="rgb(214,149,29)" fg:x="81346" fg:w="400"/><text x="80.0495%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (400 samples, 0.39%)</title><rect x="79.7995%" y="981" width="0.3924%" height="15" fill="rgb(208,123,3)" fg:x="81346" fg:w="400"/><text x="80.0495%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (371 samples, 0.36%)</title><rect x="79.8279%" y="965" width="0.3639%" height="15" fill="rgb(229,126,4)" fg:x="81375" fg:w="371"/><text x="80.0779%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (357 samples, 0.35%)</title><rect x="79.8417%" y="949" width="0.3502%" height="15" fill="rgb(222,92,36)" fg:x="81389" fg:w="357"/><text x="80.0917%" y="959.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (347 samples, 0.34%)</title><rect x="79.8515%" y="933" width="0.3404%" height="15" fill="rgb(216,39,41)" fg:x="81399" fg:w="347"/><text x="80.1015%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (41 samples, 0.04%)</title><rect x="80.2135%" y="965" width="0.0402%" height="15" fill="rgb(253,127,28)" fg:x="81768" fg:w="41"/><text x="80.4635%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (72 samples, 0.07%)</title><rect x="80.1938%" y="1013" width="0.0706%" height="15" fill="rgb(249,152,51)" fg:x="81748" fg:w="72"/><text x="80.4438%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (72 samples, 0.07%)</title><rect x="80.1938%" y="997" width="0.0706%" height="15" fill="rgb(209,123,42)" fg:x="81748" fg:w="72"/><text x="80.4438%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (52 samples, 0.05%)</title><rect x="80.2135%" y="981" width="0.0510%" height="15" fill="rgb(241,118,22)" fg:x="81768" fg:w="52"/><text x="80.4635%" y="991.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="80.2537%" y="965" width="0.0108%" height="15" fill="rgb(208,25,7)" fg:x="81809" fg:w="11"/><text x="80.5037%" y="975.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="80.2753%" y="981" width="0.0157%" height="15" fill="rgb(243,144,39)" fg:x="81831" fg:w="16"/><text x="80.5253%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (16 samples, 0.02%)</title><rect x="80.2753%" y="965" width="0.0157%" height="15" fill="rgb(250,50,5)" fg:x="81831" fg:w="16"/><text x="80.5253%" y="975.50"></text></g><g><title>std::thread::panicking (16 samples, 0.02%)</title><rect x="80.2753%" y="949" width="0.0157%" height="15" fill="rgb(207,67,11)" fg:x="81831" fg:w="16"/><text x="80.5253%" y="959.50"></text></g><g><title>std::panicking::panicking (16 samples, 0.02%)</title><rect x="80.2753%" y="933" width="0.0157%" height="15" fill="rgb(245,204,40)" fg:x="81831" fg:w="16"/><text x="80.5253%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (16 samples, 0.02%)</title><rect x="80.2753%" y="917" width="0.0157%" height="15" fill="rgb(238,228,24)" fg:x="81831" fg:w="16"/><text x="80.5253%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.02%)</title><rect x="80.2753%" y="901" width="0.0157%" height="15" fill="rgb(217,116,22)" fg:x="81831" fg:w="16"/><text x="80.5253%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.02%)</title><rect x="80.2753%" y="885" width="0.0157%" height="15" fill="rgb(234,98,12)" fg:x="81831" fg:w="16"/><text x="80.5253%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,531 samples, 1.50%)</title><rect x="79.2393%" y="1029" width="1.5019%" height="15" fill="rgb(242,170,50)" fg:x="80775" fg:w="1531"/><text x="79.4893%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (486 samples, 0.48%)</title><rect x="80.2645%" y="1013" width="0.4768%" height="15" fill="rgb(235,7,5)" fg:x="81820" fg:w="486"/><text x="80.5145%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (475 samples, 0.47%)</title><rect x="80.2753%" y="997" width="0.4660%" height="15" fill="rgb(241,114,28)" fg:x="81831" fg:w="475"/><text x="80.5253%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (459 samples, 0.45%)</title><rect x="80.2910%" y="981" width="0.4503%" height="15" fill="rgb(246,112,42)" fg:x="81847" fg:w="459"/><text x="80.5410%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (454 samples, 0.45%)</title><rect x="80.2959%" y="965" width="0.4454%" height="15" fill="rgb(248,228,14)" fg:x="81852" fg:w="454"/><text x="80.5459%" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (454 samples, 0.45%)</title><rect x="80.2959%" y="949" width="0.4454%" height="15" fill="rgb(208,133,18)" fg:x="81852" fg:w="454"/><text x="80.5459%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,646 samples, 1.61%)</title><rect x="79.1471%" y="1141" width="1.6147%" height="15" fill="rgb(207,35,49)" fg:x="80681" fg:w="1646"/><text x="79.3971%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,644 samples, 1.61%)</title><rect x="79.1491%" y="1125" width="1.6127%" height="15" fill="rgb(205,68,36)" fg:x="80683" fg:w="1644"/><text x="79.3991%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,644 samples, 1.61%)</title><rect x="79.1491%" y="1109" width="1.6127%" height="15" fill="rgb(245,62,40)" fg:x="80683" fg:w="1644"/><text x="79.3991%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,644 samples, 1.61%)</title><rect x="79.1491%" y="1093" width="1.6127%" height="15" fill="rgb(228,27,24)" fg:x="80683" fg:w="1644"/><text x="79.3991%" y="1103.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,644 samples, 1.61%)</title><rect x="79.1491%" y="1077" width="1.6127%" height="15" fill="rgb(253,19,12)" fg:x="80683" fg:w="1644"/><text x="79.3991%" y="1087.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,644 samples, 1.61%)</title><rect x="79.1491%" y="1061" width="1.6127%" height="15" fill="rgb(232,28,20)" fg:x="80683" fg:w="1644"/><text x="79.3991%" y="1071.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,644 samples, 1.61%)</title><rect x="79.1491%" y="1045" width="1.6127%" height="15" fill="rgb(218,35,51)" fg:x="80683" fg:w="1644"/><text x="79.3991%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (20 samples, 0.02%)</title><rect x="80.7422%" y="1029" width="0.0196%" height="15" fill="rgb(212,90,40)" fg:x="82307" fg:w="20"/><text x="80.9922%" y="1039.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="80.8187%" y="1061" width="0.0275%" height="15" fill="rgb(220,172,12)" fg:x="82385" fg:w="28"/><text x="81.0687%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (393 samples, 0.39%)</title><rect x="80.9119%" y="1045" width="0.3855%" height="15" fill="rgb(226,159,20)" fg:x="82480" fg:w="393"/><text x="81.1619%" y="1055.50"></text></g><g><title>__memmove_avx_unaligned_erms (775 samples, 0.76%)</title><rect x="81.3573%" y="1029" width="0.7603%" height="15" fill="rgb(234,205,16)" fg:x="82934" fg:w="775"/><text x="81.6073%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (255 samples, 0.25%)</title><rect x="82.2049%" y="1013" width="0.2502%" height="15" fill="rgb(207,9,39)" fg:x="83798" fg:w="255"/><text x="82.4549%" y="1023.50"></text></g><g><title>core::ptr::write (255 samples, 0.25%)</title><rect x="82.2049%" y="997" width="0.2502%" height="15" fill="rgb(249,143,15)" fg:x="83798" fg:w="255"/><text x="82.4549%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (247 samples, 0.24%)</title><rect x="82.2127%" y="981" width="0.2423%" height="15" fill="rgb(253,133,29)" fg:x="83806" fg:w="247"/><text x="82.4627%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (317 samples, 0.31%)</title><rect x="82.4550%" y="1013" width="0.3110%" height="15" fill="rgb(221,187,0)" fg:x="84053" fg:w="317"/><text x="82.7050%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (317 samples, 0.31%)</title><rect x="82.4550%" y="997" width="0.3110%" height="15" fill="rgb(205,204,26)" fg:x="84053" fg:w="317"/><text x="82.7050%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (44 samples, 0.04%)</title><rect x="82.7660%" y="1013" width="0.0432%" height="15" fill="rgb(224,68,54)" fg:x="84370" fg:w="44"/><text x="83.0160%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (44 samples, 0.04%)</title><rect x="82.7660%" y="997" width="0.0432%" height="15" fill="rgb(209,67,4)" fg:x="84370" fg:w="44"/><text x="83.0160%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,553 samples, 1.52%)</title><rect x="81.2975%" y="1045" width="1.5235%" height="15" fill="rgb(228,229,18)" fg:x="82873" fg:w="1553"/><text x="81.5475%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (717 samples, 0.70%)</title><rect x="82.1176%" y="1029" width="0.7034%" height="15" fill="rgb(231,89,13)" fg:x="83709" fg:w="717"/><text x="82.3676%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (12 samples, 0.01%)</title><rect x="82.8092%" y="1013" width="0.0118%" height="15" fill="rgb(210,182,18)" fg:x="84414" fg:w="12"/><text x="83.0592%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_store (12 samples, 0.01%)</title><rect x="82.8092%" y="997" width="0.0118%" height="15" fill="rgb(240,105,2)" fg:x="84414" fg:w="12"/><text x="83.0592%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (25 samples, 0.02%)</title><rect x="82.8602%" y="1029" width="0.0245%" height="15" fill="rgb(207,170,50)" fg:x="84466" fg:w="25"/><text x="83.1102%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="82.8602%" y="1013" width="0.0245%" height="15" fill="rgb(232,133,24)" fg:x="84466" fg:w="25"/><text x="83.1102%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="82.8602%" y="997" width="0.0245%" height="15" fill="rgb(235,166,27)" fg:x="84466" fg:w="25"/><text x="83.1102%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="82.8612%" y="981" width="0.0235%" height="15" fill="rgb(209,19,13)" fg:x="84467" fg:w="24"/><text x="83.1112%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="82.8612%" y="965" width="0.0235%" height="15" fill="rgb(226,79,39)" fg:x="84467" fg:w="24"/><text x="83.1112%" y="975.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="82.8612%" y="949" width="0.0235%" height="15" fill="rgb(222,163,10)" fg:x="84467" fg:w="24"/><text x="83.1112%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="82.8847%" y="1029" width="0.0128%" height="15" fill="rgb(214,44,19)" fg:x="84491" fg:w="13"/><text x="83.1347%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="82.8847%" y="1013" width="0.0128%" height="15" fill="rgb(210,217,13)" fg:x="84491" fg:w="13"/><text x="83.1347%" y="1023.50"></text></g><g><title>event_listener::Inner::lock (66 samples, 0.06%)</title><rect x="82.8984%" y="1029" width="0.0647%" height="15" fill="rgb(237,61,54)" fg:x="84505" fg:w="66"/><text x="83.1484%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="82.9004%" y="1013" width="0.0628%" height="15" fill="rgb(226,184,24)" fg:x="84507" fg:w="64"/><text x="83.1504%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (64 samples, 0.06%)</title><rect x="82.9004%" y="997" width="0.0628%" height="15" fill="rgb(223,226,4)" fg:x="84507" fg:w="64"/><text x="83.1504%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (60 samples, 0.06%)</title><rect x="82.9043%" y="981" width="0.0589%" height="15" fill="rgb(210,26,41)" fg:x="84511" fg:w="60"/><text x="83.1543%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (60 samples, 0.06%)</title><rect x="82.9043%" y="965" width="0.0589%" height="15" fill="rgb(220,221,6)" fg:x="84511" fg:w="60"/><text x="83.1543%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (21 samples, 0.02%)</title><rect x="82.9799%" y="933" width="0.0206%" height="15" fill="rgb(225,89,49)" fg:x="84588" fg:w="21"/><text x="83.2299%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="82.9799%" y="917" width="0.0206%" height="15" fill="rgb(218,70,45)" fg:x="84588" fg:w="21"/><text x="83.2299%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="82.9799%" y="901" width="0.0206%" height="15" fill="rgb(238,166,21)" fg:x="84588" fg:w="21"/><text x="83.2299%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="82.9799%" y="885" width="0.0206%" height="15" fill="rgb(224,141,44)" fg:x="84588" fg:w="21"/><text x="83.2299%" y="895.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="82.9799%" y="869" width="0.0206%" height="15" fill="rgb(230,12,49)" fg:x="84588" fg:w="21"/><text x="83.2299%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (12 samples, 0.01%)</title><rect x="83.0005%" y="933" width="0.0118%" height="15" fill="rgb(212,174,12)" fg:x="84609" fg:w="12"/><text x="83.2505%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="83.0005%" y="917" width="0.0118%" height="15" fill="rgb(246,67,9)" fg:x="84609" fg:w="12"/><text x="83.2505%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="83.0426%" y="853" width="0.0177%" height="15" fill="rgb(239,35,23)" fg:x="84652" fg:w="18"/><text x="83.2926%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="83.0426%" y="837" width="0.0177%" height="15" fill="rgb(211,167,0)" fg:x="84652" fg:w="18"/><text x="83.2926%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (18 samples, 0.02%)</title><rect x="83.0426%" y="821" width="0.0177%" height="15" fill="rgb(225,119,45)" fg:x="84652" fg:w="18"/><text x="83.2926%" y="831.50"></text></g><g><title>__pthread_cond_signal (18 samples, 0.02%)</title><rect x="83.0426%" y="805" width="0.0177%" height="15" fill="rgb(210,162,6)" fg:x="84652" fg:w="18"/><text x="83.2926%" y="815.50"></text></g><g><title>parking::Unparker::unpark (50 samples, 0.05%)</title><rect x="83.0240%" y="885" width="0.0490%" height="15" fill="rgb(208,118,35)" fg:x="84633" fg:w="50"/><text x="83.2740%" y="895.50"></text></g><g><title>parking::Inner::unpark (46 samples, 0.05%)</title><rect x="83.0279%" y="869" width="0.0451%" height="15" fill="rgb(239,4,53)" fg:x="84637" fg:w="46"/><text x="83.2779%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="83.0603%" y="853" width="0.0128%" height="15" fill="rgb(213,130,21)" fg:x="84670" fg:w="13"/><text x="83.3103%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="83.0603%" y="837" width="0.0128%" height="15" fill="rgb(235,148,0)" fg:x="84670" fg:w="13"/><text x="83.3103%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="83.0613%" y="821" width="0.0118%" height="15" fill="rgb(244,224,18)" fg:x="84671" fg:w="12"/><text x="83.3113%" y="831.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="83.0613%" y="805" width="0.0118%" height="15" fill="rgb(211,214,4)" fg:x="84671" fg:w="12"/><text x="83.3113%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (64 samples, 0.06%)</title><rect x="83.0132%" y="901" width="0.0628%" height="15" fill="rgb(206,119,25)" fg:x="84622" fg:w="64"/><text x="83.2632%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (77 samples, 0.08%)</title><rect x="83.0122%" y="933" width="0.0755%" height="15" fill="rgb(243,93,47)" fg:x="84621" fg:w="77"/><text x="83.2622%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (77 samples, 0.08%)</title><rect x="83.0122%" y="917" width="0.0755%" height="15" fill="rgb(224,194,6)" fg:x="84621" fg:w="77"/><text x="83.2622%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="83.0760%" y="901" width="0.0118%" height="15" fill="rgb(243,229,6)" fg:x="84686" fg:w="12"/><text x="83.3260%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="83.0760%" y="885" width="0.0118%" height="15" fill="rgb(207,23,50)" fg:x="84686" fg:w="12"/><text x="83.3260%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="83.0770%" y="869" width="0.0108%" height="15" fill="rgb(253,192,32)" fg:x="84687" fg:w="11"/><text x="83.3270%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="83.0770%" y="853" width="0.0108%" height="15" fill="rgb(213,21,6)" fg:x="84687" fg:w="11"/><text x="83.3270%" y="863.50"></text></g><g><title>async_executor::State::notify (146 samples, 0.14%)</title><rect x="82.9740%" y="949" width="0.1432%" height="15" fill="rgb(243,151,13)" fg:x="84582" fg:w="146"/><text x="83.2240%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.03%)</title><rect x="83.0878%" y="933" width="0.0294%" height="15" fill="rgb(233,165,41)" fg:x="84698" fg:w="30"/><text x="83.3378%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.03%)</title><rect x="83.0887%" y="917" width="0.0284%" height="15" fill="rgb(246,176,45)" fg:x="84699" fg:w="29"/><text x="83.3387%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.03%)</title><rect x="83.0907%" y="901" width="0.0265%" height="15" fill="rgb(217,170,52)" fg:x="84701" fg:w="27"/><text x="83.3407%" y="911.50"></text></g><g><title>__GI___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="83.0907%" y="885" width="0.0265%" height="15" fill="rgb(214,203,54)" fg:x="84701" fg:w="27"/><text x="83.3407%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (16 samples, 0.02%)</title><rect x="83.1339%" y="917" width="0.0157%" height="15" fill="rgb(248,215,49)" fg:x="84745" fg:w="16"/><text x="83.3839%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.02%)</title><rect x="83.1339%" y="901" width="0.0157%" height="15" fill="rgb(208,46,10)" fg:x="84745" fg:w="16"/><text x="83.3839%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (191 samples, 0.19%)</title><rect x="82.9730%" y="965" width="0.1874%" height="15" fill="rgb(254,5,31)" fg:x="84581" fg:w="191"/><text x="83.2230%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (44 samples, 0.04%)</title><rect x="83.1172%" y="949" width="0.0432%" height="15" fill="rgb(222,104,33)" fg:x="84728" fg:w="44"/><text x="83.3672%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (38 samples, 0.04%)</title><rect x="83.1231%" y="933" width="0.0373%" height="15" fill="rgb(248,49,16)" fg:x="84734" fg:w="38"/><text x="83.3731%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (32 samples, 0.03%)</title><rect x="83.1604%" y="965" width="0.0314%" height="15" fill="rgb(232,198,41)" fg:x="84772" fg:w="32"/><text x="83.4104%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (32 samples, 0.03%)</title><rect x="83.1604%" y="949" width="0.0314%" height="15" fill="rgb(214,125,3)" fg:x="84772" fg:w="32"/><text x="83.4104%" y="959.50"></text></g><g><title>event_listener::List::notify (240 samples, 0.24%)</title><rect x="82.9632%" y="1029" width="0.2354%" height="15" fill="rgb(229,220,28)" fg:x="84571" fg:w="240"/><text x="83.2132%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (239 samples, 0.23%)</title><rect x="82.9642%" y="1013" width="0.2345%" height="15" fill="rgb(222,64,37)" fg:x="84572" fg:w="239"/><text x="83.2142%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (239 samples, 0.23%)</title><rect x="82.9642%" y="997" width="0.2345%" height="15" fill="rgb(249,184,13)" fg:x="84572" fg:w="239"/><text x="83.2142%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (233 samples, 0.23%)</title><rect x="82.9700%" y="981" width="0.2286%" height="15" fill="rgb(252,176,6)" fg:x="84578" fg:w="233"/><text x="83.2200%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,602 samples, 3.53%)</title><rect x="80.8501%" y="1061" width="3.5335%" height="15" fill="rgb(228,153,7)" fg:x="82417" fg:w="3602"/><text x="81.1001%" y="1071.50">asy..</text></g><g><title>event_listener::Event::notify (1,593 samples, 1.56%)</title><rect x="82.8209%" y="1045" width="1.5627%" height="15" fill="rgb(242,193,5)" fg:x="84426" fg:w="1593"/><text x="83.0709%" y="1055.50"></text></g><g><title>event_listener::full_fence (1,208 samples, 1.19%)</title><rect x="83.1986%" y="1029" width="1.1850%" height="15" fill="rgb(232,140,9)" fg:x="84811" fg:w="1208"/><text x="83.4486%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,173 samples, 1.15%)</title><rect x="83.2329%" y="1013" width="1.1507%" height="15" fill="rgb(213,222,16)" fg:x="84846" fg:w="1173"/><text x="83.4829%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,173 samples, 1.15%)</title><rect x="83.2329%" y="997" width="1.1507%" height="15" fill="rgb(222,75,50)" fg:x="84846" fg:w="1173"/><text x="83.4829%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,173 samples, 1.15%)</title><rect x="83.2329%" y="981" width="1.1507%" height="15" fill="rgb(205,180,2)" fg:x="84846" fg:w="1173"/><text x="83.4829%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (19 samples, 0.02%)</title><rect x="84.3836%" y="1061" width="0.0186%" height="15" fill="rgb(216,34,7)" fg:x="86019" fg:w="19"/><text x="84.6336%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (438 samples, 0.43%)</title><rect x="84.4023%" y="1061" width="0.4297%" height="15" fill="rgb(253,16,32)" fg:x="86038" fg:w="438"/><text x="84.6523%" y="1071.50"></text></g><g><title>core::mem::replace (438 samples, 0.43%)</title><rect x="84.4023%" y="1045" width="0.4297%" height="15" fill="rgb(208,97,28)" fg:x="86038" fg:w="438"/><text x="84.6523%" y="1055.50"></text></g><g><title>core::ptr::read (434 samples, 0.43%)</title><rect x="84.4062%" y="1029" width="0.4257%" height="15" fill="rgb(225,92,11)" fg:x="86042" fg:w="434"/><text x="84.6562%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (410 samples, 0.40%)</title><rect x="84.4298%" y="1013" width="0.4022%" height="15" fill="rgb(243,38,12)" fg:x="86066" fg:w="410"/><text x="84.6798%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (495 samples, 0.49%)</title><rect x="84.8320%" y="1061" width="0.4856%" height="15" fill="rgb(208,139,16)" fg:x="86476" fg:w="495"/><text x="85.0820%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (482 samples, 0.47%)</title><rect x="84.8447%" y="1045" width="0.4728%" height="15" fill="rgb(227,24,9)" fg:x="86489" fg:w="482"/><text x="85.0947%" y="1055.50"></text></g><g><title>event_listener::Event::listen (13 samples, 0.01%)</title><rect x="85.3185%" y="1061" width="0.0128%" height="15" fill="rgb(206,62,11)" fg:x="86972" fg:w="13"/><text x="85.5685%" y="1071.50"></text></g><g><title>event_listener::Inner::lock (11 samples, 0.01%)</title><rect x="85.3509%" y="1045" width="0.0108%" height="15" fill="rgb(228,134,27)" fg:x="87005" fg:w="11"/><text x="85.6009%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="85.3509%" y="1029" width="0.0108%" height="15" fill="rgb(205,55,33)" fg:x="87005" fg:w="11"/><text x="85.6009%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,653 samples, 6.53%)</title><rect x="79.1471%" y="1157" width="6.5265%" height="15" fill="rgb(243,75,43)" fg:x="80681" fg:w="6653"/><text x="79.3971%" y="1167.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,007 samples, 4.91%)</title><rect x="80.7618%" y="1141" width="4.9118%" height="15" fill="rgb(223,27,42)" fg:x="82327" fg:w="5007"/><text x="81.0118%" y="1151.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (5,007 samples, 4.91%)</title><rect x="80.7618%" y="1125" width="4.9118%" height="15" fill="rgb(232,189,33)" fg:x="82327" fg:w="5007"/><text x="81.0118%" y="1135.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,007 samples, 4.91%)</title><rect x="80.7618%" y="1109" width="4.9118%" height="15" fill="rgb(210,9,39)" fg:x="82327" fg:w="5007"/><text x="81.0118%" y="1119.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (5,007 samples, 4.91%)</title><rect x="80.7618%" y="1093" width="4.9118%" height="15" fill="rgb(242,85,26)" fg:x="82327" fg:w="5007"/><text x="81.0118%" y="1103.50">tremor..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (5,007 samples, 4.91%)</title><rect x="80.7618%" y="1077" width="4.9118%" height="15" fill="rgb(248,44,4)" fg:x="82327" fg:w="5007"/><text x="81.0118%" y="1087.50">&lt;async..</text></g><g><title>event_listener::Event::notify (349 samples, 0.34%)</title><rect x="85.3313%" y="1061" width="0.3424%" height="15" fill="rgb(250,96,46)" fg:x="86985" fg:w="349"/><text x="85.5813%" y="1071.50"></text></g><g><title>event_listener::full_fence (318 samples, 0.31%)</title><rect x="85.3617%" y="1045" width="0.3120%" height="15" fill="rgb(229,116,26)" fg:x="87016" fg:w="318"/><text x="85.6117%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (293 samples, 0.29%)</title><rect x="85.3862%" y="1029" width="0.2874%" height="15" fill="rgb(246,94,34)" fg:x="87041" fg:w="293"/><text x="85.6362%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (293 samples, 0.29%)</title><rect x="85.3862%" y="1013" width="0.2874%" height="15" fill="rgb(251,73,21)" fg:x="87041" fg:w="293"/><text x="85.6362%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (293 samples, 0.29%)</title><rect x="85.3862%" y="997" width="0.2874%" height="15" fill="rgb(254,121,25)" fg:x="87041" fg:w="293"/><text x="85.6362%" y="1007.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (23 samples, 0.02%)</title><rect x="85.6736%" y="1157" width="0.0226%" height="15" fill="rgb(215,161,49)" fg:x="87334" fg:w="23"/><text x="85.9236%" y="1167.50"></text></g><g><title>[unknown] (81,843 samples, 80.29%)</title><rect x="5.4209%" y="1173" width="80.2870%" height="15" fill="rgb(221,43,13)" fg:x="5526" fg:w="81843"/><text x="5.6709%" y="1183.50">[unknown]</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (23 samples, 0.02%)</title><rect x="85.8483%" y="469" width="0.0226%" height="15" fill="rgb(249,5,37)" fg:x="87512" fg:w="23"/><text x="86.0983%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (23 samples, 0.02%)</title><rect x="85.8483%" y="453" width="0.0226%" height="15" fill="rgb(226,25,44)" fg:x="87512" fg:w="23"/><text x="86.0983%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.02%)</title><rect x="85.8532%" y="437" width="0.0177%" height="15" fill="rgb(238,189,16)" fg:x="87517" fg:w="18"/><text x="86.1032%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="85.8708%" y="469" width="0.0118%" height="15" fill="rgb(251,186,8)" fg:x="87535" fg:w="12"/><text x="86.1208%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (63 samples, 0.06%)</title><rect x="85.8424%" y="501" width="0.0618%" height="15" fill="rgb(254,34,31)" fg:x="87506" fg:w="63"/><text x="86.0924%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (60 samples, 0.06%)</title><rect x="85.8453%" y="485" width="0.0589%" height="15" fill="rgb(225,215,27)" fg:x="87509" fg:w="60"/><text x="86.0953%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.01%)</title><rect x="85.8895%" y="469" width="0.0147%" height="15" fill="rgb(221,192,48)" fg:x="87554" fg:w="15"/><text x="86.1395%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (15 samples, 0.01%)</title><rect x="85.8895%" y="453" width="0.0147%" height="15" fill="rgb(219,137,20)" fg:x="87554" fg:w="15"/><text x="86.1395%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (102 samples, 0.10%)</title><rect x="85.8051%" y="533" width="0.1001%" height="15" fill="rgb(219,84,11)" fg:x="87468" fg:w="102"/><text x="86.0551%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (86 samples, 0.08%)</title><rect x="85.8208%" y="517" width="0.0844%" height="15" fill="rgb(224,10,23)" fg:x="87484" fg:w="86"/><text x="86.0708%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.10%)</title><rect x="85.8051%" y="565" width="0.1050%" height="15" fill="rgb(248,22,39)" fg:x="87468" fg:w="107"/><text x="86.0551%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (107 samples, 0.10%)</title><rect x="85.8051%" y="549" width="0.1050%" height="15" fill="rgb(212,154,20)" fg:x="87468" fg:w="107"/><text x="86.0551%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (272 samples, 0.27%)</title><rect x="86.0464%" y="533" width="0.2668%" height="15" fill="rgb(236,199,50)" fg:x="87714" fg:w="272"/><text x="86.2964%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (194 samples, 0.19%)</title><rect x="86.1229%" y="517" width="0.1903%" height="15" fill="rgb(211,9,17)" fg:x="87792" fg:w="194"/><text x="86.3729%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (194 samples, 0.19%)</title><rect x="86.1229%" y="501" width="0.1903%" height="15" fill="rgb(243,216,36)" fg:x="87792" fg:w="194"/><text x="86.3729%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (405 samples, 0.40%)</title><rect x="85.9228%" y="549" width="0.3973%" height="15" fill="rgb(250,2,10)" fg:x="87588" fg:w="405"/><text x="86.1728%" y="559.50"></text></g><g><title>async_executor::steal (421 samples, 0.41%)</title><rect x="85.9101%" y="565" width="0.4130%" height="15" fill="rgb(226,50,48)" fg:x="87575" fg:w="421"/><text x="86.1601%" y="575.50"></text></g><g><title>concurrent_queue::full_fence (383 samples, 0.38%)</title><rect x="86.5752%" y="533" width="0.3757%" height="15" fill="rgb(243,81,16)" fg:x="88253" fg:w="383"/><text x="86.8252%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (382 samples, 0.37%)</title><rect x="86.5762%" y="517" width="0.3747%" height="15" fill="rgb(250,14,2)" fg:x="88254" fg:w="382"/><text x="86.8262%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (382 samples, 0.37%)</title><rect x="86.5762%" y="501" width="0.3747%" height="15" fill="rgb(233,135,29)" fg:x="88254" fg:w="382"/><text x="86.8262%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (382 samples, 0.37%)</title><rect x="86.5762%" y="485" width="0.3747%" height="15" fill="rgb(224,64,43)" fg:x="88254" fg:w="382"/><text x="86.8262%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (584 samples, 0.57%)</title><rect x="86.4221%" y="549" width="0.5729%" height="15" fill="rgb(238,84,13)" fg:x="88097" fg:w="584"/><text x="86.6721%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (45 samples, 0.04%)</title><rect x="86.9509%" y="533" width="0.0441%" height="15" fill="rgb(253,48,26)" fg:x="88636" fg:w="45"/><text x="87.2009%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (42 samples, 0.04%)</title><rect x="86.9538%" y="517" width="0.0412%" height="15" fill="rgb(205,223,31)" fg:x="88639" fg:w="42"/><text x="87.2038%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (156 samples, 0.15%)</title><rect x="87.0313%" y="533" width="0.1530%" height="15" fill="rgb(221,41,32)" fg:x="88718" fg:w="156"/><text x="87.2813%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (152 samples, 0.15%)</title><rect x="87.0353%" y="517" width="0.1491%" height="15" fill="rgb(213,158,31)" fg:x="88722" fg:w="152"/><text x="87.2853%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (152 samples, 0.15%)</title><rect x="87.0353%" y="501" width="0.1491%" height="15" fill="rgb(245,126,43)" fg:x="88722" fg:w="152"/><text x="87.2853%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (152 samples, 0.15%)</title><rect x="87.0353%" y="485" width="0.1491%" height="15" fill="rgb(227,7,22)" fg:x="88722" fg:w="152"/><text x="87.2853%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (50 samples, 0.05%)</title><rect x="87.2050%" y="533" width="0.0490%" height="15" fill="rgb(252,90,44)" fg:x="88895" fg:w="50"/><text x="87.4550%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (50 samples, 0.05%)</title><rect x="87.2050%" y="517" width="0.0490%" height="15" fill="rgb(253,91,0)" fg:x="88895" fg:w="50"/><text x="87.4550%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (48 samples, 0.05%)</title><rect x="87.2540%" y="533" width="0.0471%" height="15" fill="rgb(252,175,49)" fg:x="88945" fg:w="48"/><text x="87.5040%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (48 samples, 0.05%)</title><rect x="87.2540%" y="517" width="0.0471%" height="15" fill="rgb(246,150,1)" fg:x="88945" fg:w="48"/><text x="87.5040%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (105 samples, 0.10%)</title><rect x="87.3011%" y="533" width="0.1030%" height="15" fill="rgb(241,192,25)" fg:x="88993" fg:w="105"/><text x="87.5511%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (105 samples, 0.10%)</title><rect x="87.3011%" y="517" width="0.1030%" height="15" fill="rgb(239,187,11)" fg:x="88993" fg:w="105"/><text x="87.5511%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,103 samples, 1.08%)</title><rect x="86.3231%" y="565" width="1.0820%" height="15" fill="rgb(218,202,51)" fg:x="87996" fg:w="1103"/><text x="86.5731%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (418 samples, 0.41%)</title><rect x="86.9950%" y="549" width="0.4101%" height="15" fill="rgb(225,176,8)" fg:x="88681" fg:w="418"/><text x="87.2450%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (80 samples, 0.08%)</title><rect x="87.4188%" y="501" width="0.0785%" height="15" fill="rgb(219,122,41)" fg:x="89113" fg:w="80"/><text x="87.6688%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (80 samples, 0.08%)</title><rect x="87.4188%" y="485" width="0.0785%" height="15" fill="rgb(248,140,20)" fg:x="89113" fg:w="80"/><text x="87.6688%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (184 samples, 0.18%)</title><rect x="87.4051%" y="565" width="0.1805%" height="15" fill="rgb(245,41,37)" fg:x="89099" fg:w="184"/><text x="87.6551%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (184 samples, 0.18%)</title><rect x="87.4051%" y="549" width="0.1805%" height="15" fill="rgb(235,82,39)" fg:x="89099" fg:w="184"/><text x="87.6551%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (183 samples, 0.18%)</title><rect x="87.4061%" y="533" width="0.1795%" height="15" fill="rgb(230,108,42)" fg:x="89100" fg:w="183"/><text x="87.6561%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (175 samples, 0.17%)</title><rect x="87.4139%" y="517" width="0.1717%" height="15" fill="rgb(215,150,50)" fg:x="89108" fg:w="175"/><text x="87.6639%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (90 samples, 0.09%)</title><rect x="87.4973%" y="501" width="0.0883%" height="15" fill="rgb(233,212,5)" fg:x="89193" fg:w="90"/><text x="87.7473%" y="511.50"></text></g><g><title>__GI___pthread_rwlock_unlock (90 samples, 0.09%)</title><rect x="87.4973%" y="485" width="0.0883%" height="15" fill="rgb(245,80,22)" fg:x="89193" fg:w="90"/><text x="87.7473%" y="495.50"></text></g><g><title>fastrand::Rng::usize (11 samples, 0.01%)</title><rect x="87.5964%" y="501" width="0.0108%" height="15" fill="rgb(238,129,16)" fg:x="89294" fg:w="11"/><text x="87.8464%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.02%)</title><rect x="87.5905%" y="533" width="0.0177%" height="15" fill="rgb(240,19,0)" fg:x="89288" fg:w="18"/><text x="87.8405%" y="543.50"></text></g><g><title>fastrand::usize::{{closure}} (12 samples, 0.01%)</title><rect x="87.5964%" y="517" width="0.0118%" height="15" fill="rgb(232,42,35)" fg:x="89294" fg:w="12"/><text x="87.8464%" y="527.50"></text></g><g><title>fastrand::usize (25 samples, 0.02%)</title><rect x="87.5876%" y="565" width="0.0245%" height="15" fill="rgb(223,130,24)" fg:x="89285" fg:w="25"/><text x="87.8376%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (25 samples, 0.02%)</title><rect x="87.5876%" y="549" width="0.0245%" height="15" fill="rgb(237,16,22)" fg:x="89285" fg:w="25"/><text x="87.8376%" y="559.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (92 samples, 0.09%)</title><rect x="87.6238%" y="517" width="0.0903%" height="15" fill="rgb(248,192,20)" fg:x="89322" fg:w="92"/><text x="87.8738%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (2,032 samples, 1.99%)</title><rect x="85.7678%" y="581" width="1.9934%" height="15" fill="rgb(233,167,2)" fg:x="87430" fg:w="2032"/><text x="86.0178%" y="591.50">a..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (152 samples, 0.15%)</title><rect x="87.6121%" y="565" width="0.1491%" height="15" fill="rgb(252,71,44)" fg:x="89310" fg:w="152"/><text x="87.8621%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (147 samples, 0.14%)</title><rect x="87.6170%" y="549" width="0.1442%" height="15" fill="rgb(238,37,47)" fg:x="89315" fg:w="147"/><text x="87.8670%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (144 samples, 0.14%)</title><rect x="87.6199%" y="533" width="0.1413%" height="15" fill="rgb(214,202,54)" fg:x="89318" fg:w="144"/><text x="87.8699%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (48 samples, 0.05%)</title><rect x="87.7141%" y="517" width="0.0471%" height="15" fill="rgb(254,165,40)" fg:x="89414" fg:w="48"/><text x="87.9641%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.05%)</title><rect x="87.7141%" y="501" width="0.0471%" height="15" fill="rgb(246,173,38)" fg:x="89414" fg:w="48"/><text x="87.9641%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (23 samples, 0.02%)</title><rect x="87.7710%" y="565" width="0.0226%" height="15" fill="rgb(215,3,27)" fg:x="89472" fg:w="23"/><text x="88.0210%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.02%)</title><rect x="87.7710%" y="549" width="0.0226%" height="15" fill="rgb(239,169,51)" fg:x="89472" fg:w="23"/><text x="88.0210%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (29 samples, 0.03%)</title><rect x="87.8161%" y="485" width="0.0284%" height="15" fill="rgb(212,5,25)" fg:x="89518" fg:w="29"/><text x="88.0661%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.03%)</title><rect x="87.8161%" y="469" width="0.0284%" height="15" fill="rgb(243,45,17)" fg:x="89518" fg:w="29"/><text x="88.0661%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (45 samples, 0.04%)</title><rect x="87.8446%" y="485" width="0.0441%" height="15" fill="rgb(242,97,9)" fg:x="89547" fg:w="45"/><text x="88.0946%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (45 samples, 0.04%)</title><rect x="87.8446%" y="469" width="0.0441%" height="15" fill="rgb(228,71,31)" fg:x="89547" fg:w="45"/><text x="88.0946%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (45 samples, 0.04%)</title><rect x="87.8446%" y="453" width="0.0441%" height="15" fill="rgb(252,184,16)" fg:x="89547" fg:w="45"/><text x="88.0946%" y="463.50"></text></g><g><title>__pthread_cond_signal (45 samples, 0.04%)</title><rect x="87.8446%" y="437" width="0.0441%" height="15" fill="rgb(236,169,46)" fg:x="89547" fg:w="45"/><text x="88.0946%" y="447.50"></text></g><g><title>parking::Unparker::unpark (134 samples, 0.13%)</title><rect x="87.8053%" y="517" width="0.1315%" height="15" fill="rgb(207,17,47)" fg:x="89507" fg:w="134"/><text x="88.0553%" y="527.50"></text></g><g><title>parking::Inner::unpark (127 samples, 0.12%)</title><rect x="87.8122%" y="501" width="0.1246%" height="15" fill="rgb(206,201,28)" fg:x="89514" fg:w="127"/><text x="88.0622%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 0.05%)</title><rect x="87.8887%" y="485" width="0.0481%" height="15" fill="rgb(224,184,23)" fg:x="89592" fg:w="49"/><text x="88.1387%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (48 samples, 0.05%)</title><rect x="87.8897%" y="469" width="0.0471%" height="15" fill="rgb(208,139,48)" fg:x="89593" fg:w="48"/><text x="88.1397%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (48 samples, 0.05%)</title><rect x="87.8897%" y="453" width="0.0471%" height="15" fill="rgb(208,130,10)" fg:x="89593" fg:w="48"/><text x="88.1397%" y="463.50"></text></g><g><title>__GI___pthread_mutex_lock (48 samples, 0.05%)</title><rect x="87.8897%" y="437" width="0.0471%" height="15" fill="rgb(211,213,45)" fg:x="89593" fg:w="48"/><text x="88.1397%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (150 samples, 0.15%)</title><rect x="87.7936%" y="533" width="0.1471%" height="15" fill="rgb(235,100,30)" fg:x="89495" fg:w="150"/><text x="88.0436%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (177 samples, 0.17%)</title><rect x="87.7936%" y="565" width="0.1736%" height="15" fill="rgb(206,144,31)" fg:x="89495" fg:w="177"/><text x="88.0436%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (177 samples, 0.17%)</title><rect x="87.7936%" y="549" width="0.1736%" height="15" fill="rgb(224,200,26)" fg:x="89495" fg:w="177"/><text x="88.0436%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (27 samples, 0.03%)</title><rect x="87.9407%" y="533" width="0.0265%" height="15" fill="rgb(247,104,53)" fg:x="89645" fg:w="27"/><text x="88.1907%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="87.9407%" y="517" width="0.0265%" height="15" fill="rgb(220,14,17)" fg:x="89645" fg:w="27"/><text x="88.1907%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (26 samples, 0.03%)</title><rect x="87.9417%" y="501" width="0.0255%" height="15" fill="rgb(230,140,40)" fg:x="89646" fg:w="26"/><text x="88.1917%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (26 samples, 0.03%)</title><rect x="87.9417%" y="485" width="0.0255%" height="15" fill="rgb(229,2,41)" fg:x="89646" fg:w="26"/><text x="88.1917%" y="495.50"></text></g><g><title>async_executor::State::notify (218 samples, 0.21%)</title><rect x="87.7612%" y="581" width="0.2139%" height="15" fill="rgb(232,89,16)" fg:x="89462" fg:w="218"/><text x="88.0112%" y="591.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="87.9849%" y="549" width="0.0530%" height="15" fill="rgb(247,59,52)" fg:x="89690" fg:w="54"/><text x="88.2349%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (54 samples, 0.05%)</title><rect x="87.9849%" y="533" width="0.0530%" height="15" fill="rgb(226,110,21)" fg:x="89690" fg:w="54"/><text x="88.2349%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="87.9849%" y="517" width="0.0530%" height="15" fill="rgb(224,176,43)" fg:x="89690" fg:w="54"/><text x="88.2349%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.05%)</title><rect x="87.9849%" y="501" width="0.0530%" height="15" fill="rgb(221,73,6)" fg:x="89690" fg:w="54"/><text x="88.2349%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (54 samples, 0.05%)</title><rect x="87.9849%" y="485" width="0.0530%" height="15" fill="rgb(232,78,19)" fg:x="89690" fg:w="54"/><text x="88.2349%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (54 samples, 0.05%)</title><rect x="87.9849%" y="469" width="0.0530%" height="15" fill="rgb(233,112,48)" fg:x="89690" fg:w="54"/><text x="88.2349%" y="479.50"></text></g><g><title>async_executor::Sleepers::insert (67 samples, 0.07%)</title><rect x="87.9849%" y="565" width="0.0657%" height="15" fill="rgb(243,131,47)" fg:x="89690" fg:w="67"/><text x="88.2349%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (36 samples, 0.04%)</title><rect x="88.0673%" y="549" width="0.0353%" height="15" fill="rgb(226,51,1)" fg:x="89774" fg:w="36"/><text x="88.3173%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (36 samples, 0.04%)</title><rect x="88.0673%" y="533" width="0.0353%" height="15" fill="rgb(247,58,7)" fg:x="89774" fg:w="36"/><text x="88.3173%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="88.0692%" y="517" width="0.0334%" height="15" fill="rgb(209,7,32)" fg:x="89776" fg:w="34"/><text x="88.3192%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="88.0692%" y="501" width="0.0334%" height="15" fill="rgb(209,39,41)" fg:x="89776" fg:w="34"/><text x="88.3192%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (33 samples, 0.03%)</title><rect x="88.0702%" y="485" width="0.0324%" height="15" fill="rgb(226,182,46)" fg:x="89777" fg:w="33"/><text x="88.3202%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (33 samples, 0.03%)</title><rect x="88.0702%" y="469" width="0.0324%" height="15" fill="rgb(230,219,10)" fg:x="89777" fg:w="33"/><text x="88.3202%" y="479.50"></text></g><g><title>async_executor::Sleepers::update (64 samples, 0.06%)</title><rect x="88.0525%" y="565" width="0.0628%" height="15" fill="rgb(227,175,30)" fg:x="89759" fg:w="64"/><text x="88.3025%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (94 samples, 0.09%)</title><rect x="88.1153%" y="565" width="0.0922%" height="15" fill="rgb(217,2,50)" fg:x="89823" fg:w="94"/><text x="88.3653%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.09%)</title><rect x="88.1153%" y="549" width="0.0922%" height="15" fill="rgb(229,160,0)" fg:x="89823" fg:w="94"/><text x="88.3653%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (91 samples, 0.09%)</title><rect x="88.1183%" y="533" width="0.0893%" height="15" fill="rgb(207,78,37)" fg:x="89826" fg:w="91"/><text x="88.3683%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (90 samples, 0.09%)</title><rect x="88.1192%" y="517" width="0.0883%" height="15" fill="rgb(225,57,0)" fg:x="89827" fg:w="90"/><text x="88.3692%" y="527.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (88 samples, 0.09%)</title><rect x="88.1212%" y="501" width="0.0863%" height="15" fill="rgb(232,154,2)" fg:x="89829" fg:w="88"/><text x="88.3712%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (65 samples, 0.06%)</title><rect x="88.2075%" y="565" width="0.0638%" height="15" fill="rgb(241,212,25)" fg:x="89917" fg:w="65"/><text x="88.4575%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (65 samples, 0.06%)</title><rect x="88.2075%" y="549" width="0.0638%" height="15" fill="rgb(226,69,20)" fg:x="89917" fg:w="65"/><text x="88.4575%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (29 samples, 0.03%)</title><rect x="88.2713%" y="565" width="0.0284%" height="15" fill="rgb(247,184,54)" fg:x="89982" fg:w="29"/><text x="88.5213%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (29 samples, 0.03%)</title><rect x="88.2713%" y="549" width="0.0284%" height="15" fill="rgb(210,145,0)" fg:x="89982" fg:w="29"/><text x="88.5213%" y="559.50"></text></g><g><title>async_executor::Ticker::sleep (515 samples, 0.51%)</title><rect x="87.9750%" y="581" width="0.5052%" height="15" fill="rgb(253,82,12)" fg:x="89680" fg:w="515"/><text x="88.2250%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (184 samples, 0.18%)</title><rect x="88.2998%" y="565" width="0.1805%" height="15" fill="rgb(245,42,11)" fg:x="90011" fg:w="184"/><text x="88.5498%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (181 samples, 0.18%)</title><rect x="88.3027%" y="549" width="0.1776%" height="15" fill="rgb(219,147,32)" fg:x="90014" fg:w="181"/><text x="88.5527%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (172 samples, 0.17%)</title><rect x="88.3115%" y="533" width="0.1687%" height="15" fill="rgb(246,12,7)" fg:x="90023" fg:w="172"/><text x="88.5615%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (172 samples, 0.17%)</title><rect x="88.3115%" y="517" width="0.1687%" height="15" fill="rgb(243,50,9)" fg:x="90023" fg:w="172"/><text x="88.5615%" y="527.50"></text></g><g><title>__lll_lock_wait (15 samples, 0.01%)</title><rect x="88.4655%" y="501" width="0.0147%" height="15" fill="rgb(219,149,6)" fg:x="90180" fg:w="15"/><text x="88.7155%" y="511.50"></text></g><g><title>async_executor::Sleepers::remove (14 samples, 0.01%)</title><rect x="88.4852%" y="565" width="0.0137%" height="15" fill="rgb(241,51,42)" fg:x="90200" fg:w="14"/><text x="88.7352%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (12 samples, 0.01%)</title><rect x="88.4871%" y="549" width="0.0118%" height="15" fill="rgb(226,128,27)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (12 samples, 0.01%)</title><rect x="88.4871%" y="533" width="0.0118%" height="15" fill="rgb(244,144,4)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="88.4871%" y="517" width="0.0118%" height="15" fill="rgb(221,4,13)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (12 samples, 0.01%)</title><rect x="88.4871%" y="501" width="0.0118%" height="15" fill="rgb(208,170,28)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="511.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="88.4871%" y="485" width="0.0118%" height="15" fill="rgb(226,131,13)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="88.4871%" y="469" width="0.0118%" height="15" fill="rgb(215,72,41)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="88.4871%" y="453" width="0.0118%" height="15" fill="rgb(243,108,20)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="88.4871%" y="437" width="0.0118%" height="15" fill="rgb(230,189,17)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="88.4871%" y="421" width="0.0118%" height="15" fill="rgb(220,50,17)" fg:x="90202" fg:w="12"/><text x="88.7371%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (29 samples, 0.03%)</title><rect x="88.4989%" y="565" width="0.0284%" height="15" fill="rgb(248,152,48)" fg:x="90214" fg:w="29"/><text x="88.7489%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="88.4989%" y="549" width="0.0284%" height="15" fill="rgb(244,91,11)" fg:x="90214" fg:w="29"/><text x="88.7489%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.03%)</title><rect x="88.4989%" y="533" width="0.0284%" height="15" fill="rgb(220,157,5)" fg:x="90214" fg:w="29"/><text x="88.7489%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (29 samples, 0.03%)</title><rect x="88.4989%" y="517" width="0.0284%" height="15" fill="rgb(253,137,8)" fg:x="90214" fg:w="29"/><text x="88.7489%" y="527.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="88.5009%" y="501" width="0.0265%" height="15" fill="rgb(217,137,51)" fg:x="90216" fg:w="27"/><text x="88.7509%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (22 samples, 0.02%)</title><rect x="88.5273%" y="565" width="0.0216%" height="15" fill="rgb(218,209,53)" fg:x="90243" fg:w="22"/><text x="88.7773%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (22 samples, 0.02%)</title><rect x="88.5273%" y="549" width="0.0216%" height="15" fill="rgb(249,137,25)" fg:x="90243" fg:w="22"/><text x="88.7773%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (43 samples, 0.04%)</title><rect x="88.5489%" y="565" width="0.0422%" height="15" fill="rgb(239,155,26)" fg:x="90265" fg:w="43"/><text x="88.7989%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (43 samples, 0.04%)</title><rect x="88.5489%" y="549" width="0.0422%" height="15" fill="rgb(227,85,46)" fg:x="90265" fg:w="43"/><text x="88.7989%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,943 samples, 2.89%)</title><rect x="85.7492%" y="645" width="2.8870%" height="15" fill="rgb(251,107,43)" fg:x="87411" fg:w="2943"/><text x="85.9992%" y="655.50">&lt;c..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (2,942 samples, 2.89%)</title><rect x="85.7502%" y="629" width="2.8861%" height="15" fill="rgb(234,170,33)" fg:x="87412" fg:w="2942"/><text x="86.0002%" y="639.50">as..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,938 samples, 2.88%)</title><rect x="85.7541%" y="613" width="2.8821%" height="15" fill="rgb(206,29,35)" fg:x="87416" fg:w="2938"/><text x="86.0041%" y="623.50">&lt;f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2,930 samples, 2.87%)</title><rect x="85.7619%" y="597" width="2.8743%" height="15" fill="rgb(227,138,25)" fg:x="87424" fg:w="2930"/><text x="86.0119%" y="607.50">as..</text></g><g><title>async_executor::Ticker::wake (159 samples, 0.16%)</title><rect x="88.4803%" y="581" width="0.1560%" height="15" fill="rgb(249,131,35)" fg:x="90195" fg:w="159"/><text x="88.7303%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.05%)</title><rect x="88.5911%" y="565" width="0.0451%" height="15" fill="rgb(239,6,40)" fg:x="90308" fg:w="46"/><text x="88.8411%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (45 samples, 0.04%)</title><rect x="88.5921%" y="549" width="0.0441%" height="15" fill="rgb(246,136,47)" fg:x="90309" fg:w="45"/><text x="88.8421%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (45 samples, 0.04%)</title><rect x="88.5921%" y="533" width="0.0441%" height="15" fill="rgb(253,58,26)" fg:x="90309" fg:w="45"/><text x="88.8421%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (45 samples, 0.04%)</title><rect x="88.5921%" y="517" width="0.0441%" height="15" fill="rgb(237,141,10)" fg:x="90309" fg:w="45"/><text x="88.8421%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,980 samples, 2.92%)</title><rect x="85.7374%" y="677" width="2.9233%" height="15" fill="rgb(234,156,12)" fg:x="87399" fg:w="2980"/><text x="85.9874%" y="687.50">&lt;c..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (2,977 samples, 2.92%)</title><rect x="85.7404%" y="661" width="2.9204%" height="15" fill="rgb(243,224,36)" fg:x="87402" fg:w="2977"/><text x="85.9904%" y="671.50">as..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.02%)</title><rect x="88.6372%" y="645" width="0.0235%" height="15" fill="rgb(205,229,51)" fg:x="90355" fg:w="24"/><text x="88.8872%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="88.6372%" y="629" width="0.0235%" height="15" fill="rgb(223,189,4)" fg:x="90355" fg:w="24"/><text x="88.8872%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (28 samples, 0.03%)</title><rect x="88.7333%" y="549" width="0.0275%" height="15" fill="rgb(249,167,54)" fg:x="90453" fg:w="28"/><text x="88.9833%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (27 samples, 0.03%)</title><rect x="88.7343%" y="533" width="0.0265%" height="15" fill="rgb(218,34,28)" fg:x="90454" fg:w="27"/><text x="88.9843%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (26 samples, 0.03%)</title><rect x="88.7618%" y="533" width="0.0255%" height="15" fill="rgb(232,109,42)" fg:x="90482" fg:w="26"/><text x="89.0118%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (34 samples, 0.03%)</title><rect x="88.7951%" y="485" width="0.0334%" height="15" fill="rgb(248,214,46)" fg:x="90516" fg:w="34"/><text x="89.0451%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="89.4848%" y="469" width="0.0186%" height="15" fill="rgb(244,216,40)" fg:x="91219" fg:w="19"/><text x="89.7348%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (19 samples, 0.02%)</title><rect x="89.4848%" y="453" width="0.0186%" height="15" fill="rgb(231,226,31)" fg:x="91219" fg:w="19"/><text x="89.7348%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.01%)</title><rect x="89.4897%" y="437" width="0.0137%" height="15" fill="rgb(238,38,43)" fg:x="91224" fg:w="14"/><text x="89.7397%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="89.5034%" y="469" width="0.0167%" height="15" fill="rgb(208,88,43)" fg:x="91238" fg:w="17"/><text x="89.7534%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.01%)</title><rect x="89.5064%" y="453" width="0.0137%" height="15" fill="rgb(205,136,37)" fg:x="91241" fg:w="14"/><text x="89.7564%" y="463.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="89.5201%" y="469" width="0.0284%" height="15" fill="rgb(237,34,14)" fg:x="91255" fg:w="29"/><text x="89.7701%" y="479.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (18 samples, 0.02%)</title><rect x="89.5309%" y="453" width="0.0177%" height="15" fill="rgb(236,193,44)" fg:x="91266" fg:w="18"/><text x="89.7809%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="89.5711%" y="453" width="0.0186%" height="15" fill="rgb(231,48,10)" fg:x="91307" fg:w="19"/><text x="89.8211%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (13 samples, 0.01%)</title><rect x="89.9017%" y="421" width="0.0128%" height="15" fill="rgb(213,141,34)" fg:x="91644" fg:w="13"/><text x="90.1517%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="89.9017%" y="405" width="0.0128%" height="15" fill="rgb(249,130,34)" fg:x="91644" fg:w="13"/><text x="90.1517%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="89.9017%" y="389" width="0.0128%" height="15" fill="rgb(219,42,41)" fg:x="91644" fg:w="13"/><text x="90.1517%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="89.9017%" y="373" width="0.0128%" height="15" fill="rgb(224,100,54)" fg:x="91644" fg:w="13"/><text x="90.1517%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="89.9017%" y="357" width="0.0128%" height="15" fill="rgb(229,200,27)" fg:x="91644" fg:w="13"/><text x="90.1517%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (34 samples, 0.03%)</title><rect x="89.9145%" y="373" width="0.0334%" height="15" fill="rgb(217,118,10)" fg:x="91657" fg:w="34"/><text x="90.1645%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (15 samples, 0.01%)</title><rect x="89.9331%" y="357" width="0.0147%" height="15" fill="rgb(206,22,3)" fg:x="91676" fg:w="15"/><text x="90.1831%" y="367.50"></text></g><g><title>core::mem::drop (87 samples, 0.09%)</title><rect x="89.9527%" y="373" width="0.0853%" height="15" fill="rgb(232,163,46)" fg:x="91696" fg:w="87"/><text x="90.2027%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (87 samples, 0.09%)</title><rect x="89.9527%" y="357" width="0.0853%" height="15" fill="rgb(206,95,13)" fg:x="91696" fg:w="87"/><text x="90.2027%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.09%)</title><rect x="89.9527%" y="341" width="0.0853%" height="15" fill="rgb(253,154,18)" fg:x="91696" fg:w="87"/><text x="90.2027%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (40 samples, 0.04%)</title><rect x="89.9988%" y="325" width="0.0392%" height="15" fill="rgb(219,32,23)" fg:x="91743" fg:w="40"/><text x="90.2488%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="90.0194%" y="309" width="0.0186%" height="15" fill="rgb(230,191,45)" fg:x="91764" fg:w="19"/><text x="90.2694%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (19 samples, 0.02%)</title><rect x="90.0194%" y="293" width="0.0186%" height="15" fill="rgb(229,64,36)" fg:x="91764" fg:w="19"/><text x="90.2694%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (17 samples, 0.02%)</title><rect x="90.0214%" y="277" width="0.0167%" height="15" fill="rgb(205,129,25)" fg:x="91766" fg:w="17"/><text x="90.2714%" y="287.50"></text></g><g><title>core::mem::replace (17 samples, 0.02%)</title><rect x="90.0214%" y="261" width="0.0167%" height="15" fill="rgb(254,112,7)" fg:x="91766" fg:w="17"/><text x="90.2714%" y="271.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="90.0233%" y="245" width="0.0147%" height="15" fill="rgb(226,53,48)" fg:x="91768" fg:w="15"/><text x="90.2733%" y="255.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (497 samples, 0.49%)</title><rect x="89.5515%" y="469" width="0.4876%" height="15" fill="rgb(214,153,38)" fg:x="91287" fg:w="497"/><text x="89.8015%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (458 samples, 0.45%)</title><rect x="89.5898%" y="453" width="0.4493%" height="15" fill="rgb(243,101,7)" fg:x="91326" fg:w="458"/><text x="89.8398%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (140 samples, 0.14%)</title><rect x="89.9017%" y="437" width="0.1373%" height="15" fill="rgb(240,140,22)" fg:x="91644" fg:w="140"/><text x="90.1517%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (127 samples, 0.12%)</title><rect x="89.9145%" y="421" width="0.1246%" height="15" fill="rgb(235,114,2)" fg:x="91657" fg:w="127"/><text x="90.1645%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (127 samples, 0.12%)</title><rect x="89.9145%" y="405" width="0.1246%" height="15" fill="rgb(242,59,12)" fg:x="91657" fg:w="127"/><text x="90.1645%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (127 samples, 0.12%)</title><rect x="89.9145%" y="389" width="0.1246%" height="15" fill="rgb(252,134,9)" fg:x="91657" fg:w="127"/><text x="90.1645%" y="399.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="90.0390%" y="469" width="0.0147%" height="15" fill="rgb(236,4,44)" fg:x="91784" fg:w="15"/><text x="90.2890%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (15 samples, 0.01%)</title><rect x="90.3392%" y="437" width="0.0147%" height="15" fill="rgb(254,172,41)" fg:x="92090" fg:w="15"/><text x="90.5892%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (307 samples, 0.30%)</title><rect x="90.0538%" y="469" width="0.3012%" height="15" fill="rgb(244,63,20)" fg:x="91799" fg:w="307"/><text x="90.3038%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="90.3392%" y="453" width="0.0157%" height="15" fill="rgb(250,73,31)" fg:x="92090" fg:w="16"/><text x="90.5892%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (239 samples, 0.23%)</title><rect x="90.3853%" y="437" width="0.2345%" height="15" fill="rgb(241,38,36)" fg:x="92137" fg:w="239"/><text x="90.6353%" y="447.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="90.6257%" y="325" width="0.0118%" height="15" fill="rgb(245,211,2)" fg:x="92382" fg:w="12"/><text x="90.8757%" y="335.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="90.6433%" y="293" width="0.0147%" height="15" fill="rgb(206,120,28)" fg:x="92400" fg:w="15"/><text x="90.8933%" y="303.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="90.6943%" y="165" width="0.0147%" height="15" fill="rgb(211,59,34)" fg:x="92452" fg:w="15"/><text x="90.9443%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="90.6953%" y="149" width="0.0137%" height="15" fill="rgb(233,168,5)" fg:x="92453" fg:w="14"/><text x="90.9453%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (30 samples, 0.03%)</title><rect x="90.6894%" y="213" width="0.0294%" height="15" fill="rgb(234,33,13)" fg:x="92447" fg:w="30"/><text x="90.9394%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (30 samples, 0.03%)</title><rect x="90.6894%" y="197" width="0.0294%" height="15" fill="rgb(231,150,26)" fg:x="92447" fg:w="30"/><text x="90.9394%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (28 samples, 0.03%)</title><rect x="90.6914%" y="181" width="0.0275%" height="15" fill="rgb(217,191,4)" fg:x="92449" fg:w="28"/><text x="90.9414%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (41 samples, 0.04%)</title><rect x="90.6894%" y="229" width="0.0402%" height="15" fill="rgb(246,198,38)" fg:x="92447" fg:w="41"/><text x="90.9394%" y="239.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="90.7189%" y="213" width="0.0108%" height="15" fill="rgb(245,64,37)" fg:x="92477" fg:w="11"/><text x="90.9689%" y="223.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="90.7189%" y="197" width="0.0108%" height="15" fill="rgb(250,30,36)" fg:x="92477" fg:w="11"/><text x="90.9689%" y="207.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (11 samples, 0.01%)</title><rect x="90.7189%" y="181" width="0.0108%" height="15" fill="rgb(217,86,53)" fg:x="92477" fg:w="11"/><text x="90.9689%" y="191.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="90.7189%" y="165" width="0.0108%" height="15" fill="rgb(228,157,16)" fg:x="92477" fg:w="11"/><text x="90.9689%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (60 samples, 0.06%)</title><rect x="90.6796%" y="245" width="0.0589%" height="15" fill="rgb(217,59,31)" fg:x="92437" fg:w="60"/><text x="90.9296%" y="255.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (42 samples, 0.04%)</title><rect x="90.7679%" y="229" width="0.0412%" height="15" fill="rgb(237,138,41)" fg:x="92527" fg:w="42"/><text x="91.0179%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (489 samples, 0.48%)</title><rect x="90.6767%" y="277" width="0.4797%" height="15" fill="rgb(227,91,49)" fg:x="92434" fg:w="489"/><text x="90.9267%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (489 samples, 0.48%)</title><rect x="90.6767%" y="261" width="0.4797%" height="15" fill="rgb(247,21,44)" fg:x="92434" fg:w="489"/><text x="90.9267%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (426 samples, 0.42%)</title><rect x="90.7385%" y="245" width="0.4179%" height="15" fill="rgb(219,210,51)" fg:x="92497" fg:w="426"/><text x="90.9885%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (354 samples, 0.35%)</title><rect x="90.8091%" y="229" width="0.3473%" height="15" fill="rgb(209,140,6)" fg:x="92569" fg:w="354"/><text x="91.0591%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (354 samples, 0.35%)</title><rect x="90.8091%" y="213" width="0.3473%" height="15" fill="rgb(221,188,24)" fg:x="92569" fg:w="354"/><text x="91.0591%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (354 samples, 0.35%)</title><rect x="90.8091%" y="197" width="0.3473%" height="15" fill="rgb(232,154,20)" fg:x="92569" fg:w="354"/><text x="91.0591%" y="207.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (17 samples, 0.02%)</title><rect x="91.1652%" y="245" width="0.0167%" height="15" fill="rgb(244,137,50)" fg:x="92932" fg:w="17"/><text x="91.4152%" y="255.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (16 samples, 0.02%)</title><rect x="91.1662%" y="229" width="0.0157%" height="15" fill="rgb(225,185,43)" fg:x="92933" fg:w="16"/><text x="91.4162%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="91.1662%" y="213" width="0.0157%" height="15" fill="rgb(213,205,38)" fg:x="92933" fg:w="16"/><text x="91.4162%" y="223.50"></text></g><g><title>snmalloc::FreeListIter::take (13 samples, 0.01%)</title><rect x="91.1819%" y="245" width="0.0128%" height="15" fill="rgb(236,73,12)" fg:x="92949" fg:w="13"/><text x="91.4319%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (13 samples, 0.01%)</title><rect x="91.1819%" y="229" width="0.0128%" height="15" fill="rgb(235,219,13)" fg:x="92949" fg:w="13"/><text x="91.4319%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (42 samples, 0.04%)</title><rect x="91.1564%" y="277" width="0.0412%" height="15" fill="rgb(218,59,36)" fg:x="92923" fg:w="42"/><text x="91.4064%" y="287.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (35 samples, 0.03%)</title><rect x="91.1633%" y="261" width="0.0343%" height="15" fill="rgb(205,110,39)" fg:x="92930" fg:w="35"/><text x="91.4133%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (61 samples, 0.06%)</title><rect x="91.1986%" y="277" width="0.0598%" height="15" fill="rgb(218,206,42)" fg:x="92966" fg:w="61"/><text x="91.4486%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (61 samples, 0.06%)</title><rect x="91.1986%" y="261" width="0.0598%" height="15" fill="rgb(248,125,24)" fg:x="92966" fg:w="61"/><text x="91.4486%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (841 samples, 0.83%)</title><rect x="90.6404%" y="325" width="0.8250%" height="15" fill="rgb(242,28,27)" fg:x="92397" fg:w="841"/><text x="90.8904%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (841 samples, 0.83%)</title><rect x="90.6404%" y="309" width="0.8250%" height="15" fill="rgb(216,228,15)" fg:x="92397" fg:w="841"/><text x="90.8904%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (823 samples, 0.81%)</title><rect x="90.6580%" y="293" width="0.8074%" height="15" fill="rgb(235,116,46)" fg:x="92415" fg:w="823"/><text x="90.9080%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (211 samples, 0.21%)</title><rect x="91.2584%" y="277" width="0.2070%" height="15" fill="rgb(224,18,32)" fg:x="93027" fg:w="211"/><text x="91.5084%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (211 samples, 0.21%)</title><rect x="91.2584%" y="261" width="0.2070%" height="15" fill="rgb(252,5,12)" fg:x="93027" fg:w="211"/><text x="91.5084%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1,153 samples, 1.13%)</title><rect x="90.3549%" y="453" width="1.1311%" height="15" fill="rgb(251,36,5)" fg:x="92106" fg:w="1153"/><text x="90.6049%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (883 samples, 0.87%)</title><rect x="90.6198%" y="437" width="0.8662%" height="15" fill="rgb(217,53,14)" fg:x="92376" fg:w="883"/><text x="90.8698%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (883 samples, 0.87%)</title><rect x="90.6198%" y="421" width="0.8662%" height="15" fill="rgb(215,86,45)" fg:x="92376" fg:w="883"/><text x="90.8698%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (883 samples, 0.87%)</title><rect x="90.6198%" y="405" width="0.8662%" height="15" fill="rgb(242,169,11)" fg:x="92376" fg:w="883"/><text x="90.8698%" y="415.50"></text></g><g><title>alloc::alloc::alloc (879 samples, 0.86%)</title><rect x="90.6237%" y="389" width="0.8623%" height="15" fill="rgb(211,213,45)" fg:x="92380" fg:w="879"/><text x="90.8737%" y="399.50"></text></g><g><title>__rg_alloc (879 samples, 0.86%)</title><rect x="90.6237%" y="373" width="0.8623%" height="15" fill="rgb(205,88,11)" fg:x="92380" fg:w="879"/><text x="90.8737%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (879 samples, 0.86%)</title><rect x="90.6237%" y="357" width="0.8623%" height="15" fill="rgb(252,69,26)" fg:x="92380" fg:w="879"/><text x="90.8737%" y="367.50"></text></g><g><title>rust_alloc (877 samples, 0.86%)</title><rect x="90.6257%" y="341" width="0.8603%" height="15" fill="rgb(246,123,37)" fg:x="92382" fg:w="877"/><text x="90.8757%" y="351.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (21 samples, 0.02%)</title><rect x="91.4654%" y="325" width="0.0206%" height="15" fill="rgb(212,205,5)" fg:x="93238" fg:w="21"/><text x="91.7154%" y="335.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (1,158 samples, 1.14%)</title><rect x="90.3549%" y="469" width="1.1360%" height="15" fill="rgb(253,148,0)" fg:x="92106" fg:w="1158"/><text x="90.6049%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (15 samples, 0.01%)</title><rect x="91.5802%" y="373" width="0.0147%" height="15" fill="rgb(239,22,4)" fg:x="93355" fg:w="15"/><text x="91.8302%" y="383.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (125 samples, 0.12%)</title><rect x="91.5037%" y="453" width="0.1226%" height="15" fill="rgb(226,26,53)" fg:x="93277" fg:w="125"/><text x="91.7537%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (91 samples, 0.09%)</title><rect x="91.5370%" y="437" width="0.0893%" height="15" fill="rgb(225,229,45)" fg:x="93311" fg:w="91"/><text x="91.7870%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (48 samples, 0.05%)</title><rect x="91.5792%" y="421" width="0.0471%" height="15" fill="rgb(220,60,37)" fg:x="93354" fg:w="48"/><text x="91.8292%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (48 samples, 0.05%)</title><rect x="91.5792%" y="405" width="0.0471%" height="15" fill="rgb(217,180,35)" fg:x="93354" fg:w="48"/><text x="91.8292%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (48 samples, 0.05%)</title><rect x="91.5792%" y="389" width="0.0471%" height="15" fill="rgb(229,7,53)" fg:x="93354" fg:w="48"/><text x="91.8292%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="91.5949%" y="373" width="0.0314%" height="15" fill="rgb(254,137,3)" fg:x="93370" fg:w="32"/><text x="91.8449%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="91.6037%" y="357" width="0.0226%" height="15" fill="rgb(215,140,41)" fg:x="93379" fg:w="23"/><text x="91.8537%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.02%)</title><rect x="91.6037%" y="341" width="0.0226%" height="15" fill="rgb(250,80,15)" fg:x="93379" fg:w="23"/><text x="91.8537%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (15 samples, 0.01%)</title><rect x="91.6116%" y="325" width="0.0147%" height="15" fill="rgb(252,191,6)" fg:x="93387" fg:w="15"/><text x="91.8616%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (15 samples, 0.01%)</title><rect x="91.6116%" y="309" width="0.0147%" height="15" fill="rgb(246,217,18)" fg:x="93387" fg:w="15"/><text x="91.8616%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (15 samples, 0.01%)</title><rect x="91.6116%" y="293" width="0.0147%" height="15" fill="rgb(223,93,7)" fg:x="93387" fg:w="15"/><text x="91.8616%" y="303.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (516 samples, 0.51%)</title><rect x="91.6263%" y="453" width="0.5062%" height="15" fill="rgb(225,55,52)" fg:x="93402" fg:w="516"/><text x="91.8763%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="92.0913%" y="437" width="0.0412%" height="15" fill="rgb(240,31,24)" fg:x="93876" fg:w="42"/><text x="92.3413%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (35 samples, 0.03%)</title><rect x="92.0981%" y="421" width="0.0343%" height="15" fill="rgb(205,56,52)" fg:x="93883" fg:w="35"/><text x="92.3481%" y="431.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (655 samples, 0.64%)</title><rect x="91.4909%" y="469" width="0.6425%" height="15" fill="rgb(246,146,12)" fg:x="93264" fg:w="655"/><text x="91.7409%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,401 samples, 2.36%)</title><rect x="92.1335%" y="469" width="2.3554%" height="15" fill="rgb(239,84,36)" fg:x="93919" fg:w="2401"/><text x="92.3835%" y="479.50">_..</text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="94.5330%" y="277" width="0.0147%" height="15" fill="rgb(207,41,40)" fg:x="96365" fg:w="15"/><text x="94.7830%" y="287.50"></text></g><g><title>sizeclass_to_size (14 samples, 0.01%)</title><rect x="94.5594%" y="213" width="0.0137%" height="15" fill="rgb(241,179,25)" fg:x="96392" fg:w="14"/><text x="94.8094%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (14 samples, 0.01%)</title><rect x="94.5594%" y="197" width="0.0137%" height="15" fill="rgb(210,0,34)" fg:x="96392" fg:w="14"/><text x="94.8094%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (47 samples, 0.05%)</title><rect x="94.6791%" y="181" width="0.0461%" height="15" fill="rgb(225,217,29)" fg:x="96514" fg:w="47"/><text x="94.9291%" y="191.50"></text></g><g><title> (47 samples, 0.05%)</title><rect x="94.6791%" y="165" width="0.0461%" height="15" fill="rgb(216,191,38)" fg:x="96514" fg:w="47"/><text x="94.9291%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (168 samples, 0.16%)</title><rect x="94.5791%" y="213" width="0.1648%" height="15" fill="rgb(232,140,52)" fg:x="96412" fg:w="168"/><text x="94.8291%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (152 samples, 0.15%)</title><rect x="94.5948%" y="197" width="0.1491%" height="15" fill="rgb(223,158,51)" fg:x="96428" fg:w="152"/><text x="94.8448%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (14 samples, 0.01%)</title><rect x="94.7301%" y="181" width="0.0137%" height="15" fill="rgb(235,29,51)" fg:x="96566" fg:w="14"/><text x="94.9801%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (277 samples, 0.27%)</title><rect x="94.5477%" y="245" width="0.2717%" height="15" fill="rgb(215,181,18)" fg:x="96380" fg:w="277"/><text x="94.7977%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (277 samples, 0.27%)</title><rect x="94.5477%" y="229" width="0.2717%" height="15" fill="rgb(227,125,34)" fg:x="96380" fg:w="277"/><text x="94.7977%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (75 samples, 0.07%)</title><rect x="94.7458%" y="213" width="0.0736%" height="15" fill="rgb(230,197,49)" fg:x="96582" fg:w="75"/><text x="94.9958%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (279 samples, 0.27%)</title><rect x="94.5477%" y="277" width="0.2737%" height="15" fill="rgb(239,141,16)" fg:x="96380" fg:w="279"/><text x="94.7977%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (279 samples, 0.27%)</title><rect x="94.5477%" y="261" width="0.2737%" height="15" fill="rgb(225,105,43)" fg:x="96380" fg:w="279"/><text x="94.7977%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (305 samples, 0.30%)</title><rect x="94.5251%" y="293" width="0.2992%" height="15" fill="rgb(214,131,14)" fg:x="96357" fg:w="305"/><text x="94.7751%" y="303.50"></text></g><g><title>rust_dealloc (412 samples, 0.40%)</title><rect x="94.5006%" y="309" width="0.4042%" height="15" fill="rgb(229,177,11)" fg:x="96332" fg:w="412"/><text x="94.7506%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (82 samples, 0.08%)</title><rect x="94.8243%" y="293" width="0.0804%" height="15" fill="rgb(231,180,14)" fg:x="96662" fg:w="82"/><text x="95.0743%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (426 samples, 0.42%)</title><rect x="94.4888%" y="469" width="0.4179%" height="15" fill="rgb(232,88,2)" fg:x="96320" fg:w="426"/><text x="94.7388%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (426 samples, 0.42%)</title><rect x="94.4888%" y="453" width="0.4179%" height="15" fill="rgb(205,220,8)" fg:x="96320" fg:w="426"/><text x="94.7388%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (414 samples, 0.41%)</title><rect x="94.5006%" y="437" width="0.4061%" height="15" fill="rgb(225,23,53)" fg:x="96332" fg:w="414"/><text x="94.7506%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (414 samples, 0.41%)</title><rect x="94.5006%" y="421" width="0.4061%" height="15" fill="rgb(213,62,29)" fg:x="96332" fg:w="414"/><text x="94.7506%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (414 samples, 0.41%)</title><rect x="94.5006%" y="405" width="0.4061%" height="15" fill="rgb(227,75,7)" fg:x="96332" fg:w="414"/><text x="94.7506%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (414 samples, 0.41%)</title><rect x="94.5006%" y="389" width="0.4061%" height="15" fill="rgb(207,105,14)" fg:x="96332" fg:w="414"/><text x="94.7506%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (414 samples, 0.41%)</title><rect x="94.5006%" y="373" width="0.4061%" height="15" fill="rgb(245,62,29)" fg:x="96332" fg:w="414"/><text x="94.7506%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (414 samples, 0.41%)</title><rect x="94.5006%" y="357" width="0.4061%" height="15" fill="rgb(236,202,4)" fg:x="96332" fg:w="414"/><text x="94.7506%" y="367.50"></text></g><g><title>__rg_dealloc (414 samples, 0.41%)</title><rect x="94.5006%" y="341" width="0.4061%" height="15" fill="rgb(250,67,1)" fg:x="96332" fg:w="414"/><text x="94.7506%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (414 samples, 0.41%)</title><rect x="94.5006%" y="325" width="0.4061%" height="15" fill="rgb(253,115,44)" fg:x="96332" fg:w="414"/><text x="94.7506%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (67 samples, 0.07%)</title><rect x="94.9067%" y="453" width="0.0657%" height="15" fill="rgb(251,139,18)" fg:x="96746" fg:w="67"/><text x="95.1567%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (85 samples, 0.08%)</title><rect x="94.9067%" y="469" width="0.0834%" height="15" fill="rgb(218,22,32)" fg:x="96746" fg:w="85"/><text x="95.1567%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (18 samples, 0.02%)</title><rect x="94.9724%" y="453" width="0.0177%" height="15" fill="rgb(243,53,5)" fg:x="96813" fg:w="18"/><text x="95.2224%" y="463.50"></text></g><g><title>size_to_sizeclass (34 samples, 0.03%)</title><rect x="95.0421%" y="325" width="0.0334%" height="15" fill="rgb(227,56,16)" fg:x="96884" fg:w="34"/><text x="95.2921%" y="335.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="95.0754%" y="261" width="0.0186%" height="15" fill="rgb(245,53,0)" fg:x="96918" fg:w="19"/><text x="95.3254%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (27 samples, 0.03%)</title><rect x="95.1343%" y="213" width="0.0265%" height="15" fill="rgb(216,170,35)" fg:x="96978" fg:w="27"/><text x="95.3843%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="95.1372%" y="197" width="0.0235%" height="15" fill="rgb(211,200,8)" fg:x="96981" fg:w="24"/><text x="95.3872%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (68 samples, 0.07%)</title><rect x="95.1029%" y="261" width="0.0667%" height="15" fill="rgb(228,204,44)" fg:x="96946" fg:w="68"/><text x="95.3529%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (68 samples, 0.07%)</title><rect x="95.1029%" y="245" width="0.0667%" height="15" fill="rgb(214,121,17)" fg:x="96946" fg:w="68"/><text x="95.3529%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (65 samples, 0.06%)</title><rect x="95.1058%" y="229" width="0.0638%" height="15" fill="rgb(233,64,38)" fg:x="96949" fg:w="65"/><text x="95.3558%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (117 samples, 0.11%)</title><rect x="95.0754%" y="293" width="0.1148%" height="15" fill="rgb(253,54,19)" fg:x="96918" fg:w="117"/><text x="95.3254%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (117 samples, 0.11%)</title><rect x="95.0754%" y="277" width="0.1148%" height="15" fill="rgb(253,94,18)" fg:x="96918" fg:w="117"/><text x="95.3254%" y="287.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (21 samples, 0.02%)</title><rect x="95.1696%" y="261" width="0.0206%" height="15" fill="rgb(227,57,52)" fg:x="97014" fg:w="21"/><text x="95.4196%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (174 samples, 0.17%)</title><rect x="95.0284%" y="341" width="0.1707%" height="15" fill="rgb(230,228,50)" fg:x="96870" fg:w="174"/><text x="95.2784%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (126 samples, 0.12%)</title><rect x="95.0754%" y="325" width="0.1236%" height="15" fill="rgb(217,205,27)" fg:x="96918" fg:w="126"/><text x="95.3254%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (126 samples, 0.12%)</title><rect x="95.0754%" y="309" width="0.1236%" height="15" fill="rgb(252,71,50)" fg:x="96918" fg:w="126"/><text x="95.3254%" y="319.50"></text></g><g><title>rust_dealloc (191 samples, 0.19%)</title><rect x="95.0185%" y="357" width="0.1874%" height="15" fill="rgb(209,86,4)" fg:x="96860" fg:w="191"/><text x="95.2685%" y="367.50"></text></g><g><title>alloc::alloc::box_free (234 samples, 0.23%)</title><rect x="94.9901%" y="437" width="0.2296%" height="15" fill="rgb(229,94,0)" fg:x="96831" fg:w="234"/><text x="95.2401%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (219 samples, 0.21%)</title><rect x="95.0048%" y="421" width="0.2148%" height="15" fill="rgb(252,223,21)" fg:x="96846" fg:w="219"/><text x="95.2548%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (205 samples, 0.20%)</title><rect x="95.0185%" y="405" width="0.2011%" height="15" fill="rgb(230,210,4)" fg:x="96860" fg:w="205"/><text x="95.2685%" y="415.50"></text></g><g><title>__rg_dealloc (205 samples, 0.20%)</title><rect x="95.0185%" y="389" width="0.2011%" height="15" fill="rgb(240,149,38)" fg:x="96860" fg:w="205"/><text x="95.2685%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (205 samples, 0.20%)</title><rect x="95.0185%" y="373" width="0.2011%" height="15" fill="rgb(254,105,20)" fg:x="96860" fg:w="205"/><text x="95.2685%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (14 samples, 0.01%)</title><rect x="95.2059%" y="357" width="0.0137%" height="15" fill="rgb(253,87,46)" fg:x="97051" fg:w="14"/><text x="95.4559%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (248 samples, 0.24%)</title><rect x="94.9901%" y="453" width="0.2433%" height="15" fill="rgb(253,116,33)" fg:x="96831" fg:w="248"/><text x="95.2401%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="95.2196%" y="437" width="0.0137%" height="15" fill="rgb(229,198,5)" fg:x="97065" fg:w="14"/><text x="95.4696%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="95.2196%" y="421" width="0.0137%" height="15" fill="rgb(242,38,37)" fg:x="97065" fg:w="14"/><text x="95.4696%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (249 samples, 0.24%)</title><rect x="94.9901%" y="469" width="0.2443%" height="15" fill="rgb(242,69,53)" fg:x="96831" fg:w="249"/><text x="95.2401%" y="479.50"></text></g><g><title>core::time::Duration::as_nanos (25 samples, 0.02%)</title><rect x="95.3325%" y="453" width="0.0245%" height="15" fill="rgb(249,80,16)" fg:x="97180" fg:w="25"/><text x="95.5825%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (188 samples, 0.18%)</title><rect x="95.5169%" y="405" width="0.1844%" height="15" fill="rgb(206,128,11)" fg:x="97368" fg:w="188"/><text x="95.7669%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (188 samples, 0.18%)</title><rect x="95.5169%" y="389" width="0.1844%" height="15" fill="rgb(212,35,20)" fg:x="97368" fg:w="188"/><text x="95.7669%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (181 samples, 0.18%)</title><rect x="95.5237%" y="373" width="0.1776%" height="15" fill="rgb(236,79,13)" fg:x="97375" fg:w="181"/><text x="95.7737%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (181 samples, 0.18%)</title><rect x="95.5237%" y="357" width="0.1776%" height="15" fill="rgb(233,123,3)" fg:x="97375" fg:w="181"/><text x="95.7737%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (181 samples, 0.18%)</title><rect x="95.5237%" y="341" width="0.1776%" height="15" fill="rgb(214,93,52)" fg:x="97375" fg:w="181"/><text x="95.7737%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (93 samples, 0.09%)</title><rect x="95.6101%" y="325" width="0.0912%" height="15" fill="rgb(251,37,40)" fg:x="97463" fg:w="93"/><text x="95.8601%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (419 samples, 0.41%)</title><rect x="95.3570%" y="437" width="0.4110%" height="15" fill="rgb(227,80,54)" fg:x="97205" fg:w="419"/><text x="95.6070%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (413 samples, 0.41%)</title><rect x="95.3629%" y="421" width="0.4051%" height="15" fill="rgb(254,48,11)" fg:x="97211" fg:w="413"/><text x="95.6129%" y="431.50"></text></g><g><title>core::time::Duration::new (68 samples, 0.07%)</title><rect x="95.7013%" y="405" width="0.0667%" height="15" fill="rgb(235,193,26)" fg:x="97556" fg:w="68"/><text x="95.9513%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (461 samples, 0.45%)</title><rect x="95.3570%" y="453" width="0.4522%" height="15" fill="rgb(229,99,21)" fg:x="97205" fg:w="461"/><text x="95.6070%" y="463.50"></text></g><g><title>tremor_common::time::nanotime (42 samples, 0.04%)</title><rect x="95.7680%" y="437" width="0.0412%" height="15" fill="rgb(211,140,41)" fg:x="97624" fg:w="42"/><text x="96.0180%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (2,327 samples, 2.28%)</title><rect x="95.2344%" y="469" width="2.2828%" height="15" fill="rgb(240,227,30)" fg:x="97080" fg:w="2327"/><text x="95.4844%" y="479.50">t..</text></g><g><title>std::time::SystemTime::now (1,741 samples, 1.71%)</title><rect x="95.8092%" y="453" width="1.7079%" height="15" fill="rgb(215,224,45)" fg:x="97666" fg:w="1741"/><text x="96.0592%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,741 samples, 1.71%)</title><rect x="95.8092%" y="437" width="1.7079%" height="15" fill="rgb(206,123,31)" fg:x="97666" fg:w="1741"/><text x="96.0592%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (1,741 samples, 1.71%)</title><rect x="95.8092%" y="421" width="1.7079%" height="15" fill="rgb(210,138,16)" fg:x="97666" fg:w="1741"/><text x="96.0592%" y="431.50"></text></g><g><title>__clock_gettime_2 (1,482 samples, 1.45%)</title><rect x="96.0633%" y="405" width="1.4538%" height="15" fill="rgb(228,57,28)" fg:x="97925" fg:w="1482"/><text x="96.3133%" y="415.50"></text></g><g><title>__vdso_clock_gettime (1,386 samples, 1.36%)</title><rect x="96.1575%" y="389" width="1.3596%" height="15" fill="rgb(242,170,10)" fg:x="98021" fg:w="1386"/><text x="96.4075%" y="399.50"></text></g><g><title>[[vdso]] (846 samples, 0.83%)</title><rect x="96.6872%" y="373" width="0.8299%" height="15" fill="rgb(228,214,39)" fg:x="98561" fg:w="846"/><text x="96.9372%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (24 samples, 0.02%)</title><rect x="97.5318%" y="405" width="0.0235%" height="15" fill="rgb(218,179,33)" fg:x="99422" fg:w="24"/><text x="97.7818%" y="415.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (19 samples, 0.02%)</title><rect x="97.5367%" y="389" width="0.0186%" height="15" fill="rgb(235,193,39)" fg:x="99427" fg:w="19"/><text x="97.7867%" y="399.50"></text></g><g><title>core::mem::drop (29 samples, 0.03%)</title><rect x="97.5554%" y="405" width="0.0284%" height="15" fill="rgb(219,221,36)" fg:x="99446" fg:w="29"/><text x="97.8054%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (29 samples, 0.03%)</title><rect x="97.5554%" y="389" width="0.0284%" height="15" fill="rgb(248,218,19)" fg:x="99446" fg:w="29"/><text x="97.8054%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="97.5554%" y="373" width="0.0284%" height="15" fill="rgb(205,50,9)" fg:x="99446" fg:w="29"/><text x="97.8054%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (29 samples, 0.03%)</title><rect x="97.5554%" y="357" width="0.0284%" height="15" fill="rgb(238,81,28)" fg:x="99446" fg:w="29"/><text x="97.8054%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (26 samples, 0.03%)</title><rect x="97.5583%" y="341" width="0.0255%" height="15" fill="rgb(235,110,19)" fg:x="99449" fg:w="26"/><text x="97.8083%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (26 samples, 0.03%)</title><rect x="97.5583%" y="325" width="0.0255%" height="15" fill="rgb(214,7,14)" fg:x="99449" fg:w="26"/><text x="97.8083%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (18 samples, 0.02%)</title><rect x="97.5662%" y="309" width="0.0177%" height="15" fill="rgb(211,77,3)" fg:x="99457" fg:w="18"/><text x="97.8162%" y="319.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="97.5662%" y="293" width="0.0177%" height="15" fill="rgb(229,5,9)" fg:x="99457" fg:w="18"/><text x="97.8162%" y="303.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="97.5691%" y="277" width="0.0147%" height="15" fill="rgb(225,90,11)" fg:x="99460" fg:w="15"/><text x="97.8191%" y="287.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (83 samples, 0.08%)</title><rect x="97.5171%" y="469" width="0.0814%" height="15" fill="rgb(242,56,8)" fg:x="99407" fg:w="83"/><text x="97.7671%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (68 samples, 0.07%)</title><rect x="97.5318%" y="453" width="0.0667%" height="15" fill="rgb(249,212,39)" fg:x="99422" fg:w="68"/><text x="97.7818%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (68 samples, 0.07%)</title><rect x="97.5318%" y="437" width="0.0667%" height="15" fill="rgb(236,90,9)" fg:x="99422" fg:w="68"/><text x="97.7818%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.07%)</title><rect x="97.5318%" y="421" width="0.0667%" height="15" fill="rgb(206,88,35)" fg:x="99422" fg:w="68"/><text x="97.7818%" y="431.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="97.5838%" y="405" width="0.0147%" height="15" fill="rgb(205,126,30)" fg:x="99475" fg:w="15"/><text x="97.8338%" y="415.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (13 samples, 0.01%)</title><rect x="97.5985%" y="469" width="0.0128%" height="15" fill="rgb(230,176,12)" fg:x="99490" fg:w="13"/><text x="97.8485%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,954 samples, 8.78%)</title><rect x="88.8285%" y="485" width="8.7838%" height="15" fill="rgb(243,19,9)" fg:x="90550" fg:w="8954"/><text x="89.0785%" y="495.50">tremor_runti..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,995 samples, 8.82%)</title><rect x="88.7893%" y="517" width="8.8240%" height="15" fill="rgb(245,171,17)" fg:x="90510" fg:w="8995"/><text x="89.0393%" y="527.50">&lt;async_std::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,995 samples, 8.82%)</title><rect x="88.7893%" y="501" width="8.8240%" height="15" fill="rgb(227,52,21)" fg:x="90510" fg:w="8995"/><text x="89.0393%" y="511.50">&lt;core::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,086 samples, 8.91%)</title><rect x="88.7010%" y="629" width="8.9133%" height="15" fill="rgb(238,69,14)" fg:x="90420" fg:w="9086"/><text x="88.9510%" y="639.50">&lt;core::future..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,081 samples, 8.91%)</title><rect x="88.7059%" y="613" width="8.9084%" height="15" fill="rgb(241,156,39)" fg:x="90425" fg:w="9081"/><text x="88.9559%" y="623.50">async_executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,055 samples, 8.88%)</title><rect x="88.7314%" y="597" width="8.8829%" height="15" fill="rgb(212,227,28)" fg:x="90451" fg:w="9055"/><text x="88.9814%" y="607.50">&lt;async_std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,055 samples, 8.88%)</title><rect x="88.7314%" y="581" width="8.8829%" height="15" fill="rgb(209,118,27)" fg:x="90451" fg:w="9055"/><text x="88.9814%" y="591.50">async_std::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,053 samples, 8.88%)</title><rect x="88.7333%" y="565" width="8.8809%" height="15" fill="rgb(226,102,5)" fg:x="90453" fg:w="9053"/><text x="88.9833%" y="575.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,025 samples, 8.85%)</title><rect x="88.7608%" y="549" width="8.8534%" height="15" fill="rgb(223,34,3)" fg:x="90481" fg:w="9025"/><text x="89.0108%" y="559.50">std::thread::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,997 samples, 8.83%)</title><rect x="88.7883%" y="533" width="8.8260%" height="15" fill="rgb(221,81,38)" fg:x="90509" fg:w="8997"/><text x="89.0383%" y="543.50">async_std::t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,087 samples, 8.91%)</title><rect x="88.7010%" y="645" width="8.9142%" height="15" fill="rgb(236,219,28)" fg:x="90420" fg:w="9087"/><text x="88.9510%" y="655.50">&lt;core::pin::P..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (20 samples, 0.02%)</title><rect x="97.6152%" y="645" width="0.0196%" height="15" fill="rgb(213,200,14)" fg:x="99507" fg:w="20"/><text x="97.8652%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.02%)</title><rect x="97.6162%" y="629" width="0.0186%" height="15" fill="rgb(240,33,19)" fg:x="99508" fg:w="19"/><text x="97.8662%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.02%)</title><rect x="97.6162%" y="613" width="0.0186%" height="15" fill="rgb(233,113,27)" fg:x="99508" fg:w="19"/><text x="97.8662%" y="623.50"></text></g><g><title>parking::Unparker::unpark (20 samples, 0.02%)</title><rect x="97.6388%" y="549" width="0.0196%" height="15" fill="rgb(220,221,18)" fg:x="99531" fg:w="20"/><text x="97.8888%" y="559.50"></text></g><g><title>parking::Inner::unpark (17 samples, 0.02%)</title><rect x="97.6417%" y="533" width="0.0167%" height="15" fill="rgb(238,92,8)" fg:x="99534" fg:w="17"/><text x="97.8917%" y="543.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (24 samples, 0.02%)</title><rect x="97.6368%" y="565" width="0.0235%" height="15" fill="rgb(222,164,16)" fg:x="99529" fg:w="24"/><text x="97.8868%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (26 samples, 0.03%)</title><rect x="97.6368%" y="597" width="0.0255%" height="15" fill="rgb(241,119,3)" fg:x="99529" fg:w="26"/><text x="97.8868%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (26 samples, 0.03%)</title><rect x="97.6368%" y="581" width="0.0255%" height="15" fill="rgb(241,44,8)" fg:x="99529" fg:w="26"/><text x="97.8868%" y="591.50"></text></g><g><title>async_executor::State::notify (29 samples, 0.03%)</title><rect x="97.6348%" y="613" width="0.0284%" height="15" fill="rgb(230,36,40)" fg:x="99527" fg:w="29"/><text x="97.8848%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (36 samples, 0.04%)</title><rect x="97.6348%" y="629" width="0.0353%" height="15" fill="rgb(243,16,36)" fg:x="99527" fg:w="36"/><text x="97.8848%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (38 samples, 0.04%)</title><rect x="97.6348%" y="645" width="0.0373%" height="15" fill="rgb(231,4,26)" fg:x="99527" fg:w="38"/><text x="97.8848%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (9,268 samples, 9.09%)</title><rect x="88.6617%" y="677" width="9.0918%" height="15" fill="rgb(240,9,31)" fg:x="90380" fg:w="9268"/><text x="88.9117%" y="687.50">async_task::r..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,257 samples, 9.08%)</title><rect x="88.6725%" y="661" width="9.0810%" height="15" fill="rgb(207,173,15)" fg:x="90391" fg:w="9257"/><text x="88.9225%" y="671.50">async_task::r..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (83 samples, 0.08%)</title><rect x="97.6721%" y="645" width="0.0814%" height="15" fill="rgb(224,192,53)" fg:x="99565" fg:w="83"/><text x="97.9221%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (83 samples, 0.08%)</title><rect x="97.6721%" y="629" width="0.0814%" height="15" fill="rgb(223,67,28)" fg:x="99565" fg:w="83"/><text x="97.9221%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (12,263 samples, 12.03%)</title><rect x="85.7296%" y="741" width="12.0299%" height="15" fill="rgb(211,20,47)" fg:x="87391" fg:w="12263"/><text x="85.9796%" y="751.50">async_executor::Ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,260 samples, 12.03%)</title><rect x="85.7325%" y="725" width="12.0269%" height="15" fill="rgb(240,228,2)" fg:x="87394" fg:w="12260"/><text x="85.9825%" y="735.50">&lt;futures_lite::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,260 samples, 12.03%)</title><rect x="85.7325%" y="709" width="12.0269%" height="15" fill="rgb(248,151,12)" fg:x="87394" fg:w="12260"/><text x="85.9825%" y="719.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (12,259 samples, 12.03%)</title><rect x="85.7335%" y="693" width="12.0259%" height="15" fill="rgb(244,8,39)" fg:x="87395" fg:w="12259"/><text x="85.9835%" y="703.50">async_executor::Ex..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.01%)</title><rect x="97.8212%" y="469" width="0.0118%" height="15" fill="rgb(222,26,8)" fg:x="99717" fg:w="12"/><text x="98.0712%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="97.8193%" y="533" width="0.0147%" height="15" fill="rgb(213,106,44)" fg:x="99715" fg:w="15"/><text x="98.0693%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.01%)</title><rect x="97.8193%" y="517" width="0.0147%" height="15" fill="rgb(214,129,20)" fg:x="99715" fg:w="15"/><text x="98.0693%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.01%)</title><rect x="97.8193%" y="501" width="0.0147%" height="15" fill="rgb(212,32,13)" fg:x="99715" fg:w="15"/><text x="98.0693%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.01%)</title><rect x="97.8193%" y="485" width="0.0147%" height="15" fill="rgb(208,168,33)" fg:x="99715" fg:w="15"/><text x="98.0693%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (15 samples, 0.01%)</title><rect x="97.8448%" y="501" width="0.0147%" height="15" fill="rgb(231,207,8)" fg:x="99741" fg:w="15"/><text x="98.0948%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (15 samples, 0.01%)</title><rect x="97.8448%" y="485" width="0.0147%" height="15" fill="rgb(235,219,23)" fg:x="99741" fg:w="15"/><text x="98.0948%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="97.8448%" y="469" width="0.0147%" height="15" fill="rgb(226,216,26)" fg:x="99741" fg:w="15"/><text x="98.0948%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="97.8448%" y="453" width="0.0147%" height="15" fill="rgb(239,137,16)" fg:x="99741" fg:w="15"/><text x="98.0948%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (56 samples, 0.05%)</title><rect x="97.8379%" y="517" width="0.0549%" height="15" fill="rgb(207,12,36)" fg:x="99734" fg:w="56"/><text x="98.0879%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.03%)</title><rect x="97.8595%" y="501" width="0.0334%" height="15" fill="rgb(210,214,24)" fg:x="99756" fg:w="34"/><text x="98.1095%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.03%)</title><rect x="97.8595%" y="485" width="0.0334%" height="15" fill="rgb(206,56,30)" fg:x="99756" fg:w="34"/><text x="98.1095%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (25 samples, 0.02%)</title><rect x="97.8977%" y="501" width="0.0245%" height="15" fill="rgb(228,143,26)" fg:x="99795" fg:w="25"/><text x="98.1477%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (25 samples, 0.02%)</title><rect x="97.8977%" y="485" width="0.0245%" height="15" fill="rgb(216,218,46)" fg:x="99795" fg:w="25"/><text x="98.1477%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (25 samples, 0.02%)</title><rect x="97.8977%" y="469" width="0.0245%" height="15" fill="rgb(206,6,19)" fg:x="99795" fg:w="25"/><text x="98.1477%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="97.8977%" y="453" width="0.0245%" height="15" fill="rgb(239,177,51)" fg:x="99795" fg:w="25"/><text x="98.1477%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (100 samples, 0.10%)</title><rect x="97.8340%" y="533" width="0.0981%" height="15" fill="rgb(216,55,25)" fg:x="99730" fg:w="100"/><text x="98.0840%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (40 samples, 0.04%)</title><rect x="97.8928%" y="517" width="0.0392%" height="15" fill="rgb(231,163,29)" fg:x="99790" fg:w="40"/><text x="98.1428%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.01%)</title><rect x="97.9331%" y="469" width="0.0137%" height="15" fill="rgb(232,149,50)" fg:x="99831" fg:w="14"/><text x="98.1831%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="97.9331%" y="453" width="0.0137%" height="15" fill="rgb(223,142,48)" fg:x="99831" fg:w="14"/><text x="98.1831%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="97.9321%" y="533" width="0.0412%" height="15" fill="rgb(245,83,23)" fg:x="99830" fg:w="42"/><text x="98.1821%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="97.9321%" y="517" width="0.0412%" height="15" fill="rgb(224,63,2)" fg:x="99830" fg:w="42"/><text x="98.1821%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (42 samples, 0.04%)</title><rect x="97.9321%" y="501" width="0.0412%" height="15" fill="rgb(218,65,53)" fg:x="99830" fg:w="42"/><text x="98.1821%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (42 samples, 0.04%)</title><rect x="97.9321%" y="485" width="0.0412%" height="15" fill="rgb(221,84,29)" fg:x="99830" fg:w="42"/><text x="98.1821%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (27 samples, 0.03%)</title><rect x="97.9468%" y="469" width="0.0265%" height="15" fill="rgb(234,0,32)" fg:x="99845" fg:w="27"/><text x="98.1968%" y="479.50"></text></g><g><title>__GI___pthread_rwlock_unlock (27 samples, 0.03%)</title><rect x="97.9468%" y="453" width="0.0265%" height="15" fill="rgb(206,20,16)" fg:x="99845" fg:w="27"/><text x="98.1968%" y="463.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (25 samples, 0.02%)</title><rect x="97.9831%" y="485" width="0.0245%" height="15" fill="rgb(244,172,18)" fg:x="99882" fg:w="25"/><text x="98.2331%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (215 samples, 0.21%)</title><rect x="97.8144%" y="549" width="0.2109%" height="15" fill="rgb(254,133,1)" fg:x="99710" fg:w="215"/><text x="98.0644%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (44 samples, 0.04%)</title><rect x="97.9821%" y="533" width="0.0432%" height="15" fill="rgb(222,206,41)" fg:x="99881" fg:w="44"/><text x="98.2321%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (44 samples, 0.04%)</title><rect x="97.9821%" y="517" width="0.0432%" height="15" fill="rgb(212,3,42)" fg:x="99881" fg:w="44"/><text x="98.2321%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (44 samples, 0.04%)</title><rect x="97.9821%" y="501" width="0.0432%" height="15" fill="rgb(241,11,4)" fg:x="99881" fg:w="44"/><text x="98.2321%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="98.0076%" y="485" width="0.0177%" height="15" fill="rgb(205,19,26)" fg:x="99907" fg:w="18"/><text x="98.2576%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="98.0076%" y="469" width="0.0177%" height="15" fill="rgb(210,179,32)" fg:x="99907" fg:w="18"/><text x="98.2576%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (25 samples, 0.02%)</title><rect x="98.0341%" y="533" width="0.0245%" height="15" fill="rgb(227,116,49)" fg:x="99934" fg:w="25"/><text x="98.2841%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="98.0341%" y="517" width="0.0245%" height="15" fill="rgb(211,146,6)" fg:x="99934" fg:w="25"/><text x="98.2841%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="98.0351%" y="501" width="0.0235%" height="15" fill="rgb(219,44,39)" fg:x="99935" fg:w="24"/><text x="98.2851%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="98.0351%" y="485" width="0.0235%" height="15" fill="rgb(234,128,11)" fg:x="99935" fg:w="24"/><text x="98.2851%" y="495.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="98.0351%" y="469" width="0.0235%" height="15" fill="rgb(220,183,53)" fg:x="99935" fg:w="24"/><text x="98.2851%" y="479.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (283 samples, 0.28%)</title><rect x="97.8006%" y="661" width="0.2776%" height="15" fill="rgb(213,219,32)" fg:x="99696" fg:w="283"/><text x="98.0506%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (281 samples, 0.28%)</title><rect x="97.8026%" y="645" width="0.2757%" height="15" fill="rgb(232,156,16)" fg:x="99698" fg:w="281"/><text x="98.0526%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (281 samples, 0.28%)</title><rect x="97.8026%" y="629" width="0.2757%" height="15" fill="rgb(246,135,34)" fg:x="99698" fg:w="281"/><text x="98.0526%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (275 samples, 0.27%)</title><rect x="97.8085%" y="613" width="0.2698%" height="15" fill="rgb(241,99,0)" fg:x="99704" fg:w="275"/><text x="98.0585%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (273 samples, 0.27%)</title><rect x="97.8104%" y="597" width="0.2678%" height="15" fill="rgb(222,103,45)" fg:x="99706" fg:w="273"/><text x="98.0604%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (272 samples, 0.27%)</title><rect x="97.8114%" y="581" width="0.2668%" height="15" fill="rgb(212,57,4)" fg:x="99707" fg:w="272"/><text x="98.0614%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (270 samples, 0.26%)</title><rect x="97.8134%" y="565" width="0.2649%" height="15" fill="rgb(215,68,47)" fg:x="99709" fg:w="270"/><text x="98.0634%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (54 samples, 0.05%)</title><rect x="98.0253%" y="549" width="0.0530%" height="15" fill="rgb(230,84,2)" fg:x="99925" fg:w="54"/><text x="98.2753%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="98.0586%" y="533" width="0.0196%" height="15" fill="rgb(220,102,14)" fg:x="99959" fg:w="20"/><text x="98.3086%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="98.0596%" y="517" width="0.0186%" height="15" fill="rgb(240,10,32)" fg:x="99960" fg:w="19"/><text x="98.3096%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (19 samples, 0.02%)</title><rect x="98.0596%" y="501" width="0.0186%" height="15" fill="rgb(215,47,27)" fg:x="99960" fg:w="19"/><text x="98.3096%" y="511.50"></text></g><g><title>__GI___pthread_mutex_lock (19 samples, 0.02%)</title><rect x="98.0596%" y="485" width="0.0186%" height="15" fill="rgb(233,188,43)" fg:x="99960" fg:w="19"/><text x="98.3096%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="98.1185%" y="597" width="0.0147%" height="15" fill="rgb(253,190,1)" fg:x="100020" fg:w="15"/><text x="98.3685%" y="607.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="98.1185%" y="581" width="0.0147%" height="15" fill="rgb(206,114,52)" fg:x="100020" fg:w="15"/><text x="98.3685%" y="591.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="98.1185%" y="565" width="0.0147%" height="15" fill="rgb(233,120,37)" fg:x="100020" fg:w="15"/><text x="98.3685%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (20 samples, 0.02%)</title><rect x="98.1145%" y="613" width="0.0196%" height="15" fill="rgb(214,52,39)" fg:x="100016" fg:w="20"/><text x="98.3645%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (29 samples, 0.03%)</title><rect x="98.1342%" y="613" width="0.0284%" height="15" fill="rgb(223,80,29)" fg:x="100036" fg:w="29"/><text x="98.3842%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (26 samples, 0.03%)</title><rect x="98.1371%" y="597" width="0.0255%" height="15" fill="rgb(230,101,40)" fg:x="100039" fg:w="26"/><text x="98.3871%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="98.1371%" y="581" width="0.0255%" height="15" fill="rgb(219,211,8)" fg:x="100039" fg:w="26"/><text x="98.3871%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.02%)</title><rect x="98.1381%" y="565" width="0.0245%" height="15" fill="rgb(252,126,28)" fg:x="100040" fg:w="25"/><text x="98.3881%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="98.1391%" y="549" width="0.0235%" height="15" fill="rgb(215,56,38)" fg:x="100041" fg:w="24"/><text x="98.3891%" y="559.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="98.1391%" y="533" width="0.0235%" height="15" fill="rgb(249,55,44)" fg:x="100041" fg:w="24"/><text x="98.3891%" y="543.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (126 samples, 0.12%)</title><rect x="98.1028%" y="629" width="0.1236%" height="15" fill="rgb(220,221,32)" fg:x="100004" fg:w="126"/><text x="98.3528%" y="639.50"></text></g><g><title>event_listener::Inner::lock (58 samples, 0.06%)</title><rect x="98.1695%" y="613" width="0.0569%" height="15" fill="rgb(212,216,41)" fg:x="100072" fg:w="58"/><text x="98.4195%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.06%)</title><rect x="98.1695%" y="597" width="0.0569%" height="15" fill="rgb(228,213,43)" fg:x="100072" fg:w="58"/><text x="98.4195%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (56 samples, 0.05%)</title><rect x="98.1714%" y="581" width="0.0549%" height="15" fill="rgb(211,31,26)" fg:x="100074" fg:w="56"/><text x="98.4214%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="98.1734%" y="565" width="0.0530%" height="15" fill="rgb(229,202,19)" fg:x="100076" fg:w="54"/><text x="98.4234%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="98.1734%" y="549" width="0.0530%" height="15" fill="rgb(229,105,46)" fg:x="100076" fg:w="54"/><text x="98.4234%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (60 samples, 0.06%)</title><rect x="98.2264%" y="629" width="0.0589%" height="15" fill="rgb(235,108,1)" fg:x="100130" fg:w="60"/><text x="98.4764%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (60 samples, 0.06%)</title><rect x="98.2264%" y="613" width="0.0589%" height="15" fill="rgb(245,111,35)" fg:x="100130" fg:w="60"/><text x="98.4764%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (36 samples, 0.04%)</title><rect x="98.2499%" y="597" width="0.0353%" height="15" fill="rgb(219,185,31)" fg:x="100154" fg:w="36"/><text x="98.4999%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (34 samples, 0.03%)</title><rect x="98.2519%" y="581" width="0.0334%" height="15" fill="rgb(214,4,43)" fg:x="100156" fg:w="34"/><text x="98.5019%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (34 samples, 0.03%)</title><rect x="98.2519%" y="565" width="0.0334%" height="15" fill="rgb(235,227,40)" fg:x="100156" fg:w="34"/><text x="98.5019%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.03%)</title><rect x="98.2519%" y="549" width="0.0334%" height="15" fill="rgb(230,88,30)" fg:x="100156" fg:w="34"/><text x="98.5019%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (498 samples, 0.49%)</title><rect x="97.7977%" y="693" width="0.4885%" height="15" fill="rgb(216,217,1)" fg:x="99693" fg:w="498"/><text x="98.0477%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (496 samples, 0.49%)</title><rect x="97.7996%" y="677" width="0.4866%" height="15" fill="rgb(248,139,50)" fg:x="99695" fg:w="496"/><text x="98.0496%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (212 samples, 0.21%)</title><rect x="98.0782%" y="661" width="0.2080%" height="15" fill="rgb(233,1,21)" fg:x="99979" fg:w="212"/><text x="98.3282%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (207 samples, 0.20%)</title><rect x="98.0831%" y="645" width="0.2031%" height="15" fill="rgb(215,183,12)" fg:x="99984" fg:w="207"/><text x="98.3331%" y="655.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,813 samples, 12.57%)</title><rect x="85.7227%" y="773" width="12.5694%" height="15" fill="rgb(229,104,42)" fg:x="87384" fg:w="12813"/><text x="85.9727%" y="783.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,808 samples, 12.56%)</title><rect x="85.7276%" y="757" width="12.5645%" height="15" fill="rgb(243,34,48)" fg:x="87389" fg:w="12808"/><text x="85.9776%" y="767.50">&lt;core::future::from..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (543 samples, 0.53%)</title><rect x="97.7594%" y="741" width="0.5327%" height="15" fill="rgb(239,11,44)" fg:x="99654" fg:w="543"/><text x="98.0094%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (509 samples, 0.50%)</title><rect x="97.7928%" y="725" width="0.4993%" height="15" fill="rgb(231,98,35)" fg:x="99688" fg:w="509"/><text x="98.0428%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (508 samples, 0.50%)</title><rect x="97.7938%" y="709" width="0.4983%" height="15" fill="rgb(233,28,25)" fg:x="99689" fg:w="508"/><text x="98.0438%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (80 samples, 0.08%)</title><rect x="98.3098%" y="773" width="0.0785%" height="15" fill="rgb(234,123,11)" fg:x="100215" fg:w="80"/><text x="98.5598%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (80 samples, 0.08%)</title><rect x="98.3098%" y="757" width="0.0785%" height="15" fill="rgb(220,69,3)" fg:x="100215" fg:w="80"/><text x="98.5598%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (80 samples, 0.08%)</title><rect x="98.3098%" y="741" width="0.0785%" height="15" fill="rgb(214,64,36)" fg:x="100215" fg:w="80"/><text x="98.5598%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (75 samples, 0.07%)</title><rect x="98.3147%" y="725" width="0.0736%" height="15" fill="rgb(211,138,32)" fg:x="100220" fg:w="75"/><text x="98.5647%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (75 samples, 0.07%)</title><rect x="98.3147%" y="709" width="0.0736%" height="15" fill="rgb(213,118,47)" fg:x="100220" fg:w="75"/><text x="98.5647%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (12 samples, 0.01%)</title><rect x="98.4088%" y="533" width="0.0118%" height="15" fill="rgb(243,124,49)" fg:x="100316" fg:w="12"/><text x="98.6588%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (12 samples, 0.01%)</title><rect x="98.4088%" y="517" width="0.0118%" height="15" fill="rgb(221,30,28)" fg:x="100316" fg:w="12"/><text x="98.6588%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (15 samples, 0.01%)</title><rect x="98.4069%" y="581" width="0.0147%" height="15" fill="rgb(246,37,13)" fg:x="100314" fg:w="15"/><text x="98.6569%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (13 samples, 0.01%)</title><rect x="98.4088%" y="565" width="0.0128%" height="15" fill="rgb(249,66,14)" fg:x="100316" fg:w="13"/><text x="98.6588%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (13 samples, 0.01%)</title><rect x="98.4088%" y="549" width="0.0128%" height="15" fill="rgb(213,166,5)" fg:x="100316" fg:w="13"/><text x="98.6588%" y="559.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="98.4049%" y="597" width="0.0177%" height="15" fill="rgb(221,66,24)" fg:x="100312" fg:w="18"/><text x="98.6549%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (19 samples, 0.02%)</title><rect x="98.4049%" y="725" width="0.0186%" height="15" fill="rgb(210,132,17)" fg:x="100312" fg:w="19"/><text x="98.6549%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="98.4049%" y="709" width="0.0186%" height="15" fill="rgb(243,202,5)" fg:x="100312" fg:w="19"/><text x="98.6549%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (19 samples, 0.02%)</title><rect x="98.4049%" y="693" width="0.0186%" height="15" fill="rgb(233,70,48)" fg:x="100312" fg:w="19"/><text x="98.6549%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (19 samples, 0.02%)</title><rect x="98.4049%" y="677" width="0.0186%" height="15" fill="rgb(238,41,26)" fg:x="100312" fg:w="19"/><text x="98.6549%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="98.4049%" y="661" width="0.0186%" height="15" fill="rgb(241,19,31)" fg:x="100312" fg:w="19"/><text x="98.6549%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="98.4049%" y="645" width="0.0186%" height="15" fill="rgb(214,76,10)" fg:x="100312" fg:w="19"/><text x="98.6549%" y="655.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="98.4049%" y="629" width="0.0186%" height="15" fill="rgb(254,202,22)" fg:x="100312" fg:w="19"/><text x="98.6549%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="98.4049%" y="613" width="0.0186%" height="15" fill="rgb(214,72,24)" fg:x="100312" fg:w="19"/><text x="98.6549%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="98.4049%" y="741" width="0.0196%" height="15" fill="rgb(221,92,46)" fg:x="100312" fg:w="20"/><text x="98.6549%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="98.4491%" y="421" width="0.0137%" height="15" fill="rgb(246,13,50)" fg:x="100357" fg:w="14"/><text x="98.6991%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (119 samples, 0.12%)</title><rect x="98.4491%" y="453" width="0.1167%" height="15" fill="rgb(240,165,38)" fg:x="100357" fg:w="119"/><text x="98.6991%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (119 samples, 0.12%)</title><rect x="98.4491%" y="437" width="0.1167%" height="15" fill="rgb(241,24,51)" fg:x="100357" fg:w="119"/><text x="98.6991%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (105 samples, 0.10%)</title><rect x="98.4628%" y="421" width="0.1030%" height="15" fill="rgb(227,51,44)" fg:x="100371" fg:w="105"/><text x="98.7128%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (93 samples, 0.09%)</title><rect x="98.4746%" y="405" width="0.0912%" height="15" fill="rgb(231,121,3)" fg:x="100383" fg:w="93"/><text x="98.7246%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (93 samples, 0.09%)</title><rect x="98.4746%" y="389" width="0.0912%" height="15" fill="rgb(245,3,41)" fg:x="100383" fg:w="93"/><text x="98.7246%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (93 samples, 0.09%)</title><rect x="98.4746%" y="373" width="0.0912%" height="15" fill="rgb(214,13,26)" fg:x="100383" fg:w="93"/><text x="98.7246%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.15%)</title><rect x="98.4491%" y="501" width="0.1481%" height="15" fill="rgb(252,75,11)" fg:x="100357" fg:w="151"/><text x="98.6991%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.15%)</title><rect x="98.4491%" y="485" width="0.1481%" height="15" fill="rgb(218,226,17)" fg:x="100357" fg:w="151"/><text x="98.6991%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (151 samples, 0.15%)</title><rect x="98.4491%" y="469" width="0.1481%" height="15" fill="rgb(248,89,38)" fg:x="100357" fg:w="151"/><text x="98.6991%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (25 samples, 0.02%)</title><rect x="98.5727%" y="453" width="0.0245%" height="15" fill="rgb(237,73,46)" fg:x="100483" fg:w="25"/><text x="98.8227%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (25 samples, 0.02%)</title><rect x="98.5727%" y="437" width="0.0245%" height="15" fill="rgb(242,78,33)" fg:x="100483" fg:w="25"/><text x="98.8227%" y="447.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (154 samples, 0.15%)</title><rect x="98.4481%" y="709" width="0.1511%" height="15" fill="rgb(235,60,3)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (154 samples, 0.15%)</title><rect x="98.4481%" y="693" width="0.1511%" height="15" fill="rgb(216,172,19)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (154 samples, 0.15%)</title><rect x="98.4481%" y="677" width="0.1511%" height="15" fill="rgb(227,6,42)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (154 samples, 0.15%)</title><rect x="98.4481%" y="661" width="0.1511%" height="15" fill="rgb(223,207,42)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (154 samples, 0.15%)</title><rect x="98.4481%" y="645" width="0.1511%" height="15" fill="rgb(246,138,30)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (154 samples, 0.15%)</title><rect x="98.4481%" y="629" width="0.1511%" height="15" fill="rgb(251,199,47)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (154 samples, 0.15%)</title><rect x="98.4481%" y="613" width="0.1511%" height="15" fill="rgb(228,218,44)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (154 samples, 0.15%)</title><rect x="98.4481%" y="597" width="0.1511%" height="15" fill="rgb(220,68,6)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (154 samples, 0.15%)</title><rect x="98.4481%" y="581" width="0.1511%" height="15" fill="rgb(240,60,26)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="591.50"></text></g><g><title>alloc::alloc::alloc (154 samples, 0.15%)</title><rect x="98.4481%" y="565" width="0.1511%" height="15" fill="rgb(211,200,19)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="575.50"></text></g><g><title>__rg_alloc (154 samples, 0.15%)</title><rect x="98.4481%" y="549" width="0.1511%" height="15" fill="rgb(242,145,30)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (154 samples, 0.15%)</title><rect x="98.4481%" y="533" width="0.1511%" height="15" fill="rgb(225,64,13)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="543.50"></text></g><g><title>rust_alloc (154 samples, 0.15%)</title><rect x="98.4481%" y="517" width="0.1511%" height="15" fill="rgb(218,103,35)" fg:x="100356" fg:w="154"/><text x="98.6981%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (175 samples, 0.17%)</title><rect x="98.4304%" y="741" width="0.1717%" height="15" fill="rgb(216,93,46)" fg:x="100338" fg:w="175"/><text x="98.6804%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (168 samples, 0.16%)</title><rect x="98.4373%" y="725" width="0.1648%" height="15" fill="rgb(225,159,27)" fg:x="100345" fg:w="168"/><text x="98.6873%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (14 samples, 0.01%)</title><rect x="98.6021%" y="741" width="0.0137%" height="15" fill="rgb(225,204,11)" fg:x="100513" fg:w="14"/><text x="98.8521%" y="751.50"></text></g><g><title>core::mem::drop (21 samples, 0.02%)</title><rect x="98.6158%" y="741" width="0.0206%" height="15" fill="rgb(205,56,4)" fg:x="100527" fg:w="21"/><text x="98.8658%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="98.6158%" y="725" width="0.0206%" height="15" fill="rgb(206,6,35)" fg:x="100527" fg:w="21"/><text x="98.8658%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="98.6158%" y="709" width="0.0206%" height="15" fill="rgb(247,73,52)" fg:x="100527" fg:w="21"/><text x="98.8658%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="98.6158%" y="693" width="0.0206%" height="15" fill="rgb(246,97,4)" fg:x="100527" fg:w="21"/><text x="98.8658%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (21 samples, 0.02%)</title><rect x="98.6158%" y="677" width="0.0206%" height="15" fill="rgb(212,37,15)" fg:x="100527" fg:w="21"/><text x="98.8658%" y="687.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="98.6178%" y="661" width="0.0186%" height="15" fill="rgb(208,130,40)" fg:x="100529" fg:w="19"/><text x="98.8678%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="98.6472%" y="741" width="0.0108%" height="15" fill="rgb(236,55,29)" fg:x="100559" fg:w="11"/><text x="98.8972%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="98.6472%" y="725" width="0.0108%" height="15" fill="rgb(209,156,45)" fg:x="100559" fg:w="11"/><text x="98.8972%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="98.6472%" y="709" width="0.0108%" height="15" fill="rgb(249,107,4)" fg:x="100559" fg:w="11"/><text x="98.8972%" y="719.50"></text></g><g><title>__GI___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="98.6472%" y="693" width="0.0108%" height="15" fill="rgb(227,7,13)" fg:x="100559" fg:w="11"/><text x="98.8972%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (283 samples, 0.28%)</title><rect x="98.4000%" y="757" width="0.2776%" height="15" fill="rgb(250,129,14)" fg:x="100307" fg:w="283"/><text x="98.6500%" y="767.50"></text></g><g><title>std::time::Instant::now (20 samples, 0.02%)</title><rect x="98.6580%" y="741" width="0.0196%" height="15" fill="rgb(229,92,13)" fg:x="100570" fg:w="20"/><text x="98.9080%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (20 samples, 0.02%)</title><rect x="98.6580%" y="725" width="0.0196%" height="15" fill="rgb(245,98,39)" fg:x="100570" fg:w="20"/><text x="98.9080%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (20 samples, 0.02%)</title><rect x="98.6580%" y="709" width="0.0196%" height="15" fill="rgb(234,135,48)" fg:x="100570" fg:w="20"/><text x="98.9080%" y="719.50"></text></g><g><title>__clock_gettime_2 (19 samples, 0.02%)</title><rect x="98.6590%" y="693" width="0.0186%" height="15" fill="rgb(230,98,28)" fg:x="100571" fg:w="19"/><text x="98.9090%" y="703.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.01%)</title><rect x="98.6629%" y="677" width="0.0147%" height="15" fill="rgb(223,121,0)" fg:x="100575" fg:w="15"/><text x="98.9129%" y="687.50"></text></g><g><title>[[vdso]] (12 samples, 0.01%)</title><rect x="98.6659%" y="661" width="0.0118%" height="15" fill="rgb(234,173,33)" fg:x="100578" fg:w="12"/><text x="98.9159%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (19 samples, 0.02%)</title><rect x="98.6933%" y="741" width="0.0186%" height="15" fill="rgb(245,47,8)" fg:x="100606" fg:w="19"/><text x="98.9433%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="98.6933%" y="725" width="0.0186%" height="15" fill="rgb(205,17,20)" fg:x="100606" fg:w="19"/><text x="98.9433%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="98.6933%" y="709" width="0.0186%" height="15" fill="rgb(232,151,16)" fg:x="100606" fg:w="19"/><text x="98.9433%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="98.6933%" y="693" width="0.0186%" height="15" fill="rgb(208,30,32)" fg:x="100606" fg:w="19"/><text x="98.9433%" y="703.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="98.6953%" y="677" width="0.0167%" height="15" fill="rgb(254,26,3)" fg:x="100608" fg:w="17"/><text x="98.9453%" y="687.50"></text></g><g><title>__libc_read (24 samples, 0.02%)</title><rect x="98.7355%" y="725" width="0.0235%" height="15" fill="rgb(240,177,30)" fg:x="100649" fg:w="24"/><text x="98.9855%" y="735.50"></text></g><g><title>__libc_disable_asynccancel (13 samples, 0.01%)</title><rect x="98.8199%" y="709" width="0.0128%" height="15" fill="rgb(248,76,44)" fg:x="100735" fg:w="13"/><text x="99.0699%" y="719.50"></text></g><g><title>epoll_wait (82 samples, 0.08%)</title><rect x="98.7590%" y="725" width="0.0804%" height="15" fill="rgb(241,186,54)" fg:x="100673" fg:w="82"/><text x="99.0090%" y="735.50"></text></g><g><title>__GI_epoll_ctl (11 samples, 0.01%)</title><rect x="98.8444%" y="693" width="0.0108%" height="15" fill="rgb(249,171,29)" fg:x="100760" fg:w="11"/><text x="99.0944%" y="703.50"></text></g><g><title>polling::epoll::Poller::modify (17 samples, 0.02%)</title><rect x="98.8395%" y="725" width="0.0167%" height="15" fill="rgb(237,151,44)" fg:x="100755" fg:w="17"/><text x="99.0895%" y="735.50"></text></g><g><title>polling::epoll::Poller::ctl (13 samples, 0.01%)</title><rect x="98.8434%" y="709" width="0.0128%" height="15" fill="rgb(228,174,30)" fg:x="100759" fg:w="13"/><text x="99.0934%" y="719.50"></text></g><g><title>polling::epoll::Poller::wait (150 samples, 0.15%)</title><rect x="98.7198%" y="741" width="0.1471%" height="15" fill="rgb(252,14,37)" fg:x="100633" fg:w="150"/><text x="98.9698%" y="751.50"></text></g><g><title>syscall (11 samples, 0.01%)</title><rect x="98.8562%" y="725" width="0.0108%" height="15" fill="rgb(207,111,40)" fg:x="100772" fg:w="11"/><text x="99.1062%" y="735.50"></text></g><g><title>async_io::reactor::ReactorLock::react (497 samples, 0.49%)</title><rect x="98.3882%" y="773" width="0.4876%" height="15" fill="rgb(248,171,54)" fg:x="100295" fg:w="497"/><text x="98.6382%" y="783.50"></text></g><g><title>polling::Poller::wait (196 samples, 0.19%)</title><rect x="98.6835%" y="757" width="0.1923%" height="15" fill="rgb(211,127,2)" fg:x="100596" fg:w="196"/><text x="98.9335%" y="767.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (43 samples, 0.04%)</title><rect x="98.9023%" y="741" width="0.0422%" height="15" fill="rgb(236,87,47)" fg:x="100819" fg:w="43"/><text x="99.1523%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (51 samples, 0.05%)</title><rect x="98.9445%" y="741" width="0.0500%" height="15" fill="rgb(223,190,45)" fg:x="100862" fg:w="51"/><text x="99.1945%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.05%)</title><rect x="98.9445%" y="725" width="0.0500%" height="15" fill="rgb(215,5,16)" fg:x="100862" fg:w="51"/><text x="99.1945%" y="735.50"></text></g><g><title>__condvar_confirm_wakeup (13 samples, 0.01%)</title><rect x="99.0887%" y="677" width="0.0128%" height="15" fill="rgb(252,82,33)" fg:x="101009" fg:w="13"/><text x="99.3387%" y="687.50"></text></g><g><title>__condvar_dec_grefs (104 samples, 0.10%)</title><rect x="99.1014%" y="677" width="0.1020%" height="15" fill="rgb(247,213,44)" fg:x="101022" fg:w="104"/><text x="99.3514%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (49 samples, 0.05%)</title><rect x="99.3496%" y="661" width="0.0481%" height="15" fill="rgb(205,196,44)" fg:x="101275" fg:w="49"/><text x="99.5996%" y="671.50"></text></g><g><title>__futex_abstimed_wait_common64 (212 samples, 0.21%)</title><rect x="99.2034%" y="677" width="0.2080%" height="15" fill="rgb(237,96,54)" fg:x="101126" fg:w="212"/><text x="99.4534%" y="687.50"></text></g><g><title>__pthread_enable_asynccancel (14 samples, 0.01%)</title><rect x="99.3977%" y="661" width="0.0137%" height="15" fill="rgb(230,113,34)" fg:x="101324" fg:w="14"/><text x="99.6477%" y="671.50"></text></g><g><title>__pthread_cleanup_pop (12 samples, 0.01%)</title><rect x="99.4114%" y="677" width="0.0118%" height="15" fill="rgb(221,224,12)" fg:x="101338" fg:w="12"/><text x="99.6614%" y="687.50"></text></g><g><title>__pthread_mutex_cond_lock (17 samples, 0.02%)</title><rect x="99.4251%" y="677" width="0.0167%" height="15" fill="rgb(219,112,44)" fg:x="101352" fg:w="17"/><text x="99.6751%" y="687.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (461 samples, 0.45%)</title><rect x="98.9984%" y="709" width="0.4522%" height="15" fill="rgb(210,31,13)" fg:x="100917" fg:w="461"/><text x="99.2484%" y="719.50"></text></g><g><title>__pthread_cond_wait (461 samples, 0.45%)</title><rect x="98.9984%" y="693" width="0.4522%" height="15" fill="rgb(230,25,16)" fg:x="100917" fg:w="461"/><text x="99.2484%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (486 samples, 0.48%)</title><rect x="98.9945%" y="741" width="0.4768%" height="15" fill="rgb(246,108,53)" fg:x="100913" fg:w="486"/><text x="99.2445%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (482 samples, 0.47%)</title><rect x="98.9984%" y="725" width="0.4728%" height="15" fill="rgb(241,172,50)" fg:x="100917" fg:w="482"/><text x="99.2484%" y="735.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (21 samples, 0.02%)</title><rect x="99.4506%" y="709" width="0.0206%" height="15" fill="rgb(235,141,10)" fg:x="101378" fg:w="21"/><text x="99.7006%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.02%)</title><rect x="99.4526%" y="693" width="0.0186%" height="15" fill="rgb(220,174,43)" fg:x="101380" fg:w="19"/><text x="99.7026%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="99.4526%" y="677" width="0.0186%" height="15" fill="rgb(215,181,40)" fg:x="101380" fg:w="19"/><text x="99.7026%" y="687.50"></text></g><g><title>parking::Parker::park (604 samples, 0.59%)</title><rect x="98.8954%" y="773" width="0.5925%" height="15" fill="rgb(230,97,2)" fg:x="100812" fg:w="604"/><text x="99.1454%" y="783.50"></text></g><g><title>parking::Inner::park (603 samples, 0.59%)</title><rect x="98.8964%" y="757" width="0.5915%" height="15" fill="rgb(211,25,27)" fg:x="100813" fg:w="603"/><text x="99.1464%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="99.4712%" y="741" width="0.0167%" height="15" fill="rgb(230,87,26)" fg:x="101399" fg:w="17"/><text x="99.7212%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="99.4712%" y="725" width="0.0167%" height="15" fill="rgb(227,160,17)" fg:x="101399" fg:w="17"/><text x="99.7212%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="99.4712%" y="709" width="0.0167%" height="15" fill="rgb(244,85,34)" fg:x="101399" fg:w="17"/><text x="99.7212%" y="719.50"></text></g><g><title>__GI___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="99.4712%" y="693" width="0.0167%" height="15" fill="rgb(207,70,0)" fg:x="101399" fg:w="17"/><text x="99.7212%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (61 samples, 0.06%)</title><rect x="99.4879%" y="773" width="0.0598%" height="15" fill="rgb(223,129,7)" fg:x="101416" fg:w="61"/><text x="99.7379%" y="783.50"></text></g><g><title>parking::Inner::park (59 samples, 0.06%)</title><rect x="99.4899%" y="757" width="0.0579%" height="15" fill="rgb(246,105,7)" fg:x="101418" fg:w="59"/><text x="99.7399%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (56 samples, 0.05%)</title><rect x="99.4928%" y="741" width="0.0549%" height="15" fill="rgb(215,154,42)" fg:x="101421" fg:w="56"/><text x="99.7428%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (56 samples, 0.05%)</title><rect x="99.4928%" y="725" width="0.0549%" height="15" fill="rgb(220,215,30)" fg:x="101421" fg:w="56"/><text x="99.7428%" y="735.50"></text></g><g><title>__GI___clone (14,122 samples, 13.85%)</title><rect x="85.7080%" y="1173" width="13.8535%" height="15" fill="rgb(228,81,51)" fg:x="87369" fg:w="14122"/><text x="85.9580%" y="1183.50">__GI___clone</text></g><g><title>start_thread (14,118 samples, 13.85%)</title><rect x="85.7119%" y="1157" width="13.8496%" height="15" fill="rgb(247,71,54)" fg:x="87373" fg:w="14118"/><text x="85.9619%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1141" width="13.8486%" height="15" fill="rgb(234,176,34)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1151.50">std::sys::unix::threa..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1125" width="13.8486%" height="15" fill="rgb(241,103,54)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1135.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1109" width="13.8486%" height="15" fill="rgb(228,22,34)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1119.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1093" width="13.8486%" height="15" fill="rgb(241,179,48)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1103.50">core::ops::function::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1077" width="13.8486%" height="15" fill="rgb(235,167,37)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1087.50">std::thread::Builder:..</text></g><g><title>std::panic::catch_unwind (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1061" width="13.8486%" height="15" fill="rgb(213,109,30)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1071.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1045" width="13.8486%" height="15" fill="rgb(222,172,16)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1029" width="13.8486%" height="15" fill="rgb(233,192,5)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1039.50">std::panicking::try::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,117 samples, 13.85%)</title><rect x="85.7129%" y="1013" width="13.8486%" height="15" fill="rgb(247,189,41)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1023.50">&lt;core::panic::unwind_..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (14,117 samples, 13.85%)</title><rect x="85.7129%" y="997" width="13.8486%" height="15" fill="rgb(218,134,47)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="1007.50">std::thread::Builder:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14,117 samples, 13.85%)</title><rect x="85.7129%" y="981" width="13.8486%" height="15" fill="rgb(216,29,3)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="991.50">std::sys_common::back..</text></g><g><title>core::ops::function::FnOnce::call_once (14,117 samples, 13.85%)</title><rect x="85.7129%" y="965" width="13.8486%" height="15" fill="rgb(246,140,12)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="975.50">core::ops::function::..</text></g><g><title>async_global_executor::threading::thread_main_loop (14,117 samples, 13.85%)</title><rect x="85.7129%" y="949" width="13.8486%" height="15" fill="rgb(230,136,11)" fg:x="87374" fg:w="14117"/><text x="85.9629%" y="959.50">async_global_executor..</text></g><g><title>std::panic::catch_unwind (14,114 samples, 13.85%)</title><rect x="85.7158%" y="933" width="13.8457%" height="15" fill="rgb(247,22,47)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="943.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (14,114 samples, 13.85%)</title><rect x="85.7158%" y="917" width="13.8457%" height="15" fill="rgb(218,84,22)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,114 samples, 13.85%)</title><rect x="85.7158%" y="901" width="13.8457%" height="15" fill="rgb(216,87,39)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="911.50">std::panicking::try::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (14,114 samples, 13.85%)</title><rect x="85.7158%" y="885" width="13.8457%" height="15" fill="rgb(221,178,8)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="895.50">async_global_executor..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,114 samples, 13.85%)</title><rect x="85.7158%" y="869" width="13.8457%" height="15" fill="rgb(230,42,11)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="879.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,114 samples, 13.85%)</title><rect x="85.7158%" y="853" width="13.8457%" height="15" fill="rgb(237,229,4)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="863.50">std::thread::local::L..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (14,114 samples, 13.85%)</title><rect x="85.7158%" y="837" width="13.8457%" height="15" fill="rgb(222,31,33)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="847.50">async_global_executor..</text></g><g><title>async_global_executor::reactor::block_on (14,114 samples, 13.85%)</title><rect x="85.7158%" y="821" width="13.8457%" height="15" fill="rgb(210,17,39)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="831.50">async_global_executor..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (14,114 samples, 13.85%)</title><rect x="85.7158%" y="805" width="13.8457%" height="15" fill="rgb(244,93,20)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="815.50">async_global_executor..</text></g><g><title>async_io::driver::block_on (14,114 samples, 13.85%)</title><rect x="85.7158%" y="789" width="13.8457%" height="15" fill="rgb(210,40,47)" fg:x="87377" fg:w="14114"/><text x="85.9658%" y="799.50">async_io::driver::blo..</text></g><g><title>__clock_gettime_2 (14 samples, 0.01%)</title><rect x="99.5752%" y="1173" width="0.0137%" height="15" fill="rgb(239,211,47)" fg:x="101505" fg:w="14"/><text x="99.8252%" y="1183.50"></text></g><g><title>__memmove_avx_unaligned_erms (42 samples, 0.04%)</title><rect x="99.5890%" y="1173" width="0.0412%" height="15" fill="rgb(251,223,49)" fg:x="101519" fg:w="42"/><text x="99.8390%" y="1183.50"></text></g><g><title>async_executor::steal (28 samples, 0.03%)</title><rect x="99.6439%" y="1173" width="0.0275%" height="15" fill="rgb(221,149,5)" fg:x="101575" fg:w="28"/><text x="99.8939%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (19 samples, 0.02%)</title><rect x="99.6714%" y="1173" width="0.0186%" height="15" fill="rgb(219,224,51)" fg:x="101603" fg:w="19"/><text x="99.9214%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="99.6930%" y="1173" width="0.0177%" height="15" fill="rgb(223,7,8)" fg:x="101625" fg:w="18"/><text x="99.9430%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (20 samples, 0.02%)</title><rect x="99.7106%" y="1173" width="0.0196%" height="15" fill="rgb(241,217,22)" fg:x="101643" fg:w="20"/><text x="99.9606%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="99.7351%" y="1173" width="0.0196%" height="15" fill="rgb(248,209,0)" fg:x="101668" fg:w="20"/><text x="99.9851%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="99.7548%" y="1173" width="0.0196%" height="15" fill="rgb(217,205,4)" fg:x="101688" fg:w="20"/><text x="100.0048%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (16 samples, 0.02%)</title><rect x="99.7763%" y="1173" width="0.0157%" height="15" fill="rgb(228,124,39)" fg:x="101710" fg:w="16"/><text x="100.0263%" y="1183.50"></text></g><g><title>async-std/runti (101,699 samples, 99.77%)</title><rect x="0.0373%" y="1189" width="99.7655%" height="15" fill="rgb(250,116,42)" fg:x="38" fg:w="101699"/><text x="0.2873%" y="1199.50">async-std/runti</text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.03%)</title><rect x="99.8048%" y="933" width="0.0343%" height="15" fill="rgb(223,202,9)" fg:x="101739" fg:w="35"/><text x="100.0548%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.03%)</title><rect x="99.8048%" y="917" width="0.0343%" height="15" fill="rgb(242,222,40)" fg:x="101739" fg:w="35"/><text x="100.0548%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (35 samples, 0.03%)</title><rect x="99.8048%" y="901" width="0.0343%" height="15" fill="rgb(229,99,46)" fg:x="101739" fg:w="35"/><text x="100.0548%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (35 samples, 0.03%)</title><rect x="99.8048%" y="885" width="0.0343%" height="15" fill="rgb(225,56,46)" fg:x="101739" fg:w="35"/><text x="100.0548%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (35 samples, 0.03%)</title><rect x="99.8048%" y="869" width="0.0343%" height="15" fill="rgb(227,94,5)" fg:x="101739" fg:w="35"/><text x="100.0548%" y="879.50"></text></g><g><title>__lll_lock_wait (34 samples, 0.03%)</title><rect x="99.8058%" y="853" width="0.0334%" height="15" fill="rgb(205,112,38)" fg:x="101740" fg:w="34"/><text x="100.0558%" y="863.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 0.04%)</title><rect x="99.8038%" y="1061" width="0.0363%" height="15" fill="rgb(231,133,46)" fg:x="101738" fg:w="37"/><text x="100.0538%" y="1071.50"></text></g><g><title>std::panicking::try (37 samples, 0.04%)</title><rect x="99.8038%" y="1045" width="0.0363%" height="15" fill="rgb(217,16,9)" fg:x="101738" fg:w="37"/><text x="100.0538%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 0.04%)</title><rect x="99.8038%" y="1029" width="0.0363%" height="15" fill="rgb(249,173,9)" fg:x="101738" fg:w="37"/><text x="100.0538%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37 samples, 0.04%)</title><rect x="99.8038%" y="1013" width="0.0363%" height="15" fill="rgb(205,163,53)" fg:x="101738" fg:w="37"/><text x="100.0538%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (37 samples, 0.04%)</title><rect x="99.8038%" y="997" width="0.0363%" height="15" fill="rgb(217,54,41)" fg:x="101738" fg:w="37"/><text x="100.0538%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (37 samples, 0.04%)</title><rect x="99.8038%" y="981" width="0.0363%" height="15" fill="rgb(228,216,12)" fg:x="101738" fg:w="37"/><text x="100.0538%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (37 samples, 0.04%)</title><rect x="99.8038%" y="965" width="0.0363%" height="15" fill="rgb(244,228,15)" fg:x="101738" fg:w="37"/><text x="100.0538%" y="975.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (36 samples, 0.04%)</title><rect x="99.8048%" y="949" width="0.0353%" height="15" fill="rgb(221,176,53)" fg:x="101739" fg:w="36"/><text x="100.0548%" y="959.50"></text></g><g><title>tokio-runtime-w (45 samples, 0.04%)</title><rect x="99.8028%" y="1189" width="0.0441%" height="15" fill="rgb(205,94,34)" fg:x="101737" fg:w="45"/><text x="100.0528%" y="1199.50"></text></g><g><title>__GI___clone (44 samples, 0.04%)</title><rect x="99.8038%" y="1173" width="0.0432%" height="15" fill="rgb(213,110,48)" fg:x="101738" fg:w="44"/><text x="100.0538%" y="1183.50"></text></g><g><title>start_thread (44 samples, 0.04%)</title><rect x="99.8038%" y="1157" width="0.0432%" height="15" fill="rgb(236,142,28)" fg:x="101738" fg:w="44"/><text x="100.0538%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (44 samples, 0.04%)</title><rect x="99.8038%" y="1141" width="0.0432%" height="15" fill="rgb(225,135,29)" fg:x="101738" fg:w="44"/><text x="100.0538%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (44 samples, 0.04%)</title><rect x="99.8038%" y="1125" width="0.0432%" height="15" fill="rgb(252,45,31)" fg:x="101738" fg:w="44"/><text x="100.0538%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (44 samples, 0.04%)</title><rect x="99.8038%" y="1109" width="0.0432%" height="15" fill="rgb(211,187,50)" fg:x="101738" fg:w="44"/><text x="100.0538%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (44 samples, 0.04%)</title><rect x="99.8038%" y="1093" width="0.0432%" height="15" fill="rgb(229,109,7)" fg:x="101738" fg:w="44"/><text x="100.0538%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (44 samples, 0.04%)</title><rect x="99.8038%" y="1077" width="0.0432%" height="15" fill="rgb(251,131,51)" fg:x="101738" fg:w="44"/><text x="100.0538%" y="1087.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="99.8509%" y="1173" width="0.0128%" height="15" fill="rgb(251,180,35)" fg:x="101786" fg:w="13"/><text x="100.1009%" y="1183.50"></text></g><g><title>__GI___clone (132 samples, 0.13%)</title><rect x="99.8636%" y="1173" width="0.1295%" height="15" fill="rgb(211,46,32)" fg:x="101799" fg:w="132"/><text x="100.1136%" y="1183.50"></text></g><g><title>start_thread (12 samples, 0.01%)</title><rect x="99.9814%" y="1157" width="0.0118%" height="15" fill="rgb(248,123,17)" fg:x="101919" fg:w="12"/><text x="100.2314%" y="1167.50"></text></g><g><title>all (101,938 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(227,141,18)" fg:x="0" fg:w="101938"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor-connecto (156 samples, 0.15%)</title><rect x="99.8470%" y="1189" width="0.1530%" height="15" fill="rgb(216,102,9)" fg:x="101782" fg:w="156"/><text x="100.0970%" y="1199.50"></text></g></svg></svg>