<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1237.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="103372"><g><title>__futex_abstimed_wait_common (43 samples, 0.04%)</title><rect x="0.0174%" y="837" width="0.0416%" height="15" fill="rgb(227,0,7)" fg:x="18" fg:w="43"/><text x="0.2674%" y="847.50"></text></g><g><title>___pthread_cond_timedwait (46 samples, 0.04%)</title><rect x="0.0155%" y="853" width="0.0445%" height="15" fill="rgb(217,0,24)" fg:x="16" fg:w="46"/><text x="0.2655%" y="863.50"></text></g><g><title>async-io (63 samples, 0.06%)</title><rect x="0.0010%" y="1189" width="0.0609%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="63"/><text x="0.2510%" y="1199.50"></text></g><g><title>__GI___clone (61 samples, 0.06%)</title><rect x="0.0029%" y="1173" width="0.0590%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1183.50"></text></g><g><title>start_thread (61 samples, 0.06%)</title><rect x="0.0029%" y="1157" width="0.0590%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (61 samples, 0.06%)</title><rect x="0.0029%" y="1141" width="0.0590%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (61 samples, 0.06%)</title><rect x="0.0029%" y="1125" width="0.0590%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (61 samples, 0.06%)</title><rect x="0.0029%" y="1109" width="0.0590%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (61 samples, 0.06%)</title><rect x="0.0029%" y="1093" width="0.0590%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (61 samples, 0.06%)</title><rect x="0.0029%" y="1077" width="0.0590%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (61 samples, 0.06%)</title><rect x="0.0029%" y="1061" width="0.0590%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1071.50"></text></g><g><title>std::panicking::try (61 samples, 0.06%)</title><rect x="0.0029%" y="1045" width="0.0590%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (61 samples, 0.06%)</title><rect x="0.0029%" y="1029" width="0.0590%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (61 samples, 0.06%)</title><rect x="0.0029%" y="1013" width="0.0590%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (61 samples, 0.06%)</title><rect x="0.0029%" y="997" width="0.0590%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="61"/><text x="0.2529%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (61 samples, 0.06%)</title><rect x="0.0029%" y="981" width="0.0590%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="61"/><text x="0.2529%" y="991.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (61 samples, 0.06%)</title><rect x="0.0029%" y="965" width="0.0590%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="61"/><text x="0.2529%" y="975.50"></text></g><g><title>async_io::driver::main_loop (61 samples, 0.06%)</title><rect x="0.0029%" y="949" width="0.0590%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="61"/><text x="0.2529%" y="959.50"></text></g><g><title>parking::Parker::park_timeout (53 samples, 0.05%)</title><rect x="0.0106%" y="933" width="0.0513%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="53"/><text x="0.2606%" y="943.50"></text></g><g><title>parking::Inner::park (53 samples, 0.05%)</title><rect x="0.0106%" y="917" width="0.0513%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="53"/><text x="0.2606%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (50 samples, 0.05%)</title><rect x="0.0135%" y="901" width="0.0484%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="50"/><text x="0.2635%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (48 samples, 0.05%)</title><rect x="0.0155%" y="885" width="0.0464%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="48"/><text x="0.2655%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (48 samples, 0.05%)</title><rect x="0.0155%" y="869" width="0.0464%" height="15" fill="rgb(221,5,38)" fg:x="16" fg:w="48"/><text x="0.2655%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="0.5234%" y="1173" width="0.0445%" height="15" fill="rgb(247,18,42)" fg:x="541" fg:w="46"/><text x="0.7734%" y="1183.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.01%)</title><rect x="0.5785%" y="1173" width="0.0126%" height="15" fill="rgb(241,131,45)" fg:x="598" fg:w="13"/><text x="0.8285%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="0.5940%" y="1157" width="0.0116%" height="15" fill="rgb(249,31,29)" fg:x="614" fg:w="12"/><text x="0.8440%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (99 samples, 0.10%)</title><rect x="0.6056%" y="1157" width="0.0958%" height="15" fill="rgb(225,111,53)" fg:x="626" fg:w="99"/><text x="0.8556%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (40 samples, 0.04%)</title><rect x="0.6627%" y="1141" width="0.0387%" height="15" fill="rgb(238,160,17)" fg:x="685" fg:w="40"/><text x="0.9127%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="0.7014%" y="1157" width="0.0222%" height="15" fill="rgb(214,148,48)" fg:x="725" fg:w="23"/><text x="0.9514%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (31 samples, 0.03%)</title><rect x="0.8561%" y="1141" width="0.0300%" height="15" fill="rgb(232,36,49)" fg:x="885" fg:w="31"/><text x="1.1061%" y="1151.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (178 samples, 0.17%)</title><rect x="0.7236%" y="1157" width="0.1722%" height="15" fill="rgb(209,103,24)" fg:x="748" fg:w="178"/><text x="0.9736%" y="1167.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (45 samples, 0.04%)</title><rect x="1.0399%" y="1141" width="0.0435%" height="15" fill="rgb(229,88,8)" fg:x="1075" fg:w="45"/><text x="1.2899%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="1.0835%" y="1141" width="0.0126%" height="15" fill="rgb(213,181,19)" fg:x="1120" fg:w="13"/><text x="1.3335%" y="1151.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="1.0835%" y="1125" width="0.0126%" height="15" fill="rgb(254,191,54)" fg:x="1120" fg:w="13"/><text x="1.3335%" y="1135.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="1.0835%" y="1109" width="0.0126%" height="15" fill="rgb(241,83,37)" fg:x="1120" fg:w="13"/><text x="1.3335%" y="1119.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (214 samples, 0.21%)</title><rect x="0.8997%" y="1157" width="0.2070%" height="15" fill="rgb(233,36,39)" fg:x="930" fg:w="214"/><text x="1.1497%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (11 samples, 0.01%)</title><rect x="1.0960%" y="1141" width="0.0106%" height="15" fill="rgb(226,3,54)" fg:x="1133" fg:w="11"/><text x="1.3460%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="1.4288%" y="1125" width="0.0213%" height="15" fill="rgb(245,192,40)" fg:x="1477" fg:w="22"/><text x="1.6788%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="1.4366%" y="1109" width="0.0135%" height="15" fill="rgb(238,167,29)" fg:x="1485" fg:w="14"/><text x="1.6866%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="1.4366%" y="1093" width="0.0135%" height="15" fill="rgb(232,182,51)" fg:x="1485" fg:w="14"/><text x="1.6866%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="1.4366%" y="1077" width="0.0135%" height="15" fill="rgb(231,60,39)" fg:x="1485" fg:w="14"/><text x="1.6866%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="1.4366%" y="1061" width="0.0135%" height="15" fill="rgb(208,69,12)" fg:x="1485" fg:w="14"/><text x="1.6866%" y="1071.50"></text></g><g><title>__rg_dealloc (14 samples, 0.01%)</title><rect x="1.4366%" y="1045" width="0.0135%" height="15" fill="rgb(235,93,37)" fg:x="1485" fg:w="14"/><text x="1.6866%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="1.4366%" y="1029" width="0.0135%" height="15" fill="rgb(213,116,39)" fg:x="1485" fg:w="14"/><text x="1.6866%" y="1039.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (129 samples, 0.12%)</title><rect x="1.3427%" y="1141" width="0.1248%" height="15" fill="rgb(222,207,29)" fg:x="1388" fg:w="129"/><text x="1.5927%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (18 samples, 0.02%)</title><rect x="1.4501%" y="1125" width="0.0174%" height="15" fill="rgb(206,96,30)" fg:x="1499" fg:w="18"/><text x="1.7001%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (15 samples, 0.01%)</title><rect x="1.4675%" y="1141" width="0.0145%" height="15" fill="rgb(218,138,4)" fg:x="1517" fg:w="15"/><text x="1.7175%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="1.4675%" y="1125" width="0.0145%" height="15" fill="rgb(250,191,14)" fg:x="1517" fg:w="15"/><text x="1.7175%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="1.4675%" y="1109" width="0.0145%" height="15" fill="rgb(239,60,40)" fg:x="1517" fg:w="15"/><text x="1.7175%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="1.4675%" y="1093" width="0.0145%" height="15" fill="rgb(206,27,48)" fg:x="1517" fg:w="15"/><text x="1.7175%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (15 samples, 0.01%)</title><rect x="1.4675%" y="1077" width="0.0145%" height="15" fill="rgb(225,35,8)" fg:x="1517" fg:w="15"/><text x="1.7175%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="1.5439%" y="1125" width="0.0135%" height="15" fill="rgb(250,213,24)" fg:x="1596" fg:w="14"/><text x="1.7939%" y="1135.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="1.5439%" y="1109" width="0.0135%" height="15" fill="rgb(247,123,22)" fg:x="1596" fg:w="14"/><text x="1.7939%" y="1119.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (11 samples, 0.01%)</title><rect x="1.5575%" y="1125" width="0.0106%" height="15" fill="rgb(231,138,38)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (11 samples, 0.01%)</title><rect x="1.5575%" y="1109" width="0.0106%" height="15" fill="rgb(231,145,46)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (11 samples, 0.01%)</title><rect x="1.5575%" y="1093" width="0.0106%" height="15" fill="rgb(251,118,11)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (11 samples, 0.01%)</title><rect x="1.5575%" y="1077" width="0.0106%" height="15" fill="rgb(217,147,25)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.01%)</title><rect x="1.5575%" y="1061" width="0.0106%" height="15" fill="rgb(247,81,37)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="1.5575%" y="1045" width="0.0106%" height="15" fill="rgb(209,12,38)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="1.5575%" y="1029" width="0.0106%" height="15" fill="rgb(227,1,9)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="1.5575%" y="1013" width="0.0106%" height="15" fill="rgb(248,47,43)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.5575%" y="997" width="0.0106%" height="15" fill="rgb(221,10,30)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="1.5575%" y="981" width="0.0106%" height="15" fill="rgb(210,229,1)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="1.5575%" y="965" width="0.0106%" height="15" fill="rgb(222,148,37)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="1.5575%" y="949" width="0.0106%" height="15" fill="rgb(234,67,33)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="1.5575%" y="933" width="0.0106%" height="15" fill="rgb(247,98,35)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="943.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="1.5575%" y="917" width="0.0106%" height="15" fill="rgb(247,138,52)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="927.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="1.5575%" y="901" width="0.0106%" height="15" fill="rgb(213,79,30)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="1.5575%" y="885" width="0.0106%" height="15" fill="rgb(246,177,23)" fg:x="1610" fg:w="11"/><text x="1.8075%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="1.5681%" y="1125" width="0.0222%" height="15" fill="rgb(230,62,27)" fg:x="1621" fg:w="23"/><text x="1.8181%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.01%)</title><rect x="1.5788%" y="1109" width="0.0116%" height="15" fill="rgb(216,154,8)" fg:x="1632" fg:w="12"/><text x="1.8288%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="1.5788%" y="1093" width="0.0116%" height="15" fill="rgb(244,35,45)" fg:x="1632" fg:w="12"/><text x="1.8288%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="1.5788%" y="1077" width="0.0116%" height="15" fill="rgb(251,115,12)" fg:x="1632" fg:w="12"/><text x="1.8288%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="1.5788%" y="1061" width="0.0116%" height="15" fill="rgb(240,54,50)" fg:x="1632" fg:w="12"/><text x="1.8288%" y="1071.50"></text></g><g><title>__rg_alloc (12 samples, 0.01%)</title><rect x="1.5788%" y="1045" width="0.0116%" height="15" fill="rgb(233,84,52)" fg:x="1632" fg:w="12"/><text x="1.8288%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12 samples, 0.01%)</title><rect x="1.5788%" y="1029" width="0.0116%" height="15" fill="rgb(207,117,47)" fg:x="1632" fg:w="12"/><text x="1.8288%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (112 samples, 0.11%)</title><rect x="1.4917%" y="1141" width="0.1083%" height="15" fill="rgb(249,43,39)" fg:x="1542" fg:w="112"/><text x="1.7417%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (26 samples, 0.03%)</title><rect x="1.6000%" y="1141" width="0.0252%" height="15" fill="rgb(209,38,44)" fg:x="1654" fg:w="26"/><text x="1.8500%" y="1151.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (58 samples, 0.06%)</title><rect x="1.6252%" y="1141" width="0.0561%" height="15" fill="rgb(236,212,23)" fg:x="1680" fg:w="58"/><text x="1.8752%" y="1151.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="1.7674%" y="1125" width="0.0116%" height="15" fill="rgb(242,79,21)" fg:x="1827" fg:w="12"/><text x="2.0174%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="1.7674%" y="1109" width="0.0116%" height="15" fill="rgb(211,96,35)" fg:x="1827" fg:w="12"/><text x="2.0174%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (12 samples, 0.01%)</title><rect x="1.7674%" y="1093" width="0.0116%" height="15" fill="rgb(253,215,40)" fg:x="1827" fg:w="12"/><text x="2.0174%" y="1103.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="1.7674%" y="1077" width="0.0116%" height="15" fill="rgb(211,81,21)" fg:x="1827" fg:w="12"/><text x="2.0174%" y="1087.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (16 samples, 0.02%)</title><rect x="1.7790%" y="1125" width="0.0155%" height="15" fill="rgb(208,190,38)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (16 samples, 0.02%)</title><rect x="1.7790%" y="1109" width="0.0155%" height="15" fill="rgb(235,213,38)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1119.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (16 samples, 0.02%)</title><rect x="1.7790%" y="1093" width="0.0155%" height="15" fill="rgb(237,122,38)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (16 samples, 0.02%)</title><rect x="1.7790%" y="1077" width="0.0155%" height="15" fill="rgb(244,218,35)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.02%)</title><rect x="1.7790%" y="1061" width="0.0155%" height="15" fill="rgb(240,68,47)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.02%)</title><rect x="1.7790%" y="1045" width="0.0155%" height="15" fill="rgb(210,16,53)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.02%)</title><rect x="1.7790%" y="1029" width="0.0155%" height="15" fill="rgb(235,124,12)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.02%)</title><rect x="1.7790%" y="1013" width="0.0155%" height="15" fill="rgb(224,169,11)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="1.7790%" y="997" width="0.0155%" height="15" fill="rgb(250,166,2)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.02%)</title><rect x="1.7790%" y="981" width="0.0155%" height="15" fill="rgb(242,216,29)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.02%)</title><rect x="1.7790%" y="965" width="0.0155%" height="15" fill="rgb(230,116,27)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="1.7790%" y="949" width="0.0155%" height="15" fill="rgb(228,99,48)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="1.7790%" y="933" width="0.0155%" height="15" fill="rgb(253,11,6)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="943.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="1.7790%" y="917" width="0.0155%" height="15" fill="rgb(247,143,39)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="927.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="1.7790%" y="901" width="0.0155%" height="15" fill="rgb(236,97,10)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="911.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="1.7790%" y="885" width="0.0155%" height="15" fill="rgb(233,208,19)" fg:x="1839" fg:w="16"/><text x="2.0290%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (719 samples, 0.70%)</title><rect x="1.1086%" y="1157" width="0.6955%" height="15" fill="rgb(216,164,2)" fg:x="1146" fg:w="719"/><text x="1.3586%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (127 samples, 0.12%)</title><rect x="1.6813%" y="1141" width="0.1229%" height="15" fill="rgb(220,129,5)" fg:x="1738" fg:w="127"/><text x="1.9313%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (26 samples, 0.03%)</title><rect x="1.9425%" y="1141" width="0.0252%" height="15" fill="rgb(242,17,10)" fg:x="2008" fg:w="26"/><text x="2.1925%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (26 samples, 0.03%)</title><rect x="1.9425%" y="1125" width="0.0252%" height="15" fill="rgb(242,107,0)" fg:x="2008" fg:w="26"/><text x="2.1925%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="1.9425%" y="1109" width="0.0252%" height="15" fill="rgb(251,28,31)" fg:x="2008" fg:w="26"/><text x="2.1925%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (26 samples, 0.03%)</title><rect x="1.9425%" y="1093" width="0.0252%" height="15" fill="rgb(233,223,10)" fg:x="2008" fg:w="26"/><text x="2.1925%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.03%)</title><rect x="1.9425%" y="1077" width="0.0252%" height="15" fill="rgb(215,21,27)" fg:x="2008" fg:w="26"/><text x="2.1925%" y="1087.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (201 samples, 0.19%)</title><rect x="1.8042%" y="1157" width="0.1944%" height="15" fill="rgb(232,23,21)" fg:x="1865" fg:w="201"/><text x="2.0542%" y="1167.50"></text></g><g><title>event_listener::Inner::lock (32 samples, 0.03%)</title><rect x="1.9677%" y="1141" width="0.0310%" height="15" fill="rgb(244,5,23)" fg:x="2034" fg:w="32"/><text x="2.2177%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="1.9677%" y="1125" width="0.0310%" height="15" fill="rgb(226,81,46)" fg:x="2034" fg:w="32"/><text x="2.2177%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="1.9677%" y="1109" width="0.0310%" height="15" fill="rgb(247,70,30)" fg:x="2034" fg:w="32"/><text x="2.2177%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (32 samples, 0.03%)</title><rect x="1.9677%" y="1093" width="0.0310%" height="15" fill="rgb(212,68,19)" fg:x="2034" fg:w="32"/><text x="2.2177%" y="1103.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (11 samples, 0.01%)</title><rect x="2.0247%" y="1109" width="0.0106%" height="15" fill="rgb(240,187,13)" fg:x="2093" fg:w="11"/><text x="2.2747%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="2.0034%" y="1157" width="0.0339%" height="15" fill="rgb(223,113,26)" fg:x="2071" fg:w="35"/><text x="2.2534%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (26 samples, 0.03%)</title><rect x="2.0122%" y="1141" width="0.0252%" height="15" fill="rgb(206,192,2)" fg:x="2080" fg:w="26"/><text x="2.2622%" y="1151.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="2.0199%" y="1125" width="0.0174%" height="15" fill="rgb(241,108,4)" fg:x="2088" fg:w="18"/><text x="2.2699%" y="1135.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (56 samples, 0.05%)</title><rect x="2.0373%" y="1157" width="0.0542%" height="15" fill="rgb(247,173,49)" fg:x="2106" fg:w="56"/><text x="2.2873%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (212 samples, 0.21%)</title><rect x="2.0915%" y="1157" width="0.2051%" height="15" fill="rgb(224,114,35)" fg:x="2162" fg:w="212"/><text x="2.3415%" y="1167.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (127 samples, 0.12%)</title><rect x="2.1737%" y="1141" width="0.1229%" height="15" fill="rgb(245,159,27)" fg:x="2247" fg:w="127"/><text x="2.4237%" y="1151.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (103 samples, 0.10%)</title><rect x="2.1969%" y="1125" width="0.0996%" height="15" fill="rgb(245,172,44)" fg:x="2271" fg:w="103"/><text x="2.4469%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (35 samples, 0.03%)</title><rect x="2.2627%" y="1109" width="0.0339%" height="15" fill="rgb(236,23,11)" fg:x="2339" fg:w="35"/><text x="2.5127%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.02%)</title><rect x="2.2762%" y="1093" width="0.0203%" height="15" fill="rgb(205,117,38)" fg:x="2353" fg:w="21"/><text x="2.5262%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (21 samples, 0.02%)</title><rect x="2.2762%" y="1077" width="0.0203%" height="15" fill="rgb(237,72,25)" fg:x="2353" fg:w="21"/><text x="2.5262%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (19 samples, 0.02%)</title><rect x="2.2782%" y="1061" width="0.0184%" height="15" fill="rgb(244,70,9)" fg:x="2355" fg:w="19"/><text x="2.5282%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="2.2782%" y="1045" width="0.0184%" height="15" fill="rgb(217,125,39)" fg:x="2355" fg:w="19"/><text x="2.5282%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="2.2782%" y="1029" width="0.0184%" height="15" fill="rgb(235,36,10)" fg:x="2355" fg:w="19"/><text x="2.5282%" y="1039.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="2.2782%" y="1013" width="0.0184%" height="15" fill="rgb(251,123,47)" fg:x="2355" fg:w="19"/><text x="2.5282%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="2.2782%" y="997" width="0.0184%" height="15" fill="rgb(221,13,13)" fg:x="2355" fg:w="19"/><text x="2.5282%" y="1007.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (38 samples, 0.04%)</title><rect x="2.2966%" y="1157" width="0.0368%" height="15" fill="rgb(238,131,9)" fg:x="2374" fg:w="38"/><text x="2.5466%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.03%)</title><rect x="2.3043%" y="1141" width="0.0290%" height="15" fill="rgb(211,50,8)" fg:x="2382" fg:w="30"/><text x="2.5543%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (21 samples, 0.02%)</title><rect x="2.3130%" y="1125" width="0.0203%" height="15" fill="rgb(245,182,24)" fg:x="2391" fg:w="21"/><text x="2.5630%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (21 samples, 0.02%)</title><rect x="2.3130%" y="1109" width="0.0203%" height="15" fill="rgb(242,14,37)" fg:x="2391" fg:w="21"/><text x="2.5630%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="2.3130%" y="1093" width="0.0203%" height="15" fill="rgb(246,228,12)" fg:x="2391" fg:w="21"/><text x="2.5630%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="2.3130%" y="1077" width="0.0203%" height="15" fill="rgb(213,55,15)" fg:x="2391" fg:w="21"/><text x="2.5630%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="2.3130%" y="1061" width="0.0203%" height="15" fill="rgb(209,9,3)" fg:x="2391" fg:w="21"/><text x="2.5630%" y="1071.50"></text></g><g><title>__rg_alloc (21 samples, 0.02%)</title><rect x="2.3130%" y="1045" width="0.0203%" height="15" fill="rgb(230,59,30)" fg:x="2391" fg:w="21"/><text x="2.5630%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (21 samples, 0.02%)</title><rect x="2.3130%" y="1029" width="0.0203%" height="15" fill="rgb(209,121,21)" fg:x="2391" fg:w="21"/><text x="2.5630%" y="1039.50"></text></g><g><title>___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="2.3498%" y="1157" width="0.0222%" height="15" fill="rgb(220,109,13)" fg:x="2429" fg:w="23"/><text x="2.5998%" y="1167.50"></text></g><g><title>__clock_gettime_2 (40 samples, 0.04%)</title><rect x="2.3759%" y="1157" width="0.0387%" height="15" fill="rgb(232,18,1)" fg:x="2456" fg:w="40"/><text x="2.6259%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (30 samples, 0.03%)</title><rect x="2.4184%" y="1157" width="0.0290%" height="15" fill="rgb(215,41,42)" fg:x="2500" fg:w="30"/><text x="2.6684%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (17 samples, 0.02%)</title><rect x="2.4504%" y="1157" width="0.0164%" height="15" fill="rgb(224,123,36)" fg:x="2533" fg:w="17"/><text x="2.7004%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (23 samples, 0.02%)</title><rect x="2.4755%" y="1157" width="0.0222%" height="15" fill="rgb(240,125,3)" fg:x="2559" fg:w="23"/><text x="2.7255%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="2.4765%" y="1141" width="0.0213%" height="15" fill="rgb(205,98,50)" fg:x="2560" fg:w="22"/><text x="2.7265%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="2.4765%" y="1125" width="0.0213%" height="15" fill="rgb(205,185,37)" fg:x="2560" fg:w="22"/><text x="2.7265%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="2.4765%" y="1109" width="0.0213%" height="15" fill="rgb(238,207,15)" fg:x="2560" fg:w="22"/><text x="2.7265%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="2.4765%" y="1093" width="0.0213%" height="15" fill="rgb(213,199,42)" fg:x="2560" fg:w="22"/><text x="2.7265%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="2.4765%" y="1077" width="0.0213%" height="15" fill="rgb(235,201,11)" fg:x="2560" fg:w="22"/><text x="2.7265%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="2.4765%" y="1061" width="0.0213%" height="15" fill="rgb(207,46,11)" fg:x="2560" fg:w="22"/><text x="2.7265%" y="1071.50"></text></g><g><title>__rg_dealloc (22 samples, 0.02%)</title><rect x="2.4765%" y="1045" width="0.0213%" height="15" fill="rgb(241,35,35)" fg:x="2560" fg:w="22"/><text x="2.7265%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (22 samples, 0.02%)</title><rect x="2.4765%" y="1029" width="0.0213%" height="15" fill="rgb(243,32,47)" fg:x="2560" fg:w="22"/><text x="2.7265%" y="1039.50"></text></g><g><title>async_executor::Ticker::sleep (23 samples, 0.02%)</title><rect x="2.5055%" y="1157" width="0.0222%" height="15" fill="rgb(247,202,23)" fg:x="2590" fg:w="23"/><text x="2.7555%" y="1167.50"></text></g><g><title>async_executor::steal (36 samples, 0.03%)</title><rect x="2.5307%" y="1157" width="0.0348%" height="15" fill="rgb(219,102,11)" fg:x="2616" fg:w="36"/><text x="2.7807%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15 samples, 0.01%)</title><rect x="2.5732%" y="1157" width="0.0145%" height="15" fill="rgb(243,110,44)" fg:x="2660" fg:w="15"/><text x="2.8232%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (161 samples, 0.16%)</title><rect x="2.5897%" y="1157" width="0.1557%" height="15" fill="rgb(222,74,54)" fg:x="2677" fg:w="161"/><text x="2.8397%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (44 samples, 0.04%)</title><rect x="2.7454%" y="1157" width="0.0426%" height="15" fill="rgb(216,99,12)" fg:x="2838" fg:w="44"/><text x="2.9954%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (143 samples, 0.14%)</title><rect x="2.7880%" y="1157" width="0.1383%" height="15" fill="rgb(226,22,26)" fg:x="2882" fg:w="143"/><text x="3.0380%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (11 samples, 0.01%)</title><rect x="2.9157%" y="1141" width="0.0106%" height="15" fill="rgb(217,163,10)" fg:x="3014" fg:w="11"/><text x="3.1657%" y="1151.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="2.9157%" y="1125" width="0.0106%" height="15" fill="rgb(213,25,53)" fg:x="3014" fg:w="11"/><text x="3.1657%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (61 samples, 0.06%)</title><rect x="2.9263%" y="1157" width="0.0590%" height="15" fill="rgb(252,105,26)" fg:x="3025" fg:w="61"/><text x="3.1763%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (73 samples, 0.07%)</title><rect x="2.9931%" y="1157" width="0.0706%" height="15" fill="rgb(220,39,43)" fg:x="3094" fg:w="73"/><text x="3.2431%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="3.0289%" y="1141" width="0.0348%" height="15" fill="rgb(229,68,48)" fg:x="3131" fg:w="36"/><text x="3.2789%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="3.0734%" y="1157" width="0.0213%" height="15" fill="rgb(252,8,32)" fg:x="3177" fg:w="22"/><text x="3.3234%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="3.0830%" y="1141" width="0.0116%" height="15" fill="rgb(223,20,43)" fg:x="3187" fg:w="12"/><text x="3.3330%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (38 samples, 0.04%)</title><rect x="3.0946%" y="1157" width="0.0368%" height="15" fill="rgb(229,81,49)" fg:x="3199" fg:w="38"/><text x="3.3446%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (38 samples, 0.04%)</title><rect x="3.0946%" y="1141" width="0.0368%" height="15" fill="rgb(236,28,36)" fg:x="3199" fg:w="38"/><text x="3.3446%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (30 samples, 0.03%)</title><rect x="3.1314%" y="1157" width="0.0290%" height="15" fill="rgb(249,185,26)" fg:x="3237" fg:w="30"/><text x="3.3814%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="3.1479%" y="1141" width="0.0126%" height="15" fill="rgb(249,174,33)" fg:x="3254" fg:w="13"/><text x="3.3979%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="3.1604%" y="1157" width="0.0164%" height="15" fill="rgb(233,201,37)" fg:x="3267" fg:w="17"/><text x="3.4104%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (53 samples, 0.05%)</title><rect x="3.1856%" y="1157" width="0.0513%" height="15" fill="rgb(221,78,26)" fg:x="3293" fg:w="53"/><text x="3.4356%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="3.2378%" y="1157" width="0.0203%" height="15" fill="rgb(250,127,30)" fg:x="3347" fg:w="21"/><text x="3.4878%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (21 samples, 0.02%)</title><rect x="3.2378%" y="1141" width="0.0203%" height="15" fill="rgb(230,49,44)" fg:x="3347" fg:w="21"/><text x="3.4878%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (24 samples, 0.02%)</title><rect x="3.2581%" y="1157" width="0.0232%" height="15" fill="rgb(229,67,23)" fg:x="3368" fg:w="24"/><text x="3.5081%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (92 samples, 0.09%)</title><rect x="3.2814%" y="1157" width="0.0890%" height="15" fill="rgb(249,83,47)" fg:x="3392" fg:w="92"/><text x="3.5314%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="3.4139%" y="1109" width="0.0116%" height="15" fill="rgb(215,43,3)" fg:x="3529" fg:w="12"/><text x="3.6639%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (12 samples, 0.01%)</title><rect x="3.4139%" y="1093" width="0.0116%" height="15" fill="rgb(238,154,13)" fg:x="3529" fg:w="12"/><text x="3.6639%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (12 samples, 0.01%)</title><rect x="3.4139%" y="1077" width="0.0116%" height="15" fill="rgb(219,56,2)" fg:x="3529" fg:w="12"/><text x="3.6639%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="3.4139%" y="1061" width="0.0116%" height="15" fill="rgb(233,0,4)" fg:x="3529" fg:w="12"/><text x="3.6639%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="3.4139%" y="1125" width="0.0184%" height="15" fill="rgb(235,30,7)" fg:x="3529" fg:w="19"/><text x="3.6639%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (97 samples, 0.09%)</title><rect x="3.3704%" y="1157" width="0.0938%" height="15" fill="rgb(250,79,13)" fg:x="3484" fg:w="97"/><text x="3.6204%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (52 samples, 0.05%)</title><rect x="3.4139%" y="1141" width="0.0503%" height="15" fill="rgb(211,146,34)" fg:x="3529" fg:w="52"/><text x="3.6639%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (33 samples, 0.03%)</title><rect x="3.4323%" y="1125" width="0.0319%" height="15" fill="rgb(228,22,38)" fg:x="3548" fg:w="33"/><text x="3.6823%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (39 samples, 0.04%)</title><rect x="3.5155%" y="1141" width="0.0377%" height="15" fill="rgb(235,168,5)" fg:x="3634" fg:w="39"/><text x="3.7655%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (39 samples, 0.04%)</title><rect x="3.5155%" y="1125" width="0.0377%" height="15" fill="rgb(221,155,16)" fg:x="3634" fg:w="39"/><text x="3.7655%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (39 samples, 0.04%)</title><rect x="3.5155%" y="1109" width="0.0377%" height="15" fill="rgb(215,215,53)" fg:x="3634" fg:w="39"/><text x="3.7655%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="3.5155%" y="1093" width="0.0377%" height="15" fill="rgb(223,4,10)" fg:x="3634" fg:w="39"/><text x="3.7655%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 0.04%)</title><rect x="3.5155%" y="1077" width="0.0377%" height="15" fill="rgb(234,103,6)" fg:x="3634" fg:w="39"/><text x="3.7655%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (39 samples, 0.04%)</title><rect x="3.5155%" y="1061" width="0.0377%" height="15" fill="rgb(227,97,0)" fg:x="3634" fg:w="39"/><text x="3.7655%" y="1071.50"></text></g><g><title>__rg_dealloc (39 samples, 0.04%)</title><rect x="3.5155%" y="1045" width="0.0377%" height="15" fill="rgb(234,150,53)" fg:x="3634" fg:w="39"/><text x="3.7655%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (39 samples, 0.04%)</title><rect x="3.5155%" y="1029" width="0.0377%" height="15" fill="rgb(228,201,54)" fg:x="3634" fg:w="39"/><text x="3.7655%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (104 samples, 0.10%)</title><rect x="3.4642%" y="1157" width="0.1006%" height="15" fill="rgb(222,22,37)" fg:x="3581" fg:w="104"/><text x="3.7142%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (12 samples, 0.01%)</title><rect x="3.5532%" y="1141" width="0.0116%" height="15" fill="rgb(237,53,32)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="3.5532%" y="1125" width="0.0116%" height="15" fill="rgb(233,25,53)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (12 samples, 0.01%)</title><rect x="3.5532%" y="1109" width="0.0116%" height="15" fill="rgb(210,40,34)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.01%)</title><rect x="3.5532%" y="1093" width="0.0116%" height="15" fill="rgb(241,220,44)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="3.5532%" y="1077" width="0.0116%" height="15" fill="rgb(235,28,35)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="3.5532%" y="1061" width="0.0116%" height="15" fill="rgb(210,56,17)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="3.5532%" y="1045" width="0.0116%" height="15" fill="rgb(224,130,29)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="3.5532%" y="1029" width="0.0116%" height="15" fill="rgb(235,212,8)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="3.5532%" y="1013" width="0.0116%" height="15" fill="rgb(223,33,50)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1023.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="3.5532%" y="997" width="0.0116%" height="15" fill="rgb(219,149,13)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="3.5532%" y="981" width="0.0116%" height="15" fill="rgb(250,156,29)" fg:x="3673" fg:w="12"/><text x="3.8032%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (113 samples, 0.11%)</title><rect x="3.5648%" y="1157" width="0.1093%" height="15" fill="rgb(216,193,19)" fg:x="3685" fg:w="113"/><text x="3.8148%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (26 samples, 0.03%)</title><rect x="3.6490%" y="1141" width="0.0252%" height="15" fill="rgb(216,135,14)" fg:x="3772" fg:w="26"/><text x="3.8990%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.03%)</title><rect x="3.6490%" y="1125" width="0.0252%" height="15" fill="rgb(241,47,5)" fg:x="3772" fg:w="26"/><text x="3.8990%" y="1135.50"></text></g><g><title>event_listener::Event::notify (272 samples, 0.26%)</title><rect x="3.6818%" y="1157" width="0.2631%" height="15" fill="rgb(233,42,35)" fg:x="3806" fg:w="272"/><text x="3.9318%" y="1167.50"></text></g><g><title>event_listener::full_fence (115 samples, 0.11%)</title><rect x="3.8337%" y="1141" width="0.1112%" height="15" fill="rgb(231,13,6)" fg:x="3963" fg:w="115"/><text x="4.0837%" y="1151.50"></text></g><g><title>event_listener::List::notify (14 samples, 0.01%)</title><rect x="3.9450%" y="1157" width="0.0135%" height="15" fill="rgb(207,181,40)" fg:x="4078" fg:w="14"/><text x="4.1950%" y="1167.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (82 samples, 0.08%)</title><rect x="3.9585%" y="1157" width="0.0793%" height="15" fill="rgb(254,173,49)" fg:x="4092" fg:w="82"/><text x="4.2085%" y="1167.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (12 samples, 0.01%)</title><rect x="4.0262%" y="1141" width="0.0116%" height="15" fill="rgb(221,1,38)" fg:x="4162" fg:w="12"/><text x="4.2762%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (12 samples, 0.01%)</title><rect x="4.0262%" y="1125" width="0.0116%" height="15" fill="rgb(206,124,46)" fg:x="4162" fg:w="12"/><text x="4.2762%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="4.0262%" y="1109" width="0.0116%" height="15" fill="rgb(249,21,11)" fg:x="4162" fg:w="12"/><text x="4.2762%" y="1119.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12 samples, 0.01%)</title><rect x="4.0262%" y="1093" width="0.0116%" height="15" fill="rgb(222,201,40)" fg:x="4162" fg:w="12"/><text x="4.2762%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.01%)</title><rect x="4.0262%" y="1077" width="0.0116%" height="15" fill="rgb(235,61,29)" fg:x="4162" fg:w="12"/><text x="4.2762%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.01%)</title><rect x="4.0262%" y="1061" width="0.0116%" height="15" fill="rgb(219,207,3)" fg:x="4162" fg:w="12"/><text x="4.2762%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.01%)</title><rect x="4.0262%" y="1045" width="0.0116%" height="15" fill="rgb(222,56,46)" fg:x="4162" fg:w="12"/><text x="4.2762%" y="1055.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (26 samples, 0.03%)</title><rect x="4.0378%" y="1157" width="0.0252%" height="15" fill="rgb(239,76,54)" fg:x="4174" fg:w="26"/><text x="4.2878%" y="1167.50"></text></g><g><title>parking::Inner::park (12 samples, 0.01%)</title><rect x="4.0630%" y="1157" width="0.0116%" height="15" fill="rgb(231,124,27)" fg:x="4200" fg:w="12"/><text x="4.3130%" y="1167.50"></text></g><g><title>rust_alloc (76 samples, 0.07%)</title><rect x="4.0823%" y="1157" width="0.0735%" height="15" fill="rgb(249,195,6)" fg:x="4220" fg:w="76"/><text x="4.3323%" y="1167.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="4.1559%" y="1157" width="0.0184%" height="15" fill="rgb(237,174,47)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (19 samples, 0.02%)</title><rect x="4.1559%" y="1141" width="0.0184%" height="15" fill="rgb(206,201,31)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1151.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (19 samples, 0.02%)</title><rect x="4.1559%" y="1125" width="0.0184%" height="15" fill="rgb(231,57,52)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1135.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (19 samples, 0.02%)</title><rect x="4.1559%" y="1109" width="0.0184%" height="15" fill="rgb(248,177,22)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1119.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (19 samples, 0.02%)</title><rect x="4.1559%" y="1093" width="0.0184%" height="15" fill="rgb(215,211,37)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1103.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (19 samples, 0.02%)</title><rect x="4.1559%" y="1077" width="0.0184%" height="15" fill="rgb(241,128,51)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1087.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (19 samples, 0.02%)</title><rect x="4.1559%" y="1061" width="0.0184%" height="15" fill="rgb(227,165,31)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1071.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (19 samples, 0.02%)</title><rect x="4.1559%" y="1045" width="0.0184%" height="15" fill="rgb(228,167,24)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1055.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (19 samples, 0.02%)</title><rect x="4.1559%" y="1029" width="0.0184%" height="15" fill="rgb(228,143,12)" fg:x="4296" fg:w="19"/><text x="4.4059%" y="1039.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (24 samples, 0.02%)</title><rect x="4.1888%" y="1157" width="0.0232%" height="15" fill="rgb(249,149,8)" fg:x="4330" fg:w="24"/><text x="4.4388%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (40 samples, 0.04%)</title><rect x="4.2120%" y="1157" width="0.0387%" height="15" fill="rgb(243,35,44)" fg:x="4354" fg:w="40"/><text x="4.4620%" y="1167.50"></text></g><g><title>tremor_common::time::nanotime (81 samples, 0.08%)</title><rect x="4.2603%" y="1157" width="0.0784%" height="15" fill="rgb(246,89,9)" fg:x="4404" fg:w="81"/><text x="4.5103%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (78 samples, 0.08%)</title><rect x="4.2632%" y="1141" width="0.0755%" height="15" fill="rgb(233,213,13)" fg:x="4407" fg:w="78"/><text x="4.5132%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (78 samples, 0.08%)</title><rect x="4.2632%" y="1125" width="0.0755%" height="15" fill="rgb(233,141,41)" fg:x="4407" fg:w="78"/><text x="4.5132%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (78 samples, 0.08%)</title><rect x="4.2632%" y="1109" width="0.0755%" height="15" fill="rgb(239,167,4)" fg:x="4407" fg:w="78"/><text x="4.5132%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (22 samples, 0.02%)</title><rect x="4.3387%" y="1157" width="0.0213%" height="15" fill="rgb(209,217,16)" fg:x="4485" fg:w="22"/><text x="4.5887%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="4.4867%" y="1141" width="0.0193%" height="15" fill="rgb(219,88,35)" fg:x="4638" fg:w="20"/><text x="4.7367%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (30 samples, 0.03%)</title><rect x="4.5061%" y="1141" width="0.0290%" height="15" fill="rgb(220,193,23)" fg:x="4658" fg:w="30"/><text x="4.7561%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (30 samples, 0.03%)</title><rect x="4.5061%" y="1125" width="0.0290%" height="15" fill="rgb(230,90,52)" fg:x="4658" fg:w="30"/><text x="4.7561%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="4.5148%" y="1109" width="0.0203%" height="15" fill="rgb(252,106,19)" fg:x="4667" fg:w="21"/><text x="4.7648%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="4.5148%" y="1093" width="0.0203%" height="15" fill="rgb(206,74,20)" fg:x="4667" fg:w="21"/><text x="4.7648%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="4.5148%" y="1077" width="0.0203%" height="15" fill="rgb(230,138,44)" fg:x="4667" fg:w="21"/><text x="4.7648%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="4.5148%" y="1061" width="0.0203%" height="15" fill="rgb(235,182,43)" fg:x="4667" fg:w="21"/><text x="4.7648%" y="1071.50"></text></g><g><title>__rg_alloc (21 samples, 0.02%)</title><rect x="4.5148%" y="1045" width="0.0203%" height="15" fill="rgb(242,16,51)" fg:x="4667" fg:w="21"/><text x="4.7648%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (21 samples, 0.02%)</title><rect x="4.5148%" y="1029" width="0.0203%" height="15" fill="rgb(248,9,4)" fg:x="4667" fg:w="21"/><text x="4.7648%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (12 samples, 0.01%)</title><rect x="4.5370%" y="1141" width="0.0116%" height="15" fill="rgb(210,31,22)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1151.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.5370%" y="1125" width="0.0116%" height="15" fill="rgb(239,54,39)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.01%)</title><rect x="4.5370%" y="1109" width="0.0116%" height="15" fill="rgb(230,99,41)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="4.5370%" y="1093" width="0.0116%" height="15" fill="rgb(253,106,12)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.01%)</title><rect x="4.5370%" y="1077" width="0.0116%" height="15" fill="rgb(213,46,41)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="4.5370%" y="1061" width="0.0116%" height="15" fill="rgb(215,133,35)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.01%)</title><rect x="4.5370%" y="1045" width="0.0116%" height="15" fill="rgb(213,28,5)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.01%)</title><rect x="4.5370%" y="1029" width="0.0116%" height="15" fill="rgb(215,77,49)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1039.50"></text></g><g><title>__rg_dealloc (12 samples, 0.01%)</title><rect x="4.5370%" y="1013" width="0.0116%" height="15" fill="rgb(248,100,22)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1023.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12 samples, 0.01%)</title><rect x="4.5370%" y="997" width="0.0116%" height="15" fill="rgb(208,67,9)" fg:x="4690" fg:w="12"/><text x="4.7870%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="4.5486%" y="1141" width="0.0184%" height="15" fill="rgb(219,133,21)" fg:x="4702" fg:w="19"/><text x="4.7986%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (19 samples, 0.02%)</title><rect x="4.5486%" y="1125" width="0.0184%" height="15" fill="rgb(246,46,29)" fg:x="4702" fg:w="19"/><text x="4.7986%" y="1135.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (233 samples, 0.23%)</title><rect x="4.3609%" y="1157" width="0.2254%" height="15" fill="rgb(246,185,52)" fg:x="4508" fg:w="233"/><text x="4.6109%" y="1167.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (20 samples, 0.02%)</title><rect x="4.5670%" y="1141" width="0.0193%" height="15" fill="rgb(252,136,11)" fg:x="4721" fg:w="20"/><text x="4.8170%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (11 samples, 0.01%)</title><rect x="4.5757%" y="1125" width="0.0106%" height="15" fill="rgb(219,138,53)" fg:x="4730" fg:w="11"/><text x="4.8257%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (11 samples, 0.01%)</title><rect x="4.5757%" y="1109" width="0.0106%" height="15" fill="rgb(211,51,23)" fg:x="4730" fg:w="11"/><text x="4.8257%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="4.5757%" y="1093" width="0.0106%" height="15" fill="rgb(247,221,28)" fg:x="4730" fg:w="11"/><text x="4.8257%" y="1103.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="4.5757%" y="1077" width="0.0106%" height="15" fill="rgb(251,222,45)" fg:x="4730" fg:w="11"/><text x="4.8257%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (11 samples, 0.01%)</title><rect x="4.5757%" y="1061" width="0.0106%" height="15" fill="rgb(217,162,53)" fg:x="4730" fg:w="11"/><text x="4.8257%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (116 samples, 0.11%)</title><rect x="4.6086%" y="1141" width="0.1122%" height="15" fill="rgb(229,93,14)" fg:x="4764" fg:w="116"/><text x="4.8586%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (97 samples, 0.09%)</title><rect x="4.6270%" y="1125" width="0.0938%" height="15" fill="rgb(209,67,49)" fg:x="4783" fg:w="97"/><text x="4.8770%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (13 samples, 0.01%)</title><rect x="4.7082%" y="1109" width="0.0126%" height="15" fill="rgb(213,87,29)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.01%)</title><rect x="4.7082%" y="1093" width="0.0126%" height="15" fill="rgb(205,151,52)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="1103.50"></text></g><g><title>value_trait::Builder::object (13 samples, 0.01%)</title><rect x="4.7082%" y="1077" width="0.0126%" height="15" fill="rgb(253,215,39)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="1087.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (13 samples, 0.01%)</title><rect x="4.7082%" y="1061" width="0.0126%" height="15" fill="rgb(221,220,41)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="4.7082%" y="1045" width="0.0126%" height="15" fill="rgb(218,133,21)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="4.7082%" y="1029" width="0.0126%" height="15" fill="rgb(221,193,43)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="4.7082%" y="1013" width="0.0126%" height="15" fill="rgb(240,128,52)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="4.7082%" y="997" width="0.0126%" height="15" fill="rgb(253,114,12)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="4.7082%" y="981" width="0.0126%" height="15" fill="rgb(215,223,47)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="991.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="4.7082%" y="965" width="0.0126%" height="15" fill="rgb(248,225,23)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="975.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="4.7082%" y="949" width="0.0126%" height="15" fill="rgb(250,108,0)" fg:x="4867" fg:w="13"/><text x="4.9582%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="4.7208%" y="1141" width="0.0126%" height="15" fill="rgb(228,208,7)" fg:x="4880" fg:w="13"/><text x="4.9708%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (16 samples, 0.02%)</title><rect x="4.7334%" y="1141" width="0.0155%" height="15" fill="rgb(244,45,10)" fg:x="4893" fg:w="16"/><text x="4.9834%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (16 samples, 0.02%)</title><rect x="4.7334%" y="1125" width="0.0155%" height="15" fill="rgb(207,125,25)" fg:x="4893" fg:w="16"/><text x="4.9834%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="4.7334%" y="1109" width="0.0155%" height="15" fill="rgb(210,195,18)" fg:x="4893" fg:w="16"/><text x="4.9834%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="4.7334%" y="1093" width="0.0155%" height="15" fill="rgb(249,80,12)" fg:x="4893" fg:w="16"/><text x="4.9834%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="4.7334%" y="1077" width="0.0155%" height="15" fill="rgb(221,65,9)" fg:x="4893" fg:w="16"/><text x="4.9834%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="4.7334%" y="1061" width="0.0155%" height="15" fill="rgb(235,49,36)" fg:x="4893" fg:w="16"/><text x="4.9834%" y="1071.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="4.7334%" y="1045" width="0.0155%" height="15" fill="rgb(225,32,20)" fg:x="4893" fg:w="16"/><text x="4.9834%" y="1055.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="4.7334%" y="1029" width="0.0155%" height="15" fill="rgb(215,141,46)" fg:x="4893" fg:w="16"/><text x="4.9834%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (191 samples, 0.18%)</title><rect x="4.5863%" y="1157" width="0.1848%" height="15" fill="rgb(250,160,47)" fg:x="4741" fg:w="191"/><text x="4.8363%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="4.7489%" y="1141" width="0.0222%" height="15" fill="rgb(216,222,40)" fg:x="4909" fg:w="23"/><text x="4.9989%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (23 samples, 0.02%)</title><rect x="4.7489%" y="1125" width="0.0222%" height="15" fill="rgb(234,217,39)" fg:x="4909" fg:w="23"/><text x="4.9989%" y="1135.50"></text></g><g><title>alloc::alloc::box_free (15 samples, 0.01%)</title><rect x="4.7566%" y="1109" width="0.0145%" height="15" fill="rgb(207,178,40)" fg:x="4917" fg:w="15"/><text x="5.0066%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="4.7566%" y="1093" width="0.0145%" height="15" fill="rgb(221,136,13)" fg:x="4917" fg:w="15"/><text x="5.0066%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="4.7566%" y="1077" width="0.0145%" height="15" fill="rgb(249,199,10)" fg:x="4917" fg:w="15"/><text x="5.0066%" y="1087.50"></text></g><g><title>__rg_dealloc (15 samples, 0.01%)</title><rect x="4.7566%" y="1061" width="0.0145%" height="15" fill="rgb(249,222,13)" fg:x="4917" fg:w="15"/><text x="5.0066%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (15 samples, 0.01%)</title><rect x="4.7566%" y="1045" width="0.0145%" height="15" fill="rgb(244,185,38)" fg:x="4917" fg:w="15"/><text x="5.0066%" y="1055.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (46 samples, 0.04%)</title><rect x="4.7711%" y="1157" width="0.0445%" height="15" fill="rgb(236,202,9)" fg:x="4932" fg:w="46"/><text x="5.0211%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (23 samples, 0.02%)</title><rect x="4.8205%" y="1157" width="0.0222%" height="15" fill="rgb(250,229,37)" fg:x="4983" fg:w="23"/><text x="5.0705%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (24 samples, 0.02%)</title><rect x="4.8427%" y="1157" width="0.0232%" height="15" fill="rgb(206,174,23)" fg:x="5006" fg:w="24"/><text x="5.0927%" y="1167.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (34 samples, 0.03%)</title><rect x="4.8659%" y="1157" width="0.0329%" height="15" fill="rgb(211,33,43)" fg:x="5030" fg:w="34"/><text x="5.1159%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="5.0072%" y="1109" width="0.0164%" height="15" fill="rgb(245,58,50)" fg:x="5176" fg:w="17"/><text x="5.2572%" y="1119.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="5.0072%" y="1093" width="0.0164%" height="15" fill="rgb(244,68,36)" fg:x="5176" fg:w="17"/><text x="5.2572%" y="1103.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (146 samples, 0.14%)</title><rect x="4.8988%" y="1157" width="0.1412%" height="15" fill="rgb(232,229,15)" fg:x="5064" fg:w="146"/><text x="5.1488%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.05%)</title><rect x="4.9917%" y="1141" width="0.0484%" height="15" fill="rgb(254,30,23)" fg:x="5160" fg:w="50"/><text x="5.2417%" y="1151.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (50 samples, 0.05%)</title><rect x="4.9917%" y="1125" width="0.0484%" height="15" fill="rgb(235,160,14)" fg:x="5160" fg:w="50"/><text x="5.2417%" y="1135.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (17 samples, 0.02%)</title><rect x="5.0236%" y="1109" width="0.0164%" height="15" fill="rgb(212,155,44)" fg:x="5193" fg:w="17"/><text x="5.2736%" y="1119.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (17 samples, 0.02%)</title><rect x="5.0236%" y="1093" width="0.0164%" height="15" fill="rgb(226,2,50)" fg:x="5193" fg:w="17"/><text x="5.2736%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="5.0236%" y="1077" width="0.0164%" height="15" fill="rgb(234,177,6)" fg:x="5193" fg:w="17"/><text x="5.2736%" y="1087.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (17 samples, 0.02%)</title><rect x="5.0236%" y="1061" width="0.0164%" height="15" fill="rgb(217,24,9)" fg:x="5193" fg:w="17"/><text x="5.2736%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.02%)</title><rect x="5.0236%" y="1045" width="0.0164%" height="15" fill="rgb(220,13,46)" fg:x="5193" fg:w="17"/><text x="5.2736%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.02%)</title><rect x="5.0236%" y="1029" width="0.0164%" height="15" fill="rgb(239,221,27)" fg:x="5193" fg:w="17"/><text x="5.2736%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 0.02%)</title><rect x="5.0236%" y="1013" width="0.0164%" height="15" fill="rgb(222,198,25)" fg:x="5193" fg:w="17"/><text x="5.2736%" y="1023.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (82 samples, 0.08%)</title><rect x="5.0400%" y="1157" width="0.0793%" height="15" fill="rgb(211,99,13)" fg:x="5210" fg:w="82"/><text x="5.2900%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="5.1087%" y="1141" width="0.0106%" height="15" fill="rgb(232,111,31)" fg:x="5281" fg:w="11"/><text x="5.3587%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="5.1087%" y="1125" width="0.0106%" height="15" fill="rgb(245,82,37)" fg:x="5281" fg:w="11"/><text x="5.3587%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="5.1087%" y="1109" width="0.0106%" height="15" fill="rgb(227,149,46)" fg:x="5281" fg:w="11"/><text x="5.3587%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="5.1087%" y="1093" width="0.0106%" height="15" fill="rgb(218,36,50)" fg:x="5281" fg:w="11"/><text x="5.3587%" y="1103.50"></text></g><g><title>__rg_alloc (11 samples, 0.01%)</title><rect x="5.1087%" y="1077" width="0.0106%" height="15" fill="rgb(226,80,48)" fg:x="5281" fg:w="11"/><text x="5.3587%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.01%)</title><rect x="5.1087%" y="1061" width="0.0106%" height="15" fill="rgb(238,224,15)" fg:x="5281" fg:w="11"/><text x="5.3587%" y="1071.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (56 samples, 0.05%)</title><rect x="5.1194%" y="1157" width="0.0542%" height="15" fill="rgb(241,136,10)" fg:x="5292" fg:w="56"/><text x="5.3694%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.01%)</title><rect x="5.1600%" y="1141" width="0.0135%" height="15" fill="rgb(208,32,45)" fg:x="5334" fg:w="14"/><text x="5.4100%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.01%)</title><rect x="5.1600%" y="1125" width="0.0135%" height="15" fill="rgb(207,135,9)" fg:x="5334" fg:w="14"/><text x="5.4100%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.01%)</title><rect x="5.1600%" y="1109" width="0.0135%" height="15" fill="rgb(206,86,44)" fg:x="5334" fg:w="14"/><text x="5.4100%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.01%)</title><rect x="5.1600%" y="1093" width="0.0135%" height="15" fill="rgb(245,177,15)" fg:x="5334" fg:w="14"/><text x="5.4100%" y="1103.50"></text></g><g><title>__rg_alloc (14 samples, 0.01%)</title><rect x="5.1600%" y="1077" width="0.0135%" height="15" fill="rgb(206,64,50)" fg:x="5334" fg:w="14"/><text x="5.4100%" y="1087.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.01%)</title><rect x="5.1600%" y="1061" width="0.0135%" height="15" fill="rgb(234,36,40)" fg:x="5334" fg:w="14"/><text x="5.4100%" y="1071.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (73 samples, 0.07%)</title><rect x="5.1735%" y="1157" width="0.0706%" height="15" fill="rgb(213,64,8)" fg:x="5348" fg:w="73"/><text x="5.4235%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (31 samples, 0.03%)</title><rect x="5.2142%" y="1141" width="0.0300%" height="15" fill="rgb(210,75,36)" fg:x="5390" fg:w="31"/><text x="5.4642%" y="1151.50"></text></g><g><title>[anon] (4,816 samples, 4.66%)</title><rect x="0.5911%" y="1173" width="4.6589%" height="15" fill="rgb(229,88,21)" fg:x="611" fg:w="4816"/><text x="0.8411%" y="1183.50">[anon]</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="5.2567%" y="1157" width="0.0145%" height="15" fill="rgb(252,204,47)" fg:x="5434" fg:w="15"/><text x="5.5067%" y="1167.50"></text></g><g><title>[libc.so.6] (25 samples, 0.02%)</title><rect x="5.2500%" y="1173" width="0.0242%" height="15" fill="rgb(208,77,27)" fg:x="5427" fg:w="25"/><text x="5.5000%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (100 samples, 0.10%)</title><rect x="5.2916%" y="1157" width="0.0967%" height="15" fill="rgb(221,76,26)" fg:x="5470" fg:w="100"/><text x="5.5416%" y="1167.50"></text></g><g><title>[tremor-connectors] (119 samples, 0.12%)</title><rect x="5.2742%" y="1173" width="0.1151%" height="15" fill="rgb(225,139,18)" fg:x="5452" fg:w="119"/><text x="5.5242%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="5.3893%" y="1157" width="0.0271%" height="15" fill="rgb(230,137,11)" fg:x="5571" fg:w="28"/><text x="5.6393%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="5.5305%" y="1013" width="0.0203%" height="15" fill="rgb(212,28,1)" fg:x="5717" fg:w="21"/><text x="5.7805%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.02%)</title><rect x="5.5305%" y="997" width="0.0203%" height="15" fill="rgb(248,164,17)" fg:x="5717" fg:w="21"/><text x="5.7805%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.02%)</title><rect x="5.5305%" y="981" width="0.0203%" height="15" fill="rgb(222,171,42)" fg:x="5717" fg:w="21"/><text x="5.7805%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="5.5305%" y="965" width="0.0203%" height="15" fill="rgb(243,84,45)" fg:x="5717" fg:w="21"/><text x="5.7805%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="5.5305%" y="949" width="0.0203%" height="15" fill="rgb(252,49,23)" fg:x="5717" fg:w="21"/><text x="5.7805%" y="959.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="5.5305%" y="933" width="0.0203%" height="15" fill="rgb(215,19,7)" fg:x="5717" fg:w="21"/><text x="5.7805%" y="943.50"></text></g><g><title>__rg_alloc (21 samples, 0.02%)</title><rect x="5.5305%" y="917" width="0.0203%" height="15" fill="rgb(238,81,41)" fg:x="5717" fg:w="21"/><text x="5.7805%" y="927.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (21 samples, 0.02%)</title><rect x="5.5305%" y="901" width="0.0203%" height="15" fill="rgb(210,199,37)" fg:x="5717" fg:w="21"/><text x="5.7805%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="5.5305%" y="1093" width="0.0406%" height="15" fill="rgb(244,192,49)" fg:x="5717" fg:w="42"/><text x="5.7805%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="5.5305%" y="1077" width="0.0406%" height="15" fill="rgb(226,211,11)" fg:x="5717" fg:w="42"/><text x="5.7805%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.04%)</title><rect x="5.5305%" y="1061" width="0.0406%" height="15" fill="rgb(236,162,54)" fg:x="5717" fg:w="42"/><text x="5.7805%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.04%)</title><rect x="5.5305%" y="1045" width="0.0406%" height="15" fill="rgb(220,229,9)" fg:x="5717" fg:w="42"/><text x="5.7805%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.04%)</title><rect x="5.5305%" y="1029" width="0.0406%" height="15" fill="rgb(250,87,22)" fg:x="5717" fg:w="42"/><text x="5.7805%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21 samples, 0.02%)</title><rect x="5.5508%" y="1013" width="0.0203%" height="15" fill="rgb(239,43,17)" fg:x="5738" fg:w="21"/><text x="5.8008%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="5.5508%" y="997" width="0.0203%" height="15" fill="rgb(231,177,25)" fg:x="5738" fg:w="21"/><text x="5.8008%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (182 samples, 0.18%)</title><rect x="5.4164%" y="1157" width="0.1761%" height="15" fill="rgb(219,179,1)" fg:x="5599" fg:w="182"/><text x="5.6664%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (64 samples, 0.06%)</title><rect x="5.5305%" y="1141" width="0.0619%" height="15" fill="rgb(238,219,53)" fg:x="5717" fg:w="64"/><text x="5.7805%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (64 samples, 0.06%)</title><rect x="5.5305%" y="1125" width="0.0619%" height="15" fill="rgb(232,167,36)" fg:x="5717" fg:w="64"/><text x="5.7805%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64 samples, 0.06%)</title><rect x="5.5305%" y="1109" width="0.0619%" height="15" fill="rgb(244,19,51)" fg:x="5717" fg:w="64"/><text x="5.7805%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="5.5711%" y="1093" width="0.0213%" height="15" fill="rgb(224,6,22)" fg:x="5759" fg:w="22"/><text x="5.8211%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="5.5711%" y="1077" width="0.0213%" height="15" fill="rgb(224,145,5)" fg:x="5759" fg:w="22"/><text x="5.8211%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="5.5711%" y="1061" width="0.0213%" height="15" fill="rgb(234,130,49)" fg:x="5759" fg:w="22"/><text x="5.8211%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="5.5711%" y="1045" width="0.0213%" height="15" fill="rgb(254,6,2)" fg:x="5759" fg:w="22"/><text x="5.8211%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="5.5711%" y="1029" width="0.0213%" height="15" fill="rgb(208,96,46)" fg:x="5759" fg:w="22"/><text x="5.8211%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="5.5711%" y="1013" width="0.0213%" height="15" fill="rgb(239,3,39)" fg:x="5759" fg:w="22"/><text x="5.8211%" y="1023.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="5.5711%" y="997" width="0.0213%" height="15" fill="rgb(233,210,1)" fg:x="5759" fg:w="22"/><text x="5.8211%" y="1007.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="5.5711%" y="981" width="0.0213%" height="15" fill="rgb(244,137,37)" fg:x="5759" fg:w="22"/><text x="5.8211%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (198 samples, 0.19%)</title><rect x="5.6021%" y="1157" width="0.1915%" height="15" fill="rgb(240,136,2)" fg:x="5791" fg:w="198"/><text x="5.8521%" y="1167.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (15 samples, 0.01%)</title><rect x="5.7791%" y="1141" width="0.0145%" height="15" fill="rgb(239,18,37)" fg:x="5974" fg:w="15"/><text x="6.0291%" y="1151.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="5.7936%" y="1157" width="0.0242%" height="15" fill="rgb(218,185,22)" fg:x="5989" fg:w="25"/><text x="6.0436%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="6.0210%" y="1029" width="0.0213%" height="15" fill="rgb(225,218,4)" fg:x="6224" fg:w="22"/><text x="6.2710%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="6.0210%" y="1013" width="0.0213%" height="15" fill="rgb(230,182,32)" fg:x="6224" fg:w="22"/><text x="6.2710%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.02%)</title><rect x="6.0210%" y="997" width="0.0213%" height="15" fill="rgb(242,56,43)" fg:x="6224" fg:w="22"/><text x="6.2710%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="6.0210%" y="981" width="0.0213%" height="15" fill="rgb(233,99,24)" fg:x="6224" fg:w="22"/><text x="6.2710%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="6.0210%" y="965" width="0.0213%" height="15" fill="rgb(234,209,42)" fg:x="6224" fg:w="22"/><text x="6.2710%" y="975.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.02%)</title><rect x="6.0210%" y="949" width="0.0213%" height="15" fill="rgb(227,7,12)" fg:x="6224" fg:w="22"/><text x="6.2710%" y="959.50"></text></g><g><title>__rg_alloc (22 samples, 0.02%)</title><rect x="6.0210%" y="933" width="0.0213%" height="15" fill="rgb(245,203,43)" fg:x="6224" fg:w="22"/><text x="6.2710%" y="943.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (22 samples, 0.02%)</title><rect x="6.0210%" y="917" width="0.0213%" height="15" fill="rgb(238,205,33)" fg:x="6224" fg:w="22"/><text x="6.2710%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="6.0113%" y="1125" width="0.0493%" height="15" fill="rgb(231,56,7)" fg:x="6214" fg:w="51"/><text x="6.2613%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="6.0210%" y="1109" width="0.0397%" height="15" fill="rgb(244,186,29)" fg:x="6224" fg:w="41"/><text x="6.2710%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="6.0210%" y="1093" width="0.0397%" height="15" fill="rgb(234,111,31)" fg:x="6224" fg:w="41"/><text x="6.2710%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 0.04%)</title><rect x="6.0210%" y="1077" width="0.0397%" height="15" fill="rgb(241,149,10)" fg:x="6224" fg:w="41"/><text x="6.2710%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 0.04%)</title><rect x="6.0210%" y="1061" width="0.0397%" height="15" fill="rgb(249,206,44)" fg:x="6224" fg:w="41"/><text x="6.2710%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 0.04%)</title><rect x="6.0210%" y="1045" width="0.0397%" height="15" fill="rgb(251,153,30)" fg:x="6224" fg:w="41"/><text x="6.2710%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.02%)</title><rect x="6.0423%" y="1029" width="0.0184%" height="15" fill="rgb(239,152,38)" fg:x="6246" fg:w="19"/><text x="6.2923%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="6.0423%" y="1013" width="0.0184%" height="15" fill="rgb(249,139,47)" fg:x="6246" fg:w="19"/><text x="6.2923%" y="1023.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (62 samples, 0.06%)</title><rect x="6.0113%" y="1141" width="0.0600%" height="15" fill="rgb(244,64,35)" fg:x="6214" fg:w="62"/><text x="6.2613%" y="1151.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (11 samples, 0.01%)</title><rect x="6.0606%" y="1125" width="0.0106%" height="15" fill="rgb(216,46,15)" fg:x="6265" fg:w="11"/><text x="6.3106%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="6.0606%" y="1109" width="0.0106%" height="15" fill="rgb(250,74,19)" fg:x="6265" fg:w="11"/><text x="6.3106%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.01%)</title><rect x="6.0606%" y="1093" width="0.0106%" height="15" fill="rgb(249,42,33)" fg:x="6265" fg:w="11"/><text x="6.3106%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.01%)</title><rect x="6.0606%" y="1077" width="0.0106%" height="15" fill="rgb(242,149,17)" fg:x="6265" fg:w="11"/><text x="6.3106%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.01%)</title><rect x="6.0606%" y="1061" width="0.0106%" height="15" fill="rgb(244,29,21)" fg:x="6265" fg:w="11"/><text x="6.3106%" y="1071.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (31 samples, 0.03%)</title><rect x="6.0713%" y="1141" width="0.0300%" height="15" fill="rgb(220,130,37)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="6.0713%" y="1125" width="0.0300%" height="15" fill="rgb(211,67,2)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="6.0713%" y="1109" width="0.0300%" height="15" fill="rgb(235,68,52)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (31 samples, 0.03%)</title><rect x="6.0713%" y="1093" width="0.0300%" height="15" fill="rgb(246,142,3)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (31 samples, 0.03%)</title><rect x="6.0713%" y="1077" width="0.0300%" height="15" fill="rgb(241,25,7)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (31 samples, 0.03%)</title><rect x="6.0713%" y="1061" width="0.0300%" height="15" fill="rgb(242,119,39)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="6.0713%" y="1045" width="0.0300%" height="15" fill="rgb(241,98,45)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="6.0713%" y="1029" width="0.0300%" height="15" fill="rgb(254,28,30)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (31 samples, 0.03%)</title><rect x="6.0713%" y="1013" width="0.0300%" height="15" fill="rgb(241,142,54)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="6.0713%" y="997" width="0.0300%" height="15" fill="rgb(222,85,15)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (31 samples, 0.03%)</title><rect x="6.0713%" y="981" width="0.0300%" height="15" fill="rgb(210,85,47)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 0.03%)</title><rect x="6.0713%" y="965" width="0.0300%" height="15" fill="rgb(224,206,25)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="6.0713%" y="949" width="0.0300%" height="15" fill="rgb(243,201,19)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (31 samples, 0.03%)</title><rect x="6.0713%" y="933" width="0.0300%" height="15" fill="rgb(236,59,4)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (31 samples, 0.03%)</title><rect x="6.0713%" y="917" width="0.0300%" height="15" fill="rgb(254,179,45)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="6.0713%" y="901" width="0.0300%" height="15" fill="rgb(226,14,10)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (31 samples, 0.03%)</title><rect x="6.0713%" y="885" width="0.0300%" height="15" fill="rgb(244,27,41)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.03%)</title><rect x="6.0713%" y="869" width="0.0300%" height="15" fill="rgb(235,35,32)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="879.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (31 samples, 0.03%)</title><rect x="6.0713%" y="853" width="0.0300%" height="15" fill="rgb(218,68,31)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (31 samples, 0.03%)</title><rect x="6.0713%" y="837" width="0.0300%" height="15" fill="rgb(207,120,37)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="847.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="6.0713%" y="821" width="0.0300%" height="15" fill="rgb(227,98,0)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (31 samples, 0.03%)</title><rect x="6.0713%" y="805" width="0.0300%" height="15" fill="rgb(207,7,3)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="6.0713%" y="789" width="0.0300%" height="15" fill="rgb(206,98,19)" fg:x="6276" fg:w="31"/><text x="6.3213%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.01%)</title><rect x="6.0897%" y="773" width="0.0116%" height="15" fill="rgb(217,5,26)" fg:x="6295" fg:w="12"/><text x="6.3397%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.01%)</title><rect x="6.0897%" y="757" width="0.0116%" height="15" fill="rgb(235,190,38)" fg:x="6295" fg:w="12"/><text x="6.3397%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="6.1332%" y="949" width="0.0155%" height="15" fill="rgb(247,86,24)" fg:x="6340" fg:w="16"/><text x="6.3832%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (423 samples, 0.41%)</title><rect x="6.1487%" y="949" width="0.4092%" height="15" fill="rgb(205,101,16)" fg:x="6356" fg:w="423"/><text x="6.3987%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.02%)</title><rect x="6.6894%" y="933" width="0.0174%" height="15" fill="rgb(246,168,33)" fg:x="6915" fg:w="18"/><text x="6.9394%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,084 samples, 1.05%)</title><rect x="6.7068%" y="933" width="1.0486%" height="15" fill="rgb(231,114,1)" fg:x="6933" fg:w="1084"/><text x="6.9568%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (23 samples, 0.02%)</title><rect x="7.7555%" y="917" width="0.0222%" height="15" fill="rgb(207,184,53)" fg:x="8017" fg:w="23"/><text x="8.0055%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1141" width="1.6910%" height="15" fill="rgb(224,95,51)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1125" width="1.6910%" height="15" fill="rgb(212,188,45)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1109" width="1.6910%" height="15" fill="rgb(223,154,38)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1093" width="1.6910%" height="15" fill="rgb(251,22,52)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1077" width="1.6910%" height="15" fill="rgb(229,209,22)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1061" width="1.6910%" height="15" fill="rgb(234,138,34)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1045" width="1.6910%" height="15" fill="rgb(212,95,11)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1029" width="1.6910%" height="15" fill="rgb(240,179,47)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1039.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (1,748 samples, 1.69%)</title><rect x="6.1013%" y="1013" width="1.6910%" height="15" fill="rgb(240,163,11)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,748 samples, 1.69%)</title><rect x="6.1013%" y="997" width="1.6910%" height="15" fill="rgb(236,37,12)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="1007.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,748 samples, 1.69%)</title><rect x="6.1013%" y="981" width="1.6910%" height="15" fill="rgb(232,164,16)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,748 samples, 1.69%)</title><rect x="6.1013%" y="965" width="1.6910%" height="15" fill="rgb(244,205,15)" fg:x="6307" fg:w="1748"/><text x="6.3513%" y="975.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,276 samples, 1.23%)</title><rect x="6.5579%" y="949" width="1.2344%" height="15" fill="rgb(223,117,47)" fg:x="6779" fg:w="1276"/><text x="6.8079%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (38 samples, 0.04%)</title><rect x="7.7555%" y="933" width="0.0368%" height="15" fill="rgb(244,107,35)" fg:x="8017" fg:w="38"/><text x="8.0055%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (15 samples, 0.01%)</title><rect x="7.7777%" y="917" width="0.0145%" height="15" fill="rgb(205,140,8)" fg:x="8040" fg:w="15"/><text x="8.0277%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,046 samples, 1.98%)</title><rect x="5.8178%" y="1157" width="1.9793%" height="15" fill="rgb(228,84,46)" fg:x="6014" fg:w="2046"/><text x="6.0678%" y="1167.50">&lt;..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="7.7971%" y="1157" width="0.0145%" height="15" fill="rgb(254,188,9)" fg:x="8060" fg:w="15"/><text x="8.0471%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (18 samples, 0.02%)</title><rect x="7.8155%" y="1157" width="0.0174%" height="15" fill="rgb(206,112,54)" fg:x="8079" fg:w="18"/><text x="8.0655%" y="1167.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (52 samples, 0.05%)</title><rect x="7.8329%" y="1157" width="0.0503%" height="15" fill="rgb(216,84,49)" fg:x="8097" fg:w="52"/><text x="8.0829%" y="1167.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (16 samples, 0.02%)</title><rect x="7.8832%" y="1157" width="0.0155%" height="15" fill="rgb(214,194,35)" fg:x="8149" fg:w="16"/><text x="8.1332%" y="1167.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="7.8987%" y="1157" width="0.0174%" height="15" fill="rgb(249,28,3)" fg:x="8165" fg:w="18"/><text x="8.1487%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (18 samples, 0.02%)</title><rect x="7.8987%" y="1141" width="0.0174%" height="15" fill="rgb(222,56,52)" fg:x="8165" fg:w="18"/><text x="8.1487%" y="1151.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="7.9199%" y="1157" width="0.0290%" height="15" fill="rgb(245,217,50)" fg:x="8187" fg:w="30"/><text x="8.1699%" y="1167.50"></text></g><g><title>__clock_gettime_2 (147 samples, 0.14%)</title><rect x="7.9490%" y="1157" width="0.1422%" height="15" fill="rgb(213,201,24)" fg:x="8217" fg:w="147"/><text x="8.1990%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (108 samples, 0.10%)</title><rect x="8.0921%" y="1157" width="0.1045%" height="15" fill="rgb(248,116,28)" fg:x="8365" fg:w="108"/><text x="8.3421%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (37 samples, 0.04%)</title><rect x="8.1966%" y="1157" width="0.0358%" height="15" fill="rgb(219,72,43)" fg:x="8473" fg:w="37"/><text x="8.4466%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (27 samples, 0.03%)</title><rect x="8.2063%" y="1141" width="0.0261%" height="15" fill="rgb(209,138,14)" fg:x="8483" fg:w="27"/><text x="8.4563%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (41 samples, 0.04%)</title><rect x="8.2324%" y="1157" width="0.0397%" height="15" fill="rgb(222,18,33)" fg:x="8510" fg:w="41"/><text x="8.4824%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (123 samples, 0.12%)</title><rect x="8.2721%" y="1157" width="0.1190%" height="15" fill="rgb(213,199,7)" fg:x="8551" fg:w="123"/><text x="8.5221%" y="1167.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.01%)</title><rect x="8.4549%" y="725" width="0.0145%" height="15" fill="rgb(250,110,10)" fg:x="8740" fg:w="15"/><text x="8.7049%" y="735.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="8.4781%" y="709" width="0.0106%" height="15" fill="rgb(248,123,6)" fg:x="8764" fg:w="11"/><text x="8.7281%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.02%)</title><rect x="8.4946%" y="613" width="0.0155%" height="15" fill="rgb(206,91,31)" fg:x="8781" fg:w="16"/><text x="8.7446%" y="623.50"></text></g><g><title>core::mem::drop (19 samples, 0.02%)</title><rect x="8.4926%" y="709" width="0.0184%" height="15" fill="rgb(211,154,13)" fg:x="8779" fg:w="19"/><text x="8.7426%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (19 samples, 0.02%)</title><rect x="8.4926%" y="693" width="0.0184%" height="15" fill="rgb(225,148,7)" fg:x="8779" fg:w="19"/><text x="8.7426%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (18 samples, 0.02%)</title><rect x="8.4936%" y="677" width="0.0174%" height="15" fill="rgb(220,160,43)" fg:x="8780" fg:w="18"/><text x="8.7436%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="8.4936%" y="661" width="0.0174%" height="15" fill="rgb(213,52,39)" fg:x="8780" fg:w="18"/><text x="8.7436%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.02%)</title><rect x="8.4946%" y="645" width="0.0164%" height="15" fill="rgb(243,137,7)" fg:x="8781" fg:w="17"/><text x="8.7446%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (17 samples, 0.02%)</title><rect x="8.4946%" y="629" width="0.0164%" height="15" fill="rgb(230,79,13)" fg:x="8781" fg:w="17"/><text x="8.7446%" y="639.50"></text></g><g><title>event_listener::Inner::lock (110 samples, 0.11%)</title><rect x="8.5207%" y="709" width="0.1064%" height="15" fill="rgb(247,105,23)" fg:x="8808" fg:w="110"/><text x="8.7707%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (110 samples, 0.11%)</title><rect x="8.5207%" y="693" width="0.1064%" height="15" fill="rgb(223,179,41)" fg:x="8808" fg:w="110"/><text x="8.7707%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (105 samples, 0.10%)</title><rect x="8.5255%" y="677" width="0.1016%" height="15" fill="rgb(218,9,34)" fg:x="8813" fg:w="105"/><text x="8.7755%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (78 samples, 0.08%)</title><rect x="8.5516%" y="661" width="0.0755%" height="15" fill="rgb(222,106,8)" fg:x="8840" fg:w="78"/><text x="8.8016%" y="671.50"></text></g><g><title>___pthread_mutex_lock (78 samples, 0.08%)</title><rect x="8.5516%" y="645" width="0.0755%" height="15" fill="rgb(211,220,0)" fg:x="8840" fg:w="78"/><text x="8.8016%" y="655.50"></text></g><g><title>__GI___lll_lock_wait (16 samples, 0.02%)</title><rect x="8.6116%" y="629" width="0.0155%" height="15" fill="rgb(229,52,16)" fg:x="8902" fg:w="16"/><text x="8.8616%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (200 samples, 0.19%)</title><rect x="8.4694%" y="725" width="0.1935%" height="15" fill="rgb(212,155,18)" fg:x="8755" fg:w="200"/><text x="8.7194%" y="735.50"></text></g><g><title>event_listener::List::remove (37 samples, 0.04%)</title><rect x="8.6271%" y="709" width="0.0358%" height="15" fill="rgb(242,21,14)" fg:x="8918" fg:w="37"/><text x="8.8771%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (26 samples, 0.03%)</title><rect x="8.6377%" y="693" width="0.0252%" height="15" fill="rgb(222,19,48)" fg:x="8929" fg:w="26"/><text x="8.8877%" y="703.50"></text></g><g><title>core::mem::replace (26 samples, 0.03%)</title><rect x="8.6377%" y="677" width="0.0252%" height="15" fill="rgb(232,45,27)" fg:x="8929" fg:w="26"/><text x="8.8877%" y="687.50"></text></g><g><title>core::ptr::read (26 samples, 0.03%)</title><rect x="8.6377%" y="661" width="0.0252%" height="15" fill="rgb(249,103,42)" fg:x="8929" fg:w="26"/><text x="8.8877%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (737 samples, 0.71%)</title><rect x="8.6629%" y="725" width="0.7130%" height="15" fill="rgb(246,81,33)" fg:x="8955" fg:w="737"/><text x="8.9129%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (780 samples, 0.75%)</title><rect x="9.4242%" y="709" width="0.7546%" height="15" fill="rgb(252,33,42)" fg:x="9742" fg:w="780"/><text x="9.6742%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (436 samples, 0.42%)</title><rect x="10.4284%" y="677" width="0.4218%" height="15" fill="rgb(209,212,41)" fg:x="10780" fg:w="436"/><text x="10.6784%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (55 samples, 0.05%)</title><rect x="10.8501%" y="677" width="0.0532%" height="15" fill="rgb(207,154,6)" fg:x="11216" fg:w="55"/><text x="11.1001%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (52 samples, 0.05%)</title><rect x="10.8530%" y="661" width="0.0503%" height="15" fill="rgb(223,64,47)" fg:x="11219" fg:w="52"/><text x="11.1030%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (52 samples, 0.05%)</title><rect x="10.8530%" y="645" width="0.0503%" height="15" fill="rgb(211,161,38)" fg:x="11219" fg:w="52"/><text x="11.1030%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.05%)</title><rect x="10.8530%" y="629" width="0.0503%" height="15" fill="rgb(219,138,40)" fg:x="11219" fg:w="52"/><text x="11.1030%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (464 samples, 0.45%)</title><rect x="10.9072%" y="677" width="0.4489%" height="15" fill="rgb(241,228,46)" fg:x="11275" fg:w="464"/><text x="11.1572%" y="687.50"></text></g><g><title>core::ptr::read (464 samples, 0.45%)</title><rect x="10.9072%" y="661" width="0.4489%" height="15" fill="rgb(223,209,38)" fg:x="11275" fg:w="464"/><text x="11.1572%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (464 samples, 0.45%)</title><rect x="10.9072%" y="645" width="0.4489%" height="15" fill="rgb(236,164,45)" fg:x="11275" fg:w="464"/><text x="11.1572%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (945 samples, 0.91%)</title><rect x="11.3561%" y="677" width="0.9142%" height="15" fill="rgb(231,15,5)" fg:x="11739" fg:w="945"/><text x="11.6061%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (945 samples, 0.91%)</title><rect x="11.3561%" y="661" width="0.9142%" height="15" fill="rgb(252,35,15)" fg:x="11739" fg:w="945"/><text x="11.6061%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (284 samples, 0.27%)</title><rect x="12.2702%" y="677" width="0.2747%" height="15" fill="rgb(248,181,18)" fg:x="12684" fg:w="284"/><text x="12.5202%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (274 samples, 0.27%)</title><rect x="12.2799%" y="661" width="0.2651%" height="15" fill="rgb(233,39,42)" fg:x="12694" fg:w="274"/><text x="12.5299%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,449 samples, 2.37%)</title><rect x="10.1788%" y="709" width="2.3691%" height="15" fill="rgb(238,110,33)" fg:x="10522" fg:w="2449"/><text x="10.4288%" y="719.50">co..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,376 samples, 2.30%)</title><rect x="10.2494%" y="693" width="2.2985%" height="15" fill="rgb(233,195,10)" fg:x="10595" fg:w="2376"/><text x="10.4994%" y="703.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="12.5624%" y="693" width="0.0106%" height="15" fill="rgb(254,105,3)" fg:x="12986" fg:w="11"/><text x="12.8124%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="12.5624%" y="677" width="0.0106%" height="15" fill="rgb(221,225,9)" fg:x="12986" fg:w="11"/><text x="12.8124%" y="687.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3,733 samples, 3.61%)</title><rect x="9.3758%" y="725" width="3.6112%" height="15" fill="rgb(224,227,45)" fg:x="9692" fg:w="3733"/><text x="9.6258%" y="735.50">asyn..</text></g><g><title>event_listener::Event::notify (454 samples, 0.44%)</title><rect x="12.5479%" y="709" width="0.4392%" height="15" fill="rgb(229,198,43)" fg:x="12971" fg:w="454"/><text x="12.7979%" y="719.50"></text></g><g><title>event_listener::full_fence (412 samples, 0.40%)</title><rect x="12.5885%" y="693" width="0.3986%" height="15" fill="rgb(206,209,35)" fg:x="13013" fg:w="412"/><text x="12.8385%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (403 samples, 0.39%)</title><rect x="12.5972%" y="677" width="0.3899%" height="15" fill="rgb(245,195,53)" fg:x="13022" fg:w="403"/><text x="12.8472%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (403 samples, 0.39%)</title><rect x="12.5972%" y="661" width="0.3899%" height="15" fill="rgb(240,92,26)" fg:x="13022" fg:w="403"/><text x="12.8472%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (403 samples, 0.39%)</title><rect x="12.5972%" y="645" width="0.3899%" height="15" fill="rgb(207,40,23)" fg:x="13022" fg:w="403"/><text x="12.8472%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (28 samples, 0.03%)</title><rect x="12.9871%" y="725" width="0.0271%" height="15" fill="rgb(223,111,35)" fg:x="13425" fg:w="28"/><text x="13.2371%" y="735.50"></text></g><g><title>event_listener::Inner::lock (23 samples, 0.02%)</title><rect x="13.0345%" y="677" width="0.0222%" height="15" fill="rgb(229,147,28)" fg:x="13474" fg:w="23"/><text x="13.2845%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="13.0345%" y="661" width="0.0222%" height="15" fill="rgb(211,29,28)" fg:x="13474" fg:w="23"/><text x="13.2845%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="13.0354%" y="645" width="0.0213%" height="15" fill="rgb(228,72,33)" fg:x="13475" fg:w="22"/><text x="13.2854%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.02%)</title><rect x="13.0354%" y="629" width="0.0213%" height="15" fill="rgb(205,214,31)" fg:x="13475" fg:w="22"/><text x="13.2854%" y="639.50"></text></g><g><title>___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="13.0354%" y="613" width="0.0213%" height="15" fill="rgb(224,111,15)" fg:x="13475" fg:w="22"/><text x="13.2854%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="13.0287%" y="693" width="0.0290%" height="15" fill="rgb(253,21,26)" fg:x="13468" fg:w="30"/><text x="13.2787%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (62 samples, 0.06%)</title><rect x="13.0142%" y="725" width="0.0600%" height="15" fill="rgb(245,139,43)" fg:x="13453" fg:w="62"/><text x="13.2642%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (47 samples, 0.05%)</title><rect x="13.0287%" y="709" width="0.0455%" height="15" fill="rgb(252,170,7)" fg:x="13468" fg:w="47"/><text x="13.2787%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (17 samples, 0.02%)</title><rect x="13.0577%" y="693" width="0.0164%" height="15" fill="rgb(231,118,14)" fg:x="13498" fg:w="17"/><text x="13.3077%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="13.0577%" y="677" width="0.0164%" height="15" fill="rgb(238,83,0)" fg:x="13498" fg:w="17"/><text x="13.3077%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.02%)</title><rect x="13.0587%" y="661" width="0.0155%" height="15" fill="rgb(221,39,39)" fg:x="13499" fg:w="16"/><text x="13.3087%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.02%)</title><rect x="13.0587%" y="645" width="0.0155%" height="15" fill="rgb(222,119,46)" fg:x="13499" fg:w="16"/><text x="13.3087%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="13.0761%" y="709" width="0.0184%" height="15" fill="rgb(222,165,49)" fg:x="13517" fg:w="19"/><text x="13.3261%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (19 samples, 0.02%)</title><rect x="13.0761%" y="693" width="0.0184%" height="15" fill="rgb(219,113,52)" fg:x="13517" fg:w="19"/><text x="13.3261%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (19 samples, 0.02%)</title><rect x="13.0761%" y="677" width="0.0184%" height="15" fill="rgb(214,7,15)" fg:x="13517" fg:w="19"/><text x="13.3261%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (15 samples, 0.01%)</title><rect x="13.0945%" y="709" width="0.0145%" height="15" fill="rgb(235,32,4)" fg:x="13536" fg:w="15"/><text x="13.3445%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="13.0954%" y="693" width="0.0135%" height="15" fill="rgb(238,90,54)" fg:x="13537" fg:w="14"/><text x="13.3454%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="13.0954%" y="677" width="0.0135%" height="15" fill="rgb(213,208,19)" fg:x="13537" fg:w="14"/><text x="13.3454%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="13.0954%" y="661" width="0.0135%" height="15" fill="rgb(233,156,4)" fg:x="13537" fg:w="14"/><text x="13.3454%" y="671.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="13.0954%" y="645" width="0.0135%" height="15" fill="rgb(207,194,5)" fg:x="13537" fg:w="14"/><text x="13.3454%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="13.0954%" y="629" width="0.0135%" height="15" fill="rgb(206,111,30)" fg:x="13537" fg:w="14"/><text x="13.3454%" y="639.50"></text></g><g><title>event_listener::Inner::lock (29 samples, 0.03%)</title><rect x="13.1099%" y="709" width="0.0281%" height="15" fill="rgb(243,70,54)" fg:x="13552" fg:w="29"/><text x="13.3599%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="13.1099%" y="693" width="0.0281%" height="15" fill="rgb(242,28,8)" fg:x="13552" fg:w="29"/><text x="13.3599%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.03%)</title><rect x="13.1109%" y="677" width="0.0271%" height="15" fill="rgb(219,106,18)" fg:x="13553" fg:w="28"/><text x="13.3609%" y="687.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (28 samples, 0.03%)</title><rect x="13.1109%" y="661" width="0.0271%" height="15" fill="rgb(244,222,10)" fg:x="13553" fg:w="28"/><text x="13.3609%" y="671.50"></text></g><g><title>___pthread_mutex_lock (28 samples, 0.03%)</title><rect x="13.1109%" y="645" width="0.0271%" height="15" fill="rgb(236,179,52)" fg:x="13553" fg:w="28"/><text x="13.3609%" y="655.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,908 samples, 4.75%)</title><rect x="8.4017%" y="805" width="4.7479%" height="15" fill="rgb(213,23,39)" fg:x="8685" fg:w="4908"/><text x="8.6517%" y="815.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (4,908 samples, 4.75%)</title><rect x="8.4017%" y="789" width="4.7479%" height="15" fill="rgb(238,48,10)" fg:x="8685" fg:w="4908"/><text x="8.6517%" y="799.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (4,908 samples, 4.75%)</title><rect x="8.4017%" y="773" width="4.7479%" height="15" fill="rgb(251,196,23)" fg:x="8685" fg:w="4908"/><text x="8.6517%" y="783.50">&lt;async..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,908 samples, 4.75%)</title><rect x="8.4017%" y="757" width="4.7479%" height="15" fill="rgb(250,152,24)" fg:x="8685" fg:w="4908"/><text x="8.6517%" y="767.50">&lt;async..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (4,908 samples, 4.75%)</title><rect x="8.4017%" y="741" width="4.7479%" height="15" fill="rgb(209,150,17)" fg:x="8685" fg:w="4908"/><text x="8.6517%" y="751.50">&lt;async..</text></g><g><title>event_listener::Event::listen (78 samples, 0.08%)</title><rect x="13.0741%" y="725" width="0.0755%" height="15" fill="rgb(234,202,34)" fg:x="13515" fg:w="78"/><text x="13.3241%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,294 samples, 1.25%)</title><rect x="13.2183%" y="709" width="1.2518%" height="15" fill="rgb(253,148,53)" fg:x="13664" fg:w="1294"/><text x="13.4683%" y="719.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="14.4807%" y="693" width="0.0135%" height="15" fill="rgb(218,129,16)" fg:x="14969" fg:w="14"/><text x="14.7307%" y="703.50"></text></g><g><title>rust_alloc (19 samples, 0.02%)</title><rect x="14.4943%" y="661" width="0.0184%" height="15" fill="rgb(216,85,19)" fg:x="14983" fg:w="19"/><text x="14.7443%" y="671.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="14.5126%" y="661" width="0.0116%" height="15" fill="rgb(235,228,7)" fg:x="15002" fg:w="12"/><text x="14.7626%" y="671.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="14.5126%" y="645" width="0.0116%" height="15" fill="rgb(245,175,0)" fg:x="15002" fg:w="12"/><text x="14.7626%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::has_messages (15 samples, 0.01%)</title><rect x="14.5320%" y="645" width="0.0145%" height="15" fill="rgb(208,168,36)" fg:x="15022" fg:w="15"/><text x="14.7820%" y="655.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::is_empty (15 samples, 0.01%)</title><rect x="14.5320%" y="629" width="0.0145%" height="15" fill="rgb(246,171,24)" fg:x="15022" fg:w="15"/><text x="14.7820%" y="639.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (15 samples, 0.01%)</title><rect x="14.5320%" y="613" width="0.0145%" height="15" fill="rgb(215,142,24)" fg:x="15022" fg:w="15"/><text x="14.7820%" y="623.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="14.5320%" y="597" width="0.0145%" height="15" fill="rgb(250,187,7)" fg:x="15022" fg:w="15"/><text x="14.7820%" y="607.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (15 samples, 0.01%)</title><rect x="14.5320%" y="581" width="0.0145%" height="15" fill="rgb(228,66,33)" fg:x="15022" fg:w="15"/><text x="14.7820%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (21 samples, 0.02%)</title><rect x="14.5736%" y="533" width="0.0203%" height="15" fill="rgb(234,215,21)" fg:x="15065" fg:w="21"/><text x="14.8236%" y="543.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="14.5745%" y="517" width="0.0193%" height="15" fill="rgb(222,191,20)" fg:x="15066" fg:w="20"/><text x="14.8245%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (45 samples, 0.04%)</title><rect x="14.5600%" y="581" width="0.0435%" height="15" fill="rgb(245,79,54)" fg:x="15051" fg:w="45"/><text x="14.8100%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (45 samples, 0.04%)</title><rect x="14.5600%" y="565" width="0.0435%" height="15" fill="rgb(240,10,37)" fg:x="15051" fg:w="45"/><text x="14.8100%" y="575.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (41 samples, 0.04%)</title><rect x="14.5639%" y="549" width="0.0397%" height="15" fill="rgb(214,192,32)" fg:x="15055" fg:w="41"/><text x="14.8139%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (51 samples, 0.05%)</title><rect x="14.5600%" y="597" width="0.0493%" height="15" fill="rgb(209,36,54)" fg:x="15051" fg:w="51"/><text x="14.8100%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (82 samples, 0.08%)</title><rect x="14.5465%" y="613" width="0.0793%" height="15" fill="rgb(220,10,11)" fg:x="15037" fg:w="82"/><text x="14.7965%" y="623.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="14.6132%" y="597" width="0.0126%" height="15" fill="rgb(221,106,17)" fg:x="15106" fg:w="13"/><text x="14.8632%" y="607.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="14.6132%" y="581" width="0.0126%" height="15" fill="rgb(251,142,44)" fg:x="15106" fg:w="13"/><text x="14.8632%" y="591.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="14.6132%" y="565" width="0.0126%" height="15" fill="rgb(238,13,15)" fg:x="15106" fg:w="13"/><text x="14.8632%" y="575.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="14.6132%" y="549" width="0.0126%" height="15" fill="rgb(208,107,27)" fg:x="15106" fg:w="13"/><text x="14.8632%" y="559.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (26 samples, 0.03%)</title><rect x="14.6471%" y="597" width="0.0252%" height="15" fill="rgb(205,136,37)" fg:x="15141" fg:w="26"/><text x="14.8971%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (436 samples, 0.42%)</title><rect x="14.5465%" y="645" width="0.4218%" height="15" fill="rgb(250,205,27)" fg:x="15037" fg:w="436"/><text x="14.7965%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (436 samples, 0.42%)</title><rect x="14.5465%" y="629" width="0.4218%" height="15" fill="rgb(210,80,43)" fg:x="15037" fg:w="436"/><text x="14.7965%" y="639.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (354 samples, 0.34%)</title><rect x="14.6258%" y="613" width="0.3425%" height="15" fill="rgb(247,160,36)" fg:x="15119" fg:w="354"/><text x="14.8758%" y="623.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (306 samples, 0.30%)</title><rect x="14.6723%" y="597" width="0.2960%" height="15" fill="rgb(234,13,49)" fg:x="15167" fg:w="306"/><text x="14.9223%" y="607.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (306 samples, 0.30%)</title><rect x="14.6723%" y="581" width="0.2960%" height="15" fill="rgb(234,122,0)" fg:x="15167" fg:w="306"/><text x="14.9223%" y="591.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (306 samples, 0.30%)</title><rect x="14.6723%" y="565" width="0.2960%" height="15" fill="rgb(207,146,38)" fg:x="15167" fg:w="306"/><text x="14.9223%" y="575.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (12 samples, 0.01%)</title><rect x="14.9721%" y="629" width="0.0116%" height="15" fill="rgb(207,177,25)" fg:x="15477" fg:w="12"/><text x="15.2221%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (24 samples, 0.02%)</title><rect x="14.9867%" y="613" width="0.0232%" height="15" fill="rgb(211,178,42)" fg:x="15492" fg:w="24"/><text x="15.2367%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (24 samples, 0.02%)</title><rect x="14.9867%" y="597" width="0.0232%" height="15" fill="rgb(230,69,54)" fg:x="15492" fg:w="24"/><text x="15.2367%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (24 samples, 0.02%)</title><rect x="14.9867%" y="581" width="0.0232%" height="15" fill="rgb(214,135,41)" fg:x="15492" fg:w="24"/><text x="15.2367%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (21 samples, 0.02%)</title><rect x="15.0099%" y="613" width="0.0203%" height="15" fill="rgb(237,67,25)" fg:x="15516" fg:w="21"/><text x="15.2599%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (21 samples, 0.02%)</title><rect x="15.0099%" y="597" width="0.0203%" height="15" fill="rgb(222,189,50)" fg:x="15516" fg:w="21"/><text x="15.2599%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (72 samples, 0.07%)</title><rect x="14.9683%" y="645" width="0.0697%" height="15" fill="rgb(245,148,34)" fg:x="15473" fg:w="72"/><text x="15.2183%" y="655.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (56 samples, 0.05%)</title><rect x="14.9837%" y="629" width="0.0542%" height="15" fill="rgb(222,29,6)" fg:x="15489" fg:w="56"/><text x="15.2337%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (15 samples, 0.01%)</title><rect x="15.0476%" y="597" width="0.0145%" height="15" fill="rgb(221,189,43)" fg:x="15555" fg:w="15"/><text x="15.2976%" y="607.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (11 samples, 0.01%)</title><rect x="15.0515%" y="581" width="0.0106%" height="15" fill="rgb(207,36,27)" fg:x="15559" fg:w="11"/><text x="15.3015%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="15.0379%" y="645" width="0.0329%" height="15" fill="rgb(217,90,24)" fg:x="15545" fg:w="34"/><text x="15.2879%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="15.0399%" y="629" width="0.0310%" height="15" fill="rgb(224,66,35)" fg:x="15547" fg:w="32"/><text x="15.2899%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (26 samples, 0.03%)</title><rect x="15.0457%" y="613" width="0.0252%" height="15" fill="rgb(221,13,50)" fg:x="15553" fg:w="26"/><text x="15.2957%" y="623.50"></text></g><g><title>snmalloc::FreeListIter::empty (46 samples, 0.04%)</title><rect x="15.0708%" y="645" width="0.0445%" height="15" fill="rgb(236,68,49)" fg:x="15579" fg:w="46"/><text x="15.3208%" y="655.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (46 samples, 0.04%)</title><rect x="15.0708%" y="629" width="0.0445%" height="15" fill="rgb(229,146,28)" fg:x="15579" fg:w="46"/><text x="15.3208%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (886 samples, 0.86%)</title><rect x="14.4943%" y="693" width="0.8571%" height="15" fill="rgb(225,31,38)" fg:x="14983" fg:w="886"/><text x="14.7443%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (886 samples, 0.86%)</title><rect x="14.4943%" y="677" width="0.8571%" height="15" fill="rgb(250,208,3)" fg:x="14983" fg:w="886"/><text x="14.7443%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (855 samples, 0.83%)</title><rect x="14.5242%" y="661" width="0.8271%" height="15" fill="rgb(246,54,23)" fg:x="15014" fg:w="855"/><text x="14.7742%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::take (244 samples, 0.24%)</title><rect x="15.1153%" y="645" width="0.2360%" height="15" fill="rgb(243,76,11)" fg:x="15625" fg:w="244"/><text x="15.3653%" y="655.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (244 samples, 0.24%)</title><rect x="15.1153%" y="629" width="0.2360%" height="15" fill="rgb(245,21,50)" fg:x="15625" fg:w="244"/><text x="15.3653%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,294 samples, 2.22%)</title><rect x="13.1496%" y="725" width="2.2192%" height="15" fill="rgb(228,9,43)" fg:x="13593" fg:w="2294"/><text x="13.3996%" y="735.50">&lt;..</text></g><g><title>rust_alloc (919 samples, 0.89%)</title><rect x="14.4797%" y="709" width="0.8890%" height="15" fill="rgb(208,100,47)" fg:x="14968" fg:w="919"/><text x="14.7297%" y="719.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (18 samples, 0.02%)</title><rect x="15.3514%" y="693" width="0.0174%" height="15" fill="rgb(232,26,8)" fg:x="15869" fg:w="18"/><text x="15.6014%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (27 samples, 0.03%)</title><rect x="15.6590%" y="549" width="0.0261%" height="15" fill="rgb(216,166,38)" fg:x="16187" fg:w="27"/><text x="15.9090%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (27 samples, 0.03%)</title><rect x="15.6590%" y="533" width="0.0261%" height="15" fill="rgb(251,202,51)" fg:x="16187" fg:w="27"/><text x="15.9090%" y="543.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (23 samples, 0.02%)</title><rect x="15.6628%" y="517" width="0.0222%" height="15" fill="rgb(254,216,34)" fg:x="16191" fg:w="23"/><text x="15.9128%" y="527.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (16 samples, 0.02%)</title><rect x="15.6696%" y="501" width="0.0155%" height="15" fill="rgb(251,32,27)" fg:x="16198" fg:w="16"/><text x="15.9196%" y="511.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (16 samples, 0.02%)</title><rect x="15.6696%" y="485" width="0.0155%" height="15" fill="rgb(208,127,28)" fg:x="16198" fg:w="16"/><text x="15.9196%" y="495.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (16 samples, 0.02%)</title><rect x="15.6696%" y="469" width="0.0155%" height="15" fill="rgb(224,137,22)" fg:x="16198" fg:w="16"/><text x="15.9196%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (33 samples, 0.03%)</title><rect x="15.6899%" y="549" width="0.0319%" height="15" fill="rgb(254,70,32)" fg:x="16219" fg:w="33"/><text x="15.9399%" y="559.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (33 samples, 0.03%)</title><rect x="15.6899%" y="533" width="0.0319%" height="15" fill="rgb(229,75,37)" fg:x="16219" fg:w="33"/><text x="15.9399%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (464 samples, 0.45%)</title><rect x="15.6387%" y="597" width="0.4489%" height="15" fill="rgb(252,64,23)" fg:x="16166" fg:w="464"/><text x="15.8887%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (464 samples, 0.45%)</title><rect x="15.6387%" y="581" width="0.4489%" height="15" fill="rgb(232,162,48)" fg:x="16166" fg:w="464"/><text x="15.8887%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (452 samples, 0.44%)</title><rect x="15.6503%" y="565" width="0.4373%" height="15" fill="rgb(246,160,12)" fg:x="16178" fg:w="452"/><text x="15.9003%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (378 samples, 0.37%)</title><rect x="15.7219%" y="549" width="0.3657%" height="15" fill="rgb(247,166,0)" fg:x="16252" fg:w="378"/><text x="15.9719%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (378 samples, 0.37%)</title><rect x="15.7219%" y="533" width="0.3657%" height="15" fill="rgb(249,219,21)" fg:x="16252" fg:w="378"/><text x="15.9719%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (481 samples, 0.47%)</title><rect x="15.6271%" y="709" width="0.4653%" height="15" fill="rgb(205,209,3)" fg:x="16154" fg:w="481"/><text x="15.8771%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (481 samples, 0.47%)</title><rect x="15.6271%" y="693" width="0.4653%" height="15" fill="rgb(243,44,1)" fg:x="16154" fg:w="481"/><text x="15.8771%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (481 samples, 0.47%)</title><rect x="15.6271%" y="677" width="0.4653%" height="15" fill="rgb(206,159,16)" fg:x="16154" fg:w="481"/><text x="15.8771%" y="687.50"></text></g><g><title>alloc::alloc::alloc (481 samples, 0.47%)</title><rect x="15.6271%" y="661" width="0.4653%" height="15" fill="rgb(244,77,30)" fg:x="16154" fg:w="481"/><text x="15.8771%" y="671.50"></text></g><g><title>__rg_alloc (481 samples, 0.47%)</title><rect x="15.6271%" y="645" width="0.4653%" height="15" fill="rgb(218,69,12)" fg:x="16154" fg:w="481"/><text x="15.8771%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (481 samples, 0.47%)</title><rect x="15.6271%" y="629" width="0.4653%" height="15" fill="rgb(212,87,7)" fg:x="16154" fg:w="481"/><text x="15.8771%" y="639.50"></text></g><g><title>rust_alloc (481 samples, 0.47%)</title><rect x="15.6271%" y="613" width="0.4653%" height="15" fill="rgb(245,114,25)" fg:x="16154" fg:w="481"/><text x="15.8771%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (16 samples, 0.02%)</title><rect x="16.0924%" y="709" width="0.0155%" height="15" fill="rgb(210,61,42)" fg:x="16635" fg:w="16"/><text x="16.3424%" y="719.50"></text></g><g><title>alloc::slice::hack::into_vec (16 samples, 0.02%)</title><rect x="16.0924%" y="693" width="0.0155%" height="15" fill="rgb(211,52,33)" fg:x="16635" fg:w="16"/><text x="16.3424%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (16 samples, 0.02%)</title><rect x="16.0924%" y="677" width="0.0155%" height="15" fill="rgb(234,58,33)" fg:x="16635" fg:w="16"/><text x="16.3424%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="16.1078%" y="709" width="0.0106%" height="15" fill="rgb(220,115,36)" fg:x="16651" fg:w="11"/><text x="16.3578%" y="719.50"></text></g><g><title>core::time::Duration::as_nanos (18 samples, 0.02%)</title><rect x="16.1698%" y="693" width="0.0174%" height="15" fill="rgb(243,153,54)" fg:x="16715" fg:w="18"/><text x="16.4198%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (74 samples, 0.07%)</title><rect x="16.2404%" y="645" width="0.0716%" height="15" fill="rgb(251,47,18)" fg:x="16788" fg:w="74"/><text x="16.4904%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (74 samples, 0.07%)</title><rect x="16.2404%" y="629" width="0.0716%" height="15" fill="rgb(242,102,42)" fg:x="16788" fg:w="74"/><text x="16.4904%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (73 samples, 0.07%)</title><rect x="16.2413%" y="613" width="0.0706%" height="15" fill="rgb(234,31,38)" fg:x="16789" fg:w="73"/><text x="16.4913%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (73 samples, 0.07%)</title><rect x="16.2413%" y="597" width="0.0706%" height="15" fill="rgb(221,117,51)" fg:x="16789" fg:w="73"/><text x="16.4913%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (73 samples, 0.07%)</title><rect x="16.2413%" y="581" width="0.0706%" height="15" fill="rgb(212,20,18)" fg:x="16789" fg:w="73"/><text x="16.4913%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (29 samples, 0.03%)</title><rect x="16.2839%" y="565" width="0.0281%" height="15" fill="rgb(245,133,36)" fg:x="16833" fg:w="29"/><text x="16.5339%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (156 samples, 0.15%)</title><rect x="16.1872%" y="677" width="0.1509%" height="15" fill="rgb(212,6,19)" fg:x="16733" fg:w="156"/><text x="16.4372%" y="687.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (156 samples, 0.15%)</title><rect x="16.1872%" y="661" width="0.1509%" height="15" fill="rgb(218,1,36)" fg:x="16733" fg:w="156"/><text x="16.4372%" y="671.50"></text></g><g><title>core::time::Duration::new (27 samples, 0.03%)</title><rect x="16.3120%" y="645" width="0.0261%" height="15" fill="rgb(246,84,54)" fg:x="16862" fg:w="27"/><text x="16.5620%" y="655.50"></text></g><g><title>std::time::SystemTime::duration_since (164 samples, 0.16%)</title><rect x="16.1872%" y="693" width="0.1587%" height="15" fill="rgb(242,110,6)" fg:x="16733" fg:w="164"/><text x="16.4372%" y="703.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,945 samples, 8.65%)</title><rect x="8.4017%" y="821" width="8.6532%" height="15" fill="rgb(214,47,5)" fg:x="8685" fg:w="8945"/><text x="8.6517%" y="831.50">tremor_runti..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,037 samples, 3.91%)</title><rect x="13.1496%" y="805" width="3.9053%" height="15" fill="rgb(218,159,25)" fg:x="13593" fg:w="4037"/><text x="13.3996%" y="815.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,037 samples, 3.91%)</title><rect x="13.1496%" y="789" width="3.9053%" height="15" fill="rgb(215,211,28)" fg:x="13593" fg:w="4037"/><text x="13.3996%" y="799.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,037 samples, 3.91%)</title><rect x="13.1496%" y="773" width="3.9053%" height="15" fill="rgb(238,59,32)" fg:x="13593" fg:w="4037"/><text x="13.3996%" y="783.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (4,037 samples, 3.91%)</title><rect x="13.1496%" y="757" width="3.9053%" height="15" fill="rgb(226,82,3)" fg:x="13593" fg:w="4037"/><text x="13.3996%" y="767.50">trem..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (4,037 samples, 3.91%)</title><rect x="13.1496%" y="741" width="3.9053%" height="15" fill="rgb(240,164,32)" fg:x="13593" fg:w="4037"/><text x="13.3996%" y="751.50">trem..</text></g><g><title>tremor_runtime::postprocessor::postprocess (1,743 samples, 1.69%)</title><rect x="15.3688%" y="725" width="1.6861%" height="15" fill="rgb(232,46,7)" fg:x="15887" fg:w="1743"/><text x="15.6188%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (954 samples, 0.92%)</title><rect x="16.1320%" y="709" width="0.9229%" height="15" fill="rgb(229,129,53)" fg:x="16676" fg:w="954"/><text x="16.3820%" y="719.50"></text></g><g><title>std::time::SystemTime::now (733 samples, 0.71%)</title><rect x="16.3458%" y="693" width="0.7091%" height="15" fill="rgb(234,188,29)" fg:x="16897" fg:w="733"/><text x="16.5958%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (733 samples, 0.71%)</title><rect x="16.3458%" y="677" width="0.7091%" height="15" fill="rgb(246,141,4)" fg:x="16897" fg:w="733"/><text x="16.5958%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::now (733 samples, 0.71%)</title><rect x="16.3458%" y="661" width="0.7091%" height="15" fill="rgb(229,23,39)" fg:x="16897" fg:w="733"/><text x="16.5958%" y="671.50"></text></g><g><title>__clock_gettime_2 (605 samples, 0.59%)</title><rect x="16.4696%" y="645" width="0.5853%" height="15" fill="rgb(206,12,3)" fg:x="17025" fg:w="605"/><text x="16.7196%" y="655.50"></text></g><g><title>__vdso_clock_gettime (585 samples, 0.57%)</title><rect x="16.4890%" y="629" width="0.5659%" height="15" fill="rgb(252,226,20)" fg:x="17045" fg:w="585"/><text x="16.7390%" y="639.50"></text></g><g><title>[[vdso]] (405 samples, 0.39%)</title><rect x="16.6631%" y="613" width="0.3918%" height="15" fill="rgb(216,123,35)" fg:x="17225" fg:w="405"/><text x="16.9131%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="17.0559%" y="757" width="0.0145%" height="15" fill="rgb(212,68,40)" fg:x="17631" fg:w="15"/><text x="17.3059%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (348 samples, 0.34%)</title><rect x="17.3896%" y="741" width="0.3366%" height="15" fill="rgb(254,125,32)" fg:x="17976" fg:w="348"/><text x="17.6396%" y="751.50"></text></g><g><title>core::ptr::read (329 samples, 0.32%)</title><rect x="17.4080%" y="725" width="0.3183%" height="15" fill="rgb(253,97,22)" fg:x="17995" fg:w="329"/><text x="17.6580%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (321 samples, 0.31%)</title><rect x="17.4157%" y="709" width="0.3105%" height="15" fill="rgb(241,101,14)" fg:x="18003" fg:w="321"/><text x="17.6657%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (158 samples, 0.15%)</title><rect x="17.8095%" y="725" width="0.1528%" height="15" fill="rgb(238,103,29)" fg:x="18410" fg:w="158"/><text x="18.0595%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="18.1461%" y="677" width="0.0106%" height="15" fill="rgb(233,195,47)" fg:x="18758" fg:w="11"/><text x="18.3961%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (50 samples, 0.05%)</title><rect x="18.1577%" y="677" width="0.0484%" height="15" fill="rgb(246,218,30)" fg:x="18770" fg:w="50"/><text x="18.4077%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (424 samples, 0.41%)</title><rect x="18.3415%" y="661" width="0.4102%" height="15" fill="rgb(219,145,47)" fg:x="18960" fg:w="424"/><text x="18.5915%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (424 samples, 0.41%)</title><rect x="18.3415%" y="645" width="0.4102%" height="15" fill="rgb(243,12,26)" fg:x="18960" fg:w="424"/><text x="18.5915%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (492 samples, 0.48%)</title><rect x="18.7517%" y="661" width="0.4760%" height="15" fill="rgb(214,87,16)" fg:x="19384" fg:w="492"/><text x="19.0017%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (486 samples, 0.47%)</title><rect x="18.7575%" y="645" width="0.4701%" height="15" fill="rgb(208,99,42)" fg:x="19390" fg:w="486"/><text x="19.0075%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,073 samples, 1.04%)</title><rect x="18.2061%" y="677" width="1.0380%" height="15" fill="rgb(253,99,2)" fg:x="18820" fg:w="1073"/><text x="18.4561%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (17 samples, 0.02%)</title><rect x="19.2276%" y="661" width="0.0164%" height="15" fill="rgb(220,168,23)" fg:x="19876" fg:w="17"/><text x="19.4776%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_store (17 samples, 0.02%)</title><rect x="19.2276%" y="645" width="0.0164%" height="15" fill="rgb(242,38,24)" fg:x="19876" fg:w="17"/><text x="19.4776%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (43 samples, 0.04%)</title><rect x="19.2712%" y="661" width="0.0416%" height="15" fill="rgb(225,182,9)" fg:x="19921" fg:w="43"/><text x="19.5212%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (40 samples, 0.04%)</title><rect x="19.2741%" y="645" width="0.0387%" height="15" fill="rgb(243,178,37)" fg:x="19924" fg:w="40"/><text x="19.5241%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="19.2741%" y="629" width="0.0387%" height="15" fill="rgb(232,139,19)" fg:x="19924" fg:w="40"/><text x="19.5241%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="19.2741%" y="613" width="0.0387%" height="15" fill="rgb(225,201,24)" fg:x="19924" fg:w="40"/><text x="19.5241%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (38 samples, 0.04%)</title><rect x="19.2760%" y="597" width="0.0368%" height="15" fill="rgb(221,47,46)" fg:x="19926" fg:w="38"/><text x="19.5260%" y="607.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (38 samples, 0.04%)</title><rect x="19.2760%" y="581" width="0.0368%" height="15" fill="rgb(249,23,13)" fg:x="19926" fg:w="38"/><text x="19.5260%" y="591.50"></text></g><g><title>__GI___lll_lock_wake (11 samples, 0.01%)</title><rect x="19.3021%" y="565" width="0.0106%" height="15" fill="rgb(219,9,5)" fg:x="19953" fg:w="11"/><text x="19.5521%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (26 samples, 0.03%)</title><rect x="19.3128%" y="661" width="0.0252%" height="15" fill="rgb(254,171,16)" fg:x="19964" fg:w="26"/><text x="19.5628%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.03%)</title><rect x="19.3128%" y="645" width="0.0252%" height="15" fill="rgb(230,171,20)" fg:x="19964" fg:w="26"/><text x="19.5628%" y="655.50"></text></g><g><title>event_listener::Inner::lock (125 samples, 0.12%)</title><rect x="19.3399%" y="661" width="0.1209%" height="15" fill="rgb(210,71,41)" fg:x="19992" fg:w="125"/><text x="19.5899%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (125 samples, 0.12%)</title><rect x="19.3399%" y="645" width="0.1209%" height="15" fill="rgb(206,173,20)" fg:x="19992" fg:w="125"/><text x="19.5899%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (115 samples, 0.11%)</title><rect x="19.3495%" y="629" width="0.1112%" height="15" fill="rgb(233,88,34)" fg:x="20002" fg:w="115"/><text x="19.5995%" y="639.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (109 samples, 0.11%)</title><rect x="19.3553%" y="613" width="0.1054%" height="15" fill="rgb(223,209,46)" fg:x="20008" fg:w="109"/><text x="19.6053%" y="623.50"></text></g><g><title>___pthread_mutex_lock (109 samples, 0.11%)</title><rect x="19.3553%" y="597" width="0.1054%" height="15" fill="rgb(250,43,18)" fg:x="20008" fg:w="109"/><text x="19.6053%" y="607.50"></text></g><g><title>__GI___lll_lock_wait (24 samples, 0.02%)</title><rect x="19.4376%" y="581" width="0.0232%" height="15" fill="rgb(208,13,10)" fg:x="20093" fg:w="24"/><text x="19.6876%" y="591.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,326 samples, 2.25%)</title><rect x="18.1181%" y="693" width="2.2501%" height="15" fill="rgb(212,200,36)" fg:x="18729" fg:w="2326"/><text x="18.3681%" y="703.50">a..</text></g><g><title>event_listener::Event::notify (1,162 samples, 1.12%)</title><rect x="19.2441%" y="677" width="1.1241%" height="15" fill="rgb(225,90,30)" fg:x="19893" fg:w="1162"/><text x="19.4941%" y="687.50"></text></g><g><title>event_listener::full_fence (938 samples, 0.91%)</title><rect x="19.4608%" y="661" width="0.9074%" height="15" fill="rgb(236,182,39)" fg:x="20117" fg:w="938"/><text x="19.7108%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (916 samples, 0.89%)</title><rect x="19.4821%" y="645" width="0.8861%" height="15" fill="rgb(212,144,35)" fg:x="20139" fg:w="916"/><text x="19.7321%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (916 samples, 0.89%)</title><rect x="19.4821%" y="629" width="0.8861%" height="15" fill="rgb(228,63,44)" fg:x="20139" fg:w="916"/><text x="19.7321%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (916 samples, 0.89%)</title><rect x="19.4821%" y="613" width="0.8861%" height="15" fill="rgb(228,109,6)" fg:x="20139" fg:w="916"/><text x="19.7321%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (28 samples, 0.03%)</title><rect x="20.3682%" y="693" width="0.0271%" height="15" fill="rgb(238,117,24)" fg:x="21055" fg:w="28"/><text x="20.6182%" y="703.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="20.4166%" y="677" width="0.0135%" height="15" fill="rgb(242,26,26)" fg:x="21105" fg:w="14"/><text x="20.6666%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="20.4166%" y="661" width="0.0135%" height="15" fill="rgb(221,92,48)" fg:x="21105" fg:w="14"/><text x="20.6666%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="20.4185%" y="645" width="0.0116%" height="15" fill="rgb(209,209,32)" fg:x="21107" fg:w="12"/><text x="20.6685%" y="655.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="20.4185%" y="629" width="0.0116%" height="15" fill="rgb(221,70,22)" fg:x="21107" fg:w="12"/><text x="20.6685%" y="639.50"></text></g><g><title>___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="20.4185%" y="613" width="0.0116%" height="15" fill="rgb(248,145,5)" fg:x="21107" fg:w="12"/><text x="20.6685%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,706 samples, 2.62%)</title><rect x="18.0590%" y="709" width="2.6177%" height="15" fill="rgb(226,116,26)" fg:x="18668" fg:w="2706"/><text x="18.3090%" y="719.50">&lt;a..</text></g><g><title>event_listener::Event::notify (284 samples, 0.27%)</title><rect x="20.4020%" y="693" width="0.2747%" height="15" fill="rgb(244,5,17)" fg:x="21090" fg:w="284"/><text x="20.6520%" y="703.50"></text></g><g><title>event_listener::full_fence (255 samples, 0.25%)</title><rect x="20.4301%" y="677" width="0.2467%" height="15" fill="rgb(252,159,33)" fg:x="21119" fg:w="255"/><text x="20.6801%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (247 samples, 0.24%)</title><rect x="20.4378%" y="661" width="0.2389%" height="15" fill="rgb(206,71,0)" fg:x="21127" fg:w="247"/><text x="20.6878%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (247 samples, 0.24%)</title><rect x="20.4378%" y="645" width="0.2389%" height="15" fill="rgb(233,118,54)" fg:x="21127" fg:w="247"/><text x="20.6878%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (247 samples, 0.24%)</title><rect x="20.4378%" y="629" width="0.2389%" height="15" fill="rgb(234,83,48)" fg:x="21127" fg:w="247"/><text x="20.6878%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,062 samples, 2.96%)</title><rect x="17.7350%" y="741" width="2.9621%" height="15" fill="rgb(228,3,54)" fg:x="18333" fg:w="3062"/><text x="17.9850%" y="751.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,827 samples, 2.73%)</title><rect x="17.9623%" y="725" width="2.7348%" height="15" fill="rgb(226,155,13)" fg:x="18568" fg:w="2827"/><text x="18.2123%" y="735.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="20.6768%" y="709" width="0.0203%" height="15" fill="rgb(241,28,37)" fg:x="21374" fg:w="21"/><text x="20.9268%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (11 samples, 0.01%)</title><rect x="20.6865%" y="693" width="0.0106%" height="15" fill="rgb(233,93,10)" fg:x="21384" fg:w="11"/><text x="20.9365%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (11 samples, 0.01%)</title><rect x="20.6865%" y="677" width="0.0106%" height="15" fill="rgb(225,113,19)" fg:x="21384" fg:w="11"/><text x="20.9365%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="20.6971%" y="741" width="0.0126%" height="15" fill="rgb(241,2,18)" fg:x="21395" fg:w="13"/><text x="20.9471%" y="751.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="20.7184%" y="469" width="0.0106%" height="15" fill="rgb(228,207,21)" fg:x="21417" fg:w="11"/><text x="20.9684%" y="479.50"></text></g><g><title>rust_alloc (47 samples, 0.05%)</title><rect x="20.7300%" y="437" width="0.0455%" height="15" fill="rgb(213,211,35)" fg:x="21429" fg:w="47"/><text x="20.9800%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (34 samples, 0.03%)</title><rect x="20.7919%" y="421" width="0.0329%" height="15" fill="rgb(209,83,10)" fg:x="21493" fg:w="34"/><text x="21.0419%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (34 samples, 0.03%)</title><rect x="20.7919%" y="405" width="0.0329%" height="15" fill="rgb(209,164,1)" fg:x="21493" fg:w="34"/><text x="21.0419%" y="415.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (30 samples, 0.03%)</title><rect x="20.7958%" y="389" width="0.0290%" height="15" fill="rgb(213,184,43)" fg:x="21497" fg:w="30"/><text x="21.0458%" y="399.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (25 samples, 0.02%)</title><rect x="20.8006%" y="373" width="0.0242%" height="15" fill="rgb(231,61,34)" fg:x="21502" fg:w="25"/><text x="21.0506%" y="383.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="20.8006%" y="357" width="0.0242%" height="15" fill="rgb(235,75,3)" fg:x="21502" fg:w="25"/><text x="21.0506%" y="367.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (25 samples, 0.02%)</title><rect x="20.8006%" y="341" width="0.0242%" height="15" fill="rgb(220,106,47)" fg:x="21502" fg:w="25"/><text x="21.0506%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (113 samples, 0.11%)</title><rect x="20.8296%" y="421" width="0.1093%" height="15" fill="rgb(210,196,33)" fg:x="21532" fg:w="113"/><text x="21.0796%" y="431.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (113 samples, 0.11%)</title><rect x="20.8296%" y="405" width="0.1093%" height="15" fill="rgb(229,154,42)" fg:x="21532" fg:w="113"/><text x="21.0796%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (539 samples, 0.52%)</title><rect x="20.7290%" y="469" width="0.5214%" height="15" fill="rgb(228,114,26)" fg:x="21428" fg:w="539"/><text x="20.9790%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (538 samples, 0.52%)</title><rect x="20.7300%" y="453" width="0.5205%" height="15" fill="rgb(208,144,1)" fg:x="21429" fg:w="538"/><text x="20.9800%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (484 samples, 0.47%)</title><rect x="20.7822%" y="437" width="0.4682%" height="15" fill="rgb(239,112,37)" fg:x="21483" fg:w="484"/><text x="21.0322%" y="447.50"></text></g><g><title>snmalloc::FreeListIter::take (322 samples, 0.31%)</title><rect x="20.9389%" y="421" width="0.3115%" height="15" fill="rgb(210,96,50)" fg:x="21645" fg:w="322"/><text x="21.1889%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (322 samples, 0.31%)</title><rect x="20.9389%" y="405" width="0.3115%" height="15" fill="rgb(222,178,2)" fg:x="21645" fg:w="322"/><text x="21.1889%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (569 samples, 0.55%)</title><rect x="20.7097%" y="613" width="0.5504%" height="15" fill="rgb(226,74,18)" fg:x="21408" fg:w="569"/><text x="20.9597%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (569 samples, 0.55%)</title><rect x="20.7097%" y="597" width="0.5504%" height="15" fill="rgb(225,67,54)" fg:x="21408" fg:w="569"/><text x="20.9597%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (564 samples, 0.55%)</title><rect x="20.7145%" y="581" width="0.5456%" height="15" fill="rgb(251,92,32)" fg:x="21413" fg:w="564"/><text x="20.9645%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (564 samples, 0.55%)</title><rect x="20.7145%" y="565" width="0.5456%" height="15" fill="rgb(228,149,22)" fg:x="21413" fg:w="564"/><text x="20.9645%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (564 samples, 0.55%)</title><rect x="20.7145%" y="549" width="0.5456%" height="15" fill="rgb(243,54,13)" fg:x="21413" fg:w="564"/><text x="20.9645%" y="559.50"></text></g><g><title>alloc::alloc::alloc (560 samples, 0.54%)</title><rect x="20.7184%" y="533" width="0.5417%" height="15" fill="rgb(243,180,28)" fg:x="21417" fg:w="560"/><text x="20.9684%" y="543.50"></text></g><g><title>__rg_alloc (560 samples, 0.54%)</title><rect x="20.7184%" y="517" width="0.5417%" height="15" fill="rgb(208,167,24)" fg:x="21417" fg:w="560"/><text x="20.9684%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (560 samples, 0.54%)</title><rect x="20.7184%" y="501" width="0.5417%" height="15" fill="rgb(245,73,45)" fg:x="21417" fg:w="560"/><text x="20.9684%" y="511.50"></text></g><g><title>rust_alloc (560 samples, 0.54%)</title><rect x="20.7184%" y="485" width="0.5417%" height="15" fill="rgb(237,203,48)" fg:x="21417" fg:w="560"/><text x="20.9684%" y="495.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (621 samples, 0.60%)</title><rect x="20.7097%" y="741" width="0.6007%" height="15" fill="rgb(211,197,16)" fg:x="21408" fg:w="621"/><text x="20.9597%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (621 samples, 0.60%)</title><rect x="20.7097%" y="725" width="0.6007%" height="15" fill="rgb(243,99,51)" fg:x="21408" fg:w="621"/><text x="20.9597%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (621 samples, 0.60%)</title><rect x="20.7097%" y="709" width="0.6007%" height="15" fill="rgb(215,123,29)" fg:x="21408" fg:w="621"/><text x="20.9597%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (621 samples, 0.60%)</title><rect x="20.7097%" y="693" width="0.6007%" height="15" fill="rgb(239,186,37)" fg:x="21408" fg:w="621"/><text x="20.9597%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (621 samples, 0.60%)</title><rect x="20.7097%" y="677" width="0.6007%" height="15" fill="rgb(252,136,39)" fg:x="21408" fg:w="621"/><text x="20.9597%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (621 samples, 0.60%)</title><rect x="20.7097%" y="661" width="0.6007%" height="15" fill="rgb(223,213,32)" fg:x="21408" fg:w="621"/><text x="20.9597%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (621 samples, 0.60%)</title><rect x="20.7097%" y="645" width="0.6007%" height="15" fill="rgb(233,115,5)" fg:x="21408" fg:w="621"/><text x="20.9597%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (621 samples, 0.60%)</title><rect x="20.7097%" y="629" width="0.6007%" height="15" fill="rgb(207,226,44)" fg:x="21408" fg:w="621"/><text x="20.9597%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (52 samples, 0.05%)</title><rect x="21.2601%" y="613" width="0.0503%" height="15" fill="rgb(208,126,0)" fg:x="21977" fg:w="52"/><text x="21.5101%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.05%)</title><rect x="21.2601%" y="597" width="0.0503%" height="15" fill="rgb(244,66,21)" fg:x="21977" fg:w="52"/><text x="21.5101%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.04%)</title><rect x="21.2688%" y="581" width="0.0416%" height="15" fill="rgb(222,97,12)" fg:x="21986" fg:w="43"/><text x="21.5188%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (940 samples, 0.91%)</title><rect x="21.3104%" y="741" width="0.9093%" height="15" fill="rgb(219,213,19)" fg:x="22029" fg:w="940"/><text x="21.5604%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (469 samples, 0.45%)</title><rect x="22.2391%" y="725" width="0.4537%" height="15" fill="rgb(252,169,30)" fg:x="22989" fg:w="469"/><text x="22.4891%" y="735.50"></text></g><g><title>rust_alloc (26 samples, 0.03%)</title><rect x="22.7267%" y="581" width="0.0252%" height="15" fill="rgb(206,32,51)" fg:x="23493" fg:w="26"/><text x="22.9767%" y="591.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="22.7847%" y="453" width="0.0222%" height="15" fill="rgb(250,172,42)" fg:x="23553" fg:w="23"/><text x="23.0347%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (23 samples, 0.02%)</title><rect x="22.7847%" y="437" width="0.0222%" height="15" fill="rgb(209,34,43)" fg:x="23553" fg:w="23"/><text x="23.0347%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (39 samples, 0.04%)</title><rect x="22.7731%" y="501" width="0.0377%" height="15" fill="rgb(223,11,35)" fg:x="23541" fg:w="39"/><text x="23.0231%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (39 samples, 0.04%)</title><rect x="22.7731%" y="485" width="0.0377%" height="15" fill="rgb(251,219,26)" fg:x="23541" fg:w="39"/><text x="23.0231%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="22.7808%" y="469" width="0.0300%" height="15" fill="rgb(231,119,3)" fg:x="23549" fg:w="31"/><text x="23.0308%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (48 samples, 0.05%)</title><rect x="22.7731%" y="517" width="0.0464%" height="15" fill="rgb(216,97,11)" fg:x="23541" fg:w="48"/><text x="23.0231%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (80 samples, 0.08%)</title><rect x="22.7615%" y="533" width="0.0774%" height="15" fill="rgb(223,59,9)" fg:x="23529" fg:w="80"/><text x="23.0115%" y="543.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="22.8224%" y="517" width="0.0164%" height="15" fill="rgb(233,93,31)" fg:x="23592" fg:w="17"/><text x="23.0724%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="22.8224%" y="501" width="0.0164%" height="15" fill="rgb(239,81,33)" fg:x="23592" fg:w="17"/><text x="23.0724%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (17 samples, 0.02%)</title><rect x="22.8224%" y="485" width="0.0164%" height="15" fill="rgb(213,120,34)" fg:x="23592" fg:w="17"/><text x="23.0724%" y="495.50"></text></g><g><title>snmalloc::bits::align_down (17 samples, 0.02%)</title><rect x="22.8224%" y="469" width="0.0164%" height="15" fill="rgb(243,49,53)" fg:x="23592" fg:w="17"/><text x="23.0724%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (46 samples, 0.04%)</title><rect x="22.8698%" y="517" width="0.0445%" height="15" fill="rgb(247,216,33)" fg:x="23641" fg:w="46"/><text x="23.1198%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (405 samples, 0.39%)</title><rect x="22.7615%" y="565" width="0.3918%" height="15" fill="rgb(226,26,14)" fg:x="23529" fg:w="405"/><text x="23.0115%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (405 samples, 0.39%)</title><rect x="22.7615%" y="549" width="0.3918%" height="15" fill="rgb(215,49,53)" fg:x="23529" fg:w="405"/><text x="23.0115%" y="559.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (325 samples, 0.31%)</title><rect x="22.8389%" y="533" width="0.3144%" height="15" fill="rgb(245,162,40)" fg:x="23609" fg:w="325"/><text x="23.0889%" y="543.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (247 samples, 0.24%)</title><rect x="22.9143%" y="517" width="0.2389%" height="15" fill="rgb(229,68,17)" fg:x="23687" fg:w="247"/><text x="23.1643%" y="527.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (247 samples, 0.24%)</title><rect x="22.9143%" y="501" width="0.2389%" height="15" fill="rgb(213,182,10)" fg:x="23687" fg:w="247"/><text x="23.1643%" y="511.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (247 samples, 0.24%)</title><rect x="22.9143%" y="485" width="0.2389%" height="15" fill="rgb(245,125,30)" fg:x="23687" fg:w="247"/><text x="23.1643%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (14 samples, 0.01%)</title><rect x="23.1533%" y="565" width="0.0135%" height="15" fill="rgb(232,202,2)" fg:x="23934" fg:w="14"/><text x="23.4033%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (23 samples, 0.02%)</title><rect x="23.1717%" y="517" width="0.0222%" height="15" fill="rgb(237,140,51)" fg:x="23953" fg:w="23"/><text x="23.4217%" y="527.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (20 samples, 0.02%)</title><rect x="23.1746%" y="501" width="0.0193%" height="15" fill="rgb(236,157,25)" fg:x="23956" fg:w="20"/><text x="23.4246%" y="511.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (17 samples, 0.02%)</title><rect x="23.1775%" y="485" width="0.0164%" height="15" fill="rgb(219,209,0)" fg:x="23959" fg:w="17"/><text x="23.4275%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (31 samples, 0.03%)</title><rect x="23.1939%" y="501" width="0.0300%" height="15" fill="rgb(240,116,54)" fg:x="23976" fg:w="31"/><text x="23.4439%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (31 samples, 0.03%)</title><rect x="23.1939%" y="485" width="0.0300%" height="15" fill="rgb(216,10,36)" fg:x="23976" fg:w="31"/><text x="23.4439%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (22 samples, 0.02%)</title><rect x="23.2461%" y="485" width="0.0213%" height="15" fill="rgb(222,72,44)" fg:x="24030" fg:w="22"/><text x="23.4961%" y="495.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (22 samples, 0.02%)</title><rect x="23.2461%" y="469" width="0.0213%" height="15" fill="rgb(232,159,9)" fg:x="24030" fg:w="22"/><text x="23.4961%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="23.1939%" y="517" width="0.0745%" height="15" fill="rgb(210,39,32)" fg:x="23976" fg:w="77"/><text x="23.4439%" y="527.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (46 samples, 0.04%)</title><rect x="23.2239%" y="501" width="0.0445%" height="15" fill="rgb(216,194,45)" fg:x="24007" fg:w="46"/><text x="23.4739%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (106 samples, 0.10%)</title><rect x="23.1668%" y="565" width="0.1025%" height="15" fill="rgb(218,18,35)" fg:x="23948" fg:w="106"/><text x="23.4168%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (103 samples, 0.10%)</title><rect x="23.1697%" y="549" width="0.0996%" height="15" fill="rgb(207,83,51)" fg:x="23951" fg:w="103"/><text x="23.4197%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (102 samples, 0.10%)</title><rect x="23.1707%" y="533" width="0.0987%" height="15" fill="rgb(225,63,43)" fg:x="23952" fg:w="102"/><text x="23.4207%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::empty (19 samples, 0.02%)</title><rect x="23.2694%" y="565" width="0.0184%" height="15" fill="rgb(207,57,36)" fg:x="24054" fg:w="19"/><text x="23.5194%" y="575.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (19 samples, 0.02%)</title><rect x="23.2694%" y="549" width="0.0184%" height="15" fill="rgb(216,99,33)" fg:x="24054" fg:w="19"/><text x="23.5194%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (710 samples, 0.69%)</title><rect x="22.7267%" y="613" width="0.6868%" height="15" fill="rgb(225,42,16)" fg:x="23493" fg:w="710"/><text x="22.9767%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (710 samples, 0.69%)</title><rect x="22.7267%" y="597" width="0.6868%" height="15" fill="rgb(220,201,45)" fg:x="23493" fg:w="710"/><text x="22.9767%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (682 samples, 0.66%)</title><rect x="22.7537%" y="581" width="0.6598%" height="15" fill="rgb(225,33,4)" fg:x="23521" fg:w="682"/><text x="23.0037%" y="591.50"></text></g><g><title>snmalloc::FreeListIter::take (130 samples, 0.13%)</title><rect x="23.2877%" y="565" width="0.1258%" height="15" fill="rgb(224,33,50)" fg:x="24073" fg:w="130"/><text x="23.5377%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (130 samples, 0.13%)</title><rect x="23.2877%" y="549" width="0.1258%" height="15" fill="rgb(246,198,51)" fg:x="24073" fg:w="130"/><text x="23.5377%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,238 samples, 1.20%)</title><rect x="22.2198%" y="741" width="1.1976%" height="15" fill="rgb(205,22,4)" fg:x="22969" fg:w="1238"/><text x="22.4698%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (749 samples, 0.72%)</title><rect x="22.6928%" y="725" width="0.7246%" height="15" fill="rgb(206,3,8)" fg:x="23458" fg:w="749"/><text x="22.9428%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (749 samples, 0.72%)</title><rect x="22.6928%" y="709" width="0.7246%" height="15" fill="rgb(251,23,15)" fg:x="23458" fg:w="749"/><text x="22.9428%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (749 samples, 0.72%)</title><rect x="22.6928%" y="693" width="0.7246%" height="15" fill="rgb(252,88,28)" fg:x="23458" fg:w="749"/><text x="22.9428%" y="703.50"></text></g><g><title>alloc::alloc::alloc (749 samples, 0.72%)</title><rect x="22.6928%" y="677" width="0.7246%" height="15" fill="rgb(212,127,14)" fg:x="23458" fg:w="749"/><text x="22.9428%" y="687.50"></text></g><g><title>__rg_alloc (749 samples, 0.72%)</title><rect x="22.6928%" y="661" width="0.7246%" height="15" fill="rgb(247,145,37)" fg:x="23458" fg:w="749"/><text x="22.9428%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (749 samples, 0.72%)</title><rect x="22.6928%" y="645" width="0.7246%" height="15" fill="rgb(209,117,53)" fg:x="23458" fg:w="749"/><text x="22.9428%" y="655.50"></text></g><g><title>rust_alloc (732 samples, 0.71%)</title><rect x="22.7092%" y="629" width="0.7081%" height="15" fill="rgb(212,90,42)" fg:x="23475" fg:w="732"/><text x="22.9592%" y="639.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (16 samples, 0.02%)</title><rect x="23.4251%" y="709" width="0.0155%" height="15" fill="rgb(218,164,37)" fg:x="24215" fg:w="16"/><text x="23.6751%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (16 samples, 0.02%)</title><rect x="23.4251%" y="693" width="0.0155%" height="15" fill="rgb(246,65,34)" fg:x="24215" fg:w="16"/><text x="23.6751%" y="703.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (16 samples, 0.02%)</title><rect x="23.4251%" y="677" width="0.0155%" height="15" fill="rgb(231,100,33)" fg:x="24215" fg:w="16"/><text x="23.6751%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (16 samples, 0.02%)</title><rect x="23.4251%" y="661" width="0.0155%" height="15" fill="rgb(228,126,14)" fg:x="24215" fg:w="16"/><text x="23.6751%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (16 samples, 0.02%)</title><rect x="23.4251%" y="645" width="0.0155%" height="15" fill="rgb(215,173,21)" fg:x="24215" fg:w="16"/><text x="23.6751%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (14 samples, 0.01%)</title><rect x="23.4406%" y="709" width="0.0135%" height="15" fill="rgb(210,6,40)" fg:x="24231" fg:w="14"/><text x="23.6906%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="23.4406%" y="693" width="0.0135%" height="15" fill="rgb(212,48,18)" fg:x="24231" fg:w="14"/><text x="23.6906%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (14 samples, 0.01%)</title><rect x="23.4406%" y="677" width="0.0135%" height="15" fill="rgb(230,214,11)" fg:x="24231" fg:w="14"/><text x="23.6906%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="23.4406%" y="661" width="0.0135%" height="15" fill="rgb(254,105,39)" fg:x="24231" fg:w="14"/><text x="23.6906%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="23.4174%" y="725" width="0.0493%" height="15" fill="rgb(245,158,5)" fg:x="24207" fg:w="51"/><text x="23.6674%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)]&gt; (13 samples, 0.01%)</title><rect x="23.4541%" y="709" width="0.0126%" height="15" fill="rgb(249,208,11)" fg:x="24245" fg:w="13"/><text x="23.7041%" y="719.50"></text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="23.4851%" y="629" width="0.0116%" height="15" fill="rgb(210,39,28)" fg:x="24277" fg:w="12"/><text x="23.7351%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (18 samples, 0.02%)</title><rect x="23.5335%" y="581" width="0.0174%" height="15" fill="rgb(211,56,53)" fg:x="24327" fg:w="18"/><text x="23.7835%" y="591.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (17 samples, 0.02%)</title><rect x="23.5344%" y="565" width="0.0164%" height="15" fill="rgb(226,201,30)" fg:x="24328" fg:w="17"/><text x="23.7844%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (58 samples, 0.06%)</title><rect x="23.5073%" y="629" width="0.0561%" height="15" fill="rgb(239,101,34)" fg:x="24300" fg:w="58"/><text x="23.7573%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (58 samples, 0.06%)</title><rect x="23.5073%" y="613" width="0.0561%" height="15" fill="rgb(226,209,5)" fg:x="24300" fg:w="58"/><text x="23.7573%" y="623.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (54 samples, 0.05%)</title><rect x="23.5112%" y="597" width="0.0522%" height="15" fill="rgb(250,105,47)" fg:x="24304" fg:w="54"/><text x="23.7612%" y="607.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (13 samples, 0.01%)</title><rect x="23.5509%" y="581" width="0.0126%" height="15" fill="rgb(230,72,3)" fg:x="24345" fg:w="13"/><text x="23.8009%" y="591.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (13 samples, 0.01%)</title><rect x="23.5509%" y="565" width="0.0126%" height="15" fill="rgb(232,218,39)" fg:x="24345" fg:w="13"/><text x="23.8009%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (111 samples, 0.11%)</title><rect x="23.4851%" y="661" width="0.1074%" height="15" fill="rgb(248,166,6)" fg:x="24277" fg:w="111"/><text x="23.7351%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (111 samples, 0.11%)</title><rect x="23.4851%" y="645" width="0.1074%" height="15" fill="rgb(247,89,20)" fg:x="24277" fg:w="111"/><text x="23.7351%" y="655.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (30 samples, 0.03%)</title><rect x="23.5634%" y="629" width="0.0290%" height="15" fill="rgb(248,130,54)" fg:x="24358" fg:w="30"/><text x="23.8134%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (112 samples, 0.11%)</title><rect x="23.4851%" y="693" width="0.1083%" height="15" fill="rgb(234,196,4)" fg:x="24277" fg:w="112"/><text x="23.7351%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (112 samples, 0.11%)</title><rect x="23.4851%" y="677" width="0.1083%" height="15" fill="rgb(250,143,31)" fg:x="24277" fg:w="112"/><text x="23.7351%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (135 samples, 0.13%)</title><rect x="23.4744%" y="709" width="0.1306%" height="15" fill="rgb(211,110,34)" fg:x="24266" fg:w="135"/><text x="23.7244%" y="719.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="23.5934%" y="693" width="0.0116%" height="15" fill="rgb(215,124,48)" fg:x="24389" fg:w="12"/><text x="23.8434%" y="703.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="23.5934%" y="677" width="0.0116%" height="15" fill="rgb(216,46,13)" fg:x="24389" fg:w="12"/><text x="23.8434%" y="687.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="23.5934%" y="661" width="0.0116%" height="15" fill="rgb(205,184,25)" fg:x="24389" fg:w="12"/><text x="23.8434%" y="671.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="23.5934%" y="645" width="0.0116%" height="15" fill="rgb(228,1,10)" fg:x="24389" fg:w="12"/><text x="23.8434%" y="655.50"></text></g><g><title>rust_dealloc (158 samples, 0.15%)</title><rect x="23.4667%" y="725" width="0.1528%" height="15" fill="rgb(213,116,27)" fg:x="24258" fg:w="158"/><text x="23.7167%" y="735.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (15 samples, 0.01%)</title><rect x="23.6050%" y="709" width="0.0145%" height="15" fill="rgb(241,95,50)" fg:x="24401" fg:w="15"/><text x="23.8550%" y="719.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (13 samples, 0.01%)</title><rect x="23.6215%" y="709" width="0.0126%" height="15" fill="rgb(238,48,32)" fg:x="24418" fg:w="13"/><text x="23.8715%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (229 samples, 0.22%)</title><rect x="23.4174%" y="741" width="0.2215%" height="15" fill="rgb(235,113,49)" fg:x="24207" fg:w="229"/><text x="23.6674%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (20 samples, 0.02%)</title><rect x="23.6195%" y="725" width="0.0193%" height="15" fill="rgb(205,127,43)" fg:x="24416" fg:w="20"/><text x="23.8695%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (13 samples, 0.01%)</title><rect x="23.6389%" y="741" width="0.0126%" height="15" fill="rgb(250,162,2)" fg:x="24436" fg:w="13"/><text x="23.8889%" y="751.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="23.6389%" y="725" width="0.0126%" height="15" fill="rgb(220,13,41)" fg:x="24436" fg:w="13"/><text x="23.8889%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (13 samples, 0.01%)</title><rect x="23.6573%" y="741" width="0.0126%" height="15" fill="rgb(249,221,25)" fg:x="24455" fg:w="13"/><text x="23.9073%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (60 samples, 0.06%)</title><rect x="23.6699%" y="741" width="0.0580%" height="15" fill="rgb(215,208,19)" fg:x="24468" fg:w="60"/><text x="23.9199%" y="751.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (60 samples, 0.06%)</title><rect x="23.6699%" y="725" width="0.0580%" height="15" fill="rgb(236,175,2)" fg:x="24468" fg:w="60"/><text x="23.9199%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (59 samples, 0.06%)</title><rect x="23.6708%" y="709" width="0.0571%" height="15" fill="rgb(241,52,2)" fg:x="24469" fg:w="59"/><text x="23.9208%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (59 samples, 0.06%)</title><rect x="23.6708%" y="693" width="0.0571%" height="15" fill="rgb(248,140,14)" fg:x="24469" fg:w="59"/><text x="23.9208%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (34 samples, 0.03%)</title><rect x="23.6950%" y="677" width="0.0329%" height="15" fill="rgb(253,22,42)" fg:x="24494" fg:w="34"/><text x="23.9450%" y="687.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (34 samples, 0.03%)</title><rect x="23.6950%" y="661" width="0.0329%" height="15" fill="rgb(234,61,47)" fg:x="24494" fg:w="34"/><text x="23.9450%" y="671.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (34 samples, 0.03%)</title><rect x="23.6950%" y="645" width="0.0329%" height="15" fill="rgb(208,226,15)" fg:x="24494" fg:w="34"/><text x="23.9450%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (34 samples, 0.03%)</title><rect x="23.6950%" y="629" width="0.0329%" height="15" fill="rgb(217,221,4)" fg:x="24494" fg:w="34"/><text x="23.9450%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (24 samples, 0.02%)</title><rect x="23.7047%" y="613" width="0.0232%" height="15" fill="rgb(212,174,34)" fg:x="24504" fg:w="24"/><text x="23.9547%" y="623.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (14 samples, 0.01%)</title><rect x="23.7318%" y="741" width="0.0135%" height="15" fill="rgb(253,83,4)" fg:x="24532" fg:w="14"/><text x="23.9818%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,026 samples, 6.80%)</title><rect x="17.0549%" y="773" width="6.7968%" height="15" fill="rgb(250,195,49)" fg:x="17630" fg:w="7026"/><text x="17.3049%" y="783.50">&lt;core::fu..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (7,010 samples, 6.78%)</title><rect x="17.0704%" y="757" width="6.7813%" height="15" fill="rgb(241,192,25)" fg:x="17646" fg:w="7010"/><text x="17.3204%" y="767.50">tremor_ru..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (110 samples, 0.11%)</title><rect x="23.7453%" y="741" width="0.1064%" height="15" fill="rgb(208,124,10)" fg:x="24546" fg:w="110"/><text x="23.9953%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (110 samples, 0.11%)</title><rect x="23.7453%" y="725" width="0.1064%" height="15" fill="rgb(222,33,0)" fg:x="24546" fg:w="110"/><text x="23.9953%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (110 samples, 0.11%)</title><rect x="23.7453%" y="709" width="0.1064%" height="15" fill="rgb(234,209,28)" fg:x="24546" fg:w="110"/><text x="23.9953%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (75 samples, 0.07%)</title><rect x="23.7792%" y="693" width="0.0726%" height="15" fill="rgb(224,11,23)" fg:x="24581" fg:w="75"/><text x="24.0292%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="25.0503%" y="757" width="0.0116%" height="15" fill="rgb(232,99,1)" fg:x="25895" fg:w="12"/><text x="25.3003%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="25.0619%" y="757" width="0.0222%" height="15" fill="rgb(237,95,45)" fg:x="25907" fg:w="23"/><text x="25.3119%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="25.0842%" y="757" width="0.0174%" height="15" fill="rgb(208,109,11)" fg:x="25930" fg:w="18"/><text x="25.3342%" y="767.50"></text></g><g><title>aligned_size (21 samples, 0.02%)</title><rect x="25.4953%" y="517" width="0.0203%" height="15" fill="rgb(216,190,48)" fg:x="26355" fg:w="21"/><text x="25.7453%" y="527.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="25.5311%" y="485" width="0.0145%" height="15" fill="rgb(251,171,36)" fg:x="26392" fg:w="15"/><text x="25.7811%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="25.5572%" y="469" width="0.0164%" height="15" fill="rgb(230,62,22)" fg:x="26419" fg:w="17"/><text x="25.8072%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="25.5572%" y="453" width="0.0164%" height="15" fill="rgb(225,114,35)" fg:x="26419" fg:w="17"/><text x="25.8072%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="25.5572%" y="437" width="0.0164%" height="15" fill="rgb(215,118,42)" fg:x="26419" fg:w="17"/><text x="25.8072%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="25.5572%" y="421" width="0.0164%" height="15" fill="rgb(243,119,21)" fg:x="26419" fg:w="17"/><text x="25.8072%" y="431.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="25.5572%" y="405" width="0.0164%" height="15" fill="rgb(252,177,53)" fg:x="26419" fg:w="17"/><text x="25.8072%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (245 samples, 0.24%)</title><rect x="25.4585%" y="661" width="0.2370%" height="15" fill="rgb(237,209,29)" fg:x="26317" fg:w="245"/><text x="25.7085%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (245 samples, 0.24%)</title><rect x="25.4585%" y="645" width="0.2370%" height="15" fill="rgb(212,65,23)" fg:x="26317" fg:w="245"/><text x="25.7085%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (245 samples, 0.24%)</title><rect x="25.4585%" y="629" width="0.2370%" height="15" fill="rgb(230,222,46)" fg:x="26317" fg:w="245"/><text x="25.7085%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (238 samples, 0.23%)</title><rect x="25.4653%" y="613" width="0.2302%" height="15" fill="rgb(215,135,32)" fg:x="26324" fg:w="238"/><text x="25.7153%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (238 samples, 0.23%)</title><rect x="25.4653%" y="597" width="0.2302%" height="15" fill="rgb(246,101,22)" fg:x="26324" fg:w="238"/><text x="25.7153%" y="607.50"></text></g><g><title>alloc::alloc::alloc (237 samples, 0.23%)</title><rect x="25.4663%" y="581" width="0.2293%" height="15" fill="rgb(206,107,13)" fg:x="26325" fg:w="237"/><text x="25.7163%" y="591.50"></text></g><g><title>__rg_alloc (237 samples, 0.23%)</title><rect x="25.4663%" y="565" width="0.2293%" height="15" fill="rgb(250,100,44)" fg:x="26325" fg:w="237"/><text x="25.7163%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (237 samples, 0.23%)</title><rect x="25.4663%" y="549" width="0.2293%" height="15" fill="rgb(231,147,38)" fg:x="26325" fg:w="237"/><text x="25.7163%" y="559.50"></text></g><g><title>rust_alloc (207 samples, 0.20%)</title><rect x="25.4953%" y="533" width="0.2002%" height="15" fill="rgb(229,8,40)" fg:x="26355" fg:w="207"/><text x="25.7453%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.17%)</title><rect x="25.5224%" y="517" width="0.1732%" height="15" fill="rgb(221,135,30)" fg:x="26383" fg:w="179"/><text x="25.7724%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (179 samples, 0.17%)</title><rect x="25.5224%" y="501" width="0.1732%" height="15" fill="rgb(249,193,18)" fg:x="26383" fg:w="179"/><text x="25.7724%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (155 samples, 0.15%)</title><rect x="25.5456%" y="485" width="0.1499%" height="15" fill="rgb(209,133,39)" fg:x="26407" fg:w="155"/><text x="25.7956%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::take (126 samples, 0.12%)</title><rect x="25.5737%" y="469" width="0.1219%" height="15" fill="rgb(232,100,14)" fg:x="26436" fg:w="126"/><text x="25.8237%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (126 samples, 0.12%)</title><rect x="25.5737%" y="453" width="0.1219%" height="15" fill="rgb(224,185,1)" fg:x="26436" fg:w="126"/><text x="25.8237%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (361 samples, 0.35%)</title><rect x="25.4305%" y="741" width="0.3492%" height="15" fill="rgb(223,139,8)" fg:x="26288" fg:w="361"/><text x="25.6805%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (332 samples, 0.32%)</title><rect x="25.4585%" y="725" width="0.3212%" height="15" fill="rgb(232,213,38)" fg:x="26317" fg:w="332"/><text x="25.7085%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (332 samples, 0.32%)</title><rect x="25.4585%" y="709" width="0.3212%" height="15" fill="rgb(207,94,22)" fg:x="26317" fg:w="332"/><text x="25.7085%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (332 samples, 0.32%)</title><rect x="25.4585%" y="693" width="0.3212%" height="15" fill="rgb(219,183,54)" fg:x="26317" fg:w="332"/><text x="25.7085%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (332 samples, 0.32%)</title><rect x="25.4585%" y="677" width="0.3212%" height="15" fill="rgb(216,185,54)" fg:x="26317" fg:w="332"/><text x="25.7085%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (87 samples, 0.08%)</title><rect x="25.6955%" y="661" width="0.0842%" height="15" fill="rgb(254,217,39)" fg:x="26562" fg:w="87"/><text x="25.9455%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (87 samples, 0.08%)</title><rect x="25.6955%" y="645" width="0.0842%" height="15" fill="rgb(240,178,23)" fg:x="26562" fg:w="87"/><text x="25.9455%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (77 samples, 0.07%)</title><rect x="25.7052%" y="629" width="0.0745%" height="15" fill="rgb(218,11,47)" fg:x="26572" fg:w="77"/><text x="25.9552%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (100 samples, 0.10%)</title><rect x="25.8445%" y="453" width="0.0967%" height="15" fill="rgb(218,51,51)" fg:x="26716" fg:w="100"/><text x="26.0945%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (99 samples, 0.10%)</title><rect x="25.8455%" y="437" width="0.0958%" height="15" fill="rgb(238,126,27)" fg:x="26717" fg:w="99"/><text x="26.0955%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (87 samples, 0.08%)</title><rect x="25.8571%" y="421" width="0.0842%" height="15" fill="rgb(249,202,22)" fg:x="26729" fg:w="87"/><text x="26.1071%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (74 samples, 0.07%)</title><rect x="25.8697%" y="405" width="0.0716%" height="15" fill="rgb(254,195,49)" fg:x="26742" fg:w="74"/><text x="26.1197%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (74 samples, 0.07%)</title><rect x="25.8697%" y="389" width="0.0716%" height="15" fill="rgb(208,123,14)" fg:x="26742" fg:w="74"/><text x="26.1197%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (141 samples, 0.14%)</title><rect x="25.8145%" y="597" width="0.1364%" height="15" fill="rgb(224,200,8)" fg:x="26685" fg:w="141"/><text x="26.0645%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (141 samples, 0.14%)</title><rect x="25.8145%" y="581" width="0.1364%" height="15" fill="rgb(217,61,36)" fg:x="26685" fg:w="141"/><text x="26.0645%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (141 samples, 0.14%)</title><rect x="25.8145%" y="565" width="0.1364%" height="15" fill="rgb(206,35,45)" fg:x="26685" fg:w="141"/><text x="26.0645%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.13%)</title><rect x="25.8174%" y="549" width="0.1335%" height="15" fill="rgb(217,65,33)" fg:x="26688" fg:w="138"/><text x="26.0674%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.13%)</title><rect x="25.8174%" y="533" width="0.1335%" height="15" fill="rgb(222,158,48)" fg:x="26688" fg:w="138"/><text x="26.0674%" y="543.50"></text></g><g><title>alloc::alloc::alloc (130 samples, 0.13%)</title><rect x="25.8252%" y="517" width="0.1258%" height="15" fill="rgb(254,2,54)" fg:x="26696" fg:w="130"/><text x="26.0752%" y="527.50"></text></g><g><title>__rg_alloc (130 samples, 0.13%)</title><rect x="25.8252%" y="501" width="0.1258%" height="15" fill="rgb(250,143,38)" fg:x="26696" fg:w="130"/><text x="26.0752%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (130 samples, 0.13%)</title><rect x="25.8252%" y="485" width="0.1258%" height="15" fill="rgb(248,25,0)" fg:x="26696" fg:w="130"/><text x="26.0752%" y="495.50"></text></g><g><title>rust_alloc (119 samples, 0.12%)</title><rect x="25.8358%" y="469" width="0.1151%" height="15" fill="rgb(206,152,27)" fg:x="26707" fg:w="119"/><text x="26.0858%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (206 samples, 0.20%)</title><rect x="25.8097%" y="677" width="0.1993%" height="15" fill="rgb(240,77,30)" fg:x="26680" fg:w="206"/><text x="26.0597%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (201 samples, 0.19%)</title><rect x="25.8145%" y="661" width="0.1944%" height="15" fill="rgb(231,5,3)" fg:x="26685" fg:w="201"/><text x="26.0645%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (201 samples, 0.19%)</title><rect x="25.8145%" y="645" width="0.1944%" height="15" fill="rgb(207,226,32)" fg:x="26685" fg:w="201"/><text x="26.0645%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (201 samples, 0.19%)</title><rect x="25.8145%" y="629" width="0.1944%" height="15" fill="rgb(222,207,47)" fg:x="26685" fg:w="201"/><text x="26.0645%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (201 samples, 0.19%)</title><rect x="25.8145%" y="613" width="0.1944%" height="15" fill="rgb(229,115,45)" fg:x="26685" fg:w="201"/><text x="26.0645%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (60 samples, 0.06%)</title><rect x="25.9509%" y="597" width="0.0580%" height="15" fill="rgb(224,191,6)" fg:x="26826" fg:w="60"/><text x="26.2009%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (60 samples, 0.06%)</title><rect x="25.9509%" y="581" width="0.0580%" height="15" fill="rgb(230,227,24)" fg:x="26826" fg:w="60"/><text x="26.2009%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (46 samples, 0.04%)</title><rect x="25.9645%" y="565" width="0.0445%" height="15" fill="rgb(228,80,19)" fg:x="26840" fg:w="46"/><text x="26.2145%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="26.0090%" y="677" width="0.0116%" height="15" fill="rgb(247,229,0)" fg:x="26886" fg:w="12"/><text x="26.2590%" y="687.50"></text></g><g><title>size_to_sizeclass (18 samples, 0.02%)</title><rect x="26.0748%" y="501" width="0.0174%" height="15" fill="rgb(237,194,15)" fg:x="26954" fg:w="18"/><text x="26.3248%" y="511.50"></text></g><g><title>rust_alloc (18 samples, 0.02%)</title><rect x="26.0748%" y="485" width="0.0174%" height="15" fill="rgb(219,203,20)" fg:x="26954" fg:w="18"/><text x="26.3248%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (139 samples, 0.13%)</title><rect x="26.0728%" y="533" width="0.1345%" height="15" fill="rgb(234,128,8)" fg:x="26952" fg:w="139"/><text x="26.3228%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (139 samples, 0.13%)</title><rect x="26.0728%" y="517" width="0.1345%" height="15" fill="rgb(248,202,8)" fg:x="26952" fg:w="139"/><text x="26.3228%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (119 samples, 0.12%)</title><rect x="26.0922%" y="501" width="0.1151%" height="15" fill="rgb(206,104,37)" fg:x="26972" fg:w="119"/><text x="26.3422%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (106 samples, 0.10%)</title><rect x="26.1047%" y="485" width="0.1025%" height="15" fill="rgb(223,8,27)" fg:x="26985" fg:w="106"/><text x="26.3547%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (106 samples, 0.10%)</title><rect x="26.1047%" y="469" width="0.1025%" height="15" fill="rgb(216,217,28)" fg:x="26985" fg:w="106"/><text x="26.3547%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (182 samples, 0.18%)</title><rect x="26.0467%" y="629" width="0.1761%" height="15" fill="rgb(249,199,1)" fg:x="26925" fg:w="182"/><text x="26.2967%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (182 samples, 0.18%)</title><rect x="26.0467%" y="613" width="0.1761%" height="15" fill="rgb(240,85,17)" fg:x="26925" fg:w="182"/><text x="26.2967%" y="623.50"></text></g><g><title>alloc::alloc::alloc (170 samples, 0.16%)</title><rect x="26.0583%" y="597" width="0.1645%" height="15" fill="rgb(206,108,45)" fg:x="26937" fg:w="170"/><text x="26.3083%" y="607.50"></text></g><g><title>__rg_alloc (170 samples, 0.16%)</title><rect x="26.0583%" y="581" width="0.1645%" height="15" fill="rgb(245,210,41)" fg:x="26937" fg:w="170"/><text x="26.3083%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (170 samples, 0.16%)</title><rect x="26.0583%" y="565" width="0.1645%" height="15" fill="rgb(206,13,37)" fg:x="26937" fg:w="170"/><text x="26.3083%" y="575.50"></text></g><g><title>rust_alloc (165 samples, 0.16%)</title><rect x="26.0632%" y="549" width="0.1596%" height="15" fill="rgb(250,61,18)" fg:x="26942" fg:w="165"/><text x="26.3132%" y="559.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="26.2073%" y="533" width="0.0155%" height="15" fill="rgb(235,172,48)" fg:x="27091" fg:w="16"/><text x="26.4573%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (12 samples, 0.01%)</title><rect x="26.2228%" y="629" width="0.0116%" height="15" fill="rgb(249,201,17)" fg:x="27107" fg:w="12"/><text x="26.4728%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (230 samples, 0.22%)</title><rect x="26.0225%" y="677" width="0.2225%" height="15" fill="rgb(219,208,6)" fg:x="26900" fg:w="230"/><text x="26.2725%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (210 samples, 0.20%)</title><rect x="26.0419%" y="661" width="0.2031%" height="15" fill="rgb(248,31,23)" fg:x="26920" fg:w="210"/><text x="26.2919%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (205 samples, 0.20%)</title><rect x="26.0467%" y="645" width="0.1983%" height="15" fill="rgb(245,15,42)" fg:x="26925" fg:w="205"/><text x="26.2967%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.01%)</title><rect x="26.2344%" y="629" width="0.0106%" height="15" fill="rgb(222,217,39)" fg:x="27119" fg:w="11"/><text x="26.4844%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (11 samples, 0.01%)</title><rect x="26.2344%" y="613" width="0.0106%" height="15" fill="rgb(210,219,27)" fg:x="27119" fg:w="11"/><text x="26.4844%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (11 samples, 0.01%)</title><rect x="26.2344%" y="597" width="0.0106%" height="15" fill="rgb(252,166,36)" fg:x="27119" fg:w="11"/><text x="26.4844%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (476 samples, 0.46%)</title><rect x="25.8020%" y="693" width="0.4605%" height="15" fill="rgb(245,132,34)" fg:x="26672" fg:w="476"/><text x="26.0520%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (18 samples, 0.02%)</title><rect x="26.2450%" y="677" width="0.0174%" height="15" fill="rgb(236,54,3)" fg:x="27130" fg:w="18"/><text x="26.4950%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (511 samples, 0.49%)</title><rect x="25.7797%" y="741" width="0.4943%" height="15" fill="rgb(241,173,43)" fg:x="26649" fg:w="511"/><text x="26.0297%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (488 samples, 0.47%)</title><rect x="25.8020%" y="725" width="0.4721%" height="15" fill="rgb(215,190,9)" fg:x="26672" fg:w="488"/><text x="26.0520%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (488 samples, 0.47%)</title><rect x="25.8020%" y="709" width="0.4721%" height="15" fill="rgb(242,101,16)" fg:x="26672" fg:w="488"/><text x="26.0520%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="26.2624%" y="693" width="0.0116%" height="15" fill="rgb(223,190,21)" fg:x="27148" fg:w="12"/><text x="26.5124%" y="703.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,226 samples, 1.19%)</title><rect x="25.1016%" y="757" width="1.1860%" height="15" fill="rgb(215,228,25)" fg:x="25948" fg:w="1226"/><text x="25.3516%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="26.2740%" y="741" width="0.0135%" height="15" fill="rgb(225,36,22)" fg:x="27160" fg:w="14"/><text x="26.5240%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (235 samples, 0.23%)</title><rect x="26.2876%" y="757" width="0.2273%" height="15" fill="rgb(251,106,46)" fg:x="27174" fg:w="235"/><text x="26.5376%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (11 samples, 0.01%)</title><rect x="26.5149%" y="757" width="0.0106%" height="15" fill="rgb(208,90,1)" fg:x="27409" fg:w="11"/><text x="26.7649%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (11 samples, 0.01%)</title><rect x="26.5149%" y="741" width="0.0106%" height="15" fill="rgb(243,10,4)" fg:x="27409" fg:w="11"/><text x="26.7649%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (11 samples, 0.01%)</title><rect x="26.5149%" y="725" width="0.0106%" height="15" fill="rgb(212,137,27)" fg:x="27409" fg:w="11"/><text x="26.7649%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (421 samples, 0.41%)</title><rect x="26.5256%" y="757" width="0.4073%" height="15" fill="rgb(231,220,49)" fg:x="27420" fg:w="421"/><text x="26.7756%" y="767.50"></text></g><g><title>core::ptr::write (393 samples, 0.38%)</title><rect x="26.5526%" y="741" width="0.3802%" height="15" fill="rgb(237,96,20)" fg:x="27448" fg:w="393"/><text x="26.8026%" y="751.50"></text></g><g><title>__memcpy_avx_unaligned_erms (390 samples, 0.38%)</title><rect x="26.5555%" y="725" width="0.3773%" height="15" fill="rgb(239,229,30)" fg:x="27451" fg:w="390"/><text x="26.8055%" y="735.50"></text></g><g><title>aligned_size (13 samples, 0.01%)</title><rect x="26.9609%" y="597" width="0.0126%" height="15" fill="rgb(219,65,33)" fg:x="27870" fg:w="13"/><text x="27.2109%" y="607.50"></text></g><g><title>rust_alloc (14 samples, 0.01%)</title><rect x="26.9831%" y="565" width="0.0135%" height="15" fill="rgb(243,134,7)" fg:x="27893" fg:w="14"/><text x="27.2331%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="27.0063%" y="549" width="0.0193%" height="15" fill="rgb(216,177,54)" fg:x="27917" fg:w="20"/><text x="27.2563%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (18 samples, 0.02%)</title><rect x="27.0083%" y="533" width="0.0174%" height="15" fill="rgb(211,160,20)" fg:x="27919" fg:w="18"/><text x="27.2583%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="27.0092%" y="517" width="0.0164%" height="15" fill="rgb(239,85,39)" fg:x="27920" fg:w="17"/><text x="27.2592%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (17 samples, 0.02%)</title><rect x="27.0092%" y="501" width="0.0164%" height="15" fill="rgb(232,125,22)" fg:x="27920" fg:w="17"/><text x="27.2592%" y="511.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (17 samples, 0.02%)</title><rect x="27.0092%" y="485" width="0.0164%" height="15" fill="rgb(244,57,34)" fg:x="27920" fg:w="17"/><text x="27.2592%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (133 samples, 0.13%)</title><rect x="26.9425%" y="693" width="0.1287%" height="15" fill="rgb(214,203,32)" fg:x="27851" fg:w="133"/><text x="27.1925%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (133 samples, 0.13%)</title><rect x="26.9425%" y="677" width="0.1287%" height="15" fill="rgb(207,58,43)" fg:x="27851" fg:w="133"/><text x="27.1925%" y="687.50"></text></g><g><title>alloc::alloc::alloc (124 samples, 0.12%)</title><rect x="26.9512%" y="661" width="0.1200%" height="15" fill="rgb(215,193,15)" fg:x="27860" fg:w="124"/><text x="27.2012%" y="671.50"></text></g><g><title>__rg_alloc (124 samples, 0.12%)</title><rect x="26.9512%" y="645" width="0.1200%" height="15" fill="rgb(232,15,44)" fg:x="27860" fg:w="124"/><text x="27.2012%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (124 samples, 0.12%)</title><rect x="26.9512%" y="629" width="0.1200%" height="15" fill="rgb(212,3,48)" fg:x="27860" fg:w="124"/><text x="27.2012%" y="639.50"></text></g><g><title>rust_alloc (114 samples, 0.11%)</title><rect x="26.9609%" y="613" width="0.1103%" height="15" fill="rgb(218,128,7)" fg:x="27870" fg:w="114"/><text x="27.2109%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="26.9831%" y="597" width="0.0880%" height="15" fill="rgb(226,216,39)" fg:x="27893" fg:w="91"/><text x="27.2331%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (91 samples, 0.09%)</title><rect x="26.9831%" y="581" width="0.0880%" height="15" fill="rgb(243,47,51)" fg:x="27893" fg:w="91"/><text x="27.2331%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (77 samples, 0.07%)</title><rect x="26.9967%" y="565" width="0.0745%" height="15" fill="rgb(241,183,40)" fg:x="27907" fg:w="77"/><text x="27.2467%" y="575.50"></text></g><g><title>snmalloc::FreeListIter::take (42 samples, 0.04%)</title><rect x="27.0305%" y="549" width="0.0406%" height="15" fill="rgb(231,217,32)" fg:x="27942" fg:w="42"/><text x="27.2805%" y="559.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (42 samples, 0.04%)</title><rect x="27.0305%" y="533" width="0.0406%" height="15" fill="rgb(229,61,38)" fg:x="27942" fg:w="42"/><text x="27.2805%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (12 samples, 0.01%)</title><rect x="27.0712%" y="693" width="0.0116%" height="15" fill="rgb(225,210,5)" fg:x="27984" fg:w="12"/><text x="27.3212%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (163 samples, 0.16%)</title><rect x="26.9328%" y="757" width="0.1577%" height="15" fill="rgb(231,79,45)" fg:x="27841" fg:w="163"/><text x="27.1828%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (163 samples, 0.16%)</title><rect x="26.9328%" y="741" width="0.1577%" height="15" fill="rgb(224,100,7)" fg:x="27841" fg:w="163"/><text x="27.1828%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (153 samples, 0.15%)</title><rect x="26.9425%" y="725" width="0.1480%" height="15" fill="rgb(241,198,18)" fg:x="27851" fg:w="153"/><text x="27.1925%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (153 samples, 0.15%)</title><rect x="26.9425%" y="709" width="0.1480%" height="15" fill="rgb(252,97,53)" fg:x="27851" fg:w="153"/><text x="27.1925%" y="719.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="27.1282%" y="501" width="0.0106%" height="15" fill="rgb(220,88,7)" fg:x="28043" fg:w="11"/><text x="27.3782%" y="511.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (30 samples, 0.03%)</title><rect x="27.1795%" y="453" width="0.0290%" height="15" fill="rgb(213,176,14)" fg:x="28096" fg:w="30"/><text x="27.4295%" y="463.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (27 samples, 0.03%)</title><rect x="27.1824%" y="437" width="0.0261%" height="15" fill="rgb(246,73,7)" fg:x="28099" fg:w="27"/><text x="27.4324%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (71 samples, 0.07%)</title><rect x="27.1466%" y="501" width="0.0687%" height="15" fill="rgb(245,64,36)" fg:x="28062" fg:w="71"/><text x="27.3966%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (71 samples, 0.07%)</title><rect x="27.1466%" y="485" width="0.0687%" height="15" fill="rgb(245,80,10)" fg:x="28062" fg:w="71"/><text x="27.3966%" y="495.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (71 samples, 0.07%)</title><rect x="27.1466%" y="469" width="0.0687%" height="15" fill="rgb(232,107,50)" fg:x="28062" fg:w="71"/><text x="27.3966%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (110 samples, 0.11%)</title><rect x="27.1282%" y="533" width="0.1064%" height="15" fill="rgb(253,3,0)" fg:x="28043" fg:w="110"/><text x="27.3782%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (110 samples, 0.11%)</title><rect x="27.1282%" y="517" width="0.1064%" height="15" fill="rgb(212,99,53)" fg:x="28043" fg:w="110"/><text x="27.3782%" y="527.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (20 samples, 0.02%)</title><rect x="27.2153%" y="501" width="0.0193%" height="15" fill="rgb(249,111,54)" fg:x="28133" fg:w="20"/><text x="27.4653%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (111 samples, 0.11%)</title><rect x="27.1282%" y="565" width="0.1074%" height="15" fill="rgb(249,55,30)" fg:x="28043" fg:w="111"/><text x="27.3782%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (111 samples, 0.11%)</title><rect x="27.1282%" y="549" width="0.1074%" height="15" fill="rgb(237,47,42)" fg:x="28043" fg:w="111"/><text x="27.3782%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (137 samples, 0.13%)</title><rect x="27.1137%" y="581" width="0.1325%" height="15" fill="rgb(211,20,18)" fg:x="28028" fg:w="137"/><text x="27.3637%" y="591.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="27.2356%" y="565" width="0.0106%" height="15" fill="rgb(231,203,46)" fg:x="28154" fg:w="11"/><text x="27.4856%" y="575.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (11 samples, 0.01%)</title><rect x="27.2356%" y="549" width="0.0106%" height="15" fill="rgb(237,142,3)" fg:x="28154" fg:w="11"/><text x="27.4856%" y="559.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (11 samples, 0.01%)</title><rect x="27.2356%" y="533" width="0.0106%" height="15" fill="rgb(241,107,1)" fg:x="28154" fg:w="11"/><text x="27.4856%" y="543.50"></text></g><g><title>snmalloc::bits::align_down (11 samples, 0.01%)</title><rect x="27.2356%" y="517" width="0.0106%" height="15" fill="rgb(229,83,13)" fg:x="28154" fg:w="11"/><text x="27.4856%" y="527.50"></text></g><g><title>rust_dealloc (162 samples, 0.16%)</title><rect x="27.1002%" y="597" width="0.1567%" height="15" fill="rgb(241,91,40)" fg:x="28014" fg:w="162"/><text x="27.3502%" y="607.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (11 samples, 0.01%)</title><rect x="27.2463%" y="581" width="0.0106%" height="15" fill="rgb(225,3,45)" fg:x="28165" fg:w="11"/><text x="27.4963%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (172 samples, 0.17%)</title><rect x="27.0915%" y="661" width="0.1664%" height="15" fill="rgb(244,223,14)" fg:x="28005" fg:w="172"/><text x="27.3415%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (171 samples, 0.17%)</title><rect x="27.0924%" y="645" width="0.1654%" height="15" fill="rgb(224,124,37)" fg:x="28006" fg:w="171"/><text x="27.3424%" y="655.50"></text></g><g><title>__rg_dealloc (171 samples, 0.17%)</title><rect x="27.0924%" y="629" width="0.1654%" height="15" fill="rgb(251,171,30)" fg:x="28006" fg:w="171"/><text x="27.3424%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (171 samples, 0.17%)</title><rect x="27.0924%" y="613" width="0.1654%" height="15" fill="rgb(236,46,54)" fg:x="28006" fg:w="171"/><text x="27.3424%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (186 samples, 0.18%)</title><rect x="27.0905%" y="725" width="0.1799%" height="15" fill="rgb(245,213,5)" fg:x="28004" fg:w="186"/><text x="27.3405%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (186 samples, 0.18%)</title><rect x="27.0905%" y="709" width="0.1799%" height="15" fill="rgb(230,144,27)" fg:x="28004" fg:w="186"/><text x="27.3405%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (185 samples, 0.18%)</title><rect x="27.0915%" y="693" width="0.1790%" height="15" fill="rgb(220,86,6)" fg:x="28005" fg:w="185"/><text x="27.3415%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (185 samples, 0.18%)</title><rect x="27.0915%" y="677" width="0.1790%" height="15" fill="rgb(240,20,13)" fg:x="28005" fg:w="185"/><text x="27.3415%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="27.2579%" y="661" width="0.0126%" height="15" fill="rgb(217,89,34)" fg:x="28177" fg:w="13"/><text x="27.5079%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (193 samples, 0.19%)</title><rect x="27.0905%" y="741" width="0.1867%" height="15" fill="rgb(229,13,5)" fg:x="28004" fg:w="193"/><text x="27.3405%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (201 samples, 0.19%)</title><rect x="27.0905%" y="757" width="0.1944%" height="15" fill="rgb(244,67,35)" fg:x="28004" fg:w="201"/><text x="27.3405%" y="767.50"></text></g><g><title>aligned_size (19 samples, 0.02%)</title><rect x="27.3043%" y="597" width="0.0184%" height="15" fill="rgb(221,40,2)" fg:x="28225" fg:w="19"/><text x="27.5543%" y="607.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="27.3527%" y="517" width="0.0126%" height="15" fill="rgb(237,157,21)" fg:x="28275" fg:w="13"/><text x="27.6027%" y="527.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (44 samples, 0.04%)</title><rect x="27.4184%" y="469" width="0.0426%" height="15" fill="rgb(222,94,11)" fg:x="28343" fg:w="44"/><text x="27.6684%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (38 samples, 0.04%)</title><rect x="27.4243%" y="453" width="0.0368%" height="15" fill="rgb(249,113,6)" fg:x="28349" fg:w="38"/><text x="27.6743%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (112 samples, 0.11%)</title><rect x="27.3778%" y="517" width="0.1083%" height="15" fill="rgb(238,137,36)" fg:x="28301" fg:w="112"/><text x="27.6278%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (112 samples, 0.11%)</title><rect x="27.3778%" y="501" width="0.1083%" height="15" fill="rgb(210,102,26)" fg:x="28301" fg:w="112"/><text x="27.6278%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (112 samples, 0.11%)</title><rect x="27.3778%" y="485" width="0.1083%" height="15" fill="rgb(218,30,30)" fg:x="28301" fg:w="112"/><text x="27.6278%" y="495.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (26 samples, 0.03%)</title><rect x="27.4610%" y="469" width="0.0252%" height="15" fill="rgb(214,67,26)" fg:x="28387" fg:w="26"/><text x="27.7110%" y="479.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (26 samples, 0.03%)</title><rect x="27.4610%" y="453" width="0.0252%" height="15" fill="rgb(251,9,53)" fg:x="28387" fg:w="26"/><text x="27.7110%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (158 samples, 0.15%)</title><rect x="27.3478%" y="549" width="0.1528%" height="15" fill="rgb(228,204,25)" fg:x="28270" fg:w="158"/><text x="27.5978%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (158 samples, 0.15%)</title><rect x="27.3478%" y="533" width="0.1528%" height="15" fill="rgb(207,153,8)" fg:x="28270" fg:w="158"/><text x="27.5978%" y="543.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="27.4862%" y="517" width="0.0145%" height="15" fill="rgb(242,9,16)" fg:x="28413" fg:w="15"/><text x="27.7362%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (167 samples, 0.16%)</title><rect x="27.3478%" y="581" width="0.1616%" height="15" fill="rgb(217,211,10)" fg:x="28270" fg:w="167"/><text x="27.5978%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (167 samples, 0.16%)</title><rect x="27.3478%" y="565" width="0.1616%" height="15" fill="rgb(219,228,52)" fg:x="28270" fg:w="167"/><text x="27.5978%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (204 samples, 0.20%)</title><rect x="27.3246%" y="597" width="0.1973%" height="15" fill="rgb(231,92,29)" fg:x="28246" fg:w="204"/><text x="27.5746%" y="607.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.5094%" y="581" width="0.0126%" height="15" fill="rgb(232,8,23)" fg:x="28437" fg:w="13"/><text x="27.7594%" y="591.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.5094%" y="565" width="0.0126%" height="15" fill="rgb(216,211,34)" fg:x="28437" fg:w="13"/><text x="27.7594%" y="575.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="27.5094%" y="549" width="0.0126%" height="15" fill="rgb(236,151,0)" fg:x="28437" fg:w="13"/><text x="27.7594%" y="559.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="27.5094%" y="533" width="0.0126%" height="15" fill="rgb(209,168,3)" fg:x="28437" fg:w="13"/><text x="27.7594%" y="543.50"></text></g><g><title>rust_dealloc (239 samples, 0.23%)</title><rect x="27.3024%" y="613" width="0.2312%" height="15" fill="rgb(208,129,28)" fg:x="28223" fg:w="239"/><text x="27.5524%" y="623.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="27.5220%" y="597" width="0.0116%" height="15" fill="rgb(229,78,22)" fg:x="28450" fg:w="12"/><text x="27.7720%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (250 samples, 0.24%)</title><rect x="27.2956%" y="677" width="0.2418%" height="15" fill="rgb(228,187,13)" fg:x="28216" fg:w="250"/><text x="27.5456%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (250 samples, 0.24%)</title><rect x="27.2956%" y="661" width="0.2418%" height="15" fill="rgb(240,119,24)" fg:x="28216" fg:w="250"/><text x="27.5456%" y="671.50"></text></g><g><title>__rg_dealloc (250 samples, 0.24%)</title><rect x="27.2956%" y="645" width="0.2418%" height="15" fill="rgb(209,194,42)" fg:x="28216" fg:w="250"/><text x="27.5456%" y="655.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (250 samples, 0.24%)</title><rect x="27.2956%" y="629" width="0.2418%" height="15" fill="rgb(247,200,46)" fg:x="28216" fg:w="250"/><text x="27.5456%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (262 samples, 0.25%)</title><rect x="27.2888%" y="741" width="0.2535%" height="15" fill="rgb(218,76,16)" fg:x="28209" fg:w="262"/><text x="27.5388%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (262 samples, 0.25%)</title><rect x="27.2888%" y="725" width="0.2535%" height="15" fill="rgb(225,21,48)" fg:x="28209" fg:w="262"/><text x="27.5388%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (262 samples, 0.25%)</title><rect x="27.2888%" y="709" width="0.2535%" height="15" fill="rgb(239,223,50)" fg:x="28209" fg:w="262"/><text x="27.5388%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (262 samples, 0.25%)</title><rect x="27.2888%" y="693" width="0.2535%" height="15" fill="rgb(244,45,21)" fg:x="28209" fg:w="262"/><text x="27.5388%" y="703.50"></text></g><g><title>aligned_size (11 samples, 0.01%)</title><rect x="27.5636%" y="549" width="0.0106%" height="15" fill="rgb(232,33,43)" fg:x="28493" fg:w="11"/><text x="27.8136%" y="559.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="27.6177%" y="421" width="0.0126%" height="15" fill="rgb(209,8,3)" fg:x="28549" fg:w="13"/><text x="27.8677%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (41 samples, 0.04%)</title><rect x="27.5993%" y="469" width="0.0397%" height="15" fill="rgb(214,25,53)" fg:x="28530" fg:w="41"/><text x="27.8493%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (41 samples, 0.04%)</title><rect x="27.5993%" y="453" width="0.0397%" height="15" fill="rgb(254,186,54)" fg:x="28530" fg:w="41"/><text x="27.8493%" y="463.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (40 samples, 0.04%)</title><rect x="27.6003%" y="437" width="0.0387%" height="15" fill="rgb(208,174,49)" fg:x="28531" fg:w="40"/><text x="27.8503%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (61 samples, 0.06%)</title><rect x="27.5848%" y="501" width="0.0590%" height="15" fill="rgb(233,191,51)" fg:x="28515" fg:w="61"/><text x="27.8348%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (61 samples, 0.06%)</title><rect x="27.5848%" y="485" width="0.0590%" height="15" fill="rgb(222,134,10)" fg:x="28515" fg:w="61"/><text x="27.8348%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (74 samples, 0.07%)</title><rect x="27.5848%" y="533" width="0.0716%" height="15" fill="rgb(230,226,20)" fg:x="28515" fg:w="74"/><text x="27.8348%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (74 samples, 0.07%)</title><rect x="27.5848%" y="517" width="0.0716%" height="15" fill="rgb(251,111,25)" fg:x="28515" fg:w="74"/><text x="27.8348%" y="527.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.6438%" y="501" width="0.0126%" height="15" fill="rgb(224,40,46)" fg:x="28576" fg:w="13"/><text x="27.8938%" y="511.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.6438%" y="485" width="0.0126%" height="15" fill="rgb(236,108,47)" fg:x="28576" fg:w="13"/><text x="27.8938%" y="495.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="27.6438%" y="469" width="0.0126%" height="15" fill="rgb(234,93,0)" fg:x="28576" fg:w="13"/><text x="27.8938%" y="479.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="27.6438%" y="453" width="0.0126%" height="15" fill="rgb(224,213,32)" fg:x="28576" fg:w="13"/><text x="27.8938%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (96 samples, 0.09%)</title><rect x="27.5761%" y="549" width="0.0929%" height="15" fill="rgb(251,11,48)" fg:x="28506" fg:w="96"/><text x="27.8261%" y="559.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.6564%" y="533" width="0.0126%" height="15" fill="rgb(236,173,5)" fg:x="28589" fg:w="13"/><text x="27.9064%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="27.6564%" y="517" width="0.0126%" height="15" fill="rgb(230,95,12)" fg:x="28589" fg:w="13"/><text x="27.9064%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (13 samples, 0.01%)</title><rect x="27.6564%" y="501" width="0.0126%" height="15" fill="rgb(232,209,1)" fg:x="28589" fg:w="13"/><text x="27.9064%" y="511.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="27.6564%" y="485" width="0.0126%" height="15" fill="rgb(232,6,1)" fg:x="28589" fg:w="13"/><text x="27.9064%" y="495.50"></text></g><g><title>rust_dealloc (117 samples, 0.11%)</title><rect x="27.5636%" y="565" width="0.1132%" height="15" fill="rgb(210,224,50)" fg:x="28493" fg:w="117"/><text x="27.8136%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (121 samples, 0.12%)</title><rect x="27.5607%" y="581" width="0.1171%" height="15" fill="rgb(228,127,35)" fg:x="28490" fg:w="121"/><text x="27.8107%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (131 samples, 0.13%)</title><rect x="27.5607%" y="629" width="0.1267%" height="15" fill="rgb(245,102,45)" fg:x="28490" fg:w="131"/><text x="27.8107%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (131 samples, 0.13%)</title><rect x="27.5607%" y="613" width="0.1267%" height="15" fill="rgb(214,1,49)" fg:x="28490" fg:w="131"/><text x="27.8107%" y="623.50"></text></g><g><title>__rg_dealloc (131 samples, 0.13%)</title><rect x="27.5607%" y="597" width="0.1267%" height="15" fill="rgb(226,163,40)" fg:x="28490" fg:w="131"/><text x="27.8107%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.16%)</title><rect x="27.5423%" y="725" width="0.1596%" height="15" fill="rgb(239,212,28)" fg:x="28471" fg:w="165"/><text x="27.7923%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (164 samples, 0.16%)</title><rect x="27.5432%" y="709" width="0.1587%" height="15" fill="rgb(220,20,13)" fg:x="28472" fg:w="164"/><text x="27.7932%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (151 samples, 0.15%)</title><rect x="27.5558%" y="693" width="0.1461%" height="15" fill="rgb(210,164,35)" fg:x="28485" fg:w="151"/><text x="27.8058%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (151 samples, 0.15%)</title><rect x="27.5558%" y="677" width="0.1461%" height="15" fill="rgb(248,109,41)" fg:x="28485" fg:w="151"/><text x="27.8058%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (151 samples, 0.15%)</title><rect x="27.5558%" y="661" width="0.1461%" height="15" fill="rgb(238,23,50)" fg:x="28485" fg:w="151"/><text x="27.8058%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.15%)</title><rect x="27.5558%" y="645" width="0.1461%" height="15" fill="rgb(211,48,49)" fg:x="28485" fg:w="151"/><text x="27.8058%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="27.6874%" y="629" width="0.0145%" height="15" fill="rgb(223,36,21)" fg:x="28621" fg:w="15"/><text x="27.9374%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (16 samples, 0.02%)</title><rect x="27.7019%" y="725" width="0.0155%" height="15" fill="rgb(207,123,46)" fg:x="28636" fg:w="16"/><text x="27.9519%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="27.7019%" y="709" width="0.0155%" height="15" fill="rgb(240,218,32)" fg:x="28636" fg:w="16"/><text x="27.9519%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="27.7038%" y="693" width="0.0135%" height="15" fill="rgb(252,5,43)" fg:x="28638" fg:w="14"/><text x="27.9538%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (448 samples, 0.43%)</title><rect x="27.2850%" y="757" width="0.4334%" height="15" fill="rgb(252,84,19)" fg:x="28205" fg:w="448"/><text x="27.5350%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (182 samples, 0.18%)</title><rect x="27.5423%" y="741" width="0.1761%" height="15" fill="rgb(243,152,39)" fg:x="28471" fg:w="182"/><text x="27.7923%" y="751.50"></text></g><g><title>aligned_size (16 samples, 0.02%)</title><rect x="27.7183%" y="741" width="0.0155%" height="15" fill="rgb(234,160,15)" fg:x="28653" fg:w="16"/><text x="27.9683%" y="751.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="27.7348%" y="661" width="0.0106%" height="15" fill="rgb(237,34,20)" fg:x="28670" fg:w="11"/><text x="27.9848%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (23 samples, 0.02%)</title><rect x="27.7773%" y="613" width="0.0222%" height="15" fill="rgb(229,97,13)" fg:x="28714" fg:w="23"/><text x="28.0273%" y="623.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="27.7861%" y="597" width="0.0135%" height="15" fill="rgb(234,71,50)" fg:x="28723" fg:w="14"/><text x="28.0361%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (62 samples, 0.06%)</title><rect x="27.7464%" y="661" width="0.0600%" height="15" fill="rgb(253,155,4)" fg:x="28682" fg:w="62"/><text x="27.9964%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (62 samples, 0.06%)</title><rect x="27.7464%" y="645" width="0.0600%" height="15" fill="rgb(222,185,37)" fg:x="28682" fg:w="62"/><text x="27.9964%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (60 samples, 0.06%)</title><rect x="27.7483%" y="629" width="0.0580%" height="15" fill="rgb(251,177,13)" fg:x="28684" fg:w="60"/><text x="27.9983%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (76 samples, 0.07%)</title><rect x="27.7348%" y="693" width="0.0735%" height="15" fill="rgb(250,179,40)" fg:x="28670" fg:w="76"/><text x="27.9848%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (76 samples, 0.07%)</title><rect x="27.7348%" y="677" width="0.0735%" height="15" fill="rgb(242,44,2)" fg:x="28670" fg:w="76"/><text x="27.9848%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (83 samples, 0.08%)</title><rect x="27.7348%" y="725" width="0.0803%" height="15" fill="rgb(216,177,13)" fg:x="28670" fg:w="83"/><text x="27.9848%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (83 samples, 0.08%)</title><rect x="27.7348%" y="709" width="0.0803%" height="15" fill="rgb(216,106,43)" fg:x="28670" fg:w="83"/><text x="27.9848%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (96 samples, 0.09%)</title><rect x="27.7338%" y="741" width="0.0929%" height="15" fill="rgb(216,183,2)" fg:x="28669" fg:w="96"/><text x="27.9838%" y="751.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="27.8151%" y="725" width="0.0116%" height="15" fill="rgb(249,75,3)" fg:x="28753" fg:w="12"/><text x="28.0651%" y="735.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (12 samples, 0.01%)</title><rect x="27.8151%" y="709" width="0.0116%" height="15" fill="rgb(219,67,39)" fg:x="28753" fg:w="12"/><text x="28.0651%" y="719.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (12 samples, 0.01%)</title><rect x="27.8151%" y="693" width="0.0116%" height="15" fill="rgb(253,228,2)" fg:x="28753" fg:w="12"/><text x="28.0651%" y="703.50"></text></g><g><title>snmalloc::bits::align_down (12 samples, 0.01%)</title><rect x="27.8151%" y="677" width="0.0116%" height="15" fill="rgb(235,138,27)" fg:x="28753" fg:w="12"/><text x="28.0651%" y="687.50"></text></g><g><title>rust_dealloc (129 samples, 0.12%)</title><rect x="27.7183%" y="757" width="0.1248%" height="15" fill="rgb(236,97,51)" fg:x="28653" fg:w="129"/><text x="27.9683%" y="767.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="27.8267%" y="741" width="0.0164%" height="15" fill="rgb(240,80,30)" fg:x="28765" fg:w="17"/><text x="28.0767%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (42 samples, 0.04%)</title><rect x="27.8509%" y="757" width="0.0406%" height="15" fill="rgb(230,178,19)" fg:x="28790" fg:w="42"/><text x="28.1009%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,216 samples, 10.85%)</title><rect x="17.0549%" y="805" width="10.8501%" height="15" fill="rgb(210,190,27)" fg:x="17630" fg:w="11216"/><text x="17.3049%" y="815.50">&lt;core::future::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (11,216 samples, 10.85%)</title><rect x="17.0549%" y="789" width="10.8501%" height="15" fill="rgb(222,107,31)" fg:x="17630" fg:w="11216"/><text x="17.3049%" y="799.50">tremor_runtime::..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,190 samples, 4.05%)</title><rect x="23.8517%" y="773" width="4.0533%" height="15" fill="rgb(216,127,34)" fg:x="24656" fg:w="4190"/><text x="24.1017%" y="783.50">trem..</text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (12 samples, 0.01%)</title><rect x="27.9089%" y="421" width="0.0116%" height="15" fill="rgb(234,116,52)" fg:x="28850" fg:w="12"/><text x="28.1589%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (18 samples, 0.02%)</title><rect x="27.9050%" y="437" width="0.0174%" height="15" fill="rgb(222,124,15)" fg:x="28846" fg:w="18"/><text x="28.1550%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (94 samples, 0.09%)</title><rect x="27.9050%" y="469" width="0.0909%" height="15" fill="rgb(231,179,28)" fg:x="28846" fg:w="94"/><text x="28.1550%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (94 samples, 0.09%)</title><rect x="27.9050%" y="453" width="0.0909%" height="15" fill="rgb(226,93,45)" fg:x="28846" fg:w="94"/><text x="28.1550%" y="463.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (76 samples, 0.07%)</title><rect x="27.9225%" y="437" width="0.0735%" height="15" fill="rgb(215,8,51)" fg:x="28864" fg:w="76"/><text x="28.1725%" y="447.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (62 samples, 0.06%)</title><rect x="27.9360%" y="421" width="0.0600%" height="15" fill="rgb(223,106,5)" fg:x="28878" fg:w="62"/><text x="28.1860%" y="431.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="27.9360%" y="405" width="0.0600%" height="15" fill="rgb(250,191,5)" fg:x="28878" fg:w="62"/><text x="28.1860%" y="415.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (62 samples, 0.06%)</title><rect x="27.9360%" y="389" width="0.0600%" height="15" fill="rgb(242,132,44)" fg:x="28878" fg:w="62"/><text x="28.1860%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="27.9050%" y="741" width="0.0929%" height="15" fill="rgb(251,152,29)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="27.9050%" y="725" width="0.0929%" height="15" fill="rgb(218,179,5)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96 samples, 0.09%)</title><rect x="27.9050%" y="709" width="0.0929%" height="15" fill="rgb(227,67,19)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (96 samples, 0.09%)</title><rect x="27.9050%" y="693" width="0.0929%" height="15" fill="rgb(233,119,31)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96 samples, 0.09%)</title><rect x="27.9050%" y="677" width="0.0929%" height="15" fill="rgb(241,120,22)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (96 samples, 0.09%)</title><rect x="27.9050%" y="661" width="0.0929%" height="15" fill="rgb(224,102,30)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (96 samples, 0.09%)</title><rect x="27.9050%" y="645" width="0.0929%" height="15" fill="rgb(210,164,37)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (96 samples, 0.09%)</title><rect x="27.9050%" y="629" width="0.0929%" height="15" fill="rgb(226,191,16)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.09%)</title><rect x="27.9050%" y="613" width="0.0929%" height="15" fill="rgb(214,40,45)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.09%)</title><rect x="27.9050%" y="597" width="0.0929%" height="15" fill="rgb(244,29,26)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="607.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.09%)</title><rect x="27.9050%" y="581" width="0.0929%" height="15" fill="rgb(216,16,5)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="591.50"></text></g><g><title>__rg_alloc (96 samples, 0.09%)</title><rect x="27.9050%" y="565" width="0.0929%" height="15" fill="rgb(249,76,35)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (96 samples, 0.09%)</title><rect x="27.9050%" y="549" width="0.0929%" height="15" fill="rgb(207,11,44)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="559.50"></text></g><g><title>rust_alloc (96 samples, 0.09%)</title><rect x="27.9050%" y="533" width="0.0929%" height="15" fill="rgb(228,190,49)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="27.9050%" y="517" width="0.0929%" height="15" fill="rgb(214,173,12)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="27.9050%" y="501" width="0.0929%" height="15" fill="rgb(218,26,35)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (96 samples, 0.09%)</title><rect x="27.9050%" y="485" width="0.0929%" height="15" fill="rgb(220,200,19)" fg:x="28846" fg:w="96"/><text x="28.1550%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="28.1072%" y="341" width="0.0106%" height="15" fill="rgb(239,95,49)" fg:x="29055" fg:w="11"/><text x="28.3572%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="28.1072%" y="325" width="0.0106%" height="15" fill="rgb(235,85,53)" fg:x="29055" fg:w="11"/><text x="28.3572%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (15 samples, 0.01%)</title><rect x="28.1072%" y="357" width="0.0145%" height="15" fill="rgb(233,133,31)" fg:x="29055" fg:w="15"/><text x="28.3572%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (26 samples, 0.03%)</title><rect x="28.1014%" y="373" width="0.0252%" height="15" fill="rgb(218,25,20)" fg:x="29049" fg:w="26"/><text x="28.3514%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (17 samples, 0.02%)</title><rect x="28.1324%" y="357" width="0.0164%" height="15" fill="rgb(252,210,38)" fg:x="29081" fg:w="17"/><text x="28.3824%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (143 samples, 0.14%)</title><rect x="28.1014%" y="405" width="0.1383%" height="15" fill="rgb(242,134,21)" fg:x="29049" fg:w="143"/><text x="28.3514%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (143 samples, 0.14%)</title><rect x="28.1014%" y="389" width="0.1383%" height="15" fill="rgb(213,28,48)" fg:x="29049" fg:w="143"/><text x="28.3514%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (117 samples, 0.11%)</title><rect x="28.1266%" y="373" width="0.1132%" height="15" fill="rgb(250,196,2)" fg:x="29075" fg:w="117"/><text x="28.3766%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (94 samples, 0.09%)</title><rect x="28.1488%" y="357" width="0.0909%" height="15" fill="rgb(227,5,17)" fg:x="29098" fg:w="94"/><text x="28.3988%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (94 samples, 0.09%)</title><rect x="28.1488%" y="341" width="0.0909%" height="15" fill="rgb(221,226,24)" fg:x="29098" fg:w="94"/><text x="28.3988%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (94 samples, 0.09%)</title><rect x="28.1488%" y="325" width="0.0909%" height="15" fill="rgb(211,5,48)" fg:x="29098" fg:w="94"/><text x="28.3988%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (283 samples, 0.27%)</title><rect x="28.0850%" y="453" width="0.2738%" height="15" fill="rgb(219,150,6)" fg:x="29032" fg:w="283"/><text x="28.3350%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (283 samples, 0.27%)</title><rect x="28.0850%" y="437" width="0.2738%" height="15" fill="rgb(251,46,16)" fg:x="29032" fg:w="283"/><text x="28.3350%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (271 samples, 0.26%)</title><rect x="28.0966%" y="421" width="0.2622%" height="15" fill="rgb(220,204,40)" fg:x="29044" fg:w="271"/><text x="28.3466%" y="431.50"></text></g><g><title>snmalloc::FreeListIter::take (110 samples, 0.11%)</title><rect x="28.2523%" y="405" width="0.1064%" height="15" fill="rgb(211,85,2)" fg:x="29205" fg:w="110"/><text x="28.5023%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (110 samples, 0.11%)</title><rect x="28.2523%" y="389" width="0.1064%" height="15" fill="rgb(229,17,7)" fg:x="29205" fg:w="110"/><text x="28.5023%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (320 samples, 0.31%)</title><rect x="28.0560%" y="597" width="0.3096%" height="15" fill="rgb(239,72,28)" fg:x="29002" fg:w="320"/><text x="28.3060%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (320 samples, 0.31%)</title><rect x="28.0560%" y="581" width="0.3096%" height="15" fill="rgb(230,47,54)" fg:x="29002" fg:w="320"/><text x="28.3060%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (320 samples, 0.31%)</title><rect x="28.0560%" y="565" width="0.3096%" height="15" fill="rgb(214,50,8)" fg:x="29002" fg:w="320"/><text x="28.3060%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (318 samples, 0.31%)</title><rect x="28.0579%" y="549" width="0.3076%" height="15" fill="rgb(216,198,43)" fg:x="29004" fg:w="318"/><text x="28.3079%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (318 samples, 0.31%)</title><rect x="28.0579%" y="533" width="0.3076%" height="15" fill="rgb(234,20,35)" fg:x="29004" fg:w="318"/><text x="28.3079%" y="543.50"></text></g><g><title>alloc::alloc::alloc (309 samples, 0.30%)</title><rect x="28.0666%" y="517" width="0.2989%" height="15" fill="rgb(254,45,19)" fg:x="29013" fg:w="309"/><text x="28.3166%" y="527.50"></text></g><g><title>__rg_alloc (309 samples, 0.30%)</title><rect x="28.0666%" y="501" width="0.2989%" height="15" fill="rgb(219,14,44)" fg:x="29013" fg:w="309"/><text x="28.3166%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (309 samples, 0.30%)</title><rect x="28.0666%" y="485" width="0.2989%" height="15" fill="rgb(217,220,26)" fg:x="29013" fg:w="309"/><text x="28.3166%" y="495.50"></text></g><g><title>rust_alloc (300 samples, 0.29%)</title><rect x="28.0753%" y="469" width="0.2902%" height="15" fill="rgb(213,158,28)" fg:x="29022" fg:w="300"/><text x="28.3253%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (394 samples, 0.38%)</title><rect x="28.0405%" y="677" width="0.3811%" height="15" fill="rgb(252,51,52)" fg:x="28986" fg:w="394"/><text x="28.2905%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (378 samples, 0.37%)</title><rect x="28.0560%" y="661" width="0.3657%" height="15" fill="rgb(246,89,16)" fg:x="29002" fg:w="378"/><text x="28.3060%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (378 samples, 0.37%)</title><rect x="28.0560%" y="645" width="0.3657%" height="15" fill="rgb(216,158,49)" fg:x="29002" fg:w="378"/><text x="28.3060%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (378 samples, 0.37%)</title><rect x="28.0560%" y="629" width="0.3657%" height="15" fill="rgb(236,107,19)" fg:x="29002" fg:w="378"/><text x="28.3060%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (378 samples, 0.37%)</title><rect x="28.0560%" y="613" width="0.3657%" height="15" fill="rgb(228,185,30)" fg:x="29002" fg:w="378"/><text x="28.3060%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (58 samples, 0.06%)</title><rect x="28.3655%" y="597" width="0.0561%" height="15" fill="rgb(246,134,8)" fg:x="29322" fg:w="58"/><text x="28.6155%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.06%)</title><rect x="28.3655%" y="581" width="0.0561%" height="15" fill="rgb(214,143,50)" fg:x="29322" fg:w="58"/><text x="28.6155%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (48 samples, 0.05%)</title><rect x="28.3752%" y="565" width="0.0464%" height="15" fill="rgb(228,75,8)" fg:x="29332" fg:w="48"/><text x="28.6252%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="28.4216%" y="677" width="0.0232%" height="15" fill="rgb(207,175,4)" fg:x="29380" fg:w="24"/><text x="28.6716%" y="687.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="28.4816%" y="533" width="0.0116%" height="15" fill="rgb(205,108,24)" fg:x="29442" fg:w="12"/><text x="28.7316%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (11 samples, 0.01%)</title><rect x="28.5077%" y="437" width="0.0106%" height="15" fill="rgb(244,120,49)" fg:x="29469" fg:w="11"/><text x="28.7577%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="28.5058%" y="453" width="0.0145%" height="15" fill="rgb(223,47,38)" fg:x="29467" fg:w="15"/><text x="28.7558%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="28.5271%" y="437" width="0.0116%" height="15" fill="rgb(229,179,11)" fg:x="29489" fg:w="12"/><text x="28.7771%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.09%)</title><rect x="28.5058%" y="485" width="0.0861%" height="15" fill="rgb(231,122,1)" fg:x="29467" fg:w="89"/><text x="28.7558%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (89 samples, 0.09%)</title><rect x="28.5058%" y="469" width="0.0861%" height="15" fill="rgb(245,119,9)" fg:x="29467" fg:w="89"/><text x="28.7558%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (74 samples, 0.07%)</title><rect x="28.5203%" y="453" width="0.0716%" height="15" fill="rgb(241,163,25)" fg:x="29482" fg:w="74"/><text x="28.7703%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (55 samples, 0.05%)</title><rect x="28.5387%" y="437" width="0.0532%" height="15" fill="rgb(217,214,3)" fg:x="29501" fg:w="55"/><text x="28.7887%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="28.5387%" y="421" width="0.0532%" height="15" fill="rgb(240,86,28)" fg:x="29501" fg:w="55"/><text x="28.7887%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="28.5387%" y="405" width="0.0532%" height="15" fill="rgb(215,47,9)" fg:x="29501" fg:w="55"/><text x="28.7887%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (271 samples, 0.26%)</title><rect x="28.4932%" y="533" width="0.2622%" height="15" fill="rgb(252,25,45)" fg:x="29454" fg:w="271"/><text x="28.7432%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (271 samples, 0.26%)</title><rect x="28.4932%" y="517" width="0.2622%" height="15" fill="rgb(251,164,9)" fg:x="29454" fg:w="271"/><text x="28.7432%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (261 samples, 0.25%)</title><rect x="28.5029%" y="501" width="0.2525%" height="15" fill="rgb(233,194,0)" fg:x="29464" fg:w="261"/><text x="28.7529%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (153 samples, 0.15%)</title><rect x="28.6074%" y="485" width="0.1480%" height="15" fill="rgb(249,111,24)" fg:x="29572" fg:w="153"/><text x="28.8574%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (153 samples, 0.15%)</title><rect x="28.6074%" y="469" width="0.1480%" height="15" fill="rgb(250,223,3)" fg:x="29572" fg:w="153"/><text x="28.8574%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (312 samples, 0.30%)</title><rect x="28.4623%" y="629" width="0.3018%" height="15" fill="rgb(236,178,37)" fg:x="29422" fg:w="312"/><text x="28.7123%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (312 samples, 0.30%)</title><rect x="28.4623%" y="613" width="0.3018%" height="15" fill="rgb(241,158,50)" fg:x="29422" fg:w="312"/><text x="28.7123%" y="623.50"></text></g><g><title>alloc::alloc::alloc (298 samples, 0.29%)</title><rect x="28.4758%" y="597" width="0.2883%" height="15" fill="rgb(213,121,41)" fg:x="29436" fg:w="298"/><text x="28.7258%" y="607.50"></text></g><g><title>__rg_alloc (298 samples, 0.29%)</title><rect x="28.4758%" y="581" width="0.2883%" height="15" fill="rgb(240,92,3)" fg:x="29436" fg:w="298"/><text x="28.7258%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (298 samples, 0.29%)</title><rect x="28.4758%" y="565" width="0.2883%" height="15" fill="rgb(205,123,3)" fg:x="29436" fg:w="298"/><text x="28.7258%" y="575.50"></text></g><g><title>rust_alloc (292 samples, 0.28%)</title><rect x="28.4816%" y="549" width="0.2825%" height="15" fill="rgb(205,97,47)" fg:x="29442" fg:w="292"/><text x="28.7316%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (14 samples, 0.01%)</title><rect x="28.7641%" y="629" width="0.0135%" height="15" fill="rgb(247,152,14)" fg:x="29734" fg:w="14"/><text x="29.0141%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (350 samples, 0.34%)</title><rect x="28.4448%" y="677" width="0.3386%" height="15" fill="rgb(248,195,53)" fg:x="29404" fg:w="350"/><text x="28.6948%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (332 samples, 0.32%)</title><rect x="28.4623%" y="661" width="0.3212%" height="15" fill="rgb(226,201,16)" fg:x="29422" fg:w="332"/><text x="28.7123%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (332 samples, 0.32%)</title><rect x="28.4623%" y="645" width="0.3212%" height="15" fill="rgb(205,98,0)" fg:x="29422" fg:w="332"/><text x="28.7123%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (791 samples, 0.77%)</title><rect x="28.0318%" y="693" width="0.7652%" height="15" fill="rgb(214,191,48)" fg:x="28977" fg:w="791"/><text x="28.2818%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.01%)</title><rect x="28.7834%" y="677" width="0.0135%" height="15" fill="rgb(237,112,39)" fg:x="29754" fg:w="14"/><text x="29.0334%" y="687.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (935 samples, 0.90%)</title><rect x="27.9050%" y="757" width="0.9045%" height="15" fill="rgb(247,203,27)" fg:x="28846" fg:w="935"/><text x="28.1550%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (839 samples, 0.81%)</title><rect x="27.9979%" y="741" width="0.8116%" height="15" fill="rgb(235,124,28)" fg:x="28942" fg:w="839"/><text x="28.2479%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (804 samples, 0.78%)</title><rect x="28.0318%" y="725" width="0.7778%" height="15" fill="rgb(208,207,46)" fg:x="28977" fg:w="804"/><text x="28.2818%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (804 samples, 0.78%)</title><rect x="28.0318%" y="709" width="0.7778%" height="15" fill="rgb(234,176,4)" fg:x="28977" fg:w="804"/><text x="28.2818%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="28.7970%" y="693" width="0.0126%" height="15" fill="rgb(230,133,28)" fg:x="29768" fg:w="13"/><text x="29.0470%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (11 samples, 0.01%)</title><rect x="28.8318%" y="389" width="0.0106%" height="15" fill="rgb(211,137,40)" fg:x="29804" fg:w="11"/><text x="29.0818%" y="399.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (30 samples, 0.03%)</title><rect x="28.8521%" y="373" width="0.0290%" height="15" fill="rgb(254,35,13)" fg:x="29825" fg:w="30"/><text x="29.1021%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (30 samples, 0.03%)</title><rect x="28.8521%" y="357" width="0.0290%" height="15" fill="rgb(225,49,51)" fg:x="29825" fg:w="30"/><text x="29.1021%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (70 samples, 0.07%)</title><rect x="28.8318%" y="421" width="0.0677%" height="15" fill="rgb(251,10,15)" fg:x="29804" fg:w="70"/><text x="29.0818%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (70 samples, 0.07%)</title><rect x="28.8318%" y="405" width="0.0677%" height="15" fill="rgb(228,207,15)" fg:x="29804" fg:w="70"/><text x="29.0818%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (59 samples, 0.06%)</title><rect x="28.8424%" y="389" width="0.0571%" height="15" fill="rgb(241,99,19)" fg:x="29815" fg:w="59"/><text x="29.0924%" y="399.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="28.8811%" y="373" width="0.0184%" height="15" fill="rgb(207,104,49)" fg:x="29855" fg:w="19"/><text x="29.1311%" y="383.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (19 samples, 0.02%)</title><rect x="28.8811%" y="357" width="0.0184%" height="15" fill="rgb(234,99,18)" fg:x="29855" fg:w="19"/><text x="29.1311%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (97 samples, 0.09%)</title><rect x="28.8318%" y="437" width="0.0938%" height="15" fill="rgb(213,191,49)" fg:x="29804" fg:w="97"/><text x="29.0818%" y="447.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)1&gt; (27 samples, 0.03%)</title><rect x="28.8995%" y="421" width="0.0261%" height="15" fill="rgb(210,226,19)" fg:x="29874" fg:w="27"/><text x="29.1495%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)1&gt; (27 samples, 0.03%)</title><rect x="28.8995%" y="405" width="0.0261%" height="15" fill="rgb(229,97,18)" fg:x="29874" fg:w="27"/><text x="29.1495%" y="415.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (27 samples, 0.03%)</title><rect x="28.8995%" y="389" width="0.0261%" height="15" fill="rgb(211,167,15)" fg:x="29874" fg:w="27"/><text x="29.1495%" y="399.50"></text></g><g><title>snmalloc::bits::align_down (27 samples, 0.03%)</title><rect x="28.8995%" y="373" width="0.0261%" height="15" fill="rgb(210,169,34)" fg:x="29874" fg:w="27"/><text x="29.1495%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (147 samples, 0.14%)</title><rect x="28.8095%" y="453" width="0.1422%" height="15" fill="rgb(241,121,31)" fg:x="29781" fg:w="147"/><text x="29.0595%" y="463.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (19 samples, 0.02%)</title><rect x="28.9334%" y="437" width="0.0184%" height="15" fill="rgb(232,40,11)" fg:x="29909" fg:w="19"/><text x="29.1834%" y="447.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (19 samples, 0.02%)</title><rect x="28.9334%" y="421" width="0.0184%" height="15" fill="rgb(205,86,26)" fg:x="29909" fg:w="19"/><text x="29.1834%" y="431.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (19 samples, 0.02%)</title><rect x="28.9334%" y="405" width="0.0184%" height="15" fill="rgb(231,126,28)" fg:x="29909" fg:w="19"/><text x="29.1834%" y="415.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="28.9334%" y="389" width="0.0184%" height="15" fill="rgb(219,221,18)" fg:x="29909" fg:w="19"/><text x="29.1834%" y="399.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (97 samples, 0.09%)</title><rect x="29.0098%" y="437" width="0.0938%" height="15" fill="rgb(211,40,0)" fg:x="29988" fg:w="97"/><text x="29.2598%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (875 samples, 0.85%)</title><rect x="28.8095%" y="485" width="0.8465%" height="15" fill="rgb(239,85,43)" fg:x="29781" fg:w="875"/><text x="29.0595%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (875 samples, 0.85%)</title><rect x="28.8095%" y="469" width="0.8465%" height="15" fill="rgb(231,55,21)" fg:x="29781" fg:w="875"/><text x="29.0595%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (728 samples, 0.70%)</title><rect x="28.9517%" y="453" width="0.7043%" height="15" fill="rgb(225,184,43)" fg:x="29928" fg:w="728"/><text x="29.2017%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (571 samples, 0.55%)</title><rect x="29.1036%" y="437" width="0.5524%" height="15" fill="rgb(251,158,41)" fg:x="30085" fg:w="571"/><text x="29.3536%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (571 samples, 0.55%)</title><rect x="29.1036%" y="421" width="0.5524%" height="15" fill="rgb(234,159,37)" fg:x="30085" fg:w="571"/><text x="29.3536%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (571 samples, 0.55%)</title><rect x="29.1036%" y="405" width="0.5524%" height="15" fill="rgb(216,204,22)" fg:x="30085" fg:w="571"/><text x="29.3536%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc_slab (21 samples, 0.02%)</title><rect x="29.6560%" y="437" width="0.0203%" height="15" fill="rgb(214,17,3)" fg:x="30656" fg:w="21"/><text x="29.9060%" y="447.50"></text></g><g><title>snmalloc::Superslab::alloc_short_slab (20 samples, 0.02%)</title><rect x="29.6570%" y="421" width="0.0193%" height="15" fill="rgb(212,111,17)" fg:x="30657" fg:w="20"/><text x="29.9070%" y="431.50"></text></g><g><title>snmalloc::Superslab::alloc_slab (17 samples, 0.02%)</title><rect x="29.6599%" y="405" width="0.0164%" height="15" fill="rgb(221,157,24)" fg:x="30660" fg:w="17"/><text x="29.9099%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (14 samples, 0.01%)</title><rect x="29.6899%" y="405" width="0.0135%" height="15" fill="rgb(252,16,13)" fg:x="30691" fg:w="14"/><text x="29.9399%" y="415.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (14 samples, 0.01%)</title><rect x="29.6899%" y="389" width="0.0135%" height="15" fill="rgb(221,62,2)" fg:x="30691" fg:w="14"/><text x="29.9399%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (44 samples, 0.04%)</title><rect x="29.6763%" y="437" width="0.0426%" height="15" fill="rgb(247,87,22)" fg:x="30677" fg:w="44"/><text x="29.9263%" y="447.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (39 samples, 0.04%)</title><rect x="29.6812%" y="421" width="0.0377%" height="15" fill="rgb(215,73,9)" fg:x="30682" fg:w="39"/><text x="29.9312%" y="431.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::close (16 samples, 0.02%)</title><rect x="29.7034%" y="405" width="0.0155%" height="15" fill="rgb(207,175,33)" fg:x="30705" fg:w="16"/><text x="29.9534%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::terminate (16 samples, 0.02%)</title><rect x="29.7034%" y="389" width="0.0155%" height="15" fill="rgb(243,129,54)" fg:x="30705" fg:w="16"/><text x="29.9534%" y="399.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::read (16 samples, 0.02%)</title><rect x="29.7034%" y="373" width="0.0155%" height="15" fill="rgb(227,119,45)" fg:x="30705" fg:w="16"/><text x="29.9534%" y="383.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (13,092 samples, 12.66%)</title><rect x="17.0549%" y="821" width="12.6649%" height="15" fill="rgb(205,109,36)" fg:x="17630" fg:w="13092"/><text x="17.3049%" y="831.50">tremor_runtime::con..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,876 samples, 1.81%)</title><rect x="27.9050%" y="805" width="1.8148%" height="15" fill="rgb(205,6,39)" fg:x="28846" fg:w="1876"/><text x="28.1550%" y="815.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,876 samples, 1.81%)</title><rect x="27.9050%" y="789" width="1.8148%" height="15" fill="rgb(221,32,16)" fg:x="28846" fg:w="1876"/><text x="28.1550%" y="799.50">&lt;..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (1,876 samples, 1.81%)</title><rect x="27.9050%" y="773" width="1.8148%" height="15" fill="rgb(228,144,50)" fg:x="28846" fg:w="1876"/><text x="28.1550%" y="783.50">&lt;..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (941 samples, 0.91%)</title><rect x="28.8095%" y="757" width="0.9103%" height="15" fill="rgb(229,201,53)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (941 samples, 0.91%)</title><rect x="28.8095%" y="741" width="0.9103%" height="15" fill="rgb(249,153,27)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (941 samples, 0.91%)</title><rect x="28.8095%" y="725" width="0.9103%" height="15" fill="rgb(227,106,25)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (941 samples, 0.91%)</title><rect x="28.8095%" y="709" width="0.9103%" height="15" fill="rgb(230,65,29)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (941 samples, 0.91%)</title><rect x="28.8095%" y="693" width="0.9103%" height="15" fill="rgb(221,57,46)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (941 samples, 0.91%)</title><rect x="28.8095%" y="677" width="0.9103%" height="15" fill="rgb(229,161,17)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (941 samples, 0.91%)</title><rect x="28.8095%" y="661" width="0.9103%" height="15" fill="rgb(222,213,11)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (941 samples, 0.91%)</title><rect x="28.8095%" y="645" width="0.9103%" height="15" fill="rgb(235,35,13)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (941 samples, 0.91%)</title><rect x="28.8095%" y="629" width="0.9103%" height="15" fill="rgb(233,158,34)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (941 samples, 0.91%)</title><rect x="28.8095%" y="613" width="0.9103%" height="15" fill="rgb(215,151,48)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="623.50"></text></g><g><title>alloc::alloc::alloc (941 samples, 0.91%)</title><rect x="28.8095%" y="597" width="0.9103%" height="15" fill="rgb(229,84,14)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="607.50"></text></g><g><title>__rg_alloc (941 samples, 0.91%)</title><rect x="28.8095%" y="581" width="0.9103%" height="15" fill="rgb(229,68,14)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (941 samples, 0.91%)</title><rect x="28.8095%" y="565" width="0.9103%" height="15" fill="rgb(243,106,26)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="575.50"></text></g><g><title>rust_alloc (941 samples, 0.91%)</title><rect x="28.8095%" y="549" width="0.9103%" height="15" fill="rgb(206,45,38)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (941 samples, 0.91%)</title><rect x="28.8095%" y="533" width="0.9103%" height="15" fill="rgb(226,6,15)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (941 samples, 0.91%)</title><rect x="28.8095%" y="517" width="0.9103%" height="15" fill="rgb(232,22,54)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (941 samples, 0.91%)</title><rect x="28.8095%" y="501" width="0.9103%" height="15" fill="rgb(229,222,32)" fg:x="29781" fg:w="941"/><text x="29.0595%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (66 samples, 0.06%)</title><rect x="29.6560%" y="485" width="0.0638%" height="15" fill="rgb(228,62,29)" fg:x="30656" fg:w="66"/><text x="29.9060%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (66 samples, 0.06%)</title><rect x="29.6560%" y="469" width="0.0638%" height="15" fill="rgb(251,103,34)" fg:x="30656" fg:w="66"/><text x="29.9060%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (66 samples, 0.06%)</title><rect x="29.6560%" y="453" width="0.0638%" height="15" fill="rgb(233,12,30)" fg:x="30656" fg:w="66"/><text x="29.9060%" y="463.50"></text></g><g><title>rust_dealloc (24 samples, 0.02%)</title><rect x="29.8562%" y="773" width="0.0232%" height="15" fill="rgb(238,52,0)" fg:x="30863" fg:w="24"/><text x="30.1062%" y="783.50"></text></g><g><title>rust_dealloc (36 samples, 0.03%)</title><rect x="29.8959%" y="709" width="0.0348%" height="15" fill="rgb(223,98,5)" fg:x="30904" fg:w="36"/><text x="30.1459%" y="719.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (41 samples, 0.04%)</title><rect x="30.0304%" y="677" width="0.0397%" height="15" fill="rgb(228,75,37)" fg:x="31043" fg:w="41"/><text x="30.2804%" y="687.50"></text></g><g><title> (41 samples, 0.04%)</title><rect x="30.0304%" y="661" width="0.0397%" height="15" fill="rgb(205,115,49)" fg:x="31043" fg:w="41"/><text x="30.2804%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (155 samples, 0.15%)</title><rect x="29.9385%" y="709" width="0.1499%" height="15" fill="rgb(250,154,43)" fg:x="30948" fg:w="155"/><text x="30.1885%" y="719.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (128 samples, 0.12%)</title><rect x="29.9646%" y="693" width="0.1238%" height="15" fill="rgb(226,43,29)" fg:x="30975" fg:w="128"/><text x="30.2146%" y="703.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="30.0768%" y="677" width="0.0116%" height="15" fill="rgb(249,228,39)" fg:x="31091" fg:w="12"/><text x="30.3268%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (255 samples, 0.25%)</title><rect x="29.8862%" y="741" width="0.2467%" height="15" fill="rgb(216,79,43)" fg:x="30894" fg:w="255"/><text x="30.1362%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (255 samples, 0.25%)</title><rect x="29.8862%" y="725" width="0.2467%" height="15" fill="rgb(228,95,12)" fg:x="30894" fg:w="255"/><text x="30.1362%" y="735.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (45 samples, 0.04%)</title><rect x="30.0894%" y="709" width="0.0435%" height="15" fill="rgb(249,221,15)" fg:x="31104" fg:w="45"/><text x="30.3394%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (258 samples, 0.25%)</title><rect x="29.8862%" y="773" width="0.2496%" height="15" fill="rgb(233,34,13)" fg:x="30894" fg:w="258"/><text x="30.1362%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (258 samples, 0.25%)</title><rect x="29.8862%" y="757" width="0.2496%" height="15" fill="rgb(214,103,39)" fg:x="30894" fg:w="258"/><text x="30.1362%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (295 samples, 0.29%)</title><rect x="29.8562%" y="789" width="0.2854%" height="15" fill="rgb(251,126,39)" fg:x="30863" fg:w="295"/><text x="30.1062%" y="799.50"></text></g><g><title>rust_dealloc (328 samples, 0.32%)</title><rect x="29.8408%" y="805" width="0.3173%" height="15" fill="rgb(214,216,36)" fg:x="30847" fg:w="328"/><text x="30.0908%" y="815.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (17 samples, 0.02%)</title><rect x="30.1416%" y="789" width="0.0164%" height="15" fill="rgb(220,221,8)" fg:x="31158" fg:w="17"/><text x="30.3916%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue (28 samples, 0.03%)</title><rect x="30.1581%" y="789" width="0.0271%" height="15" fill="rgb(240,216,3)" fg:x="31175" fg:w="28"/><text x="30.4081%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (28 samples, 0.03%)</title><rect x="30.1581%" y="773" width="0.0271%" height="15" fill="rgb(232,218,17)" fg:x="31175" fg:w="28"/><text x="30.4081%" y="783.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (21 samples, 0.02%)</title><rect x="30.1648%" y="757" width="0.0203%" height="15" fill="rgb(229,163,45)" fg:x="31182" fg:w="21"/><text x="30.4148%" y="767.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (18 samples, 0.02%)</title><rect x="30.1677%" y="741" width="0.0174%" height="15" fill="rgb(231,110,42)" fg:x="31185" fg:w="18"/><text x="30.4177%" y="751.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="30.1677%" y="725" width="0.0174%" height="15" fill="rgb(208,170,48)" fg:x="31185" fg:w="18"/><text x="30.4177%" y="735.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (18 samples, 0.02%)</title><rect x="30.1677%" y="709" width="0.0174%" height="15" fill="rgb(239,116,25)" fg:x="31185" fg:w="18"/><text x="30.4177%" y="719.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (486 samples, 0.47%)</title><rect x="29.7198%" y="821" width="0.4701%" height="15" fill="rgb(219,200,50)" fg:x="30722" fg:w="486"/><text x="29.9698%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc_and_post (33 samples, 0.03%)</title><rect x="30.1581%" y="805" width="0.0319%" height="15" fill="rgb(245,200,0)" fg:x="31175" fg:w="33"/><text x="30.4081%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="30.9629%" y="805" width="0.0290%" height="15" fill="rgb(245,119,33)" fg:x="32007" fg:w="30"/><text x="31.2129%" y="815.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.01%)</title><rect x="30.9813%" y="789" width="0.0106%" height="15" fill="rgb(231,125,12)" fg:x="32026" fg:w="11"/><text x="31.2313%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="31.1583%" y="789" width="0.0193%" height="15" fill="rgb(216,96,41)" fg:x="32209" fg:w="20"/><text x="31.4083%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (579 samples, 0.56%)</title><rect x="31.4863%" y="773" width="0.5601%" height="15" fill="rgb(248,43,45)" fg:x="32548" fg:w="579"/><text x="31.7363%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (496 samples, 0.48%)</title><rect x="32.0464%" y="773" width="0.4798%" height="15" fill="rgb(217,222,7)" fg:x="33127" fg:w="496"/><text x="32.2964%" y="783.50"></text></g><g><title>core::ptr::write (467 samples, 0.45%)</title><rect x="32.0744%" y="757" width="0.4518%" height="15" fill="rgb(233,28,6)" fg:x="33156" fg:w="467"/><text x="32.3244%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (467 samples, 0.45%)</title><rect x="32.0744%" y="741" width="0.4518%" height="15" fill="rgb(231,218,15)" fg:x="33156" fg:w="467"/><text x="32.3244%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (49 samples, 0.05%)</title><rect x="32.5262%" y="773" width="0.0474%" height="15" fill="rgb(226,171,48)" fg:x="33623" fg:w="49"/><text x="32.7762%" y="783.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (11 samples, 0.01%)</title><rect x="32.6036%" y="741" width="0.0106%" height="15" fill="rgb(235,201,9)" fg:x="33703" fg:w="11"/><text x="32.8536%" y="751.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (11 samples, 0.01%)</title><rect x="32.6036%" y="725" width="0.0106%" height="15" fill="rgb(217,80,15)" fg:x="33703" fg:w="11"/><text x="32.8536%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,056 samples, 1.02%)</title><rect x="32.6152%" y="677" width="1.0216%" height="15" fill="rgb(219,152,8)" fg:x="33715" fg:w="1056"/><text x="32.8652%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (969 samples, 0.94%)</title><rect x="32.6994%" y="661" width="0.9374%" height="15" fill="rgb(243,107,38)" fg:x="33802" fg:w="969"/><text x="32.9494%" y="671.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (1,078 samples, 1.04%)</title><rect x="32.5949%" y="757" width="1.0428%" height="15" fill="rgb(231,17,5)" fg:x="33694" fg:w="1078"/><text x="32.8449%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,057 samples, 1.02%)</title><rect x="32.6152%" y="741" width="1.0225%" height="15" fill="rgb(209,25,54)" fg:x="33715" fg:w="1057"/><text x="32.8652%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,057 samples, 1.02%)</title><rect x="32.6152%" y="725" width="1.0225%" height="15" fill="rgb(219,0,2)" fg:x="33715" fg:w="1057"/><text x="32.8652%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,057 samples, 1.02%)</title><rect x="32.6152%" y="709" width="1.0225%" height="15" fill="rgb(246,9,5)" fg:x="33715" fg:w="1057"/><text x="32.8652%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,057 samples, 1.02%)</title><rect x="32.6152%" y="693" width="1.0225%" height="15" fill="rgb(226,159,4)" fg:x="33715" fg:w="1057"/><text x="32.8652%" y="703.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,116 samples, 1.08%)</title><rect x="32.5736%" y="773" width="1.0796%" height="15" fill="rgb(219,175,34)" fg:x="33672" fg:w="1116"/><text x="32.8236%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (16 samples, 0.02%)</title><rect x="33.6377%" y="757" width="0.0155%" height="15" fill="rgb(236,10,46)" fg:x="34772" fg:w="16"/><text x="33.8877%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="34.4523%" y="741" width="0.0271%" height="15" fill="rgb(240,211,16)" fg:x="35614" fg:w="28"/><text x="34.7023%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (13 samples, 0.01%)</title><rect x="34.4794%" y="741" width="0.0126%" height="15" fill="rgb(205,3,43)" fg:x="35642" fg:w="13"/><text x="34.7294%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (44 samples, 0.04%)</title><rect x="34.4919%" y="741" width="0.0426%" height="15" fill="rgb(245,7,22)" fg:x="35655" fg:w="44"/><text x="34.7419%" y="751.50"></text></g><g><title>core::ptr::read (16 samples, 0.02%)</title><rect x="34.5190%" y="725" width="0.0155%" height="15" fill="rgb(239,132,32)" fg:x="35683" fg:w="16"/><text x="34.7690%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (467 samples, 0.45%)</title><rect x="34.5345%" y="741" width="0.4518%" height="15" fill="rgb(228,202,34)" fg:x="35699" fg:w="467"/><text x="34.7845%" y="751.50"></text></g><g><title>core::ptr::write (460 samples, 0.44%)</title><rect x="34.5413%" y="725" width="0.4450%" height="15" fill="rgb(254,200,22)" fg:x="35706" fg:w="460"/><text x="34.7913%" y="735.50"></text></g><g><title>__memcpy_avx_unaligned_erms (441 samples, 0.43%)</title><rect x="34.5596%" y="709" width="0.4266%" height="15" fill="rgb(219,10,39)" fg:x="35725" fg:w="441"/><text x="34.8096%" y="719.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (1,359 samples, 1.31%)</title><rect x="33.6735%" y="757" width="1.3147%" height="15" fill="rgb(226,210,39)" fg:x="34809" fg:w="1359"/><text x="33.9235%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (1,391 samples, 1.35%)</title><rect x="33.6532%" y="773" width="1.3456%" height="15" fill="rgb(208,219,16)" fg:x="34788" fg:w="1391"/><text x="33.9032%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (11 samples, 0.01%)</title><rect x="34.9882%" y="757" width="0.0106%" height="15" fill="rgb(216,158,51)" fg:x="36168" fg:w="11"/><text x="35.2382%" y="767.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (3,956 samples, 3.83%)</title><rect x="31.1777%" y="789" width="3.8270%" height="15" fill="rgb(233,14,44)" fg:x="32229" fg:w="3956"/><text x="31.4277%" y="799.50">trem..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (86 samples, 0.08%)</title><rect x="35.0046%" y="789" width="0.0832%" height="15" fill="rgb(237,97,39)" fg:x="36185" fg:w="86"/><text x="35.2546%" y="799.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (56 samples, 0.05%)</title><rect x="35.0878%" y="789" width="0.0542%" height="15" fill="rgb(218,198,43)" fg:x="36271" fg:w="56"/><text x="35.3378%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,286 samples, 4.15%)</title><rect x="30.9968%" y="805" width="4.1462%" height="15" fill="rgb(231,104,20)" fg:x="32042" fg:w="4286"/><text x="31.2468%" y="815.50">&lt;core..</text></g><g><title>__memcpy_avx_unaligned_erms (1,761 samples, 1.70%)</title><rect x="35.1430%" y="805" width="1.7036%" height="15" fill="rgb(254,36,13)" fg:x="36328" fg:w="1761"/><text x="35.3930%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="36.8494%" y="789" width="0.0290%" height="15" fill="rgb(248,14,50)" fg:x="38092" fg:w="30"/><text x="37.0994%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (41 samples, 0.04%)</title><rect x="36.8494%" y="805" width="0.0397%" height="15" fill="rgb(217,107,29)" fg:x="38092" fg:w="41"/><text x="37.0994%" y="815.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::_{{closure}} (11 samples, 0.01%)</title><rect x="36.8785%" y="789" width="0.0106%" height="15" fill="rgb(251,169,33)" fg:x="38122" fg:w="11"/><text x="37.1285%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="36.8891%" y="805" width="0.0116%" height="15" fill="rgb(217,108,32)" fg:x="38133" fg:w="12"/><text x="37.1391%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (12 samples, 0.01%)</title><rect x="36.8891%" y="789" width="0.0116%" height="15" fill="rgb(219,66,42)" fg:x="38133" fg:w="12"/><text x="37.1391%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (16 samples, 0.02%)</title><rect x="36.9007%" y="805" width="0.0155%" height="15" fill="rgb(206,180,7)" fg:x="38145" fg:w="16"/><text x="37.1507%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt; (16 samples, 0.02%)</title><rect x="36.9007%" y="789" width="0.0155%" height="15" fill="rgb(208,226,31)" fg:x="38145" fg:w="16"/><text x="37.1507%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1157" width="28.5290%" height="15" fill="rgb(218,26,49)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1167.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1141" width="28.5290%" height="15" fill="rgb(233,197,48)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1151.50">async_global_executor::reactor::block_on::{{cl..</text></g><g><title>async_io::driver::block_on (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1125" width="28.5290%" height="15" fill="rgb(252,181,51)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1135.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1109" width="28.5290%" height="15" fill="rgb(253,90,19)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1119.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1093" width="28.5290%" height="15" fill="rgb(215,171,30)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1103.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::run::{{closure}} (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1077" width="28.5290%" height="15" fill="rgb(214,222,9)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1087.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1061" width="28.5290%" height="15" fill="rgb(223,3,22)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1071.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1045" width="28.5290%" height="15" fill="rgb(225,196,46)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1055.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1029" width="28.5290%" height="15" fill="rgb(209,110,37)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1039.50">async_executor::Executor::run::{{closure}}::{{..</text></g><g><title>async_task::runnable::Runnable::run (29,491 samples, 28.53%)</title><rect x="8.4017%" y="1013" width="28.5290%" height="15" fill="rgb(249,89,12)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1023.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (29,491 samples, 28.53%)</title><rect x="8.4017%" y="997" width="28.5290%" height="15" fill="rgb(226,27,33)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="1007.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (29,491 samples, 28.53%)</title><rect x="8.4017%" y="981" width="28.5290%" height="15" fill="rgb(213,82,22)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="991.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,491 samples, 28.53%)</title><rect x="8.4017%" y="965" width="28.5290%" height="15" fill="rgb(248,140,0)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="975.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (29,491 samples, 28.53%)</title><rect x="8.4017%" y="949" width="28.5290%" height="15" fill="rgb(228,106,3)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="959.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (29,491 samples, 28.53%)</title><rect x="8.4017%" y="933" width="28.5290%" height="15" fill="rgb(209,23,37)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="943.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (29,491 samples, 28.53%)</title><rect x="8.4017%" y="917" width="28.5290%" height="15" fill="rgb(241,93,50)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="927.50">async_std::task::task_locals_wrapper::TaskLoca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29,491 samples, 28.53%)</title><rect x="8.4017%" y="901" width="28.5290%" height="15" fill="rgb(253,46,43)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="911.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29,491 samples, 28.53%)</title><rect x="8.4017%" y="885" width="28.5290%" height="15" fill="rgb(226,206,43)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="895.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (29,491 samples, 28.53%)</title><rect x="8.4017%" y="869" width="28.5290%" height="15" fill="rgb(217,54,7)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="879.50">async_std::task::task_locals_wrapper::TaskLoca..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (29,491 samples, 28.53%)</title><rect x="8.4017%" y="853" width="28.5290%" height="15" fill="rgb(223,5,52)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="863.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,491 samples, 28.53%)</title><rect x="8.4017%" y="837" width="28.5290%" height="15" fill="rgb(206,52,46)" fg:x="8685" fg:w="29491"/><text x="8.6517%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,968 samples, 6.74%)</title><rect x="30.1900%" y="821" width="6.7407%" height="15" fill="rgb(253,136,11)" fg:x="31208" fg:w="6968"/><text x="30.4400%" y="831.50">tremor_ru..</text></g><g><title>tremor_runtime::pipeline::maybe_send (15 samples, 0.01%)</title><rect x="36.9162%" y="805" width="0.0145%" height="15" fill="rgb(208,106,33)" fg:x="38161" fg:w="15"/><text x="37.1662%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (793 samples, 0.77%)</title><rect x="36.9752%" y="597" width="0.7671%" height="15" fill="rgb(206,54,4)" fg:x="38222" fg:w="793"/><text x="37.2252%" y="607.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (842 samples, 0.81%)</title><rect x="36.9317%" y="693" width="0.8145%" height="15" fill="rgb(213,3,15)" fg:x="38177" fg:w="842"/><text x="37.1817%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (842 samples, 0.81%)</title><rect x="36.9317%" y="677" width="0.8145%" height="15" fill="rgb(252,211,39)" fg:x="38177" fg:w="842"/><text x="37.1817%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (842 samples, 0.81%)</title><rect x="36.9317%" y="661" width="0.8145%" height="15" fill="rgb(223,6,36)" fg:x="38177" fg:w="842"/><text x="37.1817%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (842 samples, 0.81%)</title><rect x="36.9317%" y="645" width="0.8145%" height="15" fill="rgb(252,169,45)" fg:x="38177" fg:w="842"/><text x="37.1817%" y="655.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (832 samples, 0.80%)</title><rect x="36.9413%" y="629" width="0.8049%" height="15" fill="rgb(212,48,26)" fg:x="38187" fg:w="832"/><text x="37.1913%" y="639.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (832 samples, 0.80%)</title><rect x="36.9413%" y="613" width="0.8049%" height="15" fill="rgb(251,102,48)" fg:x="38187" fg:w="832"/><text x="37.1913%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (19 samples, 0.02%)</title><rect x="37.7588%" y="341" width="0.0184%" height="15" fill="rgb(243,208,16)" fg:x="39032" fg:w="19"/><text x="38.0088%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (19 samples, 0.02%)</title><rect x="37.7588%" y="325" width="0.0184%" height="15" fill="rgb(219,96,24)" fg:x="39032" fg:w="19"/><text x="38.0088%" y="335.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (17 samples, 0.02%)</title><rect x="37.7607%" y="309" width="0.0164%" height="15" fill="rgb(219,33,29)" fg:x="39034" fg:w="17"/><text x="38.0107%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (22 samples, 0.02%)</title><rect x="37.7588%" y="357" width="0.0213%" height="15" fill="rgb(223,176,5)" fg:x="39032" fg:w="22"/><text x="38.0088%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (31 samples, 0.03%)</title><rect x="37.7559%" y="373" width="0.0300%" height="15" fill="rgb(228,140,14)" fg:x="39029" fg:w="31"/><text x="38.0059%" y="383.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (14 samples, 0.01%)</title><rect x="37.8033%" y="357" width="0.0135%" height="15" fill="rgb(217,179,31)" fg:x="39078" fg:w="14"/><text x="38.0533%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (170 samples, 0.16%)</title><rect x="37.7559%" y="405" width="0.1645%" height="15" fill="rgb(230,9,30)" fg:x="39029" fg:w="170"/><text x="38.0059%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (170 samples, 0.16%)</title><rect x="37.7559%" y="389" width="0.1645%" height="15" fill="rgb(230,136,20)" fg:x="39029" fg:w="170"/><text x="38.0059%" y="399.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (139 samples, 0.13%)</title><rect x="37.7859%" y="373" width="0.1345%" height="15" fill="rgb(215,210,22)" fg:x="39060" fg:w="139"/><text x="38.0359%" y="383.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (107 samples, 0.10%)</title><rect x="37.8168%" y="357" width="0.1035%" height="15" fill="rgb(218,43,5)" fg:x="39092" fg:w="107"/><text x="38.0668%" y="367.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (107 samples, 0.10%)</title><rect x="37.8168%" y="341" width="0.1035%" height="15" fill="rgb(216,11,5)" fg:x="39092" fg:w="107"/><text x="38.0668%" y="351.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (107 samples, 0.10%)</title><rect x="37.8168%" y="325" width="0.1035%" height="15" fill="rgb(209,82,29)" fg:x="39092" fg:w="107"/><text x="38.0668%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (171 samples, 0.17%)</title><rect x="37.7559%" y="645" width="0.1654%" height="15" fill="rgb(244,115,12)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (171 samples, 0.17%)</title><rect x="37.7559%" y="629" width="0.1654%" height="15" fill="rgb(222,82,18)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="639.50"></text></g><g><title>value_trait::Builder::object (171 samples, 0.17%)</title><rect x="37.7559%" y="613" width="0.1654%" height="15" fill="rgb(249,227,8)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (171 samples, 0.17%)</title><rect x="37.7559%" y="597" width="0.1654%" height="15" fill="rgb(253,141,45)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (171 samples, 0.17%)</title><rect x="37.7559%" y="581" width="0.1654%" height="15" fill="rgb(234,184,4)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (171 samples, 0.17%)</title><rect x="37.7559%" y="565" width="0.1654%" height="15" fill="rgb(218,194,23)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (171 samples, 0.17%)</title><rect x="37.7559%" y="549" width="0.1654%" height="15" fill="rgb(235,66,41)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (171 samples, 0.17%)</title><rect x="37.7559%" y="533" width="0.1654%" height="15" fill="rgb(245,217,1)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="543.50"></text></g><g><title>alloc::alloc::alloc (171 samples, 0.17%)</title><rect x="37.7559%" y="517" width="0.1654%" height="15" fill="rgb(229,91,1)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="527.50"></text></g><g><title>__rg_alloc (171 samples, 0.17%)</title><rect x="37.7559%" y="501" width="0.1654%" height="15" fill="rgb(207,101,30)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (171 samples, 0.17%)</title><rect x="37.7559%" y="485" width="0.1654%" height="15" fill="rgb(223,82,49)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="495.50"></text></g><g><title>rust_alloc (171 samples, 0.17%)</title><rect x="37.7559%" y="469" width="0.1654%" height="15" fill="rgb(218,167,17)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.17%)</title><rect x="37.7559%" y="453" width="0.1654%" height="15" fill="rgb(208,103,14)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.17%)</title><rect x="37.7559%" y="437" width="0.1654%" height="15" fill="rgb(238,20,8)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (171 samples, 0.17%)</title><rect x="37.7559%" y="421" width="0.1654%" height="15" fill="rgb(218,80,54)" fg:x="39029" fg:w="171"/><text x="38.0059%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (11 samples, 0.01%)</title><rect x="37.9213%" y="645" width="0.0106%" height="15" fill="rgb(240,144,17)" fg:x="39200" fg:w="11"/><text x="38.1713%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt; (11 samples, 0.01%)</title><rect x="37.9213%" y="629" width="0.0106%" height="15" fill="rgb(245,27,50)" fg:x="39200" fg:w="11"/><text x="38.1713%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="38.0190%" y="549" width="0.0203%" height="15" fill="rgb(251,51,7)" fg:x="39301" fg:w="21"/><text x="38.2690%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (21 samples, 0.02%)</title><rect x="38.0190%" y="533" width="0.0203%" height="15" fill="rgb(245,217,29)" fg:x="39301" fg:w="21"/><text x="38.2690%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (53 samples, 0.05%)</title><rect x="38.0035%" y="597" width="0.0513%" height="15" fill="rgb(221,176,29)" fg:x="39285" fg:w="53"/><text x="38.2535%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (37 samples, 0.04%)</title><rect x="38.0190%" y="581" width="0.0358%" height="15" fill="rgb(212,180,24)" fg:x="39301" fg:w="37"/><text x="38.2690%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (37 samples, 0.04%)</title><rect x="38.0190%" y="565" width="0.0358%" height="15" fill="rgb(254,24,2)" fg:x="39301" fg:w="37"/><text x="38.2690%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (16 samples, 0.02%)</title><rect x="38.0393%" y="549" width="0.0155%" height="15" fill="rgb(230,100,2)" fg:x="39322" fg:w="16"/><text x="38.2893%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="38.0393%" y="533" width="0.0155%" height="15" fill="rgb(219,142,25)" fg:x="39322" fg:w="16"/><text x="38.2893%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="38.0403%" y="517" width="0.0145%" height="15" fill="rgb(240,73,43)" fg:x="39323" fg:w="15"/><text x="38.2903%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (128 samples, 0.12%)</title><rect x="37.9319%" y="645" width="0.1238%" height="15" fill="rgb(214,114,15)" fg:x="39211" fg:w="128"/><text x="38.1819%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (67 samples, 0.06%)</title><rect x="37.9909%" y="629" width="0.0648%" height="15" fill="rgb(207,130,4)" fg:x="39272" fg:w="67"/><text x="38.2409%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (54 samples, 0.05%)</title><rect x="38.0035%" y="613" width="0.0522%" height="15" fill="rgb(221,25,40)" fg:x="39285" fg:w="54"/><text x="38.2535%" y="623.50"></text></g><g><title>core::time::Duration::as_nanos (13 samples, 0.01%)</title><rect x="38.1012%" y="629" width="0.0126%" height="15" fill="rgb(241,184,7)" fg:x="39386" fg:w="13"/><text x="38.3512%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (66 samples, 0.06%)</title><rect x="38.1825%" y="581" width="0.0638%" height="15" fill="rgb(235,159,4)" fg:x="39470" fg:w="66"/><text x="38.4325%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (66 samples, 0.06%)</title><rect x="38.1825%" y="565" width="0.0638%" height="15" fill="rgb(214,87,48)" fg:x="39470" fg:w="66"/><text x="38.4325%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (66 samples, 0.06%)</title><rect x="38.1825%" y="549" width="0.0638%" height="15" fill="rgb(246,198,24)" fg:x="39470" fg:w="66"/><text x="38.4325%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (66 samples, 0.06%)</title><rect x="38.1825%" y="533" width="0.0638%" height="15" fill="rgb(209,66,40)" fg:x="39470" fg:w="66"/><text x="38.4325%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (66 samples, 0.06%)</title><rect x="38.1825%" y="517" width="0.0638%" height="15" fill="rgb(233,147,39)" fg:x="39470" fg:w="66"/><text x="38.4325%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (32 samples, 0.03%)</title><rect x="38.2154%" y="501" width="0.0310%" height="15" fill="rgb(231,145,52)" fg:x="39504" fg:w="32"/><text x="38.4654%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (163 samples, 0.16%)</title><rect x="38.1138%" y="613" width="0.1577%" height="15" fill="rgb(206,20,26)" fg:x="39399" fg:w="163"/><text x="38.3638%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (163 samples, 0.16%)</title><rect x="38.1138%" y="597" width="0.1577%" height="15" fill="rgb(238,220,4)" fg:x="39399" fg:w="163"/><text x="38.3638%" y="607.50"></text></g><g><title>core::time::Duration::new (26 samples, 0.03%)</title><rect x="38.2463%" y="581" width="0.0252%" height="15" fill="rgb(252,195,42)" fg:x="39536" fg:w="26"/><text x="38.4963%" y="591.50"></text></g><g><title>std::time::SystemTime::duration_since (175 samples, 0.17%)</title><rect x="38.1138%" y="629" width="0.1693%" height="15" fill="rgb(209,10,6)" fg:x="39399" fg:w="175"/><text x="38.3638%" y="639.50"></text></g><g><title>tremor_common::time::nanotime (12 samples, 0.01%)</title><rect x="38.2715%" y="613" width="0.0116%" height="15" fill="rgb(229,3,52)" fg:x="39562" fg:w="12"/><text x="38.5215%" y="623.50"></text></g><g><title>tremor_common::time::nanotime (949 samples, 0.92%)</title><rect x="38.0654%" y="645" width="0.9180%" height="15" fill="rgb(253,49,37)" fg:x="39349" fg:w="949"/><text x="38.3154%" y="655.50"></text></g><g><title>std::time::SystemTime::now (724 samples, 0.70%)</title><rect x="38.2831%" y="629" width="0.7004%" height="15" fill="rgb(240,103,49)" fg:x="39574" fg:w="724"/><text x="38.5331%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (724 samples, 0.70%)</title><rect x="38.2831%" y="613" width="0.7004%" height="15" fill="rgb(250,182,30)" fg:x="39574" fg:w="724"/><text x="38.5331%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (724 samples, 0.70%)</title><rect x="38.2831%" y="597" width="0.7004%" height="15" fill="rgb(248,8,30)" fg:x="39574" fg:w="724"/><text x="38.5331%" y="607.50"></text></g><g><title>__clock_gettime_2 (589 samples, 0.57%)</title><rect x="38.4137%" y="581" width="0.5698%" height="15" fill="rgb(237,120,30)" fg:x="39709" fg:w="589"/><text x="38.6637%" y="591.50"></text></g><g><title>__vdso_clock_gettime (550 samples, 0.53%)</title><rect x="38.4514%" y="565" width="0.5321%" height="15" fill="rgb(221,146,34)" fg:x="39748" fg:w="550"/><text x="38.7014%" y="575.50"></text></g><g><title>[[vdso]] (356 samples, 0.34%)</title><rect x="38.6391%" y="549" width="0.3444%" height="15" fill="rgb(242,55,13)" fg:x="39942" fg:w="356"/><text x="38.8891%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (16 samples, 0.02%)</title><rect x="39.0551%" y="565" width="0.0155%" height="15" fill="rgb(242,112,31)" fg:x="40372" fg:w="16"/><text x="39.3051%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,384 samples, 1.34%)</title><rect x="37.7462%" y="677" width="1.3389%" height="15" fill="rgb(249,192,27)" fg:x="39019" fg:w="1384"/><text x="37.9962%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,384 samples, 1.34%)</title><rect x="37.7462%" y="661" width="1.3389%" height="15" fill="rgb(208,204,44)" fg:x="39019" fg:w="1384"/><text x="37.9962%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (105 samples, 0.10%)</title><rect x="38.9835%" y="645" width="0.1016%" height="15" fill="rgb(208,93,54)" fg:x="40298" fg:w="105"/><text x="39.2335%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (86 samples, 0.08%)</title><rect x="39.0019%" y="629" width="0.0832%" height="15" fill="rgb(242,1,31)" fg:x="40317" fg:w="86"/><text x="39.2519%" y="639.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (64 samples, 0.06%)</title><rect x="39.0231%" y="613" width="0.0619%" height="15" fill="rgb(241,83,25)" fg:x="40339" fg:w="64"/><text x="39.2731%" y="623.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (64 samples, 0.06%)</title><rect x="39.0231%" y="597" width="0.0619%" height="15" fill="rgb(205,169,50)" fg:x="40339" fg:w="64"/><text x="39.2731%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (64 samples, 0.06%)</title><rect x="39.0231%" y="581" width="0.0619%" height="15" fill="rgb(239,186,37)" fg:x="40339" fg:w="64"/><text x="39.2731%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (15 samples, 0.01%)</title><rect x="39.0705%" y="565" width="0.0145%" height="15" fill="rgb(205,221,10)" fg:x="40388" fg:w="15"/><text x="39.3205%" y="575.50"></text></g><g><title>aligned_size (19 samples, 0.02%)</title><rect x="41.0082%" y="389" width="0.0184%" height="15" fill="rgb(218,196,15)" fg:x="42391" fg:w="19"/><text x="41.2582%" y="399.50"></text></g><g><title>rust_alloc (21 samples, 0.02%)</title><rect x="41.0314%" y="357" width="0.0203%" height="15" fill="rgb(218,196,35)" fg:x="42415" fg:w="21"/><text x="41.2814%" y="367.50"></text></g><g><title>size_to_sizeclass (14 samples, 0.01%)</title><rect x="41.0517%" y="357" width="0.0135%" height="15" fill="rgb(233,63,24)" fg:x="42436" fg:w="14"/><text x="41.3017%" y="367.50"></text></g><g><title>rust_alloc (12 samples, 0.01%)</title><rect x="41.0537%" y="341" width="0.0116%" height="15" fill="rgb(225,8,4)" fg:x="42438" fg:w="12"/><text x="41.3037%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (33 samples, 0.03%)</title><rect x="41.0817%" y="341" width="0.0319%" height="15" fill="rgb(234,105,35)" fg:x="42467" fg:w="33"/><text x="41.3317%" y="351.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (33 samples, 0.03%)</title><rect x="41.0817%" y="325" width="0.0319%" height="15" fill="rgb(236,21,32)" fg:x="42467" fg:w="33"/><text x="41.3317%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (693 samples, 0.67%)</title><rect x="41.0314%" y="389" width="0.6704%" height="15" fill="rgb(228,109,6)" fg:x="42415" fg:w="693"/><text x="41.2814%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (693 samples, 0.67%)</title><rect x="41.0314%" y="373" width="0.6704%" height="15" fill="rgb(229,215,31)" fg:x="42415" fg:w="693"/><text x="41.2814%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (658 samples, 0.64%)</title><rect x="41.0653%" y="357" width="0.6365%" height="15" fill="rgb(221,52,54)" fg:x="42450" fg:w="658"/><text x="41.3153%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::take (608 samples, 0.59%)</title><rect x="41.1136%" y="341" width="0.5882%" height="15" fill="rgb(252,129,43)" fg:x="42500" fg:w="608"/><text x="41.3636%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (608 samples, 0.59%)</title><rect x="41.1136%" y="325" width="0.5882%" height="15" fill="rgb(248,183,27)" fg:x="42500" fg:w="608"/><text x="41.3636%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (762 samples, 0.74%)</title><rect x="40.9772%" y="533" width="0.7371%" height="15" fill="rgb(250,0,22)" fg:x="42359" fg:w="762"/><text x="41.2272%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (762 samples, 0.74%)</title><rect x="40.9772%" y="517" width="0.7371%" height="15" fill="rgb(213,166,10)" fg:x="42359" fg:w="762"/><text x="41.2272%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (762 samples, 0.74%)</title><rect x="40.9772%" y="501" width="0.7371%" height="15" fill="rgb(207,163,36)" fg:x="42359" fg:w="762"/><text x="41.2272%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (748 samples, 0.72%)</title><rect x="40.9908%" y="485" width="0.7236%" height="15" fill="rgb(208,122,22)" fg:x="42373" fg:w="748"/><text x="41.2408%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (748 samples, 0.72%)</title><rect x="40.9908%" y="469" width="0.7236%" height="15" fill="rgb(207,104,49)" fg:x="42373" fg:w="748"/><text x="41.2408%" y="479.50"></text></g><g><title>alloc::alloc::alloc (732 samples, 0.71%)</title><rect x="41.0063%" y="453" width="0.7081%" height="15" fill="rgb(248,211,50)" fg:x="42389" fg:w="732"/><text x="41.2563%" y="463.50"></text></g><g><title>__rg_alloc (732 samples, 0.71%)</title><rect x="41.0063%" y="437" width="0.7081%" height="15" fill="rgb(217,13,45)" fg:x="42389" fg:w="732"/><text x="41.2563%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (732 samples, 0.71%)</title><rect x="41.0063%" y="421" width="0.7081%" height="15" fill="rgb(211,216,49)" fg:x="42389" fg:w="732"/><text x="41.2563%" y="431.50"></text></g><g><title>rust_alloc (730 samples, 0.71%)</title><rect x="41.0082%" y="405" width="0.7062%" height="15" fill="rgb(221,58,53)" fg:x="42391" fg:w="730"/><text x="41.2582%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="41.7018%" y="389" width="0.0126%" height="15" fill="rgb(220,112,41)" fg:x="43108" fg:w="13"/><text x="41.9518%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (877 samples, 0.85%)</title><rect x="40.9473%" y="613" width="0.8484%" height="15" fill="rgb(236,38,28)" fg:x="42328" fg:w="877"/><text x="41.1973%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (846 samples, 0.82%)</title><rect x="40.9772%" y="597" width="0.8184%" height="15" fill="rgb(227,195,22)" fg:x="42359" fg:w="846"/><text x="41.2272%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (846 samples, 0.82%)</title><rect x="40.9772%" y="581" width="0.8184%" height="15" fill="rgb(214,55,33)" fg:x="42359" fg:w="846"/><text x="41.2272%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (846 samples, 0.82%)</title><rect x="40.9772%" y="565" width="0.8184%" height="15" fill="rgb(248,80,13)" fg:x="42359" fg:w="846"/><text x="41.2272%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (846 samples, 0.82%)</title><rect x="40.9772%" y="549" width="0.8184%" height="15" fill="rgb(238,52,6)" fg:x="42359" fg:w="846"/><text x="41.2272%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (84 samples, 0.08%)</title><rect x="41.7144%" y="533" width="0.0813%" height="15" fill="rgb(224,198,47)" fg:x="43121" fg:w="84"/><text x="41.9644%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (84 samples, 0.08%)</title><rect x="41.7144%" y="517" width="0.0813%" height="15" fill="rgb(233,171,20)" fg:x="43121" fg:w="84"/><text x="41.9644%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (83 samples, 0.08%)</title><rect x="41.7154%" y="501" width="0.0803%" height="15" fill="rgb(241,30,25)" fg:x="43122" fg:w="83"/><text x="41.9654%" y="511.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,187 samples, 1.15%)</title><rect x="40.6570%" y="629" width="1.1483%" height="15" fill="rgb(207,171,38)" fg:x="42028" fg:w="1187"/><text x="40.9070%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (134 samples, 0.13%)</title><rect x="41.9824%" y="597" width="0.1296%" height="15" fill="rgb(234,70,1)" fg:x="43398" fg:w="134"/><text x="42.2324%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (87 samples, 0.08%)</title><rect x="42.0278%" y="581" width="0.0842%" height="15" fill="rgb(232,178,18)" fg:x="43445" fg:w="87"/><text x="42.2778%" y="591.50"></text></g><g><title>rust_alloc (60 samples, 0.06%)</title><rect x="42.1449%" y="373" width="0.0580%" height="15" fill="rgb(241,78,40)" fg:x="43566" fg:w="60"/><text x="42.3949%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (24 samples, 0.02%)</title><rect x="42.2397%" y="325" width="0.0232%" height="15" fill="rgb(222,35,25)" fg:x="43664" fg:w="24"/><text x="42.4897%" y="335.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (24 samples, 0.02%)</title><rect x="42.2397%" y="309" width="0.0232%" height="15" fill="rgb(207,92,16)" fg:x="43664" fg:w="24"/><text x="42.4897%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.04%)</title><rect x="42.2271%" y="357" width="0.0368%" height="15" fill="rgb(216,59,51)" fg:x="43651" fg:w="38"/><text x="42.4771%" y="367.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (34 samples, 0.03%)</title><rect x="42.2310%" y="341" width="0.0329%" height="15" fill="rgb(213,80,28)" fg:x="43655" fg:w="34"/><text x="42.4810%" y="351.50"></text></g><g><title>snmalloc::FreeListIter::empty (109 samples, 0.11%)</title><rect x="42.2668%" y="357" width="0.1054%" height="15" fill="rgb(220,93,7)" fg:x="43692" fg:w="109"/><text x="42.5168%" y="367.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (109 samples, 0.11%)</title><rect x="42.2668%" y="341" width="0.1054%" height="15" fill="rgb(225,24,44)" fg:x="43692" fg:w="109"/><text x="42.5168%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (501 samples, 0.48%)</title><rect x="42.1449%" y="405" width="0.4847%" height="15" fill="rgb(243,74,40)" fg:x="43566" fg:w="501"/><text x="42.3949%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (501 samples, 0.48%)</title><rect x="42.1449%" y="389" width="0.4847%" height="15" fill="rgb(228,39,7)" fg:x="43566" fg:w="501"/><text x="42.3949%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (436 samples, 0.42%)</title><rect x="42.2078%" y="373" width="0.4218%" height="15" fill="rgb(227,79,8)" fg:x="43631" fg:w="436"/><text x="42.4578%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::take (266 samples, 0.26%)</title><rect x="42.3722%" y="357" width="0.2573%" height="15" fill="rgb(236,58,11)" fg:x="43801" fg:w="266"/><text x="42.6222%" y="367.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (266 samples, 0.26%)</title><rect x="42.3722%" y="341" width="0.2573%" height="15" fill="rgb(249,63,35)" fg:x="43801" fg:w="266"/><text x="42.6222%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (537 samples, 0.52%)</title><rect x="42.1120%" y="549" width="0.5195%" height="15" fill="rgb(252,114,16)" fg:x="43532" fg:w="537"/><text x="42.3620%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (537 samples, 0.52%)</title><rect x="42.1120%" y="533" width="0.5195%" height="15" fill="rgb(254,151,24)" fg:x="43532" fg:w="537"/><text x="42.3620%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (532 samples, 0.51%)</title><rect x="42.1168%" y="517" width="0.5146%" height="15" fill="rgb(253,54,39)" fg:x="43537" fg:w="532"/><text x="42.3668%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (532 samples, 0.51%)</title><rect x="42.1168%" y="501" width="0.5146%" height="15" fill="rgb(243,25,45)" fg:x="43537" fg:w="532"/><text x="42.3668%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (532 samples, 0.51%)</title><rect x="42.1168%" y="485" width="0.5146%" height="15" fill="rgb(234,134,9)" fg:x="43537" fg:w="532"/><text x="42.3668%" y="495.50"></text></g><g><title>alloc::alloc::alloc (521 samples, 0.50%)</title><rect x="42.1275%" y="469" width="0.5040%" height="15" fill="rgb(227,166,31)" fg:x="43548" fg:w="521"/><text x="42.3775%" y="479.50"></text></g><g><title>__rg_alloc (521 samples, 0.50%)</title><rect x="42.1275%" y="453" width="0.5040%" height="15" fill="rgb(245,143,41)" fg:x="43548" fg:w="521"/><text x="42.3775%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (521 samples, 0.50%)</title><rect x="42.1275%" y="437" width="0.5040%" height="15" fill="rgb(238,181,32)" fg:x="43548" fg:w="521"/><text x="42.3775%" y="447.50"></text></g><g><title>rust_alloc (517 samples, 0.50%)</title><rect x="42.1313%" y="421" width="0.5001%" height="15" fill="rgb(224,113,18)" fg:x="43552" fg:w="517"/><text x="42.3813%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,004 samples, 0.97%)</title><rect x="42.1120%" y="565" width="0.9712%" height="15" fill="rgb(240,229,28)" fg:x="43532" fg:w="1004"/><text x="42.3620%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (467 samples, 0.45%)</title><rect x="42.6315%" y="549" width="0.4518%" height="15" fill="rgb(250,185,3)" fg:x="44069" fg:w="467"/><text x="42.8815%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (467 samples, 0.45%)</title><rect x="42.6315%" y="533" width="0.4518%" height="15" fill="rgb(212,59,25)" fg:x="44069" fg:w="467"/><text x="42.8815%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (456 samples, 0.44%)</title><rect x="42.6421%" y="517" width="0.4411%" height="15" fill="rgb(221,87,20)" fg:x="44080" fg:w="456"/><text x="42.8921%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,141 samples, 1.10%)</title><rect x="41.9824%" y="613" width="1.1038%" height="15" fill="rgb(213,74,28)" fg:x="43398" fg:w="1141"/><text x="42.2324%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,007 samples, 0.97%)</title><rect x="42.1120%" y="597" width="0.9742%" height="15" fill="rgb(224,132,34)" fg:x="43532" fg:w="1007"/><text x="42.3620%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1,007 samples, 0.97%)</title><rect x="42.1120%" y="581" width="0.9742%" height="15" fill="rgb(222,101,24)" fg:x="43532" fg:w="1007"/><text x="42.3620%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,147 samples, 4.01%)</title><rect x="39.0851%" y="677" width="4.0117%" height="15" fill="rgb(254,142,4)" fg:x="40403" fg:w="4147"/><text x="39.3351%" y="687.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,147 samples, 4.01%)</title><rect x="39.0851%" y="661" width="4.0117%" height="15" fill="rgb(230,229,49)" fg:x="40403" fg:w="4147"/><text x="39.3351%" y="671.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (3,917 samples, 3.79%)</title><rect x="39.3075%" y="645" width="3.7892%" height="15" fill="rgb(238,70,47)" fg:x="40633" fg:w="3917"/><text x="39.5575%" y="655.50">&lt;tre..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (1,335 samples, 1.29%)</title><rect x="41.8053%" y="629" width="1.2915%" height="15" fill="rgb(231,160,17)" fg:x="43215" fg:w="1335"/><text x="42.0553%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="43.0861%" y="613" width="0.0106%" height="15" fill="rgb(218,68,53)" fg:x="44539" fg:w="11"/><text x="43.3361%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="43.0861%" y="597" width="0.0106%" height="15" fill="rgb(236,111,10)" fg:x="44539" fg:w="11"/><text x="43.3361%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (14 samples, 0.01%)</title><rect x="43.1026%" y="437" width="0.0135%" height="15" fill="rgb(224,34,41)" fg:x="44556" fg:w="14"/><text x="43.3526%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (22 samples, 0.02%)</title><rect x="43.0968%" y="453" width="0.0213%" height="15" fill="rgb(241,118,19)" fg:x="44550" fg:w="22"/><text x="43.3468%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (25 samples, 0.02%)</title><rect x="43.1297%" y="437" width="0.0242%" height="15" fill="rgb(238,129,25)" fg:x="44584" fg:w="25"/><text x="43.3797%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (194 samples, 0.19%)</title><rect x="43.0968%" y="485" width="0.1877%" height="15" fill="rgb(238,22,31)" fg:x="44550" fg:w="194"/><text x="43.3468%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (194 samples, 0.19%)</title><rect x="43.0968%" y="469" width="0.1877%" height="15" fill="rgb(222,174,48)" fg:x="44550" fg:w="194"/><text x="43.3468%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (172 samples, 0.17%)</title><rect x="43.1181%" y="453" width="0.1664%" height="15" fill="rgb(206,152,40)" fg:x="44572" fg:w="172"/><text x="43.3681%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (135 samples, 0.13%)</title><rect x="43.1539%" y="437" width="0.1306%" height="15" fill="rgb(218,99,54)" fg:x="44609" fg:w="135"/><text x="43.4039%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (135 samples, 0.13%)</title><rect x="43.1539%" y="421" width="0.1306%" height="15" fill="rgb(220,174,26)" fg:x="44609" fg:w="135"/><text x="43.4039%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (135 samples, 0.13%)</title><rect x="43.1539%" y="405" width="0.1306%" height="15" fill="rgb(245,116,9)" fg:x="44609" fg:w="135"/><text x="43.4039%" y="415.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (205 samples, 0.20%)</title><rect x="43.0968%" y="677" width="0.1983%" height="15" fill="rgb(209,72,35)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (205 samples, 0.20%)</title><rect x="43.0968%" y="661" width="0.1983%" height="15" fill="rgb(226,126,21)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (205 samples, 0.20%)</title><rect x="43.0968%" y="645" width="0.1983%" height="15" fill="rgb(227,192,1)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (205 samples, 0.20%)</title><rect x="43.0968%" y="629" width="0.1983%" height="15" fill="rgb(237,180,29)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (205 samples, 0.20%)</title><rect x="43.0968%" y="613" width="0.1983%" height="15" fill="rgb(230,197,35)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="623.50"></text></g><g><title>alloc::alloc::alloc (205 samples, 0.20%)</title><rect x="43.0968%" y="597" width="0.1983%" height="15" fill="rgb(246,193,31)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="607.50"></text></g><g><title>__rg_alloc (205 samples, 0.20%)</title><rect x="43.0968%" y="581" width="0.1983%" height="15" fill="rgb(241,36,4)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (205 samples, 0.20%)</title><rect x="43.0968%" y="565" width="0.1983%" height="15" fill="rgb(241,130,17)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="575.50"></text></g><g><title>rust_alloc (205 samples, 0.20%)</title><rect x="43.0968%" y="549" width="0.1983%" height="15" fill="rgb(206,137,32)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.20%)</title><rect x="43.0968%" y="533" width="0.1983%" height="15" fill="rgb(237,228,51)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.20%)</title><rect x="43.0968%" y="517" width="0.1983%" height="15" fill="rgb(243,6,42)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (205 samples, 0.20%)</title><rect x="43.0968%" y="501" width="0.1983%" height="15" fill="rgb(251,74,28)" fg:x="44550" fg:w="205"/><text x="43.3468%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="43.2844%" y="485" width="0.0106%" height="15" fill="rgb(218,20,49)" fg:x="44744" fg:w="11"/><text x="43.5344%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="43.2844%" y="469" width="0.0106%" height="15" fill="rgb(238,28,14)" fg:x="44744" fg:w="11"/><text x="43.5344%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (11 samples, 0.01%)</title><rect x="43.2844%" y="453" width="0.0106%" height="15" fill="rgb(229,40,46)" fg:x="44744" fg:w="11"/><text x="43.5344%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (28 samples, 0.03%)</title><rect x="43.2951%" y="661" width="0.0271%" height="15" fill="rgb(244,195,20)" fg:x="44755" fg:w="28"/><text x="43.5451%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="43.2951%" y="677" width="0.0281%" height="15" fill="rgb(253,56,35)" fg:x="44755" fg:w="29"/><text x="43.5451%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1157" width="6.4050%" height="15" fill="rgb(210,149,44)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1167.50">async_gl..</text></g><g><title>std::panic::catch_unwind (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1141" width="6.4050%" height="15" fill="rgb(240,135,12)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1151.50">std::pan..</text></g><g><title>std::panicking::try (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1125" width="6.4050%" height="15" fill="rgb(251,24,50)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1135.50">std::pan..</text></g><g><title>std::panicking::try::do_call (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1109" width="6.4050%" height="15" fill="rgb(243,200,47)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1119.50">std::pan..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1093" width="6.4050%" height="15" fill="rgb(224,166,26)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1103.50">async_gl..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1077" width="6.4050%" height="15" fill="rgb(233,0,47)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1087.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1061" width="6.4050%" height="15" fill="rgb(253,80,5)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1071.50">std::thr..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1045" width="6.4050%" height="15" fill="rgb(214,133,25)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1055.50">async_gl..</text></g><g><title>async_global_executor::reactor::block_on (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1029" width="6.4050%" height="15" fill="rgb(209,27,14)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1039.50">async_gl..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (6,621 samples, 6.41%)</title><rect x="36.9307%" y="1013" width="6.4050%" height="15" fill="rgb(219,102,51)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1023.50">async_gl..</text></g><g><title>async_io::driver::block_on (6,621 samples, 6.41%)</title><rect x="36.9307%" y="997" width="6.4050%" height="15" fill="rgb(237,18,16)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="1007.50">async_io..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,621 samples, 6.41%)</title><rect x="36.9307%" y="981" width="6.4050%" height="15" fill="rgb(241,85,17)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="991.50">&lt;futures..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,621 samples, 6.41%)</title><rect x="36.9307%" y="965" width="6.4050%" height="15" fill="rgb(236,90,42)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="975.50">&lt;core::f..</text></g><g><title>async_executor::Executor::run::{{closure}} (6,621 samples, 6.41%)</title><rect x="36.9307%" y="949" width="6.4050%" height="15" fill="rgb(249,57,21)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="959.50">async_ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (6,621 samples, 6.41%)</title><rect x="36.9307%" y="933" width="6.4050%" height="15" fill="rgb(243,12,36)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="943.50">&lt;futures..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,621 samples, 6.41%)</title><rect x="36.9307%" y="917" width="6.4050%" height="15" fill="rgb(253,128,47)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="927.50">&lt;core::f..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6,621 samples, 6.41%)</title><rect x="36.9307%" y="901" width="6.4050%" height="15" fill="rgb(207,33,20)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="911.50">async_ex..</text></g><g><title>async_task::runnable::Runnable::run (6,621 samples, 6.41%)</title><rect x="36.9307%" y="885" width="6.4050%" height="15" fill="rgb(233,215,35)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="895.50">async_ta..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6,621 samples, 6.41%)</title><rect x="36.9307%" y="869" width="6.4050%" height="15" fill="rgb(249,188,52)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="879.50">async_ta..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,621 samples, 6.41%)</title><rect x="36.9307%" y="853" width="6.4050%" height="15" fill="rgb(225,12,32)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="863.50">&lt;core::p..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,621 samples, 6.41%)</title><rect x="36.9307%" y="837" width="6.4050%" height="15" fill="rgb(247,98,14)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="847.50">&lt;core::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,621 samples, 6.41%)</title><rect x="36.9307%" y="821" width="6.4050%" height="15" fill="rgb(247,219,48)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="831.50">async_ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,621 samples, 6.41%)</title><rect x="36.9307%" y="805" width="6.4050%" height="15" fill="rgb(253,60,48)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="815.50">&lt;async_s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,621 samples, 6.41%)</title><rect x="36.9307%" y="789" width="6.4050%" height="15" fill="rgb(245,15,52)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="799.50">async_st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,621 samples, 6.41%)</title><rect x="36.9307%" y="773" width="6.4050%" height="15" fill="rgb(220,133,28)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="783.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,621 samples, 6.41%)</title><rect x="36.9307%" y="757" width="6.4050%" height="15" fill="rgb(217,180,4)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="767.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,621 samples, 6.41%)</title><rect x="36.9307%" y="741" width="6.4050%" height="15" fill="rgb(251,24,1)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="751.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,621 samples, 6.41%)</title><rect x="36.9307%" y="725" width="6.4050%" height="15" fill="rgb(212,185,49)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="735.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,621 samples, 6.41%)</title><rect x="36.9307%" y="709" width="6.4050%" height="15" fill="rgb(215,175,22)" fg:x="38176" fg:w="6621"/><text x="37.1807%" y="719.50">&lt;core::f..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,778 samples, 5.59%)</title><rect x="37.7462%" y="693" width="5.5895%" height="15" fill="rgb(250,205,14)" fg:x="39019" fg:w="5778"/><text x="37.9962%" y="703.50">tremor_..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="43.3231%" y="677" width="0.0126%" height="15" fill="rgb(225,211,22)" fg:x="44784" fg:w="13"/><text x="43.5731%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (13 samples, 0.01%)</title><rect x="43.3231%" y="661" width="0.0126%" height="15" fill="rgb(251,179,42)" fg:x="44784" fg:w="13"/><text x="43.5731%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (30 samples, 0.03%)</title><rect x="43.3667%" y="597" width="0.0290%" height="15" fill="rgb(208,216,51)" fg:x="44829" fg:w="30"/><text x="43.6167%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="43.3667%" y="581" width="0.0290%" height="15" fill="rgb(235,36,11)" fg:x="44829" fg:w="30"/><text x="43.6167%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.03%)</title><rect x="43.3676%" y="565" width="0.0281%" height="15" fill="rgb(213,189,28)" fg:x="44830" fg:w="29"/><text x="43.6176%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (29 samples, 0.03%)</title><rect x="43.3676%" y="549" width="0.0281%" height="15" fill="rgb(227,203,42)" fg:x="44830" fg:w="29"/><text x="43.6176%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (29 samples, 0.03%)</title><rect x="43.3676%" y="533" width="0.0281%" height="15" fill="rgb(244,72,36)" fg:x="44830" fg:w="29"/><text x="43.6176%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (19 samples, 0.02%)</title><rect x="43.3957%" y="597" width="0.0184%" height="15" fill="rgb(213,53,17)" fg:x="44859" fg:w="19"/><text x="43.6457%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="43.3957%" y="581" width="0.0184%" height="15" fill="rgb(207,167,3)" fg:x="44859" fg:w="19"/><text x="43.6457%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (17 samples, 0.02%)</title><rect x="43.4412%" y="517" width="0.0164%" height="15" fill="rgb(216,98,30)" fg:x="44906" fg:w="17"/><text x="43.6912%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (17 samples, 0.02%)</title><rect x="43.4412%" y="501" width="0.0164%" height="15" fill="rgb(236,123,15)" fg:x="44906" fg:w="17"/><text x="43.6912%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (29 samples, 0.03%)</title><rect x="43.4576%" y="517" width="0.0281%" height="15" fill="rgb(248,81,50)" fg:x="44923" fg:w="29"/><text x="43.7076%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (29 samples, 0.03%)</title><rect x="43.4576%" y="501" width="0.0281%" height="15" fill="rgb(214,120,4)" fg:x="44923" fg:w="29"/><text x="43.7076%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (29 samples, 0.03%)</title><rect x="43.4576%" y="485" width="0.0281%" height="15" fill="rgb(208,179,34)" fg:x="44923" fg:w="29"/><text x="43.7076%" y="495.50"></text></g><g><title>__GI___pthread_cond_signal (29 samples, 0.03%)</title><rect x="43.4576%" y="469" width="0.0281%" height="15" fill="rgb(227,140,7)" fg:x="44923" fg:w="29"/><text x="43.7076%" y="479.50"></text></g><g><title>parking::Unparker::unpark (81 samples, 0.08%)</title><rect x="43.4228%" y="549" width="0.0784%" height="15" fill="rgb(214,22,6)" fg:x="44887" fg:w="81"/><text x="43.6728%" y="559.50"></text></g><g><title>parking::Inner::unpark (74 samples, 0.07%)</title><rect x="43.4296%" y="533" width="0.0716%" height="15" fill="rgb(207,137,27)" fg:x="44894" fg:w="74"/><text x="43.6796%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.02%)</title><rect x="43.4857%" y="517" width="0.0155%" height="15" fill="rgb(210,8,46)" fg:x="44952" fg:w="16"/><text x="43.7357%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.02%)</title><rect x="43.4857%" y="501" width="0.0155%" height="15" fill="rgb(240,16,54)" fg:x="44952" fg:w="16"/><text x="43.7357%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (16 samples, 0.02%)</title><rect x="43.4857%" y="485" width="0.0155%" height="15" fill="rgb(211,209,29)" fg:x="44952" fg:w="16"/><text x="43.7357%" y="495.50"></text></g><g><title>___pthread_mutex_lock (16 samples, 0.02%)</title><rect x="43.4857%" y="469" width="0.0155%" height="15" fill="rgb(226,228,24)" fg:x="44952" fg:w="16"/><text x="43.7357%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (90 samples, 0.09%)</title><rect x="43.4150%" y="565" width="0.0871%" height="15" fill="rgb(222,84,9)" fg:x="44879" fg:w="90"/><text x="43.6650%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (110 samples, 0.11%)</title><rect x="43.4141%" y="597" width="0.1064%" height="15" fill="rgb(234,203,30)" fg:x="44878" fg:w="110"/><text x="43.6641%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (109 samples, 0.11%)</title><rect x="43.4150%" y="581" width="0.1054%" height="15" fill="rgb(238,109,14)" fg:x="44879" fg:w="109"/><text x="43.6650%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="43.5021%" y="565" width="0.0184%" height="15" fill="rgb(233,206,34)" fg:x="44969" fg:w="19"/><text x="43.7521%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="43.5021%" y="549" width="0.0184%" height="15" fill="rgb(220,167,47)" fg:x="44969" fg:w="19"/><text x="43.7521%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.02%)</title><rect x="43.5021%" y="533" width="0.0184%" height="15" fill="rgb(238,105,10)" fg:x="44969" fg:w="19"/><text x="43.7521%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.02%)</title><rect x="43.5021%" y="517" width="0.0184%" height="15" fill="rgb(213,227,17)" fg:x="44969" fg:w="19"/><text x="43.7521%" y="527.50"></text></g><g><title>async_executor::State::notify (199 samples, 0.19%)</title><rect x="43.3628%" y="613" width="0.1925%" height="15" fill="rgb(217,132,38)" fg:x="44825" fg:w="199"/><text x="43.6128%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.03%)</title><rect x="43.5205%" y="597" width="0.0348%" height="15" fill="rgb(242,146,4)" fg:x="44988" fg:w="36"/><text x="43.7705%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (34 samples, 0.03%)</title><rect x="43.5224%" y="581" width="0.0329%" height="15" fill="rgb(212,61,9)" fg:x="44990" fg:w="34"/><text x="43.7724%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="43.5263%" y="565" width="0.0290%" height="15" fill="rgb(247,126,22)" fg:x="44994" fg:w="30"/><text x="43.7763%" y="575.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="43.5263%" y="549" width="0.0290%" height="15" fill="rgb(220,196,2)" fg:x="44994" fg:w="30"/><text x="43.7763%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 0.02%)</title><rect x="43.5631%" y="581" width="0.0213%" height="15" fill="rgb(208,46,4)" fg:x="45032" fg:w="22"/><text x="43.8131%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="43.5631%" y="565" width="0.0213%" height="15" fill="rgb(252,104,46)" fg:x="45032" fg:w="22"/><text x="43.8131%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (11 samples, 0.01%)</title><rect x="43.5843%" y="581" width="0.0106%" height="15" fill="rgb(237,152,48)" fg:x="45054" fg:w="11"/><text x="43.8343%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (11 samples, 0.01%)</title><rect x="43.5843%" y="565" width="0.0106%" height="15" fill="rgb(221,59,37)" fg:x="45054" fg:w="11"/><text x="43.8343%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (241 samples, 0.23%)</title><rect x="43.3628%" y="629" width="0.2331%" height="15" fill="rgb(209,202,51)" fg:x="44825" fg:w="241"/><text x="43.6128%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.04%)</title><rect x="43.5553%" y="613" width="0.0406%" height="15" fill="rgb(228,81,30)" fg:x="45024" fg:w="42"/><text x="43.8053%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (39 samples, 0.04%)</title><rect x="43.5582%" y="597" width="0.0377%" height="15" fill="rgb(227,42,39)" fg:x="45027" fg:w="39"/><text x="43.8082%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (21 samples, 0.02%)</title><rect x="43.5959%" y="629" width="0.0203%" height="15" fill="rgb(221,26,2)" fg:x="45066" fg:w="21"/><text x="43.8459%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.02%)</title><rect x="43.5959%" y="613" width="0.0203%" height="15" fill="rgb(254,61,31)" fg:x="45066" fg:w="21"/><text x="43.8459%" y="623.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (280 samples, 0.27%)</title><rect x="43.3473%" y="725" width="0.2709%" height="15" fill="rgb(222,173,38)" fg:x="44809" fg:w="280"/><text x="43.5973%" y="735.50"></text></g><g><title>event_listener::Event::notify (280 samples, 0.27%)</title><rect x="43.3473%" y="709" width="0.2709%" height="15" fill="rgb(218,50,12)" fg:x="44809" fg:w="280"/><text x="43.5973%" y="719.50"></text></g><g><title>event_listener::List::notify (280 samples, 0.27%)</title><rect x="43.3473%" y="693" width="0.2709%" height="15" fill="rgb(223,88,40)" fg:x="44809" fg:w="280"/><text x="43.5973%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (274 samples, 0.27%)</title><rect x="43.3531%" y="677" width="0.2651%" height="15" fill="rgb(237,54,19)" fg:x="44815" fg:w="274"/><text x="43.6031%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (274 samples, 0.27%)</title><rect x="43.3531%" y="661" width="0.2651%" height="15" fill="rgb(251,129,25)" fg:x="44815" fg:w="274"/><text x="43.6031%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (265 samples, 0.26%)</title><rect x="43.3618%" y="645" width="0.2564%" height="15" fill="rgb(238,97,19)" fg:x="44824" fg:w="265"/><text x="43.6118%" y="655.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (293 samples, 0.28%)</title><rect x="43.3444%" y="741" width="0.2834%" height="15" fill="rgb(240,169,18)" fg:x="44806" fg:w="293"/><text x="43.5944%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (295 samples, 0.29%)</title><rect x="43.3444%" y="805" width="0.2854%" height="15" fill="rgb(230,187,49)" fg:x="44806" fg:w="295"/><text x="43.5944%" y="815.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (295 samples, 0.29%)</title><rect x="43.3444%" y="789" width="0.2854%" height="15" fill="rgb(209,44,26)" fg:x="44806" fg:w="295"/><text x="43.5944%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (295 samples, 0.29%)</title><rect x="43.3444%" y="773" width="0.2854%" height="15" fill="rgb(244,0,6)" fg:x="44806" fg:w="295"/><text x="43.5944%" y="783.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (295 samples, 0.29%)</title><rect x="43.3444%" y="757" width="0.2854%" height="15" fill="rgb(248,18,21)" fg:x="44806" fg:w="295"/><text x="43.5944%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="43.6298%" y="469" width="0.0116%" height="15" fill="rgb(245,180,19)" fg:x="45101" fg:w="12"/><text x="43.8798%" y="479.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="43.6424%" y="453" width="0.0106%" height="15" fill="rgb(252,118,36)" fg:x="45114" fg:w="11"/><text x="43.8924%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (76 samples, 0.07%)</title><rect x="43.6298%" y="773" width="0.0735%" height="15" fill="rgb(210,224,19)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (76 samples, 0.07%)</title><rect x="43.6298%" y="757" width="0.0735%" height="15" fill="rgb(218,30,24)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (76 samples, 0.07%)</title><rect x="43.6298%" y="741" width="0.0735%" height="15" fill="rgb(219,75,50)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (76 samples, 0.07%)</title><rect x="43.6298%" y="725" width="0.0735%" height="15" fill="rgb(234,72,50)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (76 samples, 0.07%)</title><rect x="43.6298%" y="709" width="0.0735%" height="15" fill="rgb(219,100,48)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (76 samples, 0.07%)</title><rect x="43.6298%" y="693" width="0.0735%" height="15" fill="rgb(253,5,41)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (76 samples, 0.07%)</title><rect x="43.6298%" y="677" width="0.0735%" height="15" fill="rgb(247,181,11)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (76 samples, 0.07%)</title><rect x="43.6298%" y="661" width="0.0735%" height="15" fill="rgb(222,223,25)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.07%)</title><rect x="43.6298%" y="645" width="0.0735%" height="15" fill="rgb(214,198,28)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.07%)</title><rect x="43.6298%" y="629" width="0.0735%" height="15" fill="rgb(230,46,43)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="639.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.07%)</title><rect x="43.6298%" y="613" width="0.0735%" height="15" fill="rgb(233,65,53)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="623.50"></text></g><g><title>__rg_alloc (76 samples, 0.07%)</title><rect x="43.6298%" y="597" width="0.0735%" height="15" fill="rgb(221,121,27)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (76 samples, 0.07%)</title><rect x="43.6298%" y="581" width="0.0735%" height="15" fill="rgb(247,70,47)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="591.50"></text></g><g><title>rust_alloc (76 samples, 0.07%)</title><rect x="43.6298%" y="565" width="0.0735%" height="15" fill="rgb(228,85,35)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="43.6298%" y="549" width="0.0735%" height="15" fill="rgb(209,50,18)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="43.6298%" y="533" width="0.0735%" height="15" fill="rgb(250,19,35)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="43.6298%" y="517" width="0.0735%" height="15" fill="rgb(253,107,29)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (76 samples, 0.07%)</title><rect x="43.6298%" y="501" width="0.0735%" height="15" fill="rgb(252,179,29)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (76 samples, 0.07%)</title><rect x="43.6298%" y="485" width="0.0735%" height="15" fill="rgb(238,194,6)" fg:x="45101" fg:w="76"/><text x="43.8798%" y="495.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (64 samples, 0.06%)</title><rect x="43.6414%" y="469" width="0.0619%" height="15" fill="rgb(238,164,29)" fg:x="45113" fg:w="64"/><text x="43.8914%" y="479.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (52 samples, 0.05%)</title><rect x="43.6530%" y="453" width="0.0503%" height="15" fill="rgb(224,25,9)" fg:x="45125" fg:w="52"/><text x="43.9030%" y="463.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="43.6530%" y="437" width="0.0503%" height="15" fill="rgb(244,153,23)" fg:x="45125" fg:w="52"/><text x="43.9030%" y="447.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (52 samples, 0.05%)</title><rect x="43.6530%" y="421" width="0.0503%" height="15" fill="rgb(212,203,14)" fg:x="45125" fg:w="52"/><text x="43.9030%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (11 samples, 0.01%)</title><rect x="43.7062%" y="373" width="0.0106%" height="15" fill="rgb(220,164,20)" fg:x="45180" fg:w="11"/><text x="43.9562%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (11 samples, 0.01%)</title><rect x="43.7062%" y="357" width="0.0106%" height="15" fill="rgb(222,203,48)" fg:x="45180" fg:w="11"/><text x="43.9562%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (13 samples, 0.01%)</title><rect x="43.7062%" y="389" width="0.0126%" height="15" fill="rgb(215,159,22)" fg:x="45180" fg:w="13"/><text x="43.9562%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (20 samples, 0.02%)</title><rect x="43.7033%" y="405" width="0.0193%" height="15" fill="rgb(216,183,47)" fg:x="45177" fg:w="20"/><text x="43.9533%" y="415.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="43.7304%" y="389" width="0.0126%" height="15" fill="rgb(229,195,25)" fg:x="45205" fg:w="13"/><text x="43.9804%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (101 samples, 0.10%)</title><rect x="43.7033%" y="437" width="0.0977%" height="15" fill="rgb(224,132,51)" fg:x="45177" fg:w="101"/><text x="43.9533%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (101 samples, 0.10%)</title><rect x="43.7033%" y="421" width="0.0977%" height="15" fill="rgb(240,63,7)" fg:x="45177" fg:w="101"/><text x="43.9533%" y="431.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (81 samples, 0.08%)</title><rect x="43.7227%" y="405" width="0.0784%" height="15" fill="rgb(249,182,41)" fg:x="45197" fg:w="81"/><text x="43.9727%" y="415.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (60 samples, 0.06%)</title><rect x="43.7430%" y="389" width="0.0580%" height="15" fill="rgb(243,47,26)" fg:x="45218" fg:w="60"/><text x="43.9930%" y="399.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="43.7430%" y="373" width="0.0580%" height="15" fill="rgb(233,48,2)" fg:x="45218" fg:w="60"/><text x="43.9930%" y="383.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (60 samples, 0.06%)</title><rect x="43.7430%" y="357" width="0.0580%" height="15" fill="rgb(244,165,34)" fg:x="45218" fg:w="60"/><text x="43.9930%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (137 samples, 0.13%)</title><rect x="43.7033%" y="709" width="0.1325%" height="15" fill="rgb(207,89,7)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (137 samples, 0.13%)</title><rect x="43.7033%" y="693" width="0.1325%" height="15" fill="rgb(244,117,36)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (137 samples, 0.13%)</title><rect x="43.7033%" y="677" width="0.1325%" height="15" fill="rgb(226,144,34)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (137 samples, 0.13%)</title><rect x="43.7033%" y="661" width="0.1325%" height="15" fill="rgb(213,23,19)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (137 samples, 0.13%)</title><rect x="43.7033%" y="645" width="0.1325%" height="15" fill="rgb(217,75,12)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (137 samples, 0.13%)</title><rect x="43.7033%" y="629" width="0.1325%" height="15" fill="rgb(224,159,17)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (137 samples, 0.13%)</title><rect x="43.7033%" y="613" width="0.1325%" height="15" fill="rgb(217,118,1)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (137 samples, 0.13%)</title><rect x="43.7033%" y="597" width="0.1325%" height="15" fill="rgb(232,180,48)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (137 samples, 0.13%)</title><rect x="43.7033%" y="581" width="0.1325%" height="15" fill="rgb(230,27,33)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (137 samples, 0.13%)</title><rect x="43.7033%" y="565" width="0.1325%" height="15" fill="rgb(205,31,21)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="575.50"></text></g><g><title>alloc::alloc::alloc (137 samples, 0.13%)</title><rect x="43.7033%" y="549" width="0.1325%" height="15" fill="rgb(253,59,4)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="559.50"></text></g><g><title>__rg_alloc (137 samples, 0.13%)</title><rect x="43.7033%" y="533" width="0.1325%" height="15" fill="rgb(224,201,9)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (137 samples, 0.13%)</title><rect x="43.7033%" y="517" width="0.1325%" height="15" fill="rgb(229,206,30)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="527.50"></text></g><g><title>rust_alloc (137 samples, 0.13%)</title><rect x="43.7033%" y="501" width="0.1325%" height="15" fill="rgb(212,67,47)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (137 samples, 0.13%)</title><rect x="43.7033%" y="485" width="0.1325%" height="15" fill="rgb(211,96,50)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (137 samples, 0.13%)</title><rect x="43.7033%" y="469" width="0.1325%" height="15" fill="rgb(252,114,18)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (137 samples, 0.13%)</title><rect x="43.7033%" y="453" width="0.1325%" height="15" fill="rgb(223,58,37)" fg:x="45177" fg:w="137"/><text x="43.9533%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="43.8010%" y="437" width="0.0348%" height="15" fill="rgb(237,70,4)" fg:x="45278" fg:w="36"/><text x="44.0510%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="43.8010%" y="421" width="0.0348%" height="15" fill="rgb(244,85,46)" fg:x="45278" fg:w="36"/><text x="44.0510%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="43.8010%" y="405" width="0.0348%" height="15" fill="rgb(223,39,52)" fg:x="45278" fg:w="36"/><text x="44.0510%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="43.8010%" y="389" width="0.0348%" height="15" fill="rgb(218,200,14)" fg:x="45278" fg:w="36"/><text x="44.0510%" y="399.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (35 samples, 0.03%)</title><rect x="43.8020%" y="373" width="0.0339%" height="15" fill="rgb(208,171,16)" fg:x="45279" fg:w="35"/><text x="44.0520%" y="383.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (18 samples, 0.02%)</title><rect x="43.8184%" y="357" width="0.0174%" height="15" fill="rgb(234,200,18)" fg:x="45296" fg:w="18"/><text x="44.0684%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (18 samples, 0.02%)</title><rect x="43.8184%" y="341" width="0.0174%" height="15" fill="rgb(228,45,11)" fg:x="45296" fg:w="18"/><text x="44.0684%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (12 samples, 0.01%)</title><rect x="43.8359%" y="485" width="0.0116%" height="15" fill="rgb(237,182,11)" fg:x="45314" fg:w="12"/><text x="44.0859%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (92 samples, 0.09%)</title><rect x="43.8359%" y="517" width="0.0890%" height="15" fill="rgb(241,175,49)" fg:x="45314" fg:w="92"/><text x="44.0859%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (92 samples, 0.09%)</title><rect x="43.8359%" y="501" width="0.0890%" height="15" fill="rgb(247,38,35)" fg:x="45314" fg:w="92"/><text x="44.0859%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (80 samples, 0.08%)</title><rect x="43.8475%" y="485" width="0.0774%" height="15" fill="rgb(228,39,49)" fg:x="45326" fg:w="80"/><text x="44.0975%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (63 samples, 0.06%)</title><rect x="43.8639%" y="469" width="0.0609%" height="15" fill="rgb(226,101,26)" fg:x="45343" fg:w="63"/><text x="44.1139%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (63 samples, 0.06%)</title><rect x="43.8639%" y="453" width="0.0609%" height="15" fill="rgb(206,141,19)" fg:x="45343" fg:w="63"/><text x="44.1139%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (63 samples, 0.06%)</title><rect x="43.8639%" y="437" width="0.0609%" height="15" fill="rgb(211,200,13)" fg:x="45343" fg:w="63"/><text x="44.1139%" y="447.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (308 samples, 0.30%)</title><rect x="43.6298%" y="789" width="0.2980%" height="15" fill="rgb(241,121,6)" fg:x="45101" fg:w="308"/><text x="43.8798%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (232 samples, 0.22%)</title><rect x="43.7033%" y="773" width="0.2244%" height="15" fill="rgb(234,221,29)" fg:x="45177" fg:w="232"/><text x="43.9533%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (232 samples, 0.22%)</title><rect x="43.7033%" y="757" width="0.2244%" height="15" fill="rgb(229,136,5)" fg:x="45177" fg:w="232"/><text x="43.9533%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (232 samples, 0.22%)</title><rect x="43.7033%" y="741" width="0.2244%" height="15" fill="rgb(238,36,11)" fg:x="45177" fg:w="232"/><text x="43.9533%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (232 samples, 0.22%)</title><rect x="43.7033%" y="725" width="0.2244%" height="15" fill="rgb(251,55,41)" fg:x="45177" fg:w="232"/><text x="43.9533%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (95 samples, 0.09%)</title><rect x="43.8359%" y="709" width="0.0919%" height="15" fill="rgb(242,34,40)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (95 samples, 0.09%)</title><rect x="43.8359%" y="693" width="0.0919%" height="15" fill="rgb(215,42,17)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (95 samples, 0.09%)</title><rect x="43.8359%" y="677" width="0.0919%" height="15" fill="rgb(207,44,46)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.09%)</title><rect x="43.8359%" y="661" width="0.0919%" height="15" fill="rgb(211,206,28)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.09%)</title><rect x="43.8359%" y="645" width="0.0919%" height="15" fill="rgb(237,167,16)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="655.50"></text></g><g><title>alloc::alloc::alloc (95 samples, 0.09%)</title><rect x="43.8359%" y="629" width="0.0919%" height="15" fill="rgb(233,66,6)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="639.50"></text></g><g><title>__rg_alloc (95 samples, 0.09%)</title><rect x="43.8359%" y="613" width="0.0919%" height="15" fill="rgb(246,123,29)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (95 samples, 0.09%)</title><rect x="43.8359%" y="597" width="0.0919%" height="15" fill="rgb(209,62,40)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="607.50"></text></g><g><title>rust_alloc (95 samples, 0.09%)</title><rect x="43.8359%" y="581" width="0.0919%" height="15" fill="rgb(218,4,25)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="43.8359%" y="565" width="0.0919%" height="15" fill="rgb(253,91,49)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="43.8359%" y="549" width="0.0919%" height="15" fill="rgb(228,155,29)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (95 samples, 0.09%)</title><rect x="43.8359%" y="533" width="0.0919%" height="15" fill="rgb(243,57,37)" fg:x="45314" fg:w="95"/><text x="44.0859%" y="543.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="43.9423%" y="469" width="0.0145%" height="15" fill="rgb(244,167,17)" fg:x="45424" fg:w="15"/><text x="44.1923%" y="479.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="43.9423%" y="453" width="0.0145%" height="15" fill="rgb(207,181,38)" fg:x="45424" fg:w="15"/><text x="44.1923%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (36 samples, 0.03%)</title><rect x="43.9307%" y="517" width="0.0348%" height="15" fill="rgb(211,8,23)" fg:x="45412" fg:w="36"/><text x="44.1807%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (36 samples, 0.03%)</title><rect x="43.9307%" y="501" width="0.0348%" height="15" fill="rgb(235,11,44)" fg:x="45412" fg:w="36"/><text x="44.1807%" y="511.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (30 samples, 0.03%)</title><rect x="43.9365%" y="485" width="0.0290%" height="15" fill="rgb(248,18,52)" fg:x="45418" fg:w="30"/><text x="44.1865%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (41 samples, 0.04%)</title><rect x="43.9307%" y="533" width="0.0397%" height="15" fill="rgb(208,4,7)" fg:x="45412" fg:w="41"/><text x="44.1807%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (60 samples, 0.06%)</title><rect x="43.9278%" y="549" width="0.0580%" height="15" fill="rgb(240,17,39)" fg:x="45409" fg:w="60"/><text x="44.1778%" y="559.50"></text></g><g><title>snmalloc::Superslab::get&lt;snmalloc::Remote, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="43.9723%" y="533" width="0.0135%" height="15" fill="rgb(207,170,3)" fg:x="45455" fg:w="14"/><text x="44.2223%" y="543.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="43.9723%" y="517" width="0.0135%" height="15" fill="rgb(236,100,52)" fg:x="45455" fg:w="14"/><text x="44.2223%" y="527.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (14 samples, 0.01%)</title><rect x="43.9723%" y="501" width="0.0135%" height="15" fill="rgb(246,78,51)" fg:x="45455" fg:w="14"/><text x="44.2223%" y="511.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="43.9723%" y="485" width="0.0135%" height="15" fill="rgb(211,17,15)" fg:x="45455" fg:w="14"/><text x="44.2223%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (26 samples, 0.03%)</title><rect x="44.0003%" y="533" width="0.0252%" height="15" fill="rgb(209,59,46)" fg:x="45484" fg:w="26"/><text x="44.2503%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (303 samples, 0.29%)</title><rect x="43.9278%" y="581" width="0.2931%" height="15" fill="rgb(210,92,25)" fg:x="45409" fg:w="303"/><text x="44.1778%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (303 samples, 0.29%)</title><rect x="43.9278%" y="565" width="0.2931%" height="15" fill="rgb(238,174,52)" fg:x="45409" fg:w="303"/><text x="44.1778%" y="575.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (243 samples, 0.24%)</title><rect x="43.9858%" y="549" width="0.2351%" height="15" fill="rgb(230,73,7)" fg:x="45469" fg:w="243"/><text x="44.2358%" y="559.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (202 samples, 0.20%)</title><rect x="44.0255%" y="533" width="0.1954%" height="15" fill="rgb(243,124,40)" fg:x="45510" fg:w="202"/><text x="44.2755%" y="543.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (202 samples, 0.20%)</title><rect x="44.0255%" y="517" width="0.1954%" height="15" fill="rgb(244,170,11)" fg:x="45510" fg:w="202"/><text x="44.2755%" y="527.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (202 samples, 0.20%)</title><rect x="44.0255%" y="501" width="0.1954%" height="15" fill="rgb(207,114,54)" fg:x="45510" fg:w="202"/><text x="44.2755%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (310 samples, 0.30%)</title><rect x="43.9278%" y="789" width="0.2999%" height="15" fill="rgb(205,42,20)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (310 samples, 0.30%)</title><rect x="43.9278%" y="773" width="0.2999%" height="15" fill="rgb(230,30,28)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (310 samples, 0.30%)</title><rect x="43.9278%" y="757" width="0.2999%" height="15" fill="rgb(205,73,54)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (310 samples, 0.30%)</title><rect x="43.9278%" y="741" width="0.2999%" height="15" fill="rgb(254,227,23)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (310 samples, 0.30%)</title><rect x="43.9278%" y="725" width="0.2999%" height="15" fill="rgb(228,202,34)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (310 samples, 0.30%)</title><rect x="43.9278%" y="709" width="0.2999%" height="15" fill="rgb(222,225,37)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="719.50"></text></g><g><title>alloc::alloc::alloc (310 samples, 0.30%)</title><rect x="43.9278%" y="693" width="0.2999%" height="15" fill="rgb(221,14,54)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="703.50"></text></g><g><title>__rg_alloc (310 samples, 0.30%)</title><rect x="43.9278%" y="677" width="0.2999%" height="15" fill="rgb(254,102,2)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (310 samples, 0.30%)</title><rect x="43.9278%" y="661" width="0.2999%" height="15" fill="rgb(232,104,17)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="671.50"></text></g><g><title>rust_alloc (310 samples, 0.30%)</title><rect x="43.9278%" y="645" width="0.2999%" height="15" fill="rgb(250,220,14)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (310 samples, 0.30%)</title><rect x="43.9278%" y="629" width="0.2999%" height="15" fill="rgb(241,158,9)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (310 samples, 0.30%)</title><rect x="43.9278%" y="613" width="0.2999%" height="15" fill="rgb(246,9,43)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (310 samples, 0.30%)</title><rect x="43.9278%" y="597" width="0.2999%" height="15" fill="rgb(206,73,33)" fg:x="45409" fg:w="310"/><text x="44.1778%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (12 samples, 0.01%)</title><rect x="44.2276%" y="789" width="0.0116%" height="15" fill="rgb(222,79,8)" fg:x="45719" fg:w="12"/><text x="44.4776%" y="799.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (678 samples, 0.66%)</title><rect x="44.4772%" y="757" width="0.6559%" height="15" fill="rgb(234,8,54)" fg:x="45977" fg:w="678"/><text x="44.7272%" y="767.50"></text></g><g><title>aligned_size (18 samples, 0.02%)</title><rect x="45.1873%" y="565" width="0.0174%" height="15" fill="rgb(209,134,38)" fg:x="46711" fg:w="18"/><text x="45.4373%" y="575.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="45.2163%" y="533" width="0.0126%" height="15" fill="rgb(230,127,29)" fg:x="46741" fg:w="13"/><text x="45.4663%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (14 samples, 0.01%)</title><rect x="45.2434%" y="453" width="0.0135%" height="15" fill="rgb(242,44,41)" fg:x="46769" fg:w="14"/><text x="45.4934%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (14 samples, 0.01%)</title><rect x="45.2434%" y="437" width="0.0135%" height="15" fill="rgb(222,56,43)" fg:x="46769" fg:w="14"/><text x="45.4934%" y="447.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="45.2463%" y="421" width="0.0106%" height="15" fill="rgb(238,39,47)" fg:x="46772" fg:w="11"/><text x="45.4963%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (19 samples, 0.02%)</title><rect x="45.2434%" y="469" width="0.0184%" height="15" fill="rgb(226,79,43)" fg:x="46769" fg:w="19"/><text x="45.4934%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (28 samples, 0.03%)</title><rect x="45.2376%" y="485" width="0.0271%" height="15" fill="rgb(242,105,53)" fg:x="46763" fg:w="28"/><text x="45.4876%" y="495.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (13 samples, 0.01%)</title><rect x="45.2753%" y="469" width="0.0126%" height="15" fill="rgb(251,132,46)" fg:x="46802" fg:w="13"/><text x="45.5253%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (168 samples, 0.16%)</title><rect x="45.2376%" y="517" width="0.1625%" height="15" fill="rgb(231,77,14)" fg:x="46763" fg:w="168"/><text x="45.4876%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (168 samples, 0.16%)</title><rect x="45.2376%" y="501" width="0.1625%" height="15" fill="rgb(240,135,9)" fg:x="46763" fg:w="168"/><text x="45.4876%" y="511.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (140 samples, 0.14%)</title><rect x="45.2647%" y="485" width="0.1354%" height="15" fill="rgb(248,109,14)" fg:x="46791" fg:w="140"/><text x="45.5147%" y="495.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (116 samples, 0.11%)</title><rect x="45.2879%" y="469" width="0.1122%" height="15" fill="rgb(227,146,52)" fg:x="46815" fg:w="116"/><text x="45.5379%" y="479.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (116 samples, 0.11%)</title><rect x="45.2879%" y="453" width="0.1122%" height="15" fill="rgb(232,54,3)" fg:x="46815" fg:w="116"/><text x="45.5379%" y="463.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (116 samples, 0.11%)</title><rect x="45.2879%" y="437" width="0.1122%" height="15" fill="rgb(229,201,43)" fg:x="46815" fg:w="116"/><text x="45.5379%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (16 samples, 0.02%)</title><rect x="45.4001%" y="517" width="0.0155%" height="15" fill="rgb(252,161,33)" fg:x="46931" fg:w="16"/><text x="45.6501%" y="527.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (14 samples, 0.01%)</title><rect x="45.4020%" y="501" width="0.0135%" height="15" fill="rgb(226,146,40)" fg:x="46933" fg:w="14"/><text x="45.6520%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::empty (39 samples, 0.04%)</title><rect x="45.4214%" y="517" width="0.0377%" height="15" fill="rgb(219,47,25)" fg:x="46953" fg:w="39"/><text x="45.6714%" y="527.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (39 samples, 0.04%)</title><rect x="45.4214%" y="501" width="0.0377%" height="15" fill="rgb(250,135,13)" fg:x="46953" fg:w="39"/><text x="45.6714%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (574 samples, 0.56%)</title><rect x="45.2086%" y="565" width="0.5553%" height="15" fill="rgb(219,229,18)" fg:x="46733" fg:w="574"/><text x="45.4586%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (570 samples, 0.55%)</title><rect x="45.2124%" y="549" width="0.5514%" height="15" fill="rgb(217,152,27)" fg:x="46737" fg:w="570"/><text x="45.4624%" y="559.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (553 samples, 0.53%)</title><rect x="45.2289%" y="533" width="0.5350%" height="15" fill="rgb(225,71,47)" fg:x="46754" fg:w="553"/><text x="45.4789%" y="543.50"></text></g><g><title>snmalloc::FreeListIter::take (315 samples, 0.30%)</title><rect x="45.4591%" y="517" width="0.3047%" height="15" fill="rgb(220,139,14)" fg:x="46992" fg:w="315"/><text x="45.7091%" y="527.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (315 samples, 0.30%)</title><rect x="45.4591%" y="501" width="0.3047%" height="15" fill="rgb(247,54,32)" fg:x="46992" fg:w="315"/><text x="45.7091%" y="511.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,403 samples, 1.36%)</title><rect x="44.4221%" y="773" width="1.3572%" height="15" fill="rgb(252,131,39)" fg:x="45920" fg:w="1403"/><text x="44.6721%" y="783.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (668 samples, 0.65%)</title><rect x="45.1331%" y="757" width="0.6462%" height="15" fill="rgb(210,108,39)" fg:x="46655" fg:w="668"/><text x="45.3831%" y="767.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (667 samples, 0.65%)</title><rect x="45.1341%" y="741" width="0.6452%" height="15" fill="rgb(205,23,29)" fg:x="46656" fg:w="667"/><text x="45.3841%" y="751.50"></text></g><g><title>value_trait::Builder::object (667 samples, 0.65%)</title><rect x="45.1341%" y="725" width="0.6452%" height="15" fill="rgb(246,139,46)" fg:x="46656" fg:w="667"/><text x="45.3841%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (667 samples, 0.65%)</title><rect x="45.1341%" y="709" width="0.6452%" height="15" fill="rgb(250,81,26)" fg:x="46656" fg:w="667"/><text x="45.3841%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (667 samples, 0.65%)</title><rect x="45.1341%" y="693" width="0.6452%" height="15" fill="rgb(214,104,7)" fg:x="46656" fg:w="667"/><text x="45.3841%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (645 samples, 0.62%)</title><rect x="45.1554%" y="677" width="0.6240%" height="15" fill="rgb(233,189,8)" fg:x="46678" fg:w="645"/><text x="45.4054%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (645 samples, 0.62%)</title><rect x="45.1554%" y="661" width="0.6240%" height="15" fill="rgb(228,141,17)" fg:x="46678" fg:w="645"/><text x="45.4054%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (645 samples, 0.62%)</title><rect x="45.1554%" y="645" width="0.6240%" height="15" fill="rgb(247,157,1)" fg:x="46678" fg:w="645"/><text x="45.4054%" y="655.50"></text></g><g><title>alloc::alloc::alloc (637 samples, 0.62%)</title><rect x="45.1631%" y="629" width="0.6162%" height="15" fill="rgb(249,225,5)" fg:x="46686" fg:w="637"/><text x="45.4131%" y="639.50"></text></g><g><title>__rg_alloc (637 samples, 0.62%)</title><rect x="45.1631%" y="613" width="0.6162%" height="15" fill="rgb(242,55,13)" fg:x="46686" fg:w="637"/><text x="45.4131%" y="623.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (637 samples, 0.62%)</title><rect x="45.1631%" y="597" width="0.6162%" height="15" fill="rgb(230,49,50)" fg:x="46686" fg:w="637"/><text x="45.4131%" y="607.50"></text></g><g><title>rust_alloc (612 samples, 0.59%)</title><rect x="45.1873%" y="581" width="0.5920%" height="15" fill="rgb(241,111,38)" fg:x="46711" fg:w="612"/><text x="45.4373%" y="591.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="45.7638%" y="565" width="0.0155%" height="15" fill="rgb(252,155,4)" fg:x="47307" fg:w="16"/><text x="46.0138%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (18 samples, 0.02%)</title><rect x="45.7793%" y="773" width="0.0174%" height="15" fill="rgb(212,69,32)" fg:x="47323" fg:w="18"/><text x="46.0293%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="45.8045%" y="741" width="0.0116%" height="15" fill="rgb(243,107,47)" fg:x="47349" fg:w="12"/><text x="46.0545%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (12 samples, 0.01%)</title><rect x="45.8045%" y="725" width="0.0116%" height="15" fill="rgb(247,130,12)" fg:x="47349" fg:w="12"/><text x="46.0545%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="45.8045%" y="757" width="0.0281%" height="15" fill="rgb(233,74,16)" fg:x="47349" fg:w="29"/><text x="46.0545%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="45.8161%" y="741" width="0.0164%" height="15" fill="rgb(208,58,18)" fg:x="47361" fg:w="17"/><text x="46.0661%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="45.8161%" y="725" width="0.0164%" height="15" fill="rgb(242,225,1)" fg:x="47361" fg:w="17"/><text x="46.0661%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (17 samples, 0.02%)</title><rect x="45.8161%" y="709" width="0.0164%" height="15" fill="rgb(249,39,40)" fg:x="47361" fg:w="17"/><text x="46.0661%" y="719.50"></text></g><g><title>alloc::alloc::box_free (24 samples, 0.02%)</title><rect x="45.9380%" y="709" width="0.0232%" height="15" fill="rgb(207,72,44)" fg:x="47487" fg:w="24"/><text x="46.1880%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.02%)</title><rect x="45.9380%" y="693" width="0.0232%" height="15" fill="rgb(215,193,12)" fg:x="47487" fg:w="24"/><text x="46.1880%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="45.9380%" y="677" width="0.0232%" height="15" fill="rgb(248,41,39)" fg:x="47487" fg:w="24"/><text x="46.1880%" y="687.50"></text></g><g><title>__rg_dealloc (24 samples, 0.02%)</title><rect x="45.9380%" y="661" width="0.0232%" height="15" fill="rgb(253,85,4)" fg:x="47487" fg:w="24"/><text x="46.1880%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (24 samples, 0.02%)</title><rect x="45.9380%" y="645" width="0.0232%" height="15" fill="rgb(243,70,31)" fg:x="47487" fg:w="24"/><text x="46.1880%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.04%)</title><rect x="45.9863%" y="645" width="0.0368%" height="15" fill="rgb(253,195,26)" fg:x="47537" fg:w="38"/><text x="46.2363%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (37 samples, 0.04%)</title><rect x="45.9873%" y="629" width="0.0358%" height="15" fill="rgb(243,42,11)" fg:x="47538" fg:w="37"/><text x="46.2373%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (198 samples, 0.19%)</title><rect x="45.8509%" y="741" width="0.1915%" height="15" fill="rgb(239,66,17)" fg:x="47397" fg:w="198"/><text x="46.1009%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (122 samples, 0.12%)</title><rect x="45.9244%" y="725" width="0.1180%" height="15" fill="rgb(217,132,21)" fg:x="47473" fg:w="122"/><text x="46.1744%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (84 samples, 0.08%)</title><rect x="45.9612%" y="709" width="0.0813%" height="15" fill="rgb(252,202,21)" fg:x="47511" fg:w="84"/><text x="46.2112%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (84 samples, 0.08%)</title><rect x="45.9612%" y="693" width="0.0813%" height="15" fill="rgb(233,98,36)" fg:x="47511" fg:w="84"/><text x="46.2112%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (58 samples, 0.06%)</title><rect x="45.9863%" y="677" width="0.0561%" height="15" fill="rgb(216,153,54)" fg:x="47537" fg:w="58"/><text x="46.2363%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (58 samples, 0.06%)</title><rect x="45.9863%" y="661" width="0.0561%" height="15" fill="rgb(250,99,7)" fg:x="47537" fg:w="58"/><text x="46.2363%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (20 samples, 0.02%)</title><rect x="46.0231%" y="645" width="0.0193%" height="15" fill="rgb(207,56,50)" fg:x="47575" fg:w="20"/><text x="46.2731%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="46.0231%" y="629" width="0.0193%" height="15" fill="rgb(244,61,34)" fg:x="47575" fg:w="20"/><text x="46.2731%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (20 samples, 0.02%)</title><rect x="46.0231%" y="613" width="0.0193%" height="15" fill="rgb(241,50,38)" fg:x="47575" fg:w="20"/><text x="46.2731%" y="623.50"></text></g><g><title>rust_dealloc (19 samples, 0.02%)</title><rect x="46.0715%" y="709" width="0.0184%" height="15" fill="rgb(212,166,30)" fg:x="47625" fg:w="19"/><text x="46.3215%" y="719.50"></text></g><g><title>size_to_sizeclass (16 samples, 0.02%)</title><rect x="46.0899%" y="709" width="0.0155%" height="15" fill="rgb(249,127,32)" fg:x="47644" fg:w="16"/><text x="46.3399%" y="719.50"></text></g><g><title>rust_dealloc (21 samples, 0.02%)</title><rect x="46.1169%" y="645" width="0.0203%" height="15" fill="rgb(209,103,0)" fg:x="47672" fg:w="21"/><text x="46.3669%" y="655.50"></text></g><g><title>sizeclass_to_size (25 samples, 0.02%)</title><rect x="46.1373%" y="645" width="0.0242%" height="15" fill="rgb(238,209,51)" fg:x="47693" fg:w="25"/><text x="46.3873%" y="655.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (25 samples, 0.02%)</title><rect x="46.1373%" y="629" width="0.0242%" height="15" fill="rgb(237,56,23)" fg:x="47693" fg:w="25"/><text x="46.3873%" y="639.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (39 samples, 0.04%)</title><rect x="46.1905%" y="597" width="0.0377%" height="15" fill="rgb(215,153,46)" fg:x="47748" fg:w="39"/><text x="46.4405%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (39 samples, 0.04%)</title><rect x="46.1905%" y="581" width="0.0377%" height="15" fill="rgb(224,49,31)" fg:x="47748" fg:w="39"/><text x="46.4405%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (86 samples, 0.08%)</title><rect x="46.1634%" y="645" width="0.0832%" height="15" fill="rgb(250,18,42)" fg:x="47720" fg:w="86"/><text x="46.4134%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (86 samples, 0.08%)</title><rect x="46.1634%" y="629" width="0.0832%" height="15" fill="rgb(215,176,39)" fg:x="47720" fg:w="86"/><text x="46.4134%" y="639.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (82 samples, 0.08%)</title><rect x="46.1672%" y="613" width="0.0793%" height="15" fill="rgb(223,77,29)" fg:x="47724" fg:w="82"/><text x="46.4172%" y="623.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (19 samples, 0.02%)</title><rect x="46.2282%" y="597" width="0.0184%" height="15" fill="rgb(234,94,52)" fg:x="47787" fg:w="19"/><text x="46.4782%" y="607.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (19 samples, 0.02%)</title><rect x="46.2282%" y="581" width="0.0184%" height="15" fill="rgb(220,154,50)" fg:x="47787" fg:w="19"/><text x="46.4782%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (166 samples, 0.16%)</title><rect x="46.1053%" y="677" width="0.1606%" height="15" fill="rgb(212,11,10)" fg:x="47660" fg:w="166"/><text x="46.3553%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (166 samples, 0.16%)</title><rect x="46.1053%" y="661" width="0.1606%" height="15" fill="rgb(205,166,19)" fg:x="47660" fg:w="166"/><text x="46.3553%" y="671.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (20 samples, 0.02%)</title><rect x="46.2466%" y="645" width="0.0193%" height="15" fill="rgb(244,198,16)" fg:x="47806" fg:w="20"/><text x="46.4966%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (168 samples, 0.16%)</title><rect x="46.1053%" y="709" width="0.1625%" height="15" fill="rgb(219,69,12)" fg:x="47660" fg:w="168"/><text x="46.3553%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (168 samples, 0.16%)</title><rect x="46.1053%" y="693" width="0.1625%" height="15" fill="rgb(245,30,7)" fg:x="47660" fg:w="168"/><text x="46.3553%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (206 samples, 0.20%)</title><rect x="46.0715%" y="725" width="0.1993%" height="15" fill="rgb(218,221,48)" fg:x="47625" fg:w="206"/><text x="46.3215%" y="735.50"></text></g><g><title>rust_dealloc (239 samples, 0.23%)</title><rect x="46.0424%" y="741" width="0.2312%" height="15" fill="rgb(216,66,15)" fg:x="47595" fg:w="239"/><text x="46.2924%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (497 samples, 0.48%)</title><rect x="45.8045%" y="773" width="0.4808%" height="15" fill="rgb(226,122,50)" fg:x="47349" fg:w="497"/><text x="46.0545%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (468 samples, 0.45%)</title><rect x="45.8325%" y="757" width="0.4527%" height="15" fill="rgb(239,156,16)" fg:x="47378" fg:w="468"/><text x="46.0825%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (12 samples, 0.01%)</title><rect x="46.2737%" y="741" width="0.0116%" height="15" fill="rgb(224,27,38)" fg:x="47834" fg:w="12"/><text x="46.5237%" y="751.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (15 samples, 0.01%)</title><rect x="46.2853%" y="773" width="0.0145%" height="15" fill="rgb(224,39,27)" fg:x="47846" fg:w="15"/><text x="46.5353%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,069 samples, 2.97%)</title><rect x="43.3444%" y="853" width="2.9689%" height="15" fill="rgb(215,92,29)" fg:x="44806" fg:w="3069"/><text x="43.5944%" y="863.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,069 samples, 2.97%)</title><rect x="43.3444%" y="837" width="2.9689%" height="15" fill="rgb(207,159,16)" fg:x="44806" fg:w="3069"/><text x="43.5944%" y="847.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,069 samples, 2.97%)</title><rect x="43.3444%" y="821" width="2.9689%" height="15" fill="rgb(238,163,47)" fg:x="44806" fg:w="3069"/><text x="43.5944%" y="831.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (2,774 samples, 2.68%)</title><rect x="43.6298%" y="805" width="2.6835%" height="15" fill="rgb(219,91,49)" fg:x="45101" fg:w="2774"/><text x="43.8798%" y="815.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_event (2,144 samples, 2.07%)</title><rect x="44.2393%" y="789" width="2.0741%" height="15" fill="rgb(227,167,31)" fg:x="45731" fg:w="2144"/><text x="44.4893%" y="799.50">t..</text></g><g><title>tremor_runtime::connectors::source::build_event (14 samples, 0.01%)</title><rect x="46.2998%" y="773" width="0.0135%" height="15" fill="rgb(234,80,54)" fg:x="47861" fg:w="14"/><text x="46.5498%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (47 samples, 0.05%)</title><rect x="46.4429%" y="789" width="0.0455%" height="15" fill="rgb(212,114,2)" fg:x="48009" fg:w="47"/><text x="46.6929%" y="799.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.02%)</title><rect x="46.4700%" y="773" width="0.0184%" height="15" fill="rgb(234,50,24)" fg:x="48037" fg:w="19"/><text x="46.7200%" y="783.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.01%)</title><rect x="46.4884%" y="789" width="0.0106%" height="15" fill="rgb(221,68,8)" fg:x="48056" fg:w="11"/><text x="46.7384%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,060 samples, 1.03%)</title><rect x="46.3404%" y="805" width="1.0254%" height="15" fill="rgb(254,180,31)" fg:x="47903" fg:w="1060"/><text x="46.5904%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (896 samples, 0.87%)</title><rect x="46.4991%" y="789" width="0.8668%" height="15" fill="rgb(247,130,50)" fg:x="48067" fg:w="896"/><text x="46.7491%" y="799.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,598 samples, 1.55%)</title><rect x="46.3133%" y="837" width="1.5459%" height="15" fill="rgb(211,109,4)" fg:x="47875" fg:w="1598"/><text x="46.5633%" y="847.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,598 samples, 1.55%)</title><rect x="46.3133%" y="821" width="1.5459%" height="15" fill="rgb(238,50,21)" fg:x="47875" fg:w="1598"/><text x="46.5633%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (510 samples, 0.49%)</title><rect x="47.3658%" y="805" width="0.4934%" height="15" fill="rgb(225,57,45)" fg:x="48963" fg:w="510"/><text x="47.6158%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="47.9153%" y="821" width="0.0116%" height="15" fill="rgb(209,196,50)" fg:x="49531" fg:w="12"/><text x="48.1653%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (437 samples, 0.42%)</title><rect x="47.9269%" y="821" width="0.4227%" height="15" fill="rgb(242,140,13)" fg:x="49543" fg:w="437"/><text x="48.1769%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (44 samples, 0.04%)</title><rect x="48.5625%" y="805" width="0.0426%" height="15" fill="rgb(217,111,7)" fg:x="50200" fg:w="44"/><text x="48.8125%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.04%)</title><rect x="48.6070%" y="789" width="0.0416%" height="15" fill="rgb(253,193,51)" fg:x="50246" fg:w="43"/><text x="48.8570%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (12 samples, 0.01%)</title><rect x="48.6370%" y="773" width="0.0116%" height="15" fill="rgb(252,70,29)" fg:x="50277" fg:w="12"/><text x="48.8870%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (330 samples, 0.32%)</title><rect x="48.6070%" y="805" width="0.3192%" height="15" fill="rgb(232,127,12)" fg:x="50246" fg:w="330"/><text x="48.8570%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (287 samples, 0.28%)</title><rect x="48.6486%" y="789" width="0.2776%" height="15" fill="rgb(211,180,21)" fg:x="50289" fg:w="287"/><text x="48.8986%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (285 samples, 0.28%)</title><rect x="48.6505%" y="773" width="0.2757%" height="15" fill="rgb(229,72,13)" fg:x="50291" fg:w="285"/><text x="48.9005%" y="783.50"></text></g><g><title>core::ptr::read (285 samples, 0.28%)</title><rect x="48.6505%" y="757" width="0.2757%" height="15" fill="rgb(240,211,49)" fg:x="50291" fg:w="285"/><text x="48.9005%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned_erms (282 samples, 0.27%)</title><rect x="48.6534%" y="741" width="0.2728%" height="15" fill="rgb(219,149,40)" fg:x="50294" fg:w="282"/><text x="48.9034%" y="751.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="48.9281%" y="805" width="0.0116%" height="15" fill="rgb(210,127,46)" fg:x="50578" fg:w="12"/><text x="49.1781%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="48.9398%" y="645" width="0.0135%" height="15" fill="rgb(220,106,7)" fg:x="50590" fg:w="14"/><text x="49.1898%" y="655.50"></text></g><g><title>aligned_size (20 samples, 0.02%)</title><rect x="48.9639%" y="533" width="0.0193%" height="15" fill="rgb(249,31,22)" fg:x="50615" fg:w="20"/><text x="49.2139%" y="543.50"></text></g><g><title>rust_alloc (44 samples, 0.04%)</title><rect x="48.9833%" y="501" width="0.0426%" height="15" fill="rgb(253,1,49)" fg:x="50635" fg:w="44"/><text x="49.2333%" y="511.50"></text></g><g><title>size_to_sizeclass (15 samples, 0.01%)</title><rect x="49.0258%" y="501" width="0.0145%" height="15" fill="rgb(227,144,33)" fg:x="50679" fg:w="15"/><text x="49.2758%" y="511.50"></text></g><g><title>rust_alloc (11 samples, 0.01%)</title><rect x="49.0297%" y="485" width="0.0106%" height="15" fill="rgb(249,163,44)" fg:x="50683" fg:w="11"/><text x="49.2797%" y="495.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (13 samples, 0.01%)</title><rect x="49.0742%" y="373" width="0.0126%" height="15" fill="rgb(234,15,39)" fg:x="50729" fg:w="13"/><text x="49.3242%" y="383.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="49.0742%" y="357" width="0.0126%" height="15" fill="rgb(207,66,16)" fg:x="50729" fg:w="13"/><text x="49.3242%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (32 samples, 0.03%)</title><rect x="49.0636%" y="421" width="0.0310%" height="15" fill="rgb(233,112,24)" fg:x="50718" fg:w="32"/><text x="49.3136%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (32 samples, 0.03%)</title><rect x="49.0636%" y="405" width="0.0310%" height="15" fill="rgb(230,90,22)" fg:x="50718" fg:w="32"/><text x="49.3136%" y="415.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (26 samples, 0.03%)</title><rect x="49.0694%" y="389" width="0.0252%" height="15" fill="rgb(229,61,13)" fg:x="50724" fg:w="26"/><text x="49.3194%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (36 samples, 0.03%)</title><rect x="49.0626%" y="437" width="0.0348%" height="15" fill="rgb(225,57,24)" fg:x="50717" fg:w="36"/><text x="49.3126%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (54 samples, 0.05%)</title><rect x="49.0558%" y="453" width="0.0522%" height="15" fill="rgb(208,169,48)" fg:x="50710" fg:w="54"/><text x="49.3058%" y="463.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (12 samples, 0.01%)</title><rect x="49.1168%" y="437" width="0.0116%" height="15" fill="rgb(244,218,51)" fg:x="50773" fg:w="12"/><text x="49.3668%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (204 samples, 0.20%)</title><rect x="49.0558%" y="485" width="0.1973%" height="15" fill="rgb(214,148,10)" fg:x="50710" fg:w="204"/><text x="49.3058%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (204 samples, 0.20%)</title><rect x="49.0558%" y="469" width="0.1973%" height="15" fill="rgb(225,174,27)" fg:x="50710" fg:w="204"/><text x="49.3058%" y="479.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (150 samples, 0.15%)</title><rect x="49.1081%" y="453" width="0.1451%" height="15" fill="rgb(230,96,26)" fg:x="50764" fg:w="150"/><text x="49.3581%" y="463.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (129 samples, 0.12%)</title><rect x="49.1284%" y="437" width="0.1248%" height="15" fill="rgb(232,10,30)" fg:x="50785" fg:w="129"/><text x="49.3784%" y="447.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (129 samples, 0.12%)</title><rect x="49.1284%" y="421" width="0.1248%" height="15" fill="rgb(222,8,50)" fg:x="50785" fg:w="129"/><text x="49.3784%" y="431.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (129 samples, 0.12%)</title><rect x="49.1284%" y="405" width="0.1248%" height="15" fill="rgb(213,81,27)" fg:x="50785" fg:w="129"/><text x="49.3784%" y="415.50"></text></g><g><title>snmalloc::FreeListIter::empty (110 samples, 0.11%)</title><rect x="49.2600%" y="485" width="0.1064%" height="15" fill="rgb(245,50,10)" fg:x="50921" fg:w="110"/><text x="49.5100%" y="495.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (110 samples, 0.11%)</title><rect x="49.2600%" y="469" width="0.1064%" height="15" fill="rgb(216,100,18)" fg:x="50921" fg:w="110"/><text x="49.5100%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (958 samples, 0.93%)</title><rect x="48.9833%" y="533" width="0.9267%" height="15" fill="rgb(236,147,54)" fg:x="50635" fg:w="958"/><text x="49.2333%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (958 samples, 0.93%)</title><rect x="48.9833%" y="517" width="0.9267%" height="15" fill="rgb(205,143,26)" fg:x="50635" fg:w="958"/><text x="49.2333%" y="527.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (899 samples, 0.87%)</title><rect x="49.0404%" y="501" width="0.8697%" height="15" fill="rgb(236,26,9)" fg:x="50694" fg:w="899"/><text x="49.2904%" y="511.50"></text></g><g><title>snmalloc::FreeListIter::take (562 samples, 0.54%)</title><rect x="49.3664%" y="485" width="0.5437%" height="15" fill="rgb(221,165,53)" fg:x="51031" fg:w="562"/><text x="49.6164%" y="495.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (562 samples, 0.54%)</title><rect x="49.3664%" y="469" width="0.5437%" height="15" fill="rgb(214,110,17)" fg:x="51031" fg:w="562"/><text x="49.6164%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,011 samples, 0.98%)</title><rect x="48.9398%" y="677" width="0.9780%" height="15" fill="rgb(237,197,12)" fg:x="50590" fg:w="1011"/><text x="49.1898%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,011 samples, 0.98%)</title><rect x="48.9398%" y="661" width="0.9780%" height="15" fill="rgb(205,84,17)" fg:x="50590" fg:w="1011"/><text x="49.1898%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (997 samples, 0.96%)</title><rect x="48.9533%" y="645" width="0.9645%" height="15" fill="rgb(237,18,45)" fg:x="50604" fg:w="997"/><text x="49.2033%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (997 samples, 0.96%)</title><rect x="48.9533%" y="629" width="0.9645%" height="15" fill="rgb(221,87,14)" fg:x="50604" fg:w="997"/><text x="49.2033%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (997 samples, 0.96%)</title><rect x="48.9533%" y="613" width="0.9645%" height="15" fill="rgb(238,186,15)" fg:x="50604" fg:w="997"/><text x="49.2033%" y="623.50"></text></g><g><title>alloc::alloc::alloc (987 samples, 0.95%)</title><rect x="48.9630%" y="597" width="0.9548%" height="15" fill="rgb(208,115,11)" fg:x="50614" fg:w="987"/><text x="49.2130%" y="607.50"></text></g><g><title>__rg_alloc (987 samples, 0.95%)</title><rect x="48.9630%" y="581" width="0.9548%" height="15" fill="rgb(254,175,0)" fg:x="50614" fg:w="987"/><text x="49.2130%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (987 samples, 0.95%)</title><rect x="48.9630%" y="565" width="0.9548%" height="15" fill="rgb(227,24,42)" fg:x="50614" fg:w="987"/><text x="49.2130%" y="575.50"></text></g><g><title>rust_alloc (986 samples, 0.95%)</title><rect x="48.9639%" y="549" width="0.9538%" height="15" fill="rgb(223,211,37)" fg:x="50615" fg:w="986"/><text x="49.2139%" y="559.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,072 samples, 1.04%)</title><rect x="48.9398%" y="805" width="1.0370%" height="15" fill="rgb(235,49,27)" fg:x="50590" fg:w="1072"/><text x="49.1898%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,072 samples, 1.04%)</title><rect x="48.9398%" y="789" width="1.0370%" height="15" fill="rgb(254,97,51)" fg:x="50590" fg:w="1072"/><text x="49.1898%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,072 samples, 1.04%)</title><rect x="48.9398%" y="773" width="1.0370%" height="15" fill="rgb(249,51,40)" fg:x="50590" fg:w="1072"/><text x="49.1898%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,072 samples, 1.04%)</title><rect x="48.9398%" y="757" width="1.0370%" height="15" fill="rgb(210,128,45)" fg:x="50590" fg:w="1072"/><text x="49.1898%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,072 samples, 1.04%)</title><rect x="48.9398%" y="741" width="1.0370%" height="15" fill="rgb(224,137,50)" fg:x="50590" fg:w="1072"/><text x="49.1898%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,072 samples, 1.04%)</title><rect x="48.9398%" y="725" width="1.0370%" height="15" fill="rgb(242,15,9)" fg:x="50590" fg:w="1072"/><text x="49.1898%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1,072 samples, 1.04%)</title><rect x="48.9398%" y="709" width="1.0370%" height="15" fill="rgb(233,187,41)" fg:x="50590" fg:w="1072"/><text x="49.1898%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,072 samples, 1.04%)</title><rect x="48.9398%" y="693" width="1.0370%" height="15" fill="rgb(227,2,29)" fg:x="50590" fg:w="1072"/><text x="49.1898%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (61 samples, 0.06%)</title><rect x="49.9178%" y="677" width="0.0590%" height="15" fill="rgb(222,70,3)" fg:x="51601" fg:w="61"/><text x="50.1678%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61 samples, 0.06%)</title><rect x="49.9178%" y="661" width="0.0590%" height="15" fill="rgb(213,11,42)" fg:x="51601" fg:w="61"/><text x="50.1678%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned_erms (45 samples, 0.04%)</title><rect x="49.9333%" y="645" width="0.0435%" height="15" fill="rgb(225,150,9)" fg:x="51617" fg:w="45"/><text x="50.1833%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,536 samples, 1.49%)</title><rect x="49.9768%" y="805" width="1.4859%" height="15" fill="rgb(230,162,45)" fg:x="51662" fg:w="1536"/><text x="50.2268%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (12 samples, 0.01%)</title><rect x="51.4675%" y="789" width="0.0116%" height="15" fill="rgb(222,14,52)" fg:x="53203" fg:w="12"/><text x="51.7175%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (23 samples, 0.02%)</title><rect x="51.4627%" y="805" width="0.0222%" height="15" fill="rgb(254,198,14)" fg:x="53198" fg:w="23"/><text x="51.7127%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (29 samples, 0.03%)</title><rect x="51.4849%" y="805" width="0.0281%" height="15" fill="rgb(220,217,30)" fg:x="53221" fg:w="29"/><text x="51.7349%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="51.4849%" y="789" width="0.0281%" height="15" fill="rgb(215,146,41)" fg:x="53221" fg:w="29"/><text x="51.7349%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="51.5014%" y="773" width="0.0116%" height="15" fill="rgb(217,27,36)" fg:x="53238" fg:w="12"/><text x="51.7514%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="51.5014%" y="757" width="0.0116%" height="15" fill="rgb(219,218,39)" fg:x="53238" fg:w="12"/><text x="51.7514%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (16 samples, 0.02%)</title><rect x="51.5130%" y="805" width="0.0155%" height="15" fill="rgb(219,4,42)" fg:x="53250" fg:w="16"/><text x="51.7630%" y="815.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="51.5130%" y="789" width="0.0155%" height="15" fill="rgb(249,119,36)" fg:x="53250" fg:w="16"/><text x="51.7630%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="51.5285%" y="805" width="0.0174%" height="15" fill="rgb(209,23,33)" fg:x="53266" fg:w="18"/><text x="51.7785%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt; (16 samples, 0.02%)</title><rect x="51.5304%" y="789" width="0.0155%" height="15" fill="rgb(211,10,0)" fg:x="53268" fg:w="16"/><text x="51.7804%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (35 samples, 0.03%)</title><rect x="51.5459%" y="805" width="0.0339%" height="15" fill="rgb(208,99,37)" fg:x="53284" fg:w="35"/><text x="51.7959%" y="815.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (14 samples, 0.01%)</title><rect x="51.5971%" y="789" width="0.0135%" height="15" fill="rgb(213,132,31)" fg:x="53337" fg:w="14"/><text x="51.8471%" y="799.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (17 samples, 0.02%)</title><rect x="51.6136%" y="757" width="0.0164%" height="15" fill="rgb(243,129,40)" fg:x="53354" fg:w="17"/><text x="51.8636%" y="767.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (231 samples, 0.22%)</title><rect x="51.6136%" y="773" width="0.2235%" height="15" fill="rgb(210,66,33)" fg:x="53354" fg:w="231"/><text x="51.8636%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (214 samples, 0.21%)</title><rect x="51.6300%" y="757" width="0.2070%" height="15" fill="rgb(209,189,4)" fg:x="53371" fg:w="214"/><text x="51.8800%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (214 samples, 0.21%)</title><rect x="51.6300%" y="741" width="0.2070%" height="15" fill="rgb(214,107,37)" fg:x="53371" fg:w="214"/><text x="51.8800%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (214 samples, 0.21%)</title><rect x="51.6300%" y="725" width="0.2070%" height="15" fill="rgb(245,88,54)" fg:x="53371" fg:w="214"/><text x="51.8800%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (214 samples, 0.21%)</title><rect x="51.6300%" y="709" width="0.2070%" height="15" fill="rgb(205,146,20)" fg:x="53371" fg:w="214"/><text x="51.8800%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (214 samples, 0.21%)</title><rect x="51.6300%" y="693" width="0.2070%" height="15" fill="rgb(220,161,25)" fg:x="53371" fg:w="214"/><text x="51.8800%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (136 samples, 0.13%)</title><rect x="51.7055%" y="677" width="0.1316%" height="15" fill="rgb(215,152,15)" fg:x="53449" fg:w="136"/><text x="51.9555%" y="687.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (267 samples, 0.26%)</title><rect x="51.5797%" y="805" width="0.2583%" height="15" fill="rgb(233,192,44)" fg:x="53319" fg:w="267"/><text x="51.8297%" y="815.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (235 samples, 0.23%)</title><rect x="51.6107%" y="789" width="0.2273%" height="15" fill="rgb(240,170,46)" fg:x="53351" fg:w="235"/><text x="51.8607%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,883 samples, 8.59%)</title><rect x="43.3367%" y="1141" width="8.5932%" height="15" fill="rgb(207,104,33)" fg:x="44798" fg:w="8883"/><text x="43.5867%" y="1151.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,875 samples, 8.59%)</title><rect x="43.3444%" y="1125" width="8.5855%" height="15" fill="rgb(219,21,39)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1135.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}} (8,875 samples, 8.59%)</title><rect x="43.3444%" y="1109" width="8.5855%" height="15" fill="rgb(214,133,29)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1119.50">async_execut..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8,875 samples, 8.59%)</title><rect x="43.3444%" y="1093" width="8.5855%" height="15" fill="rgb(226,93,6)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1103.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,875 samples, 8.59%)</title><rect x="43.3444%" y="1077" width="8.5855%" height="15" fill="rgb(252,222,34)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1087.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8,875 samples, 8.59%)</title><rect x="43.3444%" y="1061" width="8.5855%" height="15" fill="rgb(252,92,48)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1071.50">async_execut..</text></g><g><title>async_task::runnable::Runnable::run (8,875 samples, 8.59%)</title><rect x="43.3444%" y="1045" width="8.5855%" height="15" fill="rgb(245,223,24)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1055.50">async_task::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,875 samples, 8.59%)</title><rect x="43.3444%" y="1029" width="8.5855%" height="15" fill="rgb(205,176,3)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1039.50">async_task::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,875 samples, 8.59%)</title><rect x="43.3444%" y="1013" width="8.5855%" height="15" fill="rgb(235,151,15)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1023.50">&lt;core::pin::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,875 samples, 8.59%)</title><rect x="43.3444%" y="997" width="8.5855%" height="15" fill="rgb(237,209,11)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="1007.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,875 samples, 8.59%)</title><rect x="43.3444%" y="981" width="8.5855%" height="15" fill="rgb(243,227,24)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="991.50">async_execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,875 samples, 8.59%)</title><rect x="43.3444%" y="965" width="8.5855%" height="15" fill="rgb(239,193,16)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="975.50">&lt;async_std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,875 samples, 8.59%)</title><rect x="43.3444%" y="949" width="8.5855%" height="15" fill="rgb(231,27,9)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="959.50">async_std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,875 samples, 8.59%)</title><rect x="43.3444%" y="933" width="8.5855%" height="15" fill="rgb(219,169,10)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="943.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,875 samples, 8.59%)</title><rect x="43.3444%" y="917" width="8.5855%" height="15" fill="rgb(244,229,43)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="927.50">std::thread:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,875 samples, 8.59%)</title><rect x="43.3444%" y="901" width="8.5855%" height="15" fill="rgb(254,38,20)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="911.50">async_std::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,875 samples, 8.59%)</title><rect x="43.3444%" y="885" width="8.5855%" height="15" fill="rgb(250,47,30)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="895.50">&lt;async_std::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,875 samples, 8.59%)</title><rect x="43.3444%" y="869" width="8.5855%" height="15" fill="rgb(224,124,36)" fg:x="44806" fg:w="8875"/><text x="43.5944%" y="879.50">&lt;core::futur..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,806 samples, 5.62%)</title><rect x="46.3133%" y="853" width="5.6166%" height="15" fill="rgb(246,68,51)" fg:x="47875" fg:w="5806"/><text x="46.5633%" y="863.50">tremor_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,208 samples, 4.07%)</title><rect x="47.8592%" y="837" width="4.0707%" height="15" fill="rgb(253,43,49)" fg:x="49473" fg:w="4208"/><text x="48.1092%" y="847.50">&lt;cor..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,701 samples, 3.58%)</title><rect x="48.3496%" y="821" width="3.5803%" height="15" fill="rgb(219,54,36)" fg:x="49980" fg:w="3701"/><text x="48.5996%" y="831.50">trem..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (95 samples, 0.09%)</title><rect x="51.8380%" y="805" width="0.0919%" height="15" fill="rgb(227,133,34)" fg:x="53586" fg:w="95"/><text x="52.0880%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (95 samples, 0.09%)</title><rect x="51.8380%" y="789" width="0.0919%" height="15" fill="rgb(247,227,15)" fg:x="53586" fg:w="95"/><text x="52.0880%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (95 samples, 0.09%)</title><rect x="51.8380%" y="773" width="0.0919%" height="15" fill="rgb(229,96,14)" fg:x="53586" fg:w="95"/><text x="52.0880%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (61 samples, 0.06%)</title><rect x="51.8709%" y="757" width="0.0590%" height="15" fill="rgb(220,79,17)" fg:x="53620" fg:w="61"/><text x="52.1209%" y="767.50"></text></g><g><title>async_io::driver::block_on (8,889 samples, 8.60%)</title><rect x="43.3357%" y="1157" width="8.5990%" height="15" fill="rgb(205,131,53)" fg:x="44797" fg:w="8889"/><text x="43.5857%" y="1167.50">async_io::dr..</text></g><g><title>aligned_size (16 samples, 0.02%)</title><rect x="52.5790%" y="789" width="0.0155%" height="15" fill="rgb(209,50,29)" fg:x="54352" fg:w="16"/><text x="52.8290%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (14 samples, 0.01%)</title><rect x="52.6129%" y="709" width="0.0135%" height="15" fill="rgb(245,86,46)" fg:x="54387" fg:w="14"/><text x="52.8629%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (82 samples, 0.08%)</title><rect x="52.6129%" y="741" width="0.0793%" height="15" fill="rgb(235,66,46)" fg:x="54387" fg:w="82"/><text x="52.8629%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (82 samples, 0.08%)</title><rect x="52.6129%" y="725" width="0.0793%" height="15" fill="rgb(232,148,31)" fg:x="54387" fg:w="82"/><text x="52.8629%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (68 samples, 0.07%)</title><rect x="52.6264%" y="709" width="0.0658%" height="15" fill="rgb(217,149,8)" fg:x="54401" fg:w="68"/><text x="52.8764%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (55 samples, 0.05%)</title><rect x="52.6390%" y="693" width="0.0532%" height="15" fill="rgb(209,183,11)" fg:x="54414" fg:w="55"/><text x="52.8890%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="52.6390%" y="677" width="0.0532%" height="15" fill="rgb(208,55,20)" fg:x="54414" fg:w="55"/><text x="52.8890%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (55 samples, 0.05%)</title><rect x="52.6390%" y="661" width="0.0532%" height="15" fill="rgb(218,39,14)" fg:x="54414" fg:w="55"/><text x="52.8890%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (398 samples, 0.39%)</title><rect x="52.5955%" y="789" width="0.3850%" height="15" fill="rgb(216,169,33)" fg:x="54369" fg:w="398"/><text x="52.8455%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (398 samples, 0.39%)</title><rect x="52.5955%" y="773" width="0.3850%" height="15" fill="rgb(233,80,24)" fg:x="54369" fg:w="398"/><text x="52.8455%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (385 samples, 0.37%)</title><rect x="52.6081%" y="757" width="0.3724%" height="15" fill="rgb(213,179,31)" fg:x="54382" fg:w="385"/><text x="52.8581%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (282 samples, 0.27%)</title><rect x="52.7077%" y="741" width="0.2728%" height="15" fill="rgb(209,19,5)" fg:x="54485" fg:w="282"/><text x="52.9577%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (282 samples, 0.27%)</title><rect x="52.7077%" y="725" width="0.2728%" height="15" fill="rgb(219,18,35)" fg:x="54485" fg:w="282"/><text x="52.9577%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (429 samples, 0.42%)</title><rect x="52.5742%" y="901" width="0.4150%" height="15" fill="rgb(209,169,16)" fg:x="54347" fg:w="429"/><text x="52.8242%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (429 samples, 0.42%)</title><rect x="52.5742%" y="885" width="0.4150%" height="15" fill="rgb(245,90,51)" fg:x="54347" fg:w="429"/><text x="52.8242%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (429 samples, 0.42%)</title><rect x="52.5742%" y="869" width="0.4150%" height="15" fill="rgb(220,99,45)" fg:x="54347" fg:w="429"/><text x="52.8242%" y="879.50"></text></g><g><title>alloc::alloc::alloc (428 samples, 0.41%)</title><rect x="52.5752%" y="853" width="0.4140%" height="15" fill="rgb(249,89,25)" fg:x="54348" fg:w="428"/><text x="52.8252%" y="863.50"></text></g><g><title>__rg_alloc (428 samples, 0.41%)</title><rect x="52.5752%" y="837" width="0.4140%" height="15" fill="rgb(239,193,0)" fg:x="54348" fg:w="428"/><text x="52.8252%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (428 samples, 0.41%)</title><rect x="52.5752%" y="821" width="0.4140%" height="15" fill="rgb(231,126,1)" fg:x="54348" fg:w="428"/><text x="52.8252%" y="831.50"></text></g><g><title>rust_alloc (424 samples, 0.41%)</title><rect x="52.5790%" y="805" width="0.4102%" height="15" fill="rgb(243,166,3)" fg:x="54352" fg:w="424"/><text x="52.8290%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (13 samples, 0.01%)</title><rect x="52.9892%" y="901" width="0.0126%" height="15" fill="rgb(223,22,34)" fg:x="54776" fg:w="13"/><text x="53.2392%" y="911.50"></text></g><g><title>alloc::slice::hack::into_vec (13 samples, 0.01%)</title><rect x="52.9892%" y="885" width="0.0126%" height="15" fill="rgb(251,52,51)" fg:x="54776" fg:w="13"/><text x="53.2392%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (13 samples, 0.01%)</title><rect x="52.9892%" y="869" width="0.0126%" height="15" fill="rgb(221,165,28)" fg:x="54776" fg:w="13"/><text x="53.2392%" y="879.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (1,125 samples, 1.09%)</title><rect x="51.9357%" y="917" width="1.0883%" height="15" fill="rgb(218,121,47)" fg:x="53687" fg:w="1125"/><text x="52.1857%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (171 samples, 0.17%)</title><rect x="53.4758%" y="901" width="0.1654%" height="15" fill="rgb(209,120,9)" fg:x="55279" fg:w="171"/><text x="53.7258%" y="911.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (48 samples, 0.05%)</title><rect x="53.6857%" y="741" width="0.0464%" height="15" fill="rgb(236,68,12)" fg:x="55496" fg:w="48"/><text x="53.9357%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (48 samples, 0.05%)</title><rect x="53.6857%" y="725" width="0.0464%" height="15" fill="rgb(225,194,26)" fg:x="55496" fg:w="48"/><text x="53.9357%" y="735.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (41 samples, 0.04%)</title><rect x="53.6925%" y="709" width="0.0397%" height="15" fill="rgb(231,84,39)" fg:x="55503" fg:w="41"/><text x="53.9425%" y="719.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (36 samples, 0.03%)</title><rect x="53.6973%" y="693" width="0.0348%" height="15" fill="rgb(210,11,45)" fg:x="55508" fg:w="36"/><text x="53.9473%" y="703.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="53.6973%" y="677" width="0.0348%" height="15" fill="rgb(224,54,52)" fg:x="55508" fg:w="36"/><text x="53.9473%" y="687.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (36 samples, 0.03%)</title><rect x="53.6973%" y="661" width="0.0348%" height="15" fill="rgb(238,102,14)" fg:x="55508" fg:w="36"/><text x="53.9473%" y="671.50"></text></g><g><title>snmalloc::FreeListIter::empty (14 samples, 0.01%)</title><rect x="53.7418%" y="741" width="0.0135%" height="15" fill="rgb(243,160,52)" fg:x="55554" fg:w="14"/><text x="53.9918%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (14 samples, 0.01%)</title><rect x="53.7418%" y="725" width="0.0135%" height="15" fill="rgb(216,114,19)" fg:x="55554" fg:w="14"/><text x="53.9918%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (232 samples, 0.22%)</title><rect x="53.6635%" y="789" width="0.2244%" height="15" fill="rgb(244,166,37)" fg:x="55473" fg:w="232"/><text x="53.9135%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (220 samples, 0.21%)</title><rect x="53.6751%" y="773" width="0.2128%" height="15" fill="rgb(246,29,44)" fg:x="55485" fg:w="220"/><text x="53.9251%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (212 samples, 0.21%)</title><rect x="53.6828%" y="757" width="0.2051%" height="15" fill="rgb(215,56,53)" fg:x="55493" fg:w="212"/><text x="53.9328%" y="767.50"></text></g><g><title>snmalloc::FreeListIter::take (137 samples, 0.13%)</title><rect x="53.7554%" y="741" width="0.1325%" height="15" fill="rgb(217,60,2)" fg:x="55568" fg:w="137"/><text x="54.0054%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (137 samples, 0.13%)</title><rect x="53.7554%" y="725" width="0.1325%" height="15" fill="rgb(207,26,24)" fg:x="55568" fg:w="137"/><text x="54.0054%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (271 samples, 0.26%)</title><rect x="53.6412%" y="901" width="0.2622%" height="15" fill="rgb(252,210,15)" fg:x="55450" fg:w="271"/><text x="53.8912%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (271 samples, 0.26%)</title><rect x="53.6412%" y="885" width="0.2622%" height="15" fill="rgb(253,209,26)" fg:x="55450" fg:w="271"/><text x="53.8912%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (271 samples, 0.26%)</title><rect x="53.6412%" y="869" width="0.2622%" height="15" fill="rgb(238,170,14)" fg:x="55450" fg:w="271"/><text x="53.8912%" y="879.50"></text></g><g><title>alloc::alloc::alloc (271 samples, 0.26%)</title><rect x="53.6412%" y="853" width="0.2622%" height="15" fill="rgb(216,178,15)" fg:x="55450" fg:w="271"/><text x="53.8912%" y="863.50"></text></g><g><title>__rg_alloc (271 samples, 0.26%)</title><rect x="53.6412%" y="837" width="0.2622%" height="15" fill="rgb(250,197,2)" fg:x="55450" fg:w="271"/><text x="53.8912%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (271 samples, 0.26%)</title><rect x="53.6412%" y="821" width="0.2622%" height="15" fill="rgb(212,70,42)" fg:x="55450" fg:w="271"/><text x="53.8912%" y="831.50"></text></g><g><title>rust_alloc (252 samples, 0.24%)</title><rect x="53.6596%" y="805" width="0.2438%" height="15" fill="rgb(227,213,9)" fg:x="55469" fg:w="252"/><text x="53.9096%" y="815.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="53.8879%" y="789" width="0.0155%" height="15" fill="rgb(245,99,25)" fg:x="55705" fg:w="16"/><text x="54.1379%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (13 samples, 0.01%)</title><rect x="53.9517%" y="661" width="0.0126%" height="15" fill="rgb(250,82,29)" fg:x="55771" fg:w="13"/><text x="54.2017%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (13 samples, 0.01%)</title><rect x="53.9517%" y="645" width="0.0126%" height="15" fill="rgb(241,226,54)" fg:x="55771" fg:w="13"/><text x="54.2017%" y="655.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (11 samples, 0.01%)</title><rect x="53.9537%" y="629" width="0.0106%" height="15" fill="rgb(221,99,41)" fg:x="55773" fg:w="11"/><text x="54.2037%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (16 samples, 0.02%)</title><rect x="53.9517%" y="677" width="0.0155%" height="15" fill="rgb(213,90,21)" fg:x="55771" fg:w="16"/><text x="54.2017%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (28 samples, 0.03%)</title><rect x="53.9459%" y="693" width="0.0271%" height="15" fill="rgb(205,208,24)" fg:x="55765" fg:w="28"/><text x="54.1959%" y="703.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (11 samples, 0.01%)</title><rect x="53.9788%" y="677" width="0.0106%" height="15" fill="rgb(246,31,12)" fg:x="55799" fg:w="11"/><text x="54.2288%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (112 samples, 0.11%)</title><rect x="53.9459%" y="725" width="0.1083%" height="15" fill="rgb(213,154,6)" fg:x="55765" fg:w="112"/><text x="54.1959%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (112 samples, 0.11%)</title><rect x="53.9459%" y="709" width="0.1083%" height="15" fill="rgb(222,163,29)" fg:x="55765" fg:w="112"/><text x="54.1959%" y="719.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (84 samples, 0.08%)</title><rect x="53.9730%" y="693" width="0.0813%" height="15" fill="rgb(227,201,8)" fg:x="55793" fg:w="84"/><text x="54.2230%" y="703.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (67 samples, 0.06%)</title><rect x="53.9895%" y="677" width="0.0648%" height="15" fill="rgb(233,9,32)" fg:x="55810" fg:w="67"/><text x="54.2395%" y="687.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (67 samples, 0.06%)</title><rect x="53.9895%" y="661" width="0.0648%" height="15" fill="rgb(217,54,24)" fg:x="55810" fg:w="67"/><text x="54.2395%" y="671.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (67 samples, 0.06%)</title><rect x="53.9895%" y="645" width="0.0648%" height="15" fill="rgb(235,192,0)" fg:x="55810" fg:w="67"/><text x="54.2395%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.04%)</title><rect x="54.0601%" y="725" width="0.0358%" height="15" fill="rgb(235,45,9)" fg:x="55883" fg:w="37"/><text x="54.3101%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.04%)</title><rect x="54.0601%" y="709" width="0.0358%" height="15" fill="rgb(246,42,40)" fg:x="55883" fg:w="37"/><text x="54.3101%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (37 samples, 0.04%)</title><rect x="54.0601%" y="693" width="0.0358%" height="15" fill="rgb(248,111,24)" fg:x="55883" fg:w="37"/><text x="54.3101%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (36 samples, 0.03%)</title><rect x="54.0611%" y="677" width="0.0348%" height="15" fill="rgb(249,65,22)" fg:x="55884" fg:w="36"/><text x="54.3111%" y="687.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (36 samples, 0.03%)</title><rect x="54.0611%" y="661" width="0.0348%" height="15" fill="rgb(238,111,51)" fg:x="55884" fg:w="36"/><text x="54.3111%" y="671.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (16 samples, 0.02%)</title><rect x="54.0804%" y="645" width="0.0155%" height="15" fill="rgb(250,118,22)" fg:x="55904" fg:w="16"/><text x="54.3304%" y="655.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (16 samples, 0.02%)</title><rect x="54.0804%" y="629" width="0.0155%" height="15" fill="rgb(234,84,26)" fg:x="55904" fg:w="16"/><text x="54.3304%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (222 samples, 0.21%)</title><rect x="53.9334%" y="773" width="0.2148%" height="15" fill="rgb(243,172,12)" fg:x="55752" fg:w="222"/><text x="54.1834%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (222 samples, 0.21%)</title><rect x="53.9334%" y="757" width="0.2148%" height="15" fill="rgb(236,150,49)" fg:x="55752" fg:w="222"/><text x="54.1834%" y="767.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (212 samples, 0.21%)</title><rect x="53.9430%" y="741" width="0.2051%" height="15" fill="rgb(225,197,26)" fg:x="55762" fg:w="212"/><text x="54.1930%" y="751.50"></text></g><g><title>snmalloc::FreeListIter::take (52 samples, 0.05%)</title><rect x="54.0978%" y="725" width="0.0503%" height="15" fill="rgb(214,17,42)" fg:x="55922" fg:w="52"/><text x="54.3478%" y="735.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (52 samples, 0.05%)</title><rect x="54.0978%" y="709" width="0.0503%" height="15" fill="rgb(224,165,40)" fg:x="55922" fg:w="52"/><text x="54.3478%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (260 samples, 0.25%)</title><rect x="53.9034%" y="901" width="0.2515%" height="15" fill="rgb(246,100,4)" fg:x="55721" fg:w="260"/><text x="54.1534%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (242 samples, 0.23%)</title><rect x="53.9208%" y="885" width="0.2341%" height="15" fill="rgb(222,103,0)" fg:x="55739" fg:w="242"/><text x="54.1708%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (242 samples, 0.23%)</title><rect x="53.9208%" y="869" width="0.2341%" height="15" fill="rgb(227,189,26)" fg:x="55739" fg:w="242"/><text x="54.1708%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (242 samples, 0.23%)</title><rect x="53.9208%" y="853" width="0.2341%" height="15" fill="rgb(214,202,17)" fg:x="55739" fg:w="242"/><text x="54.1708%" y="863.50"></text></g><g><title>alloc::alloc::alloc (241 samples, 0.23%)</title><rect x="53.9218%" y="837" width="0.2331%" height="15" fill="rgb(229,111,3)" fg:x="55740" fg:w="241"/><text x="54.1718%" y="847.50"></text></g><g><title>__rg_alloc (241 samples, 0.23%)</title><rect x="53.9218%" y="821" width="0.2331%" height="15" fill="rgb(229,172,15)" fg:x="55740" fg:w="241"/><text x="54.1718%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (241 samples, 0.23%)</title><rect x="53.9218%" y="805" width="0.2331%" height="15" fill="rgb(230,224,35)" fg:x="55740" fg:w="241"/><text x="54.1718%" y="815.50"></text></g><g><title>rust_alloc (238 samples, 0.23%)</title><rect x="53.9247%" y="789" width="0.2302%" height="15" fill="rgb(251,141,6)" fg:x="55743" fg:w="238"/><text x="54.1747%" y="799.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (22 samples, 0.02%)</title><rect x="54.1549%" y="901" width="0.0213%" height="15" fill="rgb(225,208,6)" fg:x="55981" fg:w="22"/><text x="54.4049%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (22 samples, 0.02%)</title><rect x="54.1549%" y="885" width="0.0213%" height="15" fill="rgb(246,181,16)" fg:x="55981" fg:w="22"/><text x="54.4049%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (22 samples, 0.02%)</title><rect x="54.1549%" y="869" width="0.0213%" height="15" fill="rgb(227,129,36)" fg:x="55981" fg:w="22"/><text x="54.4049%" y="879.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (30 samples, 0.03%)</title><rect x="54.4828%" y="885" width="0.0290%" height="15" fill="rgb(248,117,24)" fg:x="56320" fg:w="30"/><text x="54.7328%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="54.8843%" y="693" width="0.0106%" height="15" fill="rgb(214,185,35)" fg:x="56735" fg:w="11"/><text x="55.1343%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (11 samples, 0.01%)</title><rect x="54.8949%" y="677" width="0.0106%" height="15" fill="rgb(236,150,34)" fg:x="56746" fg:w="11"/><text x="55.1449%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.06%)</title><rect x="54.8601%" y="741" width="0.0609%" height="15" fill="rgb(243,228,27)" fg:x="56710" fg:w="63"/><text x="55.1101%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.05%)</title><rect x="54.8698%" y="725" width="0.0513%" height="15" fill="rgb(245,77,44)" fg:x="56720" fg:w="53"/><text x="55.1198%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.04%)</title><rect x="54.8843%" y="709" width="0.0368%" height="15" fill="rgb(235,214,42)" fg:x="56735" fg:w="38"/><text x="55.1343%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.03%)</title><rect x="54.8949%" y="693" width="0.0261%" height="15" fill="rgb(221,74,3)" fg:x="56746" fg:w="27"/><text x="55.1449%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.02%)</title><rect x="54.9056%" y="677" width="0.0155%" height="15" fill="rgb(206,121,29)" fg:x="56757" fg:w="16"/><text x="55.1556%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16 samples, 0.02%)</title><rect x="54.9056%" y="661" width="0.0155%" height="15" fill="rgb(249,131,53)" fg:x="56757" fg:w="16"/><text x="55.1556%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (16 samples, 0.02%)</title><rect x="54.9056%" y="645" width="0.0155%" height="15" fill="rgb(236,170,29)" fg:x="56757" fg:w="16"/><text x="55.1556%" y="655.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (391 samples, 0.38%)</title><rect x="54.5515%" y="837" width="0.3782%" height="15" fill="rgb(247,96,15)" fg:x="56391" fg:w="391"/><text x="54.8015%" y="847.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (333 samples, 0.32%)</title><rect x="54.6076%" y="821" width="0.3221%" height="15" fill="rgb(211,210,7)" fg:x="56449" fg:w="333"/><text x="54.8576%" y="831.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (321 samples, 0.31%)</title><rect x="54.6192%" y="805" width="0.3105%" height="15" fill="rgb(240,88,50)" fg:x="56461" fg:w="321"/><text x="54.8692%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106 samples, 0.10%)</title><rect x="54.8272%" y="789" width="0.1025%" height="15" fill="rgb(209,229,26)" fg:x="56676" fg:w="106"/><text x="55.0772%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (72 samples, 0.07%)</title><rect x="54.8601%" y="773" width="0.0697%" height="15" fill="rgb(210,68,23)" fg:x="56710" fg:w="72"/><text x="55.1101%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (72 samples, 0.07%)</title><rect x="54.8601%" y="757" width="0.0697%" height="15" fill="rgb(229,180,13)" fg:x="56710" fg:w="72"/><text x="55.1101%" y="767.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (437 samples, 0.42%)</title><rect x="54.5515%" y="853" width="0.4227%" height="15" fill="rgb(236,53,44)" fg:x="56391" fg:w="437"/><text x="54.8015%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (46 samples, 0.04%)</title><rect x="54.9298%" y="837" width="0.0445%" height="15" fill="rgb(244,214,29)" fg:x="56782" fg:w="46"/><text x="55.1798%" y="847.50"></text></g><g><title>core::ptr::write (46 samples, 0.04%)</title><rect x="54.9298%" y="821" width="0.0445%" height="15" fill="rgb(220,75,29)" fg:x="56782" fg:w="46"/><text x="55.1798%" y="831.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (18 samples, 0.02%)</title><rect x="55.0023%" y="613" width="0.0174%" height="15" fill="rgb(214,183,37)" fg:x="56857" fg:w="18"/><text x="55.2523%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (18 samples, 0.02%)</title><rect x="55.0023%" y="597" width="0.0174%" height="15" fill="rgb(239,117,29)" fg:x="56857" fg:w="18"/><text x="55.2523%" y="607.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (13 samples, 0.01%)</title><rect x="55.0072%" y="581" width="0.0126%" height="15" fill="rgb(237,171,35)" fg:x="56862" fg:w="13"/><text x="55.2572%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (23 samples, 0.02%)</title><rect x="55.0023%" y="629" width="0.0222%" height="15" fill="rgb(229,178,53)" fg:x="56857" fg:w="23"/><text x="55.2523%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (32 samples, 0.03%)</title><rect x="54.9994%" y="645" width="0.0310%" height="15" fill="rgb(210,102,19)" fg:x="56854" fg:w="32"/><text x="55.2494%" y="655.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (16 samples, 0.02%)</title><rect x="55.0410%" y="629" width="0.0155%" height="15" fill="rgb(235,127,22)" fg:x="56897" fg:w="16"/><text x="55.2910%" y="639.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (149 samples, 0.14%)</title><rect x="54.9994%" y="677" width="0.1441%" height="15" fill="rgb(244,31,31)" fg:x="56854" fg:w="149"/><text x="55.2494%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (149 samples, 0.14%)</title><rect x="54.9994%" y="661" width="0.1441%" height="15" fill="rgb(231,43,21)" fg:x="56854" fg:w="149"/><text x="55.2494%" y="671.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (117 samples, 0.11%)</title><rect x="55.0304%" y="645" width="0.1132%" height="15" fill="rgb(217,131,35)" fg:x="56886" fg:w="117"/><text x="55.2804%" y="655.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (90 samples, 0.09%)</title><rect x="55.0565%" y="629" width="0.0871%" height="15" fill="rgb(221,149,4)" fg:x="56913" fg:w="90"/><text x="55.3065%" y="639.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (90 samples, 0.09%)</title><rect x="55.0565%" y="613" width="0.0871%" height="15" fill="rgb(232,170,28)" fg:x="56913" fg:w="90"/><text x="55.3065%" y="623.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (90 samples, 0.09%)</title><rect x="55.0565%" y="597" width="0.0871%" height="15" fill="rgb(238,56,10)" fg:x="56913" fg:w="90"/><text x="55.3065%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="55.1503%" y="677" width="0.0232%" height="15" fill="rgb(235,196,14)" fg:x="57010" fg:w="24"/><text x="55.4003%" y="687.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="55.1503%" y="661" width="0.0232%" height="15" fill="rgb(216,45,48)" fg:x="57010" fg:w="24"/><text x="55.4003%" y="671.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="55.1503%" y="645" width="0.0232%" height="15" fill="rgb(238,213,17)" fg:x="57010" fg:w="24"/><text x="55.4003%" y="655.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (24 samples, 0.02%)</title><rect x="55.1503%" y="629" width="0.0232%" height="15" fill="rgb(212,13,2)" fg:x="57010" fg:w="24"/><text x="55.4003%" y="639.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (24 samples, 0.02%)</title><rect x="55.1503%" y="613" width="0.0232%" height="15" fill="rgb(240,114,20)" fg:x="57010" fg:w="24"/><text x="55.4003%" y="623.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (13 samples, 0.01%)</title><rect x="55.1610%" y="597" width="0.0126%" height="15" fill="rgb(228,41,40)" fg:x="57021" fg:w="13"/><text x="55.4110%" y="607.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (13 samples, 0.01%)</title><rect x="55.1610%" y="581" width="0.0126%" height="15" fill="rgb(244,132,35)" fg:x="57021" fg:w="13"/><text x="55.4110%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (268 samples, 0.26%)</title><rect x="54.9791%" y="725" width="0.2593%" height="15" fill="rgb(253,189,4)" fg:x="56833" fg:w="268"/><text x="55.2291%" y="735.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (268 samples, 0.26%)</title><rect x="54.9791%" y="709" width="0.2593%" height="15" fill="rgb(224,37,19)" fg:x="56833" fg:w="268"/><text x="55.2291%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (258 samples, 0.25%)</title><rect x="54.9888%" y="693" width="0.2496%" height="15" fill="rgb(235,223,18)" fg:x="56843" fg:w="258"/><text x="55.2388%" y="703.50"></text></g><g><title>snmalloc::FreeListIter::take (66 samples, 0.06%)</title><rect x="55.1745%" y="677" width="0.0638%" height="15" fill="rgb(235,163,25)" fg:x="57035" fg:w="66"/><text x="55.4245%" y="687.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (66 samples, 0.06%)</title><rect x="55.1745%" y="661" width="0.0638%" height="15" fill="rgb(217,145,28)" fg:x="57035" fg:w="66"/><text x="55.4245%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (718 samples, 0.69%)</title><rect x="54.5448%" y="869" width="0.6946%" height="15" fill="rgb(223,223,32)" fg:x="56384" fg:w="718"/><text x="54.7948%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (274 samples, 0.27%)</title><rect x="54.9743%" y="853" width="0.2651%" height="15" fill="rgb(227,189,39)" fg:x="56828" fg:w="274"/><text x="55.2243%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (274 samples, 0.27%)</title><rect x="54.9743%" y="837" width="0.2651%" height="15" fill="rgb(248,10,22)" fg:x="56828" fg:w="274"/><text x="55.2243%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (274 samples, 0.27%)</title><rect x="54.9743%" y="821" width="0.2651%" height="15" fill="rgb(248,46,39)" fg:x="56828" fg:w="274"/><text x="55.2243%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (274 samples, 0.27%)</title><rect x="54.9743%" y="805" width="0.2651%" height="15" fill="rgb(248,113,48)" fg:x="56828" fg:w="274"/><text x="55.2243%" y="815.50"></text></g><g><title>alloc::alloc::alloc (274 samples, 0.27%)</title><rect x="54.9743%" y="789" width="0.2651%" height="15" fill="rgb(245,16,25)" fg:x="56828" fg:w="274"/><text x="55.2243%" y="799.50"></text></g><g><title>__rg_alloc (274 samples, 0.27%)</title><rect x="54.9743%" y="773" width="0.2651%" height="15" fill="rgb(249,152,16)" fg:x="56828" fg:w="274"/><text x="55.2243%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (274 samples, 0.27%)</title><rect x="54.9743%" y="757" width="0.2651%" height="15" fill="rgb(250,16,1)" fg:x="56828" fg:w="274"/><text x="55.2243%" y="767.50"></text></g><g><title>rust_alloc (274 samples, 0.27%)</title><rect x="54.9743%" y="741" width="0.2651%" height="15" fill="rgb(249,138,3)" fg:x="56828" fg:w="274"/><text x="55.2243%" y="751.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (754 samples, 0.73%)</title><rect x="54.5119%" y="885" width="0.7294%" height="15" fill="rgb(227,71,41)" fg:x="56350" fg:w="754"/><text x="54.7619%" y="895.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,728 samples, 3.61%)</title><rect x="51.9357%" y="981" width="3.6064%" height="15" fill="rgb(209,184,23)" fg:x="53687" fg:w="3728"/><text x="52.1857%" y="991.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,728 samples, 3.61%)</title><rect x="51.9357%" y="965" width="3.6064%" height="15" fill="rgb(223,215,31)" fg:x="53687" fg:w="3728"/><text x="52.1857%" y="975.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,728 samples, 3.61%)</title><rect x="51.9357%" y="949" width="3.6064%" height="15" fill="rgb(210,146,28)" fg:x="53687" fg:w="3728"/><text x="52.1857%" y="959.50">trem..</text></g><g><title>tremor_runtime::connectors::source::build_events (3,728 samples, 3.61%)</title><rect x="51.9357%" y="933" width="3.6064%" height="15" fill="rgb(209,183,41)" fg:x="53687" fg:w="3728"/><text x="52.1857%" y="943.50">trem..</text></g><g><title>tremor_script::srs::EventPayload::try_new (2,603 samples, 2.52%)</title><rect x="53.0240%" y="917" width="2.5181%" height="15" fill="rgb(209,224,45)" fg:x="54812" fg:w="2603"/><text x="53.2740%" y="927.50">tr..</text></g><g><title>tremor_runtime::connectors::source::build_events::{{closure}} (1,412 samples, 1.37%)</title><rect x="54.1762%" y="901" width="1.3659%" height="15" fill="rgb(224,209,51)" fg:x="56003" fg:w="1412"/><text x="54.4262%" y="911.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (311 samples, 0.30%)</title><rect x="55.2413%" y="885" width="0.3009%" height="15" fill="rgb(223,17,39)" fg:x="57104" fg:w="311"/><text x="55.4913%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="55.7133%" y="869" width="0.0106%" height="15" fill="rgb(234,204,37)" fg:x="57592" fg:w="11"/><text x="55.9633%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (20 samples, 0.02%)</title><rect x="55.7240%" y="869" width="0.0193%" height="15" fill="rgb(236,120,5)" fg:x="57603" fg:w="20"/><text x="55.9740%" y="879.50"></text></g><g><title>core::mem::replace (20 samples, 0.02%)</title><rect x="55.7240%" y="853" width="0.0193%" height="15" fill="rgb(248,97,27)" fg:x="57603" fg:w="20"/><text x="55.9740%" y="863.50"></text></g><g><title>core::ptr::read (20 samples, 0.02%)</title><rect x="55.7240%" y="837" width="0.0193%" height="15" fill="rgb(240,66,17)" fg:x="57603" fg:w="20"/><text x="55.9740%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (192 samples, 0.19%)</title><rect x="55.7994%" y="853" width="0.1857%" height="15" fill="rgb(210,79,3)" fg:x="57681" fg:w="192"/><text x="56.0494%" y="863.50"></text></g><g><title>core::mem::replace (192 samples, 0.19%)</title><rect x="55.7994%" y="837" width="0.1857%" height="15" fill="rgb(214,176,27)" fg:x="57681" fg:w="192"/><text x="56.0494%" y="847.50"></text></g><g><title>core::ptr::read (192 samples, 0.19%)</title><rect x="55.7994%" y="821" width="0.1857%" height="15" fill="rgb(235,185,3)" fg:x="57681" fg:w="192"/><text x="56.0494%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (314 samples, 0.30%)</title><rect x="55.7433%" y="869" width="0.3038%" height="15" fill="rgb(227,24,12)" fg:x="57623" fg:w="314"/><text x="55.9933%" y="879.50"></text></g><g><title>core::mem::drop (64 samples, 0.06%)</title><rect x="55.9852%" y="853" width="0.0619%" height="15" fill="rgb(252,169,48)" fg:x="57873" fg:w="64"/><text x="56.2352%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (64 samples, 0.06%)</title><rect x="55.9852%" y="837" width="0.0619%" height="15" fill="rgb(212,65,1)" fg:x="57873" fg:w="64"/><text x="56.2352%" y="847.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="56.0471%" y="853" width="0.0232%" height="15" fill="rgb(242,39,24)" fg:x="57937" fg:w="24"/><text x="56.2971%" y="863.50"></text></g><g><title>std::sync::poison::Flag::done (20 samples, 0.02%)</title><rect x="56.0829%" y="821" width="0.0193%" height="15" fill="rgb(249,32,23)" fg:x="57974" fg:w="20"/><text x="56.3329%" y="831.50"></text></g><g><title>std::thread::panicking (20 samples, 0.02%)</title><rect x="56.0829%" y="805" width="0.0193%" height="15" fill="rgb(251,195,23)" fg:x="57974" fg:w="20"/><text x="56.3329%" y="815.50"></text></g><g><title>std::panicking::panicking (20 samples, 0.02%)</title><rect x="56.0829%" y="789" width="0.0193%" height="15" fill="rgb(236,174,8)" fg:x="57974" fg:w="20"/><text x="56.3329%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (20 samples, 0.02%)</title><rect x="56.0829%" y="773" width="0.0193%" height="15" fill="rgb(220,197,8)" fg:x="57974" fg:w="20"/><text x="56.3329%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (351 samples, 0.34%)</title><rect x="56.1119%" y="789" width="0.3396%" height="15" fill="rgb(240,108,37)" fg:x="58004" fg:w="351"/><text x="56.3619%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (428 samples, 0.41%)</title><rect x="56.0471%" y="869" width="0.4140%" height="15" fill="rgb(232,176,24)" fg:x="57937" fg:w="428"/><text x="56.2971%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (404 samples, 0.39%)</title><rect x="56.0703%" y="853" width="0.3908%" height="15" fill="rgb(243,35,29)" fg:x="57961" fg:w="404"/><text x="56.3203%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (404 samples, 0.39%)</title><rect x="56.0703%" y="837" width="0.3908%" height="15" fill="rgb(210,37,18)" fg:x="57961" fg:w="404"/><text x="56.3203%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (371 samples, 0.36%)</title><rect x="56.1022%" y="821" width="0.3589%" height="15" fill="rgb(224,184,40)" fg:x="57994" fg:w="371"/><text x="56.3522%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (361 samples, 0.35%)</title><rect x="56.1119%" y="805" width="0.3492%" height="15" fill="rgb(236,39,29)" fg:x="58004" fg:w="361"/><text x="56.3619%" y="815.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (29 samples, 0.03%)</title><rect x="56.4737%" y="821" width="0.0281%" height="15" fill="rgb(232,48,39)" fg:x="58378" fg:w="29"/><text x="56.7237%" y="831.50"></text></g><g><title>core::task::wake::Waker::will_wake (56 samples, 0.05%)</title><rect x="56.4611%" y="869" width="0.0542%" height="15" fill="rgb(236,34,42)" fg:x="58365" fg:w="56"/><text x="56.7111%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (56 samples, 0.05%)</title><rect x="56.4611%" y="853" width="0.0542%" height="15" fill="rgb(243,106,37)" fg:x="58365" fg:w="56"/><text x="56.7111%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (43 samples, 0.04%)</title><rect x="56.4737%" y="837" width="0.0416%" height="15" fill="rgb(218,96,6)" fg:x="58378" fg:w="43"/><text x="56.7237%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="56.5018%" y="821" width="0.0135%" height="15" fill="rgb(235,130,12)" fg:x="58407" fg:w="14"/><text x="56.7518%" y="831.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="56.5298%" y="837" width="0.0232%" height="15" fill="rgb(231,95,0)" fg:x="58436" fg:w="24"/><text x="56.7798%" y="847.50"></text></g><g><title>std::sync::poison::Flag::borrow (24 samples, 0.02%)</title><rect x="56.5298%" y="821" width="0.0232%" height="15" fill="rgb(228,12,23)" fg:x="58436" fg:w="24"/><text x="56.7798%" y="831.50"></text></g><g><title>std::thread::panicking (24 samples, 0.02%)</title><rect x="56.5298%" y="805" width="0.0232%" height="15" fill="rgb(216,12,1)" fg:x="58436" fg:w="24"/><text x="56.7798%" y="815.50"></text></g><g><title>std::panicking::panicking (24 samples, 0.02%)</title><rect x="56.5298%" y="789" width="0.0232%" height="15" fill="rgb(219,59,3)" fg:x="58436" fg:w="24"/><text x="56.7798%" y="799.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (24 samples, 0.02%)</title><rect x="56.5298%" y="773" width="0.0232%" height="15" fill="rgb(215,208,46)" fg:x="58436" fg:w="24"/><text x="56.7798%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24 samples, 0.02%)</title><rect x="56.5298%" y="757" width="0.0232%" height="15" fill="rgb(254,224,29)" fg:x="58436" fg:w="24"/><text x="56.7798%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.02%)</title><rect x="56.5298%" y="741" width="0.0232%" height="15" fill="rgb(232,14,29)" fg:x="58436" fg:w="24"/><text x="56.7798%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,019 samples, 1.95%)</title><rect x="55.5750%" y="885" width="1.9531%" height="15" fill="rgb(208,45,52)" fg:x="57449" fg:w="2019"/><text x="55.8250%" y="895.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,047 samples, 1.01%)</title><rect x="56.5153%" y="869" width="1.0128%" height="15" fill="rgb(234,191,28)" fg:x="58421" fg:w="1047"/><text x="56.7653%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,032 samples, 1.00%)</title><rect x="56.5298%" y="853" width="0.9983%" height="15" fill="rgb(244,67,43)" fg:x="58436" fg:w="1032"/><text x="56.7798%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,008 samples, 0.98%)</title><rect x="56.5530%" y="837" width="0.9751%" height="15" fill="rgb(236,189,24)" fg:x="58460" fg:w="1008"/><text x="56.8030%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (992 samples, 0.96%)</title><rect x="56.5685%" y="821" width="0.9596%" height="15" fill="rgb(239,214,33)" fg:x="58476" fg:w="992"/><text x="56.8185%" y="831.50"></text></g><g><title>___pthread_mutex_lock (992 samples, 0.96%)</title><rect x="56.5685%" y="805" width="0.9596%" height="15" fill="rgb(226,176,41)" fg:x="58476" fg:w="992"/><text x="56.8185%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1157" width="5.6176%" height="15" fill="rgb(248,47,8)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1167.50">async_t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1141" width="5.6176%" height="15" fill="rgb(218,81,44)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1151.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1125" width="5.6176%" height="15" fill="rgb(213,98,6)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1135.50">&lt;core::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1109" width="5.6176%" height="15" fill="rgb(222,85,22)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1119.50">async_e..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1093" width="5.6176%" height="15" fill="rgb(239,46,39)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1103.50">&lt;async_..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1077" width="5.6176%" height="15" fill="rgb(237,12,29)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1087.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1061" width="5.6176%" height="15" fill="rgb(214,77,8)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1071.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1045" width="5.6176%" height="15" fill="rgb(217,168,37)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1055.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1029" width="5.6176%" height="15" fill="rgb(221,217,23)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1039.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,807 samples, 5.62%)</title><rect x="51.9357%" y="1013" width="5.6176%" height="15" fill="rgb(243,229,36)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1023.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,807 samples, 5.62%)</title><rect x="51.9357%" y="997" width="5.6176%" height="15" fill="rgb(251,163,40)" fg:x="53687" fg:w="5807"/><text x="52.1857%" y="1007.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,079 samples, 2.01%)</title><rect x="55.5421%" y="981" width="2.0112%" height="15" fill="rgb(237,222,12)" fg:x="57415" fg:w="2079"/><text x="55.7921%" y="991.50">t..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,079 samples, 2.01%)</title><rect x="55.5421%" y="965" width="2.0112%" height="15" fill="rgb(248,132,6)" fg:x="57415" fg:w="2079"/><text x="55.7921%" y="975.50">&lt;..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,079 samples, 2.01%)</title><rect x="55.5421%" y="949" width="2.0112%" height="15" fill="rgb(227,167,50)" fg:x="57415" fg:w="2079"/><text x="55.7921%" y="959.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,079 samples, 2.01%)</title><rect x="55.5421%" y="933" width="2.0112%" height="15" fill="rgb(242,84,37)" fg:x="57415" fg:w="2079"/><text x="55.7921%" y="943.50">&lt;..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,079 samples, 2.01%)</title><rect x="55.5421%" y="917" width="2.0112%" height="15" fill="rgb(212,4,50)" fg:x="57415" fg:w="2079"/><text x="55.7921%" y="927.50">&lt;..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,079 samples, 2.01%)</title><rect x="55.5421%" y="901" width="2.0112%" height="15" fill="rgb(230,228,32)" fg:x="57415" fg:w="2079"/><text x="55.7921%" y="911.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (26 samples, 0.03%)</title><rect x="57.5282%" y="885" width="0.0252%" height="15" fill="rgb(248,217,23)" fg:x="59468" fg:w="26"/><text x="57.7782%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (39 samples, 0.04%)</title><rect x="57.5630%" y="1157" width="0.0377%" height="15" fill="rgb(238,197,32)" fg:x="59504" fg:w="39"/><text x="57.8130%" y="1167.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="57.6007%" y="1157" width="0.0135%" height="15" fill="rgb(236,106,1)" fg:x="59543" fg:w="14"/><text x="57.8507%" y="1167.50"></text></g><g><title>aligned_size (12 samples, 0.01%)</title><rect x="57.6394%" y="293" width="0.0116%" height="15" fill="rgb(219,228,13)" fg:x="59583" fg:w="12"/><text x="57.8894%" y="303.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="57.6510%" y="293" width="0.0106%" height="15" fill="rgb(238,30,35)" fg:x="59595" fg:w="11"/><text x="57.9010%" y="303.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="57.6829%" y="277" width="0.0106%" height="15" fill="rgb(236,70,23)" fg:x="59628" fg:w="11"/><text x="57.9329%" y="287.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="57.6936%" y="213" width="0.0106%" height="15" fill="rgb(249,104,48)" fg:x="59639" fg:w="11"/><text x="57.9436%" y="223.50"></text></g><g><title>sizeclass_to_size (14 samples, 0.01%)</title><rect x="57.7042%" y="213" width="0.0135%" height="15" fill="rgb(254,117,50)" fg:x="59650" fg:w="14"/><text x="57.9542%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (14 samples, 0.01%)</title><rect x="57.7042%" y="197" width="0.0135%" height="15" fill="rgb(223,152,4)" fg:x="59650" fg:w="14"/><text x="57.9542%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (13 samples, 0.01%)</title><rect x="57.7178%" y="213" width="0.0126%" height="15" fill="rgb(245,6,2)" fg:x="59664" fg:w="13"/><text x="57.9678%" y="223.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (18 samples, 0.02%)</title><rect x="57.8193%" y="181" width="0.0174%" height="15" fill="rgb(249,150,24)" fg:x="59769" fg:w="18"/><text x="58.0693%" y="191.50"></text></g><g><title> (18 samples, 0.02%)</title><rect x="57.8193%" y="165" width="0.0174%" height="15" fill="rgb(228,185,42)" fg:x="59769" fg:w="18"/><text x="58.0693%" y="175.50"></text></g><g><title>snmalloc::Remote::set_info (40 samples, 0.04%)</title><rect x="57.8367%" y="181" width="0.0387%" height="15" fill="rgb(226,39,33)" fg:x="59787" fg:w="40"/><text x="58.0867%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (164 samples, 0.16%)</title><rect x="57.7303%" y="213" width="0.1587%" height="15" fill="rgb(221,166,19)" fg:x="59677" fg:w="164"/><text x="57.9803%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (134 samples, 0.13%)</title><rect x="57.7594%" y="197" width="0.1296%" height="15" fill="rgb(209,109,2)" fg:x="59707" fg:w="134"/><text x="58.0094%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (14 samples, 0.01%)</title><rect x="57.8754%" y="181" width="0.0135%" height="15" fill="rgb(252,216,26)" fg:x="59827" fg:w="14"/><text x="58.1254%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (219 samples, 0.21%)</title><rect x="57.6936%" y="245" width="0.2119%" height="15" fill="rgb(227,173,36)" fg:x="59639" fg:w="219"/><text x="57.9436%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (219 samples, 0.21%)</title><rect x="57.6936%" y="229" width="0.2119%" height="15" fill="rgb(209,90,7)" fg:x="59639" fg:w="219"/><text x="57.9436%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (15 samples, 0.01%)</title><rect x="57.8909%" y="213" width="0.0145%" height="15" fill="rgb(250,194,11)" fg:x="59843" fg:w="15"/><text x="58.1409%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (227 samples, 0.22%)</title><rect x="57.6936%" y="277" width="0.2196%" height="15" fill="rgb(220,72,50)" fg:x="59639" fg:w="227"/><text x="57.9436%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (227 samples, 0.22%)</title><rect x="57.6936%" y="261" width="0.2196%" height="15" fill="rgb(222,106,48)" fg:x="59639" fg:w="227"/><text x="57.9436%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (270 samples, 0.26%)</title><rect x="57.6616%" y="293" width="0.2612%" height="15" fill="rgb(216,220,45)" fg:x="59606" fg:w="270"/><text x="57.9116%" y="303.50"></text></g><g><title>rust_dealloc (312 samples, 0.30%)</title><rect x="57.6365%" y="309" width="0.3018%" height="15" fill="rgb(234,112,18)" fg:x="59580" fg:w="312"/><text x="57.8865%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (16 samples, 0.02%)</title><rect x="57.9228%" y="293" width="0.0155%" height="15" fill="rgb(206,179,9)" fg:x="59876" fg:w="16"/><text x="58.1728%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (325 samples, 0.31%)</title><rect x="57.6249%" y="373" width="0.3144%" height="15" fill="rgb(215,115,40)" fg:x="59568" fg:w="325"/><text x="57.8749%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (325 samples, 0.31%)</title><rect x="57.6249%" y="357" width="0.3144%" height="15" fill="rgb(222,69,34)" fg:x="59568" fg:w="325"/><text x="57.8749%" y="367.50"></text></g><g><title>__rg_dealloc (325 samples, 0.31%)</title><rect x="57.6249%" y="341" width="0.3144%" height="15" fill="rgb(209,161,10)" fg:x="59568" fg:w="325"/><text x="57.8749%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (325 samples, 0.31%)</title><rect x="57.6249%" y="325" width="0.3144%" height="15" fill="rgb(217,6,38)" fg:x="59568" fg:w="325"/><text x="57.8749%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (343 samples, 0.33%)</title><rect x="57.6230%" y="437" width="0.3318%" height="15" fill="rgb(229,229,48)" fg:x="59566" fg:w="343"/><text x="57.8730%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (343 samples, 0.33%)</title><rect x="57.6230%" y="421" width="0.3318%" height="15" fill="rgb(225,21,28)" fg:x="59566" fg:w="343"/><text x="57.8730%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (343 samples, 0.33%)</title><rect x="57.6230%" y="405" width="0.3318%" height="15" fill="rgb(206,33,13)" fg:x="59566" fg:w="343"/><text x="57.8730%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (343 samples, 0.33%)</title><rect x="57.6230%" y="389" width="0.3318%" height="15" fill="rgb(242,178,17)" fg:x="59566" fg:w="343"/><text x="57.8730%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.02%)</title><rect x="57.9393%" y="373" width="0.0155%" height="15" fill="rgb(220,162,5)" fg:x="59893" fg:w="16"/><text x="58.1893%" y="383.50"></text></g><g><title>rust_dealloc (34 samples, 0.03%)</title><rect x="58.6406%" y="229" width="0.0329%" height="15" fill="rgb(210,33,43)" fg:x="60618" fg:w="34"/><text x="58.8906%" y="239.50"></text></g><g><title>rust_dealloc (55 samples, 0.05%)</title><rect x="58.6851%" y="165" width="0.0532%" height="15" fill="rgb(216,116,54)" fg:x="60664" fg:w="55"/><text x="58.9351%" y="175.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="58.8157%" y="133" width="0.0193%" height="15" fill="rgb(249,92,24)" fg:x="60799" fg:w="20"/><text x="59.0657%" y="143.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="58.8157%" y="117" width="0.0193%" height="15" fill="rgb(231,189,14)" fg:x="60799" fg:w="20"/><text x="59.0657%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (111 samples, 0.11%)</title><rect x="58.7441%" y="165" width="0.1074%" height="15" fill="rgb(230,8,41)" fg:x="60725" fg:w="111"/><text x="58.9941%" y="175.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (99 samples, 0.10%)</title><rect x="58.7558%" y="149" width="0.0958%" height="15" fill="rgb(249,7,27)" fg:x="60737" fg:w="99"/><text x="59.0058%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (185 samples, 0.18%)</title><rect x="58.6832%" y="197" width="0.1790%" height="15" fill="rgb(232,86,5)" fg:x="60662" fg:w="185"/><text x="58.9332%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (185 samples, 0.18%)</title><rect x="58.6832%" y="181" width="0.1790%" height="15" fill="rgb(224,175,18)" fg:x="60662" fg:w="185"/><text x="58.9332%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (11 samples, 0.01%)</title><rect x="58.8515%" y="165" width="0.0106%" height="15" fill="rgb(220,129,12)" fg:x="60836" fg:w="11"/><text x="59.1015%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (186 samples, 0.18%)</title><rect x="58.6832%" y="229" width="0.1799%" height="15" fill="rgb(210,19,36)" fg:x="60662" fg:w="186"/><text x="58.9332%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (186 samples, 0.18%)</title><rect x="58.6832%" y="213" width="0.1799%" height="15" fill="rgb(219,96,14)" fg:x="60662" fg:w="186"/><text x="58.9332%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (233 samples, 0.23%)</title><rect x="58.6397%" y="245" width="0.2254%" height="15" fill="rgb(249,106,1)" fg:x="60617" fg:w="233"/><text x="58.8897%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (254 samples, 0.25%)</title><rect x="58.6261%" y="277" width="0.2457%" height="15" fill="rgb(249,155,20)" fg:x="60603" fg:w="254"/><text x="58.8761%" y="287.50"></text></g><g><title>rust_dealloc (254 samples, 0.25%)</title><rect x="58.6261%" y="261" width="0.2457%" height="15" fill="rgb(244,168,9)" fg:x="60603" fg:w="254"/><text x="58.8761%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (273 samples, 0.26%)</title><rect x="58.6261%" y="325" width="0.2641%" height="15" fill="rgb(216,23,50)" fg:x="60603" fg:w="273"/><text x="58.8761%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (273 samples, 0.26%)</title><rect x="58.6261%" y="309" width="0.2641%" height="15" fill="rgb(224,219,20)" fg:x="60603" fg:w="273"/><text x="58.8761%" y="319.50"></text></g><g><title>__rg_dealloc (273 samples, 0.26%)</title><rect x="58.6261%" y="293" width="0.2641%" height="15" fill="rgb(222,156,15)" fg:x="60603" fg:w="273"/><text x="58.8761%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (19 samples, 0.02%)</title><rect x="58.8718%" y="277" width="0.0184%" height="15" fill="rgb(231,97,17)" fg:x="60857" fg:w="19"/><text x="59.1218%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (993 samples, 0.96%)</title><rect x="57.9548%" y="421" width="0.9606%" height="15" fill="rgb(218,70,48)" fg:x="59909" fg:w="993"/><text x="58.2048%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (993 samples, 0.96%)</title><rect x="57.9548%" y="405" width="0.9606%" height="15" fill="rgb(212,196,52)" fg:x="59909" fg:w="993"/><text x="58.2048%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (978 samples, 0.95%)</title><rect x="57.9693%" y="389" width="0.9461%" height="15" fill="rgb(243,203,18)" fg:x="59924" fg:w="978"/><text x="58.2193%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (978 samples, 0.95%)</title><rect x="57.9693%" y="373" width="0.9461%" height="15" fill="rgb(252,125,41)" fg:x="59924" fg:w="978"/><text x="58.2193%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (978 samples, 0.95%)</title><rect x="57.9693%" y="357" width="0.9461%" height="15" fill="rgb(223,180,33)" fg:x="59924" fg:w="978"/><text x="58.2193%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (978 samples, 0.95%)</title><rect x="57.9693%" y="341" width="0.9461%" height="15" fill="rgb(254,159,46)" fg:x="59924" fg:w="978"/><text x="58.2193%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (26 samples, 0.03%)</title><rect x="58.8902%" y="325" width="0.0252%" height="15" fill="rgb(254,38,10)" fg:x="60876" fg:w="26"/><text x="59.1402%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (15 samples, 0.01%)</title><rect x="58.9154%" y="421" width="0.0145%" height="15" fill="rgb(208,217,32)" fg:x="60902" fg:w="15"/><text x="59.1654%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="58.9154%" y="405" width="0.0145%" height="15" fill="rgb(221,120,13)" fg:x="60902" fg:w="15"/><text x="59.1654%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="58.9183%" y="389" width="0.0116%" height="15" fill="rgb(246,54,52)" fg:x="60905" fg:w="12"/><text x="59.1683%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,375 samples, 1.33%)</title><rect x="57.6142%" y="453" width="1.3301%" height="15" fill="rgb(242,34,25)" fg:x="59557" fg:w="1375"/><text x="57.8642%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1,023 samples, 0.99%)</title><rect x="57.9548%" y="437" width="0.9896%" height="15" fill="rgb(247,209,9)" fg:x="59909" fg:w="1023"/><text x="58.2048%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (15 samples, 0.01%)</title><rect x="58.9299%" y="421" width="0.0145%" height="15" fill="rgb(228,71,26)" fg:x="60917" fg:w="15"/><text x="59.1799%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (1,376 samples, 1.33%)</title><rect x="57.6142%" y="469" width="1.3311%" height="15" fill="rgb(222,145,49)" fg:x="59557" fg:w="1376"/><text x="57.8642%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.01%)</title><rect x="58.9608%" y="325" width="0.0145%" height="15" fill="rgb(218,121,17)" fg:x="60949" fg:w="15"/><text x="59.2108%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (49 samples, 0.05%)</title><rect x="58.9454%" y="469" width="0.0474%" height="15" fill="rgb(244,50,7)" fg:x="60933" fg:w="49"/><text x="59.1954%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (49 samples, 0.05%)</title><rect x="58.9454%" y="453" width="0.0474%" height="15" fill="rgb(246,229,37)" fg:x="60933" fg:w="49"/><text x="59.1954%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="58.9454%" y="437" width="0.0474%" height="15" fill="rgb(225,18,5)" fg:x="60933" fg:w="49"/><text x="59.1954%" y="447.50"></text></g><g><title>core::mem::drop (49 samples, 0.05%)</title><rect x="58.9454%" y="421" width="0.0474%" height="15" fill="rgb(213,204,8)" fg:x="60933" fg:w="49"/><text x="59.1954%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (49 samples, 0.05%)</title><rect x="58.9454%" y="405" width="0.0474%" height="15" fill="rgb(238,103,6)" fg:x="60933" fg:w="49"/><text x="59.1954%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.05%)</title><rect x="58.9454%" y="389" width="0.0474%" height="15" fill="rgb(222,25,35)" fg:x="60933" fg:w="49"/><text x="59.1954%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (49 samples, 0.05%)</title><rect x="58.9454%" y="373" width="0.0474%" height="15" fill="rgb(213,203,35)" fg:x="60933" fg:w="49"/><text x="59.1954%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (33 samples, 0.03%)</title><rect x="58.9608%" y="357" width="0.0319%" height="15" fill="rgb(221,79,53)" fg:x="60949" fg:w="33"/><text x="59.2108%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (33 samples, 0.03%)</title><rect x="58.9608%" y="341" width="0.0319%" height="15" fill="rgb(243,200,35)" fg:x="60949" fg:w="33"/><text x="59.2108%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (18 samples, 0.02%)</title><rect x="58.9754%" y="325" width="0.0174%" height="15" fill="rgb(248,60,25)" fg:x="60964" fg:w="18"/><text x="59.2254%" y="335.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="58.9754%" y="309" width="0.0174%" height="15" fill="rgb(227,53,46)" fg:x="60964" fg:w="18"/><text x="59.2254%" y="319.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="58.9754%" y="293" width="0.0174%" height="15" fill="rgb(216,120,32)" fg:x="60964" fg:w="18"/><text x="59.2254%" y="303.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,533 samples, 1.48%)</title><rect x="57.6142%" y="549" width="1.4830%" height="15" fill="rgb(220,134,1)" fg:x="59557" fg:w="1533"/><text x="57.8642%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,533 samples, 1.48%)</title><rect x="57.6142%" y="533" width="1.4830%" height="15" fill="rgb(237,168,5)" fg:x="59557" fg:w="1533"/><text x="57.8642%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,533 samples, 1.48%)</title><rect x="57.6142%" y="517" width="1.4830%" height="15" fill="rgb(231,100,33)" fg:x="59557" fg:w="1533"/><text x="57.8642%" y="527.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,533 samples, 1.48%)</title><rect x="57.6142%" y="501" width="1.4830%" height="15" fill="rgb(236,177,47)" fg:x="59557" fg:w="1533"/><text x="57.8642%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (1,533 samples, 1.48%)</title><rect x="57.6142%" y="485" width="1.4830%" height="15" fill="rgb(235,7,49)" fg:x="59557" fg:w="1533"/><text x="57.8642%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (108 samples, 0.10%)</title><rect x="58.9928%" y="469" width="0.1045%" height="15" fill="rgb(232,119,22)" fg:x="60982" fg:w="108"/><text x="59.2428%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (98 samples, 0.09%)</title><rect x="59.0024%" y="453" width="0.0948%" height="15" fill="rgb(254,73,53)" fg:x="60992" fg:w="98"/><text x="59.2524%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (98 samples, 0.09%)</title><rect x="59.0024%" y="437" width="0.0948%" height="15" fill="rgb(251,35,20)" fg:x="60992" fg:w="98"/><text x="59.2524%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="59.0837%" y="421" width="0.0135%" height="15" fill="rgb(241,119,20)" fg:x="61076" fg:w="14"/><text x="59.3337%" y="431.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.01%)</title><rect x="59.0847%" y="405" width="0.0126%" height="15" fill="rgb(207,102,14)" fg:x="61077" fg:w="13"/><text x="59.3347%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="59.0847%" y="389" width="0.0126%" height="15" fill="rgb(248,201,50)" fg:x="61077" fg:w="13"/><text x="59.3347%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="59.0847%" y="373" width="0.0126%" height="15" fill="rgb(222,185,44)" fg:x="61077" fg:w="13"/><text x="59.3347%" y="383.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="59.0847%" y="357" width="0.0126%" height="15" fill="rgb(218,107,18)" fg:x="61077" fg:w="13"/><text x="59.3347%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="59.0847%" y="341" width="0.0126%" height="15" fill="rgb(237,177,39)" fg:x="61077" fg:w="13"/><text x="59.3347%" y="351.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (48 samples, 0.05%)</title><rect x="59.0972%" y="549" width="0.0464%" height="15" fill="rgb(246,69,6)" fg:x="61090" fg:w="48"/><text x="59.3472%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (359 samples, 0.35%)</title><rect x="59.2404%" y="517" width="0.3473%" height="15" fill="rgb(234,208,37)" fg:x="61238" fg:w="359"/><text x="59.4904%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (195 samples, 0.19%)</title><rect x="59.6080%" y="501" width="0.1886%" height="15" fill="rgb(225,4,6)" fg:x="61618" fg:w="195"/><text x="59.8580%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::control_plane::{{closure}} (396 samples, 0.38%)</title><rect x="59.5877%" y="517" width="0.3831%" height="15" fill="rgb(233,45,0)" fg:x="61597" fg:w="396"/><text x="59.8377%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::needs_control_plane_msg (180 samples, 0.17%)</title><rect x="59.7967%" y="501" width="0.1741%" height="15" fill="rgb(226,136,5)" fg:x="61813" fg:w="180"/><text x="60.0467%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::is_empty (162 samples, 0.16%)</title><rect x="59.8141%" y="485" width="0.1567%" height="15" fill="rgb(211,91,47)" fg:x="61831" fg:w="162"/><text x="60.0641%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::is_empty (161 samples, 0.16%)</title><rect x="59.8150%" y="469" width="0.1557%" height="15" fill="rgb(242,88,51)" fg:x="61832" fg:w="161"/><text x="60.0650%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::is_empty (107 samples, 0.10%)</title><rect x="59.8673%" y="453" width="0.1035%" height="15" fill="rgb(230,91,28)" fg:x="61886" fg:w="107"/><text x="60.1173%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (93 samples, 0.09%)</title><rect x="59.8808%" y="437" width="0.0900%" height="15" fill="rgb(254,186,29)" fg:x="61900" fg:w="93"/><text x="60.1308%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (93 samples, 0.09%)</title><rect x="59.8808%" y="421" width="0.0900%" height="15" fill="rgb(238,6,4)" fg:x="61900" fg:w="93"/><text x="60.1308%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (558 samples, 0.54%)</title><rect x="61.0030%" y="501" width="0.5398%" height="15" fill="rgb(221,151,16)" fg:x="63060" fg:w="558"/><text x="61.2530%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.03%)</title><rect x="61.5563%" y="437" width="0.0252%" height="15" fill="rgb(251,143,52)" fg:x="63632" fg:w="26"/><text x="61.8063%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.02%)</title><rect x="61.5660%" y="421" width="0.0155%" height="15" fill="rgb(206,90,15)" fg:x="63642" fg:w="16"/><text x="61.8160%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="61.5660%" y="405" width="0.0155%" height="15" fill="rgb(218,35,8)" fg:x="63642" fg:w="16"/><text x="61.8160%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="61.5660%" y="389" width="0.0155%" height="15" fill="rgb(239,215,6)" fg:x="63642" fg:w="16"/><text x="61.8160%" y="399.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="61.5660%" y="373" width="0.0155%" height="15" fill="rgb(245,116,39)" fg:x="63642" fg:w="16"/><text x="61.8160%" y="383.50"></text></g><g><title>__rg_alloc (16 samples, 0.02%)</title><rect x="61.5660%" y="357" width="0.0155%" height="15" fill="rgb(242,65,28)" fg:x="63642" fg:w="16"/><text x="61.8160%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.02%)</title><rect x="61.5660%" y="341" width="0.0155%" height="15" fill="rgb(252,132,53)" fg:x="63642" fg:w="16"/><text x="61.8160%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (44 samples, 0.04%)</title><rect x="61.5495%" y="501" width="0.0426%" height="15" fill="rgb(224,159,50)" fg:x="63625" fg:w="44"/><text x="61.7995%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.04%)</title><rect x="61.5563%" y="485" width="0.0358%" height="15" fill="rgb(224,93,4)" fg:x="63632" fg:w="37"/><text x="61.8063%" y="495.50"></text></g><g><title>value_trait::Builder::object (37 samples, 0.04%)</title><rect x="61.5563%" y="469" width="0.0358%" height="15" fill="rgb(208,81,34)" fg:x="63632" fg:w="37"/><text x="61.8063%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (37 samples, 0.04%)</title><rect x="61.5563%" y="453" width="0.0358%" height="15" fill="rgb(233,92,54)" fg:x="63632" fg:w="37"/><text x="61.8063%" y="463.50"></text></g><g><title>tremor_value::value::Value::Object (11 samples, 0.01%)</title><rect x="61.5815%" y="437" width="0.0106%" height="15" fill="rgb(237,21,14)" fg:x="63658" fg:w="11"/><text x="61.8315%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="61.5921%" y="501" width="0.0155%" height="15" fill="rgb(249,128,51)" fg:x="63669" fg:w="16"/><text x="61.8421%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (16 samples, 0.02%)</title><rect x="61.6076%" y="501" width="0.0155%" height="15" fill="rgb(223,129,24)" fg:x="63685" fg:w="16"/><text x="61.8576%" y="511.50"></text></g><g><title>rust_dealloc (14 samples, 0.01%)</title><rect x="61.6405%" y="469" width="0.0135%" height="15" fill="rgb(231,168,25)" fg:x="63719" fg:w="14"/><text x="61.8905%" y="479.50"></text></g><g><title>rust_dealloc (11 samples, 0.01%)</title><rect x="61.6714%" y="405" width="0.0106%" height="15" fill="rgb(224,39,20)" fg:x="63751" fg:w="11"/><text x="61.9214%" y="415.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (47 samples, 0.05%)</title><rect x="61.7169%" y="357" width="0.0455%" height="15" fill="rgb(225,152,53)" fg:x="63798" fg:w="47"/><text x="61.9669%" y="367.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (45 samples, 0.04%)</title><rect x="61.7188%" y="341" width="0.0435%" height="15" fill="rgb(252,17,24)" fg:x="63800" fg:w="45"/><text x="61.9688%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (83 samples, 0.08%)</title><rect x="61.6918%" y="405" width="0.0803%" height="15" fill="rgb(250,114,30)" fg:x="63772" fg:w="83"/><text x="61.9418%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (83 samples, 0.08%)</title><rect x="61.6918%" y="389" width="0.0803%" height="15" fill="rgb(229,5,4)" fg:x="63772" fg:w="83"/><text x="61.9418%" y="399.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (78 samples, 0.08%)</title><rect x="61.6966%" y="373" width="0.0755%" height="15" fill="rgb(225,176,49)" fg:x="63777" fg:w="78"/><text x="61.9466%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (117 samples, 0.11%)</title><rect x="61.6608%" y="469" width="0.1132%" height="15" fill="rgb(224,221,49)" fg:x="63740" fg:w="117"/><text x="61.9108%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (117 samples, 0.11%)</title><rect x="61.6608%" y="453" width="0.1132%" height="15" fill="rgb(253,169,27)" fg:x="63740" fg:w="117"/><text x="61.9108%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (117 samples, 0.11%)</title><rect x="61.6608%" y="437" width="0.1132%" height="15" fill="rgb(211,206,16)" fg:x="63740" fg:w="117"/><text x="61.9108%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (117 samples, 0.11%)</title><rect x="61.6608%" y="421" width="0.1132%" height="15" fill="rgb(244,87,35)" fg:x="63740" fg:w="117"/><text x="61.9108%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (140 samples, 0.14%)</title><rect x="61.6405%" y="485" width="0.1354%" height="15" fill="rgb(246,28,10)" fg:x="63719" fg:w="140"/><text x="61.8905%" y="495.50"></text></g><g><title>rust_dealloc (162 samples, 0.16%)</title><rect x="61.6231%" y="501" width="0.1567%" height="15" fill="rgb(229,12,44)" fg:x="63701" fg:w="162"/><text x="61.8731%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (1,878 samples, 1.82%)</title><rect x="59.9708%" y="517" width="1.8167%" height="15" fill="rgb(210,145,37)" fg:x="61993" fg:w="1878"/><text x="60.2208%" y="527.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,715 samples, 2.63%)</title><rect x="59.2385%" y="533" width="2.6264%" height="15" fill="rgb(227,112,52)" fg:x="61236" fg:w="2715"/><text x="59.4885%" y="543.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::_{{closure}} (80 samples, 0.08%)</title><rect x="61.7875%" y="517" width="0.0774%" height="15" fill="rgb(238,155,34)" fg:x="63871" fg:w="80"/><text x="62.0375%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.01%)</title><rect x="61.8736%" y="533" width="0.0106%" height="15" fill="rgb(239,226,36)" fg:x="63960" fg:w="11"/><text x="62.1236%" y="543.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (13 samples, 0.01%)</title><rect x="61.8843%" y="533" width="0.0126%" height="15" fill="rgb(230,16,23)" fg:x="63971" fg:w="13"/><text x="62.1343%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (13 samples, 0.01%)</title><rect x="61.8843%" y="517" width="0.0126%" height="15" fill="rgb(236,171,36)" fg:x="63971" fg:w="13"/><text x="62.1343%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (595 samples, 0.58%)</title><rect x="61.8968%" y="533" width="0.5756%" height="15" fill="rgb(221,22,14)" fg:x="63984" fg:w="595"/><text x="62.1468%" y="543.50"></text></g><g><title>rust_dealloc (34 samples, 0.03%)</title><rect x="62.5150%" y="325" width="0.0329%" height="15" fill="rgb(242,43,11)" fg:x="64623" fg:w="34"/><text x="62.7650%" y="335.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (22 samples, 0.02%)</title><rect x="62.5682%" y="277" width="0.0213%" height="15" fill="rgb(232,69,23)" fg:x="64678" fg:w="22"/><text x="62.8182%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (52 samples, 0.05%)</title><rect x="62.5498%" y="325" width="0.0503%" height="15" fill="rgb(216,180,54)" fg:x="64659" fg:w="52"/><text x="62.7998%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (52 samples, 0.05%)</title><rect x="62.5498%" y="309" width="0.0503%" height="15" fill="rgb(216,5,24)" fg:x="64659" fg:w="52"/><text x="62.7998%" y="319.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (51 samples, 0.05%)</title><rect x="62.5508%" y="293" width="0.0493%" height="15" fill="rgb(225,89,9)" fg:x="64660" fg:w="51"/><text x="62.8008%" y="303.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (11 samples, 0.01%)</title><rect x="62.5895%" y="277" width="0.0106%" height="15" fill="rgb(243,75,33)" fg:x="64700" fg:w="11"/><text x="62.8395%" y="287.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (11 samples, 0.01%)</title><rect x="62.5895%" y="261" width="0.0106%" height="15" fill="rgb(247,141,45)" fg:x="64700" fg:w="11"/><text x="62.8395%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (95 samples, 0.09%)</title><rect x="62.5150%" y="357" width="0.0919%" height="15" fill="rgb(232,177,36)" fg:x="64623" fg:w="95"/><text x="62.7650%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (95 samples, 0.09%)</title><rect x="62.5150%" y="341" width="0.0919%" height="15" fill="rgb(219,125,36)" fg:x="64623" fg:w="95"/><text x="62.7650%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (103 samples, 0.10%)</title><rect x="62.5150%" y="389" width="0.0996%" height="15" fill="rgb(227,94,9)" fg:x="64623" fg:w="103"/><text x="62.7650%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (103 samples, 0.10%)</title><rect x="62.5150%" y="373" width="0.0996%" height="15" fill="rgb(240,34,52)" fg:x="64623" fg:w="103"/><text x="62.7650%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (129 samples, 0.12%)</title><rect x="62.5082%" y="405" width="0.1248%" height="15" fill="rgb(216,45,12)" fg:x="64616" fg:w="129"/><text x="62.7582%" y="415.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (19 samples, 0.02%)</title><rect x="62.6146%" y="389" width="0.0184%" height="15" fill="rgb(246,21,19)" fg:x="64726" fg:w="19"/><text x="62.8646%" y="399.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (19 samples, 0.02%)</title><rect x="62.6146%" y="373" width="0.0184%" height="15" fill="rgb(213,98,42)" fg:x="64726" fg:w="19"/><text x="62.8646%" y="383.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (19 samples, 0.02%)</title><rect x="62.6146%" y="357" width="0.0184%" height="15" fill="rgb(250,136,47)" fg:x="64726" fg:w="19"/><text x="62.8646%" y="367.50"></text></g><g><title>snmalloc::bits::align_down (19 samples, 0.02%)</title><rect x="62.6146%" y="341" width="0.0184%" height="15" fill="rgb(251,124,27)" fg:x="64726" fg:w="19"/><text x="62.8646%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (169 samples, 0.16%)</title><rect x="62.4782%" y="517" width="0.1635%" height="15" fill="rgb(229,180,14)" fg:x="64585" fg:w="169"/><text x="62.7282%" y="527.50"></text></g><g><title>alloc::alloc::box_free (167 samples, 0.16%)</title><rect x="62.4802%" y="501" width="0.1616%" height="15" fill="rgb(245,216,25)" fg:x="64587" fg:w="167"/><text x="62.7302%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (149 samples, 0.14%)</title><rect x="62.4976%" y="485" width="0.1441%" height="15" fill="rgb(251,43,5)" fg:x="64605" fg:w="149"/><text x="62.7476%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (149 samples, 0.14%)</title><rect x="62.4976%" y="469" width="0.1441%" height="15" fill="rgb(250,128,24)" fg:x="64605" fg:w="149"/><text x="62.7476%" y="479.50"></text></g><g><title>__rg_dealloc (149 samples, 0.14%)</title><rect x="62.4976%" y="453" width="0.1441%" height="15" fill="rgb(217,117,27)" fg:x="64605" fg:w="149"/><text x="62.7476%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (149 samples, 0.14%)</title><rect x="62.4976%" y="437" width="0.1441%" height="15" fill="rgb(245,147,4)" fg:x="64605" fg:w="149"/><text x="62.7476%" y="447.50"></text></g><g><title>rust_dealloc (149 samples, 0.14%)</title><rect x="62.4976%" y="421" width="0.1441%" height="15" fill="rgb(242,201,35)" fg:x="64605" fg:w="149"/><text x="62.7476%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (171 samples, 0.17%)</title><rect x="62.4782%" y="533" width="0.1654%" height="15" fill="rgb(218,181,1)" fg:x="64585" fg:w="171"/><text x="62.7282%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1157" width="5.0845%" height="15" fill="rgb(222,6,29)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1167.50">core::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1141" width="5.0845%" height="15" fill="rgb(208,186,3)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1151.50">std::t..</text></g><g><title>std::panic::catch_unwind (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1125" width="5.0845%" height="15" fill="rgb(216,36,26)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1135.50">std::p..</text></g><g><title>std::panicking::try (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1109" width="5.0845%" height="15" fill="rgb(248,201,23)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1119.50">std::p..</text></g><g><title>std::panicking::try::do_call (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1093" width="5.0845%" height="15" fill="rgb(251,170,31)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1103.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1077" width="5.0845%" height="15" fill="rgb(207,110,25)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1087.50">&lt;core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1061" width="5.0845%" height="15" fill="rgb(250,54,15)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1071.50">std::t..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1045" width="5.0845%" height="15" fill="rgb(227,68,33)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1055.50">std::s..</text></g><g><title>core::ops::function::FnOnce::call_once (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1029" width="5.0845%" height="15" fill="rgb(238,34,41)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1039.50">core::..</text></g><g><title>async_global_executor::threading::thread_main_loop (5,256 samples, 5.08%)</title><rect x="57.6142%" y="1013" width="5.0845%" height="15" fill="rgb(220,11,15)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1023.50">async_..</text></g><g><title>std::panic::catch_unwind (5,256 samples, 5.08%)</title><rect x="57.6142%" y="997" width="5.0845%" height="15" fill="rgb(246,111,35)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="1007.50">std::p..</text></g><g><title>std::panicking::try (5,256 samples, 5.08%)</title><rect x="57.6142%" y="981" width="5.0845%" height="15" fill="rgb(209,88,53)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="991.50">std::p..</text></g><g><title>std::panicking::try::do_call (5,256 samples, 5.08%)</title><rect x="57.6142%" y="965" width="5.0845%" height="15" fill="rgb(231,185,47)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="975.50">std::p..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="949" width="5.0845%" height="15" fill="rgb(233,154,1)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="959.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,256 samples, 5.08%)</title><rect x="57.6142%" y="933" width="5.0845%" height="15" fill="rgb(225,15,46)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="943.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,256 samples, 5.08%)</title><rect x="57.6142%" y="917" width="5.0845%" height="15" fill="rgb(211,135,41)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="927.50">std::t..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="901" width="5.0845%" height="15" fill="rgb(208,54,0)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="911.50">async_..</text></g><g><title>async_global_executor::reactor::block_on (5,256 samples, 5.08%)</title><rect x="57.6142%" y="885" width="5.0845%" height="15" fill="rgb(244,136,14)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="895.50">async_..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="869" width="5.0845%" height="15" fill="rgb(241,56,14)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="879.50">async_..</text></g><g><title>async_io::driver::block_on (5,256 samples, 5.08%)</title><rect x="57.6142%" y="853" width="5.0845%" height="15" fill="rgb(205,80,24)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="863.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5,256 samples, 5.08%)</title><rect x="57.6142%" y="837" width="5.0845%" height="15" fill="rgb(220,57,4)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="847.50">&lt;futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,256 samples, 5.08%)</title><rect x="57.6142%" y="821" width="5.0845%" height="15" fill="rgb(226,193,50)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="831.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="805" width="5.0845%" height="15" fill="rgb(231,168,22)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="815.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5,256 samples, 5.08%)</title><rect x="57.6142%" y="789" width="5.0845%" height="15" fill="rgb(254,215,14)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="799.50">&lt;futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,256 samples, 5.08%)</title><rect x="57.6142%" y="773" width="5.0845%" height="15" fill="rgb(211,115,16)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="783.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="757" width="5.0845%" height="15" fill="rgb(236,210,16)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="767.50">async_..</text></g><g><title>async_task::runnable::Runnable::run (5,256 samples, 5.08%)</title><rect x="57.6142%" y="741" width="5.0845%" height="15" fill="rgb(221,94,12)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="751.50">async_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,256 samples, 5.08%)</title><rect x="57.6142%" y="725" width="5.0845%" height="15" fill="rgb(235,218,49)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="735.50">async_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,256 samples, 5.08%)</title><rect x="57.6142%" y="709" width="5.0845%" height="15" fill="rgb(217,114,14)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="719.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,256 samples, 5.08%)</title><rect x="57.6142%" y="693" width="5.0845%" height="15" fill="rgb(216,145,22)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="703.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="677" width="5.0845%" height="15" fill="rgb(217,112,39)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="687.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5,256 samples, 5.08%)</title><rect x="57.6142%" y="661" width="5.0845%" height="15" fill="rgb(225,85,32)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="671.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,256 samples, 5.08%)</title><rect x="57.6142%" y="645" width="5.0845%" height="15" fill="rgb(245,209,47)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="655.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,256 samples, 5.08%)</title><rect x="57.6142%" y="629" width="5.0845%" height="15" fill="rgb(218,220,15)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="639.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,256 samples, 5.08%)</title><rect x="57.6142%" y="613" width="5.0845%" height="15" fill="rgb(222,202,31)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="623.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="597" width="5.0845%" height="15" fill="rgb(243,203,4)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="607.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,256 samples, 5.08%)</title><rect x="57.6142%" y="581" width="5.0845%" height="15" fill="rgb(237,92,17)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="591.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,256 samples, 5.08%)</title><rect x="57.6142%" y="565" width="5.0845%" height="15" fill="rgb(231,119,7)" fg:x="59557" fg:w="5256"/><text x="57.8642%" y="575.50">&lt;core:..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (3,675 samples, 3.56%)</title><rect x="59.1437%" y="549" width="3.5551%" height="15" fill="rgb(237,82,41)" fg:x="61138" fg:w="3675"/><text x="59.3937%" y="559.50">trem..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (56 samples, 0.05%)</title><rect x="62.6446%" y="533" width="0.0542%" height="15" fill="rgb(226,81,48)" fg:x="64757" fg:w="56"/><text x="62.8946%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (19 samples, 0.02%)</title><rect x="62.6804%" y="517" width="0.0184%" height="15" fill="rgb(234,70,51)" fg:x="64794" fg:w="19"/><text x="62.9304%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="62.7075%" y="1157" width="0.0174%" height="15" fill="rgb(251,86,4)" fg:x="64822" fg:w="18"/><text x="62.9575%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::Addr::send::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="62.7249%" y="1157" width="0.0126%" height="15" fill="rgb(244,144,28)" fg:x="64840" fg:w="13"/><text x="62.9749%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="62.7385%" y="1157" width="0.0126%" height="15" fill="rgb(232,161,39)" fg:x="64854" fg:w="13"/><text x="62.9885%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (97 samples, 0.09%)</title><rect x="62.7510%" y="1157" width="0.0938%" height="15" fill="rgb(247,34,51)" fg:x="64867" fg:w="97"/><text x="63.0010%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (26 samples, 0.03%)</title><rect x="62.8449%" y="1157" width="0.0252%" height="15" fill="rgb(225,132,2)" fg:x="64964" fg:w="26"/><text x="63.0949%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (26 samples, 0.03%)</title><rect x="62.8449%" y="1141" width="0.0252%" height="15" fill="rgb(209,159,44)" fg:x="64964" fg:w="26"/><text x="63.0949%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (26 samples, 0.03%)</title><rect x="62.8449%" y="1125" width="0.0252%" height="15" fill="rgb(251,214,1)" fg:x="64964" fg:w="26"/><text x="63.0949%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="62.8449%" y="1109" width="0.0252%" height="15" fill="rgb(247,84,47)" fg:x="64964" fg:w="26"/><text x="63.0949%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.03%)</title><rect x="62.8449%" y="1093" width="0.0252%" height="15" fill="rgb(240,111,43)" fg:x="64964" fg:w="26"/><text x="63.0949%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.03%)</title><rect x="62.8449%" y="1077" width="0.0252%" height="15" fill="rgb(215,214,35)" fg:x="64964" fg:w="26"/><text x="63.0949%" y="1087.50"></text></g><g><title>__rg_dealloc (26 samples, 0.03%)</title><rect x="62.8449%" y="1061" width="0.0252%" height="15" fill="rgb(248,207,23)" fg:x="64964" fg:w="26"/><text x="63.0949%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (26 samples, 0.03%)</title><rect x="62.8449%" y="1045" width="0.0252%" height="15" fill="rgb(214,186,4)" fg:x="64964" fg:w="26"/><text x="63.0949%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (94 samples, 0.09%)</title><rect x="62.8700%" y="1157" width="0.0909%" height="15" fill="rgb(220,133,22)" fg:x="64990" fg:w="94"/><text x="63.1200%" y="1167.50"></text></g><g><title>event_listener::Event::notify (32 samples, 0.03%)</title><rect x="62.9629%" y="1157" width="0.0310%" height="15" fill="rgb(239,134,19)" fg:x="65086" fg:w="32"/><text x="63.2129%" y="1167.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (22 samples, 0.02%)</title><rect x="63.0006%" y="1157" width="0.0213%" height="15" fill="rgb(250,140,9)" fg:x="65125" fg:w="22"/><text x="63.2506%" y="1167.50"></text></g><g><title>polling::epoll::Poller::wait (11 samples, 0.01%)</title><rect x="63.0248%" y="1157" width="0.0106%" height="15" fill="rgb(225,59,14)" fg:x="65150" fg:w="11"/><text x="63.2748%" y="1167.50"></text></g><g><title>rust_alloc (78 samples, 0.08%)</title><rect x="63.0354%" y="1157" width="0.0755%" height="15" fill="rgb(214,152,51)" fg:x="65161" fg:w="78"/><text x="63.2854%" y="1167.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (13 samples, 0.01%)</title><rect x="63.1196%" y="1157" width="0.0126%" height="15" fill="rgb(251,227,43)" fg:x="65248" fg:w="13"/><text x="63.3696%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.09%)</title><rect x="64.5649%" y="437" width="0.0919%" height="15" fill="rgb(241,96,17)" fg:x="66742" fg:w="95"/><text x="64.8149%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="64.9093%" y="421" width="0.0145%" height="15" fill="rgb(234,198,43)" fg:x="67098" fg:w="15"/><text x="65.1593%" y="431.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.05%)</title><rect x="64.9238%" y="421" width="0.0532%" height="15" fill="rgb(220,108,29)" fg:x="67113" fg:w="55"/><text x="65.1738%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (782 samples, 0.76%)</title><rect x="64.9770%" y="421" width="0.7565%" height="15" fill="rgb(226,163,33)" fg:x="67168" fg:w="782"/><text x="65.2270%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.05%)</title><rect x="65.7364%" y="357" width="0.0455%" height="15" fill="rgb(205,194,45)" fg:x="67953" fg:w="47"/><text x="65.9864%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (68 samples, 0.07%)</title><rect x="65.7364%" y="421" width="0.0658%" height="15" fill="rgb(206,143,44)" fg:x="67953" fg:w="68"/><text x="65.9864%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (68 samples, 0.07%)</title><rect x="65.7364%" y="405" width="0.0658%" height="15" fill="rgb(236,136,36)" fg:x="67953" fg:w="68"/><text x="65.9864%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.07%)</title><rect x="65.7364%" y="389" width="0.0658%" height="15" fill="rgb(249,172,42)" fg:x="67953" fg:w="68"/><text x="65.9864%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (68 samples, 0.07%)</title><rect x="65.7364%" y="373" width="0.0658%" height="15" fill="rgb(216,139,23)" fg:x="67953" fg:w="68"/><text x="65.9864%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (21 samples, 0.02%)</title><rect x="65.7818%" y="357" width="0.0203%" height="15" fill="rgb(207,166,20)" fg:x="68000" fg:w="21"/><text x="66.0318%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (21 samples, 0.02%)</title><rect x="65.7818%" y="341" width="0.0203%" height="15" fill="rgb(210,209,22)" fg:x="68000" fg:w="21"/><text x="66.0318%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="65.8022%" y="389" width="0.0126%" height="15" fill="rgb(232,118,20)" fg:x="68021" fg:w="13"/><text x="66.0522%" y="399.50"></text></g><g><title>rust_dealloc (20 samples, 0.02%)</title><rect x="65.8476%" y="229" width="0.0193%" height="15" fill="rgb(238,113,42)" fg:x="68068" fg:w="20"/><text x="66.0976%" y="239.50"></text></g><g><title>rust_dealloc (40 samples, 0.04%)</title><rect x="65.8728%" y="165" width="0.0387%" height="15" fill="rgb(231,42,5)" fg:x="68094" fg:w="40"/><text x="66.1228%" y="175.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (41 samples, 0.04%)</title><rect x="65.9860%" y="117" width="0.0397%" height="15" fill="rgb(243,166,24)" fg:x="68211" fg:w="41"/><text x="66.2360%" y="127.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (38 samples, 0.04%)</title><rect x="65.9889%" y="101" width="0.0368%" height="15" fill="rgb(237,226,12)" fg:x="68214" fg:w="38"/><text x="66.2389%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (124 samples, 0.12%)</title><rect x="65.9173%" y="165" width="0.1200%" height="15" fill="rgb(229,133,24)" fg:x="68140" fg:w="124"/><text x="66.1673%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (124 samples, 0.12%)</title><rect x="65.9173%" y="149" width="0.1200%" height="15" fill="rgb(238,33,43)" fg:x="68140" fg:w="124"/><text x="66.1673%" y="159.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (110 samples, 0.11%)</title><rect x="65.9308%" y="133" width="0.1064%" height="15" fill="rgb(227,59,38)" fg:x="68154" fg:w="110"/><text x="66.1808%" y="143.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (12 samples, 0.01%)</title><rect x="66.0256%" y="117" width="0.0116%" height="15" fill="rgb(230,97,0)" fg:x="68252" fg:w="12"/><text x="66.2756%" y="127.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (12 samples, 0.01%)</title><rect x="66.0256%" y="101" width="0.0116%" height="15" fill="rgb(250,173,50)" fg:x="68252" fg:w="12"/><text x="66.2756%" y="111.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (246 samples, 0.24%)</title><rect x="65.8728%" y="197" width="0.2380%" height="15" fill="rgb(240,15,50)" fg:x="68094" fg:w="246"/><text x="66.1228%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (246 samples, 0.24%)</title><rect x="65.8728%" y="181" width="0.2380%" height="15" fill="rgb(221,93,22)" fg:x="68094" fg:w="246"/><text x="66.1228%" y="191.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (76 samples, 0.07%)</title><rect x="66.0372%" y="165" width="0.0735%" height="15" fill="rgb(245,180,53)" fg:x="68264" fg:w="76"/><text x="66.2872%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (274 samples, 0.27%)</title><rect x="65.8467%" y="245" width="0.2651%" height="15" fill="rgb(231,88,51)" fg:x="68067" fg:w="274"/><text x="66.0967%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (247 samples, 0.24%)</title><rect x="65.8728%" y="229" width="0.2389%" height="15" fill="rgb(240,58,21)" fg:x="68094" fg:w="247"/><text x="66.1228%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (247 samples, 0.24%)</title><rect x="65.8728%" y="213" width="0.2389%" height="15" fill="rgb(237,21,10)" fg:x="68094" fg:w="247"/><text x="66.1228%" y="223.50"></text></g><g><title>rust_dealloc (282 samples, 0.27%)</title><rect x="65.8399%" y="261" width="0.2728%" height="15" fill="rgb(218,43,11)" fg:x="68060" fg:w="282"/><text x="66.0899%" y="271.50"></text></g><g><title>snmalloc::Slab::dealloc_slow (30 samples, 0.03%)</title><rect x="66.1291%" y="245" width="0.0290%" height="15" fill="rgb(218,221,29)" fg:x="68359" fg:w="30"/><text x="66.3791%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (375 samples, 0.36%)</title><rect x="65.8022%" y="405" width="0.3628%" height="15" fill="rgb(214,118,42)" fg:x="68021" fg:w="375"/><text x="66.0522%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (362 samples, 0.35%)</title><rect x="65.8147%" y="389" width="0.3502%" height="15" fill="rgb(251,200,26)" fg:x="68034" fg:w="362"/><text x="66.0647%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (350 samples, 0.34%)</title><rect x="65.8263%" y="373" width="0.3386%" height="15" fill="rgb(237,101,39)" fg:x="68046" fg:w="350"/><text x="66.0763%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (350 samples, 0.34%)</title><rect x="65.8263%" y="357" width="0.3386%" height="15" fill="rgb(251,117,11)" fg:x="68046" fg:w="350"/><text x="66.0763%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (350 samples, 0.34%)</title><rect x="65.8263%" y="341" width="0.3386%" height="15" fill="rgb(216,223,23)" fg:x="68046" fg:w="350"/><text x="66.0763%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (340 samples, 0.33%)</title><rect x="65.8360%" y="325" width="0.3289%" height="15" fill="rgb(251,54,12)" fg:x="68056" fg:w="340"/><text x="66.0860%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (340 samples, 0.33%)</title><rect x="65.8360%" y="309" width="0.3289%" height="15" fill="rgb(254,176,54)" fg:x="68056" fg:w="340"/><text x="66.0860%" y="319.50"></text></g><g><title>__rg_dealloc (340 samples, 0.33%)</title><rect x="65.8360%" y="293" width="0.3289%" height="15" fill="rgb(210,32,8)" fg:x="68056" fg:w="340"/><text x="66.0860%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (336 samples, 0.33%)</title><rect x="65.8399%" y="277" width="0.3250%" height="15" fill="rgb(235,52,38)" fg:x="68060" fg:w="336"/><text x="66.0899%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (54 samples, 0.05%)</title><rect x="66.1127%" y="261" width="0.0522%" height="15" fill="rgb(231,4,44)" fg:x="68342" fg:w="54"/><text x="66.3627%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="66.2191%" y="165" width="0.0184%" height="15" fill="rgb(249,2,32)" fg:x="68452" fg:w="19"/><text x="66.4691%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (19 samples, 0.02%)</title><rect x="66.2191%" y="149" width="0.0184%" height="15" fill="rgb(224,65,26)" fg:x="68452" fg:w="19"/><text x="66.4691%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (43 samples, 0.04%)</title><rect x="66.2046%" y="213" width="0.0416%" height="15" fill="rgb(250,73,40)" fg:x="68437" fg:w="43"/><text x="66.4546%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (43 samples, 0.04%)</title><rect x="66.2046%" y="197" width="0.0416%" height="15" fill="rgb(253,177,16)" fg:x="68437" fg:w="43"/><text x="66.4546%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (43 samples, 0.04%)</title><rect x="66.2046%" y="181" width="0.0416%" height="15" fill="rgb(217,32,34)" fg:x="68437" fg:w="43"/><text x="66.4546%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (74 samples, 0.07%)</title><rect x="66.1910%" y="245" width="0.0716%" height="15" fill="rgb(212,7,10)" fg:x="68423" fg:w="74"/><text x="66.4410%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (74 samples, 0.07%)</title><rect x="66.1910%" y="229" width="0.0716%" height="15" fill="rgb(245,89,8)" fg:x="68423" fg:w="74"/><text x="66.4410%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (17 samples, 0.02%)</title><rect x="66.2462%" y="213" width="0.0164%" height="15" fill="rgb(237,16,53)" fg:x="68480" fg:w="17"/><text x="66.4962%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (93 samples, 0.09%)</title><rect x="66.1814%" y="293" width="0.0900%" height="15" fill="rgb(250,204,30)" fg:x="68413" fg:w="93"/><text x="66.4314%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (83 samples, 0.08%)</title><rect x="66.1910%" y="277" width="0.0803%" height="15" fill="rgb(208,77,27)" fg:x="68423" fg:w="83"/><text x="66.4410%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (83 samples, 0.08%)</title><rect x="66.1910%" y="261" width="0.0803%" height="15" fill="rgb(250,204,28)" fg:x="68423" fg:w="83"/><text x="66.4410%" y="271.50"></text></g><g><title>rust_dealloc (103 samples, 0.10%)</title><rect x="66.1727%" y="309" width="0.0996%" height="15" fill="rgb(244,63,21)" fg:x="68404" fg:w="103"/><text x="66.4227%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (490 samples, 0.47%)</title><rect x="65.8022%" y="421" width="0.4740%" height="15" fill="rgb(236,85,44)" fg:x="68021" fg:w="490"/><text x="66.0522%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (115 samples, 0.11%)</title><rect x="66.1649%" y="405" width="0.1112%" height="15" fill="rgb(215,98,4)" fg:x="68396" fg:w="115"/><text x="66.4149%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.11%)</title><rect x="66.1649%" y="389" width="0.1112%" height="15" fill="rgb(235,38,11)" fg:x="68396" fg:w="115"/><text x="66.4149%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (115 samples, 0.11%)</title><rect x="66.1649%" y="373" width="0.1112%" height="15" fill="rgb(254,186,25)" fg:x="68396" fg:w="115"/><text x="66.4149%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (107 samples, 0.10%)</title><rect x="66.1727%" y="357" width="0.1035%" height="15" fill="rgb(225,55,31)" fg:x="68404" fg:w="107"/><text x="66.4227%" y="367.50"></text></g><g><title>__rg_dealloc (107 samples, 0.10%)</title><rect x="66.1727%" y="341" width="0.1035%" height="15" fill="rgb(211,15,21)" fg:x="68404" fg:w="107"/><text x="66.4227%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (107 samples, 0.10%)</title><rect x="66.1727%" y="325" width="0.1035%" height="15" fill="rgb(215,187,41)" fg:x="68404" fg:w="107"/><text x="66.4227%" y="335.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (16 samples, 0.02%)</title><rect x="66.3526%" y="373" width="0.0155%" height="15" fill="rgb(248,69,32)" fg:x="68590" fg:w="16"/><text x="66.6026%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (16 samples, 0.02%)</title><rect x="66.3526%" y="357" width="0.0155%" height="15" fill="rgb(252,102,52)" fg:x="68590" fg:w="16"/><text x="66.6026%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (22 samples, 0.02%)</title><rect x="66.4039%" y="341" width="0.0213%" height="15" fill="rgb(253,140,32)" fg:x="68643" fg:w="22"/><text x="66.6539%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (14 samples, 0.01%)</title><rect x="66.4116%" y="325" width="0.0135%" height="15" fill="rgb(216,56,42)" fg:x="68651" fg:w="14"/><text x="66.6616%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (62 samples, 0.06%)</title><rect x="66.3787%" y="357" width="0.0600%" height="15" fill="rgb(216,184,14)" fg:x="68617" fg:w="62"/><text x="66.6287%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (14 samples, 0.01%)</title><rect x="66.4251%" y="341" width="0.0135%" height="15" fill="rgb(237,187,27)" fg:x="68665" fg:w="14"/><text x="66.6751%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (72 samples, 0.07%)</title><rect x="66.3700%" y="373" width="0.0697%" height="15" fill="rgb(219,65,3)" fg:x="68608" fg:w="72"/><text x="66.6200%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (16 samples, 0.02%)</title><rect x="66.4397%" y="373" width="0.0155%" height="15" fill="rgb(245,83,25)" fg:x="68680" fg:w="16"/><text x="66.6897%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (200 samples, 0.19%)</title><rect x="66.2762%" y="421" width="0.1935%" height="15" fill="rgb(214,205,45)" fg:x="68511" fg:w="200"/><text x="66.5262%" y="431.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (185 samples, 0.18%)</title><rect x="66.2907%" y="405" width="0.1790%" height="15" fill="rgb(241,20,18)" fg:x="68526" fg:w="185"/><text x="66.5407%" y="415.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (185 samples, 0.18%)</title><rect x="66.2907%" y="389" width="0.1790%" height="15" fill="rgb(232,163,23)" fg:x="68526" fg:w="185"/><text x="66.5407%" y="399.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::update_min_max (15 samples, 0.01%)</title><rect x="66.4551%" y="373" width="0.0145%" height="15" fill="rgb(214,5,46)" fg:x="68696" fg:w="15"/><text x="66.7051%" y="383.50"></text></g><g><title>core::time::Duration::as_nanos (12 samples, 0.01%)</title><rect x="66.5180%" y="405" width="0.0116%" height="15" fill="rgb(229,78,17)" fg:x="68761" fg:w="12"/><text x="66.7680%" y="415.50"></text></g><g><title>tremor_common::time::nanotime (274 samples, 0.27%)</title><rect x="66.4696%" y="421" width="0.2651%" height="15" fill="rgb(248,89,10)" fg:x="68711" fg:w="274"/><text x="66.7196%" y="431.50"></text></g><g><title>std::time::SystemTime::now (202 samples, 0.20%)</title><rect x="66.5393%" y="405" width="0.1954%" height="15" fill="rgb(248,54,15)" fg:x="68783" fg:w="202"/><text x="66.7893%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (202 samples, 0.20%)</title><rect x="66.5393%" y="389" width="0.1954%" height="15" fill="rgb(223,116,6)" fg:x="68783" fg:w="202"/><text x="66.7893%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (202 samples, 0.20%)</title><rect x="66.5393%" y="373" width="0.1954%" height="15" fill="rgb(205,125,38)" fg:x="68783" fg:w="202"/><text x="66.7893%" y="383.50"></text></g><g><title>__clock_gettime_2 (46 samples, 0.04%)</title><rect x="66.6902%" y="357" width="0.0445%" height="15" fill="rgb(251,78,38)" fg:x="68939" fg:w="46"/><text x="66.9402%" y="367.50"></text></g><g><title>__vdso_clock_gettime (24 samples, 0.02%)</title><rect x="66.7115%" y="341" width="0.0232%" height="15" fill="rgb(253,78,28)" fg:x="68961" fg:w="24"/><text x="66.9615%" y="351.50"></text></g><g><title>start_thread (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1157" width="3.6112%" height="15" fill="rgb(209,120,3)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1167.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1141" width="3.6112%" height="15" fill="rgb(238,229,9)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1151.50">std:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1125" width="3.6112%" height="15" fill="rgb(253,159,18)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1135.50">&lt;all..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1109" width="3.6112%" height="15" fill="rgb(244,42,34)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1119.50">&lt;all..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1093" width="3.6112%" height="15" fill="rgb(224,8,7)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1103.50">core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1077" width="3.6112%" height="15" fill="rgb(210,201,45)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1087.50">std:..</text></g><g><title>std::panic::catch_unwind (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1061" width="3.6112%" height="15" fill="rgb(252,185,21)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1071.50">std:..</text></g><g><title>std::panicking::try (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1045" width="3.6112%" height="15" fill="rgb(223,131,1)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1055.50">std:..</text></g><g><title>std::panicking::try::do_call (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1029" width="3.6112%" height="15" fill="rgb(245,141,16)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1039.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,733 samples, 3.61%)</title><rect x="63.1351%" y="1013" width="3.6112%" height="15" fill="rgb(229,55,45)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1023.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="997" width="3.6112%" height="15" fill="rgb(208,92,15)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="1007.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,733 samples, 3.61%)</title><rect x="63.1351%" y="981" width="3.6112%" height="15" fill="rgb(234,185,47)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="991.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (3,733 samples, 3.61%)</title><rect x="63.1351%" y="965" width="3.6112%" height="15" fill="rgb(253,104,50)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="975.50">core..</text></g><g><title>async_global_executor::threading::thread_main_loop (3,733 samples, 3.61%)</title><rect x="63.1351%" y="949" width="3.6112%" height="15" fill="rgb(205,70,7)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="959.50">asyn..</text></g><g><title>std::panic::catch_unwind (3,733 samples, 3.61%)</title><rect x="63.1351%" y="933" width="3.6112%" height="15" fill="rgb(240,178,43)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="943.50">std:..</text></g><g><title>std::panicking::try (3,733 samples, 3.61%)</title><rect x="63.1351%" y="917" width="3.6112%" height="15" fill="rgb(214,112,2)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="927.50">std:..</text></g><g><title>std::panicking::try::do_call (3,733 samples, 3.61%)</title><rect x="63.1351%" y="901" width="3.6112%" height="15" fill="rgb(206,46,17)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="911.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="885" width="3.6112%" height="15" fill="rgb(225,220,16)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="895.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,733 samples, 3.61%)</title><rect x="63.1351%" y="869" width="3.6112%" height="15" fill="rgb(238,65,40)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="879.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,733 samples, 3.61%)</title><rect x="63.1351%" y="853" width="3.6112%" height="15" fill="rgb(230,151,21)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="863.50">std:..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="837" width="3.6112%" height="15" fill="rgb(218,58,49)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="847.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (3,733 samples, 3.61%)</title><rect x="63.1351%" y="821" width="3.6112%" height="15" fill="rgb(219,179,14)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="831.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="805" width="3.6112%" height="15" fill="rgb(223,72,1)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="815.50">asyn..</text></g><g><title>async_io::driver::block_on (3,733 samples, 3.61%)</title><rect x="63.1351%" y="789" width="3.6112%" height="15" fill="rgb(238,126,10)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="799.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="773" width="3.6112%" height="15" fill="rgb(224,206,38)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="783.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="757" width="3.6112%" height="15" fill="rgb(212,201,54)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="767.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="741" width="3.6112%" height="15" fill="rgb(218,154,48)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="751.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="725" width="3.6112%" height="15" fill="rgb(232,93,24)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="735.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="709" width="3.6112%" height="15" fill="rgb(245,30,21)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="719.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="693" width="3.6112%" height="15" fill="rgb(242,148,29)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="703.50">asyn..</text></g><g><title>async_task::runnable::Runnable::run (3,733 samples, 3.61%)</title><rect x="63.1351%" y="677" width="3.6112%" height="15" fill="rgb(244,153,54)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="687.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,733 samples, 3.61%)</title><rect x="63.1351%" y="661" width="3.6112%" height="15" fill="rgb(252,87,22)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="671.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="645" width="3.6112%" height="15" fill="rgb(210,51,29)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="655.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="629" width="3.6112%" height="15" fill="rgb(242,136,47)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="639.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="613" width="3.6112%" height="15" fill="rgb(238,68,4)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="623.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="597" width="3.6112%" height="15" fill="rgb(242,161,30)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="607.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,733 samples, 3.61%)</title><rect x="63.1351%" y="581" width="3.6112%" height="15" fill="rgb(218,58,44)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="591.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,733 samples, 3.61%)</title><rect x="63.1351%" y="565" width="3.6112%" height="15" fill="rgb(252,125,32)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="575.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,733 samples, 3.61%)</title><rect x="63.1351%" y="549" width="3.6112%" height="15" fill="rgb(219,178,0)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="559.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="533" width="3.6112%" height="15" fill="rgb(213,152,7)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="543.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="517" width="3.6112%" height="15" fill="rgb(249,109,34)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="527.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="501" width="3.6112%" height="15" fill="rgb(232,96,21)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="511.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (3,733 samples, 3.61%)</title><rect x="63.1351%" y="485" width="3.6112%" height="15" fill="rgb(228,27,39)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="495.50">trem..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="469" width="3.6112%" height="15" fill="rgb(211,182,52)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="479.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,733 samples, 3.61%)</title><rect x="63.1351%" y="453" width="3.6112%" height="15" fill="rgb(234,178,38)" fg:x="65264" fg:w="3733"/><text x="63.3851%" y="463.50">&lt;cor..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (2,160 samples, 2.09%)</title><rect x="64.6568%" y="437" width="2.0895%" height="15" fill="rgb(221,111,3)" fg:x="66837" fg:w="2160"/><text x="64.9068%" y="447.50">&lt;..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (12 samples, 0.01%)</title><rect x="66.7347%" y="421" width="0.0116%" height="15" fill="rgb(228,175,21)" fg:x="68985" fg:w="12"/><text x="66.9847%" y="431.50"></text></g><g><title>aligned_size (14 samples, 0.01%)</title><rect x="66.7734%" y="389" width="0.0135%" height="15" fill="rgb(228,174,43)" fg:x="69025" fg:w="14"/><text x="67.0234%" y="399.50"></text></g><g><title>rust_dealloc (18 samples, 0.02%)</title><rect x="66.7898%" y="309" width="0.0174%" height="15" fill="rgb(211,191,0)" fg:x="69042" fg:w="18"/><text x="67.0398%" y="319.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (14 samples, 0.01%)</title><rect x="66.8421%" y="277" width="0.0135%" height="15" fill="rgb(253,117,3)" fg:x="69096" fg:w="14"/><text x="67.0921%" y="287.50"></text></g><g><title> (14 samples, 0.01%)</title><rect x="66.8421%" y="261" width="0.0135%" height="15" fill="rgb(241,127,19)" fg:x="69096" fg:w="14"/><text x="67.0921%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (62 samples, 0.06%)</title><rect x="66.8092%" y="309" width="0.0600%" height="15" fill="rgb(218,103,12)" fg:x="69062" fg:w="62"/><text x="67.0592%" y="319.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (47 samples, 0.05%)</title><rect x="66.8237%" y="293" width="0.0455%" height="15" fill="rgb(236,214,43)" fg:x="69077" fg:w="47"/><text x="67.0737%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (88 samples, 0.09%)</title><rect x="66.7898%" y="341" width="0.0851%" height="15" fill="rgb(244,144,19)" fg:x="69042" fg:w="88"/><text x="67.0398%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (88 samples, 0.09%)</title><rect x="66.7898%" y="325" width="0.0851%" height="15" fill="rgb(246,188,10)" fg:x="69042" fg:w="88"/><text x="67.0398%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (97 samples, 0.09%)</title><rect x="66.7898%" y="373" width="0.0938%" height="15" fill="rgb(212,193,33)" fg:x="69042" fg:w="97"/><text x="67.0398%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (97 samples, 0.09%)</title><rect x="66.7898%" y="357" width="0.0938%" height="15" fill="rgb(241,51,29)" fg:x="69042" fg:w="97"/><text x="67.0398%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (110 samples, 0.11%)</title><rect x="66.7869%" y="389" width="0.1064%" height="15" fill="rgb(211,58,19)" fg:x="69039" fg:w="110"/><text x="67.0369%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (139 samples, 0.13%)</title><rect x="66.7705%" y="421" width="0.1345%" height="15" fill="rgb(229,111,26)" fg:x="69022" fg:w="139"/><text x="67.0205%" y="431.50"></text></g><g><title>rust_dealloc (136 samples, 0.13%)</title><rect x="66.7734%" y="405" width="0.1316%" height="15" fill="rgb(213,115,40)" fg:x="69025" fg:w="136"/><text x="67.0234%" y="415.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (12 samples, 0.01%)</title><rect x="66.8934%" y="389" width="0.0116%" height="15" fill="rgb(209,56,44)" fg:x="69149" fg:w="12"/><text x="67.1434%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (41 samples, 0.04%)</title><rect x="66.9069%" y="373" width="0.0397%" height="15" fill="rgb(230,108,32)" fg:x="69163" fg:w="41"/><text x="67.1569%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (25 samples, 0.02%)</title><rect x="66.9224%" y="357" width="0.0242%" height="15" fill="rgb(216,165,31)" fg:x="69179" fg:w="25"/><text x="67.1724%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (62 samples, 0.06%)</title><rect x="66.9069%" y="421" width="0.0600%" height="15" fill="rgb(218,122,21)" fg:x="69163" fg:w="62"/><text x="67.1569%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (62 samples, 0.06%)</title><rect x="66.9069%" y="405" width="0.0600%" height="15" fill="rgb(223,224,47)" fg:x="69163" fg:w="62"/><text x="67.1569%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.06%)</title><rect x="66.9069%" y="389" width="0.0600%" height="15" fill="rgb(238,102,44)" fg:x="69163" fg:w="62"/><text x="67.1569%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.03%)</title><rect x="67.4835%" y="261" width="0.0252%" height="15" fill="rgb(236,46,40)" fg:x="69759" fg:w="26"/><text x="67.7335%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.03%)</title><rect x="67.4835%" y="245" width="0.0252%" height="15" fill="rgb(247,202,50)" fg:x="69759" fg:w="26"/><text x="67.7335%" y="255.50"></text></g><g><title>__rg_dealloc (26 samples, 0.03%)</title><rect x="67.4835%" y="229" width="0.0252%" height="15" fill="rgb(209,99,20)" fg:x="69759" fg:w="26"/><text x="67.7335%" y="239.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (26 samples, 0.03%)</title><rect x="67.4835%" y="213" width="0.0252%" height="15" fill="rgb(252,27,34)" fg:x="69759" fg:w="26"/><text x="67.7335%" y="223.50"></text></g><g><title>core::mem::drop (816 samples, 0.79%)</title><rect x="67.4825%" y="309" width="0.7894%" height="15" fill="rgb(215,206,23)" fg:x="69758" fg:w="816"/><text x="67.7325%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (816 samples, 0.79%)</title><rect x="67.4825%" y="293" width="0.7894%" height="15" fill="rgb(212,135,36)" fg:x="69758" fg:w="816"/><text x="67.7325%" y="303.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (816 samples, 0.79%)</title><rect x="67.4825%" y="277" width="0.7894%" height="15" fill="rgb(240,189,1)" fg:x="69758" fg:w="816"/><text x="67.7325%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (783 samples, 0.76%)</title><rect x="67.5144%" y="261" width="0.7575%" height="15" fill="rgb(242,56,20)" fg:x="69791" fg:w="783"/><text x="67.7644%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (783 samples, 0.76%)</title><rect x="67.5144%" y="245" width="0.7575%" height="15" fill="rgb(247,132,33)" fg:x="69791" fg:w="783"/><text x="67.7644%" y="255.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (34 samples, 0.03%)</title><rect x="68.3918%" y="53" width="0.0329%" height="15" fill="rgb(208,149,11)" fg:x="70698" fg:w="34"/><text x="68.6418%" y="63.50"></text></g><g><title> (34 samples, 0.03%)</title><rect x="68.3918%" y="37" width="0.0329%" height="15" fill="rgb(211,33,11)" fg:x="70698" fg:w="34"/><text x="68.6418%" y="47.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (127 samples, 0.12%)</title><rect x="68.3202%" y="85" width="0.1229%" height="15" fill="rgb(221,29,38)" fg:x="70624" fg:w="127"/><text x="68.5702%" y="95.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (112 samples, 0.11%)</title><rect x="68.3348%" y="69" width="0.1083%" height="15" fill="rgb(206,182,49)" fg:x="70639" fg:w="112"/><text x="68.5848%" y="79.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (11 samples, 0.01%)</title><rect x="68.4325%" y="53" width="0.0106%" height="15" fill="rgb(216,140,1)" fg:x="70740" fg:w="11"/><text x="68.6825%" y="63.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (164 samples, 0.16%)</title><rect x="68.3106%" y="117" width="0.1587%" height="15" fill="rgb(232,57,40)" fg:x="70614" fg:w="164"/><text x="68.5606%" y="127.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (164 samples, 0.16%)</title><rect x="68.3106%" y="101" width="0.1587%" height="15" fill="rgb(224,186,18)" fg:x="70614" fg:w="164"/><text x="68.5606%" y="111.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (27 samples, 0.03%)</title><rect x="68.4431%" y="85" width="0.0261%" height="15" fill="rgb(215,121,11)" fg:x="70751" fg:w="27"/><text x="68.6931%" y="95.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (178 samples, 0.17%)</title><rect x="68.3106%" y="149" width="0.1722%" height="15" fill="rgb(245,147,10)" fg:x="70614" fg:w="178"/><text x="68.5606%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (178 samples, 0.17%)</title><rect x="68.3106%" y="133" width="0.1722%" height="15" fill="rgb(238,153,13)" fg:x="70614" fg:w="178"/><text x="68.5606%" y="143.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="68.4692%" y="117" width="0.0135%" height="15" fill="rgb(233,108,0)" fg:x="70778" fg:w="14"/><text x="68.7192%" y="127.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (14 samples, 0.01%)</title><rect x="68.4692%" y="101" width="0.0135%" height="15" fill="rgb(212,157,17)" fg:x="70778" fg:w="14"/><text x="68.7192%" y="111.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (14 samples, 0.01%)</title><rect x="68.4692%" y="85" width="0.0135%" height="15" fill="rgb(225,213,38)" fg:x="70778" fg:w="14"/><text x="68.7192%" y="95.50"></text></g><g><title>snmalloc::bits::align_down (14 samples, 0.01%)</title><rect x="68.4692%" y="69" width="0.0135%" height="15" fill="rgb(248,16,11)" fg:x="70778" fg:w="14"/><text x="68.7192%" y="79.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (194 samples, 0.19%)</title><rect x="68.3096%" y="165" width="0.1877%" height="15" fill="rgb(241,33,4)" fg:x="70613" fg:w="194"/><text x="68.5596%" y="175.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="68.4828%" y="149" width="0.0145%" height="15" fill="rgb(222,26,43)" fg:x="70792" fg:w="15"/><text x="68.7328%" y="159.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (15 samples, 0.01%)</title><rect x="68.4828%" y="133" width="0.0145%" height="15" fill="rgb(243,29,36)" fg:x="70792" fg:w="15"/><text x="68.7328%" y="143.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (15 samples, 0.01%)</title><rect x="68.4828%" y="117" width="0.0145%" height="15" fill="rgb(241,9,27)" fg:x="70792" fg:w="15"/><text x="68.7328%" y="127.50"></text></g><g><title>snmalloc::bits::align_down (15 samples, 0.01%)</title><rect x="68.4828%" y="101" width="0.0145%" height="15" fill="rgb(205,117,26)" fg:x="70792" fg:w="15"/><text x="68.7328%" y="111.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,066 samples, 1.03%)</title><rect x="67.4786%" y="325" width="1.0312%" height="15" fill="rgb(209,80,39)" fg:x="69754" fg:w="1066"/><text x="67.7286%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (246 samples, 0.24%)</title><rect x="68.2719%" y="309" width="0.2380%" height="15" fill="rgb(239,155,6)" fg:x="70574" fg:w="246"/><text x="68.5219%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (246 samples, 0.24%)</title><rect x="68.2719%" y="293" width="0.2380%" height="15" fill="rgb(212,104,12)" fg:x="70574" fg:w="246"/><text x="68.5219%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (246 samples, 0.24%)</title><rect x="68.2719%" y="277" width="0.2380%" height="15" fill="rgb(234,204,3)" fg:x="70574" fg:w="246"/><text x="68.5219%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (246 samples, 0.24%)</title><rect x="68.2719%" y="261" width="0.2380%" height="15" fill="rgb(251,218,7)" fg:x="70574" fg:w="246"/><text x="68.5219%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (217 samples, 0.21%)</title><rect x="68.2999%" y="245" width="0.2099%" height="15" fill="rgb(221,81,32)" fg:x="70603" fg:w="217"/><text x="68.5499%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (217 samples, 0.21%)</title><rect x="68.2999%" y="229" width="0.2099%" height="15" fill="rgb(214,152,26)" fg:x="70603" fg:w="217"/><text x="68.5499%" y="239.50"></text></g><g><title>__rg_dealloc (217 samples, 0.21%)</title><rect x="68.2999%" y="213" width="0.2099%" height="15" fill="rgb(223,22,3)" fg:x="70603" fg:w="217"/><text x="68.5499%" y="223.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (217 samples, 0.21%)</title><rect x="68.2999%" y="197" width="0.2099%" height="15" fill="rgb(207,174,7)" fg:x="70603" fg:w="217"/><text x="68.5499%" y="207.50"></text></g><g><title>rust_dealloc (216 samples, 0.21%)</title><rect x="68.3009%" y="181" width="0.2090%" height="15" fill="rgb(224,19,52)" fg:x="70604" fg:w="216"/><text x="68.5509%" y="191.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (13 samples, 0.01%)</title><rect x="68.4973%" y="165" width="0.0126%" height="15" fill="rgb(228,24,14)" fg:x="70807" fg:w="13"/><text x="68.7473%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,262 samples, 1.22%)</title><rect x="68.5098%" y="325" width="1.2208%" height="15" fill="rgb(230,153,43)" fg:x="70820" fg:w="1262"/><text x="68.7598%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,262 samples, 1.22%)</title><rect x="68.5098%" y="309" width="1.2208%" height="15" fill="rgb(231,106,12)" fg:x="70820" fg:w="1262"/><text x="68.7598%" y="319.50"></text></g><g><title>rust_dealloc (15 samples, 0.01%)</title><rect x="69.7433%" y="293" width="0.0145%" height="15" fill="rgb(215,92,2)" fg:x="72095" fg:w="15"/><text x="69.9933%" y="303.50"></text></g><g><title>size_to_sizeclass (11 samples, 0.01%)</title><rect x="69.7578%" y="293" width="0.0106%" height="15" fill="rgb(249,143,25)" fg:x="72110" fg:w="11"/><text x="70.0078%" y="303.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (22 samples, 0.02%)</title><rect x="69.8177%" y="197" width="0.0213%" height="15" fill="rgb(252,7,35)" fg:x="72172" fg:w="22"/><text x="70.0677%" y="207.50"></text></g><g><title> (22 samples, 0.02%)</title><rect x="69.8177%" y="181" width="0.0213%" height="15" fill="rgb(216,69,40)" fg:x="72172" fg:w="22"/><text x="70.0677%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (66 samples, 0.06%)</title><rect x="69.7907%" y="229" width="0.0638%" height="15" fill="rgb(240,36,33)" fg:x="72144" fg:w="66"/><text x="70.0407%" y="239.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (53 samples, 0.05%)</title><rect x="69.8032%" y="213" width="0.0513%" height="15" fill="rgb(231,128,14)" fg:x="72157" fg:w="53"/><text x="70.0532%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (16 samples, 0.02%)</title><rect x="69.8390%" y="197" width="0.0155%" height="15" fill="rgb(245,143,14)" fg:x="72194" fg:w="16"/><text x="70.0890%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,988 samples, 2.89%)</title><rect x="66.9669%" y="389" width="2.8905%" height="15" fill="rgb(222,130,28)" fg:x="69225" fg:w="2988"/><text x="67.2169%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (2,978 samples, 2.88%)</title><rect x="66.9766%" y="373" width="2.8809%" height="15" fill="rgb(212,10,48)" fg:x="69235" fg:w="2978"/><text x="67.2266%" y="383.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2,956 samples, 2.86%)</title><rect x="66.9978%" y="357" width="2.8596%" height="15" fill="rgb(254,118,45)" fg:x="69257" fg:w="2956"/><text x="67.2478%" y="367.50">co..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,956 samples, 2.86%)</title><rect x="66.9978%" y="341" width="2.8596%" height="15" fill="rgb(228,6,45)" fg:x="69257" fg:w="2956"/><text x="67.2478%" y="351.50">&lt;a..</text></g><g><title>rust_dealloc (131 samples, 0.13%)</title><rect x="69.7307%" y="325" width="0.1267%" height="15" fill="rgb(241,18,35)" fg:x="72082" fg:w="131"/><text x="69.9807%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (118 samples, 0.11%)</title><rect x="69.7433%" y="309" width="0.1142%" height="15" fill="rgb(227,214,53)" fg:x="72095" fg:w="118"/><text x="69.9933%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (92 samples, 0.09%)</title><rect x="69.7684%" y="293" width="0.0890%" height="15" fill="rgb(224,107,51)" fg:x="72121" fg:w="92"/><text x="70.0184%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (92 samples, 0.09%)</title><rect x="69.7684%" y="277" width="0.0890%" height="15" fill="rgb(248,60,28)" fg:x="72121" fg:w="92"/><text x="70.0184%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (92 samples, 0.09%)</title><rect x="69.7684%" y="261" width="0.0890%" height="15" fill="rgb(249,101,23)" fg:x="72121" fg:w="92"/><text x="70.0184%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (92 samples, 0.09%)</title><rect x="69.7684%" y="245" width="0.0890%" height="15" fill="rgb(228,51,19)" fg:x="72121" fg:w="92"/><text x="70.0184%" y="255.50"></text></g><g><title>aligned_size (18 samples, 0.02%)</title><rect x="69.8710%" y="277" width="0.0174%" height="15" fill="rgb(213,20,6)" fg:x="72227" fg:w="18"/><text x="70.1210%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::public_state (12 samples, 0.01%)</title><rect x="69.9087%" y="197" width="0.0116%" height="15" fill="rgb(212,124,10)" fg:x="72266" fg:w="12"/><text x="70.1587%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (15 samples, 0.01%)</title><rect x="69.9503%" y="165" width="0.0145%" height="15" fill="rgb(248,3,40)" fg:x="72309" fg:w="15"/><text x="70.2003%" y="175.50"></text></g><g><title> (15 samples, 0.01%)</title><rect x="69.9503%" y="149" width="0.0145%" height="15" fill="rgb(223,178,23)" fg:x="72309" fg:w="15"/><text x="70.2003%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (53 samples, 0.05%)</title><rect x="69.9203%" y="197" width="0.0513%" height="15" fill="rgb(240,132,45)" fg:x="72278" fg:w="53"/><text x="70.1703%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (40 samples, 0.04%)</title><rect x="69.9329%" y="181" width="0.0387%" height="15" fill="rgb(245,164,36)" fg:x="72291" fg:w="40"/><text x="70.1829%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (90 samples, 0.09%)</title><rect x="69.9048%" y="229" width="0.0871%" height="15" fill="rgb(231,188,53)" fg:x="72262" fg:w="90"/><text x="70.1548%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (90 samples, 0.09%)</title><rect x="69.9048%" y="213" width="0.0871%" height="15" fill="rgb(237,198,39)" fg:x="72262" fg:w="90"/><text x="70.1548%" y="223.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (21 samples, 0.02%)</title><rect x="69.9716%" y="197" width="0.0203%" height="15" fill="rgb(223,120,35)" fg:x="72331" fg:w="21"/><text x="70.2216%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (120 samples, 0.12%)</title><rect x="69.8884%" y="277" width="0.1161%" height="15" fill="rgb(253,107,49)" fg:x="72245" fg:w="120"/><text x="70.1384%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (103 samples, 0.10%)</title><rect x="69.9048%" y="261" width="0.0996%" height="15" fill="rgb(216,44,31)" fg:x="72262" fg:w="103"/><text x="70.1548%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (103 samples, 0.10%)</title><rect x="69.9048%" y="245" width="0.0996%" height="15" fill="rgb(253,87,21)" fg:x="72262" fg:w="103"/><text x="70.1548%" y="255.50"></text></g><g><title>snmalloc::Metaslab::get_slab&lt;void, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="69.9919%" y="229" width="0.0126%" height="15" fill="rgb(226,18,2)" fg:x="72352" fg:w="13"/><text x="70.2419%" y="239.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab, (snmalloc::capptr_bounds)0&gt; (13 samples, 0.01%)</title><rect x="69.9919%" y="213" width="0.0126%" height="15" fill="rgb(216,8,46)" fg:x="72352" fg:w="13"/><text x="70.2419%" y="223.50"></text></g><g><title>snmalloc::pointer_align_down&lt;16384ul, snmalloc::Slab&gt; (13 samples, 0.01%)</title><rect x="69.9919%" y="197" width="0.0126%" height="15" fill="rgb(226,140,39)" fg:x="72352" fg:w="13"/><text x="70.2419%" y="207.50"></text></g><g><title>snmalloc::bits::align_down (13 samples, 0.01%)</title><rect x="69.9919%" y="181" width="0.0126%" height="15" fill="rgb(221,194,54)" fg:x="72352" fg:w="13"/><text x="70.2419%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (154 samples, 0.15%)</title><rect x="69.8574%" y="389" width="0.1490%" height="15" fill="rgb(213,92,11)" fg:x="72213" fg:w="154"/><text x="70.1074%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (154 samples, 0.15%)</title><rect x="69.8574%" y="373" width="0.1490%" height="15" fill="rgb(229,162,46)" fg:x="72213" fg:w="154"/><text x="70.1074%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (154 samples, 0.15%)</title><rect x="69.8574%" y="357" width="0.1490%" height="15" fill="rgb(214,111,36)" fg:x="72213" fg:w="154"/><text x="70.1074%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (140 samples, 0.14%)</title><rect x="69.8710%" y="341" width="0.1354%" height="15" fill="rgb(207,6,21)" fg:x="72227" fg:w="140"/><text x="70.1210%" y="351.50"></text></g><g><title>__rg_dealloc (140 samples, 0.14%)</title><rect x="69.8710%" y="325" width="0.1354%" height="15" fill="rgb(213,127,38)" fg:x="72227" fg:w="140"/><text x="70.1210%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (140 samples, 0.14%)</title><rect x="69.8710%" y="309" width="0.1354%" height="15" fill="rgb(238,118,32)" fg:x="72227" fg:w="140"/><text x="70.1210%" y="319.50"></text></g><g><title>rust_dealloc (140 samples, 0.14%)</title><rect x="69.8710%" y="293" width="0.1354%" height="15" fill="rgb(240,139,39)" fg:x="72227" fg:w="140"/><text x="70.1210%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (3,143 samples, 3.04%)</title><rect x="66.9669%" y="405" width="3.0405%" height="15" fill="rgb(235,10,37)" fg:x="69225" fg:w="3143"/><text x="67.2169%" y="415.50">cor..</text></g><g><title>rust_dealloc (12 samples, 0.01%)</title><rect x="70.0248%" y="357" width="0.0116%" height="15" fill="rgb(249,171,38)" fg:x="72386" fg:w="12"/><text x="70.2748%" y="367.50"></text></g><g><title>size_to_sizeclass (17 samples, 0.02%)</title><rect x="70.0364%" y="357" width="0.0164%" height="15" fill="rgb(242,144,32)" fg:x="72398" fg:w="17"/><text x="70.2864%" y="367.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="70.0731%" y="293" width="0.0106%" height="15" fill="rgb(217,117,21)" fg:x="72436" fg:w="11"/><text x="70.3231%" y="303.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="70.0731%" y="277" width="0.0106%" height="15" fill="rgb(249,87,1)" fg:x="72436" fg:w="11"/><text x="70.3231%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (16 samples, 0.02%)</title><rect x="70.1273%" y="261" width="0.0155%" height="15" fill="rgb(248,196,48)" fg:x="72492" fg:w="16"/><text x="70.3773%" y="271.50"></text></g><g><title> (16 samples, 0.02%)</title><rect x="70.1273%" y="245" width="0.0155%" height="15" fill="rgb(251,206,33)" fg:x="72492" fg:w="16"/><text x="70.3773%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (73 samples, 0.07%)</title><rect x="70.0838%" y="293" width="0.0706%" height="15" fill="rgb(232,141,28)" fg:x="72447" fg:w="73"/><text x="70.3338%" y="303.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (55 samples, 0.05%)</title><rect x="70.1012%" y="277" width="0.0532%" height="15" fill="rgb(209,167,14)" fg:x="72465" fg:w="55"/><text x="70.3512%" y="287.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (12 samples, 0.01%)</title><rect x="70.1428%" y="261" width="0.0116%" height="15" fill="rgb(225,11,50)" fg:x="72508" fg:w="12"/><text x="70.3928%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (108 samples, 0.10%)</title><rect x="70.0528%" y="325" width="0.1045%" height="15" fill="rgb(209,50,20)" fg:x="72415" fg:w="108"/><text x="70.3028%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (108 samples, 0.10%)</title><rect x="70.0528%" y="309" width="0.1045%" height="15" fill="rgb(212,17,46)" fg:x="72415" fg:w="108"/><text x="70.3028%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (109 samples, 0.11%)</title><rect x="70.0528%" y="357" width="0.1054%" height="15" fill="rgb(216,101,39)" fg:x="72415" fg:w="109"/><text x="70.3028%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (109 samples, 0.11%)</title><rect x="70.0528%" y="341" width="0.1054%" height="15" fill="rgb(212,228,48)" fg:x="72415" fg:w="109"/><text x="70.3028%" y="351.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (140 samples, 0.14%)</title><rect x="70.0248%" y="373" width="0.1354%" height="15" fill="rgb(250,6,50)" fg:x="72386" fg:w="140"/><text x="70.2748%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (3,529 samples, 3.41%)</title><rect x="66.7473%" y="437" width="3.4139%" height="15" fill="rgb(250,160,48)" fg:x="68998" fg:w="3529"/><text x="66.9973%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (3,302 samples, 3.19%)</title><rect x="66.9669%" y="421" width="3.1943%" height="15" fill="rgb(244,216,33)" fg:x="69225" fg:w="3302"/><text x="67.2169%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (159 samples, 0.15%)</title><rect x="70.0074%" y="405" width="0.1538%" height="15" fill="rgb(207,157,5)" fg:x="72368" fg:w="159"/><text x="70.2574%" y="415.50"></text></g><g><title>rust_dealloc (153 samples, 0.15%)</title><rect x="70.0132%" y="389" width="0.1480%" height="15" fill="rgb(228,199,8)" fg:x="72374" fg:w="153"/><text x="70.2632%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (98 samples, 0.09%)</title><rect x="70.2357%" y="373" width="0.0948%" height="15" fill="rgb(227,80,20)" fg:x="72604" fg:w="98"/><text x="70.4857%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::ge (98 samples, 0.09%)</title><rect x="70.2357%" y="357" width="0.0948%" height="15" fill="rgb(222,9,33)" fg:x="72604" fg:w="98"/><text x="70.4857%" y="367.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (95 samples, 0.09%)</title><rect x="70.2386%" y="341" width="0.0919%" height="15" fill="rgb(239,44,28)" fg:x="72607" fg:w="95"/><text x="70.4886%" y="351.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (95 samples, 0.09%)</title><rect x="70.2386%" y="325" width="0.0919%" height="15" fill="rgb(249,187,43)" fg:x="72607" fg:w="95"/><text x="70.4886%" y="335.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (95 samples, 0.09%)</title><rect x="70.2386%" y="309" width="0.0919%" height="15" fill="rgb(216,141,28)" fg:x="72607" fg:w="95"/><text x="70.4886%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (51 samples, 0.05%)</title><rect x="70.2811%" y="293" width="0.0493%" height="15" fill="rgb(230,154,53)" fg:x="72651" fg:w="51"/><text x="70.5311%" y="303.50"></text></g><g><title>std::time::SystemTime::duration_since (208 samples, 0.20%)</title><rect x="70.1612%" y="421" width="0.2012%" height="15" fill="rgb(227,82,4)" fg:x="72527" fg:w="208"/><text x="70.4112%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (208 samples, 0.20%)</title><rect x="70.1612%" y="405" width="0.2012%" height="15" fill="rgb(220,107,16)" fg:x="72527" fg:w="208"/><text x="70.4112%" y="415.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (208 samples, 0.20%)</title><rect x="70.1612%" y="389" width="0.2012%" height="15" fill="rgb(207,187,2)" fg:x="72527" fg:w="208"/><text x="70.4112%" y="399.50"></text></g><g><title>core::time::Duration::new (33 samples, 0.03%)</title><rect x="70.3305%" y="373" width="0.0319%" height="15" fill="rgb(210,162,52)" fg:x="72702" fg:w="33"/><text x="70.5805%" y="383.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,397 samples, 4.25%)</title><rect x="66.7463%" y="1157" width="4.2536%" height="15" fill="rgb(217,216,49)" fg:x="68997" fg:w="4397"/><text x="66.9963%" y="1167.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1141" width="4.2526%" height="15" fill="rgb(218,146,49)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1151.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1125" width="4.2526%" height="15" fill="rgb(216,55,40)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1135.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1109" width="4.2526%" height="15" fill="rgb(208,196,21)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1119.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1093" width="4.2526%" height="15" fill="rgb(242,117,42)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1103.50">std::..</text></g><g><title>std::panic::catch_unwind (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1077" width="4.2526%" height="15" fill="rgb(210,11,23)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1087.50">std::..</text></g><g><title>std::panicking::try (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1061" width="4.2526%" height="15" fill="rgb(217,110,2)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1071.50">std::..</text></g><g><title>std::panicking::try::do_call (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1045" width="4.2526%" height="15" fill="rgb(229,77,54)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1055.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1029" width="4.2526%" height="15" fill="rgb(218,53,16)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1039.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="1013" width="4.2526%" height="15" fill="rgb(215,38,13)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1023.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,396 samples, 4.25%)</title><rect x="66.7473%" y="997" width="4.2526%" height="15" fill="rgb(235,42,18)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="1007.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (4,396 samples, 4.25%)</title><rect x="66.7473%" y="981" width="4.2526%" height="15" fill="rgb(219,66,54)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="991.50">core:..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,396 samples, 4.25%)</title><rect x="66.7473%" y="965" width="4.2526%" height="15" fill="rgb(222,205,4)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="975.50">async..</text></g><g><title>std::panic::catch_unwind (4,396 samples, 4.25%)</title><rect x="66.7473%" y="949" width="4.2526%" height="15" fill="rgb(227,213,46)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="959.50">std::..</text></g><g><title>std::panicking::try (4,396 samples, 4.25%)</title><rect x="66.7473%" y="933" width="4.2526%" height="15" fill="rgb(250,145,42)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="943.50">std::..</text></g><g><title>std::panicking::try::do_call (4,396 samples, 4.25%)</title><rect x="66.7473%" y="917" width="4.2526%" height="15" fill="rgb(219,15,2)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="927.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="901" width="4.2526%" height="15" fill="rgb(231,181,52)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="911.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,396 samples, 4.25%)</title><rect x="66.7473%" y="885" width="4.2526%" height="15" fill="rgb(235,1,42)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="895.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,396 samples, 4.25%)</title><rect x="66.7473%" y="869" width="4.2526%" height="15" fill="rgb(249,88,27)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="879.50">std::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="853" width="4.2526%" height="15" fill="rgb(235,145,16)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="863.50">async..</text></g><g><title>async_global_executor::reactor::block_on (4,396 samples, 4.25%)</title><rect x="66.7473%" y="837" width="4.2526%" height="15" fill="rgb(237,114,19)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="847.50">async..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="821" width="4.2526%" height="15" fill="rgb(238,51,50)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="831.50">async..</text></g><g><title>async_io::driver::block_on (4,396 samples, 4.25%)</title><rect x="66.7473%" y="805" width="4.2526%" height="15" fill="rgb(205,194,25)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="815.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="789" width="4.2526%" height="15" fill="rgb(215,203,17)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="799.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="773" width="4.2526%" height="15" fill="rgb(233,112,49)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="783.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="757" width="4.2526%" height="15" fill="rgb(241,130,26)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="767.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="741" width="4.2526%" height="15" fill="rgb(252,223,19)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="751.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="725" width="4.2526%" height="15" fill="rgb(211,95,25)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="735.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="709" width="4.2526%" height="15" fill="rgb(251,182,27)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="719.50">async..</text></g><g><title>async_task::runnable::Runnable::run (4,396 samples, 4.25%)</title><rect x="66.7473%" y="693" width="4.2526%" height="15" fill="rgb(238,24,4)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="703.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,396 samples, 4.25%)</title><rect x="66.7473%" y="677" width="4.2526%" height="15" fill="rgb(224,220,25)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="687.50">async..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="661" width="4.2526%" height="15" fill="rgb(239,133,26)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="671.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="645" width="4.2526%" height="15" fill="rgb(211,94,48)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="655.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="629" width="4.2526%" height="15" fill="rgb(239,87,6)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="639.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="613" width="4.2526%" height="15" fill="rgb(227,62,0)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="623.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,396 samples, 4.25%)</title><rect x="66.7473%" y="597" width="4.2526%" height="15" fill="rgb(211,226,4)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="607.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,396 samples, 4.25%)</title><rect x="66.7473%" y="581" width="4.2526%" height="15" fill="rgb(253,38,52)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="591.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,396 samples, 4.25%)</title><rect x="66.7473%" y="565" width="4.2526%" height="15" fill="rgb(229,126,40)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="575.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="549" width="4.2526%" height="15" fill="rgb(229,165,44)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="559.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="533" width="4.2526%" height="15" fill="rgb(247,95,47)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="543.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="517" width="4.2526%" height="15" fill="rgb(216,140,30)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="527.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="501" width="4.2526%" height="15" fill="rgb(246,214,8)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="511.50">tremo..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="485" width="4.2526%" height="15" fill="rgb(227,224,15)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="495.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,396 samples, 4.25%)</title><rect x="66.7473%" y="469" width="4.2526%" height="15" fill="rgb(233,175,4)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="479.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (4,396 samples, 4.25%)</title><rect x="66.7473%" y="453" width="4.2526%" height="15" fill="rgb(221,66,45)" fg:x="68998" fg:w="4396"/><text x="66.9973%" y="463.50">&lt;trem..</text></g><g><title>tremor_common::time::nanotime (867 samples, 0.84%)</title><rect x="70.1612%" y="437" width="0.8387%" height="15" fill="rgb(221,178,18)" fg:x="72527" fg:w="867"/><text x="70.4112%" y="447.50"></text></g><g><title>std::time::SystemTime::now (659 samples, 0.64%)</title><rect x="70.3624%" y="421" width="0.6375%" height="15" fill="rgb(213,81,29)" fg:x="72735" fg:w="659"/><text x="70.6124%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (659 samples, 0.64%)</title><rect x="70.3624%" y="405" width="0.6375%" height="15" fill="rgb(220,89,49)" fg:x="72735" fg:w="659"/><text x="70.6124%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::now (659 samples, 0.64%)</title><rect x="70.3624%" y="389" width="0.6375%" height="15" fill="rgb(227,60,33)" fg:x="72735" fg:w="659"/><text x="70.6124%" y="399.50"></text></g><g><title>__clock_gettime_2 (659 samples, 0.64%)</title><rect x="70.3624%" y="373" width="0.6375%" height="15" fill="rgb(205,113,12)" fg:x="72735" fg:w="659"/><text x="70.6124%" y="383.50"></text></g><g><title>__vdso_clock_gettime (659 samples, 0.64%)</title><rect x="70.3624%" y="357" width="0.6375%" height="15" fill="rgb(211,32,1)" fg:x="72735" fg:w="659"/><text x="70.6124%" y="367.50"></text></g><g><title>[[vdso]] (424 samples, 0.41%)</title><rect x="70.5897%" y="341" width="0.4102%" height="15" fill="rgb(246,2,12)" fg:x="72970" fg:w="424"/><text x="70.8397%" y="351.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (71 samples, 0.07%)</title><rect x="70.9999%" y="1157" width="0.0687%" height="15" fill="rgb(243,37,27)" fg:x="73394" fg:w="71"/><text x="71.2499%" y="1167.50"></text></g><g><title>__memcpy_avx_unaligned_erms (946 samples, 0.92%)</title><rect x="71.1876%" y="581" width="0.9151%" height="15" fill="rgb(248,211,31)" fg:x="73588" fg:w="946"/><text x="71.4376%" y="591.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,003 samples, 0.97%)</title><rect x="71.1421%" y="597" width="0.9703%" height="15" fill="rgb(242,146,47)" fg:x="73541" fg:w="1003"/><text x="71.3921%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,490 samples, 1.44%)</title><rect x="71.0957%" y="613" width="1.4414%" height="15" fill="rgb(206,70,20)" fg:x="73493" fg:w="1490"/><text x="71.3457%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (439 samples, 0.42%)</title><rect x="72.1124%" y="597" width="0.4247%" height="15" fill="rgb(215,10,51)" fg:x="74544" fg:w="439"/><text x="72.3624%" y="607.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,528 samples, 1.48%)</title><rect x="71.0686%" y="645" width="1.4782%" height="15" fill="rgb(243,178,53)" fg:x="73465" fg:w="1528"/><text x="71.3186%" y="655.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,528 samples, 1.48%)</title><rect x="71.0686%" y="629" width="1.4782%" height="15" fill="rgb(233,221,20)" fg:x="73465" fg:w="1528"/><text x="71.3186%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="72.6715%" y="453" width="0.0348%" height="15" fill="rgb(218,95,35)" fg:x="75122" fg:w="36"/><text x="72.9215%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (33 samples, 0.03%)</title><rect x="72.6744%" y="437" width="0.0319%" height="15" fill="rgb(229,13,5)" fg:x="75125" fg:w="33"/><text x="72.9244%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,701 samples, 1.65%)</title><rect x="71.0686%" y="661" width="1.6455%" height="15" fill="rgb(252,164,30)" fg:x="73465" fg:w="1701"/><text x="71.3186%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (173 samples, 0.17%)</title><rect x="72.5467%" y="645" width="0.1674%" height="15" fill="rgb(232,68,36)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 0.17%)</title><rect x="72.5467%" y="629" width="0.1674%" height="15" fill="rgb(219,59,54)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="639.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (173 samples, 0.17%)</title><rect x="72.5467%" y="613" width="0.1674%" height="15" fill="rgb(250,92,33)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (173 samples, 0.17%)</title><rect x="72.5467%" y="597" width="0.1674%" height="15" fill="rgb(229,162,54)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (173 samples, 0.17%)</title><rect x="72.5467%" y="581" width="0.1674%" height="15" fill="rgb(244,114,52)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (173 samples, 0.17%)</title><rect x="72.5467%" y="565" width="0.1674%" height="15" fill="rgb(212,211,43)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (173 samples, 0.17%)</title><rect x="72.5467%" y="549" width="0.1674%" height="15" fill="rgb(226,147,8)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (173 samples, 0.17%)</title><rect x="72.5467%" y="533" width="0.1674%" height="15" fill="rgb(226,23,13)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (173 samples, 0.17%)</title><rect x="72.5467%" y="517" width="0.1674%" height="15" fill="rgb(240,63,4)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (173 samples, 0.17%)</title><rect x="72.5467%" y="501" width="0.1674%" height="15" fill="rgb(221,1,32)" fg:x="74993" fg:w="173"/><text x="72.7967%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (44 samples, 0.04%)</title><rect x="72.6715%" y="485" width="0.0426%" height="15" fill="rgb(242,117,10)" fg:x="75122" fg:w="44"/><text x="72.9215%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (44 samples, 0.04%)</title><rect x="72.6715%" y="469" width="0.0426%" height="15" fill="rgb(249,172,44)" fg:x="75122" fg:w="44"/><text x="72.9215%" y="479.50"></text></g><g><title>size_to_sizeclass (13 samples, 0.01%)</title><rect x="72.7257%" y="389" width="0.0126%" height="15" fill="rgb(244,46,45)" fg:x="75178" fg:w="13"/><text x="72.9757%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::empty (17 samples, 0.02%)</title><rect x="72.7634%" y="373" width="0.0164%" height="15" fill="rgb(206,43,17)" fg:x="75217" fg:w="17"/><text x="73.0134%" y="383.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (17 samples, 0.02%)</title><rect x="72.7634%" y="357" width="0.0164%" height="15" fill="rgb(239,218,39)" fg:x="75217" fg:w="17"/><text x="73.0134%" y="367.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (258 samples, 0.25%)</title><rect x="72.7209%" y="421" width="0.2496%" height="15" fill="rgb(208,169,54)" fg:x="75173" fg:w="258"/><text x="72.9709%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (257 samples, 0.25%)</title><rect x="72.7218%" y="405" width="0.2486%" height="15" fill="rgb(247,25,42)" fg:x="75174" fg:w="257"/><text x="72.9718%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (240 samples, 0.23%)</title><rect x="72.7383%" y="389" width="0.2322%" height="15" fill="rgb(226,23,31)" fg:x="75191" fg:w="240"/><text x="72.9883%" y="399.50"></text></g><g><title>snmalloc::FreeListIter::take (197 samples, 0.19%)</title><rect x="72.7799%" y="373" width="0.1906%" height="15" fill="rgb(247,16,28)" fg:x="75234" fg:w="197"/><text x="73.0299%" y="383.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (197 samples, 0.19%)</title><rect x="72.7799%" y="357" width="0.1906%" height="15" fill="rgb(231,147,38)" fg:x="75234" fg:w="197"/><text x="73.0299%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (272 samples, 0.26%)</title><rect x="72.7141%" y="645" width="0.2631%" height="15" fill="rgb(253,81,48)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (272 samples, 0.26%)</title><rect x="72.7141%" y="629" width="0.2631%" height="15" fill="rgb(249,222,43)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (272 samples, 0.26%)</title><rect x="72.7141%" y="613" width="0.2631%" height="15" fill="rgb(221,3,27)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (272 samples, 0.26%)</title><rect x="72.7141%" y="597" width="0.2631%" height="15" fill="rgb(228,180,5)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="607.50"></text></g><g><title>value_trait::Builder::object (272 samples, 0.26%)</title><rect x="72.7141%" y="581" width="0.2631%" height="15" fill="rgb(227,131,42)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (272 samples, 0.26%)</title><rect x="72.7141%" y="565" width="0.2631%" height="15" fill="rgb(212,3,39)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (272 samples, 0.26%)</title><rect x="72.7141%" y="549" width="0.2631%" height="15" fill="rgb(226,45,5)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (272 samples, 0.26%)</title><rect x="72.7141%" y="533" width="0.2631%" height="15" fill="rgb(215,167,45)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (272 samples, 0.26%)</title><rect x="72.7141%" y="517" width="0.2631%" height="15" fill="rgb(250,218,53)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (272 samples, 0.26%)</title><rect x="72.7141%" y="501" width="0.2631%" height="15" fill="rgb(207,140,0)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="511.50"></text></g><g><title>alloc::alloc::alloc (272 samples, 0.26%)</title><rect x="72.7141%" y="485" width="0.2631%" height="15" fill="rgb(238,133,51)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="495.50"></text></g><g><title>__rg_alloc (272 samples, 0.26%)</title><rect x="72.7141%" y="469" width="0.2631%" height="15" fill="rgb(218,203,53)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (272 samples, 0.26%)</title><rect x="72.7141%" y="453" width="0.2631%" height="15" fill="rgb(226,184,25)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="463.50"></text></g><g><title>rust_alloc (272 samples, 0.26%)</title><rect x="72.7141%" y="437" width="0.2631%" height="15" fill="rgb(231,121,21)" fg:x="75166" fg:w="272"/><text x="72.9641%" y="447.50"></text></g><g><title>rust_alloc (15 samples, 0.01%)</title><rect x="72.9898%" y="469" width="0.0145%" height="15" fill="rgb(251,14,34)" fg:x="75451" fg:w="15"/><text x="73.2398%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::empty (24 samples, 0.02%)</title><rect x="73.0198%" y="453" width="0.0232%" height="15" fill="rgb(249,193,11)" fg:x="75482" fg:w="24"/><text x="73.2698%" y="463.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (24 samples, 0.02%)</title><rect x="73.0198%" y="437" width="0.0232%" height="15" fill="rgb(220,172,37)" fg:x="75482" fg:w="24"/><text x="73.2698%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (124 samples, 0.12%)</title><rect x="72.9898%" y="501" width="0.1200%" height="15" fill="rgb(231,229,43)" fg:x="75451" fg:w="124"/><text x="73.2398%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (124 samples, 0.12%)</title><rect x="72.9898%" y="485" width="0.1200%" height="15" fill="rgb(250,161,5)" fg:x="75451" fg:w="124"/><text x="73.2398%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (106 samples, 0.10%)</title><rect x="73.0072%" y="469" width="0.1025%" height="15" fill="rgb(218,225,18)" fg:x="75469" fg:w="106"/><text x="73.2572%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (69 samples, 0.07%)</title><rect x="73.0430%" y="453" width="0.0667%" height="15" fill="rgb(245,45,42)" fg:x="75506" fg:w="69"/><text x="73.2930%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (69 samples, 0.07%)</title><rect x="73.0430%" y="437" width="0.0667%" height="15" fill="rgb(211,115,1)" fg:x="75506" fg:w="69"/><text x="73.2930%" y="447.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1157" width="2.0499%" height="15" fill="rgb(248,133,52)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1167.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1141" width="2.0499%" height="15" fill="rgb(238,100,21)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1151.50">c..</text></g><g><title>async_global_executor::threading::thread_main_loop (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1125" width="2.0499%" height="15" fill="rgb(247,144,11)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1135.50">a..</text></g><g><title>std::panic::catch_unwind (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1109" width="2.0499%" height="15" fill="rgb(206,164,16)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1119.50">s..</text></g><g><title>std::panicking::try (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1093" width="2.0499%" height="15" fill="rgb(222,34,3)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1103.50">s..</text></g><g><title>std::panicking::try::do_call (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1077" width="2.0499%" height="15" fill="rgb(248,82,4)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1087.50">s..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1061" width="2.0499%" height="15" fill="rgb(228,81,46)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1071.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1045" width="2.0499%" height="15" fill="rgb(227,67,47)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1055.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1029" width="2.0499%" height="15" fill="rgb(215,93,53)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1039.50">s..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (2,119 samples, 2.05%)</title><rect x="71.0686%" y="1013" width="2.0499%" height="15" fill="rgb(248,194,39)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1023.50">a..</text></g><g><title>async_global_executor::reactor::block_on (2,119 samples, 2.05%)</title><rect x="71.0686%" y="997" width="2.0499%" height="15" fill="rgb(215,5,19)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="1007.50">a..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,119 samples, 2.05%)</title><rect x="71.0686%" y="981" width="2.0499%" height="15" fill="rgb(226,215,51)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="991.50">a..</text></g><g><title>async_io::driver::block_on (2,119 samples, 2.05%)</title><rect x="71.0686%" y="965" width="2.0499%" height="15" fill="rgb(225,56,26)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="975.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,119 samples, 2.05%)</title><rect x="71.0686%" y="949" width="2.0499%" height="15" fill="rgb(222,75,29)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="959.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,119 samples, 2.05%)</title><rect x="71.0686%" y="933" width="2.0499%" height="15" fill="rgb(236,139,6)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="943.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (2,119 samples, 2.05%)</title><rect x="71.0686%" y="917" width="2.0499%" height="15" fill="rgb(223,137,36)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="927.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,119 samples, 2.05%)</title><rect x="71.0686%" y="901" width="2.0499%" height="15" fill="rgb(226,99,2)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="911.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,119 samples, 2.05%)</title><rect x="71.0686%" y="885" width="2.0499%" height="15" fill="rgb(206,133,23)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="895.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,119 samples, 2.05%)</title><rect x="71.0686%" y="869" width="2.0499%" height="15" fill="rgb(243,173,15)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="879.50">a..</text></g><g><title>async_task::runnable::Runnable::run (2,119 samples, 2.05%)</title><rect x="71.0686%" y="853" width="2.0499%" height="15" fill="rgb(228,69,28)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="863.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,119 samples, 2.05%)</title><rect x="71.0686%" y="837" width="2.0499%" height="15" fill="rgb(212,51,22)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="847.50">a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,119 samples, 2.05%)</title><rect x="71.0686%" y="821" width="2.0499%" height="15" fill="rgb(227,113,0)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="831.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,119 samples, 2.05%)</title><rect x="71.0686%" y="805" width="2.0499%" height="15" fill="rgb(252,84,27)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="815.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,119 samples, 2.05%)</title><rect x="71.0686%" y="789" width="2.0499%" height="15" fill="rgb(223,145,39)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="799.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,119 samples, 2.05%)</title><rect x="71.0686%" y="773" width="2.0499%" height="15" fill="rgb(239,219,30)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="783.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,119 samples, 2.05%)</title><rect x="71.0686%" y="757" width="2.0499%" height="15" fill="rgb(224,196,39)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="767.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,119 samples, 2.05%)</title><rect x="71.0686%" y="741" width="2.0499%" height="15" fill="rgb(205,35,43)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="751.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,119 samples, 2.05%)</title><rect x="71.0686%" y="725" width="2.0499%" height="15" fill="rgb(228,201,21)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="735.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,119 samples, 2.05%)</title><rect x="71.0686%" y="709" width="2.0499%" height="15" fill="rgb(237,118,16)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="719.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,119 samples, 2.05%)</title><rect x="71.0686%" y="693" width="2.0499%" height="15" fill="rgb(241,17,19)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="703.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,119 samples, 2.05%)</title><rect x="71.0686%" y="677" width="2.0499%" height="15" fill="rgb(214,10,25)" fg:x="73465" fg:w="2119"/><text x="71.3186%" y="687.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (418 samples, 0.40%)</title><rect x="72.7141%" y="661" width="0.4044%" height="15" fill="rgb(238,37,29)" fg:x="75166" fg:w="418"/><text x="72.9641%" y="671.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (146 samples, 0.14%)</title><rect x="72.9772%" y="645" width="0.1412%" height="15" fill="rgb(253,83,25)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (146 samples, 0.14%)</title><rect x="72.9772%" y="629" width="0.1412%" height="15" fill="rgb(234,192,12)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (146 samples, 0.14%)</title><rect x="72.9772%" y="613" width="0.1412%" height="15" fill="rgb(241,216,45)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (146 samples, 0.14%)</title><rect x="72.9772%" y="597" width="0.1412%" height="15" fill="rgb(242,22,33)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (146 samples, 0.14%)</title><rect x="72.9772%" y="581" width="0.1412%" height="15" fill="rgb(231,105,49)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="591.50"></text></g><g><title>alloc::alloc::alloc (146 samples, 0.14%)</title><rect x="72.9772%" y="565" width="0.1412%" height="15" fill="rgb(218,204,15)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="575.50"></text></g><g><title>__rg_alloc (146 samples, 0.14%)</title><rect x="72.9772%" y="549" width="0.1412%" height="15" fill="rgb(235,138,41)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (146 samples, 0.14%)</title><rect x="72.9772%" y="533" width="0.1412%" height="15" fill="rgb(246,0,9)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="543.50"></text></g><g><title>rust_alloc (146 samples, 0.14%)</title><rect x="72.9772%" y="517" width="0.1412%" height="15" fill="rgb(210,74,4)" fg:x="75438" fg:w="146"/><text x="73.2272%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (19 samples, 0.02%)</title><rect x="73.3274%" y="837" width="0.0184%" height="15" fill="rgb(250,60,41)" fg:x="75800" fg:w="19"/><text x="73.5774%" y="847.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="73.3255%" y="933" width="0.0213%" height="15" fill="rgb(220,115,12)" fg:x="75798" fg:w="22"/><text x="73.5755%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="73.3255%" y="917" width="0.0213%" height="15" fill="rgb(237,100,13)" fg:x="75798" fg:w="22"/><text x="73.5755%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (20 samples, 0.02%)</title><rect x="73.3274%" y="901" width="0.0193%" height="15" fill="rgb(213,55,26)" fg:x="75800" fg:w="20"/><text x="73.5774%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="73.3274%" y="885" width="0.0193%" height="15" fill="rgb(216,17,4)" fg:x="75800" fg:w="20"/><text x="73.5774%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="73.3274%" y="869" width="0.0193%" height="15" fill="rgb(220,153,47)" fg:x="75800" fg:w="20"/><text x="73.5774%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20 samples, 0.02%)</title><rect x="73.3274%" y="853" width="0.0193%" height="15" fill="rgb(215,131,9)" fg:x="75800" fg:w="20"/><text x="73.5774%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (32 samples, 0.03%)</title><rect x="73.3467%" y="933" width="0.0310%" height="15" fill="rgb(233,46,42)" fg:x="75820" fg:w="32"/><text x="73.5967%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (28 samples, 0.03%)</title><rect x="73.3506%" y="917" width="0.0271%" height="15" fill="rgb(226,86,7)" fg:x="75824" fg:w="28"/><text x="73.6006%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="73.3506%" y="901" width="0.0271%" height="15" fill="rgb(239,226,21)" fg:x="75824" fg:w="28"/><text x="73.6006%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.03%)</title><rect x="73.3506%" y="885" width="0.0271%" height="15" fill="rgb(244,137,22)" fg:x="75824" fg:w="28"/><text x="73.6006%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (26 samples, 0.03%)</title><rect x="73.3526%" y="869" width="0.0252%" height="15" fill="rgb(211,139,35)" fg:x="75826" fg:w="26"/><text x="73.6026%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (26 samples, 0.03%)</title><rect x="73.3526%" y="853" width="0.0252%" height="15" fill="rgb(214,62,50)" fg:x="75826" fg:w="26"/><text x="73.6026%" y="863.50"></text></g><g><title>event_listener::Inner::lock (123 samples, 0.12%)</title><rect x="73.3787%" y="933" width="0.1190%" height="15" fill="rgb(212,113,44)" fg:x="75853" fg:w="123"/><text x="73.6287%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (122 samples, 0.12%)</title><rect x="73.3796%" y="917" width="0.1180%" height="15" fill="rgb(226,150,43)" fg:x="75854" fg:w="122"/><text x="73.6296%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (120 samples, 0.12%)</title><rect x="73.3816%" y="901" width="0.1161%" height="15" fill="rgb(250,71,37)" fg:x="75856" fg:w="120"/><text x="73.6316%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (111 samples, 0.11%)</title><rect x="73.3903%" y="885" width="0.1074%" height="15" fill="rgb(219,76,19)" fg:x="75865" fg:w="111"/><text x="73.6403%" y="895.50"></text></g><g><title>___pthread_mutex_lock (111 samples, 0.11%)</title><rect x="73.3903%" y="869" width="0.1074%" height="15" fill="rgb(250,39,11)" fg:x="75865" fg:w="111"/><text x="73.6403%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (45 samples, 0.04%)</title><rect x="73.4541%" y="853" width="0.0435%" height="15" fill="rgb(230,64,31)" fg:x="75931" fg:w="45"/><text x="73.7041%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (231 samples, 0.22%)</title><rect x="73.3003%" y="949" width="0.2235%" height="15" fill="rgb(208,222,23)" fg:x="75772" fg:w="231"/><text x="73.5503%" y="959.50"></text></g><g><title>event_listener::List::remove (27 samples, 0.03%)</title><rect x="73.4977%" y="933" width="0.0261%" height="15" fill="rgb(227,125,18)" fg:x="75976" fg:w="27"/><text x="73.7477%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.02%)</title><rect x="73.5064%" y="917" width="0.0174%" height="15" fill="rgb(234,210,9)" fg:x="75985" fg:w="18"/><text x="73.7564%" y="927.50"></text></g><g><title>core::mem::replace (18 samples, 0.02%)</title><rect x="73.5064%" y="901" width="0.0174%" height="15" fill="rgb(217,127,24)" fg:x="75985" fg:w="18"/><text x="73.7564%" y="911.50"></text></g><g><title>core::ptr::read (18 samples, 0.02%)</title><rect x="73.5064%" y="885" width="0.0174%" height="15" fill="rgb(239,141,48)" fg:x="75985" fg:w="18"/><text x="73.7564%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (62 samples, 0.06%)</title><rect x="73.5441%" y="933" width="0.0600%" height="15" fill="rgb(227,109,8)" fg:x="76024" fg:w="62"/><text x="73.7941%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (51 samples, 0.05%)</title><rect x="73.7376%" y="917" width="0.0493%" height="15" fill="rgb(235,184,23)" fg:x="76224" fg:w="51"/><text x="73.9876%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (49 samples, 0.05%)</title><rect x="73.7395%" y="901" width="0.0474%" height="15" fill="rgb(227,226,48)" fg:x="76226" fg:w="49"/><text x="73.9895%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (49 samples, 0.05%)</title><rect x="73.7395%" y="885" width="0.0474%" height="15" fill="rgb(206,150,11)" fg:x="76226" fg:w="49"/><text x="73.9895%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (49 samples, 0.05%)</title><rect x="73.7395%" y="869" width="0.0474%" height="15" fill="rgb(254,2,33)" fg:x="76226" fg:w="49"/><text x="73.9895%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (271 samples, 0.26%)</title><rect x="73.7908%" y="917" width="0.2622%" height="15" fill="rgb(243,160,20)" fg:x="76279" fg:w="271"/><text x="74.0408%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (271 samples, 0.26%)</title><rect x="73.7908%" y="901" width="0.2622%" height="15" fill="rgb(218,208,30)" fg:x="76279" fg:w="271"/><text x="74.0408%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (424 samples, 0.41%)</title><rect x="74.0529%" y="917" width="0.4102%" height="15" fill="rgb(224,120,49)" fg:x="76550" fg:w="424"/><text x="74.3029%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (423 samples, 0.41%)</title><rect x="74.0539%" y="901" width="0.4092%" height="15" fill="rgb(246,12,2)" fg:x="76551" fg:w="423"/><text x="74.3039%" y="911.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (907 samples, 0.88%)</title><rect x="73.6041%" y="933" width="0.8774%" height="15" fill="rgb(236,117,3)" fg:x="76086" fg:w="907"/><text x="73.8541%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (19 samples, 0.02%)</title><rect x="74.4631%" y="917" width="0.0184%" height="15" fill="rgb(216,128,52)" fg:x="76974" fg:w="19"/><text x="74.7131%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_store (19 samples, 0.02%)</title><rect x="74.4631%" y="901" width="0.0184%" height="15" fill="rgb(246,145,19)" fg:x="76974" fg:w="19"/><text x="74.7131%" y="911.50"></text></g><g><title>parking::Unparker::unpark (14 samples, 0.01%)</title><rect x="74.5289%" y="773" width="0.0135%" height="15" fill="rgb(222,11,46)" fg:x="77042" fg:w="14"/><text x="74.7789%" y="783.50"></text></g><g><title>parking::Inner::unpark (13 samples, 0.01%)</title><rect x="74.5299%" y="757" width="0.0126%" height="15" fill="rgb(245,82,36)" fg:x="77043" fg:w="13"/><text x="74.7799%" y="767.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (19 samples, 0.02%)</title><rect x="74.5260%" y="789" width="0.0184%" height="15" fill="rgb(250,73,51)" fg:x="77039" fg:w="19"/><text x="74.7760%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.02%)</title><rect x="74.5260%" y="821" width="0.0232%" height="15" fill="rgb(221,189,23)" fg:x="77039" fg:w="24"/><text x="74.7760%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.02%)</title><rect x="74.5260%" y="805" width="0.0232%" height="15" fill="rgb(210,33,7)" fg:x="77039" fg:w="24"/><text x="74.7760%" y="815.50"></text></g><g><title>async_executor::State::notify (33 samples, 0.03%)</title><rect x="74.5192%" y="837" width="0.0319%" height="15" fill="rgb(210,107,22)" fg:x="77032" fg:w="33"/><text x="74.7692%" y="847.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (37 samples, 0.04%)</title><rect x="74.5192%" y="853" width="0.0358%" height="15" fill="rgb(222,116,37)" fg:x="77032" fg:w="37"/><text x="74.7692%" y="863.50"></text></g><g><title>event_listener::List::notify (46 samples, 0.04%)</title><rect x="74.5173%" y="917" width="0.0445%" height="15" fill="rgb(254,17,48)" fg:x="77030" fg:w="46"/><text x="74.7673%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (46 samples, 0.04%)</title><rect x="74.5173%" y="901" width="0.0445%" height="15" fill="rgb(224,36,32)" fg:x="77030" fg:w="46"/><text x="74.7673%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (46 samples, 0.04%)</title><rect x="74.5173%" y="885" width="0.0445%" height="15" fill="rgb(232,90,46)" fg:x="77030" fg:w="46"/><text x="74.7673%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (44 samples, 0.04%)</title><rect x="74.5192%" y="869" width="0.0426%" height="15" fill="rgb(241,66,40)" fg:x="77032" fg:w="44"/><text x="74.7692%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1,958 samples, 1.89%)</title><rect x="73.5238%" y="949" width="1.8941%" height="15" fill="rgb(249,184,29)" fg:x="76003" fg:w="1958"/><text x="73.7738%" y="959.50">a..</text></g><g><title>event_listener::Event::notify (968 samples, 0.94%)</title><rect x="74.4815%" y="933" width="0.9364%" height="15" fill="rgb(231,181,1)" fg:x="76993" fg:w="968"/><text x="74.7315%" y="943.50"></text></g><g><title>event_listener::full_fence (885 samples, 0.86%)</title><rect x="74.5618%" y="917" width="0.8561%" height="15" fill="rgb(224,94,2)" fg:x="77076" fg:w="885"/><text x="74.8118%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (884 samples, 0.86%)</title><rect x="74.5627%" y="901" width="0.8552%" height="15" fill="rgb(229,170,15)" fg:x="77077" fg:w="884"/><text x="74.8127%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (884 samples, 0.86%)</title><rect x="74.5627%" y="885" width="0.8552%" height="15" fill="rgb(240,127,35)" fg:x="77077" fg:w="884"/><text x="74.8127%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (884 samples, 0.86%)</title><rect x="74.5627%" y="869" width="0.8552%" height="15" fill="rgb(248,196,34)" fg:x="77077" fg:w="884"/><text x="74.8127%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (54 samples, 0.05%)</title><rect x="75.4324%" y="901" width="0.0522%" height="15" fill="rgb(236,137,7)" fg:x="77976" fg:w="54"/><text x="75.6824%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (54 samples, 0.05%)</title><rect x="75.4324%" y="885" width="0.0522%" height="15" fill="rgb(235,127,16)" fg:x="77976" fg:w="54"/><text x="75.6824%" y="895.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="75.4324%" y="869" width="0.0522%" height="15" fill="rgb(250,192,54)" fg:x="77976" fg:w="54"/><text x="75.6824%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (54 samples, 0.05%)</title><rect x="75.4324%" y="853" width="0.0522%" height="15" fill="rgb(218,98,20)" fg:x="77976" fg:w="54"/><text x="75.6824%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (54 samples, 0.05%)</title><rect x="75.4324%" y="837" width="0.0522%" height="15" fill="rgb(230,176,47)" fg:x="77976" fg:w="54"/><text x="75.6824%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (54 samples, 0.05%)</title><rect x="75.4324%" y="821" width="0.0522%" height="15" fill="rgb(244,2,33)" fg:x="77976" fg:w="54"/><text x="75.6824%" y="831.50"></text></g><g><title>std::sync::poison::Flag::get (13 samples, 0.01%)</title><rect x="75.4856%" y="837" width="0.0126%" height="15" fill="rgb(231,100,17)" fg:x="78031" fg:w="13"/><text x="75.7356%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (13 samples, 0.01%)</title><rect x="75.4856%" y="821" width="0.0126%" height="15" fill="rgb(245,23,12)" fg:x="78031" fg:w="13"/><text x="75.7356%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="75.4856%" y="805" width="0.0126%" height="15" fill="rgb(249,55,22)" fg:x="78031" fg:w="13"/><text x="75.7356%" y="815.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="75.4856%" y="869" width="0.0135%" height="15" fill="rgb(207,134,9)" fg:x="78031" fg:w="14"/><text x="75.7356%" y="879.50"></text></g><g><title>std::sync::poison::Flag::borrow (14 samples, 0.01%)</title><rect x="75.4856%" y="853" width="0.0135%" height="15" fill="rgb(218,134,0)" fg:x="78031" fg:w="14"/><text x="75.7356%" y="863.50"></text></g><g><title>event_listener::Inner::lock (86 samples, 0.08%)</title><rect x="75.4856%" y="901" width="0.0832%" height="15" fill="rgb(213,212,33)" fg:x="78031" fg:w="86"/><text x="75.7356%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (86 samples, 0.08%)</title><rect x="75.4856%" y="885" width="0.0832%" height="15" fill="rgb(252,106,18)" fg:x="78031" fg:w="86"/><text x="75.7356%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (72 samples, 0.07%)</title><rect x="75.4992%" y="869" width="0.0697%" height="15" fill="rgb(208,126,42)" fg:x="78045" fg:w="72"/><text x="75.7492%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (67 samples, 0.06%)</title><rect x="75.5040%" y="853" width="0.0648%" height="15" fill="rgb(246,175,29)" fg:x="78050" fg:w="67"/><text x="75.7540%" y="863.50"></text></g><g><title>___pthread_mutex_lock (67 samples, 0.06%)</title><rect x="75.5040%" y="837" width="0.0648%" height="15" fill="rgb(215,13,50)" fg:x="78050" fg:w="67"/><text x="75.7540%" y="847.50"></text></g><g><title>__GI___lll_lock_wait (15 samples, 0.01%)</title><rect x="75.5543%" y="821" width="0.0145%" height="15" fill="rgb(216,172,15)" fg:x="78102" fg:w="15"/><text x="75.8043%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (150 samples, 0.15%)</title><rect x="75.4315%" y="917" width="0.1451%" height="15" fill="rgb(212,103,13)" fg:x="77975" fg:w="150"/><text x="75.6815%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (192 samples, 0.19%)</title><rect x="75.4189%" y="949" width="0.1857%" height="15" fill="rgb(231,171,36)" fg:x="77962" fg:w="192"/><text x="75.6689%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (179 samples, 0.17%)</title><rect x="75.4315%" y="933" width="0.1732%" height="15" fill="rgb(250,123,20)" fg:x="77975" fg:w="179"/><text x="75.6815%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (29 samples, 0.03%)</title><rect x="75.5766%" y="917" width="0.0281%" height="15" fill="rgb(212,53,50)" fg:x="78125" fg:w="29"/><text x="75.8266%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="75.5766%" y="901" width="0.0281%" height="15" fill="rgb(243,54,12)" fg:x="78125" fg:w="29"/><text x="75.8266%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.03%)</title><rect x="75.5766%" y="885" width="0.0281%" height="15" fill="rgb(234,101,34)" fg:x="78125" fg:w="29"/><text x="75.8266%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.03%)</title><rect x="75.5766%" y="869" width="0.0281%" height="15" fill="rgb(254,67,22)" fg:x="78125" fg:w="29"/><text x="75.8266%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="75.6065%" y="933" width="0.0310%" height="15" fill="rgb(250,35,47)" fg:x="78156" fg:w="32"/><text x="75.8565%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.03%)</title><rect x="75.6065%" y="917" width="0.0310%" height="15" fill="rgb(226,126,38)" fg:x="78156" fg:w="32"/><text x="75.8565%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.03%)</title><rect x="75.6065%" y="901" width="0.0310%" height="15" fill="rgb(216,138,53)" fg:x="78156" fg:w="32"/><text x="75.8565%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (20 samples, 0.02%)</title><rect x="75.6375%" y="933" width="0.0193%" height="15" fill="rgb(246,199,43)" fg:x="78188" fg:w="20"/><text x="75.8875%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (20 samples, 0.02%)</title><rect x="75.6375%" y="917" width="0.0193%" height="15" fill="rgb(232,125,11)" fg:x="78188" fg:w="20"/><text x="75.8875%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="75.6375%" y="901" width="0.0193%" height="15" fill="rgb(218,219,45)" fg:x="78188" fg:w="20"/><text x="75.8875%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="75.6375%" y="885" width="0.0193%" height="15" fill="rgb(216,102,54)" fg:x="78188" fg:w="20"/><text x="75.8875%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20 samples, 0.02%)</title><rect x="75.6375%" y="869" width="0.0193%" height="15" fill="rgb(250,228,7)" fg:x="78188" fg:w="20"/><text x="75.8875%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="75.6375%" y="853" width="0.0193%" height="15" fill="rgb(226,125,25)" fg:x="78188" fg:w="20"/><text x="75.8875%" y="863.50"></text></g><g><title>event_listener::Inner::lock (32 samples, 0.03%)</title><rect x="75.6578%" y="933" width="0.0310%" height="15" fill="rgb(224,165,27)" fg:x="78209" fg:w="32"/><text x="75.9078%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="75.6578%" y="917" width="0.0310%" height="15" fill="rgb(233,86,3)" fg:x="78209" fg:w="32"/><text x="75.9078%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (32 samples, 0.03%)</title><rect x="75.6578%" y="901" width="0.0310%" height="15" fill="rgb(228,116,20)" fg:x="78209" fg:w="32"/><text x="75.9078%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (32 samples, 0.03%)</title><rect x="75.6578%" y="885" width="0.0310%" height="15" fill="rgb(209,192,17)" fg:x="78209" fg:w="32"/><text x="75.9078%" y="895.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="75.6598%" y="869" width="0.0290%" height="15" fill="rgb(224,88,34)" fg:x="78211" fg:w="30"/><text x="75.9098%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,530 samples, 2.45%)</title><rect x="73.2558%" y="965" width="2.4475%" height="15" fill="rgb(233,38,6)" fg:x="75726" fg:w="2530"/><text x="73.5058%" y="975.50">&lt;a..</text></g><g><title>event_listener::Event::listen (102 samples, 0.10%)</title><rect x="75.6046%" y="949" width="0.0987%" height="15" fill="rgb(212,59,30)" fg:x="78154" fg:w="102"/><text x="75.8546%" y="959.50"></text></g><g><title>event_listener::full_fence (13 samples, 0.01%)</title><rect x="75.6907%" y="933" width="0.0126%" height="15" fill="rgb(213,80,3)" fg:x="78243" fg:w="13"/><text x="75.9407%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (13 samples, 0.01%)</title><rect x="75.6907%" y="917" width="0.0126%" height="15" fill="rgb(251,178,7)" fg:x="78243" fg:w="13"/><text x="75.9407%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.01%)</title><rect x="75.6907%" y="901" width="0.0126%" height="15" fill="rgb(213,154,26)" fg:x="78243" fg:w="13"/><text x="75.9407%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="75.6907%" y="885" width="0.0126%" height="15" fill="rgb(238,165,49)" fg:x="78243" fg:w="13"/><text x="75.9407%" y="895.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="75.7033%" y="965" width="0.0135%" height="15" fill="rgb(248,91,46)" fg:x="78256" fg:w="14"/><text x="75.9533%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (845 samples, 0.82%)</title><rect x="75.7168%" y="965" width="0.8174%" height="15" fill="rgb(244,21,52)" fg:x="78270" fg:w="845"/><text x="75.9668%" y="975.50"></text></g><g><title>__memcpy_avx_unaligned_erms (220 samples, 0.21%)</title><rect x="76.5468%" y="949" width="0.2128%" height="15" fill="rgb(247,122,20)" fg:x="79128" fg:w="220"/><text x="76.7968%" y="959.50"></text></g><g><title>__memcpy_avx_unaligned_erms (677 samples, 0.65%)</title><rect x="76.7751%" y="917" width="0.6549%" height="15" fill="rgb(218,27,9)" fg:x="79364" fg:w="677"/><text x="77.0251%" y="927.50"></text></g><g><title>rust_dealloc (13 samples, 0.01%)</title><rect x="77.4620%" y="805" width="0.0126%" height="15" fill="rgb(246,7,6)" fg:x="80074" fg:w="13"/><text x="77.7120%" y="815.50"></text></g><g><title>rust_dealloc (22 samples, 0.02%)</title><rect x="77.4833%" y="741" width="0.0213%" height="15" fill="rgb(227,135,54)" fg:x="80096" fg:w="22"/><text x="77.7333%" y="751.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (20 samples, 0.02%)</title><rect x="77.5926%" y="709" width="0.0193%" height="15" fill="rgb(247,14,11)" fg:x="80209" fg:w="20"/><text x="77.8426%" y="719.50"></text></g><g><title> (20 samples, 0.02%)</title><rect x="77.5926%" y="693" width="0.0193%" height="15" fill="rgb(206,149,34)" fg:x="80209" fg:w="20"/><text x="77.8426%" y="703.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (123 samples, 0.12%)</title><rect x="77.5152%" y="741" width="0.1190%" height="15" fill="rgb(227,228,4)" fg:x="80129" fg:w="123"/><text x="77.7652%" y="751.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (99 samples, 0.10%)</title><rect x="77.5384%" y="725" width="0.0958%" height="15" fill="rgb(238,218,28)" fg:x="80153" fg:w="99"/><text x="77.7884%" y="735.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (17 samples, 0.02%)</title><rect x="77.6177%" y="709" width="0.0164%" height="15" fill="rgb(252,86,40)" fg:x="80235" fg:w="17"/><text x="77.8677%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (189 samples, 0.18%)</title><rect x="77.4765%" y="773" width="0.1828%" height="15" fill="rgb(251,225,11)" fg:x="80089" fg:w="189"/><text x="77.7265%" y="783.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (189 samples, 0.18%)</title><rect x="77.4765%" y="757" width="0.1828%" height="15" fill="rgb(206,46,49)" fg:x="80089" fg:w="189"/><text x="77.7265%" y="767.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (26 samples, 0.03%)</title><rect x="77.6342%" y="741" width="0.0252%" height="15" fill="rgb(245,128,24)" fg:x="80252" fg:w="26"/><text x="77.8842%" y="751.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (194 samples, 0.19%)</title><rect x="77.4765%" y="805" width="0.1877%" height="15" fill="rgb(219,177,34)" fg:x="80089" fg:w="194"/><text x="77.7265%" y="815.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (194 samples, 0.19%)</title><rect x="77.4765%" y="789" width="0.1877%" height="15" fill="rgb(218,60,48)" fg:x="80089" fg:w="194"/><text x="77.7265%" y="799.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (221 samples, 0.21%)</title><rect x="77.4542%" y="821" width="0.2138%" height="15" fill="rgb(221,11,5)" fg:x="80066" fg:w="221"/><text x="77.7042%" y="831.50"></text></g><g><title>rust_dealloc (240 samples, 0.23%)</title><rect x="77.4407%" y="837" width="0.2322%" height="15" fill="rgb(220,148,13)" fg:x="80052" fg:w="240"/><text x="77.6907%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (4,604 samples, 4.45%)</title><rect x="73.2220%" y="981" width="4.4538%" height="15" fill="rgb(210,16,3)" fg:x="75691" fg:w="4604"/><text x="73.4720%" y="991.50">&lt;asyn..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,180 samples, 1.14%)</title><rect x="76.5343%" y="965" width="1.1415%" height="15" fill="rgb(236,80,2)" fg:x="79115" fg:w="1180"/><text x="76.7843%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (947 samples, 0.92%)</title><rect x="76.7597%" y="949" width="0.9161%" height="15" fill="rgb(239,129,19)" fg:x="79348" fg:w="947"/><text x="77.0097%" y="959.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (947 samples, 0.92%)</title><rect x="76.7597%" y="933" width="0.9161%" height="15" fill="rgb(220,106,35)" fg:x="79348" fg:w="947"/><text x="77.0097%" y="943.50"></text></g><g><title>alloc::alloc::box_free (254 samples, 0.25%)</title><rect x="77.4301%" y="917" width="0.2457%" height="15" fill="rgb(252,139,45)" fg:x="80041" fg:w="254"/><text x="77.6801%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (254 samples, 0.25%)</title><rect x="77.4301%" y="901" width="0.2457%" height="15" fill="rgb(229,8,36)" fg:x="80041" fg:w="254"/><text x="77.6801%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (254 samples, 0.25%)</title><rect x="77.4301%" y="885" width="0.2457%" height="15" fill="rgb(230,126,33)" fg:x="80041" fg:w="254"/><text x="77.6801%" y="895.50"></text></g><g><title>__rg_dealloc (254 samples, 0.25%)</title><rect x="77.4301%" y="869" width="0.2457%" height="15" fill="rgb(239,140,21)" fg:x="80041" fg:w="254"/><text x="77.6801%" y="879.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (254 samples, 0.25%)</title><rect x="77.4301%" y="853" width="0.2457%" height="15" fill="rgb(254,104,9)" fg:x="80041" fg:w="254"/><text x="77.6801%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,088 samples, 4.92%)</title><rect x="73.1678%" y="997" width="4.9220%" height="15" fill="rgb(239,52,14)" fg:x="75635" fg:w="5088"/><text x="73.4178%" y="1007.50">&lt;async..</text></g><g><title>__memcpy_avx_unaligned_erms (428 samples, 0.41%)</title><rect x="77.6758%" y="981" width="0.4140%" height="15" fill="rgb(208,227,44)" fg:x="80295" fg:w="428"/><text x="77.9258%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1157" width="5.4580%" height="15" fill="rgb(246,18,19)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1167.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1141" width="5.4580%" height="15" fill="rgb(235,228,25)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1151.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1125" width="5.4580%" height="15" fill="rgb(240,156,20)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1135.50">async_s..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1109" width="5.4580%" height="15" fill="rgb(224,8,20)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1119.50">&lt;async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1093" width="5.4580%" height="15" fill="rgb(214,12,52)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1103.50">&lt;core::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1077" width="5.4580%" height="15" fill="rgb(211,220,47)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1087.50">tremor_..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1061" width="5.4580%" height="15" fill="rgb(250,173,5)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1071.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1045" width="5.4580%" height="15" fill="rgb(250,125,52)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1055.50">&lt;tremor..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1029" width="5.4580%" height="15" fill="rgb(209,133,18)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1039.50">&lt;async_..</text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,642 samples, 5.46%)</title><rect x="73.1184%" y="1013" width="5.4580%" height="15" fill="rgb(216,173,22)" fg:x="75584" fg:w="5642"/><text x="73.3684%" y="1023.50">&lt;tremor..</text></g><g><title>__memcpy_avx_unaligned_erms (503 samples, 0.49%)</title><rect x="78.0898%" y="997" width="0.4866%" height="15" fill="rgb(205,3,22)" fg:x="80723" fg:w="503"/><text x="78.3398%" y="1007.50"></text></g><g><title>tremor_common::time::nanotime (16 samples, 0.02%)</title><rect x="78.5764%" y="1157" width="0.0155%" height="15" fill="rgb(248,22,20)" fg:x="81226" fg:w="16"/><text x="78.8264%" y="1167.50"></text></g><g><title>std::time::SystemTime::now (14 samples, 0.01%)</title><rect x="78.5783%" y="1141" width="0.0135%" height="15" fill="rgb(233,6,29)" fg:x="81228" fg:w="14"/><text x="78.8283%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (14 samples, 0.01%)</title><rect x="78.5783%" y="1125" width="0.0135%" height="15" fill="rgb(240,22,54)" fg:x="81228" fg:w="14"/><text x="78.8283%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.01%)</title><rect x="78.5783%" y="1109" width="0.0135%" height="15" fill="rgb(231,133,32)" fg:x="81228" fg:w="14"/><text x="78.8283%" y="1119.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (91 samples, 0.09%)</title><rect x="78.5919%" y="1157" width="0.0880%" height="15" fill="rgb(248,193,4)" fg:x="81242" fg:w="91"/><text x="78.8419%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.03%)</title><rect x="78.7718%" y="1045" width="0.0290%" height="15" fill="rgb(211,178,46)" fg:x="81428" fg:w="30"/><text x="79.0218%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.03%)</title><rect x="78.7718%" y="1029" width="0.0290%" height="15" fill="rgb(224,5,42)" fg:x="81428" fg:w="30"/><text x="79.0218%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.03%)</title><rect x="78.7718%" y="1013" width="0.0290%" height="15" fill="rgb(239,176,25)" fg:x="81428" fg:w="30"/><text x="79.0218%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.03%)</title><rect x="78.7718%" y="997" width="0.0290%" height="15" fill="rgb(245,187,50)" fg:x="81428" fg:w="30"/><text x="79.0218%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.03%)</title><rect x="78.7718%" y="981" width="0.0290%" height="15" fill="rgb(248,24,15)" fg:x="81428" fg:w="30"/><text x="79.0218%" y="991.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.03%)</title><rect x="78.7718%" y="965" width="0.0290%" height="15" fill="rgb(205,166,13)" fg:x="81428" fg:w="30"/><text x="79.0218%" y="975.50"></text></g><g><title>__rg_alloc (30 samples, 0.03%)</title><rect x="78.7718%" y="949" width="0.0290%" height="15" fill="rgb(208,114,23)" fg:x="81428" fg:w="30"/><text x="79.0218%" y="959.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (30 samples, 0.03%)</title><rect x="78.7718%" y="933" width="0.0290%" height="15" fill="rgb(239,127,18)" fg:x="81428" fg:w="30"/><text x="79.0218%" y="943.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (60 samples, 0.06%)</title><rect x="78.7641%" y="1141" width="0.0580%" height="15" fill="rgb(219,154,28)" fg:x="81420" fg:w="60"/><text x="79.0141%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (52 samples, 0.05%)</title><rect x="78.7718%" y="1125" width="0.0503%" height="15" fill="rgb(225,157,23)" fg:x="81428" fg:w="52"/><text x="79.0218%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.05%)</title><rect x="78.7718%" y="1109" width="0.0503%" height="15" fill="rgb(219,8,6)" fg:x="81428" fg:w="52"/><text x="79.0218%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.05%)</title><rect x="78.7718%" y="1093" width="0.0503%" height="15" fill="rgb(212,47,6)" fg:x="81428" fg:w="52"/><text x="79.0218%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.05%)</title><rect x="78.7718%" y="1077" width="0.0503%" height="15" fill="rgb(224,190,4)" fg:x="81428" fg:w="52"/><text x="79.0218%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.05%)</title><rect x="78.7718%" y="1061" width="0.0503%" height="15" fill="rgb(239,183,29)" fg:x="81428" fg:w="52"/><text x="79.0218%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (22 samples, 0.02%)</title><rect x="78.8008%" y="1045" width="0.0213%" height="15" fill="rgb(213,57,7)" fg:x="81458" fg:w="22"/><text x="79.0508%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.02%)</title><rect x="78.8008%" y="1029" width="0.0213%" height="15" fill="rgb(216,148,1)" fg:x="81458" fg:w="22"/><text x="79.0508%" y="1039.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (148 samples, 0.14%)</title><rect x="78.6993%" y="1157" width="0.1432%" height="15" fill="rgb(236,182,29)" fg:x="81353" fg:w="148"/><text x="78.9493%" y="1167.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (19 samples, 0.02%)</title><rect x="78.8424%" y="1157" width="0.0184%" height="15" fill="rgb(244,120,48)" fg:x="81501" fg:w="19"/><text x="79.0924%" y="1167.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="79.0108%" y="1013" width="0.0135%" height="15" fill="rgb(206,71,34)" fg:x="81675" fg:w="14"/><text x="79.2608%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (28 samples, 0.03%)</title><rect x="79.0243%" y="1013" width="0.0271%" height="15" fill="rgb(242,32,6)" fg:x="81689" fg:w="28"/><text x="79.2743%" y="1023.50"></text></g><g><title>core::mem::replace (28 samples, 0.03%)</title><rect x="79.0243%" y="997" width="0.0271%" height="15" fill="rgb(241,35,3)" fg:x="81689" fg:w="28"/><text x="79.2743%" y="1007.50"></text></g><g><title>core::ptr::read (26 samples, 0.03%)</title><rect x="79.0262%" y="981" width="0.0252%" height="15" fill="rgb(222,62,19)" fg:x="81691" fg:w="26"/><text x="79.2762%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (190 samples, 0.18%)</title><rect x="79.1375%" y="997" width="0.1838%" height="15" fill="rgb(223,110,41)" fg:x="81806" fg:w="190"/><text x="79.3875%" y="1007.50"></text></g><g><title>core::mem::replace (190 samples, 0.18%)</title><rect x="79.1375%" y="981" width="0.1838%" height="15" fill="rgb(208,224,4)" fg:x="81806" fg:w="190"/><text x="79.3875%" y="991.50"></text></g><g><title>core::ptr::read (189 samples, 0.18%)</title><rect x="79.1385%" y="965" width="0.1828%" height="15" fill="rgb(241,137,19)" fg:x="81807" fg:w="189"/><text x="79.3885%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (360 samples, 0.35%)</title><rect x="79.0514%" y="1013" width="0.3483%" height="15" fill="rgb(244,24,17)" fg:x="81717" fg:w="360"/><text x="79.3014%" y="1023.50"></text></g><g><title>core::mem::drop (81 samples, 0.08%)</title><rect x="79.3213%" y="997" width="0.0784%" height="15" fill="rgb(245,178,49)" fg:x="81996" fg:w="81"/><text x="79.5713%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (81 samples, 0.08%)</title><rect x="79.3213%" y="981" width="0.0784%" height="15" fill="rgb(219,160,38)" fg:x="81996" fg:w="81"/><text x="79.5713%" y="991.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="79.3996%" y="997" width="0.0184%" height="15" fill="rgb(228,137,14)" fg:x="82077" fg:w="19"/><text x="79.6496%" y="1007.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="79.4451%" y="949" width="0.0106%" height="15" fill="rgb(237,134,11)" fg:x="82124" fg:w="11"/><text x="79.6951%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (339 samples, 0.33%)</title><rect x="79.4558%" y="933" width="0.3279%" height="15" fill="rgb(211,126,44)" fg:x="82135" fg:w="339"/><text x="79.7058%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (412 samples, 0.40%)</title><rect x="79.3996%" y="1013" width="0.3986%" height="15" fill="rgb(226,171,33)" fg:x="82077" fg:w="412"/><text x="79.6496%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (393 samples, 0.38%)</title><rect x="79.4180%" y="997" width="0.3802%" height="15" fill="rgb(253,99,13)" fg:x="82096" fg:w="393"/><text x="79.6680%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (393 samples, 0.38%)</title><rect x="79.4180%" y="981" width="0.3802%" height="15" fill="rgb(244,48,7)" fg:x="82096" fg:w="393"/><text x="79.6680%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (365 samples, 0.35%)</title><rect x="79.4451%" y="965" width="0.3531%" height="15" fill="rgb(244,217,54)" fg:x="82124" fg:w="365"/><text x="79.6951%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (354 samples, 0.34%)</title><rect x="79.4558%" y="949" width="0.3425%" height="15" fill="rgb(224,15,18)" fg:x="82135" fg:w="354"/><text x="79.7058%" y="959.50"></text></g><g><title>___pthread_mutex_unlock (15 samples, 0.01%)</title><rect x="79.7837%" y="933" width="0.0145%" height="15" fill="rgb(244,99,12)" fg:x="82474" fg:w="15"/><text x="80.0337%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (18 samples, 0.02%)</title><rect x="79.8137%" y="965" width="0.0174%" height="15" fill="rgb(233,226,8)" fg:x="82505" fg:w="18"/><text x="80.0637%" y="975.50"></text></g><g><title>core::task::wake::Waker::will_wake (47 samples, 0.05%)</title><rect x="79.7992%" y="1013" width="0.0455%" height="15" fill="rgb(229,211,3)" fg:x="82490" fg:w="47"/><text x="80.0492%" y="1023.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (47 samples, 0.05%)</title><rect x="79.7992%" y="997" width="0.0455%" height="15" fill="rgb(216,140,21)" fg:x="82490" fg:w="47"/><text x="80.0492%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (32 samples, 0.03%)</title><rect x="79.8137%" y="981" width="0.0310%" height="15" fill="rgb(234,122,30)" fg:x="82505" fg:w="32"/><text x="80.0637%" y="991.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="79.8311%" y="965" width="0.0135%" height="15" fill="rgb(236,25,46)" fg:x="82523" fg:w="14"/><text x="80.0811%" y="975.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="79.8650%" y="981" width="0.0126%" height="15" fill="rgb(217,52,54)" fg:x="82558" fg:w="13"/><text x="80.1150%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (13 samples, 0.01%)</title><rect x="79.8650%" y="965" width="0.0126%" height="15" fill="rgb(222,29,26)" fg:x="82558" fg:w="13"/><text x="80.1150%" y="975.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="79.8650%" y="949" width="0.0126%" height="15" fill="rgb(216,177,29)" fg:x="82558" fg:w="13"/><text x="80.1150%" y="959.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="79.8650%" y="933" width="0.0126%" height="15" fill="rgb(247,136,51)" fg:x="82558" fg:w="13"/><text x="80.1150%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="79.8650%" y="917" width="0.0126%" height="15" fill="rgb(231,47,47)" fg:x="82558" fg:w="13"/><text x="80.1150%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="79.8650%" y="901" width="0.0126%" height="15" fill="rgb(211,192,36)" fg:x="82558" fg:w="13"/><text x="80.1150%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="79.8650%" y="885" width="0.0126%" height="15" fill="rgb(229,156,32)" fg:x="82558" fg:w="13"/><text x="80.1150%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,477 samples, 1.43%)</title><rect x="78.9189%" y="1029" width="1.4288%" height="15" fill="rgb(248,213,20)" fg:x="81580" fg:w="1477"/><text x="79.1689%" y="1039.50"></text></g><g><title>event_listener::Inner::lock (520 samples, 0.50%)</title><rect x="79.8446%" y="1013" width="0.5030%" height="15" fill="rgb(217,64,7)" fg:x="82537" fg:w="520"/><text x="80.0946%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (499 samples, 0.48%)</title><rect x="79.8650%" y="997" width="0.4827%" height="15" fill="rgb(232,142,8)" fg:x="82558" fg:w="499"/><text x="80.1150%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (486 samples, 0.47%)</title><rect x="79.8775%" y="981" width="0.4701%" height="15" fill="rgb(224,92,44)" fg:x="82571" fg:w="486"/><text x="80.1275%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (483 samples, 0.47%)</title><rect x="79.8804%" y="965" width="0.4672%" height="15" fill="rgb(214,169,17)" fg:x="82574" fg:w="483"/><text x="80.1304%" y="975.50"></text></g><g><title>___pthread_mutex_lock (483 samples, 0.47%)</title><rect x="79.8804%" y="949" width="0.4672%" height="15" fill="rgb(210,59,37)" fg:x="82574" fg:w="483"/><text x="80.1304%" y="959.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,556 samples, 1.51%)</title><rect x="78.8608%" y="1141" width="1.5052%" height="15" fill="rgb(214,116,48)" fg:x="81520" fg:w="1556"/><text x="79.1108%" y="1151.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,555 samples, 1.50%)</title><rect x="78.8618%" y="1125" width="1.5043%" height="15" fill="rgb(244,191,6)" fg:x="81521" fg:w="1555"/><text x="79.1118%" y="1135.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,555 samples, 1.50%)</title><rect x="78.8618%" y="1109" width="1.5043%" height="15" fill="rgb(241,50,52)" fg:x="81521" fg:w="1555"/><text x="79.1118%" y="1119.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,555 samples, 1.50%)</title><rect x="78.8618%" y="1093" width="1.5043%" height="15" fill="rgb(236,75,39)" fg:x="81521" fg:w="1555"/><text x="79.1118%" y="1103.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,555 samples, 1.50%)</title><rect x="78.8618%" y="1077" width="1.5043%" height="15" fill="rgb(236,99,0)" fg:x="81521" fg:w="1555"/><text x="79.1118%" y="1087.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,555 samples, 1.50%)</title><rect x="78.8618%" y="1061" width="1.5043%" height="15" fill="rgb(207,202,15)" fg:x="81521" fg:w="1555"/><text x="79.1118%" y="1071.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,555 samples, 1.50%)</title><rect x="78.8618%" y="1045" width="1.5043%" height="15" fill="rgb(233,207,14)" fg:x="81521" fg:w="1555"/><text x="79.1118%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (17 samples, 0.02%)</title><rect x="80.3496%" y="1029" width="0.0164%" height="15" fill="rgb(226,27,51)" fg:x="83059" fg:w="17"/><text x="80.5996%" y="1039.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="80.4434%" y="1061" width="0.0339%" height="15" fill="rgb(206,104,42)" fg:x="83156" fg:w="35"/><text x="80.6934%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (450 samples, 0.44%)</title><rect x="80.5615%" y="1045" width="0.4353%" height="15" fill="rgb(212,225,4)" fg:x="83278" fg:w="450"/><text x="80.8115%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (862 samples, 0.83%)</title><rect x="81.0384%" y="1029" width="0.8339%" height="15" fill="rgb(233,96,42)" fg:x="83771" fg:w="862"/><text x="81.2884%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (230 samples, 0.22%)</title><rect x="81.9729%" y="1013" width="0.2225%" height="15" fill="rgb(229,21,32)" fg:x="84737" fg:w="230"/><text x="82.2229%" y="1023.50"></text></g><g><title>core::ptr::write (230 samples, 0.22%)</title><rect x="81.9729%" y="997" width="0.2225%" height="15" fill="rgb(226,216,24)" fg:x="84737" fg:w="230"/><text x="82.2229%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (221 samples, 0.21%)</title><rect x="81.9816%" y="981" width="0.2138%" height="15" fill="rgb(221,163,17)" fg:x="84746" fg:w="221"/><text x="82.2316%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (364 samples, 0.35%)</title><rect x="82.1954%" y="1013" width="0.3521%" height="15" fill="rgb(216,216,42)" fg:x="84967" fg:w="364"/><text x="82.4454%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (364 samples, 0.35%)</title><rect x="82.1954%" y="997" width="0.3521%" height="15" fill="rgb(240,118,7)" fg:x="84967" fg:w="364"/><text x="82.4454%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (57 samples, 0.06%)</title><rect x="82.5475%" y="1013" width="0.0551%" height="15" fill="rgb(221,67,37)" fg:x="85331" fg:w="57"/><text x="82.7975%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (57 samples, 0.06%)</title><rect x="82.5475%" y="997" width="0.0551%" height="15" fill="rgb(241,32,44)" fg:x="85331" fg:w="57"/><text x="82.7975%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,669 samples, 1.61%)</title><rect x="80.9968%" y="1045" width="1.6146%" height="15" fill="rgb(235,204,43)" fg:x="83728" fg:w="1669"/><text x="81.2468%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (764 samples, 0.74%)</title><rect x="81.8723%" y="1029" width="0.7391%" height="15" fill="rgb(213,116,10)" fg:x="84633" fg:w="764"/><text x="82.1223%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (36 samples, 0.03%)</title><rect x="82.6326%" y="1029" width="0.0348%" height="15" fill="rgb(239,15,48)" fg:x="85419" fg:w="36"/><text x="82.8826%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (34 samples, 0.03%)</title><rect x="82.6346%" y="1013" width="0.0329%" height="15" fill="rgb(207,123,36)" fg:x="85421" fg:w="34"/><text x="82.8846%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="82.6346%" y="997" width="0.0329%" height="15" fill="rgb(209,103,30)" fg:x="85421" fg:w="34"/><text x="82.8846%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="82.6355%" y="981" width="0.0319%" height="15" fill="rgb(238,100,19)" fg:x="85422" fg:w="33"/><text x="82.8855%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (32 samples, 0.03%)</title><rect x="82.6365%" y="965" width="0.0310%" height="15" fill="rgb(244,30,14)" fg:x="85423" fg:w="32"/><text x="82.8865%" y="975.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (32 samples, 0.03%)</title><rect x="82.6365%" y="949" width="0.0310%" height="15" fill="rgb(249,174,6)" fg:x="85423" fg:w="32"/><text x="82.8865%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="82.6675%" y="1029" width="0.0213%" height="15" fill="rgb(235,213,41)" fg:x="85455" fg:w="22"/><text x="82.9175%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="82.6675%" y="1013" width="0.0213%" height="15" fill="rgb(213,118,6)" fg:x="85455" fg:w="22"/><text x="82.9175%" y="1023.50"></text></g><g><title>event_listener::Inner::lock (65 samples, 0.06%)</title><rect x="82.6897%" y="1029" width="0.0629%" height="15" fill="rgb(235,44,51)" fg:x="85478" fg:w="65"/><text x="82.9397%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (65 samples, 0.06%)</title><rect x="82.6897%" y="1013" width="0.0629%" height="15" fill="rgb(217,9,53)" fg:x="85478" fg:w="65"/><text x="82.9397%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (65 samples, 0.06%)</title><rect x="82.6897%" y="997" width="0.0629%" height="15" fill="rgb(237,172,34)" fg:x="85478" fg:w="65"/><text x="82.9397%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (62 samples, 0.06%)</title><rect x="82.6926%" y="981" width="0.0600%" height="15" fill="rgb(206,206,11)" fg:x="85481" fg:w="62"/><text x="82.9426%" y="991.50"></text></g><g><title>___pthread_mutex_lock (62 samples, 0.06%)</title><rect x="82.6926%" y="965" width="0.0600%" height="15" fill="rgb(214,149,29)" fg:x="85481" fg:w="62"/><text x="82.9426%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (14 samples, 0.01%)</title><rect x="82.7719%" y="933" width="0.0135%" height="15" fill="rgb(208,123,3)" fg:x="85563" fg:w="14"/><text x="83.0219%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="82.7719%" y="917" width="0.0135%" height="15" fill="rgb(229,126,4)" fg:x="85563" fg:w="14"/><text x="83.0219%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="82.7719%" y="901" width="0.0135%" height="15" fill="rgb(222,92,36)" fg:x="85563" fg:w="14"/><text x="83.0219%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (14 samples, 0.01%)</title><rect x="82.7719%" y="885" width="0.0135%" height="15" fill="rgb(216,39,41)" fg:x="85563" fg:w="14"/><text x="83.0219%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="82.7719%" y="869" width="0.0135%" height="15" fill="rgb(253,127,28)" fg:x="85563" fg:w="14"/><text x="83.0219%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (18 samples, 0.02%)</title><rect x="82.7855%" y="933" width="0.0174%" height="15" fill="rgb(249,152,51)" fg:x="85577" fg:w="18"/><text x="83.0355%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="82.7855%" y="917" width="0.0174%" height="15" fill="rgb(209,123,42)" fg:x="85577" fg:w="18"/><text x="83.0355%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (19 samples, 0.02%)</title><rect x="82.8184%" y="853" width="0.0184%" height="15" fill="rgb(241,118,22)" fg:x="85611" fg:w="19"/><text x="83.0684%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (19 samples, 0.02%)</title><rect x="82.8184%" y="837" width="0.0184%" height="15" fill="rgb(208,25,7)" fg:x="85611" fg:w="19"/><text x="83.0684%" y="847.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (39 samples, 0.04%)</title><rect x="82.8367%" y="853" width="0.0377%" height="15" fill="rgb(243,144,39)" fg:x="85630" fg:w="39"/><text x="83.0867%" y="863.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (39 samples, 0.04%)</title><rect x="82.8367%" y="837" width="0.0377%" height="15" fill="rgb(250,50,5)" fg:x="85630" fg:w="39"/><text x="83.0867%" y="847.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (39 samples, 0.04%)</title><rect x="82.8367%" y="821" width="0.0377%" height="15" fill="rgb(207,67,11)" fg:x="85630" fg:w="39"/><text x="83.0867%" y="831.50"></text></g><g><title>__GI___pthread_cond_signal (39 samples, 0.04%)</title><rect x="82.8367%" y="805" width="0.0377%" height="15" fill="rgb(245,204,40)" fg:x="85630" fg:w="39"/><text x="83.0867%" y="815.50"></text></g><g><title>parking::Unparker::unpark (92 samples, 0.09%)</title><rect x="82.8077%" y="885" width="0.0890%" height="15" fill="rgb(238,228,24)" fg:x="85600" fg:w="92"/><text x="83.0577%" y="895.50"></text></g><g><title>parking::Inner::unpark (84 samples, 0.08%)</title><rect x="82.8155%" y="869" width="0.0813%" height="15" fill="rgb(217,116,22)" fg:x="85608" fg:w="84"/><text x="83.0655%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="82.8745%" y="853" width="0.0222%" height="15" fill="rgb(234,98,12)" fg:x="85669" fg:w="23"/><text x="83.1245%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="82.8754%" y="837" width="0.0213%" height="15" fill="rgb(242,170,50)" fg:x="85670" fg:w="22"/><text x="83.1254%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.02%)</title><rect x="82.8754%" y="821" width="0.0213%" height="15" fill="rgb(235,7,5)" fg:x="85670" fg:w="22"/><text x="83.1254%" y="831.50"></text></g><g><title>___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="82.8754%" y="805" width="0.0213%" height="15" fill="rgb(241,114,28)" fg:x="85670" fg:w="22"/><text x="83.1254%" y="815.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (98 samples, 0.09%)</title><rect x="82.8039%" y="901" width="0.0948%" height="15" fill="rgb(246,112,42)" fg:x="85596" fg:w="98"/><text x="83.0539%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (120 samples, 0.12%)</title><rect x="82.8029%" y="933" width="0.1161%" height="15" fill="rgb(248,228,14)" fg:x="85595" fg:w="120"/><text x="83.0529%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (120 samples, 0.12%)</title><rect x="82.8029%" y="917" width="0.1161%" height="15" fill="rgb(208,133,18)" fg:x="85595" fg:w="120"/><text x="83.0529%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="82.8987%" y="901" width="0.0203%" height="15" fill="rgb(207,35,49)" fg:x="85694" fg:w="21"/><text x="83.1487%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="82.8987%" y="885" width="0.0203%" height="15" fill="rgb(205,68,36)" fg:x="85694" fg:w="21"/><text x="83.1487%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.02%)</title><rect x="82.8987%" y="869" width="0.0203%" height="15" fill="rgb(245,62,40)" fg:x="85694" fg:w="21"/><text x="83.1487%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (21 samples, 0.02%)</title><rect x="82.8987%" y="853" width="0.0203%" height="15" fill="rgb(228,27,24)" fg:x="85694" fg:w="21"/><text x="83.1487%" y="863.50"></text></g><g><title>async_executor::State::notify (194 samples, 0.19%)</title><rect x="82.7671%" y="949" width="0.1877%" height="15" fill="rgb(253,19,12)" fg:x="85558" fg:w="194"/><text x="83.0171%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.04%)</title><rect x="82.9190%" y="933" width="0.0358%" height="15" fill="rgb(232,28,20)" fg:x="85715" fg:w="37"/><text x="83.1690%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.03%)</title><rect x="82.9199%" y="917" width="0.0348%" height="15" fill="rgb(218,35,51)" fg:x="85716" fg:w="36"/><text x="83.1699%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (30 samples, 0.03%)</title><rect x="82.9257%" y="901" width="0.0290%" height="15" fill="rgb(212,90,40)" fg:x="85722" fg:w="30"/><text x="83.1757%" y="911.50"></text></g><g><title>___pthread_mutex_lock (30 samples, 0.03%)</title><rect x="82.9257%" y="885" width="0.0290%" height="15" fill="rgb(220,172,12)" fg:x="85722" fg:w="30"/><text x="83.1757%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (26 samples, 0.03%)</title><rect x="82.9693%" y="917" width="0.0252%" height="15" fill="rgb(226,159,20)" fg:x="85767" fg:w="26"/><text x="83.2193%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (26 samples, 0.03%)</title><rect x="82.9693%" y="901" width="0.0252%" height="15" fill="rgb(234,205,16)" fg:x="85767" fg:w="26"/><text x="83.2193%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 0.01%)</title><rect x="82.9944%" y="917" width="0.0126%" height="15" fill="rgb(207,9,39)" fg:x="85793" fg:w="13"/><text x="83.2444%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_or (13 samples, 0.01%)</title><rect x="82.9944%" y="901" width="0.0126%" height="15" fill="rgb(249,143,15)" fg:x="85793" fg:w="13"/><text x="83.2444%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (255 samples, 0.25%)</title><rect x="82.7661%" y="965" width="0.2467%" height="15" fill="rgb(253,133,29)" fg:x="85557" fg:w="255"/><text x="83.0161%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (60 samples, 0.06%)</title><rect x="82.9548%" y="949" width="0.0580%" height="15" fill="rgb(221,187,0)" fg:x="85752" fg:w="60"/><text x="83.2048%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (55 samples, 0.05%)</title><rect x="82.9596%" y="933" width="0.0532%" height="15" fill="rgb(205,204,26)" fg:x="85757" fg:w="55"/><text x="83.2096%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (45 samples, 0.04%)</title><rect x="83.0128%" y="965" width="0.0435%" height="15" fill="rgb(224,68,54)" fg:x="85812" fg:w="45"/><text x="83.2628%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (45 samples, 0.04%)</title><rect x="83.0128%" y="949" width="0.0435%" height="15" fill="rgb(209,67,4)" fg:x="85812" fg:w="45"/><text x="83.2628%" y="959.50"></text></g><g><title>event_listener::List::notify (318 samples, 0.31%)</title><rect x="82.7526%" y="1029" width="0.3076%" height="15" fill="rgb(228,229,18)" fg:x="85543" fg:w="318"/><text x="83.0026%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (313 samples, 0.30%)</title><rect x="82.7574%" y="1013" width="0.3028%" height="15" fill="rgb(231,89,13)" fg:x="85548" fg:w="313"/><text x="83.0074%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (313 samples, 0.30%)</title><rect x="82.7574%" y="997" width="0.3028%" height="15" fill="rgb(210,182,18)" fg:x="85548" fg:w="313"/><text x="83.0074%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (304 samples, 0.29%)</title><rect x="82.7661%" y="981" width="0.2941%" height="15" fill="rgb(240,105,2)" fg:x="85557" fg:w="304"/><text x="83.0161%" y="991.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,915 samples, 3.79%)</title><rect x="80.4812%" y="1061" width="3.7873%" height="15" fill="rgb(207,170,50)" fg:x="83195" fg:w="3915"/><text x="80.7312%" y="1071.50">asyn..</text></g><g><title>event_listener::Event::notify (1,713 samples, 1.66%)</title><rect x="82.6113%" y="1045" width="1.6571%" height="15" fill="rgb(232,133,24)" fg:x="85397" fg:w="1713"/><text x="82.8613%" y="1055.50"></text></g><g><title>event_listener::full_fence (1,249 samples, 1.21%)</title><rect x="83.0602%" y="1029" width="1.2083%" height="15" fill="rgb(235,166,27)" fg:x="85861" fg:w="1249"/><text x="83.3102%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1,217 samples, 1.18%)</title><rect x="83.0912%" y="1013" width="1.1773%" height="15" fill="rgb(209,19,13)" fg:x="85893" fg:w="1217"/><text x="83.3412%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,217 samples, 1.18%)</title><rect x="83.0912%" y="997" width="1.1773%" height="15" fill="rgb(226,79,39)" fg:x="85893" fg:w="1217"/><text x="83.3412%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,217 samples, 1.18%)</title><rect x="83.0912%" y="981" width="1.1773%" height="15" fill="rgb(222,163,10)" fg:x="85893" fg:w="1217"/><text x="83.3412%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (14 samples, 0.01%)</title><rect x="84.2685%" y="1061" width="0.0135%" height="15" fill="rgb(214,44,19)" fg:x="87110" fg:w="14"/><text x="84.5185%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (447 samples, 0.43%)</title><rect x="84.2820%" y="1061" width="0.4324%" height="15" fill="rgb(210,217,13)" fg:x="87124" fg:w="447"/><text x="84.5320%" y="1071.50"></text></g><g><title>core::mem::replace (447 samples, 0.43%)</title><rect x="84.2820%" y="1045" width="0.4324%" height="15" fill="rgb(237,61,54)" fg:x="87124" fg:w="447"/><text x="84.5320%" y="1055.50"></text></g><g><title>core::ptr::read (437 samples, 0.42%)</title><rect x="84.2917%" y="1029" width="0.4227%" height="15" fill="rgb(226,184,24)" fg:x="87134" fg:w="437"/><text x="84.5417%" y="1039.50"></text></g><g><title>__memcpy_avx_unaligned_erms (419 samples, 0.41%)</title><rect x="84.3091%" y="1013" width="0.4053%" height="15" fill="rgb(223,226,4)" fg:x="87152" fg:w="419"/><text x="84.5591%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (540 samples, 0.52%)</title><rect x="84.7144%" y="1061" width="0.5224%" height="15" fill="rgb(210,26,41)" fg:x="87571" fg:w="540"/><text x="84.9644%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (524 samples, 0.51%)</title><rect x="84.7299%" y="1045" width="0.5069%" height="15" fill="rgb(220,221,6)" fg:x="87587" fg:w="524"/><text x="84.9799%" y="1055.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (6,937 samples, 6.71%)</title><rect x="78.8608%" y="1157" width="6.7107%" height="15" fill="rgb(225,89,49)" fg:x="81520" fg:w="6937"/><text x="79.1108%" y="1167.50">tremor_ru..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,381 samples, 5.21%)</title><rect x="80.3661%" y="1141" width="5.2055%" height="15" fill="rgb(218,70,45)" fg:x="83076" fg:w="5381"/><text x="80.6161%" y="1151.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (5,381 samples, 5.21%)</title><rect x="80.3661%" y="1125" width="5.2055%" height="15" fill="rgb(238,166,21)" fg:x="83076" fg:w="5381"/><text x="80.6161%" y="1135.50">tremor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,381 samples, 5.21%)</title><rect x="80.3661%" y="1109" width="5.2055%" height="15" fill="rgb(224,141,44)" fg:x="83076" fg:w="5381"/><text x="80.6161%" y="1119.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (5,381 samples, 5.21%)</title><rect x="80.3661%" y="1093" width="5.2055%" height="15" fill="rgb(230,12,49)" fg:x="83076" fg:w="5381"/><text x="80.6161%" y="1103.50">tremor..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (5,381 samples, 5.21%)</title><rect x="80.3661%" y="1077" width="5.2055%" height="15" fill="rgb(212,174,12)" fg:x="83076" fg:w="5381"/><text x="80.6161%" y="1087.50">&lt;async..</text></g><g><title>event_listener::Event::notify (340 samples, 0.33%)</title><rect x="85.2426%" y="1061" width="0.3289%" height="15" fill="rgb(246,67,9)" fg:x="88117" fg:w="340"/><text x="85.4926%" y="1071.50"></text></g><g><title>event_listener::full_fence (314 samples, 0.30%)</title><rect x="85.2678%" y="1045" width="0.3038%" height="15" fill="rgb(239,35,23)" fg:x="88143" fg:w="314"/><text x="85.5178%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (301 samples, 0.29%)</title><rect x="85.2803%" y="1029" width="0.2912%" height="15" fill="rgb(211,167,0)" fg:x="88156" fg:w="301"/><text x="85.5303%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (301 samples, 0.29%)</title><rect x="85.2803%" y="1013" width="0.2912%" height="15" fill="rgb(225,119,45)" fg:x="88156" fg:w="301"/><text x="85.5303%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (301 samples, 0.29%)</title><rect x="85.2803%" y="997" width="0.2912%" height="15" fill="rgb(210,162,6)" fg:x="88156" fg:w="301"/><text x="85.5303%" y="1007.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (17 samples, 0.02%)</title><rect x="85.5715%" y="1157" width="0.0164%" height="15" fill="rgb(208,118,35)" fg:x="88457" fg:w="17"/><text x="85.8215%" y="1167.50"></text></g><g><title>[unknown] (82,925 samples, 80.22%)</title><rect x="5.3893%" y="1173" width="80.2200%" height="15" fill="rgb(239,4,53)" fg:x="5571" fg:w="82925"/><text x="5.6393%" y="1183.50">[unknown]</text></g><g><title>tremor_script::srs::EventPayload::try_new (22 samples, 0.02%)</title><rect x="85.5880%" y="1157" width="0.0213%" height="15" fill="rgb(213,130,21)" fg:x="88474" fg:w="22"/><text x="85.8380%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.01%)</title><rect x="85.7340%" y="565" width="0.0116%" height="15" fill="rgb(235,148,0)" fg:x="88625" fg:w="12"/><text x="85.9840%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (21 samples, 0.02%)</title><rect x="85.7979%" y="469" width="0.0203%" height="15" fill="rgb(244,224,18)" fg:x="88691" fg:w="21"/><text x="86.0479%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (16 samples, 0.02%)</title><rect x="85.8027%" y="453" width="0.0155%" height="15" fill="rgb(211,214,4)" fg:x="88696" fg:w="16"/><text x="86.0527%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.01%)</title><rect x="85.8076%" y="437" width="0.0106%" height="15" fill="rgb(206,119,25)" fg:x="88701" fg:w="11"/><text x="86.0576%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (110 samples, 0.11%)</title><rect x="85.7457%" y="533" width="0.1064%" height="15" fill="rgb(243,93,47)" fg:x="88637" fg:w="110"/><text x="85.9957%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (97 samples, 0.09%)</title><rect x="85.7582%" y="517" width="0.0938%" height="15" fill="rgb(224,194,6)" fg:x="88650" fg:w="97"/><text x="86.0082%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (80 samples, 0.08%)</title><rect x="85.7747%" y="501" width="0.0774%" height="15" fill="rgb(243,229,6)" fg:x="88667" fg:w="80"/><text x="86.0247%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (57 samples, 0.06%)</title><rect x="85.7969%" y="485" width="0.0551%" height="15" fill="rgb(207,23,50)" fg:x="88690" fg:w="57"/><text x="86.0469%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.02%)</title><rect x="85.8356%" y="469" width="0.0164%" height="15" fill="rgb(253,192,32)" fg:x="88730" fg:w="17"/><text x="86.0856%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (17 samples, 0.02%)</title><rect x="85.8356%" y="453" width="0.0164%" height="15" fill="rgb(213,21,6)" fg:x="88730" fg:w="17"/><text x="86.0856%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (16 samples, 0.02%)</title><rect x="85.8366%" y="437" width="0.0155%" height="15" fill="rgb(243,151,13)" fg:x="88731" fg:w="16"/><text x="86.0866%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.02%)</title><rect x="85.8366%" y="421" width="0.0155%" height="15" fill="rgb(233,165,41)" fg:x="88731" fg:w="16"/><text x="86.0866%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 0.12%)</title><rect x="85.7457%" y="565" width="0.1171%" height="15" fill="rgb(246,176,45)" fg:x="88637" fg:w="121"/><text x="85.9957%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (121 samples, 0.12%)</title><rect x="85.7457%" y="549" width="0.1171%" height="15" fill="rgb(217,170,52)" fg:x="88637" fg:w="121"/><text x="85.9957%" y="559.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="85.8521%" y="533" width="0.0106%" height="15" fill="rgb(214,203,54)" fg:x="88747" fg:w="11"/><text x="86.1021%" y="543.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (254 samples, 0.25%)</title><rect x="85.9798%" y="533" width="0.2457%" height="15" fill="rgb(248,215,49)" fg:x="88879" fg:w="254"/><text x="86.2298%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (176 samples, 0.17%)</title><rect x="86.0552%" y="517" width="0.1703%" height="15" fill="rgb(208,46,10)" fg:x="88957" fg:w="176"/><text x="86.3052%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (176 samples, 0.17%)</title><rect x="86.0552%" y="501" width="0.1703%" height="15" fill="rgb(254,5,31)" fg:x="88957" fg:w="176"/><text x="86.3052%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (370 samples, 0.36%)</title><rect x="85.8734%" y="549" width="0.3579%" height="15" fill="rgb(222,104,33)" fg:x="88769" fg:w="370"/><text x="86.1234%" y="559.50"></text></g><g><title>async_executor::steal (385 samples, 0.37%)</title><rect x="85.8627%" y="565" width="0.3724%" height="15" fill="rgb(248,49,16)" fg:x="88758" fg:w="385"/><text x="86.1127%" y="575.50"></text></g><g><title>concurrent_queue::full_fence (412 samples, 0.40%)</title><rect x="86.4596%" y="533" width="0.3986%" height="15" fill="rgb(232,198,41)" fg:x="89375" fg:w="412"/><text x="86.7096%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (411 samples, 0.40%)</title><rect x="86.4606%" y="517" width="0.3976%" height="15" fill="rgb(214,125,3)" fg:x="89376" fg:w="411"/><text x="86.7106%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (411 samples, 0.40%)</title><rect x="86.4606%" y="501" width="0.3976%" height="15" fill="rgb(229,220,28)" fg:x="89376" fg:w="411"/><text x="86.7106%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (411 samples, 0.40%)</title><rect x="86.4606%" y="485" width="0.3976%" height="15" fill="rgb(222,64,37)" fg:x="89376" fg:w="411"/><text x="86.7106%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (607 samples, 0.59%)</title><rect x="86.3125%" y="549" width="0.5872%" height="15" fill="rgb(249,184,13)" fg:x="89223" fg:w="607"/><text x="86.5625%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (43 samples, 0.04%)</title><rect x="86.8581%" y="533" width="0.0416%" height="15" fill="rgb(252,176,6)" fg:x="89787" fg:w="43"/><text x="87.1081%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.04%)</title><rect x="86.8610%" y="517" width="0.0387%" height="15" fill="rgb(228,153,7)" fg:x="89790" fg:w="40"/><text x="87.1110%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (145 samples, 0.14%)</title><rect x="86.9288%" y="533" width="0.1403%" height="15" fill="rgb(242,193,5)" fg:x="89860" fg:w="145"/><text x="87.1788%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (143 samples, 0.14%)</title><rect x="86.9307%" y="517" width="0.1383%" height="15" fill="rgb(232,140,9)" fg:x="89862" fg:w="143"/><text x="87.1807%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (143 samples, 0.14%)</title><rect x="86.9307%" y="501" width="0.1383%" height="15" fill="rgb(213,222,16)" fg:x="89862" fg:w="143"/><text x="87.1807%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (143 samples, 0.14%)</title><rect x="86.9307%" y="485" width="0.1383%" height="15" fill="rgb(222,75,50)" fg:x="89862" fg:w="143"/><text x="87.1807%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (52 samples, 0.05%)</title><rect x="87.0913%" y="533" width="0.0503%" height="15" fill="rgb(205,180,2)" fg:x="90028" fg:w="52"/><text x="87.3413%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (52 samples, 0.05%)</title><rect x="87.0913%" y="517" width="0.0503%" height="15" fill="rgb(216,34,7)" fg:x="90028" fg:w="52"/><text x="87.3413%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (43 samples, 0.04%)</title><rect x="87.1416%" y="533" width="0.0416%" height="15" fill="rgb(253,16,32)" fg:x="90080" fg:w="43"/><text x="87.3916%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_or (43 samples, 0.04%)</title><rect x="87.1416%" y="517" width="0.0416%" height="15" fill="rgb(208,97,28)" fg:x="90080" fg:w="43"/><text x="87.3916%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,105 samples, 1.07%)</title><rect x="86.2352%" y="565" width="1.0690%" height="15" fill="rgb(225,92,11)" fg:x="89143" fg:w="1105"/><text x="86.4852%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (418 samples, 0.40%)</title><rect x="86.8997%" y="549" width="0.4044%" height="15" fill="rgb(243,38,12)" fg:x="89830" fg:w="418"/><text x="87.1497%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (125 samples, 0.12%)</title><rect x="87.1832%" y="533" width="0.1209%" height="15" fill="rgb(208,139,16)" fg:x="90123" fg:w="125"/><text x="87.4332%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (125 samples, 0.12%)</title><rect x="87.1832%" y="517" width="0.1209%" height="15" fill="rgb(227,24,9)" fg:x="90123" fg:w="125"/><text x="87.4332%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (99 samples, 0.10%)</title><rect x="87.3167%" y="501" width="0.0958%" height="15" fill="rgb(206,62,11)" fg:x="90261" fg:w="99"/><text x="87.5667%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (99 samples, 0.10%)</title><rect x="87.3167%" y="485" width="0.0958%" height="15" fill="rgb(228,134,27)" fg:x="90261" fg:w="99"/><text x="87.5667%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (215 samples, 0.21%)</title><rect x="87.3041%" y="565" width="0.2080%" height="15" fill="rgb(205,55,33)" fg:x="90248" fg:w="215"/><text x="87.5541%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (215 samples, 0.21%)</title><rect x="87.3041%" y="549" width="0.2080%" height="15" fill="rgb(243,75,43)" fg:x="90248" fg:w="215"/><text x="87.5541%" y="559.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (213 samples, 0.21%)</title><rect x="87.3060%" y="533" width="0.2061%" height="15" fill="rgb(223,27,42)" fg:x="90250" fg:w="213"/><text x="87.5560%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (205 samples, 0.20%)</title><rect x="87.3138%" y="517" width="0.1983%" height="15" fill="rgb(232,189,33)" fg:x="90258" fg:w="205"/><text x="87.5638%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (103 samples, 0.10%)</title><rect x="87.4125%" y="501" width="0.0996%" height="15" fill="rgb(210,9,39)" fg:x="90360" fg:w="103"/><text x="87.6625%" y="511.50"></text></g><g><title>___pthread_rwlock_unlock (103 samples, 0.10%)</title><rect x="87.4125%" y="485" width="0.0996%" height="15" fill="rgb(242,85,26)" fg:x="90360" fg:w="103"/><text x="87.6625%" y="495.50"></text></g><g><title>fastrand::usize (16 samples, 0.02%)</title><rect x="87.5131%" y="565" width="0.0155%" height="15" fill="rgb(248,44,4)" fg:x="90464" fg:w="16"/><text x="87.7631%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.01%)</title><rect x="87.5140%" y="549" width="0.0145%" height="15" fill="rgb(250,96,46)" fg:x="90465" fg:w="15"/><text x="87.7640%" y="559.50"></text></g><g><title>___pthread_rwlock_rdlock (116 samples, 0.11%)</title><rect x="87.5392%" y="517" width="0.1122%" height="15" fill="rgb(229,116,26)" fg:x="90491" fg:w="116"/><text x="87.7892%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (2,063 samples, 2.00%)</title><rect x="85.6963%" y="581" width="1.9957%" height="15" fill="rgb(246,94,34)" fg:x="88586" fg:w="2063"/><text x="85.9463%" y="591.50">a..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (169 samples, 0.16%)</title><rect x="87.5285%" y="565" width="0.1635%" height="15" fill="rgb(251,73,21)" fg:x="90480" fg:w="169"/><text x="87.7785%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (163 samples, 0.16%)</title><rect x="87.5343%" y="549" width="0.1577%" height="15" fill="rgb(254,121,25)" fg:x="90486" fg:w="163"/><text x="87.7843%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (162 samples, 0.16%)</title><rect x="87.5353%" y="533" width="0.1567%" height="15" fill="rgb(215,161,49)" fg:x="90487" fg:w="162"/><text x="87.7853%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.04%)</title><rect x="87.6514%" y="517" width="0.0406%" height="15" fill="rgb(221,43,13)" fg:x="90607" fg:w="42"/><text x="87.9014%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (42 samples, 0.04%)</title><rect x="87.6514%" y="501" width="0.0406%" height="15" fill="rgb(249,5,37)" fg:x="90607" fg:w="42"/><text x="87.9014%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (19 samples, 0.02%)</title><rect x="87.6930%" y="565" width="0.0184%" height="15" fill="rgb(226,25,44)" fg:x="90650" fg:w="19"/><text x="87.9430%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="87.6930%" y="549" width="0.0184%" height="15" fill="rgb(238,189,16)" fg:x="90650" fg:w="19"/><text x="87.9430%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.02%)</title><rect x="87.6949%" y="533" width="0.0164%" height="15" fill="rgb(251,186,8)" fg:x="90652" fg:w="17"/><text x="87.9449%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (17 samples, 0.02%)</title><rect x="87.6949%" y="517" width="0.0164%" height="15" fill="rgb(254,34,31)" fg:x="90652" fg:w="17"/><text x="87.9449%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="87.6949%" y="501" width="0.0164%" height="15" fill="rgb(225,215,27)" fg:x="90652" fg:w="17"/><text x="87.9449%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (31 samples, 0.03%)</title><rect x="87.7114%" y="565" width="0.0300%" height="15" fill="rgb(221,192,48)" fg:x="90669" fg:w="31"/><text x="87.9614%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.03%)</title><rect x="87.7114%" y="549" width="0.0300%" height="15" fill="rgb(219,137,20)" fg:x="90669" fg:w="31"/><text x="87.9614%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::notify (13 samples, 0.01%)</title><rect x="87.7443%" y="517" width="0.0126%" height="15" fill="rgb(219,84,11)" fg:x="90703" fg:w="13"/><text x="87.9943%" y="527.50"></text></g><g><title>polling::Poller::notify (12 samples, 0.01%)</title><rect x="87.7452%" y="501" width="0.0116%" height="15" fill="rgb(224,10,23)" fg:x="90704" fg:w="12"/><text x="87.9952%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (29 samples, 0.03%)</title><rect x="87.7762%" y="485" width="0.0281%" height="15" fill="rgb(248,22,39)" fg:x="90736" fg:w="29"/><text x="88.0262%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.03%)</title><rect x="87.7762%" y="469" width="0.0281%" height="15" fill="rgb(212,154,20)" fg:x="90736" fg:w="29"/><text x="88.0262%" y="479.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (66 samples, 0.06%)</title><rect x="87.8042%" y="485" width="0.0638%" height="15" fill="rgb(236,199,50)" fg:x="90765" fg:w="66"/><text x="88.0542%" y="495.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (66 samples, 0.06%)</title><rect x="87.8042%" y="469" width="0.0638%" height="15" fill="rgb(211,9,17)" fg:x="90765" fg:w="66"/><text x="88.0542%" y="479.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (66 samples, 0.06%)</title><rect x="87.8042%" y="453" width="0.0638%" height="15" fill="rgb(243,216,36)" fg:x="90765" fg:w="66"/><text x="88.0542%" y="463.50"></text></g><g><title>__GI___pthread_cond_signal (66 samples, 0.06%)</title><rect x="87.8042%" y="437" width="0.0638%" height="15" fill="rgb(250,2,10)" fg:x="90765" fg:w="66"/><text x="88.0542%" y="447.50"></text></g><g><title>parking::Unparker::unpark (164 samples, 0.16%)</title><rect x="87.7578%" y="517" width="0.1587%" height="15" fill="rgb(226,50,48)" fg:x="90717" fg:w="164"/><text x="88.0078%" y="527.50"></text></g><g><title>parking::Inner::unpark (153 samples, 0.15%)</title><rect x="87.7684%" y="501" width="0.1480%" height="15" fill="rgb(243,81,16)" fg:x="90728" fg:w="153"/><text x="88.0184%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.05%)</title><rect x="87.8681%" y="485" width="0.0484%" height="15" fill="rgb(250,14,2)" fg:x="90831" fg:w="50"/><text x="88.1181%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (50 samples, 0.05%)</title><rect x="87.8681%" y="469" width="0.0484%" height="15" fill="rgb(233,135,29)" fg:x="90831" fg:w="50"/><text x="88.1181%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (50 samples, 0.05%)</title><rect x="87.8681%" y="453" width="0.0484%" height="15" fill="rgb(224,64,43)" fg:x="90831" fg:w="50"/><text x="88.1181%" y="463.50"></text></g><g><title>___pthread_mutex_lock (50 samples, 0.05%)</title><rect x="87.8681%" y="437" width="0.0484%" height="15" fill="rgb(238,84,13)" fg:x="90831" fg:w="50"/><text x="88.1181%" y="447.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (188 samples, 0.18%)</title><rect x="87.7433%" y="533" width="0.1819%" height="15" fill="rgb(253,48,26)" fg:x="90702" fg:w="188"/><text x="87.9933%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (210 samples, 0.20%)</title><rect x="87.7414%" y="565" width="0.2031%" height="15" fill="rgb(205,223,31)" fg:x="90700" fg:w="210"/><text x="87.9914%" y="575.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (210 samples, 0.20%)</title><rect x="87.7414%" y="549" width="0.2031%" height="15" fill="rgb(221,41,32)" fg:x="90700" fg:w="210"/><text x="87.9914%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (20 samples, 0.02%)</title><rect x="87.9252%" y="533" width="0.0193%" height="15" fill="rgb(213,158,31)" fg:x="90890" fg:w="20"/><text x="88.1752%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="87.9252%" y="517" width="0.0193%" height="15" fill="rgb(245,126,43)" fg:x="90890" fg:w="20"/><text x="88.1752%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="87.9252%" y="501" width="0.0193%" height="15" fill="rgb(227,7,22)" fg:x="90890" fg:w="20"/><text x="88.1752%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="87.9252%" y="485" width="0.0193%" height="15" fill="rgb(252,90,44)" fg:x="90890" fg:w="20"/><text x="88.1752%" y="495.50"></text></g><g><title>async_executor::State::notify (279 samples, 0.27%)</title><rect x="87.6920%" y="581" width="0.2699%" height="15" fill="rgb(253,91,0)" fg:x="90649" fg:w="279"/><text x="87.9420%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="87.9445%" y="565" width="0.0174%" height="15" fill="rgb(252,175,49)" fg:x="90910" fg:w="18"/><text x="88.1945%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="87.9445%" y="549" width="0.0174%" height="15" fill="rgb(246,150,1)" fg:x="90910" fg:w="18"/><text x="88.1945%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="87.9455%" y="533" width="0.0164%" height="15" fill="rgb(241,192,25)" fg:x="90911" fg:w="17"/><text x="88.1955%" y="543.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="87.9455%" y="517" width="0.0164%" height="15" fill="rgb(239,187,11)" fg:x="90911" fg:w="17"/><text x="88.1955%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="87.9697%" y="549" width="0.0609%" height="15" fill="rgb(218,202,51)" fg:x="90936" fg:w="63"/><text x="88.2197%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (62 samples, 0.06%)</title><rect x="87.9706%" y="533" width="0.0600%" height="15" fill="rgb(225,176,8)" fg:x="90937" fg:w="62"/><text x="88.2206%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (62 samples, 0.06%)</title><rect x="87.9706%" y="517" width="0.0600%" height="15" fill="rgb(219,122,41)" fg:x="90937" fg:w="62"/><text x="88.2206%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (62 samples, 0.06%)</title><rect x="87.9706%" y="501" width="0.0600%" height="15" fill="rgb(248,140,20)" fg:x="90937" fg:w="62"/><text x="88.2206%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (62 samples, 0.06%)</title><rect x="87.9706%" y="485" width="0.0600%" height="15" fill="rgb(245,41,37)" fg:x="90937" fg:w="62"/><text x="88.2206%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (62 samples, 0.06%)</title><rect x="87.9706%" y="469" width="0.0600%" height="15" fill="rgb(235,82,39)" fg:x="90937" fg:w="62"/><text x="88.2206%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (11 samples, 0.01%)</title><rect x="88.0306%" y="549" width="0.0106%" height="15" fill="rgb(230,108,42)" fg:x="90999" fg:w="11"/><text x="88.2806%" y="559.50"></text></g><g><title>async_executor::Sleepers::insert (88 samples, 0.09%)</title><rect x="87.9687%" y="565" width="0.0851%" height="15" fill="rgb(215,150,50)" fg:x="90935" fg:w="88"/><text x="88.2187%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.01%)</title><rect x="88.0412%" y="549" width="0.0126%" height="15" fill="rgb(233,212,5)" fg:x="91010" fg:w="13"/><text x="88.2912%" y="559.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="88.0422%" y="533" width="0.0116%" height="15" fill="rgb(245,80,22)" fg:x="91011" fg:w="12"/><text x="88.2922%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (26 samples, 0.03%)</title><rect x="88.0867%" y="549" width="0.0252%" height="15" fill="rgb(238,129,16)" fg:x="91057" fg:w="26"/><text x="88.3367%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (26 samples, 0.03%)</title><rect x="88.0867%" y="533" width="0.0252%" height="15" fill="rgb(240,19,0)" fg:x="91057" fg:w="26"/><text x="88.3367%" y="543.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="88.0896%" y="517" width="0.0222%" height="15" fill="rgb(232,42,35)" fg:x="91060" fg:w="23"/><text x="88.3396%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="88.0896%" y="501" width="0.0222%" height="15" fill="rgb(223,130,24)" fg:x="91060" fg:w="23"/><text x="88.3396%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.02%)</title><rect x="88.0896%" y="485" width="0.0222%" height="15" fill="rgb(237,16,22)" fg:x="91060" fg:w="23"/><text x="88.3396%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.02%)</title><rect x="88.0896%" y="469" width="0.0222%" height="15" fill="rgb(248,192,20)" fg:x="91060" fg:w="23"/><text x="88.3396%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.01%)</title><rect x="88.1119%" y="549" width="0.0116%" height="15" fill="rgb(233,167,2)" fg:x="91083" fg:w="12"/><text x="88.3619%" y="559.50"></text></g><g><title>async_executor::Sleepers::update (75 samples, 0.07%)</title><rect x="88.0577%" y="565" width="0.0726%" height="15" fill="rgb(252,71,44)" fg:x="91027" fg:w="75"/><text x="88.3077%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (100 samples, 0.10%)</title><rect x="88.1302%" y="565" width="0.0967%" height="15" fill="rgb(238,37,47)" fg:x="91102" fg:w="100"/><text x="88.3802%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.10%)</title><rect x="88.1302%" y="549" width="0.0967%" height="15" fill="rgb(214,202,54)" fg:x="91102" fg:w="100"/><text x="88.3802%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (95 samples, 0.09%)</title><rect x="88.1351%" y="533" width="0.0919%" height="15" fill="rgb(254,165,40)" fg:x="91107" fg:w="95"/><text x="88.3851%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (91 samples, 0.09%)</title><rect x="88.1390%" y="517" width="0.0880%" height="15" fill="rgb(246,173,38)" fg:x="91111" fg:w="91"/><text x="88.3890%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (91 samples, 0.09%)</title><rect x="88.1390%" y="501" width="0.0880%" height="15" fill="rgb(215,3,27)" fg:x="91111" fg:w="91"/><text x="88.3890%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (74 samples, 0.07%)</title><rect x="88.2270%" y="565" width="0.0716%" height="15" fill="rgb(239,169,51)" fg:x="91202" fg:w="74"/><text x="88.4770%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (74 samples, 0.07%)</title><rect x="88.2270%" y="549" width="0.0716%" height="15" fill="rgb(212,5,25)" fg:x="91202" fg:w="74"/><text x="88.4770%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (39 samples, 0.04%)</title><rect x="88.2986%" y="565" width="0.0377%" height="15" fill="rgb(243,45,17)" fg:x="91276" fg:w="39"/><text x="88.5486%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_store (39 samples, 0.04%)</title><rect x="88.2986%" y="549" width="0.0377%" height="15" fill="rgb(242,97,9)" fg:x="91276" fg:w="39"/><text x="88.5486%" y="559.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="88.3363%" y="549" width="0.0106%" height="15" fill="rgb(228,71,31)" fg:x="91315" fg:w="11"/><text x="88.5863%" y="559.50"></text></g><g><title>std::sync::poison::Flag::borrow (11 samples, 0.01%)</title><rect x="88.3363%" y="533" width="0.0106%" height="15" fill="rgb(252,184,16)" fg:x="91315" fg:w="11"/><text x="88.5863%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (594 samples, 0.57%)</title><rect x="87.9619%" y="581" width="0.5746%" height="15" fill="rgb(236,169,46)" fg:x="90928" fg:w="594"/><text x="88.2119%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (207 samples, 0.20%)</title><rect x="88.3363%" y="565" width="0.2002%" height="15" fill="rgb(207,17,47)" fg:x="91315" fg:w="207"/><text x="88.5863%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (196 samples, 0.19%)</title><rect x="88.3469%" y="549" width="0.1896%" height="15" fill="rgb(206,201,28)" fg:x="91326" fg:w="196"/><text x="88.5969%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (187 samples, 0.18%)</title><rect x="88.3556%" y="533" width="0.1809%" height="15" fill="rgb(224,184,23)" fg:x="91335" fg:w="187"/><text x="88.6056%" y="543.50"></text></g><g><title>___pthread_mutex_lock (187 samples, 0.18%)</title><rect x="88.3556%" y="517" width="0.1809%" height="15" fill="rgb(208,139,48)" fg:x="91335" fg:w="187"/><text x="88.6056%" y="527.50"></text></g><g><title>__GI___lll_lock_wait (18 samples, 0.02%)</title><rect x="88.5191%" y="501" width="0.0174%" height="15" fill="rgb(208,130,10)" fg:x="91504" fg:w="18"/><text x="88.7691%" y="511.50"></text></g><g><title>async_executor::Sleepers::remove (33 samples, 0.03%)</title><rect x="88.5404%" y="565" width="0.0319%" height="15" fill="rgb(211,213,45)" fg:x="91526" fg:w="33"/><text x="88.7904%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (19 samples, 0.02%)</title><rect x="88.5540%" y="549" width="0.0184%" height="15" fill="rgb(235,100,30)" fg:x="91540" fg:w="19"/><text x="88.8040%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (19 samples, 0.02%)</title><rect x="88.5540%" y="533" width="0.0184%" height="15" fill="rgb(206,144,31)" fg:x="91540" fg:w="19"/><text x="88.8040%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="88.5540%" y="517" width="0.0184%" height="15" fill="rgb(224,200,26)" fg:x="91540" fg:w="19"/><text x="88.8040%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (19 samples, 0.02%)</title><rect x="88.5540%" y="501" width="0.0184%" height="15" fill="rgb(247,104,53)" fg:x="91540" fg:w="19"/><text x="88.8040%" y="511.50"></text></g><g><title>core::mem::drop (18 samples, 0.02%)</title><rect x="88.5549%" y="485" width="0.0174%" height="15" fill="rgb(220,14,17)" fg:x="91541" fg:w="18"/><text x="88.8049%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="88.5549%" y="469" width="0.0174%" height="15" fill="rgb(230,140,40)" fg:x="91541" fg:w="18"/><text x="88.8049%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="88.5549%" y="453" width="0.0174%" height="15" fill="rgb(229,2,41)" fg:x="91541" fg:w="18"/><text x="88.8049%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="88.5549%" y="437" width="0.0174%" height="15" fill="rgb(232,89,16)" fg:x="91541" fg:w="18"/><text x="88.8049%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="88.5549%" y="421" width="0.0174%" height="15" fill="rgb(247,59,52)" fg:x="91541" fg:w="18"/><text x="88.8049%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (17 samples, 0.02%)</title><rect x="88.5723%" y="565" width="0.0164%" height="15" fill="rgb(226,110,21)" fg:x="91559" fg:w="17"/><text x="88.8223%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="88.5723%" y="549" width="0.0164%" height="15" fill="rgb(224,176,43)" fg:x="91559" fg:w="17"/><text x="88.8223%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.02%)</title><rect x="88.5733%" y="533" width="0.0155%" height="15" fill="rgb(221,73,6)" fg:x="91560" fg:w="16"/><text x="88.8233%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (16 samples, 0.02%)</title><rect x="88.5733%" y="517" width="0.0155%" height="15" fill="rgb(232,78,19)" fg:x="91560" fg:w="16"/><text x="88.8233%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (16 samples, 0.02%)</title><rect x="88.5733%" y="501" width="0.0155%" height="15" fill="rgb(233,112,48)" fg:x="91560" fg:w="16"/><text x="88.8233%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (24 samples, 0.02%)</title><rect x="88.5888%" y="565" width="0.0232%" height="15" fill="rgb(243,131,47)" fg:x="91576" fg:w="24"/><text x="88.8388%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (24 samples, 0.02%)</title><rect x="88.5888%" y="549" width="0.0232%" height="15" fill="rgb(226,51,1)" fg:x="91576" fg:w="24"/><text x="88.8388%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (23 samples, 0.02%)</title><rect x="88.6120%" y="565" width="0.0222%" height="15" fill="rgb(247,58,7)" fg:x="91600" fg:w="23"/><text x="88.8620%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (23 samples, 0.02%)</title><rect x="88.6120%" y="549" width="0.0222%" height="15" fill="rgb(209,7,32)" fg:x="91600" fg:w="23"/><text x="88.8620%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,100 samples, 3.00%)</title><rect x="85.6818%" y="645" width="2.9989%" height="15" fill="rgb(209,39,41)" fg:x="88571" fg:w="3100"/><text x="85.9318%" y="655.50">&lt;co..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (3,099 samples, 3.00%)</title><rect x="85.6828%" y="629" width="2.9979%" height="15" fill="rgb(226,182,46)" fg:x="88572" fg:w="3099"/><text x="85.9328%" y="639.50">asy..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3,096 samples, 3.00%)</title><rect x="85.6857%" y="613" width="2.9950%" height="15" fill="rgb(230,219,10)" fg:x="88575" fg:w="3096"/><text x="85.9357%" y="623.50">&lt;fu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (3,089 samples, 2.99%)</title><rect x="85.6925%" y="597" width="2.9882%" height="15" fill="rgb(227,175,30)" fg:x="88582" fg:w="3089"/><text x="85.9425%" y="607.50">asy..</text></g><g><title>async_executor::Ticker::wake (149 samples, 0.14%)</title><rect x="88.5365%" y="581" width="0.1441%" height="15" fill="rgb(217,2,50)" fg:x="91522" fg:w="149"/><text x="88.7865%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (48 samples, 0.05%)</title><rect x="88.6343%" y="565" width="0.0464%" height="15" fill="rgb(229,160,0)" fg:x="91623" fg:w="48"/><text x="88.8843%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (46 samples, 0.04%)</title><rect x="88.6362%" y="549" width="0.0445%" height="15" fill="rgb(207,78,37)" fg:x="91625" fg:w="46"/><text x="88.8862%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (43 samples, 0.04%)</title><rect x="88.6391%" y="533" width="0.0416%" height="15" fill="rgb(225,57,0)" fg:x="91628" fg:w="43"/><text x="88.8891%" y="543.50"></text></g><g><title>___pthread_mutex_lock (43 samples, 0.04%)</title><rect x="88.6391%" y="517" width="0.0416%" height="15" fill="rgb(232,154,2)" fg:x="91628" fg:w="43"/><text x="88.8891%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,144 samples, 3.04%)</title><rect x="85.6683%" y="677" width="3.0414%" height="15" fill="rgb(241,212,25)" fg:x="88557" fg:w="3144"/><text x="85.9183%" y="687.50">&lt;co..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (3,144 samples, 3.04%)</title><rect x="85.6683%" y="661" width="3.0414%" height="15" fill="rgb(226,69,20)" fg:x="88557" fg:w="3144"/><text x="85.9183%" y="671.50">asy..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (30 samples, 0.03%)</title><rect x="88.6807%" y="645" width="0.0290%" height="15" fill="rgb(247,184,54)" fg:x="91671" fg:w="30"/><text x="88.9307%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (30 samples, 0.03%)</title><rect x="88.6807%" y="629" width="0.0290%" height="15" fill="rgb(210,145,0)" fg:x="91671" fg:w="30"/><text x="88.9307%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (38 samples, 0.04%)</title><rect x="88.7765%" y="549" width="0.0368%" height="15" fill="rgb(253,82,12)" fg:x="91770" fg:w="38"/><text x="89.0265%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (36 samples, 0.03%)</title><rect x="88.7784%" y="533" width="0.0348%" height="15" fill="rgb(245,42,11)" fg:x="91772" fg:w="36"/><text x="89.0284%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (26 samples, 0.03%)</title><rect x="88.8142%" y="533" width="0.0252%" height="15" fill="rgb(219,147,32)" fg:x="91809" fg:w="26"/><text x="89.0642%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::_{{closure}} (32 samples, 0.03%)</title><rect x="88.8529%" y="485" width="0.0310%" height="15" fill="rgb(246,12,7)" fg:x="91849" fg:w="32"/><text x="89.1029%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="89.5842%" y="469" width="0.0242%" height="15" fill="rgb(243,50,9)" fg:x="92605" fg:w="25"/><text x="89.8342%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.02%)</title><rect x="89.5842%" y="453" width="0.0242%" height="15" fill="rgb(219,149,6)" fg:x="92605" fg:w="25"/><text x="89.8342%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (16 samples, 0.02%)</title><rect x="89.5929%" y="437" width="0.0155%" height="15" fill="rgb(241,51,42)" fg:x="92614" fg:w="16"/><text x="89.8429%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="89.6084%" y="469" width="0.0222%" height="15" fill="rgb(226,128,27)" fg:x="92630" fg:w="23"/><text x="89.8584%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (22 samples, 0.02%)</title><rect x="89.6094%" y="453" width="0.0213%" height="15" fill="rgb(244,144,4)" fg:x="92631" fg:w="22"/><text x="89.8594%" y="463.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.03%)</title><rect x="89.6307%" y="469" width="0.0281%" height="15" fill="rgb(221,4,13)" fg:x="92653" fg:w="29"/><text x="89.8807%" y="479.50"></text></g><g><title>&lt;tremor_runtime::permge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.01%)</title><rect x="89.6442%" y="453" width="0.0145%" height="15" fill="rgb(208,170,28)" fg:x="92667" fg:w="15"/><text x="89.8942%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="89.6829%" y="453" width="0.0174%" height="15" fill="rgb(226,131,13)" fg:x="92707" fg:w="18"/><text x="89.9329%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (13 samples, 0.01%)</title><rect x="89.9876%" y="421" width="0.0126%" height="15" fill="rgb(215,72,41)" fg:x="93022" fg:w="13"/><text x="90.2376%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="89.9876%" y="405" width="0.0126%" height="15" fill="rgb(243,108,20)" fg:x="93022" fg:w="13"/><text x="90.2376%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="89.9876%" y="389" width="0.0126%" height="15" fill="rgb(230,189,17)" fg:x="93022" fg:w="13"/><text x="90.2376%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="89.9876%" y="373" width="0.0126%" height="15" fill="rgb(220,50,17)" fg:x="93022" fg:w="13"/><text x="90.2376%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (12 samples, 0.01%)</title><rect x="89.9886%" y="357" width="0.0116%" height="15" fill="rgb(248,152,48)" fg:x="93023" fg:w="12"/><text x="90.2386%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (35 samples, 0.03%)</title><rect x="90.0002%" y="373" width="0.0339%" height="15" fill="rgb(244,91,11)" fg:x="93035" fg:w="35"/><text x="90.2502%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (16 samples, 0.02%)</title><rect x="90.0186%" y="357" width="0.0155%" height="15" fill="rgb(220,157,5)" fg:x="93054" fg:w="16"/><text x="90.2686%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (479 samples, 0.46%)</title><rect x="89.6587%" y="469" width="0.4634%" height="15" fill="rgb(253,137,8)" fg:x="92682" fg:w="479"/><text x="89.9087%" y="479.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (436 samples, 0.42%)</title><rect x="89.7003%" y="453" width="0.4218%" height="15" fill="rgb(217,137,51)" fg:x="92725" fg:w="436"/><text x="89.9503%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (139 samples, 0.13%)</title><rect x="89.9876%" y="437" width="0.1345%" height="15" fill="rgb(218,209,53)" fg:x="93022" fg:w="139"/><text x="90.2376%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (126 samples, 0.12%)</title><rect x="90.0002%" y="421" width="0.1219%" height="15" fill="rgb(249,137,25)" fg:x="93035" fg:w="126"/><text x="90.2502%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (126 samples, 0.12%)</title><rect x="90.0002%" y="405" width="0.1219%" height="15" fill="rgb(239,155,26)" fg:x="93035" fg:w="126"/><text x="90.2502%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.12%)</title><rect x="90.0002%" y="389" width="0.1219%" height="15" fill="rgb(227,85,46)" fg:x="93035" fg:w="126"/><text x="90.2502%" y="399.50"></text></g><g><title>core::mem::drop (89 samples, 0.09%)</title><rect x="90.0360%" y="373" width="0.0861%" height="15" fill="rgb(251,107,43)" fg:x="93072" fg:w="89"/><text x="90.2860%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (89 samples, 0.09%)</title><rect x="90.0360%" y="357" width="0.0861%" height="15" fill="rgb(234,170,33)" fg:x="93072" fg:w="89"/><text x="90.2860%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.09%)</title><rect x="90.0360%" y="341" width="0.0861%" height="15" fill="rgb(206,29,35)" fg:x="93072" fg:w="89"/><text x="90.2860%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (50 samples, 0.05%)</title><rect x="90.0737%" y="325" width="0.0484%" height="15" fill="rgb(227,138,25)" fg:x="93111" fg:w="50"/><text x="90.3237%" y="335.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (22 samples, 0.02%)</title><rect x="90.1008%" y="309" width="0.0213%" height="15" fill="rgb(249,131,35)" fg:x="93139" fg:w="22"/><text x="90.3508%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (22 samples, 0.02%)</title><rect x="90.1008%" y="293" width="0.0213%" height="15" fill="rgb(239,6,40)" fg:x="93139" fg:w="22"/><text x="90.3508%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (22 samples, 0.02%)</title><rect x="90.1008%" y="277" width="0.0213%" height="15" fill="rgb(246,136,47)" fg:x="93139" fg:w="22"/><text x="90.3508%" y="287.50"></text></g><g><title>core::mem::replace (22 samples, 0.02%)</title><rect x="90.1008%" y="261" width="0.0213%" height="15" fill="rgb(253,58,26)" fg:x="93139" fg:w="22"/><text x="90.3508%" y="271.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="90.1037%" y="245" width="0.0184%" height="15" fill="rgb(237,141,10)" fg:x="93142" fg:w="19"/><text x="90.3537%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (12 samples, 0.01%)</title><rect x="90.3968%" y="437" width="0.0116%" height="15" fill="rgb(234,156,12)" fg:x="93445" fg:w="12"/><text x="90.6468%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (291 samples, 0.28%)</title><rect x="90.1279%" y="469" width="0.2815%" height="15" fill="rgb(243,224,36)" fg:x="93167" fg:w="291"/><text x="90.3779%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="90.3968%" y="453" width="0.0126%" height="15" fill="rgb(205,229,51)" fg:x="93445" fg:w="13"/><text x="90.6468%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (284 samples, 0.27%)</title><rect x="90.4539%" y="437" width="0.2747%" height="15" fill="rgb(223,189,4)" fg:x="93504" fg:w="284"/><text x="90.7039%" y="447.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (15 samples, 0.01%)</title><rect x="90.8002%" y="165" width="0.0145%" height="15" fill="rgb(249,167,54)" fg:x="93862" fg:w="15"/><text x="91.0502%" y="175.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (15 samples, 0.01%)</title><rect x="90.8002%" y="149" width="0.0145%" height="15" fill="rgb(218,34,28)" fg:x="93862" fg:w="15"/><text x="91.0502%" y="159.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (35 samples, 0.03%)</title><rect x="90.7886%" y="213" width="0.0339%" height="15" fill="rgb(232,109,42)" fg:x="93850" fg:w="35"/><text x="91.0386%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (35 samples, 0.03%)</title><rect x="90.7886%" y="197" width="0.0339%" height="15" fill="rgb(248,214,46)" fg:x="93850" fg:w="35"/><text x="91.0386%" y="207.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (31 samples, 0.03%)</title><rect x="90.7925%" y="181" width="0.0300%" height="15" fill="rgb(244,216,40)" fg:x="93854" fg:w="31"/><text x="91.0425%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc_not_large_local (41 samples, 0.04%)</title><rect x="90.7886%" y="229" width="0.0397%" height="15" fill="rgb(231,226,31)" fg:x="93850" fg:w="41"/><text x="91.0386%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (60 samples, 0.06%)</title><rect x="90.7818%" y="245" width="0.0580%" height="15" fill="rgb(238,38,43)" fg:x="93843" fg:w="60"/><text x="91.0318%" y="255.50"></text></g><g><title>snmalloc::AAL_Generic&lt;snmalloc::AAL_NoStrictProvenance&lt;snmalloc::AAL_x86&gt; &gt;::prefetch (35 samples, 0.03%)</title><rect x="90.8573%" y="229" width="0.0339%" height="15" fill="rgb(208,88,43)" fg:x="93921" fg:w="35"/><text x="91.1073%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (354 samples, 0.34%)</title><rect x="90.7799%" y="277" width="0.3425%" height="15" fill="rgb(205,136,37)" fg:x="93841" fg:w="354"/><text x="91.0299%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (354 samples, 0.34%)</title><rect x="90.7799%" y="261" width="0.3425%" height="15" fill="rgb(237,34,14)" fg:x="93841" fg:w="354"/><text x="91.0299%" y="271.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (290 samples, 0.28%)</title><rect x="90.8418%" y="245" width="0.2805%" height="15" fill="rgb(236,193,44)" fg:x="93905" fg:w="290"/><text x="91.0918%" y="255.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (239 samples, 0.23%)</title><rect x="90.8912%" y="229" width="0.2312%" height="15" fill="rgb(231,48,10)" fg:x="93956" fg:w="239"/><text x="91.1412%" y="239.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (239 samples, 0.23%)</title><rect x="90.8912%" y="213" width="0.2312%" height="15" fill="rgb(213,141,34)" fg:x="93956" fg:w="239"/><text x="91.1412%" y="223.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (239 samples, 0.23%)</title><rect x="90.8912%" y="197" width="0.2312%" height="15" fill="rgb(249,130,34)" fg:x="93956" fg:w="239"/><text x="91.1412%" y="207.50"></text></g><g><title>snmalloc::CDLLNodeBase&lt;snmalloc::CDLLNode&lt;snmalloc::CapPtrCBChunk&gt;, snmalloc::CapPtrCBChunk&gt;::is_empty (11 samples, 0.01%)</title><rect x="91.1224%" y="261" width="0.0106%" height="15" fill="rgb(219,42,41)" fg:x="94195" fg:w="11"/><text x="91.3724%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::close (13 samples, 0.01%)</title><rect x="91.1378%" y="245" width="0.0126%" height="15" fill="rgb(224,100,54)" fg:x="94211" fg:w="13"/><text x="91.3878%" y="255.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::terminate (12 samples, 0.01%)</title><rect x="91.1388%" y="229" width="0.0116%" height="15" fill="rgb(229,200,27)" fg:x="94212" fg:w="12"/><text x="91.3888%" y="239.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="91.1398%" y="213" width="0.0106%" height="15" fill="rgb(217,118,10)" fg:x="94213" fg:w="11"/><text x="91.3898%" y="223.50"></text></g><g><title>snmalloc::FreeListIter::take (12 samples, 0.01%)</title><rect x="91.1504%" y="245" width="0.0116%" height="15" fill="rgb(206,22,3)" fg:x="94224" fg:w="12"/><text x="91.4004%" y="255.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (12 samples, 0.01%)</title><rect x="91.1504%" y="229" width="0.0116%" height="15" fill="rgb(232,163,46)" fg:x="94224" fg:w="12"/><text x="91.4004%" y="239.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_next_free_list&lt;(snmalloc::ZeroMem)0&gt; (45 samples, 0.04%)</title><rect x="91.1224%" y="277" width="0.0435%" height="15" fill="rgb(206,95,13)" fg:x="94195" fg:w="45"/><text x="91.3724%" y="287.50"></text></g><g><title>snmalloc::Metaslab::alloc&lt;(snmalloc::ZeroMem)0, snmalloc::PALLinux&gt; (34 samples, 0.03%)</title><rect x="91.1330%" y="261" width="0.0329%" height="15" fill="rgb(253,154,18)" fg:x="94206" fg:w="34"/><text x="91.3830%" y="271.50"></text></g><g><title>snmalloc::FreeListIter::empty (41 samples, 0.04%)</title><rect x="91.1659%" y="277" width="0.0397%" height="15" fill="rgb(219,32,23)" fg:x="94240" fg:w="41"/><text x="91.4159%" y="287.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::FreeObject, (snmalloc::capptr_bounds)4&gt;::operator== (41 samples, 0.04%)</title><rect x="91.1659%" y="261" width="0.0397%" height="15" fill="rgb(230,191,45)" fg:x="94240" fg:w="41"/><text x="91.4159%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (614 samples, 0.59%)</title><rect x="90.7431%" y="325" width="0.5940%" height="15" fill="rgb(229,64,36)" fg:x="93803" fg:w="614"/><text x="90.9931%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (614 samples, 0.59%)</title><rect x="90.7431%" y="309" width="0.5940%" height="15" fill="rgb(205,129,25)" fg:x="93803" fg:w="614"/><text x="90.9931%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (597 samples, 0.58%)</title><rect x="90.7596%" y="293" width="0.5775%" height="15" fill="rgb(254,112,7)" fg:x="93820" fg:w="597"/><text x="91.0096%" y="303.50"></text></g><g><title>snmalloc::FreeListIter::take (136 samples, 0.13%)</title><rect x="91.2055%" y="277" width="0.1316%" height="15" fill="rgb(226,53,48)" fg:x="94281" fg:w="136"/><text x="91.4555%" y="287.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (136 samples, 0.13%)</title><rect x="91.2055%" y="261" width="0.1316%" height="15" fill="rgb(214,153,38)" fg:x="94281" fg:w="136"/><text x="91.4555%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (968 samples, 0.94%)</title><rect x="90.4094%" y="453" width="0.9364%" height="15" fill="rgb(243,101,7)" fg:x="93458" fg:w="968"/><text x="90.6594%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (638 samples, 0.62%)</title><rect x="90.7286%" y="437" width="0.6172%" height="15" fill="rgb(240,140,22)" fg:x="93788" fg:w="638"/><text x="90.9786%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (638 samples, 0.62%)</title><rect x="90.7286%" y="421" width="0.6172%" height="15" fill="rgb(235,114,2)" fg:x="93788" fg:w="638"/><text x="90.9786%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (638 samples, 0.62%)</title><rect x="90.7286%" y="405" width="0.6172%" height="15" fill="rgb(242,59,12)" fg:x="93788" fg:w="638"/><text x="90.9786%" y="415.50"></text></g><g><title>alloc::alloc::alloc (635 samples, 0.61%)</title><rect x="90.7315%" y="389" width="0.6143%" height="15" fill="rgb(252,134,9)" fg:x="93791" fg:w="635"/><text x="90.9815%" y="399.50"></text></g><g><title>__rg_alloc (635 samples, 0.61%)</title><rect x="90.7315%" y="373" width="0.6143%" height="15" fill="rgb(236,4,44)" fg:x="93791" fg:w="635"/><text x="90.9815%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (635 samples, 0.61%)</title><rect x="90.7315%" y="357" width="0.6143%" height="15" fill="rgb(254,172,41)" fg:x="93791" fg:w="635"/><text x="90.9815%" y="367.50"></text></g><g><title>rust_alloc (632 samples, 0.61%)</title><rect x="90.7344%" y="341" width="0.6114%" height="15" fill="rgb(244,63,20)" fg:x="93794" fg:w="632"/><text x="90.9844%" y="351.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (975 samples, 0.94%)</title><rect x="90.4094%" y="469" width="0.9432%" height="15" fill="rgb(250,73,31)" fg:x="93458" fg:w="975"/><text x="90.6594%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (11 samples, 0.01%)</title><rect x="91.4774%" y="325" width="0.0106%" height="15" fill="rgb(241,38,36)" fg:x="94562" fg:w="11"/><text x="91.7274%" y="335.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (128 samples, 0.12%)</title><rect x="91.3787%" y="453" width="0.1238%" height="15" fill="rgb(245,211,2)" fg:x="94460" fg:w="128"/><text x="91.6287%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="91.4309%" y="437" width="0.0716%" height="15" fill="rgb(206,120,28)" fg:x="94514" fg:w="74"/><text x="91.6809%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 0.04%)</title><rect x="91.4629%" y="421" width="0.0397%" height="15" fill="rgb(211,59,34)" fg:x="94547" fg:w="41"/><text x="91.7129%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 0.04%)</title><rect x="91.4629%" y="405" width="0.0397%" height="15" fill="rgb(233,168,5)" fg:x="94547" fg:w="41"/><text x="91.7129%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 0.04%)</title><rect x="91.4629%" y="389" width="0.0397%" height="15" fill="rgb(234,33,13)" fg:x="94547" fg:w="41"/><text x="91.7129%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.03%)</title><rect x="91.4754%" y="373" width="0.0271%" height="15" fill="rgb(231,150,26)" fg:x="94560" fg:w="28"/><text x="91.7254%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.03%)</title><rect x="91.4764%" y="357" width="0.0261%" height="15" fill="rgb(217,191,4)" fg:x="94561" fg:w="27"/><text x="91.7264%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.03%)</title><rect x="91.4774%" y="341" width="0.0252%" height="15" fill="rgb(246,198,38)" fg:x="94562" fg:w="26"/><text x="91.7274%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (15 samples, 0.01%)</title><rect x="91.4880%" y="325" width="0.0145%" height="15" fill="rgb(245,64,37)" fg:x="94573" fg:w="15"/><text x="91.7380%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (14 samples, 0.01%)</title><rect x="91.4890%" y="309" width="0.0135%" height="15" fill="rgb(250,30,36)" fg:x="94574" fg:w="14"/><text x="91.7390%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (14 samples, 0.01%)</title><rect x="91.4890%" y="293" width="0.0135%" height="15" fill="rgb(217,86,53)" fg:x="94574" fg:w="14"/><text x="91.7390%" y="303.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (508 samples, 0.49%)</title><rect x="91.5025%" y="453" width="0.4914%" height="15" fill="rgb(228,157,16)" fg:x="94588" fg:w="508"/><text x="91.7525%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="91.9611%" y="437" width="0.0329%" height="15" fill="rgb(217,59,31)" fg:x="95062" fg:w="34"/><text x="92.2111%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (19 samples, 0.02%)</title><rect x="91.9756%" y="421" width="0.0184%" height="15" fill="rgb(237,138,41)" fg:x="95077" fg:w="19"/><text x="92.2256%" y="431.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (666 samples, 0.64%)</title><rect x="91.3526%" y="469" width="0.6443%" height="15" fill="rgb(227,91,49)" fg:x="94433" fg:w="666"/><text x="91.6026%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2,328 samples, 2.25%)</title><rect x="91.9969%" y="469" width="2.2521%" height="15" fill="rgb(247,21,44)" fg:x="95099" fg:w="2328"/><text x="92.2469%" y="479.50">_..</text></g><g><title>rust_dealloc (23 samples, 0.02%)</title><rect x="94.2721%" y="277" width="0.0222%" height="15" fill="rgb(219,210,51)" fg:x="97451" fg:w="23"/><text x="94.5221%" y="287.50"></text></g><g><title>size_to_sizeclass (12 samples, 0.01%)</title><rect x="94.2944%" y="277" width="0.0116%" height="15" fill="rgb(209,140,6)" fg:x="97474" fg:w="12"/><text x="94.5444%" y="287.50"></text></g><g><title>sizeclass_to_size (11 samples, 0.01%)</title><rect x="94.3147%" y="213" width="0.0106%" height="15" fill="rgb(221,188,24)" fg:x="97495" fg:w="11"/><text x="94.5647%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;59ul, unsigned long&gt;::operator[] (11 samples, 0.01%)</title><rect x="94.3147%" y="197" width="0.0106%" height="15" fill="rgb(232,154,20)" fg:x="97495" fg:w="11"/><text x="94.5647%" y="207.50"></text></g><g><title>snmalloc::CapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::operator (37 samples, 0.04%)</title><rect x="94.4018%" y="181" width="0.0358%" height="15" fill="rgb(244,137,50)" fg:x="97585" fg:w="37"/><text x="94.6518%" y="191.50"></text></g><g><title> (37 samples, 0.04%)</title><rect x="94.4018%" y="165" width="0.0358%" height="15" fill="rgb(225,185,43)" fg:x="97585" fg:w="37"/><text x="94.6518%" y="175.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::remote_dealloc (145 samples, 0.14%)</title><rect x="94.3292%" y="213" width="0.1403%" height="15" fill="rgb(213,205,38)" fg:x="97510" fg:w="145"/><text x="94.5792%" y="223.50"></text></g><g><title>snmalloc::RemoteCache::dealloc&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (131 samples, 0.13%)</title><rect x="94.3428%" y="197" width="0.1267%" height="15" fill="rgb(236,73,12)" fg:x="97524" fg:w="131"/><text x="94.5928%" y="207.50"></text></g><g><title>snmalloc::RemoteCache::get_slot&lt;snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt; &gt; (24 samples, 0.02%)</title><rect x="94.4463%" y="181" width="0.0232%" height="15" fill="rgb(235,219,13)" fg:x="97631" fg:w="24"/><text x="94.6963%" y="191.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (231 samples, 0.22%)</title><rect x="94.3060%" y="245" width="0.2235%" height="15" fill="rgb(218,59,36)" fg:x="97486" fg:w="231"/><text x="94.5560%" y="255.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (231 samples, 0.22%)</title><rect x="94.3060%" y="229" width="0.2235%" height="15" fill="rgb(205,110,39)" fg:x="97486" fg:w="231"/><text x="94.5560%" y="239.50"></text></g><g><title>snmalloc::Allocslab::get_allocator (62 samples, 0.06%)</title><rect x="94.4695%" y="213" width="0.0600%" height="15" fill="rgb(218,206,42)" fg:x="97655" fg:w="62"/><text x="94.7195%" y="223.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (232 samples, 0.22%)</title><rect x="94.3060%" y="277" width="0.2244%" height="15" fill="rgb(248,125,24)" fg:x="97486" fg:w="232"/><text x="94.5560%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (232 samples, 0.22%)</title><rect x="94.3060%" y="261" width="0.2244%" height="15" fill="rgb(242,28,27)" fg:x="97486" fg:w="232"/><text x="94.5560%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (271 samples, 0.26%)</title><rect x="94.2721%" y="293" width="0.2622%" height="15" fill="rgb(216,228,15)" fg:x="97451" fg:w="271"/><text x="94.5221%" y="303.50"></text></g><g><title>rust_dealloc (335 samples, 0.32%)</title><rect x="94.2567%" y="309" width="0.3241%" height="15" fill="rgb(235,116,46)" fg:x="97435" fg:w="335"/><text x="94.5067%" y="319.50"></text></g><g><title>snmalloc::ThreadAllocCommon::get_noncachable (48 samples, 0.05%)</title><rect x="94.5343%" y="293" width="0.0464%" height="15" fill="rgb(224,18,32)" fg:x="97722" fg:w="48"/><text x="94.7843%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (346 samples, 0.33%)</title><rect x="94.2489%" y="469" width="0.3347%" height="15" fill="rgb(252,5,12)" fg:x="97427" fg:w="346"/><text x="94.4989%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (346 samples, 0.33%)</title><rect x="94.2489%" y="453" width="0.3347%" height="15" fill="rgb(251,36,5)" fg:x="97427" fg:w="346"/><text x="94.4989%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (338 samples, 0.33%)</title><rect x="94.2567%" y="437" width="0.3270%" height="15" fill="rgb(217,53,14)" fg:x="97435" fg:w="338"/><text x="94.5067%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (338 samples, 0.33%)</title><rect x="94.2567%" y="421" width="0.3270%" height="15" fill="rgb(215,86,45)" fg:x="97435" fg:w="338"/><text x="94.5067%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (338 samples, 0.33%)</title><rect x="94.2567%" y="405" width="0.3270%" height="15" fill="rgb(242,169,11)" fg:x="97435" fg:w="338"/><text x="94.5067%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (338 samples, 0.33%)</title><rect x="94.2567%" y="389" width="0.3270%" height="15" fill="rgb(211,213,45)" fg:x="97435" fg:w="338"/><text x="94.5067%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (338 samples, 0.33%)</title><rect x="94.2567%" y="373" width="0.3270%" height="15" fill="rgb(205,88,11)" fg:x="97435" fg:w="338"/><text x="94.5067%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (338 samples, 0.33%)</title><rect x="94.2567%" y="357" width="0.3270%" height="15" fill="rgb(252,69,26)" fg:x="97435" fg:w="338"/><text x="94.5067%" y="367.50"></text></g><g><title>__rg_dealloc (338 samples, 0.33%)</title><rect x="94.2567%" y="341" width="0.3270%" height="15" fill="rgb(246,123,37)" fg:x="97435" fg:w="338"/><text x="94.5067%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (338 samples, 0.33%)</title><rect x="94.2567%" y="325" width="0.3270%" height="15" fill="rgb(212,205,5)" fg:x="97435" fg:w="338"/><text x="94.5067%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (42 samples, 0.04%)</title><rect x="94.5836%" y="453" width="0.0406%" height="15" fill="rgb(253,148,0)" fg:x="97773" fg:w="42"/><text x="94.8336%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (49 samples, 0.05%)</title><rect x="94.5836%" y="469" width="0.0474%" height="15" fill="rgb(239,22,4)" fg:x="97773" fg:w="49"/><text x="94.8336%" y="479.50"></text></g><g><title>aligned_size (15 samples, 0.01%)</title><rect x="94.6514%" y="341" width="0.0145%" height="15" fill="rgb(226,26,53)" fg:x="97843" fg:w="15"/><text x="94.9014%" y="351.50"></text></g><g><title>rust_dealloc (38 samples, 0.04%)</title><rect x="94.6668%" y="325" width="0.0368%" height="15" fill="rgb(225,229,45)" fg:x="97859" fg:w="38"/><text x="94.9168%" y="335.50"></text></g><g><title>rust_dealloc (31 samples, 0.03%)</title><rect x="94.7065%" y="261" width="0.0300%" height="15" fill="rgb(220,60,37)" fg:x="97900" fg:w="31"/><text x="94.9565%" y="271.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, snmalloc::MetaslabEnd&gt;::add (19 samples, 0.02%)</title><rect x="94.7607%" y="213" width="0.0184%" height="15" fill="rgb(217,180,35)" fg:x="97956" fg:w="19"/><text x="95.0107%" y="223.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (11 samples, 0.01%)</title><rect x="94.7684%" y="197" width="0.0106%" height="15" fill="rgb(229,7,53)" fg:x="97964" fg:w="11"/><text x="95.0184%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted (67 samples, 0.06%)</title><rect x="94.7394%" y="261" width="0.0648%" height="15" fill="rgb(254,137,3)" fg:x="97934" fg:w="67"/><text x="94.9894%" y="271.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_inner (67 samples, 0.06%)</title><rect x="94.7394%" y="245" width="0.0648%" height="15" fill="rgb(215,140,41)" fg:x="97934" fg:w="67"/><text x="94.9894%" y="255.50"></text></g><g><title>snmalloc::Slab::dealloc_fast (65 samples, 0.06%)</title><rect x="94.7413%" y="229" width="0.0629%" height="15" fill="rgb(250,80,15)" fg:x="97936" fg:w="65"/><text x="94.9913%" y="239.50"></text></g><g><title>snmalloc::Superslab::get_meta&lt;(snmalloc::capptr_bounds)1&gt; (26 samples, 0.03%)</title><rect x="94.7791%" y="213" width="0.0252%" height="15" fill="rgb(252,191,6)" fg:x="97975" fg:w="26"/><text x="95.0291%" y="223.50"></text></g><g><title>snmalloc::ModArray&lt;64ul, snmalloc::Metaslab&gt;::operator[] (26 samples, 0.03%)</title><rect x="94.7791%" y="197" width="0.0252%" height="15" fill="rgb(246,217,18)" fg:x="97975" fg:w="26"/><text x="95.0291%" y="207.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (111 samples, 0.11%)</title><rect x="94.7065%" y="293" width="0.1074%" height="15" fill="rgb(223,93,7)" fg:x="97900" fg:w="111"/><text x="94.9565%" y="303.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (111 samples, 0.11%)</title><rect x="94.7065%" y="277" width="0.1074%" height="15" fill="rgb(225,55,52)" fg:x="97900" fg:w="111"/><text x="94.9565%" y="287.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (119 samples, 0.12%)</title><rect x="94.7065%" y="325" width="0.1151%" height="15" fill="rgb(240,31,24)" fg:x="97900" fg:w="119"/><text x="94.9565%" y="335.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (119 samples, 0.12%)</title><rect x="94.7065%" y="309" width="0.1151%" height="15" fill="rgb(205,56,52)" fg:x="97900" fg:w="119"/><text x="94.9565%" y="319.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (178 samples, 0.17%)</title><rect x="94.6659%" y="341" width="0.1722%" height="15" fill="rgb(246,146,12)" fg:x="97858" fg:w="178"/><text x="94.9159%" y="351.50"></text></g><g><title>snmalloc::Superslab::get&lt;void, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="94.8216%" y="325" width="0.0164%" height="15" fill="rgb(239,84,36)" fg:x="98019" fg:w="17"/><text x="95.0716%" y="335.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab, (snmalloc::capptr_bounds)0&gt; (17 samples, 0.02%)</title><rect x="94.8216%" y="309" width="0.0164%" height="15" fill="rgb(207,41,40)" fg:x="98019" fg:w="17"/><text x="95.0716%" y="319.50"></text></g><g><title>snmalloc::pointer_align_down&lt;1048576ul, snmalloc::Superslab&gt; (17 samples, 0.02%)</title><rect x="94.8216%" y="293" width="0.0164%" height="15" fill="rgb(241,179,25)" fg:x="98019" fg:w="17"/><text x="95.0716%" y="303.50"></text></g><g><title>snmalloc::bits::align_down (17 samples, 0.02%)</title><rect x="94.8216%" y="277" width="0.0164%" height="15" fill="rgb(210,0,34)" fg:x="98019" fg:w="17"/><text x="95.0716%" y="287.50"></text></g><g><title>rust_dealloc (204 samples, 0.20%)</title><rect x="94.6504%" y="357" width="0.1973%" height="15" fill="rgb(225,217,29)" fg:x="97842" fg:w="204"/><text x="94.9004%" y="367.50"></text></g><g><title>alloc::alloc::box_free (235 samples, 0.23%)</title><rect x="94.6388%" y="437" width="0.2273%" height="15" fill="rgb(216,191,38)" fg:x="97830" fg:w="235"/><text x="94.8888%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (225 samples, 0.22%)</title><rect x="94.6485%" y="421" width="0.2177%" height="15" fill="rgb(232,140,52)" fg:x="97840" fg:w="225"/><text x="94.8985%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (223 samples, 0.22%)</title><rect x="94.6504%" y="405" width="0.2157%" height="15" fill="rgb(223,158,51)" fg:x="97842" fg:w="223"/><text x="94.9004%" y="415.50"></text></g><g><title>__rg_dealloc (223 samples, 0.22%)</title><rect x="94.6504%" y="389" width="0.2157%" height="15" fill="rgb(235,29,51)" fg:x="97842" fg:w="223"/><text x="94.9004%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (223 samples, 0.22%)</title><rect x="94.6504%" y="373" width="0.2157%" height="15" fill="rgb(215,181,18)" fg:x="97842" fg:w="223"/><text x="94.9004%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (19 samples, 0.02%)</title><rect x="94.8477%" y="357" width="0.0184%" height="15" fill="rgb(227,125,34)" fg:x="98046" fg:w="19"/><text x="95.0977%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (251 samples, 0.24%)</title><rect x="94.6310%" y="469" width="0.2428%" height="15" fill="rgb(230,197,49)" fg:x="97822" fg:w="251"/><text x="94.8810%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (251 samples, 0.24%)</title><rect x="94.6310%" y="453" width="0.2428%" height="15" fill="rgb(239,141,16)" fg:x="97822" fg:w="251"/><text x="94.8810%" y="463.50"></text></g><g><title>core::time::Duration::as_nanos (33 samples, 0.03%)</title><rect x="94.9464%" y="453" width="0.0319%" height="15" fill="rgb(225,105,43)" fg:x="98148" fg:w="33"/><text x="95.1964%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (203 samples, 0.20%)</title><rect x="95.1283%" y="405" width="0.1964%" height="15" fill="rgb(214,131,14)" fg:x="98336" fg:w="203"/><text x="95.3783%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::ge (203 samples, 0.20%)</title><rect x="95.1283%" y="389" width="0.1964%" height="15" fill="rgb(229,177,11)" fg:x="98336" fg:w="203"/><text x="95.3783%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (200 samples, 0.19%)</title><rect x="95.1312%" y="373" width="0.1935%" height="15" fill="rgb(231,180,14)" fg:x="98339" fg:w="200"/><text x="95.3812%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (200 samples, 0.19%)</title><rect x="95.1312%" y="357" width="0.1935%" height="15" fill="rgb(232,88,2)" fg:x="98339" fg:w="200"/><text x="95.3812%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (200 samples, 0.19%)</title><rect x="95.1312%" y="341" width="0.1935%" height="15" fill="rgb(205,220,8)" fg:x="98339" fg:w="200"/><text x="95.3812%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (103 samples, 0.10%)</title><rect x="95.2250%" y="325" width="0.0996%" height="15" fill="rgb(225,23,53)" fg:x="98436" fg:w="103"/><text x="95.4750%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::sub_time (460 samples, 0.44%)</title><rect x="94.9783%" y="437" width="0.4450%" height="15" fill="rgb(213,62,29)" fg:x="98181" fg:w="460"/><text x="95.2283%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (460 samples, 0.44%)</title><rect x="94.9783%" y="421" width="0.4450%" height="15" fill="rgb(227,75,7)" fg:x="98181" fg:w="460"/><text x="95.2283%" y="431.50"></text></g><g><title>core::time::Duration::new (102 samples, 0.10%)</title><rect x="95.3247%" y="405" width="0.0987%" height="15" fill="rgb(207,105,14)" fg:x="98539" fg:w="102"/><text x="95.5747%" y="415.50"></text></g><g><title>std::time::SystemTime::duration_since (492 samples, 0.48%)</title><rect x="94.9783%" y="453" width="0.4760%" height="15" fill="rgb(245,62,29)" fg:x="98181" fg:w="492"/><text x="95.2283%" y="463.50"></text></g><g><title>tremor_common::time::nanotime (32 samples, 0.03%)</title><rect x="95.4233%" y="437" width="0.0310%" height="15" fill="rgb(236,202,4)" fg:x="98641" fg:w="32"/><text x="95.6733%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (2,413 samples, 2.33%)</title><rect x="94.8739%" y="469" width="2.3343%" height="15" fill="rgb(250,67,1)" fg:x="98073" fg:w="2413"/><text x="95.1239%" y="479.50">t..</text></g><g><title>std::time::SystemTime::now (1,813 samples, 1.75%)</title><rect x="95.4543%" y="453" width="1.7539%" height="15" fill="rgb(253,115,44)" fg:x="98673" fg:w="1813"/><text x="95.7043%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::SystemTime::now (1,813 samples, 1.75%)</title><rect x="95.4543%" y="437" width="1.7539%" height="15" fill="rgb(251,139,18)" fg:x="98673" fg:w="1813"/><text x="95.7043%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (1,813 samples, 1.75%)</title><rect x="95.4543%" y="421" width="1.7539%" height="15" fill="rgb(218,22,32)" fg:x="98673" fg:w="1813"/><text x="95.7043%" y="431.50"></text></g><g><title>__clock_gettime_2 (1,462 samples, 1.41%)</title><rect x="95.7938%" y="405" width="1.4143%" height="15" fill="rgb(243,53,5)" fg:x="99024" fg:w="1462"/><text x="96.0438%" y="415.50"></text></g><g><title>__vdso_clock_gettime (1,366 samples, 1.32%)</title><rect x="95.8867%" y="389" width="1.3214%" height="15" fill="rgb(227,56,16)" fg:x="99120" fg:w="1366"/><text x="96.1367%" y="399.50"></text></g><g><title>[[vdso]] (857 samples, 0.83%)</title><rect x="96.3791%" y="373" width="0.8290%" height="15" fill="rgb(245,53,0)" fg:x="99629" fg:w="857"/><text x="96.6291%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.02%)</title><rect x="97.2304%" y="309" width="0.0155%" height="15" fill="rgb(216,170,35)" fg:x="100509" fg:w="16"/><text x="97.4804%" y="319.50"></text></g><g><title>core::mem::drop (24 samples, 0.02%)</title><rect x="97.2294%" y="405" width="0.0232%" height="15" fill="rgb(211,200,8)" fg:x="100508" fg:w="24"/><text x="97.4794%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (24 samples, 0.02%)</title><rect x="97.2294%" y="389" width="0.0232%" height="15" fill="rgb(228,204,44)" fg:x="100508" fg:w="24"/><text x="97.4794%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="97.2294%" y="373" width="0.0232%" height="15" fill="rgb(214,121,17)" fg:x="100508" fg:w="24"/><text x="97.4794%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (24 samples, 0.02%)</title><rect x="97.2294%" y="357" width="0.0232%" height="15" fill="rgb(233,64,38)" fg:x="100508" fg:w="24"/><text x="97.4794%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (23 samples, 0.02%)</title><rect x="97.2304%" y="341" width="0.0222%" height="15" fill="rgb(253,54,19)" fg:x="100509" fg:w="23"/><text x="97.4804%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (23 samples, 0.02%)</title><rect x="97.2304%" y="325" width="0.0222%" height="15" fill="rgb(253,94,18)" fg:x="100509" fg:w="23"/><text x="97.4804%" y="335.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (55 samples, 0.05%)</title><rect x="97.2081%" y="469" width="0.0532%" height="15" fill="rgb(227,57,52)" fg:x="100486" fg:w="55"/><text x="97.4581%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (43 samples, 0.04%)</title><rect x="97.2198%" y="453" width="0.0416%" height="15" fill="rgb(230,228,50)" fg:x="100498" fg:w="43"/><text x="97.4698%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;u64&gt;,simd_json::value::owned::Value&gt;&gt; (43 samples, 0.04%)</title><rect x="97.2198%" y="437" width="0.0416%" height="15" fill="rgb(217,205,27)" fg:x="100498" fg:w="43"/><text x="97.4698%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="97.2198%" y="421" width="0.0416%" height="15" fill="rgb(252,71,50)" fg:x="100498" fg:w="43"/><text x="97.4698%" y="431.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,675 samples, 8.39%)</title><rect x="88.8838%" y="485" width="8.3920%" height="15" fill="rgb(209,86,4)" fg:x="91881" fg:w="8675"/><text x="89.1338%" y="495.50">tremor_runti..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (15 samples, 0.01%)</title><rect x="97.2613%" y="469" width="0.0145%" height="15" fill="rgb(229,94,0)" fg:x="100541" fg:w="15"/><text x="97.5113%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,714 samples, 8.43%)</title><rect x="88.8471%" y="517" width="8.4297%" height="15" fill="rgb(252,223,21)" fg:x="91843" fg:w="8714"/><text x="89.0971%" y="527.50">&lt;async_std::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,714 samples, 8.43%)</title><rect x="88.8471%" y="501" width="8.4297%" height="15" fill="rgb(230,210,4)" fg:x="91843" fg:w="8714"/><text x="89.0971%" y="511.50">&lt;core::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,818 samples, 8.53%)</title><rect x="88.7474%" y="629" width="8.5304%" height="15" fill="rgb(240,149,38)" fg:x="91740" fg:w="8818"/><text x="88.9974%" y="639.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,815 samples, 8.53%)</title><rect x="88.7503%" y="613" width="8.5275%" height="15" fill="rgb(254,105,20)" fg:x="91743" fg:w="8815"/><text x="89.0003%" y="623.50">async_execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,788 samples, 8.50%)</title><rect x="88.7765%" y="597" width="8.5013%" height="15" fill="rgb(253,87,46)" fg:x="91770" fg:w="8788"/><text x="89.0265%" y="607.50">&lt;async_std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,788 samples, 8.50%)</title><rect x="88.7765%" y="581" width="8.5013%" height="15" fill="rgb(253,116,33)" fg:x="91770" fg:w="8788"/><text x="89.0265%" y="591.50">async_std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,788 samples, 8.50%)</title><rect x="88.7765%" y="565" width="8.5013%" height="15" fill="rgb(229,198,5)" fg:x="91770" fg:w="8788"/><text x="89.0265%" y="575.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,750 samples, 8.46%)</title><rect x="88.8132%" y="549" width="8.4646%" height="15" fill="rgb(242,38,37)" fg:x="91808" fg:w="8750"/><text x="89.0632%" y="559.50">std::thread:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,716 samples, 8.43%)</title><rect x="88.8461%" y="533" width="8.4317%" height="15" fill="rgb(242,69,53)" fg:x="91842" fg:w="8716"/><text x="89.0961%" y="543.50">async_std::t..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,819 samples, 8.53%)</title><rect x="88.7474%" y="645" width="8.5313%" height="15" fill="rgb(249,80,16)" fg:x="91740" fg:w="8819"/><text x="88.9974%" y="655.50">&lt;core::pin::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (11 samples, 0.01%)</title><rect x="97.2788%" y="645" width="0.0106%" height="15" fill="rgb(206,128,11)" fg:x="100559" fg:w="11"/><text x="97.5288%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="97.2788%" y="629" width="0.0106%" height="15" fill="rgb(212,35,20)" fg:x="100559" fg:w="11"/><text x="97.5288%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="97.2788%" y="613" width="0.0106%" height="15" fill="rgb(236,79,13)" fg:x="100559" fg:w="11"/><text x="97.5288%" y="623.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.02%)</title><rect x="97.2952%" y="597" width="0.0232%" height="15" fill="rgb(233,123,3)" fg:x="100576" fg:w="24"/><text x="97.5452%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.02%)</title><rect x="97.2952%" y="581" width="0.0232%" height="15" fill="rgb(214,93,52)" fg:x="100576" fg:w="24"/><text x="97.5452%" y="591.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (24 samples, 0.02%)</title><rect x="97.2952%" y="565" width="0.0232%" height="15" fill="rgb(251,37,40)" fg:x="100576" fg:w="24"/><text x="97.5452%" y="575.50"></text></g><g><title>parking::Unparker::unpark (20 samples, 0.02%)</title><rect x="97.2991%" y="549" width="0.0193%" height="15" fill="rgb(227,80,54)" fg:x="100580" fg:w="20"/><text x="97.5491%" y="559.50"></text></g><g><title>parking::Inner::unpark (19 samples, 0.02%)</title><rect x="97.3000%" y="533" width="0.0184%" height="15" fill="rgb(254,48,11)" fg:x="100581" fg:w="19"/><text x="97.5500%" y="543.50"></text></g><g><title>async_executor::State::notify (33 samples, 0.03%)</title><rect x="97.2894%" y="613" width="0.0319%" height="15" fill="rgb(235,193,26)" fg:x="100570" fg:w="33"/><text x="97.5394%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (46 samples, 0.04%)</title><rect x="97.2894%" y="629" width="0.0445%" height="15" fill="rgb(229,99,21)" fg:x="100570" fg:w="46"/><text x="97.5394%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="97.3213%" y="613" width="0.0126%" height="15" fill="rgb(211,140,41)" fg:x="100603" fg:w="13"/><text x="97.5713%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (47 samples, 0.05%)</title><rect x="97.2894%" y="645" width="0.0455%" height="15" fill="rgb(240,227,30)" fg:x="100570" fg:w="47"/><text x="97.5394%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (100 samples, 0.10%)</title><rect x="97.3349%" y="645" width="0.0967%" height="15" fill="rgb(215,224,45)" fg:x="100617" fg:w="100"/><text x="97.5849%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (100 samples, 0.10%)</title><rect x="97.3349%" y="629" width="0.0967%" height="15" fill="rgb(206,123,31)" fg:x="100617" fg:w="100"/><text x="97.5849%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (9,017 samples, 8.72%)</title><rect x="88.7107%" y="677" width="8.7229%" height="15" fill="rgb(210,138,16)" fg:x="91702" fg:w="9017"/><text x="88.9607%" y="687.50">async_task::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,003 samples, 8.71%)</title><rect x="88.7242%" y="661" width="8.7093%" height="15" fill="rgb(228,57,28)" fg:x="91716" fg:w="9003"/><text x="88.9742%" y="671.50">async_task::..</text></g><g><title>async_executor::Executor::run::{{closure}} (12,177 samples, 11.78%)</title><rect x="85.6605%" y="741" width="11.7798%" height="15" fill="rgb(242,170,10)" fg:x="88549" fg:w="12177"/><text x="85.9105%" y="751.50">async_executor::E..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,176 samples, 11.78%)</title><rect x="85.6615%" y="725" width="11.7788%" height="15" fill="rgb(228,214,39)" fg:x="88550" fg:w="12176"/><text x="85.9115%" y="735.50">&lt;futures_lite::fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,176 samples, 11.78%)</title><rect x="85.6615%" y="709" width="11.7788%" height="15" fill="rgb(218,179,33)" fg:x="88550" fg:w="12176"/><text x="85.9115%" y="719.50">&lt;core::future::fr..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (12,176 samples, 11.78%)</title><rect x="85.6615%" y="693" width="11.7788%" height="15" fill="rgb(235,193,39)" fg:x="88550" fg:w="12176"/><text x="85.9115%" y="703.50">async_executor::E..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="97.5003%" y="533" width="0.0135%" height="15" fill="rgb(219,221,36)" fg:x="100788" fg:w="14"/><text x="97.7503%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.01%)</title><rect x="97.5003%" y="517" width="0.0135%" height="15" fill="rgb(248,218,19)" fg:x="100788" fg:w="14"/><text x="97.7503%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.01%)</title><rect x="97.5003%" y="501" width="0.0135%" height="15" fill="rgb(205,50,9)" fg:x="100788" fg:w="14"/><text x="97.7503%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="97.5013%" y="485" width="0.0126%" height="15" fill="rgb(238,81,28)" fg:x="100789" fg:w="13"/><text x="97.7513%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.01%)</title><rect x="97.5013%" y="469" width="0.0126%" height="15" fill="rgb(235,110,19)" fg:x="100789" fg:w="13"/><text x="97.7513%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.01%)</title><rect x="97.5013%" y="453" width="0.0126%" height="15" fill="rgb(214,7,14)" fg:x="100789" fg:w="13"/><text x="97.7513%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.01%)</title><rect x="97.5022%" y="437" width="0.0116%" height="15" fill="rgb(211,77,3)" fg:x="100790" fg:w="12"/><text x="97.7522%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (12 samples, 0.01%)</title><rect x="97.5022%" y="421" width="0.0116%" height="15" fill="rgb(229,5,9)" fg:x="100790" fg:w="12"/><text x="97.7522%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (12 samples, 0.01%)</title><rect x="97.5022%" y="405" width="0.0116%" height="15" fill="rgb(225,90,11)" fg:x="100790" fg:w="12"/><text x="97.7522%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.01%)</title><rect x="97.5022%" y="389" width="0.0116%" height="15" fill="rgb(242,56,8)" fg:x="100790" fg:w="12"/><text x="97.7522%" y="399.50"></text></g><g><title>concurrent_queue::full_fence (24 samples, 0.02%)</title><rect x="97.5245%" y="501" width="0.0232%" height="15" fill="rgb(249,212,39)" fg:x="100813" fg:w="24"/><text x="97.7745%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (24 samples, 0.02%)</title><rect x="97.5245%" y="485" width="0.0232%" height="15" fill="rgb(236,90,9)" fg:x="100813" fg:w="24"/><text x="97.7745%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (24 samples, 0.02%)</title><rect x="97.5245%" y="469" width="0.0232%" height="15" fill="rgb(206,88,35)" fg:x="100813" fg:w="24"/><text x="97.7745%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="97.5245%" y="453" width="0.0232%" height="15" fill="rgb(205,126,30)" fg:x="100813" fg:w="24"/><text x="97.7745%" y="463.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (72 samples, 0.07%)</title><rect x="97.5187%" y="517" width="0.0697%" height="15" fill="rgb(230,176,12)" fg:x="100807" fg:w="72"/><text x="97.7687%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (42 samples, 0.04%)</title><rect x="97.5477%" y="501" width="0.0406%" height="15" fill="rgb(243,19,9)" fg:x="100837" fg:w="42"/><text x="97.7977%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (42 samples, 0.04%)</title><rect x="97.5477%" y="485" width="0.0406%" height="15" fill="rgb(245,171,17)" fg:x="100837" fg:w="42"/><text x="97.7977%" y="495.50"></text></g><g><title>concurrent_queue::full_fence (22 samples, 0.02%)</title><rect x="97.5932%" y="501" width="0.0213%" height="15" fill="rgb(227,52,21)" fg:x="100884" fg:w="22"/><text x="97.8432%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (22 samples, 0.02%)</title><rect x="97.5932%" y="485" width="0.0213%" height="15" fill="rgb(238,69,14)" fg:x="100884" fg:w="22"/><text x="97.8432%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (22 samples, 0.02%)</title><rect x="97.5932%" y="469" width="0.0213%" height="15" fill="rgb(241,156,39)" fg:x="100884" fg:w="22"/><text x="97.8432%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="97.5932%" y="453" width="0.0213%" height="15" fill="rgb(212,227,28)" fg:x="100884" fg:w="22"/><text x="97.8432%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (111 samples, 0.11%)</title><rect x="97.5138%" y="533" width="0.1074%" height="15" fill="rgb(209,118,27)" fg:x="100802" fg:w="111"/><text x="97.7638%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (34 samples, 0.03%)</title><rect x="97.5883%" y="517" width="0.0329%" height="15" fill="rgb(226,102,5)" fg:x="100879" fg:w="34"/><text x="97.8383%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.01%)</title><rect x="97.6222%" y="469" width="0.0116%" height="15" fill="rgb(223,34,3)" fg:x="100914" fg:w="12"/><text x="97.8722%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.01%)</title><rect x="97.6222%" y="453" width="0.0116%" height="15" fill="rgb(221,81,38)" fg:x="100914" fg:w="12"/><text x="97.8722%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (40 samples, 0.04%)</title><rect x="97.6212%" y="533" width="0.0387%" height="15" fill="rgb(236,219,28)" fg:x="100913" fg:w="40"/><text x="97.8712%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="97.6212%" y="517" width="0.0387%" height="15" fill="rgb(213,200,14)" fg:x="100913" fg:w="40"/><text x="97.8712%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (40 samples, 0.04%)</title><rect x="97.6212%" y="501" width="0.0387%" height="15" fill="rgb(240,33,19)" fg:x="100913" fg:w="40"/><text x="97.8712%" y="511.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (40 samples, 0.04%)</title><rect x="97.6212%" y="485" width="0.0387%" height="15" fill="rgb(233,113,27)" fg:x="100913" fg:w="40"/><text x="97.8712%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (27 samples, 0.03%)</title><rect x="97.6338%" y="469" width="0.0261%" height="15" fill="rgb(220,221,18)" fg:x="100926" fg:w="27"/><text x="97.8838%" y="479.50"></text></g><g><title>___pthread_rwlock_unlock (27 samples, 0.03%)</title><rect x="97.6338%" y="453" width="0.0261%" height="15" fill="rgb(238,92,8)" fg:x="100926" fg:w="27"/><text x="97.8838%" y="463.50"></text></g><g><title>___pthread_rwlock_rdlock (18 samples, 0.02%)</title><rect x="97.6725%" y="485" width="0.0174%" height="15" fill="rgb(222,164,16)" fg:x="100966" fg:w="18"/><text x="97.9225%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (220 samples, 0.21%)</title><rect x="97.4974%" y="549" width="0.2128%" height="15" fill="rgb(241,119,3)" fg:x="100785" fg:w="220"/><text x="97.7474%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (42 samples, 0.04%)</title><rect x="97.6696%" y="533" width="0.0406%" height="15" fill="rgb(241,44,8)" fg:x="100963" fg:w="42"/><text x="97.9196%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (41 samples, 0.04%)</title><rect x="97.6705%" y="517" width="0.0397%" height="15" fill="rgb(230,36,40)" fg:x="100964" fg:w="41"/><text x="97.9205%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (41 samples, 0.04%)</title><rect x="97.6705%" y="501" width="0.0397%" height="15" fill="rgb(243,16,36)" fg:x="100964" fg:w="41"/><text x="97.9205%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="97.6899%" y="485" width="0.0203%" height="15" fill="rgb(231,4,26)" fg:x="100984" fg:w="21"/><text x="97.9399%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="97.6899%" y="469" width="0.0203%" height="15" fill="rgb(240,9,31)" fg:x="100984" fg:w="21"/><text x="97.9399%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (40 samples, 0.04%)</title><rect x="97.7209%" y="469" width="0.0387%" height="15" fill="rgb(207,173,15)" fg:x="101016" fg:w="40"/><text x="97.9709%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (46 samples, 0.04%)</title><rect x="97.7170%" y="533" width="0.0445%" height="15" fill="rgb(224,192,53)" fg:x="101012" fg:w="46"/><text x="97.9670%" y="543.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="97.7170%" y="517" width="0.0445%" height="15" fill="rgb(223,67,28)" fg:x="101012" fg:w="46"/><text x="97.9670%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (45 samples, 0.04%)</title><rect x="97.7180%" y="501" width="0.0435%" height="15" fill="rgb(211,20,47)" fg:x="101013" fg:w="45"/><text x="97.9680%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (42 samples, 0.04%)</title><rect x="97.7209%" y="485" width="0.0406%" height="15" fill="rgb(240,228,2)" fg:x="101016" fg:w="42"/><text x="97.9709%" y="495.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (322 samples, 0.31%)</title><rect x="97.4761%" y="661" width="0.3115%" height="15" fill="rgb(248,151,12)" fg:x="100763" fg:w="322"/><text x="97.7261%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (317 samples, 0.31%)</title><rect x="97.4809%" y="645" width="0.3067%" height="15" fill="rgb(244,8,39)" fg:x="100768" fg:w="317"/><text x="97.7309%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (316 samples, 0.31%)</title><rect x="97.4819%" y="629" width="0.3057%" height="15" fill="rgb(222,26,8)" fg:x="100769" fg:w="316"/><text x="97.7319%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (311 samples, 0.30%)</title><rect x="97.4867%" y="613" width="0.3009%" height="15" fill="rgb(213,106,44)" fg:x="100774" fg:w="311"/><text x="97.7367%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (310 samples, 0.30%)</title><rect x="97.4877%" y="597" width="0.2999%" height="15" fill="rgb(214,129,20)" fg:x="100775" fg:w="310"/><text x="97.7377%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (307 samples, 0.30%)</title><rect x="97.4906%" y="581" width="0.2970%" height="15" fill="rgb(212,32,13)" fg:x="100778" fg:w="307"/><text x="97.7406%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (302 samples, 0.29%)</title><rect x="97.4955%" y="565" width="0.2921%" height="15" fill="rgb(208,168,33)" fg:x="100783" fg:w="302"/><text x="97.7455%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (80 samples, 0.08%)</title><rect x="97.7102%" y="549" width="0.0774%" height="15" fill="rgb(231,207,8)" fg:x="101005" fg:w="80"/><text x="97.9602%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.03%)</title><rect x="97.7615%" y="533" width="0.0261%" height="15" fill="rgb(235,219,23)" fg:x="101058" fg:w="27"/><text x="98.0115%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (24 samples, 0.02%)</title><rect x="97.7644%" y="517" width="0.0232%" height="15" fill="rgb(226,216,26)" fg:x="101061" fg:w="24"/><text x="98.0144%" y="527.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (24 samples, 0.02%)</title><rect x="97.7644%" y="501" width="0.0232%" height="15" fill="rgb(239,137,16)" fg:x="101061" fg:w="24"/><text x="98.0144%" y="511.50"></text></g><g><title>___pthread_mutex_lock (24 samples, 0.02%)</title><rect x="97.7644%" y="485" width="0.0232%" height="15" fill="rgb(207,12,36)" fg:x="101061" fg:w="24"/><text x="98.0144%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (14 samples, 0.01%)</title><rect x="97.8427%" y="597" width="0.0135%" height="15" fill="rgb(210,214,24)" fg:x="101142" fg:w="14"/><text x="98.0927%" y="607.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="97.8427%" y="581" width="0.0135%" height="15" fill="rgb(206,56,30)" fg:x="101142" fg:w="14"/><text x="98.0927%" y="591.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="97.8427%" y="565" width="0.0135%" height="15" fill="rgb(228,143,26)" fg:x="101142" fg:w="14"/><text x="98.0927%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (25 samples, 0.02%)</title><rect x="97.8360%" y="613" width="0.0242%" height="15" fill="rgb(216,218,46)" fg:x="101135" fg:w="25"/><text x="98.0860%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (27 samples, 0.03%)</title><rect x="97.8602%" y="613" width="0.0261%" height="15" fill="rgb(206,6,19)" fg:x="101160" fg:w="27"/><text x="98.1102%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="97.8621%" y="597" width="0.0242%" height="15" fill="rgb(239,177,51)" fg:x="101162" fg:w="25"/><text x="98.1121%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="97.8621%" y="581" width="0.0242%" height="15" fill="rgb(216,55,25)" fg:x="101162" fg:w="25"/><text x="98.1121%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (24 samples, 0.02%)</title><rect x="97.8631%" y="565" width="0.0232%" height="15" fill="rgb(231,163,29)" fg:x="101163" fg:w="24"/><text x="98.1131%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (24 samples, 0.02%)</title><rect x="97.8631%" y="549" width="0.0232%" height="15" fill="rgb(232,149,50)" fg:x="101163" fg:w="24"/><text x="98.1131%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (24 samples, 0.02%)</title><rect x="97.8631%" y="533" width="0.0232%" height="15" fill="rgb(223,142,48)" fg:x="101163" fg:w="24"/><text x="98.1131%" y="543.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (108 samples, 0.10%)</title><rect x="97.8302%" y="629" width="0.1045%" height="15" fill="rgb(245,83,23)" fg:x="101129" fg:w="108"/><text x="98.0802%" y="639.50"></text></g><g><title>event_listener::Inner::lock (44 samples, 0.04%)</title><rect x="97.8921%" y="613" width="0.0426%" height="15" fill="rgb(224,63,2)" fg:x="101193" fg:w="44"/><text x="98.1421%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (43 samples, 0.04%)</title><rect x="97.8930%" y="597" width="0.0416%" height="15" fill="rgb(218,65,53)" fg:x="101194" fg:w="43"/><text x="98.1430%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (40 samples, 0.04%)</title><rect x="97.8959%" y="581" width="0.0387%" height="15" fill="rgb(221,84,29)" fg:x="101197" fg:w="40"/><text x="98.1459%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (38 samples, 0.04%)</title><rect x="97.8979%" y="565" width="0.0368%" height="15" fill="rgb(234,0,32)" fg:x="101199" fg:w="38"/><text x="98.1479%" y="575.50"></text></g><g><title>___pthread_mutex_lock (38 samples, 0.04%)</title><rect x="97.8979%" y="549" width="0.0368%" height="15" fill="rgb(206,20,16)" fg:x="101199" fg:w="38"/><text x="98.1479%" y="559.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (73 samples, 0.07%)</title><rect x="97.9346%" y="629" width="0.0706%" height="15" fill="rgb(244,172,18)" fg:x="101237" fg:w="73"/><text x="98.1846%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (73 samples, 0.07%)</title><rect x="97.9346%" y="613" width="0.0706%" height="15" fill="rgb(254,133,1)" fg:x="101237" fg:w="73"/><text x="98.1846%" y="623.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (45 samples, 0.04%)</title><rect x="97.9617%" y="597" width="0.0435%" height="15" fill="rgb(222,206,41)" fg:x="101265" fg:w="45"/><text x="98.2117%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (44 samples, 0.04%)</title><rect x="97.9627%" y="581" width="0.0426%" height="15" fill="rgb(212,3,42)" fg:x="101266" fg:w="44"/><text x="98.2127%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (44 samples, 0.04%)</title><rect x="97.9627%" y="565" width="0.0426%" height="15" fill="rgb(241,11,4)" fg:x="101266" fg:w="44"/><text x="98.2127%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.04%)</title><rect x="97.9627%" y="549" width="0.0426%" height="15" fill="rgb(205,19,26)" fg:x="101266" fg:w="44"/><text x="98.2127%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="98.0053%" y="597" width="0.0203%" height="15" fill="rgb(210,179,32)" fg:x="101310" fg:w="21"/><text x="98.2553%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="98.0053%" y="581" width="0.0203%" height="15" fill="rgb(227,116,49)" fg:x="101310" fg:w="21"/><text x="98.2553%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="98.0053%" y="565" width="0.0203%" height="15" fill="rgb(211,146,6)" fg:x="101310" fg:w="21"/><text x="98.2553%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="98.0053%" y="549" width="0.0203%" height="15" fill="rgb(219,44,39)" fg:x="101310" fg:w="21"/><text x="98.2553%" y="559.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.02%)</title><rect x="98.0062%" y="533" width="0.0193%" height="15" fill="rgb(234,128,11)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="543.50"></text></g><g><title>__rg_alloc (20 samples, 0.02%)</title><rect x="98.0062%" y="517" width="0.0193%" height="15" fill="rgb(220,183,53)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (20 samples, 0.02%)</title><rect x="98.0062%" y="501" width="0.0193%" height="15" fill="rgb(213,219,32)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="511.50"></text></g><g><title>rust_alloc (20 samples, 0.02%)</title><rect x="98.0062%" y="485" width="0.0193%" height="15" fill="rgb(232,156,16)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="98.0062%" y="469" width="0.0193%" height="15" fill="rgb(246,135,34)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="479.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="98.0062%" y="453" width="0.0193%" height="15" fill="rgb(241,99,0)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="98.0062%" y="437" width="0.0193%" height="15" fill="rgb(222,103,45)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="447.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_rare&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="98.0062%" y="421" width="0.0193%" height="15" fill="rgb(212,57,4)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="98.0062%" y="405" width="0.0193%" height="15" fill="rgb(215,68,47)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="415.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_new_slab&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="98.0062%" y="389" width="0.0193%" height="15" fill="rgb(230,84,2)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="399.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_build_free_list&lt;(snmalloc::ZeroMem)0&gt; (20 samples, 0.02%)</title><rect x="98.0062%" y="373" width="0.0193%" height="15" fill="rgb(220,102,14)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="383.50"></text></g><g><title>snmalloc::Slab::alloc_new_list (20 samples, 0.02%)</title><rect x="98.0062%" y="357" width="0.0193%" height="15" fill="rgb(240,10,32)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="367.50"></text></g><g><title>snmalloc::FreeListBuilder&lt;false, unsigned int&gt;::add (20 samples, 0.02%)</title><rect x="98.0062%" y="341" width="0.0193%" height="15" fill="rgb(215,47,27)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="351.50"></text></g><g><title>snmalloc::EncodeFreeObjectReference::store (20 samples, 0.02%)</title><rect x="98.0062%" y="325" width="0.0193%" height="15" fill="rgb(233,188,43)" fg:x="101311" fg:w="20"/><text x="98.2562%" y="335.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (571 samples, 0.55%)</title><rect x="97.4742%" y="693" width="0.5524%" height="15" fill="rgb(253,190,1)" fg:x="100761" fg:w="571"/><text x="97.7242%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (570 samples, 0.55%)</title><rect x="97.4751%" y="677" width="0.5514%" height="15" fill="rgb(206,114,52)" fg:x="100762" fg:w="570"/><text x="97.7251%" y="687.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (247 samples, 0.24%)</title><rect x="97.7876%" y="661" width="0.2389%" height="15" fill="rgb(233,120,37)" fg:x="101085" fg:w="247"/><text x="98.0376%" y="671.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (237 samples, 0.23%)</title><rect x="97.7973%" y="645" width="0.2293%" height="15" fill="rgb(214,52,39)" fg:x="101095" fg:w="237"/><text x="98.0473%" y="655.50"></text></g><g><title>event_listener::Event::listen (22 samples, 0.02%)</title><rect x="98.0053%" y="629" width="0.0213%" height="15" fill="rgb(223,80,29)" fg:x="101310" fg:w="22"/><text x="98.2553%" y="639.50"></text></g><g><title>event_listener::Event::inner (22 samples, 0.02%)</title><rect x="98.0053%" y="613" width="0.0213%" height="15" fill="rgb(230,101,40)" fg:x="101310" fg:w="22"/><text x="98.2553%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (12,797 samples, 12.38%)</title><rect x="85.6480%" y="773" width="12.3796%" height="15" fill="rgb(219,211,8)" fg:x="88536" fg:w="12797"/><text x="85.8980%" y="783.50">&lt;futures_lite::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,787 samples, 12.37%)</title><rect x="85.6576%" y="757" width="12.3699%" height="15" fill="rgb(252,126,28)" fg:x="88546" fg:w="12787"/><text x="85.9076%" y="767.50">&lt;core::future::fro..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (607 samples, 0.59%)</title><rect x="97.4403%" y="741" width="0.5872%" height="15" fill="rgb(215,56,38)" fg:x="100726" fg:w="607"/><text x="97.6903%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (579 samples, 0.56%)</title><rect x="97.4674%" y="725" width="0.5601%" height="15" fill="rgb(249,55,44)" fg:x="100754" fg:w="579"/><text x="97.7174%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (577 samples, 0.56%)</title><rect x="97.4693%" y="709" width="0.5582%" height="15" fill="rgb(220,221,32)" fg:x="100756" fg:w="577"/><text x="97.7193%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (87 samples, 0.08%)</title><rect x="98.0362%" y="773" width="0.0842%" height="15" fill="rgb(212,216,41)" fg:x="101342" fg:w="87"/><text x="98.2862%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (87 samples, 0.08%)</title><rect x="98.0362%" y="757" width="0.0842%" height="15" fill="rgb(228,213,43)" fg:x="101342" fg:w="87"/><text x="98.2862%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (87 samples, 0.08%)</title><rect x="98.0362%" y="741" width="0.0842%" height="15" fill="rgb(211,31,26)" fg:x="101342" fg:w="87"/><text x="98.2862%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (84 samples, 0.08%)</title><rect x="98.0391%" y="725" width="0.0813%" height="15" fill="rgb(229,202,19)" fg:x="101345" fg:w="84"/><text x="98.2891%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (84 samples, 0.08%)</title><rect x="98.0391%" y="709" width="0.0813%" height="15" fill="rgb(229,105,46)" fg:x="101345" fg:w="84"/><text x="98.2891%" y="719.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_sizeclass (20 samples, 0.02%)</title><rect x="98.1368%" y="533" width="0.0193%" height="15" fill="rgb(235,108,1)" fg:x="101446" fg:w="20"/><text x="98.3868%" y="543.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_start (20 samples, 0.02%)</title><rect x="98.1368%" y="517" width="0.0193%" height="15" fill="rgb(245,111,35)" fg:x="101446" fg:w="20"/><text x="98.3868%" y="527.50"></text></g><g><title>rust_dealloc (22 samples, 0.02%)</title><rect x="98.1359%" y="597" width="0.0213%" height="15" fill="rgb(219,185,31)" fg:x="101445" fg:w="22"/><text x="98.3859%" y="607.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::dealloc (21 samples, 0.02%)</title><rect x="98.1368%" y="581" width="0.0203%" height="15" fill="rgb(214,4,43)" fg:x="101446" fg:w="21"/><text x="98.3868%" y="591.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_unchecked (21 samples, 0.02%)</title><rect x="98.1368%" y="565" width="0.0203%" height="15" fill="rgb(235,227,40)" fg:x="101446" fg:w="21"/><text x="98.3868%" y="575.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_checked_chunkmap (21 samples, 0.02%)</title><rect x="98.1368%" y="549" width="0.0203%" height="15" fill="rgb(230,88,30)" fg:x="101446" fg:w="21"/><text x="98.3868%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="98.1359%" y="741" width="0.0222%" height="15" fill="rgb(216,217,1)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (23 samples, 0.02%)</title><rect x="98.1359%" y="725" width="0.0222%" height="15" fill="rgb(248,139,50)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="735.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (23 samples, 0.02%)</title><rect x="98.1359%" y="709" width="0.0222%" height="15" fill="rgb(233,1,21)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (23 samples, 0.02%)</title><rect x="98.1359%" y="693" width="0.0222%" height="15" fill="rgb(215,183,12)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (23 samples, 0.02%)</title><rect x="98.1359%" y="677" width="0.0222%" height="15" fill="rgb(229,104,42)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="98.1359%" y="661" width="0.0222%" height="15" fill="rgb(243,34,48)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="98.1359%" y="645" width="0.0222%" height="15" fill="rgb(239,11,44)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="655.50"></text></g><g><title>__rg_dealloc (23 samples, 0.02%)</title><rect x="98.1359%" y="629" width="0.0222%" height="15" fill="rgb(231,98,35)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="639.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (23 samples, 0.02%)</title><rect x="98.1359%" y="613" width="0.0222%" height="15" fill="rgb(233,28,25)" fg:x="101445" fg:w="23"/><text x="98.3859%" y="623.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_dealloc_remote (15 samples, 0.01%)</title><rect x="98.1842%" y="421" width="0.0145%" height="15" fill="rgb(234,123,11)" fg:x="101495" fg:w="15"/><text x="98.4342%" y="431.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_mq_slow&lt;(snmalloc::ZeroMem)0&gt; (89 samples, 0.09%)</title><rect x="98.1842%" y="453" width="0.0861%" height="15" fill="rgb(220,69,3)" fg:x="101495" fg:w="89"/><text x="98.4342%" y="463.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::handle_message_queue_inner (89 samples, 0.09%)</title><rect x="98.1842%" y="437" width="0.0861%" height="15" fill="rgb(214,64,36)" fg:x="101495" fg:w="89"/><text x="98.4342%" y="447.50"></text></g><g><title>snmalloc::MPSCQ&lt;snmalloc::Remote, snmalloc::CapPtrCBAlloc, snmalloc::AtomicCapPtrCBAlloc&gt;::dequeue (74 samples, 0.07%)</title><rect x="98.1987%" y="421" width="0.0716%" height="15" fill="rgb(211,138,32)" fg:x="101510" fg:w="74"/><text x="98.4487%" y="431.50"></text></g><g><title>snmalloc::AtomicCapPtr&lt;snmalloc::Remote, (snmalloc::capptr_bounds)4&gt;::load (63 samples, 0.06%)</title><rect x="98.2094%" y="405" width="0.0609%" height="15" fill="rgb(213,118,47)" fg:x="101521" fg:w="63"/><text x="98.4594%" y="415.50"></text></g><g><title>std::atomic&lt;snmalloc::Remote*&gt;::load (63 samples, 0.06%)</title><rect x="98.2094%" y="389" width="0.0609%" height="15" fill="rgb(243,124,49)" fg:x="101521" fg:w="63"/><text x="98.4594%" y="399.50"></text></g><g><title>std::__atomic_base&lt;snmalloc::Remote*&gt;::load (63 samples, 0.06%)</title><rect x="98.2094%" y="373" width="0.0609%" height="15" fill="rgb(221,30,28)" fg:x="101521" fg:w="63"/><text x="98.4594%" y="383.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::alloc&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="98.1823%" y="501" width="0.1045%" height="15" fill="rgb(246,37,13)" fg:x="101493" fg:w="108"/><text x="98.4323%" y="511.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (108 samples, 0.10%)</title><rect x="98.1823%" y="485" width="0.1045%" height="15" fill="rgb(249,66,14)" fg:x="101493" fg:w="108"/><text x="98.4323%" y="495.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_alloc_inner&lt;(snmalloc::ZeroMem)0&gt; (107 samples, 0.10%)</title><rect x="98.1833%" y="469" width="0.1035%" height="15" fill="rgb(213,166,5)" fg:x="101494" fg:w="107"/><text x="98.4333%" y="479.50"></text></g><g><title>snmalloc::FreeListIter::take (13 samples, 0.01%)</title><rect x="98.2742%" y="453" width="0.0126%" height="15" fill="rgb(221,66,24)" fg:x="101588" fg:w="13"/><text x="98.5242%" y="463.50"></text></g><g><title>snmalloc::FreeListIter::update_cursor (13 samples, 0.01%)</title><rect x="98.2742%" y="437" width="0.0126%" height="15" fill="rgb(210,132,17)" fg:x="101588" fg:w="13"/><text x="98.5242%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (134 samples, 0.13%)</title><rect x="98.1610%" y="741" width="0.1296%" height="15" fill="rgb(243,202,5)" fg:x="101471" fg:w="134"/><text x="98.4110%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (132 samples, 0.13%)</title><rect x="98.1629%" y="725" width="0.1277%" height="15" fill="rgb(233,70,48)" fg:x="101473" fg:w="132"/><text x="98.4129%" y="735.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (112 samples, 0.11%)</title><rect x="98.1823%" y="709" width="0.1083%" height="15" fill="rgb(238,41,26)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (112 samples, 0.11%)</title><rect x="98.1823%" y="693" width="0.1083%" height="15" fill="rgb(241,19,31)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (112 samples, 0.11%)</title><rect x="98.1823%" y="677" width="0.1083%" height="15" fill="rgb(214,76,10)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (112 samples, 0.11%)</title><rect x="98.1823%" y="661" width="0.1083%" height="15" fill="rgb(254,202,22)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (112 samples, 0.11%)</title><rect x="98.1823%" y="645" width="0.1083%" height="15" fill="rgb(214,72,24)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (112 samples, 0.11%)</title><rect x="98.1823%" y="629" width="0.1083%" height="15" fill="rgb(221,92,46)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (112 samples, 0.11%)</title><rect x="98.1823%" y="613" width="0.1083%" height="15" fill="rgb(246,13,50)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 0.11%)</title><rect x="98.1823%" y="597" width="0.1083%" height="15" fill="rgb(240,165,38)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 0.11%)</title><rect x="98.1823%" y="581" width="0.1083%" height="15" fill="rgb(241,24,51)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="591.50"></text></g><g><title>alloc::alloc::alloc (112 samples, 0.11%)</title><rect x="98.1823%" y="565" width="0.1083%" height="15" fill="rgb(227,51,44)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="575.50"></text></g><g><title>__rg_alloc (112 samples, 0.11%)</title><rect x="98.1823%" y="549" width="0.1083%" height="15" fill="rgb(231,121,3)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="559.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (112 samples, 0.11%)</title><rect x="98.1823%" y="533" width="0.1083%" height="15" fill="rgb(245,3,41)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="543.50"></text></g><g><title>rust_alloc (112 samples, 0.11%)</title><rect x="98.1823%" y="517" width="0.1083%" height="15" fill="rgb(214,13,26)" fg:x="101493" fg:w="112"/><text x="98.4323%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (27 samples, 0.03%)</title><rect x="98.2906%" y="741" width="0.0261%" height="15" fill="rgb(252,75,11)" fg:x="101605" fg:w="27"/><text x="98.5406%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (24 samples, 0.02%)</title><rect x="98.2935%" y="725" width="0.0232%" height="15" fill="rgb(218,226,17)" fg:x="101608" fg:w="24"/><text x="98.5435%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (24 samples, 0.02%)</title><rect x="98.2935%" y="709" width="0.0232%" height="15" fill="rgb(248,89,38)" fg:x="101608" fg:w="24"/><text x="98.5435%" y="719.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (39 samples, 0.04%)</title><rect x="98.3168%" y="661" width="0.0377%" height="15" fill="rgb(237,73,46)" fg:x="101632" fg:w="39"/><text x="98.5668%" y="671.50"></text></g><g><title>core::mem::drop (40 samples, 0.04%)</title><rect x="98.3168%" y="741" width="0.0387%" height="15" fill="rgb(242,78,33)" fg:x="101632" fg:w="40"/><text x="98.5668%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (40 samples, 0.04%)</title><rect x="98.3168%" y="725" width="0.0387%" height="15" fill="rgb(235,60,3)" fg:x="101632" fg:w="40"/><text x="98.5668%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.04%)</title><rect x="98.3168%" y="709" width="0.0387%" height="15" fill="rgb(216,172,19)" fg:x="101632" fg:w="40"/><text x="98.5668%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.04%)</title><rect x="98.3168%" y="693" width="0.0387%" height="15" fill="rgb(227,6,42)" fg:x="101632" fg:w="40"/><text x="98.5668%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (40 samples, 0.04%)</title><rect x="98.3168%" y="677" width="0.0387%" height="15" fill="rgb(223,207,42)" fg:x="101632" fg:w="40"/><text x="98.5668%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="98.3661%" y="741" width="0.0145%" height="15" fill="rgb(246,138,30)" fg:x="101683" fg:w="15"/><text x="98.6161%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="98.3671%" y="725" width="0.0135%" height="15" fill="rgb(251,199,47)" fg:x="101684" fg:w="14"/><text x="98.6171%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (14 samples, 0.01%)</title><rect x="98.3671%" y="709" width="0.0135%" height="15" fill="rgb(228,218,44)" fg:x="101684" fg:w="14"/><text x="98.6171%" y="719.50"></text></g><g><title>___pthread_mutex_lock (14 samples, 0.01%)</title><rect x="98.3671%" y="693" width="0.0135%" height="15" fill="rgb(220,68,6)" fg:x="101684" fg:w="14"/><text x="98.6171%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (285 samples, 0.28%)</title><rect x="98.1301%" y="757" width="0.2757%" height="15" fill="rgb(240,60,26)" fg:x="101439" fg:w="285"/><text x="98.3801%" y="767.50"></text></g><g><title>std::time::Instant::now (26 samples, 0.03%)</title><rect x="98.3806%" y="741" width="0.0252%" height="15" fill="rgb(211,200,19)" fg:x="101698" fg:w="26"/><text x="98.6306%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (26 samples, 0.03%)</title><rect x="98.3806%" y="725" width="0.0252%" height="15" fill="rgb(242,145,30)" fg:x="101698" fg:w="26"/><text x="98.6306%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::now (26 samples, 0.03%)</title><rect x="98.3806%" y="709" width="0.0252%" height="15" fill="rgb(225,64,13)" fg:x="101698" fg:w="26"/><text x="98.6306%" y="719.50"></text></g><g><title>__clock_gettime_2 (24 samples, 0.02%)</title><rect x="98.3825%" y="693" width="0.0232%" height="15" fill="rgb(218,103,35)" fg:x="101700" fg:w="24"/><text x="98.6325%" y="703.50"></text></g><g><title>__vdso_clock_gettime (22 samples, 0.02%)</title><rect x="98.3845%" y="677" width="0.0213%" height="15" fill="rgb(216,93,46)" fg:x="101702" fg:w="22"/><text x="98.6345%" y="687.50"></text></g><g><title>[[vdso]] (12 samples, 0.01%)</title><rect x="98.3941%" y="661" width="0.0116%" height="15" fill="rgb(225,159,27)" fg:x="101712" fg:w="12"/><text x="98.6441%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="98.4212%" y="677" width="0.0135%" height="15" fill="rgb(225,204,11)" fg:x="101740" fg:w="14"/><text x="98.6712%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (15 samples, 0.01%)</title><rect x="98.4212%" y="741" width="0.0145%" height="15" fill="rgb(205,56,4)" fg:x="101740" fg:w="15"/><text x="98.6712%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="98.4212%" y="725" width="0.0145%" height="15" fill="rgb(206,6,35)" fg:x="101740" fg:w="15"/><text x="98.6712%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="98.4212%" y="709" width="0.0145%" height="15" fill="rgb(247,73,52)" fg:x="101740" fg:w="15"/><text x="98.6712%" y="719.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (15 samples, 0.01%)</title><rect x="98.4212%" y="693" width="0.0145%" height="15" fill="rgb(246,97,4)" fg:x="101740" fg:w="15"/><text x="98.6712%" y="703.50"></text></g><g><title>epoll_wait (53 samples, 0.05%)</title><rect x="98.4744%" y="725" width="0.0513%" height="15" fill="rgb(212,37,15)" fg:x="101795" fg:w="53"/><text x="98.7244%" y="735.50"></text></g><g><title>__GI_epoll_ctl (15 samples, 0.01%)</title><rect x="98.5296%" y="693" width="0.0145%" height="15" fill="rgb(208,130,40)" fg:x="101852" fg:w="15"/><text x="98.7796%" y="703.50"></text></g><g><title>polling::epoll::Poller::modify (20 samples, 0.02%)</title><rect x="98.5267%" y="725" width="0.0193%" height="15" fill="rgb(236,55,29)" fg:x="101849" fg:w="20"/><text x="98.7767%" y="735.50"></text></g><g><title>polling::epoll::Poller::ctl (17 samples, 0.02%)</title><rect x="98.5296%" y="709" width="0.0164%" height="15" fill="rgb(209,156,45)" fg:x="101852" fg:w="17"/><text x="98.7796%" y="719.50"></text></g><g><title>polling::epoll::Poller::wait (112 samples, 0.11%)</title><rect x="98.4464%" y="741" width="0.1083%" height="15" fill="rgb(249,107,4)" fg:x="101766" fg:w="112"/><text x="98.6964%" y="751.50"></text></g><g><title>async_io::reactor::ReactorLock::react (456 samples, 0.44%)</title><rect x="98.1204%" y="773" width="0.4411%" height="15" fill="rgb(227,7,13)" fg:x="101429" fg:w="456"/><text x="98.3704%" y="783.50"></text></g><g><title>polling::Poller::wait (150 samples, 0.15%)</title><rect x="98.4164%" y="757" width="0.1451%" height="15" fill="rgb(250,129,14)" fg:x="101735" fg:w="150"/><text x="98.6664%" y="767.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (35 samples, 0.03%)</title><rect x="98.6012%" y="741" width="0.0339%" height="15" fill="rgb(229,92,13)" fg:x="101926" fg:w="35"/><text x="98.8512%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (19 samples, 0.02%)</title><rect x="98.6166%" y="725" width="0.0184%" height="15" fill="rgb(245,98,39)" fg:x="101942" fg:w="19"/><text x="98.8666%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (53 samples, 0.05%)</title><rect x="98.6379%" y="741" width="0.0513%" height="15" fill="rgb(234,135,48)" fg:x="101964" fg:w="53"/><text x="98.8879%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (53 samples, 0.05%)</title><rect x="98.6379%" y="725" width="0.0513%" height="15" fill="rgb(230,98,28)" fg:x="101964" fg:w="53"/><text x="98.8879%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="98.7801%" y="677" width="0.0135%" height="15" fill="rgb(223,121,0)" fg:x="102111" fg:w="14"/><text x="99.0301%" y="687.50"></text></g><g><title>__condvar_confirm_wakeup (13 samples, 0.01%)</title><rect x="98.7937%" y="677" width="0.0126%" height="15" fill="rgb(234,173,33)" fg:x="102125" fg:w="13"/><text x="99.0437%" y="687.50"></text></g><g><title>__condvar_dec_grefs (117 samples, 0.11%)</title><rect x="98.8063%" y="677" width="0.1132%" height="15" fill="rgb(245,47,8)" fg:x="102138" fg:w="117"/><text x="99.0563%" y="687.50"></text></g><g><title>__GI___pthread_disable_asynccancel (22 samples, 0.02%)</title><rect x="99.0849%" y="661" width="0.0213%" height="15" fill="rgb(205,17,20)" fg:x="102426" fg:w="22"/><text x="99.3349%" y="671.50"></text></g><g><title>__futex_abstimed_wait_common (201 samples, 0.19%)</title><rect x="98.9194%" y="677" width="0.1944%" height="15" fill="rgb(232,151,16)" fg:x="102255" fg:w="201"/><text x="99.1694%" y="687.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (455 samples, 0.44%)</title><rect x="98.6979%" y="709" width="0.4402%" height="15" fill="rgb(208,30,32)" fg:x="102026" fg:w="455"/><text x="98.9479%" y="719.50"></text></g><g><title>__GI___pthread_cond_wait (455 samples, 0.44%)</title><rect x="98.6979%" y="693" width="0.4402%" height="15" fill="rgb(254,26,3)" fg:x="102026" fg:w="455"/><text x="98.9479%" y="703.50"></text></g><g><title>__pthread_mutex_cond_lock (18 samples, 0.02%)</title><rect x="99.1207%" y="677" width="0.0174%" height="15" fill="rgb(240,177,30)" fg:x="102463" fg:w="18"/><text x="99.3707%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (475 samples, 0.46%)</title><rect x="98.6892%" y="741" width="0.4595%" height="15" fill="rgb(248,76,44)" fg:x="102017" fg:w="475"/><text x="98.9392%" y="751.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (466 samples, 0.45%)</title><rect x="98.6979%" y="725" width="0.4508%" height="15" fill="rgb(241,186,54)" fg:x="102026" fg:w="466"/><text x="98.9479%" y="735.50"></text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (11 samples, 0.01%)</title><rect x="99.1381%" y="709" width="0.0106%" height="15" fill="rgb(249,171,29)" fg:x="102481" fg:w="11"/><text x="99.3881%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.01%)</title><rect x="99.1381%" y="693" width="0.0106%" height="15" fill="rgb(237,151,44)" fg:x="102481" fg:w="11"/><text x="99.3881%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="99.1381%" y="677" width="0.0106%" height="15" fill="rgb(228,174,30)" fg:x="102481" fg:w="11"/><text x="99.3881%" y="687.50"></text></g><g><title>parking::Parker::park (598 samples, 0.58%)</title><rect x="98.5867%" y="773" width="0.5785%" height="15" fill="rgb(252,14,37)" fg:x="101911" fg:w="598"/><text x="98.8367%" y="783.50"></text></g><g><title>parking::Inner::park (593 samples, 0.57%)</title><rect x="98.5915%" y="757" width="0.5737%" height="15" fill="rgb(207,111,40)" fg:x="101916" fg:w="593"/><text x="98.8415%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="99.1487%" y="741" width="0.0164%" height="15" fill="rgb(248,171,54)" fg:x="102492" fg:w="17"/><text x="99.3987%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="99.1487%" y="725" width="0.0164%" height="15" fill="rgb(211,127,2)" fg:x="102492" fg:w="17"/><text x="99.3987%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="99.1487%" y="709" width="0.0164%" height="15" fill="rgb(236,87,47)" fg:x="102492" fg:w="17"/><text x="99.3987%" y="719.50"></text></g><g><title>___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="99.1487%" y="693" width="0.0164%" height="15" fill="rgb(223,190,45)" fg:x="102492" fg:w="17"/><text x="99.3987%" y="703.50"></text></g><g><title>parking::Parker::park_timeout (91 samples, 0.09%)</title><rect x="99.1652%" y="773" width="0.0880%" height="15" fill="rgb(215,5,16)" fg:x="102509" fg:w="91"/><text x="99.4152%" y="783.50"></text></g><g><title>parking::Inner::park (84 samples, 0.08%)</title><rect x="99.1719%" y="757" width="0.0813%" height="15" fill="rgb(252,82,33)" fg:x="102516" fg:w="84"/><text x="99.4219%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (79 samples, 0.08%)</title><rect x="99.1768%" y="741" width="0.0764%" height="15" fill="rgb(247,213,44)" fg:x="102521" fg:w="79"/><text x="99.4268%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (79 samples, 0.08%)</title><rect x="99.1768%" y="725" width="0.0764%" height="15" fill="rgb(205,196,44)" fg:x="102521" fg:w="79"/><text x="99.4268%" y="735.50"></text></g><g><title>std::time::Instant::now (13 samples, 0.01%)</title><rect x="99.2638%" y="773" width="0.0126%" height="15" fill="rgb(237,96,54)" fg:x="102611" fg:w="13"/><text x="99.5138%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (13 samples, 0.01%)</title><rect x="99.2638%" y="757" width="0.0126%" height="15" fill="rgb(230,113,34)" fg:x="102611" fg:w="13"/><text x="99.5138%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::now (13 samples, 0.01%)</title><rect x="99.2638%" y="741" width="0.0126%" height="15" fill="rgb(221,224,12)" fg:x="102611" fg:w="13"/><text x="99.5138%" y="751.50"></text></g><g><title>__clock_gettime_2 (12 samples, 0.01%)</title><rect x="99.2648%" y="725" width="0.0116%" height="15" fill="rgb(219,112,44)" fg:x="102612" fg:w="12"/><text x="99.5148%" y="735.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.01%)</title><rect x="99.2648%" y="709" width="0.0116%" height="15" fill="rgb(210,31,13)" fg:x="102612" fg:w="12"/><text x="99.5148%" y="719.50"></text></g><g><title>__GI___clone (14,129 samples, 13.67%)</title><rect x="85.6093%" y="1173" width="13.6681%" height="15" fill="rgb(230,25,16)" fg:x="88496" fg:w="14129"/><text x="85.8593%" y="1183.50">__GI___clone</text></g><g><title>start_thread (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1157" width="13.6546%" height="15" fill="rgb(246,108,53)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1167.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1141" width="13.6546%" height="15" fill="rgb(241,172,50)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1151.50">std::sys::unix::threa..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1125" width="13.6546%" height="15" fill="rgb(235,141,10)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1135.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1109" width="13.6546%" height="15" fill="rgb(220,174,43)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1119.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1093" width="13.6546%" height="15" fill="rgb(215,181,40)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1103.50">core::ops::function::..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1077" width="13.6546%" height="15" fill="rgb(230,97,2)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1087.50">std::thread::Builder:..</text></g><g><title>std::panic::catch_unwind (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1061" width="13.6546%" height="15" fill="rgb(211,25,27)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1071.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1045" width="13.6546%" height="15" fill="rgb(230,87,26)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1029" width="13.6546%" height="15" fill="rgb(227,160,17)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1039.50">std::panicking::try::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,115 samples, 13.65%)</title><rect x="85.6228%" y="1013" width="13.6546%" height="15" fill="rgb(244,85,34)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1023.50">&lt;core::panic::unwind_..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (14,115 samples, 13.65%)</title><rect x="85.6228%" y="997" width="13.6546%" height="15" fill="rgb(207,70,0)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="1007.50">std::thread::Builder:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14,115 samples, 13.65%)</title><rect x="85.6228%" y="981" width="13.6546%" height="15" fill="rgb(223,129,7)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="991.50">std::sys_common::back..</text></g><g><title>core::ops::function::FnOnce::call_once (14,115 samples, 13.65%)</title><rect x="85.6228%" y="965" width="13.6546%" height="15" fill="rgb(246,105,7)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="975.50">core::ops::function::..</text></g><g><title>async_global_executor::threading::thread_main_loop (14,115 samples, 13.65%)</title><rect x="85.6228%" y="949" width="13.6546%" height="15" fill="rgb(215,154,42)" fg:x="88510" fg:w="14115"/><text x="85.8728%" y="959.50">async_global_executor..</text></g><g><title>std::panic::catch_unwind (14,108 samples, 13.65%)</title><rect x="85.6296%" y="933" width="13.6478%" height="15" fill="rgb(220,215,30)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="943.50">std::panic::catch_unw..</text></g><g><title>std::panicking::try (14,108 samples, 13.65%)</title><rect x="85.6296%" y="917" width="13.6478%" height="15" fill="rgb(228,81,51)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,108 samples, 13.65%)</title><rect x="85.6296%" y="901" width="13.6478%" height="15" fill="rgb(247,71,54)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="911.50">std::panicking::try::..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (14,108 samples, 13.65%)</title><rect x="85.6296%" y="885" width="13.6478%" height="15" fill="rgb(234,176,34)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="895.50">async_global_executor..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,108 samples, 13.65%)</title><rect x="85.6296%" y="869" width="13.6478%" height="15" fill="rgb(241,103,54)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="879.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,108 samples, 13.65%)</title><rect x="85.6296%" y="853" width="13.6478%" height="15" fill="rgb(228,22,34)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="863.50">std::thread::local::L..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (14,108 samples, 13.65%)</title><rect x="85.6296%" y="837" width="13.6478%" height="15" fill="rgb(241,179,48)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="847.50">async_global_executor..</text></g><g><title>async_global_executor::reactor::block_on (14,108 samples, 13.65%)</title><rect x="85.6296%" y="821" width="13.6478%" height="15" fill="rgb(235,167,37)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="831.50">async_global_executor..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (14,108 samples, 13.65%)</title><rect x="85.6296%" y="805" width="13.6478%" height="15" fill="rgb(213,109,30)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="815.50">async_global_executor..</text></g><g><title>async_io::driver::block_on (14,108 samples, 13.65%)</title><rect x="85.6296%" y="789" width="13.6478%" height="15" fill="rgb(222,172,16)" fg:x="88517" fg:w="14108"/><text x="85.8796%" y="799.50">async_io::driver::blo..</text></g><g><title>__clock_gettime_2 (17 samples, 0.02%)</title><rect x="99.2880%" y="1173" width="0.0164%" height="15" fill="rgb(233,192,5)" fg:x="102636" fg:w="17"/><text x="99.5380%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (23 samples, 0.02%)</title><rect x="99.3132%" y="1157" width="0.0222%" height="15" fill="rgb(247,189,41)" fg:x="102662" fg:w="23"/><text x="99.5632%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (23 samples, 0.02%)</title><rect x="99.3132%" y="1141" width="0.0222%" height="15" fill="rgb(218,134,47)" fg:x="102662" fg:w="23"/><text x="99.5632%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (23 samples, 0.02%)</title><rect x="99.3132%" y="1125" width="0.0222%" height="15" fill="rgb(216,29,3)" fg:x="102662" fg:w="23"/><text x="99.5632%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="99.3132%" y="1109" width="0.0222%" height="15" fill="rgb(246,140,12)" fg:x="102662" fg:w="23"/><text x="99.5632%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.02%)</title><rect x="99.3132%" y="1093" width="0.0222%" height="15" fill="rgb(230,136,11)" fg:x="102662" fg:w="23"/><text x="99.5632%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.02%)</title><rect x="99.3132%" y="1077" width="0.0222%" height="15" fill="rgb(247,22,47)" fg:x="102662" fg:w="23"/><text x="99.5632%" y="1087.50"></text></g><g><title>__rg_dealloc (23 samples, 0.02%)</title><rect x="99.3132%" y="1061" width="0.0222%" height="15" fill="rgb(218,84,22)" fg:x="102662" fg:w="23"/><text x="99.5632%" y="1071.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (23 samples, 0.02%)</title><rect x="99.3132%" y="1045" width="0.0222%" height="15" fill="rgb(216,87,39)" fg:x="102662" fg:w="23"/><text x="99.5632%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (28 samples, 0.03%)</title><rect x="99.3354%" y="1157" width="0.0271%" height="15" fill="rgb(221,178,8)" fg:x="102685" fg:w="28"/><text x="99.5854%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (56 samples, 0.05%)</title><rect x="99.3112%" y="1173" width="0.0542%" height="15" fill="rgb(230,42,11)" fg:x="102660" fg:w="56"/><text x="99.5612%" y="1183.50"></text></g><g><title>async_executor::steal (30 samples, 0.03%)</title><rect x="99.3799%" y="1173" width="0.0290%" height="15" fill="rgb(237,229,4)" fg:x="102731" fg:w="30"/><text x="99.6299%" y="1183.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (14 samples, 0.01%)</title><rect x="99.4089%" y="1173" width="0.0135%" height="15" fill="rgb(222,31,33)" fg:x="102761" fg:w="14"/><text x="99.6589%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="99.4234%" y="1173" width="0.0174%" height="15" fill="rgb(210,17,39)" fg:x="102776" fg:w="18"/><text x="99.6734%" y="1183.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (42 samples, 0.04%)</title><rect x="99.4409%" y="1173" width="0.0406%" height="15" fill="rgb(244,93,20)" fg:x="102794" fg:w="42"/><text x="99.6909%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="99.4883%" y="1173" width="0.0174%" height="15" fill="rgb(210,40,47)" fg:x="102843" fg:w="18"/><text x="99.7383%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="99.5057%" y="1173" width="0.0174%" height="15" fill="rgb(239,211,47)" fg:x="102861" fg:w="18"/><text x="99.7557%" y="1183.50"></text></g><g><title>snmalloc::Allocator&lt;&amp;snmalloc::needs_initialisation, &amp;snmalloc::init_thread_allocator, snmalloc::MemoryProviderStateMixin&lt;snmalloc::PALLinux, snmalloc::DefaultArenaMapTemplate&lt;snmalloc::PALLinux, snmalloc::GlobalPagemapTemplate&lt;snmalloc::default_auth_pagemap, snmalloc::ForAuthmap&gt; &gt; &gt;, snmalloc::DefaultChunkMap&lt;snmalloc::GlobalPagemapTemplate&lt;snmalloc::FlatPagemap&lt;20ul, unsigned char&gt;, snmalloc::ForChunkmap&gt; &gt;, true&gt;::small_dealloc_offseted_slow (31 samples, 0.03%)</title><rect x="99.5231%" y="1173" width="0.0300%" height="15" fill="rgb(251,223,49)" fg:x="102879" fg:w="31"/><text x="99.7731%" y="1183.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (12 samples, 0.01%)</title><rect x="99.5531%" y="1173" width="0.0116%" height="15" fill="rgb(221,149,5)" fg:x="102910" fg:w="12"/><text x="99.8031%" y="1183.50"></text></g><g><title>async-std/runti (102,868 samples, 99.51%)</title><rect x="0.0619%" y="1189" width="99.5124%" height="15" fill="rgb(219,224,51)" fg:x="64" fg:w="102868"/><text x="0.3119%" y="1199.50">async-std/runti</text></g><g><title>__futex_abstimed_wait_common (17 samples, 0.02%)</title><rect x="99.5889%" y="869" width="0.0164%" height="15" fill="rgb(223,7,8)" fg:x="102947" fg:w="17"/><text x="99.8389%" y="879.50"></text></g><g><title>blocking-1 (33 samples, 0.03%)</title><rect x="99.5744%" y="1189" width="0.0319%" height="15" fill="rgb(241,217,22)" fg:x="102932" fg:w="33"/><text x="99.8244%" y="1199.50"></text></g><g><title>__GI___clone (32 samples, 0.03%)</title><rect x="99.5753%" y="1173" width="0.0310%" height="15" fill="rgb(248,209,0)" fg:x="102933" fg:w="32"/><text x="99.8253%" y="1183.50"></text></g><g><title>start_thread (28 samples, 0.03%)</title><rect x="99.5792%" y="1157" width="0.0271%" height="15" fill="rgb(217,205,4)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (28 samples, 0.03%)</title><rect x="99.5792%" y="1141" width="0.0271%" height="15" fill="rgb(228,124,39)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.03%)</title><rect x="99.5792%" y="1125" width="0.0271%" height="15" fill="rgb(250,116,42)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.03%)</title><rect x="99.5792%" y="1109" width="0.0271%" height="15" fill="rgb(223,202,9)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (28 samples, 0.03%)</title><rect x="99.5792%" y="1093" width="0.0271%" height="15" fill="rgb(242,222,40)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (28 samples, 0.03%)</title><rect x="99.5792%" y="1077" width="0.0271%" height="15" fill="rgb(229,99,46)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (28 samples, 0.03%)</title><rect x="99.5792%" y="1061" width="0.0271%" height="15" fill="rgb(225,56,46)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1071.50"></text></g><g><title>std::panicking::try (28 samples, 0.03%)</title><rect x="99.5792%" y="1045" width="0.0271%" height="15" fill="rgb(227,94,5)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.03%)</title><rect x="99.5792%" y="1029" width="0.0271%" height="15" fill="rgb(205,112,38)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 0.03%)</title><rect x="99.5792%" y="1013" width="0.0271%" height="15" fill="rgb(231,133,46)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (28 samples, 0.03%)</title><rect x="99.5792%" y="997" width="0.0271%" height="15" fill="rgb(217,16,9)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 0.03%)</title><rect x="99.5792%" y="981" width="0.0271%" height="15" fill="rgb(249,173,9)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (28 samples, 0.03%)</title><rect x="99.5792%" y="965" width="0.0271%" height="15" fill="rgb(205,163,53)" fg:x="102937" fg:w="28"/><text x="99.8292%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (27 samples, 0.03%)</title><rect x="99.5802%" y="949" width="0.0261%" height="15" fill="rgb(217,54,41)" fg:x="102938" fg:w="27"/><text x="99.8302%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (19 samples, 0.02%)</title><rect x="99.5879%" y="933" width="0.0184%" height="15" fill="rgb(228,216,12)" fg:x="102946" fg:w="19"/><text x="99.8379%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (19 samples, 0.02%)</title><rect x="99.5879%" y="917" width="0.0184%" height="15" fill="rgb(244,228,15)" fg:x="102946" fg:w="19"/><text x="99.8379%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (19 samples, 0.02%)</title><rect x="99.5879%" y="901" width="0.0184%" height="15" fill="rgb(221,176,53)" fg:x="102946" fg:w="19"/><text x="99.8379%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (19 samples, 0.02%)</title><rect x="99.5879%" y="885" width="0.0184%" height="15" fill="rgb(205,94,34)" fg:x="102946" fg:w="19"/><text x="99.8379%" y="895.50"></text></g><g><title>blocking-2 (32 samples, 0.03%)</title><rect x="99.6063%" y="1189" width="0.0310%" height="15" fill="rgb(213,110,48)" fg:x="102965" fg:w="32"/><text x="99.8563%" y="1199.50"></text></g><g><title>__GI___clone (29 samples, 0.03%)</title><rect x="99.6092%" y="1173" width="0.0281%" height="15" fill="rgb(236,142,28)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1183.50"></text></g><g><title>start_thread (29 samples, 0.03%)</title><rect x="99.6092%" y="1157" width="0.0281%" height="15" fill="rgb(225,135,29)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (29 samples, 0.03%)</title><rect x="99.6092%" y="1141" width="0.0281%" height="15" fill="rgb(252,45,31)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 0.03%)</title><rect x="99.6092%" y="1125" width="0.0281%" height="15" fill="rgb(211,187,50)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (29 samples, 0.03%)</title><rect x="99.6092%" y="1109" width="0.0281%" height="15" fill="rgb(229,109,7)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (29 samples, 0.03%)</title><rect x="99.6092%" y="1093" width="0.0281%" height="15" fill="rgb(251,131,51)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (29 samples, 0.03%)</title><rect x="99.6092%" y="1077" width="0.0281%" height="15" fill="rgb(251,180,35)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.03%)</title><rect x="99.6092%" y="1061" width="0.0281%" height="15" fill="rgb(211,46,32)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1071.50"></text></g><g><title>std::panicking::try (29 samples, 0.03%)</title><rect x="99.6092%" y="1045" width="0.0281%" height="15" fill="rgb(248,123,17)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.03%)</title><rect x="99.6092%" y="1029" width="0.0281%" height="15" fill="rgb(227,141,18)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 0.03%)</title><rect x="99.6092%" y="1013" width="0.0281%" height="15" fill="rgb(216,102,9)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (29 samples, 0.03%)</title><rect x="99.6092%" y="997" width="0.0281%" height="15" fill="rgb(253,47,13)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (29 samples, 0.03%)</title><rect x="99.6092%" y="981" width="0.0281%" height="15" fill="rgb(226,93,23)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (29 samples, 0.03%)</title><rect x="99.6092%" y="965" width="0.0281%" height="15" fill="rgb(247,104,17)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (29 samples, 0.03%)</title><rect x="99.6092%" y="949" width="0.0281%" height="15" fill="rgb(233,203,26)" fg:x="102968" fg:w="29"/><text x="99.8592%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (19 samples, 0.02%)</title><rect x="99.6189%" y="933" width="0.0184%" height="15" fill="rgb(244,98,49)" fg:x="102978" fg:w="19"/><text x="99.8689%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (19 samples, 0.02%)</title><rect x="99.6189%" y="917" width="0.0184%" height="15" fill="rgb(235,134,22)" fg:x="102978" fg:w="19"/><text x="99.8689%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (19 samples, 0.02%)</title><rect x="99.6189%" y="901" width="0.0184%" height="15" fill="rgb(221,70,32)" fg:x="102978" fg:w="19"/><text x="99.8689%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (19 samples, 0.02%)</title><rect x="99.6189%" y="885" width="0.0184%" height="15" fill="rgb(238,15,50)" fg:x="102978" fg:w="19"/><text x="99.8689%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common (17 samples, 0.02%)</title><rect x="99.6208%" y="869" width="0.0164%" height="15" fill="rgb(215,221,48)" fg:x="102980" fg:w="17"/><text x="99.8708%" y="879.50"></text></g><g><title>blocking-3 (21 samples, 0.02%)</title><rect x="99.6372%" y="1189" width="0.0203%" height="15" fill="rgb(236,73,3)" fg:x="102997" fg:w="21"/><text x="99.8872%" y="1199.50"></text></g><g><title>__GI___clone (19 samples, 0.02%)</title><rect x="99.6392%" y="1173" width="0.0184%" height="15" fill="rgb(250,107,11)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1183.50"></text></g><g><title>start_thread (19 samples, 0.02%)</title><rect x="99.6392%" y="1157" width="0.0184%" height="15" fill="rgb(242,39,14)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (19 samples, 0.02%)</title><rect x="99.6392%" y="1141" width="0.0184%" height="15" fill="rgb(248,164,37)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6392%" y="1125" width="0.0184%" height="15" fill="rgb(217,60,12)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6392%" y="1109" width="0.0184%" height="15" fill="rgb(240,125,29)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 0.02%)</title><rect x="99.6392%" y="1093" width="0.0184%" height="15" fill="rgb(208,207,28)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (19 samples, 0.02%)</title><rect x="99.6392%" y="1077" width="0.0184%" height="15" fill="rgb(209,159,27)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="99.6392%" y="1061" width="0.0184%" height="15" fill="rgb(251,176,53)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1071.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="99.6392%" y="1045" width="0.0184%" height="15" fill="rgb(211,85,7)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="99.6392%" y="1029" width="0.0184%" height="15" fill="rgb(216,64,54)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.6392%" y="1013" width="0.0184%" height="15" fill="rgb(217,54,24)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="99.6392%" y="997" width="0.0184%" height="15" fill="rgb(208,206,53)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 0.02%)</title><rect x="99.6392%" y="981" width="0.0184%" height="15" fill="rgb(251,74,39)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="991.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (19 samples, 0.02%)</title><rect x="99.6392%" y="965" width="0.0184%" height="15" fill="rgb(226,47,5)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="975.50"></text></g><g><title>blocking::Executor::main_loop (19 samples, 0.02%)</title><rect x="99.6392%" y="949" width="0.0184%" height="15" fill="rgb(234,111,33)" fg:x="102999" fg:w="19"/><text x="99.8892%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.6459%" y="933" width="0.0116%" height="15" fill="rgb(251,14,10)" fg:x="103006" fg:w="12"/><text x="99.8959%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.6459%" y="917" width="0.0116%" height="15" fill="rgb(232,43,0)" fg:x="103006" fg:w="12"/><text x="99.8959%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout (12 samples, 0.01%)</title><rect x="99.6459%" y="901" width="0.0116%" height="15" fill="rgb(222,68,43)" fg:x="103006" fg:w="12"/><text x="99.8959%" y="911.50"></text></g><g><title>___pthread_cond_timedwait (12 samples, 0.01%)</title><rect x="99.6459%" y="885" width="0.0116%" height="15" fill="rgb(217,24,23)" fg:x="103006" fg:w="12"/><text x="99.8959%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common (11 samples, 0.01%)</title><rect x="99.6469%" y="869" width="0.0106%" height="15" fill="rgb(229,209,14)" fg:x="103007" fg:w="11"/><text x="99.8969%" y="879.50"></text></g><g><title>tokio-runtime-w (81 samples, 0.08%)</title><rect x="99.6585%" y="1189" width="0.0784%" height="15" fill="rgb(250,149,48)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1199.50"></text></g><g><title>__GI___clone (81 samples, 0.08%)</title><rect x="99.6585%" y="1173" width="0.0784%" height="15" fill="rgb(210,120,37)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1183.50"></text></g><g><title>start_thread (81 samples, 0.08%)</title><rect x="99.6585%" y="1157" width="0.0784%" height="15" fill="rgb(210,21,8)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (81 samples, 0.08%)</title><rect x="99.6585%" y="1141" width="0.0784%" height="15" fill="rgb(243,145,7)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (81 samples, 0.08%)</title><rect x="99.6585%" y="1125" width="0.0784%" height="15" fill="rgb(238,178,32)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (81 samples, 0.08%)</title><rect x="99.6585%" y="1109" width="0.0784%" height="15" fill="rgb(222,4,10)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (81 samples, 0.08%)</title><rect x="99.6585%" y="1093" width="0.0784%" height="15" fill="rgb(239,7,37)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (81 samples, 0.08%)</title><rect x="99.6585%" y="1077" width="0.0784%" height="15" fill="rgb(215,31,37)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (81 samples, 0.08%)</title><rect x="99.6585%" y="1061" width="0.0784%" height="15" fill="rgb(224,83,33)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1071.50"></text></g><g><title>std::panicking::try (81 samples, 0.08%)</title><rect x="99.6585%" y="1045" width="0.0784%" height="15" fill="rgb(239,55,3)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (81 samples, 0.08%)</title><rect x="99.6585%" y="1029" width="0.0784%" height="15" fill="rgb(247,92,11)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (81 samples, 0.08%)</title><rect x="99.6585%" y="1013" width="0.0784%" height="15" fill="rgb(239,200,7)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (81 samples, 0.08%)</title><rect x="99.6585%" y="997" width="0.0784%" height="15" fill="rgb(227,115,8)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (81 samples, 0.08%)</title><rect x="99.6585%" y="981" width="0.0784%" height="15" fill="rgb(215,189,27)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="991.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (81 samples, 0.08%)</title><rect x="99.6585%" y="965" width="0.0784%" height="15" fill="rgb(251,216,39)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="975.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (81 samples, 0.08%)</title><rect x="99.6585%" y="949" width="0.0784%" height="15" fill="rgb(207,29,47)" fg:x="103019" fg:w="81"/><text x="99.9085%" y="959.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (80 samples, 0.08%)</title><rect x="99.6595%" y="933" width="0.0774%" height="15" fill="rgb(210,71,34)" fg:x="103020" fg:w="80"/><text x="99.9095%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (80 samples, 0.08%)</title><rect x="99.6595%" y="917" width="0.0774%" height="15" fill="rgb(253,217,51)" fg:x="103020" fg:w="80"/><text x="99.9095%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (79 samples, 0.08%)</title><rect x="99.6604%" y="901" width="0.0764%" height="15" fill="rgb(222,117,46)" fg:x="103021" fg:w="79"/><text x="99.9104%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (79 samples, 0.08%)</title><rect x="99.6604%" y="885" width="0.0764%" height="15" fill="rgb(226,132,6)" fg:x="103021" fg:w="79"/><text x="99.9104%" y="895.50"></text></g><g><title>___pthread_mutex_lock (79 samples, 0.08%)</title><rect x="99.6604%" y="869" width="0.0764%" height="15" fill="rgb(254,145,51)" fg:x="103021" fg:w="79"/><text x="99.9104%" y="879.50"></text></g><g><title>__GI___lll_lock_wait (78 samples, 0.08%)</title><rect x="99.6614%" y="853" width="0.0755%" height="15" fill="rgb(231,199,27)" fg:x="103022" fg:w="78"/><text x="99.9114%" y="863.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="99.7388%" y="1173" width="0.0145%" height="15" fill="rgb(245,158,14)" fg:x="103102" fg:w="15"/><text x="99.9888%" y="1183.50"></text></g><g><title>__GI___ctype_init (12 samples, 0.01%)</title><rect x="99.9603%" y="1141" width="0.0116%" height="15" fill="rgb(240,113,14)" fg:x="103331" fg:w="12"/><text x="100.2103%" y="1151.50"></text></g><g><title>__GI___clone (246 samples, 0.24%)</title><rect x="99.7533%" y="1173" width="0.2380%" height="15" fill="rgb(210,20,13)" fg:x="103117" fg:w="246"/><text x="100.0033%" y="1183.50"></text></g><g><title>start_thread (46 samples, 0.04%)</title><rect x="99.9468%" y="1157" width="0.0445%" height="15" fill="rgb(241,144,13)" fg:x="103317" fg:w="46"/><text x="100.1968%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.02%)</title><rect x="99.9748%" y="1141" width="0.0164%" height="15" fill="rgb(235,43,34)" fg:x="103346" fg:w="17"/><text x="100.2248%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (17 samples, 0.02%)</title><rect x="99.9748%" y="1125" width="0.0164%" height="15" fill="rgb(208,36,20)" fg:x="103346" fg:w="17"/><text x="100.2248%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (17 samples, 0.02%)</title><rect x="99.9748%" y="1109" width="0.0164%" height="15" fill="rgb(239,204,10)" fg:x="103346" fg:w="17"/><text x="100.2248%" y="1119.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (15 samples, 0.01%)</title><rect x="99.9768%" y="1093" width="0.0145%" height="15" fill="rgb(217,84,43)" fg:x="103348" fg:w="15"/><text x="100.2268%" y="1103.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (15 samples, 0.01%)</title><rect x="99.9768%" y="1077" width="0.0145%" height="15" fill="rgb(241,170,50)" fg:x="103348" fg:w="15"/><text x="100.2268%" y="1087.50"></text></g><g><title>all (103,372 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(226,205,29)" fg:x="0" fg:w="103372"/><text x="0.2500%" y="1215.50"></text></g><g><title>tremor-connecto (272 samples, 0.26%)</title><rect x="99.7369%" y="1189" width="0.2631%" height="15" fill="rgb(233,113,1)" fg:x="103100" fg:w="272"/><text x="99.9869%" y="1199.50"></text></g></svg></svg>