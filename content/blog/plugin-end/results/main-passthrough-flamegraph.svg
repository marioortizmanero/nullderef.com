<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="997.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="123927"><g><title>std::sys::unix::futex::futex_wait (44 samples, 0.04%)</title><rect x="0.0194%" y="597" width="0.0355%" height="15" fill="rgb(227,0,7)" fg:x="24" fg:w="44"/><text x="0.2694%" y="607.50"></text></g><g><title>syscall (35 samples, 0.03%)</title><rect x="0.0266%" y="581" width="0.0282%" height="15" fill="rgb(217,0,24)" fg:x="33" fg:w="35"/><text x="0.2766%" y="591.50"></text></g><g><title>async-io (71 samples, 0.06%)</title><rect x="0.0008%" y="949" width="0.0573%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="71"/><text x="0.2508%" y="959.50"></text></g><g><title>clone (67 samples, 0.05%)</title><rect x="0.0040%" y="933" width="0.0541%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="67"/><text x="0.2540%" y="943.50"></text></g><g><title>start_thread (67 samples, 0.05%)</title><rect x="0.0040%" y="917" width="0.0541%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="67"/><text x="0.2540%" y="927.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (67 samples, 0.05%)</title><rect x="0.0040%" y="901" width="0.0541%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="67"/><text x="0.2540%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (67 samples, 0.05%)</title><rect x="0.0040%" y="885" width="0.0541%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="67"/><text x="0.2540%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (67 samples, 0.05%)</title><rect x="0.0040%" y="869" width="0.0541%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="67"/><text x="0.2540%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (67 samples, 0.05%)</title><rect x="0.0040%" y="853" width="0.0541%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="67"/><text x="0.2540%" y="863.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (67 samples, 0.05%)</title><rect x="0.0040%" y="837" width="0.0541%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="67"/><text x="0.2540%" y="847.50"></text></g><g><title>std::panic::catch_unwind (67 samples, 0.05%)</title><rect x="0.0040%" y="821" width="0.0541%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="67"/><text x="0.2540%" y="831.50"></text></g><g><title>std::panicking::try (67 samples, 0.05%)</title><rect x="0.0040%" y="805" width="0.0541%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="67"/><text x="0.2540%" y="815.50"></text></g><g><title>std::panicking::try::do_call (67 samples, 0.05%)</title><rect x="0.0040%" y="789" width="0.0541%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="67"/><text x="0.2540%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (67 samples, 0.05%)</title><rect x="0.0040%" y="773" width="0.0541%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="67"/><text x="0.2540%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (67 samples, 0.05%)</title><rect x="0.0040%" y="757" width="0.0541%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="67"/><text x="0.2540%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (67 samples, 0.05%)</title><rect x="0.0040%" y="741" width="0.0541%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="67"/><text x="0.2540%" y="751.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (67 samples, 0.05%)</title><rect x="0.0040%" y="725" width="0.0541%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="67"/><text x="0.2540%" y="735.50"></text></g><g><title>async_io::driver::main_loop (67 samples, 0.05%)</title><rect x="0.0040%" y="709" width="0.0541%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="67"/><text x="0.2540%" y="719.50"></text></g><g><title>parking::Parker::park_timeout (53 samples, 0.04%)</title><rect x="0.0153%" y="693" width="0.0428%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="53"/><text x="0.2653%" y="703.50"></text></g><g><title>parking::Inner::park (52 samples, 0.04%)</title><rect x="0.0161%" y="677" width="0.0420%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="52"/><text x="0.2661%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (50 samples, 0.04%)</title><rect x="0.0178%" y="661" width="0.0403%" height="15" fill="rgb(249,33,26)" fg:x="22" fg:w="50"/><text x="0.2678%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (50 samples, 0.04%)</title><rect x="0.0178%" y="645" width="0.0403%" height="15" fill="rgb(235,183,28)" fg:x="22" fg:w="50"/><text x="0.2678%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (50 samples, 0.04%)</title><rect x="0.0178%" y="629" width="0.0403%" height="15" fill="rgb(221,5,38)" fg:x="22" fg:w="50"/><text x="0.2678%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (50 samples, 0.04%)</title><rect x="0.0178%" y="613" width="0.0403%" height="15" fill="rgb(247,18,42)" fg:x="22" fg:w="50"/><text x="0.2678%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="0.0581%" y="933" width="0.0113%" height="15" fill="rgb(241,131,45)" fg:x="72" fg:w="14"/><text x="0.3081%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="0.0694%" y="933" width="0.0105%" height="15" fill="rgb(249,31,29)" fg:x="86" fg:w="13"/><text x="0.3194%" y="943.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (28 samples, 0.02%)</title><rect x="0.0799%" y="933" width="0.0226%" height="15" fill="rgb(225,111,53)" fg:x="99" fg:w="28"/><text x="0.3299%" y="943.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.02%)</title><rect x="0.1025%" y="933" width="0.0218%" height="15" fill="rgb(238,160,17)" fg:x="127" fg:w="27"/><text x="0.3525%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="0.1243%" y="933" width="0.0153%" height="15" fill="rgb(214,148,48)" fg:x="154" fg:w="19"/><text x="0.3743%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="0.1533%" y="917" width="0.0129%" height="15" fill="rgb(232,36,49)" fg:x="190" fg:w="16"/><text x="0.4033%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="0.1662%" y="917" width="0.0371%" height="15" fill="rgb(209,103,24)" fg:x="206" fg:w="46"/><text x="0.4162%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="0.2082%" y="917" width="0.0363%" height="15" fill="rgb(229,88,8)" fg:x="258" fg:w="45"/><text x="0.4582%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.03%)</title><rect x="0.2445%" y="917" width="0.0299%" height="15" fill="rgb(213,181,19)" fg:x="303" fg:w="37"/><text x="0.4945%" y="927.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="0.2744%" y="917" width="0.0468%" height="15" fill="rgb(254,191,54)" fg:x="340" fg:w="58"/><text x="0.5244%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="0.3212%" y="917" width="0.0153%" height="15" fill="rgb(241,83,37)" fg:x="398" fg:w="19"/><text x="0.5712%" y="927.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (42 samples, 0.03%)</title><rect x="0.5019%" y="901" width="0.0339%" height="15" fill="rgb(233,36,39)" fg:x="622" fg:w="42"/><text x="0.7519%" y="911.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (248 samples, 0.20%)</title><rect x="0.3365%" y="917" width="0.2001%" height="15" fill="rgb(226,3,54)" fg:x="417" fg:w="248"/><text x="0.5865%" y="927.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.02%)</title><rect x="0.5366%" y="917" width="0.0234%" height="15" fill="rgb(245,192,40)" fg:x="665" fg:w="29"/><text x="0.7866%" y="927.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (60 samples, 0.05%)</title><rect x="0.5971%" y="901" width="0.0484%" height="15" fill="rgb(238,167,29)" fg:x="740" fg:w="60"/><text x="0.8471%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (38 samples, 0.03%)</title><rect x="0.6149%" y="885" width="0.0307%" height="15" fill="rgb(232,182,51)" fg:x="762" fg:w="38"/><text x="0.8649%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (118 samples, 0.10%)</title><rect x="0.5600%" y="917" width="0.0952%" height="15" fill="rgb(231,60,39)" fg:x="694" fg:w="118"/><text x="0.8100%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="0.9619%" y="885" width="0.0105%" height="15" fill="rgb(208,69,12)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="0.9619%" y="869" width="0.0105%" height="15" fill="rgb(235,93,37)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (13 samples, 0.01%)</title><rect x="0.9619%" y="853" width="0.0105%" height="15" fill="rgb(213,116,39)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="0.9619%" y="837" width="0.0105%" height="15" fill="rgb(222,207,29)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="0.9619%" y="821" width="0.0105%" height="15" fill="rgb(206,96,30)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="0.9619%" y="805" width="0.0105%" height="15" fill="rgb(218,138,4)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="0.9619%" y="789" width="0.0105%" height="15" fill="rgb(250,191,14)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="0.9619%" y="773" width="0.0105%" height="15" fill="rgb(239,60,40)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="783.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="0.9619%" y="757" width="0.0105%" height="15" fill="rgb(206,27,48)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="767.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="0.9619%" y="741" width="0.0105%" height="15" fill="rgb(225,35,8)" fg:x="1192" fg:w="13"/><text x="1.2119%" y="751.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (42 samples, 0.03%)</title><rect x="0.9393%" y="901" width="0.0339%" height="15" fill="rgb(250,213,24)" fg:x="1164" fg:w="42"/><text x="1.1893%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="0.9893%" y="885" width="0.0121%" height="15" fill="rgb(247,123,22)" fg:x="1226" fg:w="15"/><text x="1.2393%" y="895.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="0.9893%" y="869" width="0.0121%" height="15" fill="rgb(231,138,38)" fg:x="1226" fg:w="15"/><text x="1.2393%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (59 samples, 0.05%)</title><rect x="0.9772%" y="901" width="0.0476%" height="15" fill="rgb(231,145,46)" fg:x="1211" fg:w="59"/><text x="1.2272%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (19 samples, 0.02%)</title><rect x="1.0337%" y="901" width="0.0153%" height="15" fill="rgb(251,118,11)" fg:x="1281" fg:w="19"/><text x="1.2837%" y="911.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="1.0821%" y="885" width="0.0137%" height="15" fill="rgb(217,147,25)" fg:x="1341" fg:w="17"/><text x="1.3321%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.01%)</title><rect x="1.0821%" y="869" width="0.0137%" height="15" fill="rgb(247,81,37)" fg:x="1341" fg:w="17"/><text x="1.3321%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (17 samples, 0.01%)</title><rect x="1.0821%" y="853" width="0.0137%" height="15" fill="rgb(209,12,38)" fg:x="1341" fg:w="17"/><text x="1.3321%" y="863.50"></text></g><g><title>core::ptr::read (17 samples, 0.01%)</title><rect x="1.0821%" y="837" width="0.0137%" height="15" fill="rgb(227,1,9)" fg:x="1341" fg:w="17"/><text x="1.3321%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (567 samples, 0.46%)</title><rect x="0.6552%" y="917" width="0.4575%" height="15" fill="rgb(248,47,43)" fg:x="812" fg:w="567"/><text x="0.9052%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (79 samples, 0.06%)</title><rect x="1.0490%" y="901" width="0.0637%" height="15" fill="rgb(221,10,30)" fg:x="1300" fg:w="79"/><text x="1.2990%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (119 samples, 0.10%)</title><rect x="1.1128%" y="917" width="0.0960%" height="15" fill="rgb(210,229,1)" fg:x="1379" fg:w="119"/><text x="1.3628%" y="927.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="1.2177%" y="917" width="0.0258%" height="15" fill="rgb(222,148,37)" fg:x="1509" fg:w="32"/><text x="1.4677%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (19 samples, 0.02%)</title><rect x="1.2556%" y="901" width="0.0153%" height="15" fill="rgb(234,67,33)" fg:x="1556" fg:w="19"/><text x="1.5056%" y="911.50"></text></g><g><title>core::mem::replace (19 samples, 0.02%)</title><rect x="1.2556%" y="885" width="0.0153%" height="15" fill="rgb(247,98,35)" fg:x="1556" fg:w="19"/><text x="1.5056%" y="895.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="1.2556%" y="869" width="0.0153%" height="15" fill="rgb(247,138,52)" fg:x="1556" fg:w="19"/><text x="1.5056%" y="879.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (53 samples, 0.04%)</title><rect x="1.2435%" y="917" width="0.0428%" height="15" fill="rgb(213,79,30)" fg:x="1541" fg:w="53"/><text x="1.4935%" y="927.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (28 samples, 0.02%)</title><rect x="1.2943%" y="917" width="0.0226%" height="15" fill="rgb(246,177,23)" fg:x="1604" fg:w="28"/><text x="1.5443%" y="927.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (209 samples, 0.17%)</title><rect x="1.3169%" y="917" width="0.1686%" height="15" fill="rgb(230,62,27)" fg:x="1632" fg:w="209"/><text x="1.5669%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (97 samples, 0.08%)</title><rect x="1.4073%" y="901" width="0.0783%" height="15" fill="rgb(216,154,8)" fg:x="1744" fg:w="97"/><text x="1.6573%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (74 samples, 0.06%)</title><rect x="1.4258%" y="885" width="0.0597%" height="15" fill="rgb(244,35,45)" fg:x="1767" fg:w="74"/><text x="1.6758%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="1.4743%" y="869" width="0.0113%" height="15" fill="rgb(251,115,12)" fg:x="1827" fg:w="14"/><text x="1.7243%" y="879.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (13 samples, 0.01%)</title><rect x="1.4856%" y="917" width="0.0105%" height="15" fill="rgb(240,54,50)" fg:x="1841" fg:w="13"/><text x="1.7356%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="1.4960%" y="917" width="0.0202%" height="15" fill="rgb(233,84,52)" fg:x="1854" fg:w="25"/><text x="1.7460%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.01%)</title><rect x="1.5017%" y="901" width="0.0145%" height="15" fill="rgb(207,117,47)" fg:x="1861" fg:w="18"/><text x="1.7517%" y="911.50"></text></g><g><title>[[vdso]] (26 samples, 0.02%)</title><rect x="1.5162%" y="917" width="0.0210%" height="15" fill="rgb(249,43,39)" fg:x="1879" fg:w="26"/><text x="1.7662%" y="927.50"></text></g><g><title>[libc-2.31.so] (74 samples, 0.06%)</title><rect x="1.5372%" y="917" width="0.0597%" height="15" fill="rgb(209,38,44)" fg:x="1905" fg:w="74"/><text x="1.7872%" y="927.50"></text></g><g><title>__clock_gettime (117 samples, 0.09%)</title><rect x="1.5969%" y="917" width="0.0944%" height="15" fill="rgb(236,212,23)" fg:x="1979" fg:w="117"/><text x="1.8469%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (22 samples, 0.02%)</title><rect x="1.6978%" y="917" width="0.0178%" height="15" fill="rgb(242,79,21)" fg:x="2104" fg:w="22"/><text x="1.9478%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (19 samples, 0.02%)</title><rect x="1.7002%" y="901" width="0.0153%" height="15" fill="rgb(211,96,35)" fg:x="2107" fg:w="19"/><text x="1.9502%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="1.7002%" y="885" width="0.0153%" height="15" fill="rgb(253,215,40)" fg:x="2107" fg:w="19"/><text x="1.9502%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (19 samples, 0.02%)</title><rect x="1.7002%" y="869" width="0.0153%" height="15" fill="rgb(211,81,21)" fg:x="2107" fg:w="19"/><text x="1.9502%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="1.7002%" y="853" width="0.0153%" height="15" fill="rgb(208,190,38)" fg:x="2107" fg:w="19"/><text x="1.9502%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="1.7002%" y="837" width="0.0153%" height="15" fill="rgb(235,213,38)" fg:x="2107" fg:w="19"/><text x="1.9502%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="1.7002%" y="821" width="0.0153%" height="15" fill="rgb(237,122,38)" fg:x="2107" fg:w="19"/><text x="1.9502%" y="831.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="1.7002%" y="805" width="0.0153%" height="15" fill="rgb(244,218,35)" fg:x="2107" fg:w="19"/><text x="1.9502%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="1.7002%" y="789" width="0.0153%" height="15" fill="rgb(240,68,47)" fg:x="2107" fg:w="19"/><text x="1.9502%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (17 samples, 0.01%)</title><rect x="1.7155%" y="917" width="0.0137%" height="15" fill="rgb(210,16,53)" fg:x="2126" fg:w="17"/><text x="1.9655%" y="927.50"></text></g><g><title>async_executor::State::notify (17 samples, 0.01%)</title><rect x="1.7292%" y="917" width="0.0137%" height="15" fill="rgb(235,124,12)" fg:x="2143" fg:w="17"/><text x="1.9792%" y="927.50"></text></g><g><title>async_executor::Ticker::wake (27 samples, 0.02%)</title><rect x="1.7510%" y="917" width="0.0218%" height="15" fill="rgb(224,169,11)" fg:x="2170" fg:w="27"/><text x="2.0010%" y="927.50"></text></g><g><title>async_executor::steal (232 samples, 0.19%)</title><rect x="1.7728%" y="917" width="0.1872%" height="15" fill="rgb(250,166,2)" fg:x="2197" fg:w="232"/><text x="2.0228%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13 samples, 0.01%)</title><rect x="1.9770%" y="917" width="0.0105%" height="15" fill="rgb(242,216,29)" fg:x="2450" fg:w="13"/><text x="2.2270%" y="927.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (410 samples, 0.33%)</title><rect x="1.9963%" y="917" width="0.3308%" height="15" fill="rgb(230,116,27)" fg:x="2474" fg:w="410"/><text x="2.2463%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (18 samples, 0.01%)</title><rect x="2.3127%" y="901" width="0.0145%" height="15" fill="rgb(228,99,48)" fg:x="2866" fg:w="18"/><text x="2.5627%" y="911.50"></text></g><g><title>core::ptr::read (18 samples, 0.01%)</title><rect x="2.3127%" y="885" width="0.0145%" height="15" fill="rgb(253,11,6)" fg:x="2866" fg:w="18"/><text x="2.5627%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (45 samples, 0.04%)</title><rect x="2.3272%" y="917" width="0.0363%" height="15" fill="rgb(247,143,39)" fg:x="2884" fg:w="45"/><text x="2.5772%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (65 samples, 0.05%)</title><rect x="2.3635%" y="917" width="0.0525%" height="15" fill="rgb(236,97,10)" fg:x="2929" fg:w="65"/><text x="2.6135%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (29 samples, 0.02%)</title><rect x="2.4159%" y="917" width="0.0234%" height="15" fill="rgb(233,208,19)" fg:x="2994" fg:w="29"/><text x="2.6659%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}&gt;&gt; (25 samples, 0.02%)</title><rect x="2.4442%" y="917" width="0.0202%" height="15" fill="rgb(216,164,2)" fg:x="3029" fg:w="25"/><text x="2.6942%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="2.4684%" y="917" width="0.0129%" height="15" fill="rgb(220,129,5)" fg:x="3059" fg:w="16"/><text x="2.7184%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="2.4692%" y="901" width="0.0121%" height="15" fill="rgb(242,17,10)" fg:x="3060" fg:w="15"/><text x="2.7192%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (22 samples, 0.02%)</title><rect x="2.4918%" y="917" width="0.0178%" height="15" fill="rgb(242,107,0)" fg:x="3088" fg:w="22"/><text x="2.7418%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (41 samples, 0.03%)</title><rect x="2.5095%" y="917" width="0.0331%" height="15" fill="rgb(251,28,31)" fg:x="3110" fg:w="41"/><text x="2.7595%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (28 samples, 0.02%)</title><rect x="2.5426%" y="917" width="0.0226%" height="15" fill="rgb(233,223,10)" fg:x="3151" fg:w="28"/><text x="2.7926%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (28 samples, 0.02%)</title><rect x="2.5426%" y="901" width="0.0226%" height="15" fill="rgb(215,21,27)" fg:x="3151" fg:w="28"/><text x="2.7926%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="2.5652%" y="917" width="0.0153%" height="15" fill="rgb(232,23,21)" fg:x="3179" fg:w="19"/><text x="2.8152%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (105 samples, 0.08%)</title><rect x="2.5894%" y="917" width="0.0847%" height="15" fill="rgb(244,5,23)" fg:x="3209" fg:w="105"/><text x="2.8394%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (49 samples, 0.04%)</title><rect x="2.7169%" y="901" width="0.0395%" height="15" fill="rgb(226,81,46)" fg:x="3367" fg:w="49"/><text x="2.9669%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (49 samples, 0.04%)</title><rect x="2.7169%" y="885" width="0.0395%" height="15" fill="rgb(247,70,30)" fg:x="3367" fg:w="49"/><text x="2.9669%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (49 samples, 0.04%)</title><rect x="2.7169%" y="869" width="0.0395%" height="15" fill="rgb(212,68,19)" fg:x="3367" fg:w="49"/><text x="2.9669%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.04%)</title><rect x="2.7169%" y="853" width="0.0395%" height="15" fill="rgb(240,187,13)" fg:x="3367" fg:w="49"/><text x="2.9669%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.04%)</title><rect x="2.7169%" y="837" width="0.0395%" height="15" fill="rgb(223,113,26)" fg:x="3367" fg:w="49"/><text x="2.9669%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.04%)</title><rect x="2.7169%" y="821" width="0.0395%" height="15" fill="rgb(206,192,2)" fg:x="3367" fg:w="49"/><text x="2.9669%" y="831.50"></text></g><g><title>__rg_dealloc (49 samples, 0.04%)</title><rect x="2.7169%" y="805" width="0.0395%" height="15" fill="rgb(241,108,4)" fg:x="3367" fg:w="49"/><text x="2.9669%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (49 samples, 0.04%)</title><rect x="2.7169%" y="789" width="0.0395%" height="15" fill="rgb(247,173,49)" fg:x="3367" fg:w="49"/><text x="2.9669%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (102 samples, 0.08%)</title><rect x="2.6758%" y="917" width="0.0823%" height="15" fill="rgb(224,114,35)" fg:x="3316" fg:w="102"/><text x="2.9258%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="2.7750%" y="901" width="0.0153%" height="15" fill="rgb(245,159,27)" fg:x="3439" fg:w="19"/><text x="3.0250%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="2.7750%" y="885" width="0.0153%" height="15" fill="rgb(245,172,44)" fg:x="3439" fg:w="19"/><text x="3.0250%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (19 samples, 0.02%)</title><rect x="2.7750%" y="869" width="0.0153%" height="15" fill="rgb(236,23,11)" fg:x="3439" fg:w="19"/><text x="3.0250%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="2.7750%" y="853" width="0.0153%" height="15" fill="rgb(205,117,38)" fg:x="3439" fg:w="19"/><text x="3.0250%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="2.7750%" y="837" width="0.0153%" height="15" fill="rgb(237,72,25)" fg:x="3439" fg:w="19"/><text x="3.0250%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (48 samples, 0.04%)</title><rect x="2.7581%" y="917" width="0.0387%" height="15" fill="rgb(244,70,9)" fg:x="3418" fg:w="48"/><text x="3.0081%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (46 samples, 0.04%)</title><rect x="2.7968%" y="917" width="0.0371%" height="15" fill="rgb(217,125,39)" fg:x="3466" fg:w="46"/><text x="3.0468%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="2.8138%" y="901" width="0.0202%" height="15" fill="rgb(235,36,10)" fg:x="3487" fg:w="25"/><text x="3.0638%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (25 samples, 0.02%)</title><rect x="2.8138%" y="885" width="0.0202%" height="15" fill="rgb(251,123,47)" fg:x="3487" fg:w="25"/><text x="3.0638%" y="895.50"></text></g><g><title>event_listener::Event::listen (14 samples, 0.01%)</title><rect x="2.8339%" y="917" width="0.0113%" height="15" fill="rgb(221,13,13)" fg:x="3512" fg:w="14"/><text x="3.0839%" y="927.50"></text></g><g><title>event_listener::Event::notify (206 samples, 0.17%)</title><rect x="2.8452%" y="917" width="0.1662%" height="15" fill="rgb(238,131,9)" fg:x="3526" fg:w="206"/><text x="3.0952%" y="927.50"></text></g><g><title>event_listener::full_fence (93 samples, 0.08%)</title><rect x="2.9364%" y="901" width="0.0750%" height="15" fill="rgb(211,50,8)" fg:x="3639" fg:w="93"/><text x="3.1864%" y="911.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (88 samples, 0.07%)</title><rect x="3.0195%" y="917" width="0.0710%" height="15" fill="rgb(245,182,24)" fg:x="3742" fg:w="88"/><text x="3.2695%" y="927.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (16 samples, 0.01%)</title><rect x="3.0776%" y="901" width="0.0129%" height="15" fill="rgb(242,14,37)" fg:x="3814" fg:w="16"/><text x="3.3276%" y="911.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (16 samples, 0.01%)</title><rect x="3.0776%" y="885" width="0.0129%" height="15" fill="rgb(246,228,12)" fg:x="3814" fg:w="16"/><text x="3.3276%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="3.0776%" y="869" width="0.0129%" height="15" fill="rgb(213,55,15)" fg:x="3814" fg:w="16"/><text x="3.3276%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (16 samples, 0.01%)</title><rect x="3.0776%" y="853" width="0.0129%" height="15" fill="rgb(209,9,3)" fg:x="3814" fg:w="16"/><text x="3.3276%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="3.0776%" y="837" width="0.0129%" height="15" fill="rgb(230,59,30)" fg:x="3814" fg:w="16"/><text x="3.3276%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (16 samples, 0.01%)</title><rect x="3.0776%" y="821" width="0.0129%" height="15" fill="rgb(209,121,21)" fg:x="3814" fg:w="16"/><text x="3.3276%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (16 samples, 0.01%)</title><rect x="3.0776%" y="805" width="0.0129%" height="15" fill="rgb(220,109,13)" fg:x="3814" fg:w="16"/><text x="3.3276%" y="815.50"></text></g><g><title>parking::Unparker::unpark (17 samples, 0.01%)</title><rect x="3.0913%" y="917" width="0.0137%" height="15" fill="rgb(232,18,1)" fg:x="3831" fg:w="17"/><text x="3.3413%" y="927.50"></text></g><g><title>sn_rust_alloc (75 samples, 0.06%)</title><rect x="3.1131%" y="917" width="0.0605%" height="15" fill="rgb(215,41,42)" fg:x="3858" fg:w="75"/><text x="3.3631%" y="927.50"></text></g><g><title>sn_rust_dealloc (18 samples, 0.01%)</title><rect x="3.1736%" y="917" width="0.0145%" height="15" fill="rgb(224,123,36)" fg:x="3933" fg:w="18"/><text x="3.4236%" y="927.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (27 samples, 0.02%)</title><rect x="3.1906%" y="917" width="0.0218%" height="15" fill="rgb(240,125,3)" fg:x="3954" fg:w="27"/><text x="3.4406%" y="927.50"></text></g><g><title>std::sys::unix::futex::futex_wait (28 samples, 0.02%)</title><rect x="3.2156%" y="917" width="0.0226%" height="15" fill="rgb(205,98,50)" fg:x="3985" fg:w="28"/><text x="3.4656%" y="927.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (14 samples, 0.01%)</title><rect x="3.2382%" y="917" width="0.0113%" height="15" fill="rgb(205,185,37)" fg:x="4013" fg:w="14"/><text x="3.4882%" y="927.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (58 samples, 0.05%)</title><rect x="3.2503%" y="917" width="0.0468%" height="15" fill="rgb(238,207,15)" fg:x="4028" fg:w="58"/><text x="3.5003%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 samples, 0.05%)</title><rect x="3.2971%" y="917" width="0.0508%" height="15" fill="rgb(213,199,42)" fg:x="4086" fg:w="63"/><text x="3.5471%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.02%)</title><rect x="3.3302%" y="901" width="0.0178%" height="15" fill="rgb(235,201,11)" fg:x="4127" fg:w="22"/><text x="3.5802%" y="911.50"></text></g><g><title>syscall (44 samples, 0.04%)</title><rect x="3.3479%" y="917" width="0.0355%" height="15" fill="rgb(207,46,11)" fg:x="4149" fg:w="44"/><text x="3.5979%" y="927.50"></text></g><g><title>tremor_common::time::nanotime (37 samples, 0.03%)</title><rect x="3.3834%" y="917" width="0.0299%" height="15" fill="rgb(241,35,35)" fg:x="4193" fg:w="37"/><text x="3.6334%" y="927.50"></text></g><g><title>std::time::SystemTime::now (19 samples, 0.02%)</title><rect x="3.3980%" y="901" width="0.0153%" height="15" fill="rgb(243,32,47)" fg:x="4211" fg:w="19"/><text x="3.6480%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (19 samples, 0.02%)</title><rect x="3.3980%" y="885" width="0.0153%" height="15" fill="rgb(247,202,23)" fg:x="4211" fg:w="19"/><text x="3.6480%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (19 samples, 0.02%)</title><rect x="3.3980%" y="869" width="0.0153%" height="15" fill="rgb(219,102,11)" fg:x="4211" fg:w="19"/><text x="3.6480%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (21 samples, 0.02%)</title><rect x="3.4141%" y="917" width="0.0169%" height="15" fill="rgb(243,110,44)" fg:x="4231" fg:w="21"/><text x="3.6641%" y="927.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (13 samples, 0.01%)</title><rect x="3.4311%" y="917" width="0.0105%" height="15" fill="rgb(222,74,54)" fg:x="4252" fg:w="13"/><text x="3.6811%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::maybe_send (16 samples, 0.01%)</title><rect x="3.4415%" y="917" width="0.0129%" height="15" fill="rgb(216,99,12)" fg:x="4265" fg:w="16"/><text x="3.6915%" y="927.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (13 samples, 0.01%)</title><rect x="3.4545%" y="917" width="0.0105%" height="15" fill="rgb(226,22,26)" fg:x="4281" fg:w="13"/><text x="3.7045%" y="927.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (44 samples, 0.04%)</title><rect x="3.4657%" y="917" width="0.0355%" height="15" fill="rgb(217,163,10)" fg:x="4295" fg:w="44"/><text x="3.7157%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (17 samples, 0.01%)</title><rect x="3.4875%" y="901" width="0.0137%" height="15" fill="rgb(213,25,53)" fg:x="4322" fg:w="17"/><text x="3.7375%" y="911.50"></text></g><g><title>value_trait::Builder::object (20 samples, 0.02%)</title><rect x="3.5013%" y="917" width="0.0161%" height="15" fill="rgb(252,105,26)" fg:x="4339" fg:w="20"/><text x="3.7513%" y="927.50"></text></g><g><title>[anon] (4,193 samples, 3.38%)</title><rect x="0.1533%" y="933" width="3.3834%" height="15" fill="rgb(220,39,43)" fg:x="190" fg:w="4193"/><text x="0.4033%" y="943.50">[an..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (18 samples, 0.01%)</title><rect x="3.5222%" y="917" width="0.0145%" height="15" fill="rgb(229,68,48)" fg:x="4365" fg:w="18"/><text x="3.7722%" y="927.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.01%)</title><rect x="3.5529%" y="917" width="0.0145%" height="15" fill="rgb(252,8,32)" fg:x="4403" fg:w="18"/><text x="3.8029%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="3.5690%" y="885" width="0.0178%" height="15" fill="rgb(223,20,43)" fg:x="4423" fg:w="22"/><text x="3.8190%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="3.5690%" y="869" width="0.0178%" height="15" fill="rgb(229,81,49)" fg:x="4423" fg:w="22"/><text x="3.8190%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="3.5690%" y="853" width="0.0178%" height="15" fill="rgb(236,28,36)" fg:x="4423" fg:w="22"/><text x="3.8190%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="3.5690%" y="837" width="0.0178%" height="15" fill="rgb(249,185,26)" fg:x="4423" fg:w="22"/><text x="3.8190%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="3.5690%" y="821" width="0.0178%" height="15" fill="rgb(249,174,33)" fg:x="4423" fg:w="22"/><text x="3.8190%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="3.5690%" y="805" width="0.0178%" height="15" fill="rgb(233,201,37)" fg:x="4423" fg:w="22"/><text x="3.8190%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.04%)</title><rect x="3.5674%" y="917" width="0.0355%" height="15" fill="rgb(221,78,26)" fg:x="4421" fg:w="44"/><text x="3.8174%" y="927.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (42 samples, 0.03%)</title><rect x="3.5690%" y="901" width="0.0339%" height="15" fill="rgb(250,127,30)" fg:x="4423" fg:w="42"/><text x="3.8190%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="3.6029%" y="917" width="0.0153%" height="15" fill="rgb(230,49,44)" fg:x="4465" fg:w="19"/><text x="3.8529%" y="927.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (31 samples, 0.03%)</title><rect x="3.6304%" y="917" width="0.0250%" height="15" fill="rgb(229,67,23)" fg:x="4499" fg:w="31"/><text x="3.8804%" y="927.50"></text></g><g><title>event_listener::Event::notify (24 samples, 0.02%)</title><rect x="3.6586%" y="917" width="0.0194%" height="15" fill="rgb(249,83,47)" fg:x="4534" fg:w="24"/><text x="3.9086%" y="927.50"></text></g><g><title>event_listener::full_fence (24 samples, 0.02%)</title><rect x="3.6586%" y="901" width="0.0194%" height="15" fill="rgb(215,43,3)" fg:x="4534" fg:w="24"/><text x="3.9086%" y="911.50"></text></g><g><title>[libc-2.31.so] (190 samples, 0.15%)</title><rect x="3.5368%" y="933" width="0.1533%" height="15" fill="rgb(238,154,13)" fg:x="4383" fg:w="190"/><text x="3.7868%" y="943.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (15 samples, 0.01%)</title><rect x="3.6780%" y="917" width="0.0121%" height="15" fill="rgb(219,56,2)" fg:x="4558" fg:w="15"/><text x="3.9280%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="3.6901%" y="917" width="0.0274%" height="15" fill="rgb(233,0,4)" fg:x="4573" fg:w="34"/><text x="3.9401%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="3.7175%" y="917" width="0.0121%" height="15" fill="rgb(235,30,7)" fg:x="4607" fg:w="15"/><text x="3.9675%" y="927.50"></text></g><g><title>[main] (65 samples, 0.05%)</title><rect x="3.6901%" y="933" width="0.0525%" height="15" fill="rgb(250,79,13)" fg:x="4573" fg:w="65"/><text x="3.9401%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (15 samples, 0.01%)</title><rect x="3.7304%" y="917" width="0.0121%" height="15" fill="rgb(211,146,34)" fg:x="4623" fg:w="15"/><text x="3.9804%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="3.7490%" y="917" width="0.0210%" height="15" fill="rgb(228,22,38)" fg:x="4646" fg:w="26"/><text x="3.9990%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="3.7700%" y="917" width="0.0129%" height="15" fill="rgb(235,168,5)" fg:x="4672" fg:w="16"/><text x="4.0200%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.01%)</title><rect x="3.8313%" y="773" width="0.0145%" height="15" fill="rgb(221,155,16)" fg:x="4748" fg:w="18"/><text x="4.0813%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.01%)</title><rect x="3.8313%" y="757" width="0.0145%" height="15" fill="rgb(215,215,53)" fg:x="4748" fg:w="18"/><text x="4.0813%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.01%)</title><rect x="3.8313%" y="741" width="0.0145%" height="15" fill="rgb(223,4,10)" fg:x="4748" fg:w="18"/><text x="4.0813%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.01%)</title><rect x="3.8313%" y="725" width="0.0145%" height="15" fill="rgb(234,103,6)" fg:x="4748" fg:w="18"/><text x="4.0813%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.01%)</title><rect x="3.8313%" y="709" width="0.0145%" height="15" fill="rgb(227,97,0)" fg:x="4748" fg:w="18"/><text x="4.0813%" y="719.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.01%)</title><rect x="3.8313%" y="693" width="0.0145%" height="15" fill="rgb(234,150,53)" fg:x="4748" fg:w="18"/><text x="4.0813%" y="703.50"></text></g><g><title>__rg_alloc (18 samples, 0.01%)</title><rect x="3.8313%" y="677" width="0.0145%" height="15" fill="rgb(228,201,54)" fg:x="4748" fg:w="18"/><text x="4.0813%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.01%)</title><rect x="3.8313%" y="661" width="0.0145%" height="15" fill="rgb(222,22,37)" fg:x="4748" fg:w="18"/><text x="4.0813%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (30 samples, 0.02%)</title><rect x="3.8313%" y="853" width="0.0242%" height="15" fill="rgb(237,53,32)" fg:x="4748" fg:w="30"/><text x="4.0813%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.02%)</title><rect x="3.8313%" y="837" width="0.0242%" height="15" fill="rgb(233,25,53)" fg:x="4748" fg:w="30"/><text x="4.0813%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.02%)</title><rect x="3.8313%" y="821" width="0.0242%" height="15" fill="rgb(210,40,34)" fg:x="4748" fg:w="30"/><text x="4.0813%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.02%)</title><rect x="3.8313%" y="805" width="0.0242%" height="15" fill="rgb(241,220,44)" fg:x="4748" fg:w="30"/><text x="4.0813%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.02%)</title><rect x="3.8313%" y="789" width="0.0242%" height="15" fill="rgb(235,28,35)" fg:x="4748" fg:w="30"/><text x="4.0813%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98 samples, 0.08%)</title><rect x="3.7829%" y="917" width="0.0791%" height="15" fill="rgb(210,56,17)" fg:x="4688" fg:w="98"/><text x="4.0329%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.03%)</title><rect x="3.8313%" y="901" width="0.0307%" height="15" fill="rgb(224,130,29)" fg:x="4748" fg:w="38"/><text x="4.0813%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.03%)</title><rect x="3.8313%" y="885" width="0.0307%" height="15" fill="rgb(235,212,8)" fg:x="4748" fg:w="38"/><text x="4.0813%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.03%)</title><rect x="3.8313%" y="869" width="0.0307%" height="15" fill="rgb(223,33,50)" fg:x="4748" fg:w="38"/><text x="4.0813%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (48 samples, 0.04%)</title><rect x="3.8708%" y="917" width="0.0387%" height="15" fill="rgb(219,149,13)" fg:x="4797" fg:w="48"/><text x="4.1208%" y="927.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.01%)</title><rect x="3.9096%" y="917" width="0.0137%" height="15" fill="rgb(250,156,29)" fg:x="4845" fg:w="17"/><text x="4.1596%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (412 samples, 0.33%)</title><rect x="4.1145%" y="437" width="0.3325%" height="15" fill="rgb(216,193,19)" fg:x="5099" fg:w="412"/><text x="4.3645%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (412 samples, 0.33%)</title><rect x="4.1145%" y="421" width="0.3325%" height="15" fill="rgb(216,135,14)" fg:x="5099" fg:w="412"/><text x="4.3645%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (498 samples, 0.40%)</title><rect x="4.4470%" y="437" width="0.4018%" height="15" fill="rgb(241,47,5)" fg:x="5511" fg:w="498"/><text x="4.6970%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (494 samples, 0.40%)</title><rect x="4.4502%" y="421" width="0.3986%" height="15" fill="rgb(233,42,35)" fg:x="5515" fg:w="494"/><text x="4.7002%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,013 samples, 0.82%)</title><rect x="4.0387%" y="469" width="0.8174%" height="15" fill="rgb(231,13,6)" fg:x="5005" fg:w="1013"/><text x="4.2887%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,013 samples, 0.82%)</title><rect x="4.0387%" y="453" width="0.8174%" height="15" fill="rgb(207,181,40)" fg:x="5005" fg:w="1013"/><text x="4.2887%" y="463.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="4.8698%" y="437" width="0.0113%" height="15" fill="rgb(254,173,49)" fg:x="6035" fg:w="14"/><text x="5.1198%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (96 samples, 0.08%)</title><rect x="4.8698%" y="453" width="0.0775%" height="15" fill="rgb(221,1,38)" fg:x="6035" fg:w="96"/><text x="5.1198%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (82 samples, 0.07%)</title><rect x="4.8811%" y="437" width="0.0662%" height="15" fill="rgb(206,124,46)" fg:x="6049" fg:w="82"/><text x="5.1311%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.07%)</title><rect x="4.8811%" y="421" width="0.0662%" height="15" fill="rgb(249,21,11)" fg:x="6049" fg:w="82"/><text x="5.1311%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (79 samples, 0.06%)</title><rect x="4.8835%" y="405" width="0.0637%" height="15" fill="rgb(222,201,40)" fg:x="6052" fg:w="79"/><text x="5.1335%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (79 samples, 0.06%)</title><rect x="4.8835%" y="389" width="0.0637%" height="15" fill="rgb(235,61,29)" fg:x="6052" fg:w="79"/><text x="5.1335%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (79 samples, 0.06%)</title><rect x="4.8835%" y="373" width="0.0637%" height="15" fill="rgb(219,207,3)" fg:x="6052" fg:w="79"/><text x="5.1335%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (79 samples, 0.06%)</title><rect x="4.8835%" y="357" width="0.0637%" height="15" fill="rgb(222,56,46)" fg:x="6052" fg:w="79"/><text x="5.1335%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (75 samples, 0.06%)</title><rect x="4.9473%" y="453" width="0.0605%" height="15" fill="rgb(239,76,54)" fg:x="6131" fg:w="75"/><text x="5.1973%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (75 samples, 0.06%)</title><rect x="4.9473%" y="437" width="0.0605%" height="15" fill="rgb(231,124,27)" fg:x="6131" fg:w="75"/><text x="5.1973%" y="447.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="5.0167%" y="421" width="0.0121%" height="15" fill="rgb(249,195,6)" fg:x="6217" fg:w="15"/><text x="5.2667%" y="431.50"></text></g><g><title>std::sync::poison::Flag::borrow (15 samples, 0.01%)</title><rect x="5.0167%" y="405" width="0.0121%" height="15" fill="rgb(237,174,47)" fg:x="6217" fg:w="15"/><text x="5.2667%" y="415.50"></text></g><g><title>event_listener::Inner::lock (119 samples, 0.10%)</title><rect x="5.0078%" y="453" width="0.0960%" height="15" fill="rgb(206,201,31)" fg:x="6206" fg:w="119"/><text x="5.2578%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (108 samples, 0.09%)</title><rect x="5.0167%" y="437" width="0.0871%" height="15" fill="rgb(231,57,52)" fg:x="6217" fg:w="108"/><text x="5.2667%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (93 samples, 0.08%)</title><rect x="5.0288%" y="421" width="0.0750%" height="15" fill="rgb(248,177,22)" fg:x="6232" fg:w="93"/><text x="5.2788%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (93 samples, 0.08%)</title><rect x="5.0288%" y="405" width="0.0750%" height="15" fill="rgb(215,211,37)" fg:x="6232" fg:w="93"/><text x="5.2788%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (93 samples, 0.08%)</title><rect x="5.0288%" y="389" width="0.0750%" height="15" fill="rgb(241,128,51)" fg:x="6232" fg:w="93"/><text x="5.2788%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (93 samples, 0.08%)</title><rect x="5.0288%" y="373" width="0.0750%" height="15" fill="rgb(227,165,31)" fg:x="6232" fg:w="93"/><text x="5.2788%" y="383.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,243 samples, 1.81%)</title><rect x="4.0387%" y="485" width="1.8099%" height="15" fill="rgb(228,167,24)" fg:x="5005" fg:w="2243"/><text x="4.2887%" y="495.50">a..</text></g><g><title>event_listener::Event::notify (1,230 samples, 0.99%)</title><rect x="4.8561%" y="469" width="0.9925%" height="15" fill="rgb(228,143,12)" fg:x="6018" fg:w="1230"/><text x="5.1061%" y="479.50"></text></g><g><title>event_listener::full_fence (923 samples, 0.74%)</title><rect x="5.1038%" y="453" width="0.7448%" height="15" fill="rgb(249,149,8)" fg:x="6325" fg:w="923"/><text x="5.3538%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (923 samples, 0.74%)</title><rect x="5.1038%" y="437" width="0.7448%" height="15" fill="rgb(243,35,44)" fg:x="6325" fg:w="923"/><text x="5.3538%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (923 samples, 0.74%)</title><rect x="5.1038%" y="421" width="0.7448%" height="15" fill="rgb(246,89,9)" fg:x="6325" fg:w="923"/><text x="5.3538%" y="431.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="901" width="1.9697%" height="15" fill="rgb(233,213,13)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="911.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="885" width="1.9697%" height="15" fill="rgb(233,141,41)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="895.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="869" width="1.9697%" height="15" fill="rgb(239,167,4)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="879.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="853" width="1.9697%" height="15" fill="rgb(209,217,16)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="863.50">a..</text></g><g><title>async_task::runnable::Runnable::run (2,441 samples, 1.97%)</title><rect x="4.0387%" y="837" width="1.9697%" height="15" fill="rgb(219,88,35)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="847.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,441 samples, 1.97%)</title><rect x="4.0387%" y="821" width="1.9697%" height="15" fill="rgb(220,193,23)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="831.50">a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="805" width="1.9697%" height="15" fill="rgb(230,90,52)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="815.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="789" width="1.9697%" height="15" fill="rgb(252,106,19)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="799.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="773" width="1.9697%" height="15" fill="rgb(206,74,20)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="783.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="757" width="1.9697%" height="15" fill="rgb(230,138,44)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="767.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,441 samples, 1.97%)</title><rect x="4.0387%" y="741" width="1.9697%" height="15" fill="rgb(235,182,43)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="751.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,441 samples, 1.97%)</title><rect x="4.0387%" y="725" width="1.9697%" height="15" fill="rgb(242,16,51)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="735.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,441 samples, 1.97%)</title><rect x="4.0387%" y="709" width="1.9697%" height="15" fill="rgb(248,9,4)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="719.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="693" width="1.9697%" height="15" fill="rgb(210,31,22)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="703.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="677" width="1.9697%" height="15" fill="rgb(239,54,39)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="687.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="661" width="1.9697%" height="15" fill="rgb(230,99,41)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="671.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="645" width="1.9697%" height="15" fill="rgb(253,106,12)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="655.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="629" width="1.9697%" height="15" fill="rgb(213,46,41)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="639.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="613" width="1.9697%" height="15" fill="rgb(215,133,35)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="623.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="597" width="1.9697%" height="15" fill="rgb(213,28,5)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="607.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="581" width="1.9697%" height="15" fill="rgb(215,77,49)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="591.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="565" width="1.9697%" height="15" fill="rgb(248,100,22)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="575.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="549" width="1.9697%" height="15" fill="rgb(208,67,9)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="559.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="533" width="1.9697%" height="15" fill="rgb(219,133,21)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,441 samples, 1.97%)</title><rect x="4.0387%" y="517" width="1.9697%" height="15" fill="rgb(246,46,29)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="527.50">t..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,441 samples, 1.97%)</title><rect x="4.0387%" y="501" width="1.9697%" height="15" fill="rgb(246,185,52)" fg:x="5005" fg:w="2441"/><text x="4.2887%" y="511.50">&lt;..</text></g><g><title>event_listener::Event::notify (198 samples, 0.16%)</title><rect x="5.8486%" y="485" width="0.1598%" height="15" fill="rgb(252,136,11)" fg:x="7248" fg:w="198"/><text x="6.0986%" y="495.50"></text></g><g><title>event_listener::full_fence (186 samples, 0.15%)</title><rect x="5.8583%" y="469" width="0.1501%" height="15" fill="rgb(219,138,53)" fg:x="7260" fg:w="186"/><text x="6.1083%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (186 samples, 0.15%)</title><rect x="5.8583%" y="453" width="0.1501%" height="15" fill="rgb(211,51,23)" fg:x="7260" fg:w="186"/><text x="6.1083%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (186 samples, 0.15%)</title><rect x="5.8583%" y="437" width="0.1501%" height="15" fill="rgb(247,221,28)" fg:x="7260" fg:w="186"/><text x="6.1083%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (166 samples, 0.13%)</title><rect x="6.4982%" y="645" width="0.1339%" height="15" fill="rgb(251,222,45)" fg:x="8053" fg:w="166"/><text x="6.7482%" y="655.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (181 samples, 0.15%)</title><rect x="7.4068%" y="453" width="0.1461%" height="15" fill="rgb(217,162,53)" fg:x="9179" fg:w="181"/><text x="7.6568%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (746 samples, 0.60%)</title><rect x="6.9533%" y="581" width="0.6020%" height="15" fill="rgb(229,93,14)" fg:x="8617" fg:w="746"/><text x="7.2033%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (340 samples, 0.27%)</title><rect x="7.2809%" y="565" width="0.2744%" height="15" fill="rgb(209,67,49)" fg:x="9023" fg:w="340"/><text x="7.5309%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (340 samples, 0.27%)</title><rect x="7.2809%" y="549" width="0.2744%" height="15" fill="rgb(213,87,29)" fg:x="9023" fg:w="340"/><text x="7.5309%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (340 samples, 0.27%)</title><rect x="7.2809%" y="533" width="0.2744%" height="15" fill="rgb(205,151,52)" fg:x="9023" fg:w="340"/><text x="7.5309%" y="543.50"></text></g><g><title>alloc::alloc::alloc (334 samples, 0.27%)</title><rect x="7.2857%" y="517" width="0.2695%" height="15" fill="rgb(253,215,39)" fg:x="9029" fg:w="334"/><text x="7.5357%" y="527.50"></text></g><g><title>__rg_alloc (334 samples, 0.27%)</title><rect x="7.2857%" y="501" width="0.2695%" height="15" fill="rgb(221,220,41)" fg:x="9029" fg:w="334"/><text x="7.5357%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (334 samples, 0.27%)</title><rect x="7.2857%" y="485" width="0.2695%" height="15" fill="rgb(218,133,21)" fg:x="9029" fg:w="334"/><text x="7.5357%" y="495.50"></text></g><g><title>sn_rust_alloc (319 samples, 0.26%)</title><rect x="7.2978%" y="469" width="0.2574%" height="15" fill="rgb(221,193,43)" fg:x="9044" fg:w="319"/><text x="7.5478%" y="479.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,382 samples, 1.12%)</title><rect x="6.4490%" y="661" width="1.1152%" height="15" fill="rgb(240,128,52)" fg:x="7992" fg:w="1382"/><text x="6.6990%" y="671.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,155 samples, 0.93%)</title><rect x="6.6321%" y="645" width="0.9320%" height="15" fill="rgb(253,114,12)" fg:x="8219" fg:w="1155"/><text x="6.8821%" y="655.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (773 samples, 0.62%)</title><rect x="6.9404%" y="629" width="0.6238%" height="15" fill="rgb(215,223,47)" fg:x="8601" fg:w="773"/><text x="7.1904%" y="639.50"></text></g><g><title>value_trait::Builder::object (757 samples, 0.61%)</title><rect x="6.9533%" y="613" width="0.6108%" height="15" fill="rgb(248,225,23)" fg:x="8617" fg:w="757"/><text x="7.2033%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (757 samples, 0.61%)</title><rect x="6.9533%" y="597" width="0.6108%" height="15" fill="rgb(250,108,0)" fg:x="8617" fg:w="757"/><text x="7.2033%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="7.6004%" y="533" width="0.0169%" height="15" fill="rgb(228,208,7)" fg:x="9419" fg:w="21"/><text x="7.8504%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (21 samples, 0.02%)</title><rect x="7.6004%" y="517" width="0.0169%" height="15" fill="rgb(244,45,10)" fg:x="9419" fg:w="21"/><text x="7.8504%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (60 samples, 0.05%)</title><rect x="7.5746%" y="629" width="0.0484%" height="15" fill="rgb(207,125,25)" fg:x="9387" fg:w="60"/><text x="7.8246%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (35 samples, 0.03%)</title><rect x="7.5948%" y="613" width="0.0282%" height="15" fill="rgb(210,195,18)" fg:x="9412" fg:w="35"/><text x="7.8448%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.02%)</title><rect x="7.5996%" y="597" width="0.0234%" height="15" fill="rgb(249,80,12)" fg:x="9418" fg:w="29"/><text x="7.8496%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (29 samples, 0.02%)</title><rect x="7.5996%" y="581" width="0.0234%" height="15" fill="rgb(221,65,9)" fg:x="9418" fg:w="29"/><text x="7.8496%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (28 samples, 0.02%)</title><rect x="7.6004%" y="565" width="0.0226%" height="15" fill="rgb(235,49,36)" fg:x="9419" fg:w="28"/><text x="7.8504%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (28 samples, 0.02%)</title><rect x="7.6004%" y="549" width="0.0226%" height="15" fill="rgb(225,32,20)" fg:x="9419" fg:w="28"/><text x="7.8504%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (127 samples, 0.10%)</title><rect x="7.5657%" y="661" width="0.1025%" height="15" fill="rgb(215,141,46)" fg:x="9376" fg:w="127"/><text x="7.8157%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (116 samples, 0.09%)</title><rect x="7.5746%" y="645" width="0.0936%" height="15" fill="rgb(250,160,47)" fg:x="9387" fg:w="116"/><text x="7.8246%" y="655.50"></text></g><g><title>sn_rust_dealloc (56 samples, 0.05%)</title><rect x="7.6230%" y="629" width="0.0452%" height="15" fill="rgb(216,222,40)" fg:x="9447" fg:w="56"/><text x="7.8730%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (45 samples, 0.04%)</title><rect x="7.6682%" y="661" width="0.0363%" height="15" fill="rgb(234,217,39)" fg:x="9503" fg:w="45"/><text x="7.9182%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (36 samples, 0.03%)</title><rect x="7.6755%" y="645" width="0.0290%" height="15" fill="rgb(207,178,40)" fg:x="9512" fg:w="36"/><text x="7.9255%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (22 samples, 0.02%)</title><rect x="7.6868%" y="629" width="0.0178%" height="15" fill="rgb(221,136,13)" fg:x="9526" fg:w="22"/><text x="7.9368%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (22 samples, 0.02%)</title><rect x="7.6868%" y="613" width="0.0178%" height="15" fill="rgb(249,199,10)" fg:x="9526" fg:w="22"/><text x="7.9368%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (17 samples, 0.01%)</title><rect x="7.6908%" y="597" width="0.0137%" height="15" fill="rgb(249,222,13)" fg:x="9531" fg:w="17"/><text x="7.9408%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (17 samples, 0.01%)</title><rect x="7.6908%" y="581" width="0.0137%" height="15" fill="rgb(244,185,38)" fg:x="9531" fg:w="17"/><text x="7.9408%" y="591.50"></text></g><g><title>sn_rust_dealloc (42 samples, 0.03%)</title><rect x="7.7045%" y="661" width="0.0339%" height="15" fill="rgb(236,202,9)" fg:x="9548" fg:w="42"/><text x="7.9545%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (2,159 samples, 1.74%)</title><rect x="6.0092%" y="677" width="1.7422%" height="15" fill="rgb(250,229,37)" fg:x="7447" fg:w="2159"/><text x="6.2592%" y="687.50"></text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (16 samples, 0.01%)</title><rect x="7.7384%" y="661" width="0.0129%" height="15" fill="rgb(206,174,23)" fg:x="9590" fg:w="16"/><text x="7.9884%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (97 samples, 0.08%)</title><rect x="7.7860%" y="661" width="0.0783%" height="15" fill="rgb(211,33,43)" fg:x="9649" fg:w="97"/><text x="8.0360%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (97 samples, 0.08%)</title><rect x="7.7860%" y="645" width="0.0783%" height="15" fill="rgb(245,58,50)" fg:x="9649" fg:w="97"/><text x="8.0360%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (97 samples, 0.08%)</title><rect x="7.7860%" y="629" width="0.0783%" height="15" fill="rgb(244,68,36)" fg:x="9649" fg:w="97"/><text x="8.0360%" y="639.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.08%)</title><rect x="7.7868%" y="613" width="0.0775%" height="15" fill="rgb(232,229,15)" fg:x="9650" fg:w="96"/><text x="8.0368%" y="623.50"></text></g><g><title>__rg_alloc (96 samples, 0.08%)</title><rect x="7.7868%" y="597" width="0.0775%" height="15" fill="rgb(254,30,23)" fg:x="9650" fg:w="96"/><text x="8.0368%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (96 samples, 0.08%)</title><rect x="7.7868%" y="581" width="0.0775%" height="15" fill="rgb(235,160,14)" fg:x="9650" fg:w="96"/><text x="8.0368%" y="591.50"></text></g><g><title>sn_rust_alloc (96 samples, 0.08%)</title><rect x="7.7868%" y="565" width="0.0775%" height="15" fill="rgb(212,155,44)" fg:x="9650" fg:w="96"/><text x="8.0368%" y="575.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (54 samples, 0.04%)</title><rect x="7.8207%" y="549" width="0.0436%" height="15" fill="rgb(226,2,50)" fg:x="9692" fg:w="54"/><text x="8.0707%" y="559.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (160 samples, 0.13%)</title><rect x="7.7513%" y="677" width="0.1291%" height="15" fill="rgb(234,177,6)" fg:x="9606" fg:w="160"/><text x="8.0013%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (152 samples, 0.12%)</title><rect x="8.2783%" y="661" width="0.1227%" height="15" fill="rgb(217,24,9)" fg:x="10259" fg:w="152"/><text x="8.5283%" y="671.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (30 samples, 0.02%)</title><rect x="8.4606%" y="549" width="0.0242%" height="15" fill="rgb(220,13,46)" fg:x="10485" fg:w="30"/><text x="8.7106%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (105 samples, 0.08%)</title><rect x="8.4009%" y="661" width="0.0847%" height="15" fill="rgb(239,221,27)" fg:x="10411" fg:w="105"/><text x="8.6509%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (105 samples, 0.08%)</title><rect x="8.4009%" y="645" width="0.0847%" height="15" fill="rgb(222,198,25)" fg:x="10411" fg:w="105"/><text x="8.6509%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (105 samples, 0.08%)</title><rect x="8.4009%" y="629" width="0.0847%" height="15" fill="rgb(211,99,13)" fg:x="10411" fg:w="105"/><text x="8.6509%" y="639.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.08%)</title><rect x="8.4041%" y="613" width="0.0815%" height="15" fill="rgb(232,111,31)" fg:x="10415" fg:w="101"/><text x="8.6541%" y="623.50"></text></g><g><title>__rg_alloc (101 samples, 0.08%)</title><rect x="8.4041%" y="597" width="0.0815%" height="15" fill="rgb(245,82,37)" fg:x="10415" fg:w="101"/><text x="8.6541%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (101 samples, 0.08%)</title><rect x="8.4041%" y="581" width="0.0815%" height="15" fill="rgb(227,149,46)" fg:x="10415" fg:w="101"/><text x="8.6541%" y="591.50"></text></g><g><title>sn_rust_alloc (85 samples, 0.07%)</title><rect x="8.4171%" y="565" width="0.0686%" height="15" fill="rgb(218,36,50)" fg:x="10431" fg:w="85"/><text x="8.6671%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (168 samples, 0.14%)</title><rect x="8.4856%" y="661" width="0.1356%" height="15" fill="rgb(226,80,48)" fg:x="10516" fg:w="168"/><text x="8.7356%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (159 samples, 0.13%)</title><rect x="8.4929%" y="645" width="0.1283%" height="15" fill="rgb(238,224,15)" fg:x="10525" fg:w="159"/><text x="8.7429%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (159 samples, 0.13%)</title><rect x="8.4929%" y="629" width="0.1283%" height="15" fill="rgb(241,136,10)" fg:x="10525" fg:w="159"/><text x="8.7429%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (159 samples, 0.13%)</title><rect x="8.4929%" y="613" width="0.1283%" height="15" fill="rgb(208,32,45)" fg:x="10525" fg:w="159"/><text x="8.7429%" y="623.50"></text></g><g><title>alloc::alloc::alloc (159 samples, 0.13%)</title><rect x="8.4929%" y="597" width="0.1283%" height="15" fill="rgb(207,135,9)" fg:x="10525" fg:w="159"/><text x="8.7429%" y="607.50"></text></g><g><title>__rg_alloc (159 samples, 0.13%)</title><rect x="8.4929%" y="581" width="0.1283%" height="15" fill="rgb(206,86,44)" fg:x="10525" fg:w="159"/><text x="8.7429%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (159 samples, 0.13%)</title><rect x="8.4929%" y="565" width="0.1283%" height="15" fill="rgb(245,177,15)" fg:x="10525" fg:w="159"/><text x="8.7429%" y="575.50"></text></g><g><title>sn_rust_alloc (158 samples, 0.13%)</title><rect x="8.4937%" y="549" width="0.1275%" height="15" fill="rgb(206,64,50)" fg:x="10526" fg:w="158"/><text x="8.7437%" y="559.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (110 samples, 0.09%)</title><rect x="8.5324%" y="533" width="0.0888%" height="15" fill="rgb(234,36,40)" fg:x="10574" fg:w="110"/><text x="8.7824%" y="543.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (16 samples, 0.01%)</title><rect x="8.6212%" y="661" width="0.0129%" height="15" fill="rgb(213,64,8)" fg:x="10684" fg:w="16"/><text x="8.8712%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.01%)</title><rect x="8.6212%" y="645" width="0.0129%" height="15" fill="rgb(210,75,36)" fg:x="10684" fg:w="16"/><text x="8.8712%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (16 samples, 0.01%)</title><rect x="8.6212%" y="629" width="0.0129%" height="15" fill="rgb(229,88,21)" fg:x="10684" fg:w="16"/><text x="8.8712%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (13 samples, 0.01%)</title><rect x="8.9496%" y="645" width="0.0105%" height="15" fill="rgb(252,204,47)" fg:x="11091" fg:w="13"/><text x="9.1996%" y="655.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (205 samples, 0.17%)</title><rect x="8.9884%" y="597" width="0.1654%" height="15" fill="rgb(208,77,27)" fg:x="11139" fg:w="205"/><text x="9.2384%" y="607.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (163 samples, 0.13%)</title><rect x="9.0222%" y="581" width="0.1315%" height="15" fill="rgb(221,76,26)" fg:x="11181" fg:w="163"/><text x="9.2722%" y="591.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (160 samples, 0.13%)</title><rect x="9.0247%" y="565" width="0.1291%" height="15" fill="rgb(225,139,18)" fg:x="11184" fg:w="160"/><text x="9.2747%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="9.1417%" y="549" width="0.0121%" height="15" fill="rgb(230,137,11)" fg:x="11329" fg:w="15"/><text x="9.3917%" y="559.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (249 samples, 0.20%)</title><rect x="8.9884%" y="613" width="0.2009%" height="15" fill="rgb(212,28,1)" fg:x="11139" fg:w="249"/><text x="9.2384%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (44 samples, 0.04%)</title><rect x="9.1538%" y="597" width="0.0355%" height="15" fill="rgb(248,164,17)" fg:x="11344" fg:w="44"/><text x="9.4038%" y="607.50"></text></g><g><title>core::ptr::write (44 samples, 0.04%)</title><rect x="9.1538%" y="581" width="0.0355%" height="15" fill="rgb(222,171,42)" fg:x="11344" fg:w="44"/><text x="9.4038%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (329 samples, 0.27%)</title><rect x="8.9601%" y="645" width="0.2655%" height="15" fill="rgb(243,84,45)" fg:x="11104" fg:w="329"/><text x="9.2101%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (303 samples, 0.24%)</title><rect x="8.9811%" y="629" width="0.2445%" height="15" fill="rgb(252,49,23)" fg:x="11130" fg:w="303"/><text x="9.2311%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (45 samples, 0.04%)</title><rect x="9.1893%" y="613" width="0.0363%" height="15" fill="rgb(215,19,7)" fg:x="11388" fg:w="45"/><text x="9.4393%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (45 samples, 0.04%)</title><rect x="9.1893%" y="597" width="0.0363%" height="15" fill="rgb(238,81,41)" fg:x="11388" fg:w="45"/><text x="9.4393%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.04%)</title><rect x="9.1893%" y="581" width="0.0363%" height="15" fill="rgb(210,199,37)" fg:x="11388" fg:w="45"/><text x="9.4393%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.04%)</title><rect x="9.1893%" y="565" width="0.0363%" height="15" fill="rgb(244,192,49)" fg:x="11388" fg:w="45"/><text x="9.4393%" y="575.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.04%)</title><rect x="9.1901%" y="549" width="0.0355%" height="15" fill="rgb(226,211,11)" fg:x="11389" fg:w="44"/><text x="9.4401%" y="559.50"></text></g><g><title>__rg_alloc (44 samples, 0.04%)</title><rect x="9.1901%" y="533" width="0.0355%" height="15" fill="rgb(236,162,54)" fg:x="11389" fg:w="44"/><text x="9.4401%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (44 samples, 0.04%)</title><rect x="9.1901%" y="517" width="0.0355%" height="15" fill="rgb(220,229,9)" fg:x="11389" fg:w="44"/><text x="9.4401%" y="527.50"></text></g><g><title>sn_rust_alloc (44 samples, 0.04%)</title><rect x="9.1901%" y="501" width="0.0355%" height="15" fill="rgb(250,87,22)" fg:x="11389" fg:w="44"/><text x="9.4401%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (4,257 samples, 3.44%)</title><rect x="6.0084%" y="773" width="3.4351%" height="15" fill="rgb(239,43,17)" fg:x="7446" fg:w="4257"/><text x="6.2584%" y="783.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,257 samples, 3.44%)</title><rect x="6.0084%" y="757" width="3.4351%" height="15" fill="rgb(231,177,25)" fg:x="7446" fg:w="4257"/><text x="6.2584%" y="767.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (4,257 samples, 3.44%)</title><rect x="6.0084%" y="741" width="3.4351%" height="15" fill="rgb(219,179,1)" fg:x="7446" fg:w="4257"/><text x="6.2584%" y="751.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,257 samples, 3.44%)</title><rect x="6.0084%" y="725" width="3.4351%" height="15" fill="rgb(238,219,53)" fg:x="7446" fg:w="4257"/><text x="6.2584%" y="735.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (4,257 samples, 3.44%)</title><rect x="6.0084%" y="709" width="3.4351%" height="15" fill="rgb(232,167,36)" fg:x="7446" fg:w="4257"/><text x="6.2584%" y="719.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,256 samples, 3.43%)</title><rect x="6.0092%" y="693" width="3.4343%" height="15" fill="rgb(244,19,51)" fg:x="7447" fg:w="4256"/><text x="6.2592%" y="703.50">tre..</text></g><g><title>tremor_script::srs::EventPayload::try_new (1,937 samples, 1.56%)</title><rect x="7.8804%" y="677" width="1.5630%" height="15" fill="rgb(224,6,22)" fg:x="9766" fg:w="1937"/><text x="8.1304%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,003 samples, 0.81%)</title><rect x="8.6341%" y="661" width="0.8093%" height="15" fill="rgb(224,145,5)" fg:x="10700" fg:w="1003"/><text x="8.8841%" y="671.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (270 samples, 0.22%)</title><rect x="9.2256%" y="645" width="0.2179%" height="15" fill="rgb(234,130,49)" fg:x="11433" fg:w="270"/><text x="9.4756%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (57 samples, 0.05%)</title><rect x="9.6121%" y="597" width="0.0460%" height="15" fill="rgb(254,6,2)" fg:x="11912" fg:w="57"/><text x="9.8621%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (57 samples, 0.05%)</title><rect x="9.6121%" y="581" width="0.0460%" height="15" fill="rgb(208,96,46)" fg:x="11912" fg:w="57"/><text x="9.8621%" y="591.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (63 samples, 0.05%)</title><rect x="9.6097%" y="629" width="0.0508%" height="15" fill="rgb(239,3,39)" fg:x="11909" fg:w="63"/><text x="9.8597%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (60 samples, 0.05%)</title><rect x="9.6121%" y="613" width="0.0484%" height="15" fill="rgb(233,210,1)" fg:x="11912" fg:w="60"/><text x="9.8621%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="9.6605%" y="629" width="0.0121%" height="15" fill="rgb(244,137,37)" fg:x="11972" fg:w="15"/><text x="9.9105%" y="639.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="9.6605%" y="613" width="0.0121%" height="15" fill="rgb(240,136,2)" fg:x="11972" fg:w="15"/><text x="9.9105%" y="623.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="9.6621%" y="597" width="0.0105%" height="15" fill="rgb(239,18,37)" fg:x="11974" fg:w="13"/><text x="9.9121%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (17 samples, 0.01%)</title><rect x="9.6726%" y="629" width="0.0137%" height="15" fill="rgb(218,185,22)" fg:x="11987" fg:w="17"/><text x="9.9226%" y="639.50"></text></g><g><title>core::mem::drop (54 samples, 0.04%)</title><rect x="9.6863%" y="629" width="0.0436%" height="15" fill="rgb(225,218,4)" fg:x="12004" fg:w="54"/><text x="9.9363%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (54 samples, 0.04%)</title><rect x="9.6863%" y="613" width="0.0436%" height="15" fill="rgb(230,182,32)" fg:x="12004" fg:w="54"/><text x="9.9363%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (50 samples, 0.04%)</title><rect x="9.6896%" y="597" width="0.0403%" height="15" fill="rgb(242,56,43)" fg:x="12008" fg:w="50"/><text x="9.9396%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.04%)</title><rect x="9.6896%" y="581" width="0.0403%" height="15" fill="rgb(233,99,24)" fg:x="12008" fg:w="50"/><text x="9.9396%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.03%)</title><rect x="9.6968%" y="565" width="0.0331%" height="15" fill="rgb(234,209,42)" fg:x="12017" fg:w="41"/><text x="9.9468%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (41 samples, 0.03%)</title><rect x="9.6968%" y="549" width="0.0331%" height="15" fill="rgb(227,7,12)" fg:x="12017" fg:w="41"/><text x="9.9468%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (41 samples, 0.03%)</title><rect x="9.6968%" y="533" width="0.0331%" height="15" fill="rgb(245,203,43)" fg:x="12017" fg:w="41"/><text x="9.9468%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (41 samples, 0.03%)</title><rect x="9.6968%" y="517" width="0.0331%" height="15" fill="rgb(238,205,33)" fg:x="12017" fg:w="41"/><text x="9.9468%" y="527.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="9.7299%" y="613" width="0.0105%" height="15" fill="rgb(231,56,7)" fg:x="12058" fg:w="13"/><text x="9.9799%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (99 samples, 0.08%)</title><rect x="9.7299%" y="629" width="0.0799%" height="15" fill="rgb(244,186,29)" fg:x="12058" fg:w="99"/><text x="9.9799%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (86 samples, 0.07%)</title><rect x="9.7404%" y="613" width="0.0694%" height="15" fill="rgb(234,111,31)" fg:x="12071" fg:w="86"/><text x="9.9904%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.07%)</title><rect x="9.7404%" y="597" width="0.0694%" height="15" fill="rgb(241,149,10)" fg:x="12071" fg:w="86"/><text x="9.9904%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (83 samples, 0.07%)</title><rect x="9.7428%" y="581" width="0.0670%" height="15" fill="rgb(249,206,44)" fg:x="12074" fg:w="83"/><text x="9.9928%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (83 samples, 0.07%)</title><rect x="9.7428%" y="565" width="0.0670%" height="15" fill="rgb(251,153,30)" fg:x="12074" fg:w="83"/><text x="9.9928%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (83 samples, 0.07%)</title><rect x="9.7428%" y="549" width="0.0670%" height="15" fill="rgb(239,152,38)" fg:x="12074" fg:w="83"/><text x="9.9928%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (83 samples, 0.07%)</title><rect x="9.7428%" y="533" width="0.0670%" height="15" fill="rgb(249,139,47)" fg:x="12074" fg:w="83"/><text x="9.9928%" y="543.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (27 samples, 0.02%)</title><rect x="9.8163%" y="597" width="0.0218%" height="15" fill="rgb(244,64,35)" fg:x="12165" fg:w="27"/><text x="10.0663%" y="607.50"></text></g><g><title>std::sync::poison::Flag::borrow (27 samples, 0.02%)</title><rect x="9.8163%" y="581" width="0.0218%" height="15" fill="rgb(216,46,15)" fg:x="12165" fg:w="27"/><text x="10.0663%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (117 samples, 0.09%)</title><rect x="9.8445%" y="565" width="0.0944%" height="15" fill="rgb(250,74,19)" fg:x="12200" fg:w="117"/><text x="10.0945%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (117 samples, 0.09%)</title><rect x="9.8445%" y="549" width="0.0944%" height="15" fill="rgb(249,42,33)" fg:x="12200" fg:w="117"/><text x="10.0945%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (58 samples, 0.05%)</title><rect x="9.9454%" y="549" width="0.0468%" height="15" fill="rgb(242,149,17)" fg:x="12325" fg:w="58"/><text x="10.1954%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (58 samples, 0.05%)</title><rect x="9.9454%" y="533" width="0.0468%" height="15" fill="rgb(244,29,21)" fg:x="12325" fg:w="58"/><text x="10.1954%" y="543.50"></text></g><g><title>core::hint::spin_loop (1,628 samples, 1.31%)</title><rect x="10.0043%" y="533" width="1.3137%" height="15" fill="rgb(220,130,37)" fg:x="12398" fg:w="1628"/><text x="10.2543%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,628 samples, 1.31%)</title><rect x="10.0043%" y="517" width="1.3137%" height="15" fill="rgb(211,67,2)" fg:x="12398" fg:w="1628"/><text x="10.2543%" y="527.50"></text></g><g><title>event_listener::Inner::lock (1,940 samples, 1.57%)</title><rect x="9.8122%" y="629" width="1.5654%" height="15" fill="rgb(235,68,52)" fg:x="12160" fg:w="1940"/><text x="10.0622%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,935 samples, 1.56%)</title><rect x="9.8163%" y="613" width="1.5614%" height="15" fill="rgb(246,142,3)" fg:x="12165" fg:w="1935"/><text x="10.0663%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,908 samples, 1.54%)</title><rect x="9.8380%" y="597" width="1.5396%" height="15" fill="rgb(241,25,7)" fg:x="12192" fg:w="1908"/><text x="10.0880%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,908 samples, 1.54%)</title><rect x="9.8380%" y="581" width="1.5396%" height="15" fill="rgb(242,119,39)" fg:x="12192" fg:w="1908"/><text x="10.0880%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (1,783 samples, 1.44%)</title><rect x="9.9389%" y="565" width="1.4388%" height="15" fill="rgb(241,98,45)" fg:x="12317" fg:w="1783"/><text x="10.1889%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (1,713 samples, 1.38%)</title><rect x="9.9954%" y="549" width="1.3823%" height="15" fill="rgb(254,28,30)" fg:x="12387" fg:w="1713"/><text x="10.2454%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (74 samples, 0.06%)</title><rect x="11.3180%" y="533" width="0.0597%" height="15" fill="rgb(241,142,54)" fg:x="14026" fg:w="74"/><text x="11.5680%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (74 samples, 0.06%)</title><rect x="11.3180%" y="517" width="0.0597%" height="15" fill="rgb(222,85,15)" fg:x="14026" fg:w="74"/><text x="11.5680%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,289 samples, 1.85%)</title><rect x="9.5919%" y="645" width="1.8471%" height="15" fill="rgb(210,85,47)" fg:x="11887" fg:w="2289"/><text x="9.8419%" y="655.50">&lt;..</text></g><g><title>event_listener::List::remove (76 samples, 0.06%)</title><rect x="11.3777%" y="629" width="0.0613%" height="15" fill="rgb(224,206,25)" fg:x="14100" fg:w="76"/><text x="11.6277%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (39 samples, 0.03%)</title><rect x="11.4075%" y="613" width="0.0315%" height="15" fill="rgb(243,201,19)" fg:x="14137" fg:w="39"/><text x="11.6575%" y="623.50"></text></g><g><title>core::mem::replace (39 samples, 0.03%)</title><rect x="11.4075%" y="597" width="0.0315%" height="15" fill="rgb(236,59,4)" fg:x="14137" fg:w="39"/><text x="11.6575%" y="607.50"></text></g><g><title>core::ptr::read (39 samples, 0.03%)</title><rect x="11.4075%" y="581" width="0.0315%" height="15" fill="rgb(254,179,45)" fg:x="14137" fg:w="39"/><text x="11.6575%" y="591.50"></text></g><g><title>concurrent_queue::full_fence (164 samples, 0.13%)</title><rect x="11.6327%" y="597" width="0.1323%" height="15" fill="rgb(226,14,10)" fg:x="14416" fg:w="164"/><text x="11.8827%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (158 samples, 0.13%)</title><rect x="11.6375%" y="581" width="0.1275%" height="15" fill="rgb(244,27,41)" fg:x="14422" fg:w="158"/><text x="11.8875%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (158 samples, 0.13%)</title><rect x="11.6375%" y="565" width="0.1275%" height="15" fill="rgb(235,35,32)" fg:x="14422" fg:w="158"/><text x="11.8875%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (158 samples, 0.13%)</title><rect x="11.6375%" y="549" width="0.1275%" height="15" fill="rgb(218,68,31)" fg:x="14422" fg:w="158"/><text x="11.8875%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (292 samples, 0.24%)</title><rect x="11.7723%" y="597" width="0.2356%" height="15" fill="rgb(207,120,37)" fg:x="14589" fg:w="292"/><text x="12.0223%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (292 samples, 0.24%)</title><rect x="11.7723%" y="581" width="0.2356%" height="15" fill="rgb(227,98,0)" fg:x="14589" fg:w="292"/><text x="12.0223%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (470 samples, 0.38%)</title><rect x="12.0079%" y="597" width="0.3793%" height="15" fill="rgb(207,7,3)" fg:x="14881" fg:w="470"/><text x="12.2579%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (467 samples, 0.38%)</title><rect x="12.0103%" y="581" width="0.3768%" height="15" fill="rgb(206,98,19)" fg:x="14884" fg:w="467"/><text x="12.2603%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,139 samples, 0.92%)</title><rect x="11.4688%" y="629" width="0.9191%" height="15" fill="rgb(217,5,26)" fg:x="14213" fg:w="1139"/><text x="11.7188%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,104 samples, 0.89%)</title><rect x="11.4971%" y="613" width="0.8908%" height="15" fill="rgb(235,190,38)" fg:x="14248" fg:w="1104"/><text x="11.7471%" y="623.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,491 samples, 2.01%)</title><rect x="11.4390%" y="645" width="2.0101%" height="15" fill="rgb(247,86,24)" fg:x="14176" fg:w="2491"/><text x="11.6890%" y="655.50">a..</text></g><g><title>event_listener::Event::notify (1,315 samples, 1.06%)</title><rect x="12.3879%" y="629" width="1.0611%" height="15" fill="rgb(205,101,16)" fg:x="15352" fg:w="1315"/><text x="12.6379%" y="639.50"></text></g><g><title>event_listener::full_fence (1,300 samples, 1.05%)</title><rect x="12.4000%" y="613" width="1.0490%" height="15" fill="rgb(246,168,33)" fg:x="15367" fg:w="1300"/><text x="12.6500%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,298 samples, 1.05%)</title><rect x="12.4017%" y="597" width="1.0474%" height="15" fill="rgb(231,114,1)" fg:x="15369" fg:w="1298"/><text x="12.6517%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,298 samples, 1.05%)</title><rect x="12.4017%" y="581" width="1.0474%" height="15" fill="rgb(207,184,53)" fg:x="15369" fg:w="1298"/><text x="12.6517%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.01%)</title><rect x="13.4490%" y="645" width="0.0129%" height="15" fill="rgb(224,95,51)" fg:x="16667" fg:w="16"/><text x="13.6990%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (17 samples, 0.01%)</title><rect x="13.4741%" y="597" width="0.0137%" height="15" fill="rgb(212,188,45)" fg:x="16698" fg:w="17"/><text x="13.7241%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="13.4765%" y="581" width="0.0113%" height="15" fill="rgb(223,154,38)" fg:x="16701" fg:w="14"/><text x="13.7265%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="13.4765%" y="565" width="0.0113%" height="15" fill="rgb(251,22,52)" fg:x="16701" fg:w="14"/><text x="13.7265%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="13.4765%" y="549" width="0.0113%" height="15" fill="rgb(229,209,22)" fg:x="16701" fg:w="14"/><text x="13.7265%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (14 samples, 0.01%)</title><rect x="13.4765%" y="533" width="0.0113%" height="15" fill="rgb(234,138,34)" fg:x="16701" fg:w="14"/><text x="13.7265%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (14 samples, 0.01%)</title><rect x="13.4765%" y="517" width="0.0113%" height="15" fill="rgb(212,95,11)" fg:x="16701" fg:w="14"/><text x="13.7265%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.01%)</title><rect x="13.4765%" y="501" width="0.0113%" height="15" fill="rgb(240,179,47)" fg:x="16701" fg:w="14"/><text x="13.7265%" y="511.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="13.4902%" y="565" width="0.0121%" height="15" fill="rgb(240,163,11)" fg:x="16718" fg:w="15"/><text x="13.7402%" y="575.50"></text></g><g><title>std::sync::poison::Flag::borrow (15 samples, 0.01%)</title><rect x="13.4902%" y="549" width="0.0121%" height="15" fill="rgb(236,37,12)" fg:x="16718" fg:w="15"/><text x="13.7402%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (52 samples, 0.04%)</title><rect x="13.5031%" y="533" width="0.0420%" height="15" fill="rgb(232,164,16)" fg:x="16734" fg:w="52"/><text x="13.7531%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.04%)</title><rect x="13.5031%" y="517" width="0.0420%" height="15" fill="rgb(244,205,15)" fg:x="16734" fg:w="52"/><text x="13.7531%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (28 samples, 0.02%)</title><rect x="13.5459%" y="517" width="0.0226%" height="15" fill="rgb(223,117,47)" fg:x="16787" fg:w="28"/><text x="13.7959%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.02%)</title><rect x="13.5459%" y="501" width="0.0226%" height="15" fill="rgb(244,107,35)" fg:x="16787" fg:w="28"/><text x="13.7959%" y="511.50"></text></g><g><title>core::hint::spin_loop (44 samples, 0.04%)</title><rect x="13.5709%" y="501" width="0.0355%" height="15" fill="rgb(205,140,8)" fg:x="16818" fg:w="44"/><text x="13.8209%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (44 samples, 0.04%)</title><rect x="13.5709%" y="485" width="0.0355%" height="15" fill="rgb(228,84,46)" fg:x="16818" fg:w="44"/><text x="13.8209%" y="495.50"></text></g><g><title>event_listener::Inner::lock (185 samples, 0.15%)</title><rect x="13.4894%" y="597" width="0.1493%" height="15" fill="rgb(254,188,9)" fg:x="16717" fg:w="185"/><text x="13.7394%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (184 samples, 0.15%)</title><rect x="13.4902%" y="581" width="0.1485%" height="15" fill="rgb(206,112,54)" fg:x="16718" fg:w="184"/><text x="13.7402%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (169 samples, 0.14%)</title><rect x="13.5023%" y="565" width="0.1364%" height="15" fill="rgb(216,84,49)" fg:x="16733" fg:w="169"/><text x="13.7523%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (169 samples, 0.14%)</title><rect x="13.5023%" y="549" width="0.1364%" height="15" fill="rgb(214,194,35)" fg:x="16733" fg:w="169"/><text x="13.7523%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (116 samples, 0.09%)</title><rect x="13.5451%" y="533" width="0.0936%" height="15" fill="rgb(249,28,3)" fg:x="16786" fg:w="116"/><text x="13.7951%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (87 samples, 0.07%)</title><rect x="13.5685%" y="517" width="0.0702%" height="15" fill="rgb(222,56,52)" fg:x="16815" fg:w="87"/><text x="13.8185%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (40 samples, 0.03%)</title><rect x="13.6064%" y="501" width="0.0323%" height="15" fill="rgb(245,217,50)" fg:x="16862" fg:w="40"/><text x="13.8564%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.03%)</title><rect x="13.6064%" y="485" width="0.0323%" height="15" fill="rgb(213,201,24)" fg:x="16862" fg:w="40"/><text x="13.8564%" y="495.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (233 samples, 0.19%)</title><rect x="13.4724%" y="613" width="0.1880%" height="15" fill="rgb(248,116,28)" fg:x="16696" fg:w="233"/><text x="13.7224%" y="623.50"></text></g><g><title>event_listener::List::remove (27 samples, 0.02%)</title><rect x="13.6387%" y="597" width="0.0218%" height="15" fill="rgb(219,72,43)" fg:x="16902" fg:w="27"/><text x="13.8887%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (344 samples, 0.28%)</title><rect x="13.4620%" y="645" width="0.2776%" height="15" fill="rgb(209,138,14)" fg:x="16683" fg:w="344"/><text x="13.7120%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (332 samples, 0.27%)</title><rect x="13.4716%" y="629" width="0.2679%" height="15" fill="rgb(222,18,33)" fg:x="16695" fg:w="332"/><text x="13.7216%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (98 samples, 0.08%)</title><rect x="13.6605%" y="613" width="0.0791%" height="15" fill="rgb(213,199,7)" fg:x="16929" fg:w="98"/><text x="13.9105%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.08%)</title><rect x="13.6605%" y="597" width="0.0791%" height="15" fill="rgb(250,110,10)" fg:x="16929" fg:w="98"/><text x="13.9105%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (94 samples, 0.08%)</title><rect x="13.6637%" y="581" width="0.0759%" height="15" fill="rgb(248,123,6)" fg:x="16933" fg:w="94"/><text x="13.9137%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (94 samples, 0.08%)</title><rect x="13.6637%" y="565" width="0.0759%" height="15" fill="rgb(206,91,31)" fg:x="16933" fg:w="94"/><text x="13.9137%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (82 samples, 0.07%)</title><rect x="13.7525%" y="629" width="0.0662%" height="15" fill="rgb(211,154,13)" fg:x="17043" fg:w="82"/><text x="14.0025%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (82 samples, 0.07%)</title><rect x="13.7525%" y="613" width="0.0662%" height="15" fill="rgb(225,148,7)" fg:x="17043" fg:w="82"/><text x="14.0025%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (82 samples, 0.07%)</title><rect x="13.7525%" y="597" width="0.0662%" height="15" fill="rgb(220,160,43)" fg:x="17043" fg:w="82"/><text x="14.0025%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (99 samples, 0.08%)</title><rect x="13.8186%" y="629" width="0.0799%" height="15" fill="rgb(213,52,39)" fg:x="17125" fg:w="99"/><text x="14.0686%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (94 samples, 0.08%)</title><rect x="13.8227%" y="613" width="0.0759%" height="15" fill="rgb(243,137,7)" fg:x="17130" fg:w="94"/><text x="14.0727%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.08%)</title><rect x="13.8227%" y="597" width="0.0759%" height="15" fill="rgb(230,79,13)" fg:x="17130" fg:w="94"/><text x="14.0727%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (92 samples, 0.07%)</title><rect x="13.8243%" y="581" width="0.0742%" height="15" fill="rgb(247,105,23)" fg:x="17132" fg:w="92"/><text x="14.0743%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (92 samples, 0.07%)</title><rect x="13.8243%" y="565" width="0.0742%" height="15" fill="rgb(223,179,41)" fg:x="17132" fg:w="92"/><text x="14.0743%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (92 samples, 0.07%)</title><rect x="13.8243%" y="549" width="0.0742%" height="15" fill="rgb(218,9,34)" fg:x="17132" fg:w="92"/><text x="14.0743%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (92 samples, 0.07%)</title><rect x="13.8243%" y="533" width="0.0742%" height="15" fill="rgb(222,106,8)" fg:x="17132" fg:w="92"/><text x="14.0743%" y="543.50"></text></g><g><title>event_listener::Inner::lock (65 samples, 0.05%)</title><rect x="13.9001%" y="629" width="0.0525%" height="15" fill="rgb(211,220,0)" fg:x="17226" fg:w="65"/><text x="14.1501%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.05%)</title><rect x="13.9025%" y="613" width="0.0500%" height="15" fill="rgb(229,52,16)" fg:x="17229" fg:w="62"/><text x="14.1525%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (58 samples, 0.05%)</title><rect x="13.9058%" y="597" width="0.0468%" height="15" fill="rgb(212,155,18)" fg:x="17233" fg:w="58"/><text x="14.1558%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (58 samples, 0.05%)</title><rect x="13.9058%" y="581" width="0.0468%" height="15" fill="rgb(242,21,14)" fg:x="17233" fg:w="58"/><text x="14.1558%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (57 samples, 0.05%)</title><rect x="13.9066%" y="565" width="0.0460%" height="15" fill="rgb(222,19,48)" fg:x="17234" fg:w="57"/><text x="14.1566%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (57 samples, 0.05%)</title><rect x="13.9066%" y="549" width="0.0460%" height="15" fill="rgb(232,45,27)" fg:x="17234" fg:w="57"/><text x="14.1566%" y="559.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5,554 samples, 4.48%)</title><rect x="9.5476%" y="661" width="4.4817%" height="15" fill="rgb(249,103,42)" fg:x="11832" fg:w="5554"/><text x="9.7976%" y="671.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (359 samples, 0.29%)</title><rect x="13.7395%" y="645" width="0.2897%" height="15" fill="rgb(246,81,33)" fg:x="17027" fg:w="359"/><text x="13.9895%" y="655.50"></text></g><g><title>event_listener::full_fence (86 samples, 0.07%)</title><rect x="13.9598%" y="629" width="0.0694%" height="15" fill="rgb(252,33,42)" fg:x="17300" fg:w="86"/><text x="14.2098%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (86 samples, 0.07%)</title><rect x="13.9598%" y="613" width="0.0694%" height="15" fill="rgb(209,212,41)" fg:x="17300" fg:w="86"/><text x="14.2098%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (86 samples, 0.07%)</title><rect x="13.9598%" y="597" width="0.0694%" height="15" fill="rgb(207,154,6)" fg:x="17300" fg:w="86"/><text x="14.2098%" y="607.50"></text></g><g><title>[libc-2.31.so] (319 samples, 0.26%)</title><rect x="14.0397%" y="645" width="0.2574%" height="15" fill="rgb(223,64,47)" fg:x="17399" fg:w="319"/><text x="14.2897%" y="655.50"></text></g><g><title>[libc-2.31.so] (1,472 samples, 1.19%)</title><rect x="14.3125%" y="613" width="1.1878%" height="15" fill="rgb(211,161,38)" fg:x="17737" fg:w="1472"/><text x="14.5625%" y="623.50"></text></g><g><title>sn_rust_dealloc (124 samples, 0.10%)</title><rect x="15.5075%" y="533" width="0.1001%" height="15" fill="rgb(219,138,40)" fg:x="19218" fg:w="124"/><text x="15.7575%" y="543.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (7,904 samples, 6.38%)</title><rect x="9.4919%" y="693" width="6.3779%" height="15" fill="rgb(241,228,46)" fg:x="11763" fg:w="7904"/><text x="9.7419%" y="703.50">&lt;async_s..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (7,873 samples, 6.35%)</title><rect x="9.5169%" y="677" width="6.3529%" height="15" fill="rgb(223,209,38)" fg:x="11794" fg:w="7873"/><text x="9.7669%" y="687.50">&lt;async_s..</text></g><g><title>core::option::Option&lt;T&gt;::map (2,281 samples, 1.84%)</title><rect x="14.0292%" y="661" width="1.8406%" height="15" fill="rgb(236,164,45)" fg:x="17386" fg:w="2281"/><text x="14.2792%" y="671.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,949 samples, 1.57%)</title><rect x="14.2971%" y="645" width="1.5727%" height="15" fill="rgb(231,15,5)" fg:x="17718" fg:w="1949"/><text x="14.5471%" y="655.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (1,949 samples, 1.57%)</title><rect x="14.2971%" y="629" width="1.5727%" height="15" fill="rgb(252,35,15)" fg:x="17718" fg:w="1949"/><text x="14.5471%" y="639.50"></text></g><g><title>alloc::alloc::box_free (458 samples, 0.37%)</title><rect x="15.5003%" y="613" width="0.3696%" height="15" fill="rgb(248,181,18)" fg:x="19209" fg:w="458"/><text x="15.7503%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (458 samples, 0.37%)</title><rect x="15.5003%" y="597" width="0.3696%" height="15" fill="rgb(233,39,42)" fg:x="19209" fg:w="458"/><text x="15.7503%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (458 samples, 0.37%)</title><rect x="15.5003%" y="581" width="0.3696%" height="15" fill="rgb(238,110,33)" fg:x="19209" fg:w="458"/><text x="15.7503%" y="591.50"></text></g><g><title>__rg_dealloc (458 samples, 0.37%)</title><rect x="15.5003%" y="565" width="0.3696%" height="15" fill="rgb(233,195,10)" fg:x="19209" fg:w="458"/><text x="15.7503%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (458 samples, 0.37%)</title><rect x="15.5003%" y="549" width="0.3696%" height="15" fill="rgb(254,105,3)" fg:x="19209" fg:w="458"/><text x="15.7503%" y="559.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (325 samples, 0.26%)</title><rect x="15.6076%" y="533" width="0.2623%" height="15" fill="rgb(221,225,9)" fg:x="19342" fg:w="325"/><text x="15.8576%" y="543.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,561 samples, 7.72%)</title><rect x="9.4435%" y="757" width="7.7150%" height="15" fill="rgb(224,227,45)" fg:x="11703" fg:w="9561"/><text x="9.6935%" y="767.50">&lt;async_std:..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (9,561 samples, 7.72%)</title><rect x="9.4435%" y="741" width="7.7150%" height="15" fill="rgb(229,198,43)" fg:x="11703" fg:w="9561"/><text x="9.6935%" y="751.50">&lt;tremor_run..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (9,561 samples, 7.72%)</title><rect x="9.4435%" y="725" width="7.7150%" height="15" fill="rgb(206,209,35)" fg:x="11703" fg:w="9561"/><text x="9.6935%" y="735.50">&lt;async_std:..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (9,561 samples, 7.72%)</title><rect x="9.4435%" y="709" width="7.7150%" height="15" fill="rgb(245,195,53)" fg:x="11703" fg:w="9561"/><text x="9.6935%" y="719.50">&lt;tremor_run..</text></g><g><title>[libc-2.31.so] (1,597 samples, 1.29%)</title><rect x="15.8698%" y="693" width="1.2887%" height="15" fill="rgb(240,92,26)" fg:x="19667" fg:w="1597"/><text x="16.1198%" y="703.50"></text></g><g><title>[libc-2.31.so] (199 samples, 0.16%)</title><rect x="17.1593%" y="709" width="0.1606%" height="15" fill="rgb(207,40,23)" fg:x="21265" fg:w="199"/><text x="17.4093%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="17.4667%" y="693" width="0.0113%" height="15" fill="rgb(223,111,35)" fg:x="21646" fg:w="14"/><text x="17.7167%" y="703.50"></text></g><g><title>[libc-2.31.so] (1,399 samples, 1.13%)</title><rect x="17.4780%" y="693" width="1.1289%" height="15" fill="rgb(229,147,28)" fg:x="21660" fg:w="1399"/><text x="17.7280%" y="703.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (15,645 samples, 12.62%)</title><rect x="6.0084%" y="901" width="12.6244%" height="15" fill="rgb(211,29,28)" fg:x="7446" fg:w="15645"/><text x="6.2584%" y="911.50">async_executor::Exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (15,645 samples, 12.62%)</title><rect x="6.0084%" y="885" width="12.6244%" height="15" fill="rgb(228,72,33)" fg:x="7446" fg:w="15645"/><text x="6.2584%" y="895.50">&lt;async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (15,645 samples, 12.62%)</title><rect x="6.0084%" y="869" width="12.6244%" height="15" fill="rgb(205,214,31)" fg:x="7446" fg:w="15645"/><text x="6.2584%" y="879.50">async_std::task::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,645 samples, 12.62%)</title><rect x="6.0084%" y="853" width="12.6244%" height="15" fill="rgb(224,111,15)" fg:x="7446" fg:w="15645"/><text x="6.2584%" y="863.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,645 samples, 12.62%)</title><rect x="6.0084%" y="837" width="12.6244%" height="15" fill="rgb(253,21,26)" fg:x="7446" fg:w="15645"/><text x="6.2584%" y="847.50">std::thread::local:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (15,645 samples, 12.62%)</title><rect x="6.0084%" y="821" width="12.6244%" height="15" fill="rgb(245,139,43)" fg:x="7446" fg:w="15645"/><text x="6.2584%" y="831.50">async_std::task::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (15,645 samples, 12.62%)</title><rect x="6.0084%" y="805" width="12.6244%" height="15" fill="rgb(252,170,7)" fg:x="7446" fg:w="15645"/><text x="6.2584%" y="815.50">&lt;async_std::task::b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,645 samples, 12.62%)</title><rect x="6.0084%" y="789" width="12.6244%" height="15" fill="rgb(231,118,14)" fg:x="7446" fg:w="15645"/><text x="6.2584%" y="799.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11,388 samples, 9.19%)</title><rect x="9.4435%" y="773" width="9.1893%" height="15" fill="rgb(238,83,0)" fg:x="11703" fg:w="11388"/><text x="9.6935%" y="783.50">tremor_runtim..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,827 samples, 1.47%)</title><rect x="17.1585%" y="757" width="1.4743%" height="15" fill="rgb(221,39,39)" fg:x="21264" fg:w="1827"/><text x="17.4085%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,827 samples, 1.47%)</title><rect x="17.1585%" y="741" width="1.4743%" height="15" fill="rgb(222,119,46)" fg:x="21264" fg:w="1827"/><text x="17.4085%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,827 samples, 1.47%)</title><rect x="17.1585%" y="725" width="1.4743%" height="15" fill="rgb(222,165,49)" fg:x="21264" fg:w="1827"/><text x="17.4085%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,627 samples, 1.31%)</title><rect x="17.3199%" y="709" width="1.3129%" height="15" fill="rgb(219,113,52)" fg:x="21464" fg:w="1627"/><text x="17.5699%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (32 samples, 0.03%)</title><rect x="18.6069%" y="693" width="0.0258%" height="15" fill="rgb(214,7,15)" fg:x="23059" fg:w="32"/><text x="18.8569%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (22 samples, 0.02%)</title><rect x="18.6150%" y="677" width="0.0178%" height="15" fill="rgb(235,32,4)" fg:x="23069" fg:w="22"/><text x="18.8650%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,234 samples, 14.71%)</title><rect x="3.9233%" y="917" width="14.7135%" height="15" fill="rgb(238,90,54)" fg:x="4862" fg:w="18234"/><text x="4.1733%" y="927.50">&lt;core::future::from_ge..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (41 samples, 0.03%)</title><rect x="18.6368%" y="917" width="0.0331%" height="15" fill="rgb(213,208,19)" fg:x="23096" fg:w="41"/><text x="18.8868%" y="927.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (50 samples, 0.04%)</title><rect x="18.6884%" y="917" width="0.0403%" height="15" fill="rgb(233,156,4)" fg:x="23160" fg:w="50"/><text x="18.9384%" y="927.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (14 samples, 0.01%)</title><rect x="18.7288%" y="917" width="0.0113%" height="15" fill="rgb(207,194,5)" fg:x="23210" fg:w="14"/><text x="18.9788%" y="927.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (24 samples, 0.02%)</title><rect x="18.7401%" y="917" width="0.0194%" height="15" fill="rgb(206,111,30)" fg:x="23224" fg:w="24"/><text x="18.9901%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="18.7643%" y="917" width="0.0161%" height="15" fill="rgb(243,70,54)" fg:x="23254" fg:w="20"/><text x="19.0143%" y="927.50"></text></g><g><title>[libc-2.31.so] (208 samples, 0.17%)</title><rect x="18.7804%" y="917" width="0.1678%" height="15" fill="rgb(242,28,8)" fg:x="23274" fg:w="208"/><text x="19.0304%" y="927.50"></text></g><g><title>__clock_gettime (64 samples, 0.05%)</title><rect x="18.9483%" y="917" width="0.0516%" height="15" fill="rgb(219,106,18)" fg:x="23482" fg:w="64"/><text x="19.1983%" y="927.50"></text></g><g><title>__vdso_clock_gettime (46 samples, 0.04%)</title><rect x="19.0007%" y="917" width="0.0371%" height="15" fill="rgb(244,222,10)" fg:x="23547" fg:w="46"/><text x="19.2507%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (14 samples, 0.01%)</title><rect x="19.0378%" y="917" width="0.0113%" height="15" fill="rgb(236,179,52)" fg:x="23593" fg:w="14"/><text x="19.2878%" y="927.50"></text></g><g><title>async_executor::Ticker::sleep (31 samples, 0.03%)</title><rect x="19.0491%" y="917" width="0.0250%" height="15" fill="rgb(213,23,39)" fg:x="23607" fg:w="31"/><text x="19.2991%" y="927.50"></text></g><g><title>async_executor::steal (152 samples, 0.12%)</title><rect x="19.0741%" y="917" width="0.1227%" height="15" fill="rgb(238,48,10)" fg:x="23638" fg:w="152"/><text x="19.3241%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.01%)</title><rect x="19.2670%" y="437" width="0.0129%" height="15" fill="rgb(251,196,23)" fg:x="23877" fg:w="16"/><text x="19.5170%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.01%)</title><rect x="19.2670%" y="421" width="0.0129%" height="15" fill="rgb(250,152,24)" fg:x="23877" fg:w="16"/><text x="19.5170%" y="431.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="19.2654%" y="469" width="0.0153%" height="15" fill="rgb(209,150,17)" fg:x="23875" fg:w="19"/><text x="19.5154%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (18 samples, 0.01%)</title><rect x="19.2662%" y="453" width="0.0145%" height="15" fill="rgb(234,202,34)" fg:x="23876" fg:w="18"/><text x="19.5162%" y="463.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="19.2880%" y="469" width="0.0178%" height="15" fill="rgb(253,148,53)" fg:x="23903" fg:w="22"/><text x="19.5380%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="19.2880%" y="453" width="0.0178%" height="15" fill="rgb(218,129,16)" fg:x="23903" fg:w="22"/><text x="19.5380%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (19 samples, 0.02%)</title><rect x="19.2904%" y="437" width="0.0153%" height="15" fill="rgb(216,85,19)" fg:x="23906" fg:w="19"/><text x="19.5404%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="19.2904%" y="421" width="0.0153%" height="15" fill="rgb(235,228,7)" fg:x="23906" fg:w="19"/><text x="19.5404%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.01%)</title><rect x="19.2912%" y="405" width="0.0145%" height="15" fill="rgb(245,175,0)" fg:x="23907" fg:w="18"/><text x="19.5412%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (18 samples, 0.01%)</title><rect x="19.2912%" y="389" width="0.0145%" height="15" fill="rgb(208,168,36)" fg:x="23907" fg:w="18"/><text x="19.5412%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (18 samples, 0.01%)</title><rect x="19.2912%" y="373" width="0.0145%" height="15" fill="rgb(246,171,24)" fg:x="23907" fg:w="18"/><text x="19.5412%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.01%)</title><rect x="19.2912%" y="357" width="0.0145%" height="15" fill="rgb(215,142,24)" fg:x="23907" fg:w="18"/><text x="19.5412%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="19.3057%" y="469" width="0.0129%" height="15" fill="rgb(250,187,7)" fg:x="23925" fg:w="16"/><text x="19.5557%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="19.3073%" y="453" width="0.0113%" height="15" fill="rgb(228,66,33)" fg:x="23927" fg:w="14"/><text x="19.5573%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="19.3073%" y="437" width="0.0113%" height="15" fill="rgb(234,215,21)" fg:x="23927" fg:w="14"/><text x="19.5573%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.01%)</title><rect x="19.3073%" y="421" width="0.0113%" height="15" fill="rgb(222,191,20)" fg:x="23927" fg:w="14"/><text x="19.5573%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (14 samples, 0.01%)</title><rect x="19.3073%" y="405" width="0.0113%" height="15" fill="rgb(245,79,54)" fg:x="23927" fg:w="14"/><text x="19.5573%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (14 samples, 0.01%)</title><rect x="19.3073%" y="389" width="0.0113%" height="15" fill="rgb(240,10,37)" fg:x="23927" fg:w="14"/><text x="19.5573%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (14 samples, 0.01%)</title><rect x="19.3073%" y="373" width="0.0113%" height="15" fill="rgb(214,192,32)" fg:x="23927" fg:w="14"/><text x="19.5573%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (115 samples, 0.09%)</title><rect x="19.3267%" y="405" width="0.0928%" height="15" fill="rgb(209,36,54)" fg:x="23951" fg:w="115"/><text x="19.5767%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (115 samples, 0.09%)</title><rect x="19.3267%" y="389" width="0.0928%" height="15" fill="rgb(220,10,11)" fg:x="23951" fg:w="115"/><text x="19.5767%" y="399.50"></text></g><g><title>event_listener::Inner::lock (177 samples, 0.14%)</title><rect x="19.3227%" y="469" width="0.1428%" height="15" fill="rgb(221,106,17)" fg:x="23946" fg:w="177"/><text x="19.5727%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (176 samples, 0.14%)</title><rect x="19.3235%" y="453" width="0.1420%" height="15" fill="rgb(251,142,44)" fg:x="23947" fg:w="176"/><text x="19.5735%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (172 samples, 0.14%)</title><rect x="19.3267%" y="437" width="0.1388%" height="15" fill="rgb(238,13,15)" fg:x="23951" fg:w="172"/><text x="19.5767%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (172 samples, 0.14%)</title><rect x="19.3267%" y="421" width="0.1388%" height="15" fill="rgb(208,107,27)" fg:x="23951" fg:w="172"/><text x="19.5767%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (57 samples, 0.05%)</title><rect x="19.4195%" y="405" width="0.0460%" height="15" fill="rgb(205,136,37)" fg:x="24066" fg:w="57"/><text x="19.6695%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (56 samples, 0.05%)</title><rect x="19.4203%" y="389" width="0.0452%" height="15" fill="rgb(250,205,27)" fg:x="24067" fg:w="56"/><text x="19.6703%" y="399.50"></text></g><g><title>core::hint::spin_loop (55 samples, 0.04%)</title><rect x="19.4211%" y="373" width="0.0444%" height="15" fill="rgb(210,80,43)" fg:x="24068" fg:w="55"/><text x="19.6711%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (55 samples, 0.04%)</title><rect x="19.4211%" y="357" width="0.0444%" height="15" fill="rgb(247,160,36)" fg:x="24068" fg:w="55"/><text x="19.6711%" y="367.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (303 samples, 0.24%)</title><rect x="19.2525%" y="485" width="0.2445%" height="15" fill="rgb(234,13,49)" fg:x="23859" fg:w="303"/><text x="19.5025%" y="495.50"></text></g><g><title>event_listener::List::remove (39 samples, 0.03%)</title><rect x="19.4655%" y="469" width="0.0315%" height="15" fill="rgb(234,122,0)" fg:x="24123" fg:w="39"/><text x="19.7155%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (26 samples, 0.02%)</title><rect x="19.4760%" y="453" width="0.0210%" height="15" fill="rgb(207,146,38)" fg:x="24136" fg:w="26"/><text x="19.7260%" y="463.50"></text></g><g><title>core::mem::replace (26 samples, 0.02%)</title><rect x="19.4760%" y="437" width="0.0210%" height="15" fill="rgb(207,177,25)" fg:x="24136" fg:w="26"/><text x="19.7260%" y="447.50"></text></g><g><title>core::ptr::read (26 samples, 0.02%)</title><rect x="19.4760%" y="421" width="0.0210%" height="15" fill="rgb(211,178,42)" fg:x="24136" fg:w="26"/><text x="19.7260%" y="431.50"></text></g><g><title>[libc-2.31.so] (747 samples, 0.60%)</title><rect x="19.4970%" y="485" width="0.6028%" height="15" fill="rgb(230,69,54)" fg:x="24162" fg:w="747"/><text x="19.7470%" y="495.50"></text></g><g><title>[libc-2.31.so] (1,221 samples, 0.99%)</title><rect x="20.1441%" y="469" width="0.9853%" height="15" fill="rgb(214,135,41)" fg:x="24964" fg:w="1221"/><text x="20.3941%" y="479.50"></text></g><g><title>[libc-2.31.so] (293 samples, 0.24%)</title><rect x="21.3093%" y="437" width="0.2364%" height="15" fill="rgb(237,67,25)" fg:x="26408" fg:w="293"/><text x="21.5593%" y="447.50"></text></g><g><title>concurrent_queue::full_fence (97 samples, 0.08%)</title><rect x="21.5457%" y="437" width="0.0783%" height="15" fill="rgb(222,189,50)" fg:x="26701" fg:w="97"/><text x="21.7957%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (89 samples, 0.07%)</title><rect x="21.5522%" y="421" width="0.0718%" height="15" fill="rgb(245,148,34)" fg:x="26709" fg:w="89"/><text x="21.8022%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (89 samples, 0.07%)</title><rect x="21.5522%" y="405" width="0.0718%" height="15" fill="rgb(222,29,6)" fg:x="26709" fg:w="89"/><text x="21.8022%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (89 samples, 0.07%)</title><rect x="21.5522%" y="389" width="0.0718%" height="15" fill="rgb(221,189,43)" fg:x="26709" fg:w="89"/><text x="21.8022%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (14 samples, 0.01%)</title><rect x="21.6240%" y="437" width="0.0113%" height="15" fill="rgb(207,36,27)" fg:x="26798" fg:w="14"/><text x="21.8740%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (533 samples, 0.43%)</title><rect x="21.6353%" y="437" width="0.4301%" height="15" fill="rgb(217,90,24)" fg:x="26812" fg:w="533"/><text x="21.8853%" y="447.50"></text></g><g><title>core::ptr::read (533 samples, 0.43%)</title><rect x="21.6353%" y="421" width="0.4301%" height="15" fill="rgb(224,66,35)" fg:x="26812" fg:w="533"/><text x="21.8853%" y="431.50"></text></g><g><title>[libc-2.31.so] (533 samples, 0.43%)</title><rect x="21.6353%" y="405" width="0.4301%" height="15" fill="rgb(221,13,50)" fg:x="26812" fg:w="533"/><text x="21.8853%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1,413 samples, 1.14%)</title><rect x="22.0654%" y="437" width="1.1402%" height="15" fill="rgb(236,68,49)" fg:x="27345" fg:w="1413"/><text x="22.3154%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,413 samples, 1.14%)</title><rect x="22.0654%" y="421" width="1.1402%" height="15" fill="rgb(229,146,28)" fg:x="27345" fg:w="1413"/><text x="22.3154%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,795 samples, 2.26%)</title><rect x="21.1294%" y="469" width="2.2554%" height="15" fill="rgb(225,31,38)" fg:x="26185" fg:w="2795"/><text x="21.3794%" y="479.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,773 samples, 2.24%)</title><rect x="21.1471%" y="453" width="2.2376%" height="15" fill="rgb(250,208,3)" fg:x="26207" fg:w="2773"/><text x="21.3971%" y="463.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::load (222 samples, 0.18%)</title><rect x="23.2056%" y="437" width="0.1791%" height="15" fill="rgb(246,54,23)" fg:x="28758" fg:w="222"/><text x="23.4556%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (213 samples, 0.17%)</title><rect x="23.2129%" y="421" width="0.1719%" height="15" fill="rgb(243,76,11)" fg:x="28767" fg:w="213"/><text x="23.4629%" y="431.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (4,471 samples, 3.61%)</title><rect x="20.0997%" y="485" width="3.6078%" height="15" fill="rgb(245,21,50)" fg:x="24909" fg:w="4471"/><text x="20.3497%" y="495.50">asyn..</text></g><g><title>event_listener::Event::notify (400 samples, 0.32%)</title><rect x="23.3847%" y="469" width="0.3228%" height="15" fill="rgb(228,9,43)" fg:x="28980" fg:w="400"/><text x="23.6347%" y="479.50"></text></g><g><title>event_listener::full_fence (374 samples, 0.30%)</title><rect x="23.4057%" y="453" width="0.3018%" height="15" fill="rgb(208,100,47)" fg:x="29006" fg:w="374"/><text x="23.6557%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (355 samples, 0.29%)</title><rect x="23.4210%" y="437" width="0.2865%" height="15" fill="rgb(232,26,8)" fg:x="29025" fg:w="355"/><text x="23.6710%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (355 samples, 0.29%)</title><rect x="23.4210%" y="421" width="0.2865%" height="15" fill="rgb(216,166,38)" fg:x="29025" fg:w="355"/><text x="23.6710%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (49 samples, 0.04%)</title><rect x="23.7075%" y="485" width="0.0395%" height="15" fill="rgb(251,202,51)" fg:x="29380" fg:w="49"/><text x="23.9575%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (88 samples, 0.07%)</title><rect x="23.7470%" y="485" width="0.0710%" height="15" fill="rgb(254,216,34)" fg:x="29429" fg:w="88"/><text x="23.9970%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (66 samples, 0.05%)</title><rect x="23.7648%" y="469" width="0.0533%" height="15" fill="rgb(251,32,27)" fg:x="29451" fg:w="66"/><text x="24.0148%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (59 samples, 0.05%)</title><rect x="23.7704%" y="453" width="0.0476%" height="15" fill="rgb(208,127,28)" fg:x="29458" fg:w="59"/><text x="24.0204%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.05%)</title><rect x="23.7704%" y="437" width="0.0476%" height="15" fill="rgb(224,137,22)" fg:x="29458" fg:w="59"/><text x="24.0204%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (59 samples, 0.05%)</title><rect x="23.7704%" y="421" width="0.0476%" height="15" fill="rgb(254,70,32)" fg:x="29458" fg:w="59"/><text x="24.0204%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (59 samples, 0.05%)</title><rect x="23.7704%" y="405" width="0.0476%" height="15" fill="rgb(229,75,37)" fg:x="29458" fg:w="59"/><text x="24.0204%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (53 samples, 0.04%)</title><rect x="23.8229%" y="469" width="0.0428%" height="15" fill="rgb(252,64,23)" fg:x="29523" fg:w="53"/><text x="24.0729%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (53 samples, 0.04%)</title><rect x="23.8229%" y="453" width="0.0428%" height="15" fill="rgb(232,162,48)" fg:x="29523" fg:w="53"/><text x="24.0729%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (53 samples, 0.04%)</title><rect x="23.8229%" y="437" width="0.0428%" height="15" fill="rgb(246,160,12)" fg:x="29523" fg:w="53"/><text x="24.0729%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (54 samples, 0.04%)</title><rect x="23.8657%" y="469" width="0.0436%" height="15" fill="rgb(247,166,0)" fg:x="29576" fg:w="54"/><text x="24.1157%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (53 samples, 0.04%)</title><rect x="23.8665%" y="453" width="0.0428%" height="15" fill="rgb(249,219,21)" fg:x="29577" fg:w="53"/><text x="24.1165%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.04%)</title><rect x="23.8665%" y="437" width="0.0428%" height="15" fill="rgb(205,209,3)" fg:x="29577" fg:w="53"/><text x="24.1165%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (52 samples, 0.04%)</title><rect x="23.8673%" y="421" width="0.0420%" height="15" fill="rgb(243,44,1)" fg:x="29578" fg:w="52"/><text x="24.1173%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (52 samples, 0.04%)</title><rect x="23.8673%" y="405" width="0.0420%" height="15" fill="rgb(206,159,16)" fg:x="29578" fg:w="52"/><text x="24.1173%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (52 samples, 0.04%)</title><rect x="23.8673%" y="389" width="0.0420%" height="15" fill="rgb(244,77,30)" fg:x="29578" fg:w="52"/><text x="24.1173%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (52 samples, 0.04%)</title><rect x="23.8673%" y="373" width="0.0420%" height="15" fill="rgb(218,69,12)" fg:x="29578" fg:w="52"/><text x="24.1173%" y="383.50"></text></g><g><title>event_listener::Inner::lock (20 samples, 0.02%)</title><rect x="23.9157%" y="469" width="0.0161%" height="15" fill="rgb(212,87,7)" fg:x="29638" fg:w="20"/><text x="24.1657%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="23.9157%" y="453" width="0.0161%" height="15" fill="rgb(245,114,25)" fg:x="29638" fg:w="20"/><text x="24.1657%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.01%)</title><rect x="23.9213%" y="437" width="0.0105%" height="15" fill="rgb(210,61,42)" fg:x="29645" fg:w="13"/><text x="24.1713%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (13 samples, 0.01%)</title><rect x="23.9213%" y="421" width="0.0105%" height="15" fill="rgb(211,52,33)" fg:x="29645" fg:w="13"/><text x="24.1713%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (13 samples, 0.01%)</title><rect x="23.9213%" y="405" width="0.0105%" height="15" fill="rgb(234,58,33)" fg:x="29645" fg:w="13"/><text x="24.1713%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="23.9213%" y="389" width="0.0105%" height="15" fill="rgb(220,115,36)" fg:x="29645" fg:w="13"/><text x="24.1713%" y="399.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,892 samples, 4.75%)</title><rect x="19.1976%" y="565" width="4.7544%" height="15" fill="rgb(243,153,54)" fg:x="23791" fg:w="5892"/><text x="19.4476%" y="575.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (5,892 samples, 4.75%)</title><rect x="19.1976%" y="549" width="4.7544%" height="15" fill="rgb(251,47,18)" fg:x="23791" fg:w="5892"/><text x="19.4476%" y="559.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (5,892 samples, 4.75%)</title><rect x="19.1976%" y="533" width="4.7544%" height="15" fill="rgb(242,102,42)" fg:x="23791" fg:w="5892"/><text x="19.4476%" y="543.50">&lt;async..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (5,892 samples, 4.75%)</title><rect x="19.1976%" y="517" width="4.7544%" height="15" fill="rgb(234,31,38)" fg:x="23791" fg:w="5892"/><text x="19.4476%" y="527.50">&lt;async..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5,892 samples, 4.75%)</title><rect x="19.1976%" y="501" width="4.7544%" height="15" fill="rgb(221,117,51)" fg:x="23791" fg:w="5892"/><text x="19.4476%" y="511.50">&lt;async..</text></g><g><title>event_listener::Event::listen (166 samples, 0.13%)</title><rect x="23.8181%" y="485" width="0.1339%" height="15" fill="rgb(212,20,18)" fg:x="29517" fg:w="166"/><text x="24.0681%" y="495.50"></text></g><g><title>event_listener::full_fence (18 samples, 0.01%)</title><rect x="23.9375%" y="469" width="0.0145%" height="15" fill="rgb(245,133,36)" fg:x="29665" fg:w="18"/><text x="24.1875%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.01%)</title><rect x="23.9383%" y="453" width="0.0137%" height="15" fill="rgb(212,6,19)" fg:x="29666" fg:w="17"/><text x="24.1883%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.01%)</title><rect x="23.9383%" y="437" width="0.0137%" height="15" fill="rgb(218,1,36)" fg:x="29666" fg:w="17"/><text x="24.1883%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (27 samples, 0.02%)</title><rect x="24.0053%" y="469" width="0.0218%" height="15" fill="rgb(246,84,54)" fg:x="29749" fg:w="27"/><text x="24.2553%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (26 samples, 0.02%)</title><rect x="24.0061%" y="453" width="0.0210%" height="15" fill="rgb(242,110,6)" fg:x="29750" fg:w="26"/><text x="24.2561%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (881 samples, 0.71%)</title><rect x="24.0270%" y="469" width="0.7109%" height="15" fill="rgb(214,47,5)" fg:x="29776" fg:w="881"/><text x="24.2770%" y="479.50"></text></g><g><title>[libc-2.31.so] (2,121 samples, 1.71%)</title><rect x="24.7783%" y="453" width="1.7115%" height="15" fill="rgb(218,159,25)" fg:x="30707" fg:w="2121"/><text x="25.0283%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (296 samples, 0.24%)</title><rect x="26.6512%" y="437" width="0.2389%" height="15" fill="rgb(215,211,28)" fg:x="33028" fg:w="296"/><text x="26.9012%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (9,563 samples, 7.72%)</title><rect x="19.1976%" y="581" width="7.7166%" height="15" fill="rgb(238,59,32)" fg:x="23791" fg:w="9563"/><text x="19.4476%" y="591.50">tremor_runt..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,671 samples, 2.96%)</title><rect x="23.9520%" y="565" width="2.9622%" height="15" fill="rgb(226,82,3)" fg:x="29683" fg:w="3671"/><text x="24.2020%" y="575.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,671 samples, 2.96%)</title><rect x="23.9520%" y="549" width="2.9622%" height="15" fill="rgb(240,164,32)" fg:x="29683" fg:w="3671"/><text x="24.2020%" y="559.50">&lt;co..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,671 samples, 2.96%)</title><rect x="23.9520%" y="533" width="2.9622%" height="15" fill="rgb(232,46,7)" fg:x="29683" fg:w="3671"/><text x="24.2020%" y="543.50">&lt;tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,671 samples, 2.96%)</title><rect x="23.9520%" y="517" width="2.9622%" height="15" fill="rgb(229,129,53)" fg:x="29683" fg:w="3671"/><text x="24.2020%" y="527.50">tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,671 samples, 2.96%)</title><rect x="23.9520%" y="501" width="2.9622%" height="15" fill="rgb(234,188,29)" fg:x="29683" fg:w="3671"/><text x="24.2020%" y="511.50">tre..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (3,671 samples, 2.96%)</title><rect x="23.9520%" y="485" width="2.9622%" height="15" fill="rgb(246,141,4)" fg:x="29683" fg:w="3671"/><text x="24.2020%" y="495.50">tre..</text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,697 samples, 2.18%)</title><rect x="24.7380%" y="469" width="2.1763%" height="15" fill="rgb(229,23,39)" fg:x="30657" fg:w="2697"/><text x="24.9880%" y="479.50">&lt;..</text></g><g><title>sn_rust_alloc (526 samples, 0.42%)</title><rect x="26.4898%" y="453" width="0.4244%" height="15" fill="rgb(206,12,3)" fg:x="32828" fg:w="526"/><text x="26.7398%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (30 samples, 0.02%)</title><rect x="26.8900%" y="437" width="0.0242%" height="15" fill="rgb(252,226,20)" fg:x="33324" fg:w="30"/><text x="27.1400%" y="447.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (15 samples, 0.01%)</title><rect x="27.2435%" y="565" width="0.0121%" height="15" fill="rgb(216,123,35)" fg:x="33762" fg:w="15"/><text x="27.4935%" y="575.50"></text></g><g><title>[libc-2.31.so] (259 samples, 0.21%)</title><rect x="27.2556%" y="549" width="0.2090%" height="15" fill="rgb(212,68,40)" fg:x="33777" fg:w="259"/><text x="27.5056%" y="559.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (14 samples, 0.01%)</title><rect x="27.8349%" y="533" width="0.0113%" height="15" fill="rgb(254,125,32)" fg:x="34495" fg:w="14"/><text x="28.0849%" y="543.50"></text></g><g><title>[libc-2.31.so] (325 samples, 0.26%)</title><rect x="27.8632%" y="517" width="0.2623%" height="15" fill="rgb(253,97,22)" fg:x="34530" fg:w="325"/><text x="28.1132%" y="527.50"></text></g><g><title>[libc-2.31.so] (141 samples, 0.11%)</title><rect x="28.4046%" y="501" width="0.1138%" height="15" fill="rgb(241,101,14)" fg:x="35201" fg:w="141"/><text x="28.6546%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (96 samples, 0.08%)</title><rect x="28.6846%" y="309" width="0.0775%" height="15" fill="rgb(238,103,29)" fg:x="35548" fg:w="96"/><text x="28.9346%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (273 samples, 0.22%)</title><rect x="28.5434%" y="437" width="0.2203%" height="15" fill="rgb(233,195,47)" fg:x="35373" fg:w="273"/><text x="28.7934%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (147 samples, 0.12%)</title><rect x="28.6451%" y="421" width="0.1186%" height="15" fill="rgb(246,218,30)" fg:x="35499" fg:w="147"/><text x="28.8951%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (147 samples, 0.12%)</title><rect x="28.6451%" y="405" width="0.1186%" height="15" fill="rgb(219,145,47)" fg:x="35499" fg:w="147"/><text x="28.8951%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (147 samples, 0.12%)</title><rect x="28.6451%" y="389" width="0.1186%" height="15" fill="rgb(243,12,26)" fg:x="35499" fg:w="147"/><text x="28.8951%" y="399.50"></text></g><g><title>alloc::alloc::alloc (147 samples, 0.12%)</title><rect x="28.6451%" y="373" width="0.1186%" height="15" fill="rgb(214,87,16)" fg:x="35499" fg:w="147"/><text x="28.8951%" y="383.50"></text></g><g><title>__rg_alloc (147 samples, 0.12%)</title><rect x="28.6451%" y="357" width="0.1186%" height="15" fill="rgb(208,99,42)" fg:x="35499" fg:w="147"/><text x="28.8951%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (147 samples, 0.12%)</title><rect x="28.6451%" y="341" width="0.1186%" height="15" fill="rgb(253,99,2)" fg:x="35499" fg:w="147"/><text x="28.8951%" y="351.50"></text></g><g><title>sn_rust_alloc (136 samples, 0.11%)</title><rect x="28.6540%" y="325" width="0.1097%" height="15" fill="rgb(220,168,23)" fg:x="35510" fg:w="136"/><text x="28.9040%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (301 samples, 0.24%)</title><rect x="28.5257%" y="501" width="0.2429%" height="15" fill="rgb(242,38,24)" fg:x="35351" fg:w="301"/><text x="28.7757%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (292 samples, 0.24%)</title><rect x="28.5329%" y="485" width="0.2356%" height="15" fill="rgb(225,182,9)" fg:x="35360" fg:w="292"/><text x="28.7829%" y="495.50"></text></g><g><title>value_trait::Builder::object (283 samples, 0.23%)</title><rect x="28.5402%" y="469" width="0.2284%" height="15" fill="rgb(243,178,37)" fg:x="35369" fg:w="283"/><text x="28.7902%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (279 samples, 0.23%)</title><rect x="28.5434%" y="453" width="0.2251%" height="15" fill="rgb(232,139,19)" fg:x="35373" fg:w="279"/><text x="28.7934%" y="463.50"></text></g><g><title>sn_rust_dealloc (133 samples, 0.11%)</title><rect x="28.7887%" y="357" width="0.1073%" height="15" fill="rgb(225,201,24)" fg:x="35677" fg:w="133"/><text x="29.0387%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (134 samples, 0.11%)</title><rect x="28.7887%" y="421" width="0.1081%" height="15" fill="rgb(221,47,46)" fg:x="35677" fg:w="134"/><text x="29.0387%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (134 samples, 0.11%)</title><rect x="28.7887%" y="405" width="0.1081%" height="15" fill="rgb(249,23,13)" fg:x="35677" fg:w="134"/><text x="29.0387%" y="415.50"></text></g><g><title>__rg_dealloc (134 samples, 0.11%)</title><rect x="28.7887%" y="389" width="0.1081%" height="15" fill="rgb(219,9,5)" fg:x="35677" fg:w="134"/><text x="29.0387%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (134 samples, 0.11%)</title><rect x="28.7887%" y="373" width="0.1081%" height="15" fill="rgb(254,171,16)" fg:x="35677" fg:w="134"/><text x="29.0387%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (144 samples, 0.12%)</title><rect x="28.7863%" y="485" width="0.1162%" height="15" fill="rgb(230,171,20)" fg:x="35674" fg:w="144"/><text x="29.0363%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (144 samples, 0.12%)</title><rect x="28.7863%" y="469" width="0.1162%" height="15" fill="rgb(210,71,41)" fg:x="35674" fg:w="144"/><text x="29.0363%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (144 samples, 0.12%)</title><rect x="28.7863%" y="453" width="0.1162%" height="15" fill="rgb(206,173,20)" fg:x="35674" fg:w="144"/><text x="29.0363%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.12%)</title><rect x="28.7863%" y="437" width="0.1162%" height="15" fill="rgb(233,88,34)" fg:x="35674" fg:w="144"/><text x="29.0363%" y="447.50"></text></g><g><title>sn_rust_dealloc (88 samples, 0.07%)</title><rect x="28.9340%" y="309" width="0.0710%" height="15" fill="rgb(223,209,46)" fg:x="35857" fg:w="88"/><text x="29.1840%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (102 samples, 0.08%)</title><rect x="28.9259%" y="373" width="0.0823%" height="15" fill="rgb(250,43,18)" fg:x="35847" fg:w="102"/><text x="29.1759%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (102 samples, 0.08%)</title><rect x="28.9259%" y="357" width="0.0823%" height="15" fill="rgb(208,13,10)" fg:x="35847" fg:w="102"/><text x="29.1759%" y="367.50"></text></g><g><title>__rg_dealloc (102 samples, 0.08%)</title><rect x="28.9259%" y="341" width="0.0823%" height="15" fill="rgb(212,200,36)" fg:x="35847" fg:w="102"/><text x="29.1759%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (102 samples, 0.08%)</title><rect x="28.9259%" y="325" width="0.0823%" height="15" fill="rgb(225,90,30)" fg:x="35847" fg:w="102"/><text x="29.1759%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (139 samples, 0.11%)</title><rect x="28.9025%" y="469" width="0.1122%" height="15" fill="rgb(236,182,39)" fg:x="35818" fg:w="139"/><text x="29.1525%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (135 samples, 0.11%)</title><rect x="28.9057%" y="453" width="0.1089%" height="15" fill="rgb(212,144,35)" fg:x="35822" fg:w="135"/><text x="29.1557%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (122 samples, 0.10%)</title><rect x="28.9162%" y="437" width="0.0984%" height="15" fill="rgb(228,63,44)" fg:x="35835" fg:w="122"/><text x="29.1662%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (122 samples, 0.10%)</title><rect x="28.9162%" y="421" width="0.0984%" height="15" fill="rgb(228,109,6)" fg:x="35835" fg:w="122"/><text x="29.1662%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (122 samples, 0.10%)</title><rect x="28.9162%" y="405" width="0.0984%" height="15" fill="rgb(238,117,24)" fg:x="35835" fg:w="122"/><text x="29.1662%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.10%)</title><rect x="28.9162%" y="389" width="0.0984%" height="15" fill="rgb(242,26,26)" fg:x="35835" fg:w="122"/><text x="29.1662%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (301 samples, 0.24%)</title><rect x="28.7863%" y="501" width="0.2429%" height="15" fill="rgb(221,92,48)" fg:x="35674" fg:w="301"/><text x="29.0363%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (157 samples, 0.13%)</title><rect x="28.9025%" y="485" width="0.1267%" height="15" fill="rgb(209,209,32)" fg:x="35818" fg:w="157"/><text x="29.1525%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (18 samples, 0.01%)</title><rect x="29.0147%" y="469" width="0.0145%" height="15" fill="rgb(221,70,22)" fg:x="35957" fg:w="18"/><text x="29.2647%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.01%)</title><rect x="29.0147%" y="453" width="0.0145%" height="15" fill="rgb(248,145,5)" fg:x="35957" fg:w="18"/><text x="29.2647%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="29.0631%" y="405" width="0.0113%" height="15" fill="rgb(226,116,26)" fg:x="36017" fg:w="14"/><text x="29.3131%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (14 samples, 0.01%)</title><rect x="29.0631%" y="389" width="0.0113%" height="15" fill="rgb(244,5,17)" fg:x="36017" fg:w="14"/><text x="29.3131%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (68 samples, 0.05%)</title><rect x="29.0292%" y="501" width="0.0549%" height="15" fill="rgb(252,159,33)" fg:x="35975" fg:w="68"/><text x="29.2792%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (50 samples, 0.04%)</title><rect x="29.0437%" y="485" width="0.0403%" height="15" fill="rgb(206,71,0)" fg:x="35993" fg:w="50"/><text x="29.2937%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (41 samples, 0.03%)</title><rect x="29.0510%" y="469" width="0.0331%" height="15" fill="rgb(233,118,54)" fg:x="36002" fg:w="41"/><text x="29.3010%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (41 samples, 0.03%)</title><rect x="29.0510%" y="453" width="0.0331%" height="15" fill="rgb(234,83,48)" fg:x="36002" fg:w="41"/><text x="29.3010%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (26 samples, 0.02%)</title><rect x="29.0631%" y="437" width="0.0210%" height="15" fill="rgb(228,3,54)" fg:x="36017" fg:w="26"/><text x="29.3131%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (26 samples, 0.02%)</title><rect x="29.0631%" y="421" width="0.0210%" height="15" fill="rgb(226,155,13)" fg:x="36017" fg:w="26"/><text x="29.3131%" y="431.50"></text></g><g><title>sn_rust_dealloc (181 samples, 0.15%)</title><rect x="29.0841%" y="501" width="0.1461%" height="15" fill="rgb(241,28,37)" fg:x="36043" fg:w="181"/><text x="29.3341%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (31 samples, 0.03%)</title><rect x="29.2487%" y="485" width="0.0250%" height="15" fill="rgb(233,93,10)" fg:x="36247" fg:w="31"/><text x="29.4987%" y="495.50"></text></g><g><title>core::time::Duration::as_nanos (37 samples, 0.03%)</title><rect x="29.2737%" y="485" width="0.0299%" height="15" fill="rgb(225,113,19)" fg:x="36278" fg:w="37"/><text x="29.5237%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (125 samples, 0.10%)</title><rect x="29.3035%" y="469" width="0.1009%" height="15" fill="rgb(241,2,18)" fg:x="36315" fg:w="125"/><text x="29.5535%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (35 samples, 0.03%)</title><rect x="29.4326%" y="437" width="0.0282%" height="15" fill="rgb(228,207,21)" fg:x="36475" fg:w="35"/><text x="29.6826%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::ge (35 samples, 0.03%)</title><rect x="29.4326%" y="421" width="0.0282%" height="15" fill="rgb(213,211,35)" fg:x="36475" fg:w="35"/><text x="29.6826%" y="431.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (34 samples, 0.03%)</title><rect x="29.4335%" y="405" width="0.0274%" height="15" fill="rgb(209,83,10)" fg:x="36476" fg:w="34"/><text x="29.6835%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (19 samples, 0.02%)</title><rect x="29.4456%" y="389" width="0.0153%" height="15" fill="rgb(209,164,1)" fg:x="36491" fg:w="19"/><text x="29.6956%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (19 samples, 0.02%)</title><rect x="29.4456%" y="373" width="0.0153%" height="15" fill="rgb(213,184,43)" fg:x="36491" fg:w="19"/><text x="29.6956%" y="383.50"></text></g><g><title>std::time::SystemTime::duration_since (216 samples, 0.17%)</title><rect x="29.3035%" y="485" width="0.1743%" height="15" fill="rgb(231,61,34)" fg:x="36315" fg:w="216"/><text x="29.5535%" y="495.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (91 samples, 0.07%)</title><rect x="29.4044%" y="469" width="0.0734%" height="15" fill="rgb(235,75,3)" fg:x="36440" fg:w="91"/><text x="29.6544%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (90 samples, 0.07%)</title><rect x="29.4052%" y="453" width="0.0726%" height="15" fill="rgb(220,106,47)" fg:x="36441" fg:w="90"/><text x="29.6552%" y="463.50"></text></g><g><title>core::time::Duration::new (21 samples, 0.02%)</title><rect x="29.4609%" y="437" width="0.0169%" height="15" fill="rgb(210,196,33)" fg:x="36510" fg:w="21"/><text x="29.7109%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (828 samples, 0.67%)</title><rect x="29.2317%" y="501" width="0.6681%" height="15" fill="rgb(229,154,42)" fg:x="36226" fg:w="828"/><text x="29.4817%" y="511.50"></text></g><g><title>std::time::SystemTime::now (523 samples, 0.42%)</title><rect x="29.4778%" y="485" width="0.4220%" height="15" fill="rgb(228,114,26)" fg:x="36531" fg:w="523"/><text x="29.7278%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (523 samples, 0.42%)</title><rect x="29.4778%" y="469" width="0.4220%" height="15" fill="rgb(208,144,1)" fg:x="36531" fg:w="523"/><text x="29.7278%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (523 samples, 0.42%)</title><rect x="29.4778%" y="453" width="0.4220%" height="15" fill="rgb(239,112,37)" fg:x="36531" fg:w="523"/><text x="29.7278%" y="463.50"></text></g><g><title>__clock_gettime (428 samples, 0.35%)</title><rect x="29.5545%" y="437" width="0.3454%" height="15" fill="rgb(210,96,50)" fg:x="36626" fg:w="428"/><text x="29.8045%" y="447.50"></text></g><g><title>__vdso_clock_gettime (408 samples, 0.33%)</title><rect x="29.5706%" y="421" width="0.3292%" height="15" fill="rgb(222,178,2)" fg:x="36646" fg:w="408"/><text x="29.8206%" y="431.50"></text></g><g><title>[[vdso]] (378 samples, 0.31%)</title><rect x="29.5948%" y="405" width="0.3050%" height="15" fill="rgb(226,74,18)" fg:x="36676" fg:w="378"/><text x="29.8448%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,625 samples, 2.12%)</title><rect x="27.8462%" y="533" width="2.1182%" height="15" fill="rgb(225,67,54)" fg:x="34509" fg:w="2625"/><text x="28.0962%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (2,279 samples, 1.84%)</title><rect x="28.1254%" y="517" width="1.8390%" height="15" fill="rgb(251,92,32)" fg:x="34855" fg:w="2279"/><text x="28.3754%" y="527.50">t..</text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (80 samples, 0.06%)</title><rect x="29.8999%" y="501" width="0.0646%" height="15" fill="rgb(228,149,22)" fg:x="37054" fg:w="80"/><text x="30.1499%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (58 samples, 0.05%)</title><rect x="29.9176%" y="485" width="0.0468%" height="15" fill="rgb(243,54,13)" fg:x="37076" fg:w="58"/><text x="30.1676%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (42 samples, 0.03%)</title><rect x="29.9305%" y="469" width="0.0339%" height="15" fill="rgb(243,180,28)" fg:x="37092" fg:w="42"/><text x="30.1805%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (42 samples, 0.03%)</title><rect x="29.9305%" y="453" width="0.0339%" height="15" fill="rgb(208,167,24)" fg:x="37092" fg:w="42"/><text x="30.1805%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (42 samples, 0.03%)</title><rect x="29.9305%" y="437" width="0.0339%" height="15" fill="rgb(245,73,45)" fg:x="37092" fg:w="42"/><text x="30.1805%" y="447.50"></text></g><g><title>[libc-2.31.so] (346 samples, 0.28%)</title><rect x="29.9701%" y="533" width="0.2792%" height="15" fill="rgb(237,203,48)" fg:x="37141" fg:w="346"/><text x="30.2201%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,728 samples, 3.01%)</title><rect x="27.2556%" y="565" width="3.0082%" height="15" fill="rgb(211,197,16)" fg:x="33777" fg:w="3728"/><text x="27.5056%" y="575.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (3,469 samples, 2.80%)</title><rect x="27.4646%" y="549" width="2.7992%" height="15" fill="rgb(243,99,51)" fg:x="34036" fg:w="3469"/><text x="27.7146%" y="559.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (18 samples, 0.01%)</title><rect x="30.2493%" y="533" width="0.0145%" height="15" fill="rgb(215,123,29)" fg:x="37487" fg:w="18"/><text x="30.4993%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (18 samples, 0.01%)</title><rect x="30.2493%" y="517" width="0.0145%" height="15" fill="rgb(239,186,37)" fg:x="37487" fg:w="18"/><text x="30.4993%" y="527.50"></text></g><g><title>[libc-2.31.so] (561 samples, 0.45%)</title><rect x="30.5075%" y="549" width="0.4527%" height="15" fill="rgb(252,136,39)" fg:x="37807" fg:w="561"/><text x="30.7575%" y="559.50"></text></g><g><title>sn_rust_dealloc (38 samples, 0.03%)</title><rect x="30.9731%" y="437" width="0.0307%" height="15" fill="rgb(223,213,32)" fg:x="38384" fg:w="38"/><text x="31.2231%" y="447.50"></text></g><g><title>alloc::alloc::box_free (52 samples, 0.04%)</title><rect x="30.9674%" y="517" width="0.0420%" height="15" fill="rgb(233,115,5)" fg:x="38377" fg:w="52"/><text x="31.2174%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.04%)</title><rect x="30.9674%" y="501" width="0.0420%" height="15" fill="rgb(207,226,44)" fg:x="38377" fg:w="52"/><text x="31.2174%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (51 samples, 0.04%)</title><rect x="30.9682%" y="485" width="0.0412%" height="15" fill="rgb(208,126,0)" fg:x="38378" fg:w="51"/><text x="31.2182%" y="495.50"></text></g><g><title>__rg_dealloc (51 samples, 0.04%)</title><rect x="30.9682%" y="469" width="0.0412%" height="15" fill="rgb(244,66,21)" fg:x="38378" fg:w="51"/><text x="31.2182%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (51 samples, 0.04%)</title><rect x="30.9682%" y="453" width="0.0412%" height="15" fill="rgb(222,97,12)" fg:x="38378" fg:w="51"/><text x="31.2182%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (53 samples, 0.04%)</title><rect x="30.9674%" y="549" width="0.0428%" height="15" fill="rgb(219,213,19)" fg:x="38377" fg:w="53"/><text x="31.2174%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (53 samples, 0.04%)</title><rect x="30.9674%" y="533" width="0.0428%" height="15" fill="rgb(252,169,30)" fg:x="38377" fg:w="53"/><text x="31.2174%" y="543.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (941 samples, 0.76%)</title><rect x="30.2638%" y="565" width="0.7593%" height="15" fill="rgb(206,32,51)" fg:x="37505" fg:w="941"/><text x="30.5138%" y="575.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (16 samples, 0.01%)</title><rect x="31.0102%" y="549" width="0.0129%" height="15" fill="rgb(250,172,42)" fg:x="38430" fg:w="16"/><text x="31.2602%" y="559.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (211 samples, 0.17%)</title><rect x="31.2563%" y="421" width="0.1703%" height="15" fill="rgb(209,34,43)" fg:x="38735" fg:w="211"/><text x="31.5063%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (504 samples, 0.41%)</title><rect x="31.0231%" y="549" width="0.4067%" height="15" fill="rgb(223,11,35)" fg:x="38446" fg:w="504"/><text x="31.2731%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (275 samples, 0.22%)</title><rect x="31.2079%" y="533" width="0.2219%" height="15" fill="rgb(251,219,26)" fg:x="38675" fg:w="275"/><text x="31.4579%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (275 samples, 0.22%)</title><rect x="31.2079%" y="517" width="0.2219%" height="15" fill="rgb(231,119,3)" fg:x="38675" fg:w="275"/><text x="31.4579%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (275 samples, 0.22%)</title><rect x="31.2079%" y="501" width="0.2219%" height="15" fill="rgb(216,97,11)" fg:x="38675" fg:w="275"/><text x="31.4579%" y="511.50"></text></g><g><title>alloc::alloc::alloc (270 samples, 0.22%)</title><rect x="31.2119%" y="485" width="0.2179%" height="15" fill="rgb(223,59,9)" fg:x="38680" fg:w="270"/><text x="31.4619%" y="495.50"></text></g><g><title>__rg_alloc (270 samples, 0.22%)</title><rect x="31.2119%" y="469" width="0.2179%" height="15" fill="rgb(233,93,31)" fg:x="38680" fg:w="270"/><text x="31.4619%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (270 samples, 0.22%)</title><rect x="31.2119%" y="453" width="0.2179%" height="15" fill="rgb(239,81,33)" fg:x="38680" fg:w="270"/><text x="31.4619%" y="463.50"></text></g><g><title>sn_rust_alloc (252 samples, 0.20%)</title><rect x="31.2264%" y="437" width="0.2033%" height="15" fill="rgb(213,120,34)" fg:x="38698" fg:w="252"/><text x="31.4764%" y="447.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (510 samples, 0.41%)</title><rect x="31.0231%" y="565" width="0.4115%" height="15" fill="rgb(243,49,53)" fg:x="38446" fg:w="510"/><text x="31.2731%" y="575.50"></text></g><g><title>[libc-2.31.so] (382 samples, 0.31%)</title><rect x="31.4346%" y="565" width="0.3082%" height="15" fill="rgb(247,216,33)" fg:x="38956" fg:w="382"/><text x="31.6846%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (6,010 samples, 4.85%)</title><rect x="26.9142%" y="581" width="4.8496%" height="15" fill="rgb(226,26,14)" fg:x="33354" fg:w="6010"/><text x="27.1642%" y="591.50">tremor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (15 samples, 0.01%)</title><rect x="31.7518%" y="565" width="0.0121%" height="15" fill="rgb(215,49,53)" fg:x="39349" fg:w="15"/><text x="32.0018%" y="575.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (32 samples, 0.03%)</title><rect x="32.4231%" y="565" width="0.0258%" height="15" fill="rgb(245,162,40)" fg:x="40181" fg:w="32"/><text x="32.6731%" y="575.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="32.4489%" y="565" width="0.0161%" height="15" fill="rgb(229,68,17)" fg:x="40213" fg:w="20"/><text x="32.6989%" y="575.50"></text></g><g><title>[libc-2.31.so] (554 samples, 0.45%)</title><rect x="32.4957%" y="549" width="0.4470%" height="15" fill="rgb(213,182,10)" fg:x="40271" fg:w="554"/><text x="32.7457%" y="559.50"></text></g><g><title>[libc-2.31.so] (939 samples, 0.76%)</title><rect x="33.1348%" y="533" width="0.7577%" height="15" fill="rgb(245,125,30)" fg:x="41063" fg:w="939"/><text x="33.3848%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (19 samples, 0.02%)</title><rect x="33.9095%" y="517" width="0.0153%" height="15" fill="rgb(232,202,2)" fg:x="42023" fg:w="19"/><text x="34.1595%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.02%)</title><rect x="33.9095%" y="501" width="0.0153%" height="15" fill="rgb(237,140,51)" fg:x="42023" fg:w="19"/><text x="34.1595%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (507 samples, 0.41%)</title><rect x="33.8925%" y="533" width="0.4091%" height="15" fill="rgb(236,157,25)" fg:x="42002" fg:w="507"/><text x="34.1425%" y="543.50"></text></g><g><title>core::ptr::write (467 samples, 0.38%)</title><rect x="33.9248%" y="517" width="0.3768%" height="15" fill="rgb(219,209,0)" fg:x="42042" fg:w="467"/><text x="34.1748%" y="527.50"></text></g><g><title>[libc-2.31.so] (467 samples, 0.38%)</title><rect x="33.9248%" y="501" width="0.3768%" height="15" fill="rgb(240,116,54)" fg:x="42042" fg:w="467"/><text x="34.1748%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.02%)</title><rect x="34.3016%" y="533" width="0.0226%" height="15" fill="rgb(216,10,36)" fg:x="42509" fg:w="28"/><text x="34.5516%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (15 samples, 0.01%)</title><rect x="34.3242%" y="533" width="0.0121%" height="15" fill="rgb(222,72,44)" fg:x="42537" fg:w="15"/><text x="34.5742%" y="543.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.02%)</title><rect x="34.3484%" y="501" width="0.0161%" height="15" fill="rgb(232,159,9)" fg:x="42567" fg:w="20"/><text x="34.5984%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="34.3484%" y="485" width="0.0161%" height="15" fill="rgb(210,39,32)" fg:x="42567" fg:w="20"/><text x="34.5984%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (19 samples, 0.02%)</title><rect x="34.3493%" y="469" width="0.0153%" height="15" fill="rgb(216,194,45)" fg:x="42568" fg:w="19"/><text x="34.5993%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::borrow::Borrow&lt;T&gt;&gt;::borrow (14 samples, 0.01%)</title><rect x="34.3646%" y="501" width="0.0113%" height="15" fill="rgb(218,18,35)" fg:x="42587" fg:w="14"/><text x="34.6146%" y="511.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (14 samples, 0.01%)</title><rect x="34.3646%" y="485" width="0.0113%" height="15" fill="rgb(207,83,51)" fg:x="42587" fg:w="14"/><text x="34.6146%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.01%)</title><rect x="34.3759%" y="501" width="0.0145%" height="15" fill="rgb(225,63,43)" fg:x="42601" fg:w="18"/><text x="34.6259%" y="511.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,276 samples, 1.03%)</title><rect x="34.3363%" y="533" width="1.0296%" height="15" fill="rgb(207,57,36)" fg:x="42552" fg:w="1276"/><text x="34.5863%" y="543.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (1,261 samples, 1.02%)</title><rect x="34.3484%" y="517" width="1.0175%" height="15" fill="rgb(216,99,33)" fg:x="42567" fg:w="1261"/><text x="34.5984%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,209 samples, 0.98%)</title><rect x="34.3904%" y="501" width="0.9756%" height="15" fill="rgb(225,42,16)" fg:x="42619" fg:w="1209"/><text x="34.6404%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,209 samples, 0.98%)</title><rect x="34.3904%" y="485" width="0.9756%" height="15" fill="rgb(220,201,45)" fg:x="42619" fg:w="1209"/><text x="34.6404%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,209 samples, 0.98%)</title><rect x="34.3904%" y="469" width="0.9756%" height="15" fill="rgb(225,33,4)" fg:x="42619" fg:w="1209"/><text x="34.6404%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,209 samples, 0.98%)</title><rect x="34.3904%" y="453" width="0.9756%" height="15" fill="rgb(224,33,50)" fg:x="42619" fg:w="1209"/><text x="34.6404%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,209 samples, 0.98%)</title><rect x="34.3904%" y="437" width="0.9756%" height="15" fill="rgb(246,198,51)" fg:x="42619" fg:w="1209"/><text x="34.6404%" y="447.50"></text></g><g><title>[libc-2.31.so] (1,195 samples, 0.96%)</title><rect x="34.4017%" y="421" width="0.9643%" height="15" fill="rgb(205,22,4)" fg:x="42633" fg:w="1195"/><text x="34.6517%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (25 samples, 0.02%)</title><rect x="35.3862%" y="517" width="0.0202%" height="15" fill="rgb(206,3,8)" fg:x="43853" fg:w="25"/><text x="35.6362%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (13 samples, 0.01%)</title><rect x="35.3958%" y="501" width="0.0105%" height="15" fill="rgb(251,23,15)" fg:x="43865" fg:w="13"/><text x="35.6458%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.01%)</title><rect x="35.3958%" y="485" width="0.0105%" height="15" fill="rgb(252,88,28)" fg:x="43865" fg:w="13"/><text x="35.6458%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.01%)</title><rect x="35.3958%" y="469" width="0.0105%" height="15" fill="rgb(212,127,14)" fg:x="43865" fg:w="13"/><text x="35.6458%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="35.7856%" y="501" width="0.0202%" height="15" fill="rgb(247,145,37)" fg:x="44348" fg:w="25"/><text x="36.0356%" y="511.50"></text></g><g><title>[libc-2.31.so] (362 samples, 0.29%)</title><rect x="35.8058%" y="501" width="0.2921%" height="15" fill="rgb(209,117,53)" fg:x="44373" fg:w="362"/><text x="36.0558%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (863 samples, 0.70%)</title><rect x="36.0987%" y="501" width="0.6964%" height="15" fill="rgb(212,90,42)" fg:x="44736" fg:w="863"/><text x="36.3487%" y="511.50"></text></g><g><title>core::ptr::read (840 samples, 0.68%)</title><rect x="36.1172%" y="485" width="0.6778%" height="15" fill="rgb(218,164,37)" fg:x="44759" fg:w="840"/><text x="36.3672%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (489 samples, 0.39%)</title><rect x="36.7950%" y="501" width="0.3946%" height="15" fill="rgb(246,65,34)" fg:x="45599" fg:w="489"/><text x="37.0450%" y="511.50"></text></g><g><title>core::ptr::write (472 samples, 0.38%)</title><rect x="36.8088%" y="485" width="0.3809%" height="15" fill="rgb(231,100,33)" fg:x="45616" fg:w="472"/><text x="37.0588%" y="495.50"></text></g><g><title>[libc-2.31.so] (469 samples, 0.38%)</title><rect x="36.8112%" y="469" width="0.3784%" height="15" fill="rgb(228,126,14)" fg:x="45619" fg:w="469"/><text x="37.0612%" y="479.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (5,287 samples, 4.27%)</title><rect x="32.9428%" y="549" width="4.2662%" height="15" fill="rgb(215,173,21)" fg:x="40825" fg:w="5287"/><text x="33.1928%" y="559.50">tremo..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (2,284 samples, 1.84%)</title><rect x="35.3660%" y="533" width="1.8430%" height="15" fill="rgb(210,6,40)" fg:x="43828" fg:w="2284"/><text x="35.6160%" y="543.50">t..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (2,234 samples, 1.80%)</title><rect x="35.4063%" y="517" width="1.8027%" height="15" fill="rgb(212,48,18)" fg:x="43878" fg:w="2234"/><text x="35.6563%" y="527.50">t..</text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (24 samples, 0.02%)</title><rect x="37.1896%" y="501" width="0.0194%" height="15" fill="rgb(230,214,11)" fg:x="46088" fg:w="24"/><text x="37.4396%" y="511.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="37.1896%" y="485" width="0.0194%" height="15" fill="rgb(254,105,39)" fg:x="46088" fg:w="24"/><text x="37.4396%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,949 samples, 4.80%)</title><rect x="32.4651%" y="565" width="4.8004%" height="15" fill="rgb(245,158,5)" fg:x="40233" fg:w="5949"/><text x="32.7151%" y="575.50">&lt;core:..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (70 samples, 0.06%)</title><rect x="37.2090%" y="549" width="0.0565%" height="15" fill="rgb(249,208,11)" fg:x="46112" fg:w="70"/><text x="37.4590%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (13 samples, 0.01%)</title><rect x="37.2550%" y="533" width="0.0105%" height="15" fill="rgb(210,39,28)" fg:x="46169" fg:w="13"/><text x="37.5050%" y="543.50"></text></g><g><title>[libc-2.31.so] (1,943 samples, 1.57%)</title><rect x="37.2655%" y="565" width="1.5679%" height="15" fill="rgb(211,56,53)" fg:x="46182" fg:w="1943"/><text x="37.5155%" y="575.50"></text></g><g><title>sn_rust_dealloc (136 samples, 0.11%)</title><rect x="38.8471%" y="405" width="0.1097%" height="15" fill="rgb(226,201,30)" fg:x="48142" fg:w="136"/><text x="39.0971%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (165 samples, 0.13%)</title><rect x="38.8333%" y="565" width="0.1331%" height="15" fill="rgb(239,101,34)" fg:x="48125" fg:w="165"/><text x="39.0833%" y="575.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (165 samples, 0.13%)</title><rect x="38.8333%" y="549" width="0.1331%" height="15" fill="rgb(226,209,5)" fg:x="48125" fg:w="165"/><text x="39.0833%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (148 samples, 0.12%)</title><rect x="38.8471%" y="533" width="0.1194%" height="15" fill="rgb(250,105,47)" fg:x="48142" fg:w="148"/><text x="39.0971%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (148 samples, 0.12%)</title><rect x="38.8471%" y="517" width="0.1194%" height="15" fill="rgb(230,72,3)" fg:x="48142" fg:w="148"/><text x="39.0971%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (148 samples, 0.12%)</title><rect x="38.8471%" y="501" width="0.1194%" height="15" fill="rgb(232,218,39)" fg:x="48142" fg:w="148"/><text x="39.0971%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.12%)</title><rect x="38.8471%" y="485" width="0.1194%" height="15" fill="rgb(248,166,6)" fg:x="48142" fg:w="148"/><text x="39.0971%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (148 samples, 0.12%)</title><rect x="38.8471%" y="469" width="0.1194%" height="15" fill="rgb(247,89,20)" fg:x="48142" fg:w="148"/><text x="39.0971%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (148 samples, 0.12%)</title><rect x="38.8471%" y="453" width="0.1194%" height="15" fill="rgb(248,130,54)" fg:x="48142" fg:w="148"/><text x="39.0971%" y="463.50"></text></g><g><title>__rg_dealloc (148 samples, 0.12%)</title><rect x="38.8471%" y="437" width="0.1194%" height="15" fill="rgb(234,196,4)" fg:x="48142" fg:w="148"/><text x="39.0971%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (148 samples, 0.12%)</title><rect x="38.8471%" y="421" width="0.1194%" height="15" fill="rgb(250,143,31)" fg:x="48142" fg:w="148"/><text x="39.0971%" y="431.50"></text></g><g><title>async_global_executor::reactor::block_on (24,523 samples, 19.79%)</title><rect x="19.1968%" y="917" width="19.7883%" height="15" fill="rgb(211,110,34)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="927.50">async_global_executor::reactor:..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (24,523 samples, 19.79%)</title><rect x="19.1968%" y="901" width="19.7883%" height="15" fill="rgb(215,124,48)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="911.50">async_global_executor::reactor:..</text></g><g><title>async_io::driver::block_on (24,523 samples, 19.79%)</title><rect x="19.1968%" y="885" width="19.7883%" height="15" fill="rgb(216,46,13)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="895.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24,523 samples, 19.79%)</title><rect x="19.1968%" y="869" width="19.7883%" height="15" fill="rgb(205,184,25)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="879.50">&lt;futures_lite::future::Or&lt;F1,F2..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,523 samples, 19.79%)</title><rect x="19.1968%" y="853" width="19.7883%" height="15" fill="rgb(228,1,10)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="863.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::run::{{closure}} (24,523 samples, 19.79%)</title><rect x="19.1968%" y="837" width="19.7883%" height="15" fill="rgb(213,116,27)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="847.50">async_executor::Executor::run::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24,523 samples, 19.79%)</title><rect x="19.1968%" y="821" width="19.7883%" height="15" fill="rgb(241,95,50)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="831.50">&lt;futures_lite::future::Or&lt;F1,F2..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,523 samples, 19.79%)</title><rect x="19.1968%" y="805" width="19.7883%" height="15" fill="rgb(238,48,32)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="815.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (24,523 samples, 19.79%)</title><rect x="19.1968%" y="789" width="19.7883%" height="15" fill="rgb(235,113,49)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="799.50">async_executor::Executor::run::..</text></g><g><title>async_task::runnable::Runnable::run (24,523 samples, 19.79%)</title><rect x="19.1968%" y="773" width="19.7883%" height="15" fill="rgb(205,127,43)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="783.50">async_task::runnable::Runnable:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (24,523 samples, 19.79%)</title><rect x="19.1968%" y="757" width="19.7883%" height="15" fill="rgb(250,162,2)" fg:x="23790" fg:w="24523"/><text x="19.4468%" y="767.50">async_task::raw::RawTask&lt;F,T,S&gt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24,522 samples, 19.79%)</title><rect x="19.1976%" y="741" width="19.7875%" height="15" fill="rgb(220,13,41)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="751.50">&lt;core::pin::Pin&lt;P&gt; as core::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,522 samples, 19.79%)</title><rect x="19.1976%" y="725" width="19.7875%" height="15" fill="rgb(249,221,25)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="735.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (24,522 samples, 19.79%)</title><rect x="19.1976%" y="709" width="19.7875%" height="15" fill="rgb(215,208,19)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="719.50">async_executor::Executor::spawn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (24,522 samples, 19.79%)</title><rect x="19.1976%" y="693" width="19.7875%" height="15" fill="rgb(236,175,2)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="703.50">&lt;async_std::task::builder::Supp..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (24,522 samples, 19.79%)</title><rect x="19.1976%" y="677" width="19.7875%" height="15" fill="rgb(241,52,2)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="687.50">async_std::task::task_locals_wr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24,522 samples, 19.79%)</title><rect x="19.1976%" y="661" width="19.7875%" height="15" fill="rgb(248,140,14)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="671.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,522 samples, 19.79%)</title><rect x="19.1976%" y="645" width="19.7875%" height="15" fill="rgb(253,22,42)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="655.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (24,522 samples, 19.79%)</title><rect x="19.1976%" y="629" width="19.7875%" height="15" fill="rgb(234,61,47)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="639.50">async_std::task::task_locals_wr..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (24,522 samples, 19.79%)</title><rect x="19.1976%" y="613" width="19.7875%" height="15" fill="rgb(208,226,15)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="623.50">&lt;async_std::task::builder::Supp..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,522 samples, 19.79%)</title><rect x="19.1976%" y="597" width="19.7875%" height="15" fill="rgb(217,221,4)" fg:x="23791" fg:w="24522"/><text x="19.4476%" y="607.50">&lt;core::future::from_generator::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (8,949 samples, 7.22%)</title><rect x="31.7639%" y="581" width="7.2212%" height="15" fill="rgb(212,174,34)" fg:x="39364" fg:w="8949"/><text x="32.0139%" y="591.50">tremor_run..</text></g><g><title>[libc-2.31.so] (785 samples, 0.63%)</title><rect x="39.1585%" y="373" width="0.6334%" height="15" fill="rgb(253,83,4)" fg:x="48528" fg:w="785"/><text x="39.4085%" y="383.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (856 samples, 0.69%)</title><rect x="39.1093%" y="389" width="0.6907%" height="15" fill="rgb(250,195,49)" fg:x="48467" fg:w="856"/><text x="39.3593%" y="399.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,385 samples, 1.12%)</title><rect x="39.0117%" y="405" width="1.1176%" height="15" fill="rgb(241,192,25)" fg:x="48346" fg:w="1385"/><text x="39.2617%" y="415.50"></text></g><g><title>[libc-2.31.so] (408 samples, 0.33%)</title><rect x="39.8000%" y="389" width="0.3292%" height="15" fill="rgb(208,124,10)" fg:x="49323" fg:w="408"/><text x="40.0500%" y="399.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,426 samples, 1.15%)</title><rect x="38.9850%" y="437" width="1.1507%" height="15" fill="rgb(222,33,0)" fg:x="48313" fg:w="1426"/><text x="39.2350%" y="447.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,426 samples, 1.15%)</title><rect x="38.9850%" y="421" width="1.1507%" height="15" fill="rgb(234,209,28)" fg:x="48313" fg:w="1426"/><text x="39.2350%" y="431.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="45.0846%" y="389" width="0.0290%" height="15" fill="rgb(224,11,23)" fg:x="55872" fg:w="36"/><text x="45.3346%" y="399.50"></text></g><g><title>[libc-2.31.so] (401 samples, 0.32%)</title><rect x="45.1137%" y="389" width="0.3236%" height="15" fill="rgb(232,99,1)" fg:x="55908" fg:w="401"/><text x="45.3637%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (46 samples, 0.04%)</title><rect x="45.4437%" y="389" width="0.0371%" height="15" fill="rgb(237,95,45)" fg:x="56317" fg:w="46"/><text x="45.6937%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (46 samples, 0.04%)</title><rect x="45.4437%" y="373" width="0.0371%" height="15" fill="rgb(208,109,11)" fg:x="56317" fg:w="46"/><text x="45.6937%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (15 samples, 0.01%)</title><rect x="45.4687%" y="357" width="0.0121%" height="15" fill="rgb(216,190,48)" fg:x="56348" fg:w="15"/><text x="45.7187%" y="367.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}::{{closure}} (15 samples, 0.01%)</title><rect x="45.4687%" y="341" width="0.0121%" height="15" fill="rgb(251,171,36)" fg:x="56348" fg:w="15"/><text x="45.7187%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="45.4816%" y="325" width="0.0169%" height="15" fill="rgb(230,62,22)" fg:x="56364" fg:w="21"/><text x="45.7316%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (37 samples, 0.03%)</title><rect x="45.4808%" y="389" width="0.0299%" height="15" fill="rgb(225,114,35)" fg:x="56363" fg:w="37"/><text x="45.7308%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (37 samples, 0.03%)</title><rect x="45.4808%" y="373" width="0.0299%" height="15" fill="rgb(215,118,42)" fg:x="56363" fg:w="37"/><text x="45.7308%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.03%)</title><rect x="45.4808%" y="357" width="0.0299%" height="15" fill="rgb(243,119,21)" fg:x="56363" fg:w="37"/><text x="45.7308%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (37 samples, 0.03%)</title><rect x="45.4808%" y="341" width="0.0299%" height="15" fill="rgb(252,177,53)" fg:x="56363" fg:w="37"/><text x="45.7308%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15 samples, 0.01%)</title><rect x="45.4986%" y="325" width="0.0121%" height="15" fill="rgb(237,209,29)" fg:x="56385" fg:w="15"/><text x="45.7486%" y="335.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (15 samples, 0.01%)</title><rect x="45.4986%" y="309" width="0.0121%" height="15" fill="rgb(212,65,23)" fg:x="56385" fg:w="15"/><text x="45.7486%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (23 samples, 0.02%)</title><rect x="45.5107%" y="389" width="0.0186%" height="15" fill="rgb(230,222,46)" fg:x="56400" fg:w="23"/><text x="45.7607%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (23 samples, 0.02%)</title><rect x="45.5107%" y="373" width="0.0186%" height="15" fill="rgb(215,135,32)" fg:x="56400" fg:w="23"/><text x="45.7607%" y="383.50"></text></g><g><title>sn_rust_dealloc (162 samples, 0.13%)</title><rect x="45.5768%" y="229" width="0.1307%" height="15" fill="rgb(246,101,22)" fg:x="56482" fg:w="162"/><text x="45.8268%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (283 samples, 0.23%)</title><rect x="45.5292%" y="373" width="0.2284%" height="15" fill="rgb(206,107,13)" fg:x="56423" fg:w="283"/><text x="45.7792%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (283 samples, 0.23%)</title><rect x="45.5292%" y="357" width="0.2284%" height="15" fill="rgb(250,100,44)" fg:x="56423" fg:w="283"/><text x="45.7792%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (256 samples, 0.21%)</title><rect x="45.5510%" y="341" width="0.2066%" height="15" fill="rgb(231,147,38)" fg:x="56450" fg:w="256"/><text x="45.8010%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (256 samples, 0.21%)</title><rect x="45.5510%" y="325" width="0.2066%" height="15" fill="rgb(229,8,40)" fg:x="56450" fg:w="256"/><text x="45.8010%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (256 samples, 0.21%)</title><rect x="45.5510%" y="309" width="0.2066%" height="15" fill="rgb(221,135,30)" fg:x="56450" fg:w="256"/><text x="45.8010%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (243 samples, 0.20%)</title><rect x="45.5615%" y="293" width="0.1961%" height="15" fill="rgb(249,193,18)" fg:x="56463" fg:w="243"/><text x="45.8115%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (243 samples, 0.20%)</title><rect x="45.5615%" y="277" width="0.1961%" height="15" fill="rgb(209,133,39)" fg:x="56463" fg:w="243"/><text x="45.8115%" y="287.50"></text></g><g><title>__rg_dealloc (243 samples, 0.20%)</title><rect x="45.5615%" y="261" width="0.1961%" height="15" fill="rgb(232,100,14)" fg:x="56463" fg:w="243"/><text x="45.8115%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (243 samples, 0.20%)</title><rect x="45.5615%" y="245" width="0.1961%" height="15" fill="rgb(224,185,1)" fg:x="56463" fg:w="243"/><text x="45.8115%" y="255.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (62 samples, 0.05%)</title><rect x="45.7076%" y="229" width="0.0500%" height="15" fill="rgb(223,139,8)" fg:x="56644" fg:w="62"/><text x="45.9576%" y="239.50"></text></g><g><title>sn_rust_dealloc (80 samples, 0.06%)</title><rect x="45.7665%" y="277" width="0.0646%" height="15" fill="rgb(232,213,38)" fg:x="56717" fg:w="80"/><text x="46.0165%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (95 samples, 0.08%)</title><rect x="45.7576%" y="341" width="0.0767%" height="15" fill="rgb(207,94,22)" fg:x="56706" fg:w="95"/><text x="46.0076%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (95 samples, 0.08%)</title><rect x="45.7576%" y="325" width="0.0767%" height="15" fill="rgb(219,183,54)" fg:x="56706" fg:w="95"/><text x="46.0076%" y="335.50"></text></g><g><title>__rg_dealloc (95 samples, 0.08%)</title><rect x="45.7576%" y="309" width="0.0767%" height="15" fill="rgb(216,185,54)" fg:x="56706" fg:w="95"/><text x="46.0076%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (95 samples, 0.08%)</title><rect x="45.7576%" y="293" width="0.0767%" height="15" fill="rgb(254,217,39)" fg:x="56706" fg:w="95"/><text x="46.0076%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (386 samples, 0.31%)</title><rect x="45.5292%" y="389" width="0.3115%" height="15" fill="rgb(240,178,23)" fg:x="56423" fg:w="386"/><text x="45.7792%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (103 samples, 0.08%)</title><rect x="45.7576%" y="373" width="0.0831%" height="15" fill="rgb(218,11,47)" fg:x="56706" fg:w="103"/><text x="46.0076%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.08%)</title><rect x="45.7576%" y="357" width="0.0831%" height="15" fill="rgb(218,51,51)" fg:x="56706" fg:w="103"/><text x="46.0076%" y="367.50"></text></g><g><title>sn_rust_dealloc (220 samples, 0.18%)</title><rect x="45.8714%" y="213" width="0.1775%" height="15" fill="rgb(238,126,27)" fg:x="56847" fg:w="220"/><text x="46.1214%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (279 samples, 0.23%)</title><rect x="45.8520%" y="341" width="0.2251%" height="15" fill="rgb(249,202,22)" fg:x="56823" fg:w="279"/><text x="46.1020%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (279 samples, 0.23%)</title><rect x="45.8520%" y="325" width="0.2251%" height="15" fill="rgb(254,195,49)" fg:x="56823" fg:w="279"/><text x="46.1020%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (279 samples, 0.23%)</title><rect x="45.8520%" y="309" width="0.2251%" height="15" fill="rgb(208,123,14)" fg:x="56823" fg:w="279"/><text x="46.1020%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (279 samples, 0.23%)</title><rect x="45.8520%" y="293" width="0.2251%" height="15" fill="rgb(224,200,8)" fg:x="56823" fg:w="279"/><text x="46.1020%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (255 samples, 0.21%)</title><rect x="45.8714%" y="277" width="0.2058%" height="15" fill="rgb(217,61,36)" fg:x="56847" fg:w="255"/><text x="46.1214%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (255 samples, 0.21%)</title><rect x="45.8714%" y="261" width="0.2058%" height="15" fill="rgb(206,35,45)" fg:x="56847" fg:w="255"/><text x="46.1214%" y="271.50"></text></g><g><title>__rg_dealloc (255 samples, 0.21%)</title><rect x="45.8714%" y="245" width="0.2058%" height="15" fill="rgb(217,65,33)" fg:x="56847" fg:w="255"/><text x="46.1214%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (255 samples, 0.21%)</title><rect x="45.8714%" y="229" width="0.2058%" height="15" fill="rgb(222,158,48)" fg:x="56847" fg:w="255"/><text x="46.1214%" y="239.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (35 samples, 0.03%)</title><rect x="46.0489%" y="213" width="0.0282%" height="15" fill="rgb(254,2,54)" fg:x="57067" fg:w="35"/><text x="46.2989%" y="223.50"></text></g><g><title>sn_rust_dealloc (365 samples, 0.29%)</title><rect x="47.0180%" y="165" width="0.2945%" height="15" fill="rgb(250,143,38)" fg:x="58268" fg:w="365"/><text x="47.2680%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (422 samples, 0.34%)</title><rect x="47.0011%" y="229" width="0.3405%" height="15" fill="rgb(248,25,0)" fg:x="58247" fg:w="422"/><text x="47.2511%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (422 samples, 0.34%)</title><rect x="47.0011%" y="213" width="0.3405%" height="15" fill="rgb(206,152,27)" fg:x="58247" fg:w="422"/><text x="47.2511%" y="223.50"></text></g><g><title>__rg_dealloc (422 samples, 0.34%)</title><rect x="47.0011%" y="197" width="0.3405%" height="15" fill="rgb(240,77,30)" fg:x="58247" fg:w="422"/><text x="47.2511%" y="207.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (422 samples, 0.34%)</title><rect x="47.0011%" y="181" width="0.3405%" height="15" fill="rgb(231,5,3)" fg:x="58247" fg:w="422"/><text x="47.2511%" y="191.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (36 samples, 0.03%)</title><rect x="47.3125%" y="165" width="0.0290%" height="15" fill="rgb(207,226,32)" fg:x="58633" fg:w="36"/><text x="47.5625%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,604 samples, 1.29%)</title><rect x="46.0771%" y="325" width="1.2943%" height="15" fill="rgb(222,207,47)" fg:x="57102" fg:w="1604"/><text x="46.3271%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1,590 samples, 1.28%)</title><rect x="46.0884%" y="309" width="1.2830%" height="15" fill="rgb(229,115,45)" fg:x="57116" fg:w="1590"/><text x="46.3384%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,575 samples, 1.27%)</title><rect x="46.1005%" y="293" width="1.2709%" height="15" fill="rgb(224,191,6)" fg:x="57131" fg:w="1575"/><text x="46.3505%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,575 samples, 1.27%)</title><rect x="46.1005%" y="277" width="1.2709%" height="15" fill="rgb(230,227,24)" fg:x="57131" fg:w="1575"/><text x="46.3505%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,575 samples, 1.27%)</title><rect x="46.1005%" y="261" width="1.2709%" height="15" fill="rgb(228,80,19)" fg:x="57131" fg:w="1575"/><text x="46.3505%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,575 samples, 1.27%)</title><rect x="46.1005%" y="245" width="1.2709%" height="15" fill="rgb(247,229,0)" fg:x="57131" fg:w="1575"/><text x="46.3505%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (37 samples, 0.03%)</title><rect x="47.3416%" y="229" width="0.0299%" height="15" fill="rgb(237,194,15)" fg:x="58669" fg:w="37"/><text x="47.5916%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="47.3811%" y="293" width="0.0129%" height="15" fill="rgb(219,203,20)" fg:x="58718" fg:w="16"/><text x="47.6311%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="47.3811%" y="277" width="0.0129%" height="15" fill="rgb(234,128,8)" fg:x="58718" fg:w="16"/><text x="47.6311%" y="287.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="47.3811%" y="261" width="0.0129%" height="15" fill="rgb(248,202,8)" fg:x="58718" fg:w="16"/><text x="47.6311%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="47.3811%" y="245" width="0.0129%" height="15" fill="rgb(206,104,37)" fg:x="58718" fg:w="16"/><text x="47.6311%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,914 samples, 1.54%)</title><rect x="45.8520%" y="357" width="1.5445%" height="15" fill="rgb(223,8,27)" fg:x="56823" fg:w="1914"/><text x="46.1020%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1,635 samples, 1.32%)</title><rect x="46.0771%" y="341" width="1.3193%" height="15" fill="rgb(216,217,28)" fg:x="57102" fg:w="1635"/><text x="46.3271%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (31 samples, 0.03%)</title><rect x="47.3714%" y="325" width="0.0250%" height="15" fill="rgb(249,199,1)" fg:x="58706" fg:w="31"/><text x="47.6214%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="47.3714%" y="309" width="0.0250%" height="15" fill="rgb(240,85,17)" fg:x="58706" fg:w="31"/><text x="47.6214%" y="319.50"></text></g><g><title>sn_rust_dealloc (138 samples, 0.11%)</title><rect x="47.3965%" y="357" width="0.1114%" height="15" fill="rgb(206,108,45)" fg:x="58737" fg:w="138"/><text x="47.6465%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (2,108 samples, 1.70%)</title><rect x="45.8415%" y="373" width="1.7010%" height="15" fill="rgb(245,210,41)" fg:x="56810" fg:w="2108"/><text x="46.0915%" y="383.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (43 samples, 0.03%)</title><rect x="47.5078%" y="357" width="0.0347%" height="15" fill="rgb(206,13,37)" fg:x="58875" fg:w="43"/><text x="47.7578%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (14 samples, 0.01%)</title><rect x="47.5425%" y="373" width="0.0113%" height="15" fill="rgb(250,61,18)" fg:x="58918" fg:w="14"/><text x="47.7925%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="47.5425%" y="357" width="0.0113%" height="15" fill="rgb(235,172,48)" fg:x="58918" fg:w="14"/><text x="47.7925%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (14 samples, 0.01%)</title><rect x="47.5425%" y="341" width="0.0113%" height="15" fill="rgb(249,201,17)" fg:x="58918" fg:w="14"/><text x="47.7925%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="47.5425%" y="325" width="0.0113%" height="15" fill="rgb(219,208,6)" fg:x="58918" fg:w="14"/><text x="47.7925%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="47.5425%" y="309" width="0.0113%" height="15" fill="rgb(248,31,23)" fg:x="58918" fg:w="14"/><text x="47.7925%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="48.2760%" y="213" width="0.0105%" height="15" fill="rgb(245,15,42)" fg:x="59827" fg:w="13"/><text x="48.5260%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="48.2760%" y="197" width="0.0105%" height="15" fill="rgb(222,217,39)" fg:x="59827" fg:w="13"/><text x="48.5260%" y="207.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="48.2760%" y="181" width="0.0105%" height="15" fill="rgb(210,219,27)" fg:x="59827" fg:w="13"/><text x="48.5260%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="48.2760%" y="165" width="0.0105%" height="15" fill="rgb(252,166,36)" fg:x="59827" fg:w="13"/><text x="48.5260%" y="175.50"></text></g><g><title>core::mem::drop (1,545 samples, 1.25%)</title><rect x="48.2712%" y="261" width="1.2467%" height="15" fill="rgb(245,132,34)" fg:x="59821" fg:w="1545"/><text x="48.5212%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;alloc::string::String&gt;&gt; (1,545 samples, 1.25%)</title><rect x="48.2712%" y="245" width="1.2467%" height="15" fill="rgb(236,54,3)" fg:x="59821" fg:w="1545"/><text x="48.5212%" y="255.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,545 samples, 1.25%)</title><rect x="48.2712%" y="229" width="1.2467%" height="15" fill="rgb(241,173,43)" fg:x="59821" fg:w="1545"/><text x="48.5212%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,519 samples, 1.23%)</title><rect x="48.2921%" y="213" width="1.2257%" height="15" fill="rgb(215,190,9)" fg:x="59847" fg:w="1519"/><text x="48.5421%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,519 samples, 1.23%)</title><rect x="48.2921%" y="197" width="1.2257%" height="15" fill="rgb(242,101,16)" fg:x="59847" fg:w="1519"/><text x="48.5421%" y="207.50"></text></g><g><title>sn_rust_dealloc (232 samples, 0.19%)</title><rect x="49.5526%" y="133" width="0.1872%" height="15" fill="rgb(223,190,21)" fg:x="61409" fg:w="232"/><text x="49.8026%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2,436 samples, 1.97%)</title><rect x="48.2574%" y="277" width="1.9657%" height="15" fill="rgb(215,228,25)" fg:x="59804" fg:w="2436"/><text x="48.5074%" y="287.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (874 samples, 0.71%)</title><rect x="49.5179%" y="261" width="0.7053%" height="15" fill="rgb(225,36,22)" fg:x="61366" fg:w="874"/><text x="49.7679%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (874 samples, 0.71%)</title><rect x="49.5179%" y="245" width="0.7053%" height="15" fill="rgb(251,106,46)" fg:x="61366" fg:w="874"/><text x="49.7679%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (874 samples, 0.71%)</title><rect x="49.5179%" y="229" width="0.7053%" height="15" fill="rgb(208,90,1)" fg:x="61366" fg:w="874"/><text x="49.7679%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (874 samples, 0.71%)</title><rect x="49.5179%" y="213" width="0.7053%" height="15" fill="rgb(243,10,4)" fg:x="61366" fg:w="874"/><text x="49.7679%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (831 samples, 0.67%)</title><rect x="49.5526%" y="197" width="0.6706%" height="15" fill="rgb(212,137,27)" fg:x="61409" fg:w="831"/><text x="49.8026%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (831 samples, 0.67%)</title><rect x="49.5526%" y="181" width="0.6706%" height="15" fill="rgb(231,220,49)" fg:x="61409" fg:w="831"/><text x="49.8026%" y="191.50"></text></g><g><title>__rg_dealloc (831 samples, 0.67%)</title><rect x="49.5526%" y="165" width="0.6706%" height="15" fill="rgb(237,96,20)" fg:x="61409" fg:w="831"/><text x="49.8026%" y="175.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (831 samples, 0.67%)</title><rect x="49.5526%" y="149" width="0.6706%" height="15" fill="rgb(239,229,30)" fg:x="61409" fg:w="831"/><text x="49.8026%" y="159.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (599 samples, 0.48%)</title><rect x="49.7398%" y="133" width="0.4833%" height="15" fill="rgb(219,65,33)" fg:x="61641" fg:w="599"/><text x="49.9898%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,833 samples, 1.48%)</title><rect x="50.2231%" y="277" width="1.4791%" height="15" fill="rgb(243,134,7)" fg:x="62240" fg:w="1833"/><text x="50.4731%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,833 samples, 1.48%)</title><rect x="50.2231%" y="261" width="1.4791%" height="15" fill="rgb(216,177,54)" fg:x="62240" fg:w="1833"/><text x="50.4731%" y="271.50"></text></g><g><title>sn_rust_dealloc (124 samples, 0.10%)</title><rect x="51.7022%" y="277" width="0.1001%" height="15" fill="rgb(211,160,20)" fg:x="64073" fg:w="124"/><text x="51.9522%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,314 samples, 4.29%)</title><rect x="47.5554%" y="341" width="4.2880%" height="15" fill="rgb(239,85,39)" fg:x="58934" fg:w="5314"/><text x="47.8054%" y="351.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (5,314 samples, 4.29%)</title><rect x="47.5554%" y="325" width="4.2880%" height="15" fill="rgb(232,125,22)" fg:x="58934" fg:w="5314"/><text x="47.8054%" y="335.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (5,287 samples, 4.27%)</title><rect x="47.5772%" y="309" width="4.2662%" height="15" fill="rgb(244,57,34)" fg:x="58961" fg:w="5287"/><text x="47.8272%" y="319.50">core:..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,287 samples, 4.27%)</title><rect x="47.5772%" y="293" width="4.2662%" height="15" fill="rgb(214,203,32)" fg:x="58961" fg:w="5287"/><text x="47.8272%" y="303.50">&lt;allo..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (51 samples, 0.04%)</title><rect x="51.8023%" y="277" width="0.0412%" height="15" fill="rgb(207,58,43)" fg:x="64197" fg:w="51"/><text x="52.0523%" y="287.50"></text></g><g><title>sn_rust_dealloc (106 samples, 0.09%)</title><rect x="51.8652%" y="245" width="0.0855%" height="15" fill="rgb(215,193,15)" fg:x="64275" fg:w="106"/><text x="52.1152%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (128 samples, 0.10%)</title><rect x="51.8531%" y="309" width="0.1033%" height="15" fill="rgb(232,15,44)" fg:x="64260" fg:w="128"/><text x="52.1031%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (128 samples, 0.10%)</title><rect x="51.8531%" y="293" width="0.1033%" height="15" fill="rgb(212,3,48)" fg:x="64260" fg:w="128"/><text x="52.1031%" y="303.50"></text></g><g><title>__rg_dealloc (128 samples, 0.10%)</title><rect x="51.8531%" y="277" width="0.1033%" height="15" fill="rgb(218,128,7)" fg:x="64260" fg:w="128"/><text x="52.1031%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (128 samples, 0.10%)</title><rect x="51.8531%" y="261" width="0.1033%" height="15" fill="rgb(226,216,39)" fg:x="64260" fg:w="128"/><text x="52.1031%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (5,457 samples, 4.40%)</title><rect x="47.5554%" y="357" width="4.4034%" height="15" fill="rgb(243,47,51)" fg:x="58934" fg:w="5457"/><text x="47.8054%" y="367.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (143 samples, 0.12%)</title><rect x="51.8434%" y="341" width="0.1154%" height="15" fill="rgb(241,183,40)" fg:x="64248" fg:w="143"/><text x="52.0934%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (143 samples, 0.12%)</title><rect x="51.8434%" y="325" width="0.1154%" height="15" fill="rgb(231,217,32)" fg:x="64248" fg:w="143"/><text x="52.0934%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (5,502 samples, 4.44%)</title><rect x="47.5554%" y="373" width="4.4397%" height="15" fill="rgb(229,61,38)" fg:x="58934" fg:w="5502"/><text x="47.8054%" y="383.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (45 samples, 0.04%)</title><rect x="51.9588%" y="357" width="0.0363%" height="15" fill="rgb(225,210,5)" fg:x="64391" fg:w="45"/><text x="52.2088%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (33 samples, 0.03%)</title><rect x="51.9685%" y="341" width="0.0266%" height="15" fill="rgb(231,79,45)" fg:x="64403" fg:w="33"/><text x="52.2185%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.03%)</title><rect x="52.1024%" y="277" width="0.0331%" height="15" fill="rgb(224,100,7)" fg:x="64569" fg:w="41"/><text x="52.3524%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (39 samples, 0.03%)</title><rect x="52.1041%" y="261" width="0.0315%" height="15" fill="rgb(241,198,18)" fg:x="64571" fg:w="39"/><text x="52.3541%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (187 samples, 0.15%)</title><rect x="51.9951%" y="373" width="0.1509%" height="15" fill="rgb(252,97,53)" fg:x="64436" fg:w="187"/><text x="52.2451%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (147 samples, 0.12%)</title><rect x="52.0274%" y="357" width="0.1186%" height="15" fill="rgb(220,88,7)" fg:x="64476" fg:w="147"/><text x="52.2774%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (136 samples, 0.11%)</title><rect x="52.0363%" y="341" width="0.1097%" height="15" fill="rgb(213,176,14)" fg:x="64487" fg:w="136"/><text x="52.2863%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (136 samples, 0.11%)</title><rect x="52.0363%" y="325" width="0.1097%" height="15" fill="rgb(246,73,7)" fg:x="64487" fg:w="136"/><text x="52.2863%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (54 samples, 0.04%)</title><rect x="52.1024%" y="309" width="0.0436%" height="15" fill="rgb(245,64,36)" fg:x="64569" fg:w="54"/><text x="52.3524%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (54 samples, 0.04%)</title><rect x="52.1024%" y="293" width="0.0436%" height="15" fill="rgb(245,80,10)" fg:x="64569" fg:w="54"/><text x="52.3524%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (13 samples, 0.01%)</title><rect x="52.1355%" y="277" width="0.0105%" height="15" fill="rgb(232,107,50)" fg:x="64610" fg:w="13"/><text x="52.3855%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="52.1355%" y="261" width="0.0105%" height="15" fill="rgb(253,3,0)" fg:x="64610" fg:w="13"/><text x="52.3855%" y="271.50"></text></g><g><title>sn_rust_dealloc (117 samples, 0.09%)</title><rect x="52.1460%" y="373" width="0.0944%" height="15" fill="rgb(212,99,53)" fg:x="64623" fg:w="117"/><text x="52.3960%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (7,971 samples, 6.43%)</title><rect x="45.8407%" y="389" width="6.4320%" height="15" fill="rgb(249,111,54)" fg:x="56809" fg:w="7971"/><text x="46.0907%" y="399.50">core::pt..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (40 samples, 0.03%)</title><rect x="52.2404%" y="373" width="0.0323%" height="15" fill="rgb(249,55,30)" fg:x="64740" fg:w="40"/><text x="52.4904%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (18 samples, 0.01%)</title><rect x="52.2727%" y="389" width="0.0145%" height="15" fill="rgb(237,47,42)" fg:x="64780" fg:w="18"/><text x="52.5227%" y="399.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (18 samples, 0.01%)</title><rect x="52.2727%" y="373" width="0.0145%" height="15" fill="rgb(211,20,18)" fg:x="64780" fg:w="18"/><text x="52.5227%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (18 samples, 0.01%)</title><rect x="52.2727%" y="357" width="0.0145%" height="15" fill="rgb(231,203,46)" fg:x="64780" fg:w="18"/><text x="52.5227%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (18 samples, 0.01%)</title><rect x="52.2727%" y="341" width="0.0145%" height="15" fill="rgb(237,142,3)" fg:x="64780" fg:w="18"/><text x="52.5227%" y="351.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (15 samples, 0.01%)</title><rect x="52.3954%" y="341" width="0.0121%" height="15" fill="rgb(241,107,1)" fg:x="64932" fg:w="15"/><text x="52.6454%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (15 samples, 0.01%)</title><rect x="52.3954%" y="325" width="0.0121%" height="15" fill="rgb(229,83,13)" fg:x="64932" fg:w="15"/><text x="52.6454%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (13 samples, 0.01%)</title><rect x="52.4502%" y="309" width="0.0105%" height="15" fill="rgb(241,91,40)" fg:x="65000" fg:w="13"/><text x="52.7002%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (13 samples, 0.01%)</title><rect x="52.4502%" y="293" width="0.0105%" height="15" fill="rgb(225,3,45)" fg:x="65000" fg:w="13"/><text x="52.7002%" y="303.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (70 samples, 0.06%)</title><rect x="52.4147%" y="341" width="0.0565%" height="15" fill="rgb(244,223,14)" fg:x="64956" fg:w="70"/><text x="52.6647%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (63 samples, 0.05%)</title><rect x="52.4204%" y="325" width="0.0508%" height="15" fill="rgb(224,124,37)" fg:x="64963" fg:w="63"/><text x="52.6704%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::sub_bucket_for (13 samples, 0.01%)</title><rect x="52.4607%" y="309" width="0.0105%" height="15" fill="rgb(251,171,30)" fg:x="65013" fg:w="13"/><text x="52.7107%" y="319.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (248 samples, 0.20%)</title><rect x="52.2872%" y="389" width="0.2001%" height="15" fill="rgb(236,46,54)" fg:x="64798" fg:w="248"/><text x="52.5372%" y="399.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (245 samples, 0.20%)</title><rect x="52.2897%" y="373" width="0.1977%" height="15" fill="rgb(245,213,5)" fg:x="64801" fg:w="245"/><text x="52.5397%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (245 samples, 0.20%)</title><rect x="52.2897%" y="357" width="0.1977%" height="15" fill="rgb(230,144,27)" fg:x="64801" fg:w="245"/><text x="52.5397%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::update_min_max (20 samples, 0.02%)</title><rect x="52.4712%" y="341" width="0.0161%" height="15" fill="rgb(220,86,6)" fg:x="65026" fg:w="20"/><text x="52.7212%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (51 samples, 0.04%)</title><rect x="52.5237%" y="373" width="0.0412%" height="15" fill="rgb(240,20,13)" fg:x="65091" fg:w="51"/><text x="52.7737%" y="383.50"></text></g><g><title>core::time::Duration::as_nanos (58 samples, 0.05%)</title><rect x="52.5648%" y="373" width="0.0468%" height="15" fill="rgb(217,89,34)" fg:x="65142" fg:w="58"/><text x="52.8148%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (216 samples, 0.17%)</title><rect x="52.6116%" y="357" width="0.1743%" height="15" fill="rgb(229,13,5)" fg:x="65200" fg:w="216"/><text x="52.8616%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (91 samples, 0.07%)</title><rect x="52.8505%" y="325" width="0.0734%" height="15" fill="rgb(244,67,35)" fg:x="65496" fg:w="91"/><text x="53.1005%" y="335.50"></text></g><g><title>core::cmp::PartialOrd::ge (91 samples, 0.07%)</title><rect x="52.8505%" y="309" width="0.0734%" height="15" fill="rgb(221,40,2)" fg:x="65496" fg:w="91"/><text x="53.1005%" y="319.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (91 samples, 0.07%)</title><rect x="52.8505%" y="293" width="0.0734%" height="15" fill="rgb(237,157,21)" fg:x="65496" fg:w="91"/><text x="53.1005%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (44 samples, 0.04%)</title><rect x="52.8884%" y="277" width="0.0355%" height="15" fill="rgb(222,94,11)" fg:x="65543" fg:w="44"/><text x="53.1384%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (44 samples, 0.04%)</title><rect x="52.8884%" y="261" width="0.0355%" height="15" fill="rgb(249,113,6)" fg:x="65543" fg:w="44"/><text x="53.1384%" y="271.50"></text></g><g><title>std::time::SystemTime::duration_since (430 samples, 0.35%)</title><rect x="52.6116%" y="373" width="0.3470%" height="15" fill="rgb(238,137,36)" fg:x="65200" fg:w="430"/><text x="52.8616%" y="383.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (214 samples, 0.17%)</title><rect x="52.7859%" y="357" width="0.1727%" height="15" fill="rgb(210,102,26)" fg:x="65416" fg:w="214"/><text x="53.0359%" y="367.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (214 samples, 0.17%)</title><rect x="52.7859%" y="341" width="0.1727%" height="15" fill="rgb(218,30,30)" fg:x="65416" fg:w="214"/><text x="53.0359%" y="351.50"></text></g><g><title>core::time::Duration::new (43 samples, 0.03%)</title><rect x="52.9239%" y="325" width="0.0347%" height="15" fill="rgb(214,67,26)" fg:x="65587" fg:w="43"/><text x="53.1739%" y="335.50"></text></g><g><title>tremor_common::time::nanotime (1,528 samples, 1.23%)</title><rect x="52.4874%" y="389" width="1.2330%" height="15" fill="rgb(251,9,53)" fg:x="65046" fg:w="1528"/><text x="52.7374%" y="399.50"></text></g><g><title>std::time::SystemTime::now (944 samples, 0.76%)</title><rect x="52.9586%" y="373" width="0.7617%" height="15" fill="rgb(228,204,25)" fg:x="65630" fg:w="944"/><text x="53.2086%" y="383.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (944 samples, 0.76%)</title><rect x="52.9586%" y="357" width="0.7617%" height="15" fill="rgb(207,153,8)" fg:x="65630" fg:w="944"/><text x="53.2086%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (944 samples, 0.76%)</title><rect x="52.9586%" y="341" width="0.7617%" height="15" fill="rgb(242,9,16)" fg:x="65630" fg:w="944"/><text x="53.2086%" y="351.50"></text></g><g><title>__clock_gettime (754 samples, 0.61%)</title><rect x="53.1119%" y="325" width="0.6084%" height="15" fill="rgb(217,211,10)" fg:x="65820" fg:w="754"/><text x="53.3619%" y="335.50"></text></g><g><title>__vdso_clock_gettime (722 samples, 0.58%)</title><rect x="53.1377%" y="309" width="0.5826%" height="15" fill="rgb(219,228,52)" fg:x="65852" fg:w="722"/><text x="53.3877%" y="319.50"></text></g><g><title>[[vdso]] (629 samples, 0.51%)</title><rect x="53.2128%" y="293" width="0.5076%" height="15" fill="rgb(231,92,29)" fg:x="65945" fg:w="629"/><text x="53.4628%" y="303.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (18,279 samples, 14.75%)</title><rect x="38.9850%" y="453" width="14.7498%" height="15" fill="rgb(232,8,23)" fg:x="48313" fg:w="18279"/><text x="39.2350%" y="463.50">tremor_runtime::connec..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16,853 samples, 13.60%)</title><rect x="40.1357%" y="437" width="13.5991%" height="15" fill="rgb(216,211,34)" fg:x="49739" fg:w="16853"/><text x="40.3857%" y="447.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,853 samples, 13.60%)</title><rect x="40.1357%" y="421" width="13.5991%" height="15" fill="rgb(236,151,0)" fg:x="49739" fg:w="16853"/><text x="40.3857%" y="431.50">&lt;core::future::from_g..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (11,229 samples, 9.06%)</title><rect x="44.6739%" y="405" width="9.0610%" height="15" fill="rgb(209,168,3)" fg:x="55363" fg:w="11229"/><text x="44.9239%" y="415.50">&lt;tremor_runti..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (18 samples, 0.01%)</title><rect x="53.7203%" y="389" width="0.0145%" height="15" fill="rgb(208,129,28)" fg:x="66574" fg:w="18"/><text x="53.9703%" y="399.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (18 samples, 0.01%)</title><rect x="53.7203%" y="373" width="0.0145%" height="15" fill="rgb(229,78,22)" fg:x="66574" fg:w="18"/><text x="53.9703%" y="383.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (18,287 samples, 14.76%)</title><rect x="38.9850%" y="917" width="14.7563%" height="15" fill="rgb(228,187,13)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="927.50">async_global_executor::..</text></g><g><title>std::panic::catch_unwind (18,287 samples, 14.76%)</title><rect x="38.9850%" y="901" width="14.7563%" height="15" fill="rgb(240,119,24)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18,287 samples, 14.76%)</title><rect x="38.9850%" y="885" width="14.7563%" height="15" fill="rgb(209,194,42)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18,287 samples, 14.76%)</title><rect x="38.9850%" y="869" width="14.7563%" height="15" fill="rgb(247,200,46)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="879.50">std::panicking::try::do..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (18,287 samples, 14.76%)</title><rect x="38.9850%" y="853" width="14.7563%" height="15" fill="rgb(218,76,16)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="863.50">async_global_executor::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,287 samples, 14.76%)</title><rect x="38.9850%" y="837" width="14.7563%" height="15" fill="rgb(225,21,48)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="847.50">std::thread::local::Loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,287 samples, 14.76%)</title><rect x="38.9850%" y="821" width="14.7563%" height="15" fill="rgb(239,223,50)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="831.50">std::thread::local::Loc..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (18,287 samples, 14.76%)</title><rect x="38.9850%" y="805" width="14.7563%" height="15" fill="rgb(244,45,21)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="815.50">async_global_executor::..</text></g><g><title>async_global_executor::reactor::block_on (18,287 samples, 14.76%)</title><rect x="38.9850%" y="789" width="14.7563%" height="15" fill="rgb(232,33,43)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="799.50">async_global_executor::..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (18,287 samples, 14.76%)</title><rect x="38.9850%" y="773" width="14.7563%" height="15" fill="rgb(209,8,3)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="783.50">async_global_executor::..</text></g><g><title>async_io::driver::block_on (18,287 samples, 14.76%)</title><rect x="38.9850%" y="757" width="14.7563%" height="15" fill="rgb(214,25,53)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="767.50">async_io::driver::block..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,287 samples, 14.76%)</title><rect x="38.9850%" y="741" width="14.7563%" height="15" fill="rgb(254,186,54)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="751.50">&lt;futures_lite::future::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,287 samples, 14.76%)</title><rect x="38.9850%" y="725" width="14.7563%" height="15" fill="rgb(208,174,49)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="735.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::run::{{closure}} (18,287 samples, 14.76%)</title><rect x="38.9850%" y="709" width="14.7563%" height="15" fill="rgb(233,191,51)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="719.50">async_executor::Executo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,287 samples, 14.76%)</title><rect x="38.9850%" y="693" width="14.7563%" height="15" fill="rgb(222,134,10)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="703.50">&lt;futures_lite::future::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,287 samples, 14.76%)</title><rect x="38.9850%" y="677" width="14.7563%" height="15" fill="rgb(230,226,20)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="687.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (18,287 samples, 14.76%)</title><rect x="38.9850%" y="661" width="14.7563%" height="15" fill="rgb(251,111,25)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="671.50">async_executor::Executo..</text></g><g><title>async_task::runnable::Runnable::run (18,287 samples, 14.76%)</title><rect x="38.9850%" y="645" width="14.7563%" height="15" fill="rgb(224,40,46)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="655.50">async_task::runnable::R..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (18,287 samples, 14.76%)</title><rect x="38.9850%" y="629" width="14.7563%" height="15" fill="rgb(236,108,47)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="639.50">async_task::raw::RawTas..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18,287 samples, 14.76%)</title><rect x="38.9850%" y="613" width="14.7563%" height="15" fill="rgb(234,93,0)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="623.50">&lt;core::pin::Pin&lt;P&gt; as c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,287 samples, 14.76%)</title><rect x="38.9850%" y="597" width="14.7563%" height="15" fill="rgb(224,213,32)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="607.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (18,287 samples, 14.76%)</title><rect x="38.9850%" y="581" width="14.7563%" height="15" fill="rgb(251,11,48)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="591.50">async_executor::Executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (18,287 samples, 14.76%)</title><rect x="38.9850%" y="565" width="14.7563%" height="15" fill="rgb(236,173,5)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="575.50">&lt;async_std::task::build..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (18,287 samples, 14.76%)</title><rect x="38.9850%" y="549" width="14.7563%" height="15" fill="rgb(230,95,12)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="559.50">async_std::task::task_l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,287 samples, 14.76%)</title><rect x="38.9850%" y="533" width="14.7563%" height="15" fill="rgb(232,209,1)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="543.50">std::thread::local::Loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,287 samples, 14.76%)</title><rect x="38.9850%" y="517" width="14.7563%" height="15" fill="rgb(232,6,1)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="527.50">std::thread::local::Loc..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (18,287 samples, 14.76%)</title><rect x="38.9850%" y="501" width="14.7563%" height="15" fill="rgb(210,224,50)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="511.50">async_std::task::task_l..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (18,287 samples, 14.76%)</title><rect x="38.9850%" y="485" width="14.7563%" height="15" fill="rgb(228,127,35)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="495.50">&lt;async_std::task::build..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,287 samples, 14.76%)</title><rect x="38.9850%" y="469" width="14.7563%" height="15" fill="rgb(245,102,45)" fg:x="48313" fg:w="18287"/><text x="39.2350%" y="479.50">&lt;core::future::from_gen..</text></g><g><title>alloc::alloc::exchange_malloc (77 samples, 0.06%)</title><rect x="53.7962%" y="485" width="0.0621%" height="15" fill="rgb(214,1,49)" fg:x="66668" fg:w="77"/><text x="54.0462%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.06%)</title><rect x="53.7962%" y="469" width="0.0621%" height="15" fill="rgb(226,163,40)" fg:x="66668" fg:w="77"/><text x="54.0462%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.06%)</title><rect x="53.7962%" y="453" width="0.0621%" height="15" fill="rgb(239,212,28)" fg:x="66668" fg:w="77"/><text x="54.0462%" y="463.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.06%)</title><rect x="53.8010%" y="437" width="0.0573%" height="15" fill="rgb(220,20,13)" fg:x="66674" fg:w="71"/><text x="54.0510%" y="447.50"></text></g><g><title>__rg_alloc (71 samples, 0.06%)</title><rect x="53.8010%" y="421" width="0.0573%" height="15" fill="rgb(210,164,35)" fg:x="66674" fg:w="71"/><text x="54.0510%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (71 samples, 0.06%)</title><rect x="53.8010%" y="405" width="0.0573%" height="15" fill="rgb(248,109,41)" fg:x="66674" fg:w="71"/><text x="54.0510%" y="415.50"></text></g><g><title>sn_rust_alloc (71 samples, 0.06%)</title><rect x="53.8010%" y="389" width="0.0573%" height="15" fill="rgb(238,23,50)" fg:x="66674" fg:w="71"/><text x="54.0510%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (15 samples, 0.01%)</title><rect x="53.8583%" y="485" width="0.0121%" height="15" fill="rgb(211,48,49)" fg:x="66745" fg:w="15"/><text x="54.1083%" y="495.50"></text></g><g><title>alloc::slice::hack::into_vec (15 samples, 0.01%)</title><rect x="53.8583%" y="469" width="0.0121%" height="15" fill="rgb(223,36,21)" fg:x="66745" fg:w="15"/><text x="54.1083%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (15 samples, 0.01%)</title><rect x="53.8583%" y="453" width="0.0121%" height="15" fill="rgb(207,123,46)" fg:x="66745" fg:w="15"/><text x="54.1083%" y="463.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (16 samples, 0.01%)</title><rect x="53.8753%" y="485" width="0.0129%" height="15" fill="rgb(240,218,32)" fg:x="66766" fg:w="16"/><text x="54.1253%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (16 samples, 0.01%)</title><rect x="53.8753%" y="469" width="0.0129%" height="15" fill="rgb(252,5,43)" fg:x="66766" fg:w="16"/><text x="54.1253%" y="479.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="53.8753%" y="453" width="0.0129%" height="15" fill="rgb(252,84,19)" fg:x="66766" fg:w="16"/><text x="54.1253%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (16 samples, 0.01%)</title><rect x="53.8753%" y="437" width="0.0129%" height="15" fill="rgb(243,152,39)" fg:x="66766" fg:w="16"/><text x="54.1253%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.01%)</title><rect x="53.8753%" y="421" width="0.0129%" height="15" fill="rgb(234,160,15)" fg:x="66766" fg:w="16"/><text x="54.1253%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (67 samples, 0.05%)</title><rect x="53.9213%" y="469" width="0.0541%" height="15" fill="rgb(237,34,20)" fg:x="66823" fg:w="67"/><text x="54.1713%" y="479.50"></text></g><g><title>core::time::Duration::as_nanos (41 samples, 0.03%)</title><rect x="53.9753%" y="469" width="0.0331%" height="15" fill="rgb(229,97,13)" fg:x="66890" fg:w="41"/><text x="54.2253%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (197 samples, 0.16%)</title><rect x="54.0084%" y="453" width="0.1590%" height="15" fill="rgb(234,71,50)" fg:x="66931" fg:w="197"/><text x="54.2584%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (75 samples, 0.06%)</title><rect x="54.2271%" y="421" width="0.0605%" height="15" fill="rgb(253,155,4)" fg:x="67202" fg:w="75"/><text x="54.4771%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::ge (75 samples, 0.06%)</title><rect x="54.2271%" y="405" width="0.0605%" height="15" fill="rgb(222,185,37)" fg:x="67202" fg:w="75"/><text x="54.4771%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (74 samples, 0.06%)</title><rect x="54.2279%" y="389" width="0.0597%" height="15" fill="rgb(251,177,13)" fg:x="67203" fg:w="74"/><text x="54.4779%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (39 samples, 0.03%)</title><rect x="54.2561%" y="373" width="0.0315%" height="15" fill="rgb(250,179,40)" fg:x="67238" fg:w="39"/><text x="54.5061%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (39 samples, 0.03%)</title><rect x="54.2561%" y="357" width="0.0315%" height="15" fill="rgb(242,44,2)" fg:x="67238" fg:w="39"/><text x="54.5061%" y="367.50"></text></g><g><title>std::time::SystemTime::duration_since (385 samples, 0.31%)</title><rect x="54.0084%" y="469" width="0.3107%" height="15" fill="rgb(216,177,13)" fg:x="66931" fg:w="385"/><text x="54.2584%" y="479.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (188 samples, 0.15%)</title><rect x="54.1674%" y="453" width="0.1517%" height="15" fill="rgb(216,106,43)" fg:x="67128" fg:w="188"/><text x="54.4174%" y="463.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (188 samples, 0.15%)</title><rect x="54.1674%" y="437" width="0.1517%" height="15" fill="rgb(216,183,2)" fg:x="67128" fg:w="188"/><text x="54.4174%" y="447.50"></text></g><g><title>core::time::Duration::new (39 samples, 0.03%)</title><rect x="54.2876%" y="421" width="0.0315%" height="15" fill="rgb(249,75,3)" fg:x="67277" fg:w="39"/><text x="54.5376%" y="431.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,521 samples, 1.23%)</title><rect x="53.7413%" y="613" width="1.2273%" height="15" fill="rgb(219,67,39)" fg:x="66600" fg:w="1521"/><text x="53.9913%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,521 samples, 1.23%)</title><rect x="53.7413%" y="597" width="1.2273%" height="15" fill="rgb(253,228,2)" fg:x="66600" fg:w="1521"/><text x="53.9913%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,521 samples, 1.23%)</title><rect x="53.7413%" y="581" width="1.2273%" height="15" fill="rgb(235,138,27)" fg:x="66600" fg:w="1521"/><text x="53.9913%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,521 samples, 1.23%)</title><rect x="53.7413%" y="565" width="1.2273%" height="15" fill="rgb(236,97,51)" fg:x="66600" fg:w="1521"/><text x="53.9913%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (1,521 samples, 1.23%)</title><rect x="53.7413%" y="549" width="1.2273%" height="15" fill="rgb(240,80,30)" fg:x="66600" fg:w="1521"/><text x="53.9913%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (1,521 samples, 1.23%)</title><rect x="53.7413%" y="533" width="1.2273%" height="15" fill="rgb(230,178,19)" fg:x="66600" fg:w="1521"/><text x="53.9913%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (1,521 samples, 1.23%)</title><rect x="53.7413%" y="517" width="1.2273%" height="15" fill="rgb(210,190,27)" fg:x="66600" fg:w="1521"/><text x="53.9913%" y="527.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,521 samples, 1.23%)</title><rect x="53.7413%" y="501" width="1.2273%" height="15" fill="rgb(222,107,31)" fg:x="66600" fg:w="1521"/><text x="53.9913%" y="511.50"></text></g><g><title>tremor_common::time::nanotime (1,339 samples, 1.08%)</title><rect x="53.8882%" y="485" width="1.0805%" height="15" fill="rgb(216,127,34)" fg:x="66782" fg:w="1339"/><text x="54.1382%" y="495.50"></text></g><g><title>std::time::SystemTime::now (805 samples, 0.65%)</title><rect x="54.3191%" y="469" width="0.6496%" height="15" fill="rgb(234,116,52)" fg:x="67316" fg:w="805"/><text x="54.5691%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (805 samples, 0.65%)</title><rect x="54.3191%" y="453" width="0.6496%" height="15" fill="rgb(222,124,15)" fg:x="67316" fg:w="805"/><text x="54.5691%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (805 samples, 0.65%)</title><rect x="54.3191%" y="437" width="0.6496%" height="15" fill="rgb(231,179,28)" fg:x="67316" fg:w="805"/><text x="54.5691%" y="447.50"></text></g><g><title>__clock_gettime (633 samples, 0.51%)</title><rect x="54.4579%" y="421" width="0.5108%" height="15" fill="rgb(226,93,45)" fg:x="67488" fg:w="633"/><text x="54.7079%" y="431.50"></text></g><g><title>__vdso_clock_gettime (584 samples, 0.47%)</title><rect x="54.4974%" y="405" width="0.4712%" height="15" fill="rgb(215,8,51)" fg:x="67537" fg:w="584"/><text x="54.7474%" y="415.50"></text></g><g><title>[[vdso]] (533 samples, 0.43%)</title><rect x="54.5386%" y="389" width="0.4301%" height="15" fill="rgb(223,106,5)" fg:x="67588" fg:w="533"/><text x="54.7886%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (429 samples, 0.35%)</title><rect x="55.1470%" y="501" width="0.3462%" height="15" fill="rgb(250,191,5)" fg:x="68342" fg:w="429"/><text x="55.3970%" y="511.50"></text></g><g><title>core::ptr::read (405 samples, 0.33%)</title><rect x="55.1663%" y="485" width="0.3268%" height="15" fill="rgb(242,132,44)" fg:x="68366" fg:w="405"/><text x="55.4163%" y="495.50"></text></g><g><title>[libc-2.31.so] (393 samples, 0.32%)</title><rect x="55.1760%" y="469" width="0.3171%" height="15" fill="rgb(251,152,29)" fg:x="68378" fg:w="393"/><text x="55.4260%" y="479.50"></text></g><g><title>[libc-2.31.so] (141 samples, 0.11%)</title><rect x="55.5053%" y="485" width="0.1138%" height="15" fill="rgb(218,179,5)" fg:x="68786" fg:w="141"/><text x="55.7553%" y="495.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (39 samples, 0.03%)</title><rect x="55.6860%" y="453" width="0.0315%" height="15" fill="rgb(227,67,19)" fg:x="69010" fg:w="39"/><text x="55.9360%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (17 samples, 0.01%)</title><rect x="55.7038%" y="437" width="0.0137%" height="15" fill="rgb(233,119,31)" fg:x="69032" fg:w="17"/><text x="55.9538%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (23 samples, 0.02%)</title><rect x="55.7175%" y="453" width="0.0186%" height="15" fill="rgb(241,120,22)" fg:x="69049" fg:w="23"/><text x="55.9675%" y="463.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 0.08%)</title><rect x="55.6594%" y="469" width="0.0831%" height="15" fill="rgb(224,102,30)" fg:x="68977" fg:w="103"/><text x="55.9094%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (323 samples, 0.26%)</title><rect x="55.4932%" y="501" width="0.2606%" height="15" fill="rgb(210,164,37)" fg:x="68771" fg:w="323"/><text x="55.7432%" y="511.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (167 samples, 0.13%)</title><rect x="55.6190%" y="485" width="0.1348%" height="15" fill="rgb(226,191,16)" fg:x="68927" fg:w="167"/><text x="55.8690%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;alloc::boxed::Box&lt;tremor_runtime::pipeline::Msg&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="55.7425%" y="469" width="0.0113%" height="15" fill="rgb(214,40,45)" fg:x="69080" fg:w="14"/><text x="55.9925%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (139 samples, 0.11%)</title><rect x="55.7619%" y="373" width="0.1122%" height="15" fill="rgb(244,29,26)" fg:x="69104" fg:w="139"/><text x="56.0119%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (139 samples, 0.11%)</title><rect x="55.7619%" y="357" width="0.1122%" height="15" fill="rgb(216,16,5)" fg:x="69104" fg:w="139"/><text x="56.0119%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (139 samples, 0.11%)</title><rect x="55.7619%" y="341" width="0.1122%" height="15" fill="rgb(249,76,35)" fg:x="69104" fg:w="139"/><text x="56.0119%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.11%)</title><rect x="55.7627%" y="325" width="0.1114%" height="15" fill="rgb(207,11,44)" fg:x="69105" fg:w="138"/><text x="56.0127%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.11%)</title><rect x="55.7627%" y="309" width="0.1114%" height="15" fill="rgb(228,190,49)" fg:x="69105" fg:w="138"/><text x="56.0127%" y="319.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.11%)</title><rect x="55.7627%" y="293" width="0.1114%" height="15" fill="rgb(214,173,12)" fg:x="69105" fg:w="138"/><text x="56.0127%" y="303.50"></text></g><g><title>__rg_alloc (138 samples, 0.11%)</title><rect x="55.7627%" y="277" width="0.1114%" height="15" fill="rgb(218,26,35)" fg:x="69105" fg:w="138"/><text x="56.0127%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (138 samples, 0.11%)</title><rect x="55.7627%" y="261" width="0.1114%" height="15" fill="rgb(220,200,19)" fg:x="69105" fg:w="138"/><text x="56.0127%" y="271.50"></text></g><g><title>sn_rust_alloc (131 samples, 0.11%)</title><rect x="55.7683%" y="245" width="0.1057%" height="15" fill="rgb(239,95,49)" fg:x="69112" fg:w="131"/><text x="56.0183%" y="255.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (17 samples, 0.01%)</title><rect x="55.8603%" y="229" width="0.0137%" height="15" fill="rgb(235,85,53)" fg:x="69226" fg:w="17"/><text x="56.1103%" y="239.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (173 samples, 0.14%)</title><rect x="55.7619%" y="501" width="0.1396%" height="15" fill="rgb(233,133,31)" fg:x="69104" fg:w="173"/><text x="56.0119%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (173 samples, 0.14%)</title><rect x="55.7619%" y="485" width="0.1396%" height="15" fill="rgb(218,25,20)" fg:x="69104" fg:w="173"/><text x="56.0119%" y="495.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (173 samples, 0.14%)</title><rect x="55.7619%" y="469" width="0.1396%" height="15" fill="rgb(252,210,38)" fg:x="69104" fg:w="173"/><text x="56.0119%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (173 samples, 0.14%)</title><rect x="55.7619%" y="453" width="0.1396%" height="15" fill="rgb(242,134,21)" fg:x="69104" fg:w="173"/><text x="56.0119%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (173 samples, 0.14%)</title><rect x="55.7619%" y="437" width="0.1396%" height="15" fill="rgb(213,28,48)" fg:x="69104" fg:w="173"/><text x="56.0119%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (173 samples, 0.14%)</title><rect x="55.7619%" y="421" width="0.1396%" height="15" fill="rgb(250,196,2)" fg:x="69104" fg:w="173"/><text x="56.0119%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (173 samples, 0.14%)</title><rect x="55.7619%" y="405" width="0.1396%" height="15" fill="rgb(227,5,17)" fg:x="69104" fg:w="173"/><text x="56.0119%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (173 samples, 0.14%)</title><rect x="55.7619%" y="389" width="0.1396%" height="15" fill="rgb(221,226,24)" fg:x="69104" fg:w="173"/><text x="56.0119%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34 samples, 0.03%)</title><rect x="55.8740%" y="373" width="0.0274%" height="15" fill="rgb(211,5,48)" fg:x="69243" fg:w="34"/><text x="56.1240%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.03%)</title><rect x="55.8740%" y="357" width="0.0274%" height="15" fill="rgb(219,150,6)" fg:x="69243" fg:w="34"/><text x="56.1240%" y="367.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.02%)</title><rect x="55.8805%" y="341" width="0.0210%" height="15" fill="rgb(251,46,16)" fg:x="69251" fg:w="26"/><text x="56.1305%" y="351.50"></text></g><g><title>[libc-2.31.so] (660 samples, 0.53%)</title><rect x="55.9015%" y="501" width="0.5326%" height="15" fill="rgb(220,204,40)" fg:x="69277" fg:w="660"/><text x="56.1515%" y="511.50"></text></g><g><title>[libc-2.31.so] (421 samples, 0.34%)</title><rect x="56.4421%" y="485" width="0.3397%" height="15" fill="rgb(211,85,2)" fg:x="69947" fg:w="421"/><text x="56.6921%" y="495.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,022 samples, 0.82%)</title><rect x="56.8528%" y="373" width="0.8247%" height="15" fill="rgb(229,17,7)" fg:x="70456" fg:w="1022"/><text x="57.1028%" y="383.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (23 samples, 0.02%)</title><rect x="57.6775%" y="373" width="0.0186%" height="15" fill="rgb(239,72,28)" fg:x="71478" fg:w="23"/><text x="57.9275%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,567 samples, 1.26%)</title><rect x="56.4340%" y="501" width="1.2645%" height="15" fill="rgb(230,47,54)" fg:x="69937" fg:w="1567"/><text x="56.6840%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,136 samples, 0.92%)</title><rect x="56.7818%" y="485" width="0.9167%" height="15" fill="rgb(214,50,8)" fg:x="70368" fg:w="1136"/><text x="57.0318%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,136 samples, 0.92%)</title><rect x="56.7818%" y="469" width="0.9167%" height="15" fill="rgb(216,198,43)" fg:x="70368" fg:w="1136"/><text x="57.0318%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,136 samples, 0.92%)</title><rect x="56.7818%" y="453" width="0.9167%" height="15" fill="rgb(234,20,35)" fg:x="70368" fg:w="1136"/><text x="57.0318%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1,135 samples, 0.92%)</title><rect x="56.7826%" y="437" width="0.9159%" height="15" fill="rgb(254,45,19)" fg:x="70369" fg:w="1135"/><text x="57.0326%" y="447.50"></text></g><g><title>__rg_alloc (1,135 samples, 0.92%)</title><rect x="56.7826%" y="421" width="0.9159%" height="15" fill="rgb(219,14,44)" fg:x="70369" fg:w="1135"/><text x="57.0326%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,135 samples, 0.92%)</title><rect x="56.7826%" y="405" width="0.9159%" height="15" fill="rgb(217,220,26)" fg:x="70369" fg:w="1135"/><text x="57.0326%" y="415.50"></text></g><g><title>sn_rust_alloc (1,132 samples, 0.91%)</title><rect x="56.7850%" y="389" width="0.9134%" height="15" fill="rgb(213,158,28)" fg:x="70372" fg:w="1132"/><text x="57.0350%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (17 samples, 0.01%)</title><rect x="57.7130%" y="469" width="0.0137%" height="15" fill="rgb(252,51,52)" fg:x="71522" fg:w="17"/><text x="57.9630%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="57.7130%" y="453" width="0.0137%" height="15" fill="rgb(246,89,16)" fg:x="71522" fg:w="17"/><text x="57.9630%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (13 samples, 0.01%)</title><rect x="57.7162%" y="437" width="0.0105%" height="15" fill="rgb(216,158,49)" fg:x="71526" fg:w="13"/><text x="57.9662%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="57.7162%" y="421" width="0.0105%" height="15" fill="rgb(236,107,19)" fg:x="71526" fg:w="13"/><text x="57.9662%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="57.7162%" y="405" width="0.0105%" height="15" fill="rgb(228,185,30)" fg:x="71526" fg:w="13"/><text x="57.9662%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="57.7162%" y="389" width="0.0105%" height="15" fill="rgb(246,134,8)" fg:x="71526" fg:w="13"/><text x="57.9662%" y="399.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="57.7162%" y="373" width="0.0105%" height="15" fill="rgb(214,143,50)" fg:x="71526" fg:w="13"/><text x="57.9662%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="57.7162%" y="357" width="0.0105%" height="15" fill="rgb(228,75,8)" fg:x="71526" fg:w="13"/><text x="57.9662%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.03%)</title><rect x="57.6985%" y="485" width="0.0339%" height="15" fill="rgb(207,175,4)" fg:x="71504" fg:w="42"/><text x="57.9485%" y="495.50"></text></g><g><title>sn_rust_dealloc (43 samples, 0.03%)</title><rect x="57.7324%" y="485" width="0.0347%" height="15" fill="rgb(205,108,24)" fg:x="71546" fg:w="43"/><text x="57.9824%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (101 samples, 0.08%)</title><rect x="57.6985%" y="501" width="0.0815%" height="15" fill="rgb(244,120,49)" fg:x="71504" fg:w="101"/><text x="57.9485%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (16 samples, 0.01%)</title><rect x="57.7671%" y="485" width="0.0129%" height="15" fill="rgb(223,47,38)" fg:x="71589" fg:w="16"/><text x="58.0171%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (14 samples, 0.01%)</title><rect x="57.7800%" y="501" width="0.0113%" height="15" fill="rgb(229,179,11)" fg:x="71605" fg:w="14"/><text x="58.0300%" y="511.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="57.7800%" y="485" width="0.0113%" height="15" fill="rgb(231,122,1)" fg:x="71605" fg:w="14"/><text x="58.0300%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (60 samples, 0.05%)</title><rect x="57.8050%" y="501" width="0.0484%" height="15" fill="rgb(245,119,9)" fg:x="71636" fg:w="60"/><text x="58.0550%" y="511.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (60 samples, 0.05%)</title><rect x="57.8050%" y="485" width="0.0484%" height="15" fill="rgb(241,163,25)" fg:x="71636" fg:w="60"/><text x="58.0550%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (59 samples, 0.05%)</title><rect x="57.8058%" y="469" width="0.0476%" height="15" fill="rgb(217,214,3)" fg:x="71637" fg:w="59"/><text x="58.0558%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (59 samples, 0.05%)</title><rect x="57.8058%" y="453" width="0.0476%" height="15" fill="rgb(240,86,28)" fg:x="71637" fg:w="59"/><text x="58.0558%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (40 samples, 0.03%)</title><rect x="57.8211%" y="437" width="0.0323%" height="15" fill="rgb(215,47,9)" fg:x="71656" fg:w="40"/><text x="58.0711%" y="447.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (40 samples, 0.03%)</title><rect x="57.8211%" y="421" width="0.0323%" height="15" fill="rgb(252,25,45)" fg:x="71656" fg:w="40"/><text x="58.0711%" y="431.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (40 samples, 0.03%)</title><rect x="57.8211%" y="405" width="0.0323%" height="15" fill="rgb(251,164,9)" fg:x="71656" fg:w="40"/><text x="58.0711%" y="415.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (40 samples, 0.03%)</title><rect x="57.8211%" y="389" width="0.0323%" height="15" fill="rgb(233,194,0)" fg:x="71656" fg:w="40"/><text x="58.0711%" y="399.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (22 samples, 0.02%)</title><rect x="57.8357%" y="373" width="0.0178%" height="15" fill="rgb(249,111,24)" fg:x="71674" fg:w="22"/><text x="58.0857%" y="383.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (16 samples, 0.01%)</title><rect x="57.8558%" y="501" width="0.0129%" height="15" fill="rgb(250,223,3)" fg:x="71699" fg:w="16"/><text x="58.1058%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,607 samples, 2.91%)</title><rect x="54.9687%" y="597" width="2.9106%" height="15" fill="rgb(236,178,37)" fg:x="68121" fg:w="3607"/><text x="55.2187%" y="607.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (3,607 samples, 2.91%)</title><rect x="54.9687%" y="581" width="2.9106%" height="15" fill="rgb(241,158,50)" fg:x="68121" fg:w="3607"/><text x="55.2187%" y="591.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,607 samples, 2.91%)</title><rect x="54.9687%" y="565" width="2.9106%" height="15" fill="rgb(213,121,41)" fg:x="68121" fg:w="3607"/><text x="55.2187%" y="575.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,607 samples, 2.91%)</title><rect x="54.9687%" y="549" width="2.9106%" height="15" fill="rgb(240,92,3)" fg:x="68121" fg:w="3607"/><text x="55.2187%" y="559.50">tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,607 samples, 2.91%)</title><rect x="54.9687%" y="533" width="2.9106%" height="15" fill="rgb(205,123,3)" fg:x="68121" fg:w="3607"/><text x="55.2187%" y="543.50">&lt;c..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (3,596 samples, 2.90%)</title><rect x="54.9775%" y="517" width="2.9017%" height="15" fill="rgb(205,97,47)" fg:x="68132" fg:w="3596"/><text x="55.2275%" y="527.50">tr..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (13 samples, 0.01%)</title><rect x="57.8687%" y="501" width="0.0105%" height="15" fill="rgb(247,152,14)" fg:x="71715" fg:w="13"/><text x="58.1187%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="57.8687%" y="485" width="0.0105%" height="15" fill="rgb(248,195,53)" fg:x="71715" fg:w="13"/><text x="58.1187%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="57.8687%" y="469" width="0.0105%" height="15" fill="rgb(226,201,16)" fg:x="71715" fg:w="13"/><text x="58.1187%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (127 samples, 0.10%)</title><rect x="58.0035%" y="517" width="0.1025%" height="15" fill="rgb(205,98,0)" fg:x="71882" fg:w="127"/><text x="58.2535%" y="527.50"></text></g><g><title>core::mem::replace (127 samples, 0.10%)</title><rect x="58.0035%" y="501" width="0.1025%" height="15" fill="rgb(214,191,48)" fg:x="71882" fg:w="127"/><text x="58.2535%" y="511.50"></text></g><g><title>core::ptr::read (127 samples, 0.10%)</title><rect x="58.0035%" y="485" width="0.1025%" height="15" fill="rgb(237,112,39)" fg:x="71882" fg:w="127"/><text x="58.2535%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (219 samples, 0.18%)</title><rect x="57.9640%" y="533" width="0.1767%" height="15" fill="rgb(247,203,27)" fg:x="71833" fg:w="219"/><text x="58.2140%" y="543.50"></text></g><g><title>core::mem::drop (43 samples, 0.03%)</title><rect x="58.1060%" y="517" width="0.0347%" height="15" fill="rgb(235,124,28)" fg:x="72009" fg:w="43"/><text x="58.3560%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (43 samples, 0.03%)</title><rect x="58.1060%" y="501" width="0.0347%" height="15" fill="rgb(208,207,46)" fg:x="72009" fg:w="43"/><text x="58.3560%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (155 samples, 0.13%)</title><rect x="58.1407%" y="533" width="0.1251%" height="15" fill="rgb(234,176,4)" fg:x="72052" fg:w="155"/><text x="58.3907%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (145 samples, 0.12%)</title><rect x="58.1487%" y="517" width="0.1170%" height="15" fill="rgb(230,133,28)" fg:x="72062" fg:w="145"/><text x="58.3987%" y="527.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.12%)</title><rect x="58.1487%" y="501" width="0.1170%" height="15" fill="rgb(211,137,40)" fg:x="72062" fg:w="145"/><text x="58.3987%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (133 samples, 0.11%)</title><rect x="58.1584%" y="485" width="0.1073%" height="15" fill="rgb(254,35,13)" fg:x="72074" fg:w="133"/><text x="58.4084%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (133 samples, 0.11%)</title><rect x="58.1584%" y="469" width="0.1073%" height="15" fill="rgb(225,49,51)" fg:x="72074" fg:w="133"/><text x="58.4084%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (133 samples, 0.11%)</title><rect x="58.1584%" y="453" width="0.1073%" height="15" fill="rgb(251,10,15)" fg:x="72074" fg:w="133"/><text x="58.4084%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (133 samples, 0.11%)</title><rect x="58.1584%" y="437" width="0.1073%" height="15" fill="rgb(228,207,15)" fg:x="72074" fg:w="133"/><text x="58.4084%" y="447.50"></text></g><g><title>core::task::wake::Waker::will_wake (20 samples, 0.02%)</title><rect x="58.2730%" y="533" width="0.0161%" height="15" fill="rgb(241,99,19)" fg:x="72216" fg:w="20"/><text x="58.5230%" y="543.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (20 samples, 0.02%)</title><rect x="58.2730%" y="517" width="0.0161%" height="15" fill="rgb(207,104,49)" fg:x="72216" fg:w="20"/><text x="58.5230%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.02%)</title><rect x="58.2730%" y="501" width="0.0161%" height="15" fill="rgb(234,99,18)" fg:x="72216" fg:w="20"/><text x="58.5230%" y="511.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (20 samples, 0.02%)</title><rect x="58.2730%" y="485" width="0.0161%" height="15" fill="rgb(213,191,49)" fg:x="72216" fg:w="20"/><text x="58.5230%" y="495.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="58.2940%" y="501" width="0.0121%" height="15" fill="rgb(210,226,19)" fg:x="72242" fg:w="15"/><text x="58.5440%" y="511.50"></text></g><g><title>std::sync::poison::Flag::borrow (15 samples, 0.01%)</title><rect x="58.2940%" y="485" width="0.0121%" height="15" fill="rgb(229,97,18)" fg:x="72242" fg:w="15"/><text x="58.5440%" y="495.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (671 samples, 0.54%)</title><rect x="57.9123%" y="549" width="0.5414%" height="15" fill="rgb(211,167,15)" fg:x="71769" fg:w="671"/><text x="58.1623%" y="559.50"></text></g><g><title>event_listener::Inner::lock (204 samples, 0.16%)</title><rect x="58.2892%" y="533" width="0.1646%" height="15" fill="rgb(210,169,34)" fg:x="72236" fg:w="204"/><text x="58.5392%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (198 samples, 0.16%)</title><rect x="58.2940%" y="517" width="0.1598%" height="15" fill="rgb(241,121,31)" fg:x="72242" fg:w="198"/><text x="58.5440%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (183 samples, 0.15%)</title><rect x="58.3061%" y="501" width="0.1477%" height="15" fill="rgb(232,40,11)" fg:x="72257" fg:w="183"/><text x="58.5561%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (183 samples, 0.15%)</title><rect x="58.3061%" y="485" width="0.1477%" height="15" fill="rgb(205,86,26)" fg:x="72257" fg:w="183"/><text x="58.5561%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (183 samples, 0.15%)</title><rect x="58.3061%" y="469" width="0.1477%" height="15" fill="rgb(231,126,28)" fg:x="72257" fg:w="183"/><text x="58.5561%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (183 samples, 0.15%)</title><rect x="58.3061%" y="453" width="0.1477%" height="15" fill="rgb(219,221,18)" fg:x="72257" fg:w="183"/><text x="58.5561%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (236 samples, 0.19%)</title><rect x="58.5207%" y="501" width="0.1904%" height="15" fill="rgb(211,40,0)" fg:x="72523" fg:w="236"/><text x="58.7707%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (236 samples, 0.19%)</title><rect x="58.5207%" y="485" width="0.1904%" height="15" fill="rgb(239,85,43)" fg:x="72523" fg:w="236"/><text x="58.7707%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (236 samples, 0.19%)</title><rect x="58.5207%" y="469" width="0.1904%" height="15" fill="rgb(231,55,21)" fg:x="72523" fg:w="236"/><text x="58.7707%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (236 samples, 0.19%)</title><rect x="58.5207%" y="453" width="0.1904%" height="15" fill="rgb(225,184,43)" fg:x="72523" fg:w="236"/><text x="58.7707%" y="463.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1,040 samples, 0.84%)</title><rect x="57.8792%" y="565" width="0.8392%" height="15" fill="rgb(251,158,41)" fg:x="71728" fg:w="1040"/><text x="58.1292%" y="575.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (328 samples, 0.26%)</title><rect x="58.4538%" y="549" width="0.2647%" height="15" fill="rgb(234,159,37)" fg:x="72440" fg:w="328"/><text x="58.7038%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (311 samples, 0.25%)</title><rect x="58.4675%" y="533" width="0.2510%" height="15" fill="rgb(216,204,22)" fg:x="72457" fg:w="311"/><text x="58.7175%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (295 samples, 0.24%)</title><rect x="58.4804%" y="517" width="0.2380%" height="15" fill="rgb(214,17,3)" fg:x="72473" fg:w="295"/><text x="58.7304%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (37 samples, 0.03%)</title><rect x="60.0830%" y="277" width="0.0299%" height="15" fill="rgb(212,111,17)" fg:x="74459" fg:w="37"/><text x="60.3330%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (515 samples, 0.42%)</title><rect x="59.6989%" y="421" width="0.4156%" height="15" fill="rgb(221,157,24)" fg:x="73983" fg:w="515"/><text x="59.9489%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (515 samples, 0.42%)</title><rect x="59.6989%" y="405" width="0.4156%" height="15" fill="rgb(252,16,13)" fg:x="73983" fg:w="515"/><text x="59.9489%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (515 samples, 0.42%)</title><rect x="59.6989%" y="389" width="0.4156%" height="15" fill="rgb(221,62,2)" fg:x="73983" fg:w="515"/><text x="59.9489%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (497 samples, 0.40%)</title><rect x="59.7134%" y="373" width="0.4010%" height="15" fill="rgb(247,87,22)" fg:x="74001" fg:w="497"/><text x="59.9634%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (497 samples, 0.40%)</title><rect x="59.7134%" y="357" width="0.4010%" height="15" fill="rgb(215,73,9)" fg:x="74001" fg:w="497"/><text x="59.9634%" y="367.50"></text></g><g><title>alloc::alloc::alloc (497 samples, 0.40%)</title><rect x="59.7134%" y="341" width="0.4010%" height="15" fill="rgb(207,175,33)" fg:x="74001" fg:w="497"/><text x="59.9634%" y="351.50"></text></g><g><title>__rg_alloc (497 samples, 0.40%)</title><rect x="59.7134%" y="325" width="0.4010%" height="15" fill="rgb(243,129,54)" fg:x="74001" fg:w="497"/><text x="59.9634%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (497 samples, 0.40%)</title><rect x="59.7134%" y="309" width="0.4010%" height="15" fill="rgb(227,119,45)" fg:x="74001" fg:w="497"/><text x="59.9634%" y="319.50"></text></g><g><title>sn_rust_alloc (477 samples, 0.38%)</title><rect x="59.7295%" y="293" width="0.3849%" height="15" fill="rgb(205,109,36)" fg:x="74021" fg:w="477"/><text x="59.9795%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (600 samples, 0.48%)</title><rect x="59.6698%" y="501" width="0.4842%" height="15" fill="rgb(205,6,39)" fg:x="73947" fg:w="600"/><text x="59.9198%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (568 samples, 0.46%)</title><rect x="59.6956%" y="485" width="0.4583%" height="15" fill="rgb(221,32,16)" fg:x="73979" fg:w="568"/><text x="59.9456%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (568 samples, 0.46%)</title><rect x="59.6956%" y="469" width="0.4583%" height="15" fill="rgb(228,144,50)" fg:x="73979" fg:w="568"/><text x="59.9456%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (568 samples, 0.46%)</title><rect x="59.6956%" y="453" width="0.4583%" height="15" fill="rgb(229,201,53)" fg:x="73979" fg:w="568"/><text x="59.9456%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (568 samples, 0.46%)</title><rect x="59.6956%" y="437" width="0.4583%" height="15" fill="rgb(249,153,27)" fg:x="73979" fg:w="568"/><text x="59.9456%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (49 samples, 0.04%)</title><rect x="60.1144%" y="421" width="0.0395%" height="15" fill="rgb(227,106,25)" fg:x="74498" fg:w="49"/><text x="60.3644%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.04%)</title><rect x="60.1144%" y="405" width="0.0395%" height="15" fill="rgb(230,65,29)" fg:x="74498" fg:w="49"/><text x="60.3644%" y="415.50"></text></g><g><title>[libc-2.31.so] (45 samples, 0.04%)</title><rect x="60.1176%" y="389" width="0.0363%" height="15" fill="rgb(221,57,46)" fg:x="74502" fg:w="45"/><text x="60.3676%" y="399.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (104 samples, 0.08%)</title><rect x="60.2960%" y="213" width="0.0839%" height="15" fill="rgb(229,161,17)" fg:x="74723" fg:w="104"/><text x="60.5460%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (238 samples, 0.19%)</title><rect x="60.1895%" y="357" width="0.1920%" height="15" fill="rgb(222,213,11)" fg:x="74591" fg:w="238"/><text x="60.4395%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (238 samples, 0.19%)</title><rect x="60.1895%" y="341" width="0.1920%" height="15" fill="rgb(235,35,13)" fg:x="74591" fg:w="238"/><text x="60.4395%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (238 samples, 0.19%)</title><rect x="60.1895%" y="325" width="0.1920%" height="15" fill="rgb(233,158,34)" fg:x="74591" fg:w="238"/><text x="60.4395%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (235 samples, 0.19%)</title><rect x="60.1919%" y="309" width="0.1896%" height="15" fill="rgb(215,151,48)" fg:x="74594" fg:w="235"/><text x="60.4419%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (235 samples, 0.19%)</title><rect x="60.1919%" y="293" width="0.1896%" height="15" fill="rgb(229,84,14)" fg:x="74594" fg:w="235"/><text x="60.4419%" y="303.50"></text></g><g><title>alloc::alloc::alloc (235 samples, 0.19%)</title><rect x="60.1919%" y="277" width="0.1896%" height="15" fill="rgb(229,68,14)" fg:x="74594" fg:w="235"/><text x="60.4419%" y="287.50"></text></g><g><title>__rg_alloc (235 samples, 0.19%)</title><rect x="60.1919%" y="261" width="0.1896%" height="15" fill="rgb(243,106,26)" fg:x="74594" fg:w="235"/><text x="60.4419%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (235 samples, 0.19%)</title><rect x="60.1919%" y="245" width="0.1896%" height="15" fill="rgb(206,45,38)" fg:x="74594" fg:w="235"/><text x="60.4419%" y="255.50"></text></g><g><title>sn_rust_alloc (222 samples, 0.18%)</title><rect x="60.2024%" y="229" width="0.1791%" height="15" fill="rgb(226,6,15)" fg:x="74607" fg:w="222"/><text x="60.4524%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (421 samples, 0.34%)</title><rect x="60.1766%" y="437" width="0.3397%" height="15" fill="rgb(232,22,54)" fg:x="74575" fg:w="421"/><text x="60.4266%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (405 samples, 0.33%)</title><rect x="60.1895%" y="421" width="0.3268%" height="15" fill="rgb(229,222,32)" fg:x="74591" fg:w="405"/><text x="60.4395%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (405 samples, 0.33%)</title><rect x="60.1895%" y="405" width="0.3268%" height="15" fill="rgb(228,62,29)" fg:x="74591" fg:w="405"/><text x="60.4395%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (405 samples, 0.33%)</title><rect x="60.1895%" y="389" width="0.3268%" height="15" fill="rgb(251,103,34)" fg:x="74591" fg:w="405"/><text x="60.4395%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (405 samples, 0.33%)</title><rect x="60.1895%" y="373" width="0.3268%" height="15" fill="rgb(233,12,30)" fg:x="74591" fg:w="405"/><text x="60.4395%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (167 samples, 0.13%)</title><rect x="60.3815%" y="357" width="0.1348%" height="15" fill="rgb(238,52,0)" fg:x="74829" fg:w="167"/><text x="60.6315%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (167 samples, 0.13%)</title><rect x="60.3815%" y="341" width="0.1348%" height="15" fill="rgb(223,98,5)" fg:x="74829" fg:w="167"/><text x="60.6315%" y="351.50"></text></g><g><title>[libc-2.31.so] (155 samples, 0.13%)</title><rect x="60.3912%" y="325" width="0.1251%" height="15" fill="rgb(228,75,37)" fg:x="74841" fg:w="155"/><text x="60.6412%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="60.5163%" y="437" width="0.0266%" height="15" fill="rgb(205,115,49)" fg:x="74996" fg:w="33"/><text x="60.7663%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="60.5227%" y="421" width="0.0202%" height="15" fill="rgb(250,154,43)" fg:x="75004" fg:w="25"/><text x="60.7727%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="60.5227%" y="405" width="0.0202%" height="15" fill="rgb(226,43,29)" fg:x="75004" fg:w="25"/><text x="60.7727%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (95 samples, 0.08%)</title><rect x="60.5550%" y="389" width="0.0767%" height="15" fill="rgb(249,228,39)" fg:x="75044" fg:w="95"/><text x="60.8050%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (95 samples, 0.08%)</title><rect x="60.5550%" y="373" width="0.0767%" height="15" fill="rgb(216,79,43)" fg:x="75044" fg:w="95"/><text x="60.8050%" y="383.50"></text></g><g><title>alloc::alloc::alloc (92 samples, 0.07%)</title><rect x="60.5574%" y="357" width="0.0742%" height="15" fill="rgb(228,95,12)" fg:x="75047" fg:w="92"/><text x="60.8074%" y="367.50"></text></g><g><title>__rg_alloc (92 samples, 0.07%)</title><rect x="60.5574%" y="341" width="0.0742%" height="15" fill="rgb(249,221,15)" fg:x="75047" fg:w="92"/><text x="60.8074%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (92 samples, 0.07%)</title><rect x="60.5574%" y="325" width="0.0742%" height="15" fill="rgb(233,34,13)" fg:x="75047" fg:w="92"/><text x="60.8074%" y="335.50"></text></g><g><title>sn_rust_alloc (92 samples, 0.07%)</title><rect x="60.5574%" y="309" width="0.0742%" height="15" fill="rgb(214,103,39)" fg:x="75047" fg:w="92"/><text x="60.8074%" y="319.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (37 samples, 0.03%)</title><rect x="60.6018%" y="293" width="0.0299%" height="15" fill="rgb(251,126,39)" fg:x="75102" fg:w="37"/><text x="60.8518%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (115 samples, 0.09%)</title><rect x="60.5429%" y="437" width="0.0928%" height="15" fill="rgb(214,216,36)" fg:x="75029" fg:w="115"/><text x="60.7929%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (101 samples, 0.08%)</title><rect x="60.5542%" y="421" width="0.0815%" height="15" fill="rgb(220,221,8)" fg:x="75043" fg:w="101"/><text x="60.8042%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 0.08%)</title><rect x="60.5542%" y="405" width="0.0815%" height="15" fill="rgb(240,216,3)" fg:x="75043" fg:w="101"/><text x="60.8042%" y="415.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,798 samples, 1.45%)</title><rect x="59.1961%" y="517" width="1.4509%" height="15" fill="rgb(232,218,17)" fg:x="73360" fg:w="1798"/><text x="59.4461%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (611 samples, 0.49%)</title><rect x="60.1540%" y="501" width="0.4930%" height="15" fill="rgb(229,163,45)" fg:x="74547" fg:w="611"/><text x="60.4040%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (592 samples, 0.48%)</title><rect x="60.1693%" y="485" width="0.4777%" height="15" fill="rgb(231,110,42)" fg:x="74566" fg:w="592"/><text x="60.4193%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (592 samples, 0.48%)</title><rect x="60.1693%" y="469" width="0.4777%" height="15" fill="rgb(208,170,48)" fg:x="74566" fg:w="592"/><text x="60.4193%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (592 samples, 0.48%)</title><rect x="60.1693%" y="453" width="0.4777%" height="15" fill="rgb(239,116,25)" fg:x="74566" fg:w="592"/><text x="60.4193%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (14 samples, 0.01%)</title><rect x="60.6357%" y="437" width="0.0113%" height="15" fill="rgb(219,200,50)" fg:x="75144" fg:w="14"/><text x="60.8857%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (29 samples, 0.02%)</title><rect x="60.6825%" y="437" width="0.0234%" height="15" fill="rgb(245,200,0)" fg:x="75202" fg:w="29"/><text x="60.9325%" y="447.50"></text></g><g><title>core::time::Duration::as_nanos (36 samples, 0.03%)</title><rect x="60.7059%" y="437" width="0.0290%" height="15" fill="rgb(245,119,33)" fg:x="75231" fg:w="36"/><text x="60.9559%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (114 samples, 0.09%)</title><rect x="60.7349%" y="421" width="0.0920%" height="15" fill="rgb(231,125,12)" fg:x="75267" fg:w="114"/><text x="60.9849%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (53 samples, 0.04%)</title><rect x="60.8697%" y="389" width="0.0428%" height="15" fill="rgb(216,96,41)" fg:x="75434" fg:w="53"/><text x="61.1197%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::ge (53 samples, 0.04%)</title><rect x="60.8697%" y="373" width="0.0428%" height="15" fill="rgb(248,43,45)" fg:x="75434" fg:w="53"/><text x="61.1197%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (53 samples, 0.04%)</title><rect x="60.8697%" y="357" width="0.0428%" height="15" fill="rgb(217,222,7)" fg:x="75434" fg:w="53"/><text x="61.1197%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (29 samples, 0.02%)</title><rect x="60.8891%" y="341" width="0.0234%" height="15" fill="rgb(233,28,6)" fg:x="75458" fg:w="29"/><text x="61.1391%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (29 samples, 0.02%)</title><rect x="60.8891%" y="325" width="0.0234%" height="15" fill="rgb(231,218,15)" fg:x="75458" fg:w="29"/><text x="61.1391%" y="335.50"></text></g><g><title>std::time::SystemTime::duration_since (250 samples, 0.20%)</title><rect x="60.7349%" y="437" width="0.2017%" height="15" fill="rgb(226,171,48)" fg:x="75267" fg:w="250"/><text x="60.9849%" y="447.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (136 samples, 0.11%)</title><rect x="60.8269%" y="421" width="0.1097%" height="15" fill="rgb(235,201,9)" fg:x="75381" fg:w="136"/><text x="61.0769%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (136 samples, 0.11%)</title><rect x="60.8269%" y="405" width="0.1097%" height="15" fill="rgb(217,80,15)" fg:x="75381" fg:w="136"/><text x="61.0769%" y="415.50"></text></g><g><title>core::time::Duration::new (30 samples, 0.02%)</title><rect x="60.9125%" y="389" width="0.0242%" height="15" fill="rgb(219,152,8)" fg:x="75487" fg:w="30"/><text x="61.1625%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (869 samples, 0.70%)</title><rect x="60.6470%" y="517" width="0.7012%" height="15" fill="rgb(243,107,38)" fg:x="75158" fg:w="869"/><text x="60.8970%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (869 samples, 0.70%)</title><rect x="60.6470%" y="501" width="0.7012%" height="15" fill="rgb(231,17,5)" fg:x="75158" fg:w="869"/><text x="60.8970%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (854 samples, 0.69%)</title><rect x="60.6591%" y="485" width="0.6891%" height="15" fill="rgb(209,25,54)" fg:x="75173" fg:w="854"/><text x="60.9091%" y="495.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}::{{closure}} (854 samples, 0.69%)</title><rect x="60.6591%" y="469" width="0.6891%" height="15" fill="rgb(219,0,2)" fg:x="75173" fg:w="854"/><text x="60.9091%" y="479.50"></text></g><g><title>tremor_common::time::nanotime (849 samples, 0.69%)</title><rect x="60.6631%" y="453" width="0.6851%" height="15" fill="rgb(246,9,5)" fg:x="75178" fg:w="849"/><text x="60.9131%" y="463.50"></text></g><g><title>std::time::SystemTime::now (510 samples, 0.41%)</title><rect x="60.9367%" y="437" width="0.4115%" height="15" fill="rgb(226,159,4)" fg:x="75517" fg:w="510"/><text x="61.1867%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (510 samples, 0.41%)</title><rect x="60.9367%" y="421" width="0.4115%" height="15" fill="rgb(219,175,34)" fg:x="75517" fg:w="510"/><text x="61.1867%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (510 samples, 0.41%)</title><rect x="60.9367%" y="405" width="0.4115%" height="15" fill="rgb(236,10,46)" fg:x="75517" fg:w="510"/><text x="61.1867%" y="415.50"></text></g><g><title>__clock_gettime (422 samples, 0.34%)</title><rect x="61.0077%" y="389" width="0.3405%" height="15" fill="rgb(240,211,16)" fg:x="75605" fg:w="422"/><text x="61.2577%" y="399.50"></text></g><g><title>__vdso_clock_gettime (403 samples, 0.33%)</title><rect x="61.0230%" y="373" width="0.3252%" height="15" fill="rgb(205,3,43)" fg:x="75624" fg:w="403"/><text x="61.2730%" y="383.50"></text></g><g><title>[[vdso]] (359 samples, 0.29%)</title><rect x="61.0585%" y="357" width="0.2897%" height="15" fill="rgb(245,7,22)" fg:x="75668" fg:w="359"/><text x="61.3085%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (19 samples, 0.02%)</title><rect x="61.3482%" y="517" width="0.0153%" height="15" fill="rgb(239,132,32)" fg:x="76027" fg:w="19"/><text x="61.5982%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (19 samples, 0.02%)</title><rect x="61.3482%" y="501" width="0.0153%" height="15" fill="rgb(228,202,34)" fg:x="76027" fg:w="19"/><text x="61.5982%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (56 samples, 0.05%)</title><rect x="61.4031%" y="485" width="0.0452%" height="15" fill="rgb(254,200,22)" fg:x="76095" fg:w="56"/><text x="61.6531%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="61.4378%" y="469" width="0.0105%" height="15" fill="rgb(219,10,39)" fg:x="76138" fg:w="13"/><text x="61.6878%" y="479.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,237 samples, 1.00%)</title><rect x="61.7864%" y="293" width="0.9982%" height="15" fill="rgb(226,210,39)" fg:x="76570" fg:w="1237"/><text x="62.0364%" y="303.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="62.7845%" y="293" width="0.0307%" height="15" fill="rgb(208,219,16)" fg:x="77807" fg:w="38"/><text x="63.0345%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,689 samples, 1.36%)</title><rect x="61.4531%" y="437" width="1.3629%" height="15" fill="rgb(216,158,51)" fg:x="76157" fg:w="1689"/><text x="61.7031%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,683 samples, 1.36%)</title><rect x="61.4580%" y="421" width="1.3581%" height="15" fill="rgb(233,14,44)" fg:x="76163" fg:w="1683"/><text x="61.7080%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,683 samples, 1.36%)</title><rect x="61.4580%" y="405" width="1.3581%" height="15" fill="rgb(237,97,39)" fg:x="76163" fg:w="1683"/><text x="61.7080%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,680 samples, 1.36%)</title><rect x="61.4604%" y="389" width="1.3556%" height="15" fill="rgb(218,198,43)" fg:x="76166" fg:w="1680"/><text x="61.7104%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,680 samples, 1.36%)</title><rect x="61.4604%" y="373" width="1.3556%" height="15" fill="rgb(231,104,20)" fg:x="76166" fg:w="1680"/><text x="61.7104%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1,680 samples, 1.36%)</title><rect x="61.4604%" y="357" width="1.3556%" height="15" fill="rgb(254,36,13)" fg:x="76166" fg:w="1680"/><text x="61.7104%" y="367.50"></text></g><g><title>__rg_alloc (1,680 samples, 1.36%)</title><rect x="61.4604%" y="341" width="1.3556%" height="15" fill="rgb(248,14,50)" fg:x="76166" fg:w="1680"/><text x="61.7104%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,680 samples, 1.36%)</title><rect x="61.4604%" y="325" width="1.3556%" height="15" fill="rgb(217,107,29)" fg:x="76166" fg:w="1680"/><text x="61.7104%" y="335.50"></text></g><g><title>sn_rust_alloc (1,676 samples, 1.35%)</title><rect x="61.4636%" y="309" width="1.3524%" height="15" fill="rgb(251,169,33)" fg:x="76170" fg:w="1676"/><text x="61.7136%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,484 samples, 4.43%)</title><rect x="58.7184%" y="549" width="4.4252%" height="15" fill="rgb(217,108,32)" fg:x="72768" fg:w="5484"/><text x="58.9684%" y="559.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (5,438 samples, 4.39%)</title><rect x="58.7556%" y="533" width="4.3881%" height="15" fill="rgb(219,66,42)" fg:x="72814" fg:w="5438"/><text x="59.0056%" y="543.50">&lt;trem..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (2,206 samples, 1.78%)</title><rect x="61.3635%" y="517" width="1.7801%" height="15" fill="rgb(206,180,7)" fg:x="76046" fg:w="2206"/><text x="61.6135%" y="527.50">t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,157 samples, 1.74%)</title><rect x="61.4031%" y="501" width="1.7405%" height="15" fill="rgb(208,226,31)" fg:x="76095" fg:w="2157"/><text x="61.6531%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,101 samples, 1.70%)</title><rect x="61.4483%" y="485" width="1.6954%" height="15" fill="rgb(218,26,49)" fg:x="76151" fg:w="2101"/><text x="61.6983%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2,101 samples, 1.70%)</title><rect x="61.4483%" y="469" width="1.6954%" height="15" fill="rgb(233,197,48)" fg:x="76151" fg:w="2101"/><text x="61.6983%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,101 samples, 1.70%)</title><rect x="61.4483%" y="453" width="1.6954%" height="15" fill="rgb(252,181,51)" fg:x="76151" fg:w="2101"/><text x="61.6983%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (406 samples, 0.33%)</title><rect x="62.8160%" y="437" width="0.3276%" height="15" fill="rgb(253,90,19)" fg:x="77846" fg:w="406"/><text x="63.0660%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (406 samples, 0.33%)</title><rect x="62.8160%" y="421" width="0.3276%" height="15" fill="rgb(215,171,30)" fg:x="77846" fg:w="406"/><text x="63.0660%" y="431.50"></text></g><g><title>[libc-2.31.so] (405 samples, 0.33%)</title><rect x="62.8168%" y="405" width="0.3268%" height="15" fill="rgb(214,222,9)" fg:x="77847" fg:w="405"/><text x="63.0668%" y="415.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,493 samples, 4.43%)</title><rect x="58.7184%" y="565" width="4.4324%" height="15" fill="rgb(223,3,22)" fg:x="72768" fg:w="5493"/><text x="58.9684%" y="575.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (10,142 samples, 8.18%)</title><rect x="54.9687%" y="613" width="8.1839%" height="15" fill="rgb(225,196,46)" fg:x="68121" fg:w="10142"/><text x="55.2187%" y="623.50">tremor_runt..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (6,535 samples, 5.27%)</title><rect x="57.8792%" y="597" width="5.2733%" height="15" fill="rgb(209,110,37)" fg:x="71728" fg:w="6535"/><text x="58.1292%" y="607.50">&lt;futur..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (6,535 samples, 5.27%)</title><rect x="57.8792%" y="581" width="5.2733%" height="15" fill="rgb(249,89,12)" fg:x="71728" fg:w="6535"/><text x="58.1292%" y="591.50">future..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (60 samples, 0.05%)</title><rect x="63.2945%" y="549" width="0.0484%" height="15" fill="rgb(226,27,33)" fg:x="78439" fg:w="60"/><text x="63.5445%" y="559.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (21 samples, 0.02%)</title><rect x="63.3260%" y="533" width="0.0169%" height="15" fill="rgb(213,82,22)" fg:x="78478" fg:w="21"/><text x="63.5760%" y="543.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (950 samples, 0.77%)</title><rect x="63.1904%" y="565" width="0.7666%" height="15" fill="rgb(248,140,0)" fg:x="78310" fg:w="950"/><text x="63.4404%" y="575.50"></text></g><g><title>[libc-2.31.so] (761 samples, 0.61%)</title><rect x="63.3429%" y="549" width="0.6141%" height="15" fill="rgb(228,106,3)" fg:x="78499" fg:w="761"/><text x="63.5929%" y="559.50"></text></g><g><title>[libc-2.31.so] (454 samples, 0.37%)</title><rect x="63.9570%" y="565" width="0.3663%" height="15" fill="rgb(209,23,37)" fg:x="79260" fg:w="454"/><text x="64.2070%" y="575.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,454 samples, 1.17%)</title><rect x="63.1525%" y="597" width="1.1733%" height="15" fill="rgb(241,93,50)" fg:x="78263" fg:w="1454"/><text x="63.4025%" y="607.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,454 samples, 1.17%)</title><rect x="63.1525%" y="581" width="1.1733%" height="15" fill="rgb(253,46,43)" fg:x="78263" fg:w="1454"/><text x="63.4025%" y="591.50"></text></g><g><title>[libc-2.31.so] (180 samples, 0.15%)</title><rect x="64.3572%" y="581" width="0.1452%" height="15" fill="rgb(226,206,43)" fg:x="79756" fg:w="180"/><text x="64.6072%" y="591.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (15 samples, 0.01%)</title><rect x="64.8180%" y="565" width="0.0121%" height="15" fill="rgb(217,54,7)" fg:x="80327" fg:w="15"/><text x="65.0680%" y="575.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.02%)</title><rect x="64.8301%" y="565" width="0.0161%" height="15" fill="rgb(223,5,52)" fg:x="80342" fg:w="20"/><text x="65.0801%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.03%)</title><rect x="64.8551%" y="549" width="0.0347%" height="15" fill="rgb(206,52,46)" fg:x="80373" fg:w="43"/><text x="65.1051%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (16 samples, 0.01%)</title><rect x="64.8769%" y="533" width="0.0129%" height="15" fill="rgb(253,136,11)" fg:x="80400" fg:w="16"/><text x="65.1269%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="64.8793%" y="517" width="0.0105%" height="15" fill="rgb(208,106,33)" fg:x="80403" fg:w="13"/><text x="65.1293%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (937 samples, 0.76%)</title><rect x="64.8551%" y="565" width="0.7561%" height="15" fill="rgb(206,54,4)" fg:x="80373" fg:w="937"/><text x="65.1051%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (894 samples, 0.72%)</title><rect x="64.8898%" y="549" width="0.7214%" height="15" fill="rgb(213,3,15)" fg:x="80416" fg:w="894"/><text x="65.1398%" y="559.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (894 samples, 0.72%)</title><rect x="64.8898%" y="533" width="0.7214%" height="15" fill="rgb(252,211,39)" fg:x="80416" fg:w="894"/><text x="65.1398%" y="543.50"></text></g><g><title>core::ptr::read (894 samples, 0.72%)</title><rect x="64.8898%" y="517" width="0.7214%" height="15" fill="rgb(223,6,36)" fg:x="80416" fg:w="894"/><text x="65.1398%" y="527.50"></text></g><g><title>[libc-2.31.so] (893 samples, 0.72%)</title><rect x="64.8906%" y="501" width="0.7206%" height="15" fill="rgb(252,169,45)" fg:x="80417" fg:w="893"/><text x="65.1406%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="65.6120%" y="565" width="0.0113%" height="15" fill="rgb(212,48,26)" fg:x="81311" fg:w="14"/><text x="65.8620%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (243 samples, 0.20%)</title><rect x="65.6233%" y="437" width="0.1961%" height="15" fill="rgb(251,102,48)" fg:x="81325" fg:w="243"/><text x="65.8733%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (243 samples, 0.20%)</title><rect x="65.6233%" y="421" width="0.1961%" height="15" fill="rgb(243,208,16)" fg:x="81325" fg:w="243"/><text x="65.8733%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (243 samples, 0.20%)</title><rect x="65.6233%" y="405" width="0.1961%" height="15" fill="rgb(219,96,24)" fg:x="81325" fg:w="243"/><text x="65.8733%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (243 samples, 0.20%)</title><rect x="65.6233%" y="389" width="0.1961%" height="15" fill="rgb(219,33,29)" fg:x="81325" fg:w="243"/><text x="65.8733%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (243 samples, 0.20%)</title><rect x="65.6233%" y="373" width="0.1961%" height="15" fill="rgb(223,176,5)" fg:x="81325" fg:w="243"/><text x="65.8733%" y="383.50"></text></g><g><title>alloc::alloc::alloc (243 samples, 0.20%)</title><rect x="65.6233%" y="357" width="0.1961%" height="15" fill="rgb(228,140,14)" fg:x="81325" fg:w="243"/><text x="65.8733%" y="367.50"></text></g><g><title>__rg_alloc (243 samples, 0.20%)</title><rect x="65.6233%" y="341" width="0.1961%" height="15" fill="rgb(217,179,31)" fg:x="81325" fg:w="243"/><text x="65.8733%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (243 samples, 0.20%)</title><rect x="65.6233%" y="325" width="0.1961%" height="15" fill="rgb(230,9,30)" fg:x="81325" fg:w="243"/><text x="65.8733%" y="335.50"></text></g><g><title>sn_rust_alloc (234 samples, 0.19%)</title><rect x="65.6306%" y="309" width="0.1888%" height="15" fill="rgb(230,136,20)" fg:x="81334" fg:w="234"/><text x="65.8806%" y="319.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (21 samples, 0.02%)</title><rect x="65.8024%" y="293" width="0.0169%" height="15" fill="rgb(215,210,22)" fg:x="81547" fg:w="21"/><text x="66.0524%" y="303.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (284 samples, 0.23%)</title><rect x="65.6233%" y="565" width="0.2292%" height="15" fill="rgb(218,43,5)" fg:x="81325" fg:w="284"/><text x="65.8733%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (284 samples, 0.23%)</title><rect x="65.6233%" y="549" width="0.2292%" height="15" fill="rgb(216,11,5)" fg:x="81325" fg:w="284"/><text x="65.8733%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (284 samples, 0.23%)</title><rect x="65.6233%" y="533" width="0.2292%" height="15" fill="rgb(209,82,29)" fg:x="81325" fg:w="284"/><text x="65.8733%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (284 samples, 0.23%)</title><rect x="65.6233%" y="517" width="0.2292%" height="15" fill="rgb(244,115,12)" fg:x="81325" fg:w="284"/><text x="65.8733%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (284 samples, 0.23%)</title><rect x="65.6233%" y="501" width="0.2292%" height="15" fill="rgb(222,82,18)" fg:x="81325" fg:w="284"/><text x="65.8733%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (284 samples, 0.23%)</title><rect x="65.6233%" y="485" width="0.2292%" height="15" fill="rgb(249,227,8)" fg:x="81325" fg:w="284"/><text x="65.8733%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (284 samples, 0.23%)</title><rect x="65.6233%" y="469" width="0.2292%" height="15" fill="rgb(253,141,45)" fg:x="81325" fg:w="284"/><text x="65.8733%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (284 samples, 0.23%)</title><rect x="65.6233%" y="453" width="0.2292%" height="15" fill="rgb(234,184,4)" fg:x="81325" fg:w="284"/><text x="65.8733%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (41 samples, 0.03%)</title><rect x="65.8194%" y="437" width="0.0331%" height="15" fill="rgb(218,194,23)" fg:x="81568" fg:w="41"/><text x="66.0694%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.03%)</title><rect x="65.8194%" y="421" width="0.0331%" height="15" fill="rgb(235,66,41)" fg:x="81568" fg:w="41"/><text x="66.0694%" y="431.50"></text></g><g><title>[libc-2.31.so] (35 samples, 0.03%)</title><rect x="65.8242%" y="405" width="0.0282%" height="15" fill="rgb(245,217,1)" fg:x="81574" fg:w="35"/><text x="66.0742%" y="415.50"></text></g><g><title>[libc-2.31.so] (712 samples, 0.57%)</title><rect x="65.8525%" y="565" width="0.5745%" height="15" fill="rgb(229,91,1)" fg:x="81609" fg:w="712"/><text x="66.1025%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (16 samples, 0.01%)</title><rect x="66.4278%" y="549" width="0.0129%" height="15" fill="rgb(207,101,30)" fg:x="82322" fg:w="16"/><text x="66.6778%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (24 samples, 0.02%)</title><rect x="66.4270%" y="565" width="0.0194%" height="15" fill="rgb(223,82,49)" fg:x="82321" fg:w="24"/><text x="66.6770%" y="575.50"></text></g><g><title>core::mem::replace (20 samples, 0.02%)</title><rect x="66.4665%" y="533" width="0.0161%" height="15" fill="rgb(218,167,17)" fg:x="82370" fg:w="20"/><text x="66.7165%" y="543.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="66.4674%" y="517" width="0.0153%" height="15" fill="rgb(208,103,14)" fg:x="82371" fg:w="19"/><text x="66.7174%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (63 samples, 0.05%)</title><rect x="66.4464%" y="565" width="0.0508%" height="15" fill="rgb(238,20,8)" fg:x="82345" fg:w="63"/><text x="66.6964%" y="575.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.05%)</title><rect x="66.4464%" y="549" width="0.0508%" height="15" fill="rgb(218,80,54)" fg:x="82345" fg:w="63"/><text x="66.6964%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (18 samples, 0.01%)</title><rect x="66.4827%" y="533" width="0.0145%" height="15" fill="rgb(240,144,17)" fg:x="82390" fg:w="18"/><text x="66.7327%" y="543.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.01%)</title><rect x="66.4827%" y="517" width="0.0145%" height="15" fill="rgb(245,27,50)" fg:x="82390" fg:w="18"/><text x="66.7327%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (14 samples, 0.01%)</title><rect x="66.4972%" y="565" width="0.0113%" height="15" fill="rgb(251,51,7)" fg:x="82408" fg:w="14"/><text x="66.7472%" y="575.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="66.4972%" y="549" width="0.0113%" height="15" fill="rgb(245,217,29)" fg:x="82408" fg:w="14"/><text x="66.7472%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_last_mut (13 samples, 0.01%)</title><rect x="66.5182%" y="565" width="0.0105%" height="15" fill="rgb(221,176,29)" fg:x="82434" fg:w="13"/><text x="66.7682%" y="575.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.01%)</title><rect x="66.5553%" y="533" width="0.0145%" height="15" fill="rgb(212,180,24)" fg:x="82480" fg:w="18"/><text x="66.8053%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (18 samples, 0.01%)</title><rect x="66.5553%" y="517" width="0.0145%" height="15" fill="rgb(254,24,2)" fg:x="82480" fg:w="18"/><text x="66.8053%" y="527.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (18 samples, 0.01%)</title><rect x="66.5553%" y="501" width="0.0145%" height="15" fill="rgb(230,100,2)" fg:x="82480" fg:w="18"/><text x="66.8053%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (18 samples, 0.01%)</title><rect x="66.5553%" y="485" width="0.0145%" height="15" fill="rgb(219,142,25)" fg:x="82480" fg:w="18"/><text x="66.8053%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (18 samples, 0.01%)</title><rect x="66.5553%" y="469" width="0.0145%" height="15" fill="rgb(240,73,43)" fg:x="82480" fg:w="18"/><text x="66.8053%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (144 samples, 0.12%)</title><rect x="66.5698%" y="533" width="0.1162%" height="15" fill="rgb(214,114,15)" fg:x="82498" fg:w="144"/><text x="66.8198%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (143 samples, 0.12%)</title><rect x="66.5706%" y="517" width="0.1154%" height="15" fill="rgb(207,130,4)" fg:x="82499" fg:w="143"/><text x="66.8206%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (143 samples, 0.12%)</title><rect x="66.5706%" y="501" width="0.1154%" height="15" fill="rgb(221,25,40)" fg:x="82499" fg:w="143"/><text x="66.8206%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (143 samples, 0.12%)</title><rect x="66.5706%" y="485" width="0.1154%" height="15" fill="rgb(241,184,7)" fg:x="82499" fg:w="143"/><text x="66.8206%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (143 samples, 0.12%)</title><rect x="66.5706%" y="469" width="0.1154%" height="15" fill="rgb(235,159,4)" fg:x="82499" fg:w="143"/><text x="66.8206%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (143 samples, 0.12%)</title><rect x="66.5706%" y="453" width="0.1154%" height="15" fill="rgb(214,87,48)" fg:x="82499" fg:w="143"/><text x="66.8206%" y="463.50"></text></g><g><title>[libc-2.31.so] (102 samples, 0.08%)</title><rect x="66.6037%" y="437" width="0.0823%" height="15" fill="rgb(246,198,24)" fg:x="82540" fg:w="102"/><text x="66.8537%" y="447.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (198 samples, 0.16%)</title><rect x="66.5287%" y="565" width="0.1598%" height="15" fill="rgb(209,66,40)" fg:x="82447" fg:w="198"/><text x="66.7787%" y="575.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (185 samples, 0.15%)</title><rect x="66.5392%" y="549" width="0.1493%" height="15" fill="rgb(233,147,39)" fg:x="82460" fg:w="185"/><text x="66.7892%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,946 samples, 2.38%)</title><rect x="64.3258%" y="597" width="2.3772%" height="15" fill="rgb(231,145,52)" fg:x="79717" fg:w="2946"/><text x="64.5758%" y="607.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (2,727 samples, 2.20%)</title><rect x="64.5025%" y="581" width="2.2005%" height="15" fill="rgb(206,20,26)" fg:x="79936" fg:w="2727"/><text x="64.7525%" y="591.50">t..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (18 samples, 0.01%)</title><rect x="66.6885%" y="565" width="0.0145%" height="15" fill="rgb(238,220,4)" fg:x="82645" fg:w="18"/><text x="66.9385%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (18 samples, 0.01%)</title><rect x="66.6885%" y="549" width="0.0145%" height="15" fill="rgb(252,195,42)" fg:x="82645" fg:w="18"/><text x="66.9385%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.01%)</title><rect x="66.6885%" y="533" width="0.0145%" height="15" fill="rgb(209,10,6)" fg:x="82645" fg:w="18"/><text x="66.9385%" y="543.50"></text></g><g><title>async_io::driver::block_on (16,065 samples, 12.96%)</title><rect x="53.7413%" y="917" width="12.9633%" height="15" fill="rgb(229,3,52)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="927.50">async_io::driver::b..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,065 samples, 12.96%)</title><rect x="53.7413%" y="901" width="12.9633%" height="15" fill="rgb(253,49,37)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="911.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,065 samples, 12.96%)</title><rect x="53.7413%" y="885" width="12.9633%" height="15" fill="rgb(240,103,49)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="895.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::run::{{closure}} (16,065 samples, 12.96%)</title><rect x="53.7413%" y="869" width="12.9633%" height="15" fill="rgb(250,182,30)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="879.50">async_executor::Exe..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,065 samples, 12.96%)</title><rect x="53.7413%" y="853" width="12.9633%" height="15" fill="rgb(248,8,30)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="863.50">&lt;futures_lite::futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,065 samples, 12.96%)</title><rect x="53.7413%" y="837" width="12.9633%" height="15" fill="rgb(237,120,30)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="847.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (16,065 samples, 12.96%)</title><rect x="53.7413%" y="821" width="12.9633%" height="15" fill="rgb(221,146,34)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="831.50">async_executor::Exe..</text></g><g><title>async_task::runnable::Runnable::run (16,065 samples, 12.96%)</title><rect x="53.7413%" y="805" width="12.9633%" height="15" fill="rgb(242,55,13)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="815.50">async_task::runnabl..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (16,065 samples, 12.96%)</title><rect x="53.7413%" y="789" width="12.9633%" height="15" fill="rgb(242,112,31)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="799.50">async_task::raw::Ra..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16,065 samples, 12.96%)</title><rect x="53.7413%" y="773" width="12.9633%" height="15" fill="rgb(249,192,27)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="783.50">&lt;core::pin::Pin&lt;P&gt; ..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,065 samples, 12.96%)</title><rect x="53.7413%" y="757" width="12.9633%" height="15" fill="rgb(208,204,44)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="767.50">&lt;core::future::from..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (16,065 samples, 12.96%)</title><rect x="53.7413%" y="741" width="12.9633%" height="15" fill="rgb(208,93,54)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="751.50">async_executor::Exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (16,065 samples, 12.96%)</title><rect x="53.7413%" y="725" width="12.9633%" height="15" fill="rgb(242,1,31)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="735.50">&lt;async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (16,065 samples, 12.96%)</title><rect x="53.7413%" y="709" width="12.9633%" height="15" fill="rgb(241,83,25)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="719.50">async_std::task::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16,065 samples, 12.96%)</title><rect x="53.7413%" y="693" width="12.9633%" height="15" fill="rgb(205,169,50)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="703.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,065 samples, 12.96%)</title><rect x="53.7413%" y="677" width="12.9633%" height="15" fill="rgb(239,186,37)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="687.50">std::thread::local:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (16,065 samples, 12.96%)</title><rect x="53.7413%" y="661" width="12.9633%" height="15" fill="rgb(205,221,10)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="671.50">async_std::task::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (16,065 samples, 12.96%)</title><rect x="53.7413%" y="645" width="12.9633%" height="15" fill="rgb(218,196,15)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="655.50">&lt;async_std::task::b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,065 samples, 12.96%)</title><rect x="53.7413%" y="629" width="12.9633%" height="15" fill="rgb(218,196,35)" fg:x="66600" fg:w="16065"/><text x="53.9913%" y="639.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (4,402 samples, 3.55%)</title><rect x="63.1525%" y="613" width="3.5521%" height="15" fill="rgb(233,63,24)" fg:x="78263" fg:w="4402"/><text x="63.4025%" y="623.50">trem..</text></g><g><title>event_listener::Inner::lock (16 samples, 0.01%)</title><rect x="66.7223%" y="549" width="0.0129%" height="15" fill="rgb(225,8,4)" fg:x="82687" fg:w="16"/><text x="66.9723%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="66.7223%" y="533" width="0.0129%" height="15" fill="rgb(234,105,35)" fg:x="82687" fg:w="16"/><text x="66.9723%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (16 samples, 0.01%)</title><rect x="66.7223%" y="517" width="0.0129%" height="15" fill="rgb(236,21,32)" fg:x="82687" fg:w="16"/><text x="66.9723%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (16 samples, 0.01%)</title><rect x="66.7223%" y="501" width="0.0129%" height="15" fill="rgb(228,109,6)" fg:x="82687" fg:w="16"/><text x="66.9723%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (16 samples, 0.01%)</title><rect x="66.7223%" y="485" width="0.0129%" height="15" fill="rgb(229,215,31)" fg:x="82687" fg:w="16"/><text x="66.9723%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (22 samples, 0.02%)</title><rect x="66.7546%" y="501" width="0.0178%" height="15" fill="rgb(221,52,54)" fg:x="82727" fg:w="22"/><text x="67.0046%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="66.7546%" y="485" width="0.0178%" height="15" fill="rgb(252,129,43)" fg:x="82727" fg:w="22"/><text x="67.0046%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="66.7546%" y="469" width="0.0178%" height="15" fill="rgb(248,183,27)" fg:x="82727" fg:w="22"/><text x="67.0046%" y="479.50"></text></g><g><title>async_executor::Sleepers::notify (18 samples, 0.01%)</title><rect x="66.7788%" y="453" width="0.0145%" height="15" fill="rgb(250,0,22)" fg:x="82757" fg:w="18"/><text x="67.0288%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (14 samples, 0.01%)</title><rect x="66.7821%" y="437" width="0.0113%" height="15" fill="rgb(213,166,10)" fg:x="82761" fg:w="14"/><text x="67.0321%" y="447.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="66.7829%" y="421" width="0.0105%" height="15" fill="rgb(207,163,36)" fg:x="82762" fg:w="13"/><text x="67.0329%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (56 samples, 0.05%)</title><rect x="66.7934%" y="389" width="0.0452%" height="15" fill="rgb(208,122,22)" fg:x="82775" fg:w="56"/><text x="67.0434%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (56 samples, 0.05%)</title><rect x="66.7934%" y="373" width="0.0452%" height="15" fill="rgb(207,104,49)" fg:x="82775" fg:w="56"/><text x="67.0434%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (57 samples, 0.05%)</title><rect x="66.7934%" y="453" width="0.0460%" height="15" fill="rgb(248,211,50)" fg:x="82775" fg:w="57"/><text x="67.0434%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.05%)</title><rect x="66.7934%" y="437" width="0.0460%" height="15" fill="rgb(217,13,45)" fg:x="82775" fg:w="57"/><text x="67.0434%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (57 samples, 0.05%)</title><rect x="66.7934%" y="421" width="0.0460%" height="15" fill="rgb(211,216,49)" fg:x="82775" fg:w="57"/><text x="67.0434%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (57 samples, 0.05%)</title><rect x="66.7934%" y="405" width="0.0460%" height="15" fill="rgb(221,58,53)" fg:x="82775" fg:w="57"/><text x="67.0434%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (36 samples, 0.03%)</title><rect x="66.8393%" y="453" width="0.0290%" height="15" fill="rgb(220,112,41)" fg:x="82832" fg:w="36"/><text x="67.0893%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (36 samples, 0.03%)</title><rect x="66.8393%" y="437" width="0.0290%" height="15" fill="rgb(236,38,28)" fg:x="82832" fg:w="36"/><text x="67.0893%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::notify (25 samples, 0.02%)</title><rect x="66.8765%" y="405" width="0.0202%" height="15" fill="rgb(227,195,22)" fg:x="82878" fg:w="25"/><text x="67.1265%" y="415.50"></text></g><g><title>polling::Poller::notify (20 samples, 0.02%)</title><rect x="66.8805%" y="389" width="0.0161%" height="15" fill="rgb(214,55,33)" fg:x="82883" fg:w="20"/><text x="67.1305%" y="399.50"></text></g><g><title>polling::epoll::Poller::notify (13 samples, 0.01%)</title><rect x="66.8862%" y="373" width="0.0105%" height="15" fill="rgb(248,80,13)" fg:x="82890" fg:w="13"/><text x="67.1362%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (47 samples, 0.04%)</title><rect x="66.9273%" y="373" width="0.0379%" height="15" fill="rgb(238,52,6)" fg:x="82941" fg:w="47"/><text x="67.1773%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (47 samples, 0.04%)</title><rect x="66.9273%" y="357" width="0.0379%" height="15" fill="rgb(224,198,47)" fg:x="82941" fg:w="47"/><text x="67.1773%" y="367.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (21 samples, 0.02%)</title><rect x="66.9652%" y="373" width="0.0169%" height="15" fill="rgb(233,171,20)" fg:x="82988" fg:w="21"/><text x="67.2152%" y="383.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (21 samples, 0.02%)</title><rect x="66.9652%" y="357" width="0.0169%" height="15" fill="rgb(241,30,25)" fg:x="82988" fg:w="21"/><text x="67.2152%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (21 samples, 0.02%)</title><rect x="66.9652%" y="341" width="0.0169%" height="15" fill="rgb(207,171,38)" fg:x="82988" fg:w="21"/><text x="67.2152%" y="351.50"></text></g><g><title>parking::Unparker::unpark (101 samples, 0.08%)</title><rect x="66.9055%" y="405" width="0.0815%" height="15" fill="rgb(234,70,1)" fg:x="82914" fg:w="101"/><text x="67.1555%" y="415.50"></text></g><g><title>parking::Inner::unpark (86 samples, 0.07%)</title><rect x="66.9176%" y="389" width="0.0694%" height="15" fill="rgb(232,178,18)" fg:x="82929" fg:w="86"/><text x="67.1676%" y="399.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (150 samples, 0.12%)</title><rect x="66.8684%" y="421" width="0.1210%" height="15" fill="rgb(241,78,40)" fg:x="82868" fg:w="150"/><text x="67.1184%" y="431.50"></text></g><g><title>core::task::wake::Waker::wake (216 samples, 0.17%)</title><rect x="66.8684%" y="453" width="0.1743%" height="15" fill="rgb(222,35,25)" fg:x="82868" fg:w="216"/><text x="67.1184%" y="463.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (216 samples, 0.17%)</title><rect x="66.8684%" y="437" width="0.1743%" height="15" fill="rgb(207,92,16)" fg:x="82868" fg:w="216"/><text x="67.1184%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (66 samples, 0.05%)</title><rect x="66.9894%" y="421" width="0.0533%" height="15" fill="rgb(216,59,51)" fg:x="83018" fg:w="66"/><text x="67.2394%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.05%)</title><rect x="66.9894%" y="405" width="0.0533%" height="15" fill="rgb(213,80,28)" fg:x="83018" fg:w="66"/><text x="67.2394%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (64 samples, 0.05%)</title><rect x="66.9911%" y="389" width="0.0516%" height="15" fill="rgb(220,93,7)" fg:x="83020" fg:w="64"/><text x="67.2411%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (64 samples, 0.05%)</title><rect x="66.9911%" y="373" width="0.0516%" height="15" fill="rgb(225,24,44)" fg:x="83020" fg:w="64"/><text x="67.2411%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (50 samples, 0.04%)</title><rect x="67.0467%" y="405" width="0.0403%" height="15" fill="rgb(243,74,40)" fg:x="83089" fg:w="50"/><text x="67.2967%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50 samples, 0.04%)</title><rect x="67.0467%" y="389" width="0.0403%" height="15" fill="rgb(228,39,7)" fg:x="83089" fg:w="50"/><text x="67.2967%" y="399.50"></text></g><g><title>async_executor::State::notify (397 samples, 0.32%)</title><rect x="66.7772%" y="469" width="0.3203%" height="15" fill="rgb(227,79,8)" fg:x="82755" fg:w="397"/><text x="67.0272%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (68 samples, 0.05%)</title><rect x="67.0427%" y="453" width="0.0549%" height="15" fill="rgb(236,58,11)" fg:x="83084" fg:w="68"/><text x="67.2927%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (64 samples, 0.05%)</title><rect x="67.0459%" y="437" width="0.0516%" height="15" fill="rgb(249,63,35)" fg:x="83088" fg:w="64"/><text x="67.2959%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (64 samples, 0.05%)</title><rect x="67.0459%" y="421" width="0.0516%" height="15" fill="rgb(252,114,16)" fg:x="83088" fg:w="64"/><text x="67.2959%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (13 samples, 0.01%)</title><rect x="67.0871%" y="405" width="0.0105%" height="15" fill="rgb(254,151,24)" fg:x="83139" fg:w="13"/><text x="67.3371%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (101 samples, 0.08%)</title><rect x="67.1072%" y="437" width="0.0815%" height="15" fill="rgb(253,54,39)" fg:x="83164" fg:w="101"/><text x="67.3572%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (101 samples, 0.08%)</title><rect x="67.1072%" y="421" width="0.0815%" height="15" fill="rgb(243,25,45)" fg:x="83164" fg:w="101"/><text x="67.3572%" y="431.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (543 samples, 0.44%)</title><rect x="66.7772%" y="485" width="0.4382%" height="15" fill="rgb(234,134,9)" fg:x="82755" fg:w="543"/><text x="67.0272%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (146 samples, 0.12%)</title><rect x="67.0976%" y="469" width="0.1178%" height="15" fill="rgb(227,166,31)" fg:x="83152" fg:w="146"/><text x="67.3476%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (142 samples, 0.11%)</title><rect x="67.1008%" y="453" width="0.1146%" height="15" fill="rgb(245,143,41)" fg:x="83156" fg:w="142"/><text x="67.3508%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (33 samples, 0.03%)</title><rect x="67.1887%" y="437" width="0.0266%" height="15" fill="rgb(238,181,32)" fg:x="83265" fg:w="33"/><text x="67.4387%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_or (33 samples, 0.03%)</title><rect x="67.1887%" y="421" width="0.0266%" height="15" fill="rgb(224,113,18)" fg:x="83265" fg:w="33"/><text x="67.4387%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (181 samples, 0.15%)</title><rect x="67.2154%" y="485" width="0.1461%" height="15" fill="rgb(240,229,28)" fg:x="83298" fg:w="181"/><text x="67.4654%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (181 samples, 0.15%)</title><rect x="67.2154%" y="469" width="0.1461%" height="15" fill="rgb(250,185,3)" fg:x="83298" fg:w="181"/><text x="67.4654%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (852 samples, 0.69%)</title><rect x="66.7223%" y="661" width="0.6875%" height="15" fill="rgb(212,59,25)" fg:x="82687" fg:w="852"/><text x="66.9723%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (852 samples, 0.69%)</title><rect x="66.7223%" y="645" width="0.6875%" height="15" fill="rgb(221,87,20)" fg:x="82687" fg:w="852"/><text x="66.9723%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (852 samples, 0.69%)</title><rect x="66.7223%" y="629" width="0.6875%" height="15" fill="rgb(213,74,28)" fg:x="82687" fg:w="852"/><text x="66.9723%" y="639.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (852 samples, 0.69%)</title><rect x="66.7223%" y="613" width="0.6875%" height="15" fill="rgb(224,132,34)" fg:x="82687" fg:w="852"/><text x="66.9723%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (852 samples, 0.69%)</title><rect x="66.7223%" y="597" width="0.6875%" height="15" fill="rgb(222,101,24)" fg:x="82687" fg:w="852"/><text x="66.9723%" y="607.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (852 samples, 0.69%)</title><rect x="66.7223%" y="581" width="0.6875%" height="15" fill="rgb(254,142,4)" fg:x="82687" fg:w="852"/><text x="66.9723%" y="591.50"></text></g><g><title>event_listener::Event::notify (852 samples, 0.69%)</title><rect x="66.7223%" y="565" width="0.6875%" height="15" fill="rgb(230,229,49)" fg:x="82687" fg:w="852"/><text x="66.9723%" y="575.50"></text></g><g><title>event_listener::List::notify (836 samples, 0.67%)</title><rect x="66.7353%" y="549" width="0.6746%" height="15" fill="rgb(238,70,47)" fg:x="82703" fg:w="836"/><text x="66.9853%" y="559.50"></text></g><g><title>core::task::wake::Waker::wake (813 samples, 0.66%)</title><rect x="66.7538%" y="533" width="0.6560%" height="15" fill="rgb(231,160,17)" fg:x="82726" fg:w="813"/><text x="67.0038%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (813 samples, 0.66%)</title><rect x="66.7538%" y="517" width="0.6560%" height="15" fill="rgb(218,68,53)" fg:x="82726" fg:w="813"/><text x="67.0038%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (790 samples, 0.64%)</title><rect x="66.7724%" y="501" width="0.6375%" height="15" fill="rgb(236,111,10)" fg:x="82749" fg:w="790"/><text x="67.0224%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (60 samples, 0.05%)</title><rect x="67.3614%" y="485" width="0.0484%" height="15" fill="rgb(224,34,41)" fg:x="83479" fg:w="60"/><text x="67.6114%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (60 samples, 0.05%)</title><rect x="67.3614%" y="469" width="0.0484%" height="15" fill="rgb(241,118,19)" fg:x="83479" fg:w="60"/><text x="67.6114%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.04%)</title><rect x="68.5008%" y="645" width="0.0436%" height="15" fill="rgb(238,129,25)" fg:x="84891" fg:w="54"/><text x="68.7508%" y="655.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="68.5444%" y="645" width="0.0105%" height="15" fill="rgb(238,22,31)" fg:x="84945" fg:w="13"/><text x="68.7944%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (194 samples, 0.16%)</title><rect x="68.9148%" y="549" width="0.1565%" height="15" fill="rgb(222,174,48)" fg:x="85404" fg:w="194"/><text x="69.1648%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (194 samples, 0.16%)</title><rect x="68.9148%" y="533" width="0.1565%" height="15" fill="rgb(206,152,40)" fg:x="85404" fg:w="194"/><text x="69.1648%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (194 samples, 0.16%)</title><rect x="68.9148%" y="517" width="0.1565%" height="15" fill="rgb(218,99,54)" fg:x="85404" fg:w="194"/><text x="69.1648%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (185 samples, 0.15%)</title><rect x="68.9220%" y="501" width="0.1493%" height="15" fill="rgb(220,174,26)" fg:x="85413" fg:w="185"/><text x="69.1720%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (185 samples, 0.15%)</title><rect x="68.9220%" y="485" width="0.1493%" height="15" fill="rgb(245,116,9)" fg:x="85413" fg:w="185"/><text x="69.1720%" y="495.50"></text></g><g><title>alloc::alloc::alloc (185 samples, 0.15%)</title><rect x="68.9220%" y="469" width="0.1493%" height="15" fill="rgb(209,72,35)" fg:x="85413" fg:w="185"/><text x="69.1720%" y="479.50"></text></g><g><title>__rg_alloc (185 samples, 0.15%)</title><rect x="68.9220%" y="453" width="0.1493%" height="15" fill="rgb(226,126,21)" fg:x="85413" fg:w="185"/><text x="69.1720%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (185 samples, 0.15%)</title><rect x="68.9220%" y="437" width="0.1493%" height="15" fill="rgb(227,192,1)" fg:x="85413" fg:w="185"/><text x="69.1720%" y="447.50"></text></g><g><title>sn_rust_alloc (158 samples, 0.13%)</title><rect x="68.9438%" y="421" width="0.1275%" height="15" fill="rgb(237,180,29)" fg:x="85440" fg:w="158"/><text x="69.1938%" y="431.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (39 samples, 0.03%)</title><rect x="69.0398%" y="405" width="0.0315%" height="15" fill="rgb(230,197,35)" fg:x="85559" fg:w="39"/><text x="69.2898%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (323 samples, 0.26%)</title><rect x="68.8809%" y="629" width="0.2606%" height="15" fill="rgb(246,193,31)" fg:x="85362" fg:w="323"/><text x="69.1309%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (281 samples, 0.23%)</title><rect x="68.9148%" y="613" width="0.2267%" height="15" fill="rgb(241,36,4)" fg:x="85404" fg:w="281"/><text x="69.1648%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (281 samples, 0.23%)</title><rect x="68.9148%" y="597" width="0.2267%" height="15" fill="rgb(241,130,17)" fg:x="85404" fg:w="281"/><text x="69.1648%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (281 samples, 0.23%)</title><rect x="68.9148%" y="581" width="0.2267%" height="15" fill="rgb(206,137,32)" fg:x="85404" fg:w="281"/><text x="69.1648%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (281 samples, 0.23%)</title><rect x="68.9148%" y="565" width="0.2267%" height="15" fill="rgb(237,228,51)" fg:x="85404" fg:w="281"/><text x="69.1648%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (87 samples, 0.07%)</title><rect x="69.0713%" y="549" width="0.0702%" height="15" fill="rgb(243,6,42)" fg:x="85598" fg:w="87"/><text x="69.3213%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (87 samples, 0.07%)</title><rect x="69.0713%" y="533" width="0.0702%" height="15" fill="rgb(251,74,28)" fg:x="85598" fg:w="87"/><text x="69.3213%" y="543.50"></text></g><g><title>[libc-2.31.so] (53 samples, 0.04%)</title><rect x="69.0987%" y="517" width="0.0428%" height="15" fill="rgb(218,20,49)" fg:x="85632" fg:w="53"/><text x="69.3487%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (134 samples, 0.11%)</title><rect x="69.1528%" y="485" width="0.1081%" height="15" fill="rgb(238,28,14)" fg:x="85699" fg:w="134"/><text x="69.4028%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (134 samples, 0.11%)</title><rect x="69.1528%" y="469" width="0.1081%" height="15" fill="rgb(229,40,46)" fg:x="85699" fg:w="134"/><text x="69.4028%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (134 samples, 0.11%)</title><rect x="69.1528%" y="453" width="0.1081%" height="15" fill="rgb(244,195,20)" fg:x="85699" fg:w="134"/><text x="69.4028%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (127 samples, 0.10%)</title><rect x="69.1585%" y="437" width="0.1025%" height="15" fill="rgb(253,56,35)" fg:x="85706" fg:w="127"/><text x="69.4085%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (127 samples, 0.10%)</title><rect x="69.1585%" y="421" width="0.1025%" height="15" fill="rgb(210,149,44)" fg:x="85706" fg:w="127"/><text x="69.4085%" y="431.50"></text></g><g><title>alloc::alloc::alloc (127 samples, 0.10%)</title><rect x="69.1585%" y="405" width="0.1025%" height="15" fill="rgb(240,135,12)" fg:x="85706" fg:w="127"/><text x="69.4085%" y="415.50"></text></g><g><title>__rg_alloc (127 samples, 0.10%)</title><rect x="69.1585%" y="389" width="0.1025%" height="15" fill="rgb(251,24,50)" fg:x="85706" fg:w="127"/><text x="69.4085%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (127 samples, 0.10%)</title><rect x="69.1585%" y="373" width="0.1025%" height="15" fill="rgb(243,200,47)" fg:x="85706" fg:w="127"/><text x="69.4085%" y="383.50"></text></g><g><title>sn_rust_alloc (122 samples, 0.10%)</title><rect x="69.1625%" y="357" width="0.0984%" height="15" fill="rgb(224,166,26)" fg:x="85711" fg:w="122"/><text x="69.4125%" y="367.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (81 samples, 0.07%)</title><rect x="69.1956%" y="341" width="0.0654%" height="15" fill="rgb(233,0,47)" fg:x="85752" fg:w="81"/><text x="69.4456%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (183 samples, 0.15%)</title><rect x="69.1512%" y="565" width="0.1477%" height="15" fill="rgb(253,80,5)" fg:x="85697" fg:w="183"/><text x="69.4012%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (181 samples, 0.15%)</title><rect x="69.1528%" y="549" width="0.1461%" height="15" fill="rgb(214,133,25)" fg:x="85699" fg:w="181"/><text x="69.4028%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (181 samples, 0.15%)</title><rect x="69.1528%" y="533" width="0.1461%" height="15" fill="rgb(209,27,14)" fg:x="85699" fg:w="181"/><text x="69.4028%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (181 samples, 0.15%)</title><rect x="69.1528%" y="517" width="0.1461%" height="15" fill="rgb(219,102,51)" fg:x="85699" fg:w="181"/><text x="69.4028%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (181 samples, 0.15%)</title><rect x="69.1528%" y="501" width="0.1461%" height="15" fill="rgb(237,18,16)" fg:x="85699" fg:w="181"/><text x="69.4028%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (47 samples, 0.04%)</title><rect x="69.2609%" y="485" width="0.0379%" height="15" fill="rgb(241,85,17)" fg:x="85833" fg:w="47"/><text x="69.5109%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.04%)</title><rect x="69.2609%" y="469" width="0.0379%" height="15" fill="rgb(236,90,42)" fg:x="85833" fg:w="47"/><text x="69.5109%" y="479.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.03%)</title><rect x="69.2666%" y="453" width="0.0323%" height="15" fill="rgb(249,57,21)" fg:x="85840" fg:w="40"/><text x="69.5166%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.04%)</title><rect x="69.2989%" y="565" width="0.0387%" height="15" fill="rgb(243,12,36)" fg:x="85880" fg:w="48"/><text x="69.5489%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.03%)</title><rect x="69.3094%" y="549" width="0.0282%" height="15" fill="rgb(253,128,47)" fg:x="85893" fg:w="35"/><text x="69.5594%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.03%)</title><rect x="69.3094%" y="533" width="0.0282%" height="15" fill="rgb(207,33,20)" fg:x="85893" fg:w="35"/><text x="69.5594%" y="543.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (33 samples, 0.03%)</title><rect x="69.3892%" y="421" width="0.0266%" height="15" fill="rgb(233,215,35)" fg:x="85992" fg:w="33"/><text x="69.6392%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.07%)</title><rect x="69.3513%" y="517" width="0.0654%" height="15" fill="rgb(249,188,52)" fg:x="85945" fg:w="81"/><text x="69.6013%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81 samples, 0.07%)</title><rect x="69.3513%" y="501" width="0.0654%" height="15" fill="rgb(225,12,32)" fg:x="85945" fg:w="81"/><text x="69.6013%" y="511.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.07%)</title><rect x="69.3513%" y="485" width="0.0654%" height="15" fill="rgb(247,98,14)" fg:x="85945" fg:w="81"/><text x="69.6013%" y="495.50"></text></g><g><title>__rg_alloc (81 samples, 0.07%)</title><rect x="69.3513%" y="469" width="0.0654%" height="15" fill="rgb(247,219,48)" fg:x="85945" fg:w="81"/><text x="69.6013%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (81 samples, 0.07%)</title><rect x="69.3513%" y="453" width="0.0654%" height="15" fill="rgb(253,60,48)" fg:x="85945" fg:w="81"/><text x="69.6013%" y="463.50"></text></g><g><title>sn_rust_alloc (71 samples, 0.06%)</title><rect x="69.3594%" y="437" width="0.0573%" height="15" fill="rgb(245,15,52)" fg:x="85955" fg:w="71"/><text x="69.6094%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (105 samples, 0.08%)</title><rect x="69.3376%" y="565" width="0.0847%" height="15" fill="rgb(220,133,28)" fg:x="85928" fg:w="105"/><text x="69.5876%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (96 samples, 0.08%)</title><rect x="69.3449%" y="549" width="0.0775%" height="15" fill="rgb(217,180,4)" fg:x="85937" fg:w="96"/><text x="69.5949%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (96 samples, 0.08%)</title><rect x="69.3449%" y="533" width="0.0775%" height="15" fill="rgb(251,24,1)" fg:x="85937" fg:w="96"/><text x="69.5949%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (355 samples, 0.29%)</title><rect x="69.1415%" y="629" width="0.2865%" height="15" fill="rgb(212,185,49)" fg:x="85685" fg:w="355"/><text x="69.3915%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (354 samples, 0.29%)</title><rect x="69.1423%" y="613" width="0.2857%" height="15" fill="rgb(215,175,22)" fg:x="85686" fg:w="354"/><text x="69.3923%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (354 samples, 0.29%)</title><rect x="69.1423%" y="597" width="0.2857%" height="15" fill="rgb(250,205,14)" fg:x="85686" fg:w="354"/><text x="69.3923%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (354 samples, 0.29%)</title><rect x="69.1423%" y="581" width="0.2857%" height="15" fill="rgb(225,211,22)" fg:x="85686" fg:w="354"/><text x="69.3923%" y="591.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,091 samples, 0.88%)</title><rect x="68.5549%" y="645" width="0.8804%" height="15" fill="rgb(251,179,42)" fg:x="84958" fg:w="1091"/><text x="68.8049%" y="655.50"></text></g><g><title>[libc-2.31.so] (113 samples, 0.09%)</title><rect x="69.4352%" y="645" width="0.0912%" height="15" fill="rgb(208,216,51)" fg:x="86049" fg:w="113"/><text x="69.6852%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (343 samples, 0.28%)</title><rect x="69.5313%" y="645" width="0.2768%" height="15" fill="rgb(235,36,11)" fg:x="86168" fg:w="343"/><text x="69.7813%" y="655.50"></text></g><g><title>core::ptr::write (329 samples, 0.27%)</title><rect x="69.5426%" y="629" width="0.2655%" height="15" fill="rgb(213,189,28)" fg:x="86182" fg:w="329"/><text x="69.7926%" y="639.50"></text></g><g><title>[libc-2.31.so] (328 samples, 0.26%)</title><rect x="69.5434%" y="613" width="0.2647%" height="15" fill="rgb(227,203,42)" fg:x="86183" fg:w="328"/><text x="69.7934%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,084 samples, 0.87%)</title><rect x="69.8807%" y="485" width="0.8747%" height="15" fill="rgb(244,72,36)" fg:x="86601" fg:w="1084"/><text x="70.1307%" y="495.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="70.7554%" y="485" width="0.0169%" height="15" fill="rgb(213,53,17)" fg:x="87685" fg:w="21"/><text x="71.0054%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,161 samples, 0.94%)</title><rect x="69.8371%" y="581" width="0.9368%" height="15" fill="rgb(207,167,3)" fg:x="86547" fg:w="1161"/><text x="70.0871%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,161 samples, 0.94%)</title><rect x="69.8371%" y="565" width="0.9368%" height="15" fill="rgb(216,98,30)" fg:x="86547" fg:w="1161"/><text x="70.0871%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1,161 samples, 0.94%)</title><rect x="69.8371%" y="549" width="0.9368%" height="15" fill="rgb(236,123,15)" fg:x="86547" fg:w="1161"/><text x="70.0871%" y="559.50"></text></g><g><title>__rg_alloc (1,161 samples, 0.94%)</title><rect x="69.8371%" y="533" width="0.9368%" height="15" fill="rgb(248,81,50)" fg:x="86547" fg:w="1161"/><text x="70.0871%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,161 samples, 0.94%)</title><rect x="69.8371%" y="517" width="0.9368%" height="15" fill="rgb(214,120,4)" fg:x="86547" fg:w="1161"/><text x="70.0871%" y="527.50"></text></g><g><title>sn_rust_alloc (1,154 samples, 0.93%)</title><rect x="69.8427%" y="501" width="0.9312%" height="15" fill="rgb(208,179,34)" fg:x="86554" fg:w="1154"/><text x="70.0927%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,206 samples, 0.97%)</title><rect x="69.8080%" y="645" width="0.9732%" height="15" fill="rgb(227,140,7)" fg:x="86511" fg:w="1206"/><text x="70.0580%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,206 samples, 0.97%)</title><rect x="69.8080%" y="629" width="0.9732%" height="15" fill="rgb(214,22,6)" fg:x="86511" fg:w="1206"/><text x="70.0580%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,188 samples, 0.96%)</title><rect x="69.8226%" y="613" width="0.9586%" height="15" fill="rgb(207,137,27)" fg:x="86529" fg:w="1188"/><text x="70.0726%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,188 samples, 0.96%)</title><rect x="69.8226%" y="597" width="0.9586%" height="15" fill="rgb(210,8,46)" fg:x="86529" fg:w="1188"/><text x="70.0726%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (53 samples, 0.04%)</title><rect x="70.7884%" y="549" width="0.0428%" height="15" fill="rgb(240,16,54)" fg:x="87726" fg:w="53"/><text x="71.0384%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (53 samples, 0.04%)</title><rect x="70.7884%" y="533" width="0.0428%" height="15" fill="rgb(211,209,29)" fg:x="87726" fg:w="53"/><text x="71.0384%" y="543.50"></text></g><g><title>__rg_dealloc (53 samples, 0.04%)</title><rect x="70.7884%" y="517" width="0.0428%" height="15" fill="rgb(226,228,24)" fg:x="87726" fg:w="53"/><text x="71.0384%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (53 samples, 0.04%)</title><rect x="70.7884%" y="501" width="0.0428%" height="15" fill="rgb(222,84,9)" fg:x="87726" fg:w="53"/><text x="71.0384%" y="511.50"></text></g><g><title>sn_rust_dealloc (48 samples, 0.04%)</title><rect x="70.7925%" y="485" width="0.0387%" height="15" fill="rgb(234,203,30)" fg:x="87731" fg:w="48"/><text x="71.0425%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (59 samples, 0.05%)</title><rect x="70.7884%" y="613" width="0.0476%" height="15" fill="rgb(238,109,14)" fg:x="87726" fg:w="59"/><text x="71.0384%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.05%)</title><rect x="70.7884%" y="597" width="0.0476%" height="15" fill="rgb(233,206,34)" fg:x="87726" fg:w="59"/><text x="71.0384%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (59 samples, 0.05%)</title><rect x="70.7884%" y="581" width="0.0476%" height="15" fill="rgb(220,167,47)" fg:x="87726" fg:w="59"/><text x="71.0384%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.05%)</title><rect x="70.7884%" y="565" width="0.0476%" height="15" fill="rgb(238,105,10)" fg:x="87726" fg:w="59"/><text x="71.0384%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (69 samples, 0.06%)</title><rect x="70.7812%" y="645" width="0.0557%" height="15" fill="rgb(213,227,17)" fg:x="87717" fg:w="69"/><text x="71.0312%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.06%)</title><rect x="70.7812%" y="629" width="0.0557%" height="15" fill="rgb(217,132,38)" fg:x="87717" fg:w="69"/><text x="71.0312%" y="639.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (48 samples, 0.04%)</title><rect x="70.8369%" y="645" width="0.0387%" height="15" fill="rgb(242,146,4)" fg:x="87786" fg:w="48"/><text x="71.0869%" y="655.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,155 samples, 4.16%)</title><rect x="66.7223%" y="741" width="4.1597%" height="15" fill="rgb(212,61,9)" fg:x="82687" fg:w="5155"/><text x="66.9723%" y="751.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,155 samples, 4.16%)</title><rect x="66.7223%" y="725" width="4.1597%" height="15" fill="rgb(247,126,22)" fg:x="82687" fg:w="5155"/><text x="66.9723%" y="735.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (5,155 samples, 4.16%)</title><rect x="66.7223%" y="709" width="4.1597%" height="15" fill="rgb(220,196,2)" fg:x="82687" fg:w="5155"/><text x="66.9723%" y="719.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,155 samples, 4.16%)</title><rect x="66.7223%" y="693" width="4.1597%" height="15" fill="rgb(208,46,4)" fg:x="82687" fg:w="5155"/><text x="66.9723%" y="703.50">&lt;core..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (5,155 samples, 4.16%)</title><rect x="66.7223%" y="677" width="4.1597%" height="15" fill="rgb(252,104,46)" fg:x="82687" fg:w="5155"/><text x="66.9723%" y="687.50">tremo..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,303 samples, 3.47%)</title><rect x="67.4098%" y="661" width="3.4722%" height="15" fill="rgb(237,152,48)" fg:x="83539" fg:w="4303"/><text x="67.6598%" y="671.50">tre..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (264 samples, 0.21%)</title><rect x="71.2427%" y="613" width="0.2130%" height="15" fill="rgb(221,59,37)" fg:x="88289" fg:w="264"/><text x="71.4927%" y="623.50"></text></g><g><title>core::mem::replace (264 samples, 0.21%)</title><rect x="71.2427%" y="597" width="0.2130%" height="15" fill="rgb(209,202,51)" fg:x="88289" fg:w="264"/><text x="71.4927%" y="607.50"></text></g><g><title>core::ptr::read (264 samples, 0.21%)</title><rect x="71.2427%" y="581" width="0.2130%" height="15" fill="rgb(228,81,30)" fg:x="88289" fg:w="264"/><text x="71.4927%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (382 samples, 0.31%)</title><rect x="71.1992%" y="629" width="0.3082%" height="15" fill="rgb(227,42,39)" fg:x="88235" fg:w="382"/><text x="71.4492%" y="639.50"></text></g><g><title>core::mem::drop (64 samples, 0.05%)</title><rect x="71.4558%" y="613" width="0.0516%" height="15" fill="rgb(221,26,2)" fg:x="88553" fg:w="64"/><text x="71.7058%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (64 samples, 0.05%)</title><rect x="71.4558%" y="597" width="0.0516%" height="15" fill="rgb(254,61,31)" fg:x="88553" fg:w="64"/><text x="71.7058%" y="607.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="71.5074%" y="613" width="0.0153%" height="15" fill="rgb(222,173,38)" fg:x="88617" fg:w="19"/><text x="71.7574%" y="623.50"></text></g><g><title>std::sync::poison::Flag::done (18 samples, 0.01%)</title><rect x="71.5373%" y="581" width="0.0145%" height="15" fill="rgb(218,50,12)" fg:x="88654" fg:w="18"/><text x="71.7873%" y="591.50"></text></g><g><title>std::thread::panicking (18 samples, 0.01%)</title><rect x="71.5373%" y="565" width="0.0145%" height="15" fill="rgb(223,88,40)" fg:x="88654" fg:w="18"/><text x="71.7873%" y="575.50"></text></g><g><title>std::panicking::panicking (18 samples, 0.01%)</title><rect x="71.5373%" y="549" width="0.0145%" height="15" fill="rgb(237,54,19)" fg:x="88654" fg:w="18"/><text x="71.7873%" y="559.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (18 samples, 0.01%)</title><rect x="71.5373%" y="533" width="0.0145%" height="15" fill="rgb(251,129,25)" fg:x="88654" fg:w="18"/><text x="71.7873%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (345 samples, 0.28%)</title><rect x="71.5074%" y="629" width="0.2784%" height="15" fill="rgb(238,97,19)" fg:x="88617" fg:w="345"/><text x="71.7574%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (326 samples, 0.26%)</title><rect x="71.5228%" y="613" width="0.2631%" height="15" fill="rgb(240,169,18)" fg:x="88636" fg:w="326"/><text x="71.7728%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (326 samples, 0.26%)</title><rect x="71.5228%" y="597" width="0.2631%" height="15" fill="rgb(230,187,49)" fg:x="88636" fg:w="326"/><text x="71.7728%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (290 samples, 0.23%)</title><rect x="71.5518%" y="581" width="0.2340%" height="15" fill="rgb(209,44,26)" fg:x="88672" fg:w="290"/><text x="71.8018%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (290 samples, 0.23%)</title><rect x="71.5518%" y="565" width="0.2340%" height="15" fill="rgb(244,0,6)" fg:x="88672" fg:w="290"/><text x="71.8018%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (290 samples, 0.23%)</title><rect x="71.5518%" y="549" width="0.2340%" height="15" fill="rgb(248,18,21)" fg:x="88672" fg:w="290"/><text x="71.8018%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (290 samples, 0.23%)</title><rect x="71.5518%" y="533" width="0.2340%" height="15" fill="rgb(245,180,19)" fg:x="88672" fg:w="290"/><text x="71.8018%" y="543.50"></text></g><g><title>core::task::wake::Context::waker (21 samples, 0.02%)</title><rect x="71.7858%" y="629" width="0.0169%" height="15" fill="rgb(252,118,36)" fg:x="88962" fg:w="21"/><text x="72.0358%" y="639.50"></text></g><g><title>core::task::wake::Waker::will_wake (66 samples, 0.05%)</title><rect x="71.8028%" y="629" width="0.0533%" height="15" fill="rgb(210,224,19)" fg:x="88983" fg:w="66"/><text x="72.0528%" y="639.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (66 samples, 0.05%)</title><rect x="71.8028%" y="613" width="0.0533%" height="15" fill="rgb(218,30,24)" fg:x="88983" fg:w="66"/><text x="72.0528%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (63 samples, 0.05%)</title><rect x="71.8052%" y="597" width="0.0508%" height="15" fill="rgb(219,75,50)" fg:x="88986" fg:w="63"/><text x="72.0552%" y="607.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (63 samples, 0.05%)</title><rect x="71.8052%" y="581" width="0.0508%" height="15" fill="rgb(234,72,50)" fg:x="88986" fg:w="63"/><text x="72.0552%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (30 samples, 0.02%)</title><rect x="71.8705%" y="597" width="0.0242%" height="15" fill="rgb(219,100,48)" fg:x="89067" fg:w="30"/><text x="72.1205%" y="607.50"></text></g><g><title>std::sync::poison::Flag::borrow (30 samples, 0.02%)</title><rect x="71.8705%" y="581" width="0.0242%" height="15" fill="rgb(253,5,41)" fg:x="89067" fg:w="30"/><text x="72.1205%" y="591.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,902 samples, 2.34%)</title><rect x="71.1031%" y="645" width="2.3417%" height="15" fill="rgb(247,181,11)" fg:x="88116" fg:w="2902"/><text x="71.3531%" y="655.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,969 samples, 1.59%)</title><rect x="71.8560%" y="629" width="1.5888%" height="15" fill="rgb(222,223,25)" fg:x="89049" fg:w="1969"/><text x="72.1060%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,951 samples, 1.57%)</title><rect x="71.8705%" y="613" width="1.5743%" height="15" fill="rgb(214,198,28)" fg:x="89067" fg:w="1951"/><text x="72.1205%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,921 samples, 1.55%)</title><rect x="71.8947%" y="597" width="1.5501%" height="15" fill="rgb(230,46,43)" fg:x="89097" fg:w="1921"/><text x="72.1447%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,921 samples, 1.55%)</title><rect x="71.8947%" y="581" width="1.5501%" height="15" fill="rgb(233,65,53)" fg:x="89097" fg:w="1921"/><text x="72.1447%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1,920 samples, 1.55%)</title><rect x="71.8956%" y="565" width="1.5493%" height="15" fill="rgb(221,121,27)" fg:x="89098" fg:w="1920"/><text x="72.1456%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,920 samples, 1.55%)</title><rect x="71.8956%" y="549" width="1.5493%" height="15" fill="rgb(247,70,47)" fg:x="89098" fg:w="1920"/><text x="72.1456%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,348 samples, 6.74%)</title><rect x="66.7199%" y="917" width="6.7362%" height="15" fill="rgb(228,85,35)" fg:x="82684" fg:w="8348"/><text x="66.9699%" y="927.50">async_tas..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,345 samples, 6.73%)</title><rect x="66.7223%" y="901" width="6.7338%" height="15" fill="rgb(209,50,18)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="911.50">&lt;core::pi..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,345 samples, 6.73%)</title><rect x="66.7223%" y="885" width="6.7338%" height="15" fill="rgb(250,19,35)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="895.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,345 samples, 6.73%)</title><rect x="66.7223%" y="869" width="6.7338%" height="15" fill="rgb(253,107,29)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="879.50">async_exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,345 samples, 6.73%)</title><rect x="66.7223%" y="853" width="6.7338%" height="15" fill="rgb(252,179,29)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="863.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,345 samples, 6.73%)</title><rect x="66.7223%" y="837" width="6.7338%" height="15" fill="rgb(238,194,6)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="847.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,345 samples, 6.73%)</title><rect x="66.7223%" y="821" width="6.7338%" height="15" fill="rgb(238,164,29)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="831.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,345 samples, 6.73%)</title><rect x="66.7223%" y="805" width="6.7338%" height="15" fill="rgb(224,25,9)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="815.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,345 samples, 6.73%)</title><rect x="66.7223%" y="789" width="6.7338%" height="15" fill="rgb(244,153,23)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="799.50">async_std..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,345 samples, 6.73%)</title><rect x="66.7223%" y="773" width="6.7338%" height="15" fill="rgb(212,203,14)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="783.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,345 samples, 6.73%)</title><rect x="66.7223%" y="757" width="6.7338%" height="15" fill="rgb(220,164,20)" fg:x="82687" fg:w="8345"/><text x="66.9723%" y="767.50">&lt;core::fu..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (3,190 samples, 2.57%)</title><rect x="70.8821%" y="741" width="2.5741%" height="15" fill="rgb(222,203,48)" fg:x="87842" fg:w="3190"/><text x="71.1321%" y="751.50">tr..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,190 samples, 2.57%)</title><rect x="70.8821%" y="725" width="2.5741%" height="15" fill="rgb(215,159,22)" fg:x="87842" fg:w="3190"/><text x="71.1321%" y="735.50">&lt;a..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (3,190 samples, 2.57%)</title><rect x="70.8821%" y="709" width="2.5741%" height="15" fill="rgb(216,183,47)" fg:x="87842" fg:w="3190"/><text x="71.1321%" y="719.50">&lt;t..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (3,190 samples, 2.57%)</title><rect x="70.8821%" y="693" width="2.5741%" height="15" fill="rgb(229,195,25)" fg:x="87842" fg:w="3190"/><text x="71.1321%" y="703.50">&lt;a..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (3,190 samples, 2.57%)</title><rect x="70.8821%" y="677" width="2.5741%" height="15" fill="rgb(224,132,51)" fg:x="87842" fg:w="3190"/><text x="71.1321%" y="687.50">&lt;a..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (3,190 samples, 2.57%)</title><rect x="70.8821%" y="661" width="2.5741%" height="15" fill="rgb(240,63,7)" fg:x="87842" fg:w="3190"/><text x="71.1321%" y="671.50">&lt;a..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (14 samples, 0.01%)</title><rect x="73.4449%" y="645" width="0.0113%" height="15" fill="rgb(249,182,41)" fg:x="91018" fg:w="14"/><text x="73.6949%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (17 samples, 0.01%)</title><rect x="73.4804%" y="917" width="0.0137%" height="15" fill="rgb(243,47,26)" fg:x="91062" fg:w="17"/><text x="73.7304%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (23 samples, 0.02%)</title><rect x="73.4941%" y="917" width="0.0186%" height="15" fill="rgb(233,48,2)" fg:x="91079" fg:w="23"/><text x="73.7441%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::cb::CbSink as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="73.5223%" y="917" width="0.0113%" height="15" fill="rgb(244,165,34)" fg:x="91114" fg:w="14"/><text x="73.7723%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="73.5336%" y="917" width="0.0105%" height="15" fill="rgb(207,89,7)" fg:x="91128" fg:w="13"/><text x="73.7836%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (19 samples, 0.02%)</title><rect x="73.5441%" y="917" width="0.0153%" height="15" fill="rgb(244,117,36)" fg:x="91141" fg:w="19"/><text x="73.7941%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="73.5643%" y="917" width="0.0169%" height="15" fill="rgb(226,144,34)" fg:x="91166" fg:w="21"/><text x="73.8143%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (29 samples, 0.02%)</title><rect x="73.5812%" y="917" width="0.0234%" height="15" fill="rgb(213,23,19)" fg:x="91187" fg:w="29"/><text x="73.8312%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (35 samples, 0.03%)</title><rect x="73.6046%" y="917" width="0.0282%" height="15" fill="rgb(217,75,12)" fg:x="91216" fg:w="35"/><text x="73.8546%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (13 samples, 0.01%)</title><rect x="73.6329%" y="917" width="0.0105%" height="15" fill="rgb(224,159,17)" fg:x="91251" fg:w="13"/><text x="73.8829%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (59 samples, 0.05%)</title><rect x="73.6498%" y="917" width="0.0476%" height="15" fill="rgb(217,118,1)" fg:x="91272" fg:w="59"/><text x="73.8998%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (49 samples, 0.04%)</title><rect x="73.6974%" y="917" width="0.0395%" height="15" fill="rgb(232,180,48)" fg:x="91331" fg:w="49"/><text x="73.9474%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (23 samples, 0.02%)</title><rect x="73.7184%" y="901" width="0.0186%" height="15" fill="rgb(230,27,33)" fg:x="91357" fg:w="23"/><text x="73.9684%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (23 samples, 0.02%)</title><rect x="73.7184%" y="885" width="0.0186%" height="15" fill="rgb(205,31,21)" fg:x="91357" fg:w="23"/><text x="73.9684%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (19 samples, 0.02%)</title><rect x="73.7370%" y="917" width="0.0153%" height="15" fill="rgb(253,59,4)" fg:x="91380" fg:w="19"/><text x="73.9870%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (19 samples, 0.02%)</title><rect x="73.7370%" y="901" width="0.0153%" height="15" fill="rgb(224,201,9)" fg:x="91380" fg:w="19"/><text x="73.9870%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (19 samples, 0.02%)</title><rect x="73.7370%" y="885" width="0.0153%" height="15" fill="rgb(229,206,30)" fg:x="91380" fg:w="19"/><text x="73.9870%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="73.7370%" y="869" width="0.0153%" height="15" fill="rgb(212,67,47)" fg:x="91380" fg:w="19"/><text x="73.9870%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.02%)</title><rect x="73.7370%" y="853" width="0.0153%" height="15" fill="rgb(211,96,50)" fg:x="91380" fg:w="19"/><text x="73.9870%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.02%)</title><rect x="73.7370%" y="837" width="0.0153%" height="15" fill="rgb(252,114,18)" fg:x="91380" fg:w="19"/><text x="73.9870%" y="847.50"></text></g><g><title>__rg_dealloc (19 samples, 0.02%)</title><rect x="73.7370%" y="821" width="0.0153%" height="15" fill="rgb(223,58,37)" fg:x="91380" fg:w="19"/><text x="73.9870%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (19 samples, 0.02%)</title><rect x="73.7370%" y="805" width="0.0153%" height="15" fill="rgb(237,70,4)" fg:x="91380" fg:w="19"/><text x="73.9870%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (44 samples, 0.04%)</title><rect x="73.7523%" y="917" width="0.0355%" height="15" fill="rgb(244,85,46)" fg:x="91399" fg:w="44"/><text x="74.0023%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (38 samples, 0.03%)</title><rect x="73.7571%" y="901" width="0.0307%" height="15" fill="rgb(223,39,52)" fg:x="91405" fg:w="38"/><text x="74.0071%" y="911.50"></text></g><g><title>event_listener::Event::notify (98 samples, 0.08%)</title><rect x="73.8031%" y="917" width="0.0791%" height="15" fill="rgb(218,200,14)" fg:x="91462" fg:w="98"/><text x="74.0531%" y="927.50"></text></g><g><title>event_listener::full_fence (45 samples, 0.04%)</title><rect x="73.8459%" y="901" width="0.0363%" height="15" fill="rgb(208,171,16)" fg:x="91515" fg:w="45"/><text x="74.0959%" y="911.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (54 samples, 0.04%)</title><rect x="73.8911%" y="917" width="0.0436%" height="15" fill="rgb(234,200,18)" fg:x="91571" fg:w="54"/><text x="74.1411%" y="927.50"></text></g><g><title>parking::Inner::park (23 samples, 0.02%)</title><rect x="73.9347%" y="917" width="0.0186%" height="15" fill="rgb(228,45,11)" fg:x="91625" fg:w="23"/><text x="74.1847%" y="927.50"></text></g><g><title>polling::epoll::Poller::wait (53 samples, 0.04%)</title><rect x="73.9589%" y="917" width="0.0428%" height="15" fill="rgb(237,182,11)" fg:x="91655" fg:w="53"/><text x="74.2089%" y="927.50"></text></g><g><title>sn_rust_alloc (101 samples, 0.08%)</title><rect x="74.0016%" y="917" width="0.0815%" height="15" fill="rgb(241,175,49)" fg:x="91708" fg:w="101"/><text x="74.2516%" y="927.50"></text></g><g><title>sn_rust_dealloc (42 samples, 0.03%)</title><rect x="74.0831%" y="917" width="0.0339%" height="15" fill="rgb(247,38,35)" fg:x="91809" fg:w="42"/><text x="74.3331%" y="927.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (21 samples, 0.02%)</title><rect x="74.1211%" y="917" width="0.0169%" height="15" fill="rgb(228,39,49)" fg:x="91856" fg:w="21"/><text x="74.3711%" y="927.50"></text></g><g><title>std::sys::unix::futex::futex_wait (13 samples, 0.01%)</title><rect x="74.1388%" y="917" width="0.0105%" height="15" fill="rgb(226,101,26)" fg:x="91878" fg:w="13"/><text x="74.3888%" y="927.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (80 samples, 0.06%)</title><rect x="74.1493%" y="917" width="0.0646%" height="15" fill="rgb(206,141,19)" fg:x="91891" fg:w="80"/><text x="74.3993%" y="927.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (16 samples, 0.01%)</title><rect x="74.2179%" y="677" width="0.0129%" height="15" fill="rgb(211,200,13)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="687.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="74.2179%" y="661" width="0.0129%" height="15" fill="rgb(241,121,6)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="671.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="74.2179%" y="645" width="0.0129%" height="15" fill="rgb(234,221,29)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="655.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="74.2179%" y="629" width="0.0129%" height="15" fill="rgb(229,136,5)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="74.2179%" y="613" width="0.0129%" height="15" fill="rgb(238,36,11)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="74.2179%" y="597" width="0.0129%" height="15" fill="rgb(251,55,41)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="74.2179%" y="581" width="0.0129%" height="15" fill="rgb(242,34,40)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="74.2179%" y="565" width="0.0129%" height="15" fill="rgb(215,42,17)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="74.2179%" y="549" width="0.0129%" height="15" fill="rgb(207,44,46)" fg:x="91976" fg:w="16"/><text x="74.4679%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 0.08%)</title><rect x="74.2171%" y="821" width="0.0831%" height="15" fill="rgb(211,206,28)" fg:x="91975" fg:w="103"/><text x="74.4671%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (103 samples, 0.08%)</title><rect x="74.2171%" y="805" width="0.0831%" height="15" fill="rgb(237,167,16)" fg:x="91975" fg:w="103"/><text x="74.4671%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 0.08%)</title><rect x="74.2171%" y="789" width="0.0831%" height="15" fill="rgb(233,66,6)" fg:x="91975" fg:w="103"/><text x="74.4671%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (103 samples, 0.08%)</title><rect x="74.2171%" y="773" width="0.0831%" height="15" fill="rgb(246,123,29)" fg:x="91975" fg:w="103"/><text x="74.4671%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (102 samples, 0.08%)</title><rect x="74.2179%" y="757" width="0.0823%" height="15" fill="rgb(209,62,40)" fg:x="91976" fg:w="102"/><text x="74.4679%" y="767.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (102 samples, 0.08%)</title><rect x="74.2179%" y="741" width="0.0823%" height="15" fill="rgb(218,4,25)" fg:x="91976" fg:w="102"/><text x="74.4679%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (102 samples, 0.08%)</title><rect x="74.2179%" y="725" width="0.0823%" height="15" fill="rgb(253,91,49)" fg:x="91976" fg:w="102"/><text x="74.4679%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (102 samples, 0.08%)</title><rect x="74.2179%" y="709" width="0.0823%" height="15" fill="rgb(228,155,29)" fg:x="91976" fg:w="102"/><text x="74.4679%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (102 samples, 0.08%)</title><rect x="74.2179%" y="693" width="0.0823%" height="15" fill="rgb(243,57,37)" fg:x="91976" fg:w="102"/><text x="74.4679%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (86 samples, 0.07%)</title><rect x="74.2308%" y="677" width="0.0694%" height="15" fill="rgb(244,167,17)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (86 samples, 0.07%)</title><rect x="74.2308%" y="661" width="0.0694%" height="15" fill="rgb(207,181,38)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86 samples, 0.07%)</title><rect x="74.2308%" y="645" width="0.0694%" height="15" fill="rgb(211,8,23)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86 samples, 0.07%)</title><rect x="74.2308%" y="629" width="0.0694%" height="15" fill="rgb(235,11,44)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="639.50"></text></g><g><title>alloc::alloc::alloc (86 samples, 0.07%)</title><rect x="74.2308%" y="613" width="0.0694%" height="15" fill="rgb(248,18,52)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="623.50"></text></g><g><title>__rg_alloc (86 samples, 0.07%)</title><rect x="74.2308%" y="597" width="0.0694%" height="15" fill="rgb(208,4,7)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (86 samples, 0.07%)</title><rect x="74.2308%" y="581" width="0.0694%" height="15" fill="rgb(240,17,39)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="591.50"></text></g><g><title>sn_rust_alloc (86 samples, 0.07%)</title><rect x="74.2308%" y="565" width="0.0694%" height="15" fill="rgb(207,170,3)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="575.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (86 samples, 0.07%)</title><rect x="74.2308%" y="549" width="0.0694%" height="15" fill="rgb(236,100,52)" fg:x="91992" fg:w="86"/><text x="74.4808%" y="559.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (107 samples, 0.09%)</title><rect x="74.2171%" y="837" width="0.0863%" height="15" fill="rgb(246,78,51)" fg:x="91975" fg:w="107"/><text x="74.4671%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (182 samples, 0.15%)</title><rect x="74.2139%" y="917" width="0.1469%" height="15" fill="rgb(211,17,15)" fg:x="91971" fg:w="182"/><text x="74.4639%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (178 samples, 0.14%)</title><rect x="74.2171%" y="901" width="0.1436%" height="15" fill="rgb(209,59,46)" fg:x="91975" fg:w="178"/><text x="74.4671%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (178 samples, 0.14%)</title><rect x="74.2171%" y="885" width="0.1436%" height="15" fill="rgb(210,92,25)" fg:x="91975" fg:w="178"/><text x="74.4671%" y="895.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (178 samples, 0.14%)</title><rect x="74.2171%" y="869" width="0.1436%" height="15" fill="rgb(238,174,52)" fg:x="91975" fg:w="178"/><text x="74.4671%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (178 samples, 0.14%)</title><rect x="74.2171%" y="853" width="0.1436%" height="15" fill="rgb(230,73,7)" fg:x="91975" fg:w="178"/><text x="74.4671%" y="863.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (71 samples, 0.06%)</title><rect x="74.3034%" y="837" width="0.0573%" height="15" fill="rgb(243,124,40)" fg:x="92082" fg:w="71"/><text x="74.5534%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (71 samples, 0.06%)</title><rect x="74.3034%" y="821" width="0.0573%" height="15" fill="rgb(244,170,11)" fg:x="92082" fg:w="71"/><text x="74.5534%" y="831.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.06%)</title><rect x="74.3034%" y="805" width="0.0573%" height="15" fill="rgb(207,114,54)" fg:x="92082" fg:w="71"/><text x="74.5534%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.06%)</title><rect x="74.3034%" y="789" width="0.0573%" height="15" fill="rgb(205,42,20)" fg:x="92082" fg:w="71"/><text x="74.5534%" y="799.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.06%)</title><rect x="74.3034%" y="773" width="0.0573%" height="15" fill="rgb(230,30,28)" fg:x="92082" fg:w="71"/><text x="74.5534%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.06%)</title><rect x="74.3034%" y="757" width="0.0573%" height="15" fill="rgb(205,73,54)" fg:x="92082" fg:w="71"/><text x="74.5534%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.06%)</title><rect x="74.3034%" y="741" width="0.0573%" height="15" fill="rgb(254,227,23)" fg:x="92082" fg:w="71"/><text x="74.5534%" y="751.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.06%)</title><rect x="74.3034%" y="725" width="0.0573%" height="15" fill="rgb(228,202,34)" fg:x="92082" fg:w="71"/><text x="74.5534%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (20 samples, 0.02%)</title><rect x="74.3446%" y="709" width="0.0161%" height="15" fill="rgb(222,225,37)" fg:x="92133" fg:w="20"/><text x="74.5946%" y="719.50"></text></g><g><title>tremor_common::time::nanotime (71 samples, 0.06%)</title><rect x="74.3615%" y="917" width="0.0573%" height="15" fill="rgb(221,14,54)" fg:x="92154" fg:w="71"/><text x="74.6115%" y="927.50"></text></g><g><title>std::time::SystemTime::now (15 samples, 0.01%)</title><rect x="74.4067%" y="901" width="0.0121%" height="15" fill="rgb(254,102,2)" fg:x="92210" fg:w="15"/><text x="74.6567%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (15 samples, 0.01%)</title><rect x="74.4067%" y="885" width="0.0121%" height="15" fill="rgb(232,104,17)" fg:x="92210" fg:w="15"/><text x="74.6567%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (15 samples, 0.01%)</title><rect x="74.4067%" y="869" width="0.0121%" height="15" fill="rgb(250,220,14)" fg:x="92210" fg:w="15"/><text x="74.6567%" y="879.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (79 samples, 0.06%)</title><rect x="74.4188%" y="917" width="0.0637%" height="15" fill="rgb(241,158,9)" fg:x="92225" fg:w="79"/><text x="74.6688%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (27 samples, 0.02%)</title><rect x="74.4842%" y="917" width="0.0218%" height="15" fill="rgb(246,9,43)" fg:x="92306" fg:w="27"/><text x="74.7342%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="74.5342%" y="901" width="0.0169%" height="15" fill="rgb(206,73,33)" fg:x="92368" fg:w="21"/><text x="74.7842%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="74.5399%" y="885" width="0.0113%" height="15" fill="rgb(222,79,8)" fg:x="92375" fg:w="14"/><text x="74.7899%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="74.5399%" y="869" width="0.0113%" height="15" fill="rgb(234,8,54)" fg:x="92375" fg:w="14"/><text x="74.7899%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.01%)</title><rect x="74.5399%" y="853" width="0.0113%" height="15" fill="rgb(209,134,38)" fg:x="92375" fg:w="14"/><text x="74.7899%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.01%)</title><rect x="74.5399%" y="837" width="0.0113%" height="15" fill="rgb(230,127,29)" fg:x="92375" fg:w="14"/><text x="74.7899%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.01%)</title><rect x="74.5399%" y="821" width="0.0113%" height="15" fill="rgb(242,44,41)" fg:x="92375" fg:w="14"/><text x="74.7899%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (69 samples, 0.06%)</title><rect x="74.5068%" y="917" width="0.0557%" height="15" fill="rgb(222,56,43)" fg:x="92334" fg:w="69"/><text x="74.7568%" y="927.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (22 samples, 0.02%)</title><rect x="74.5624%" y="917" width="0.0178%" height="15" fill="rgb(238,39,47)" fg:x="92403" fg:w="22"/><text x="74.8124%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::maybe_send (35 samples, 0.03%)</title><rect x="74.5802%" y="917" width="0.0282%" height="15" fill="rgb(226,79,43)" fg:x="92425" fg:w="35"/><text x="74.8302%" y="927.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="74.6891%" y="773" width="0.0121%" height="15" fill="rgb(242,105,53)" fg:x="92560" fg:w="15"/><text x="74.9391%" y="783.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="74.6891%" y="757" width="0.0121%" height="15" fill="rgb(251,132,46)" fg:x="92560" fg:w="15"/><text x="74.9391%" y="767.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="74.6891%" y="741" width="0.0121%" height="15" fill="rgb(231,77,14)" fg:x="92560" fg:w="15"/><text x="74.9391%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (211 samples, 0.17%)</title><rect x="74.7658%" y="757" width="0.1703%" height="15" fill="rgb(240,135,9)" fg:x="92655" fg:w="211"/><text x="75.0158%" y="767.50"></text></g><g><title>core::mem::replace (211 samples, 0.17%)</title><rect x="74.7658%" y="741" width="0.1703%" height="15" fill="rgb(248,109,14)" fg:x="92655" fg:w="211"/><text x="75.0158%" y="751.50"></text></g><g><title>core::ptr::read (211 samples, 0.17%)</title><rect x="74.7658%" y="725" width="0.1703%" height="15" fill="rgb(227,146,52)" fg:x="92655" fg:w="211"/><text x="75.0158%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (351 samples, 0.28%)</title><rect x="74.7012%" y="773" width="0.2832%" height="15" fill="rgb(232,54,3)" fg:x="92575" fg:w="351"/><text x="74.9512%" y="783.50"></text></g><g><title>core::mem::drop (60 samples, 0.05%)</title><rect x="74.9361%" y="757" width="0.0484%" height="15" fill="rgb(229,201,43)" fg:x="92866" fg:w="60"/><text x="75.1861%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (60 samples, 0.05%)</title><rect x="74.9361%" y="741" width="0.0484%" height="15" fill="rgb(252,161,33)" fg:x="92866" fg:w="60"/><text x="75.1861%" y="751.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="74.9845%" y="757" width="0.0113%" height="15" fill="rgb(226,146,40)" fg:x="92926" fg:w="14"/><text x="75.2345%" y="767.50"></text></g><g><title>std::sync::poison::Flag::done (14 samples, 0.01%)</title><rect x="75.0111%" y="725" width="0.0113%" height="15" fill="rgb(219,47,25)" fg:x="92959" fg:w="14"/><text x="75.2611%" y="735.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="75.0111%" y="709" width="0.0113%" height="15" fill="rgb(250,135,13)" fg:x="92959" fg:w="14"/><text x="75.2611%" y="719.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="75.0111%" y="693" width="0.0113%" height="15" fill="rgb(219,229,18)" fg:x="92959" fg:w="14"/><text x="75.2611%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="75.0111%" y="677" width="0.0113%" height="15" fill="rgb(217,152,27)" fg:x="92959" fg:w="14"/><text x="75.2611%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (370 samples, 0.30%)</title><rect x="74.9845%" y="773" width="0.2986%" height="15" fill="rgb(225,71,47)" fg:x="92926" fg:w="370"/><text x="75.2345%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (356 samples, 0.29%)</title><rect x="74.9958%" y="757" width="0.2873%" height="15" fill="rgb(220,139,14)" fg:x="92940" fg:w="356"/><text x="75.2458%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (356 samples, 0.29%)</title><rect x="74.9958%" y="741" width="0.2873%" height="15" fill="rgb(247,54,32)" fg:x="92940" fg:w="356"/><text x="75.2458%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (323 samples, 0.26%)</title><rect x="75.0224%" y="725" width="0.2606%" height="15" fill="rgb(252,131,39)" fg:x="92973" fg:w="323"/><text x="75.2724%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (323 samples, 0.26%)</title><rect x="75.0224%" y="709" width="0.2606%" height="15" fill="rgb(210,108,39)" fg:x="92973" fg:w="323"/><text x="75.2724%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (323 samples, 0.26%)</title><rect x="75.0224%" y="693" width="0.2606%" height="15" fill="rgb(205,23,29)" fg:x="92973" fg:w="323"/><text x="75.2724%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (323 samples, 0.26%)</title><rect x="75.0224%" y="677" width="0.2606%" height="15" fill="rgb(246,139,46)" fg:x="92973" fg:w="323"/><text x="75.2724%" y="687.50"></text></g><g><title>core::task::wake::Waker::will_wake (48 samples, 0.04%)</title><rect x="75.2919%" y="773" width="0.0387%" height="15" fill="rgb(250,81,26)" fg:x="93307" fg:w="48"/><text x="75.5419%" y="783.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="75.2919%" y="757" width="0.0387%" height="15" fill="rgb(214,104,7)" fg:x="93307" fg:w="48"/><text x="75.5419%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (48 samples, 0.04%)</title><rect x="75.2919%" y="741" width="0.0387%" height="15" fill="rgb(233,189,8)" fg:x="93307" fg:w="48"/><text x="75.5419%" y="751.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="75.2919%" y="725" width="0.0387%" height="15" fill="rgb(228,141,17)" fg:x="93307" fg:w="48"/><text x="75.5419%" y="735.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (42 samples, 0.03%)</title><rect x="75.3500%" y="741" width="0.0339%" height="15" fill="rgb(247,157,1)" fg:x="93379" fg:w="42"/><text x="75.6000%" y="751.50"></text></g><g><title>std::sync::poison::Flag::borrow (42 samples, 0.03%)</title><rect x="75.3500%" y="725" width="0.0339%" height="15" fill="rgb(249,225,5)" fg:x="93379" fg:w="42"/><text x="75.6000%" y="735.50"></text></g><g><title>std::thread::panicking (15 samples, 0.01%)</title><rect x="75.3718%" y="709" width="0.0121%" height="15" fill="rgb(242,55,13)" fg:x="93406" fg:w="15"/><text x="75.6218%" y="719.50"></text></g><g><title>std::panicking::panicking (15 samples, 0.01%)</title><rect x="75.3718%" y="693" width="0.0121%" height="15" fill="rgb(230,49,50)" fg:x="93406" fg:w="15"/><text x="75.6218%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (15 samples, 0.01%)</title><rect x="75.3718%" y="677" width="0.0121%" height="15" fill="rgb(241,111,38)" fg:x="93406" fg:w="15"/><text x="75.6218%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="75.3718%" y="661" width="0.0121%" height="15" fill="rgb(252,155,4)" fg:x="93406" fg:w="15"/><text x="75.6218%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="75.3718%" y="645" width="0.0121%" height="15" fill="rgb(212,69,32)" fg:x="93406" fg:w="15"/><text x="75.6218%" y="655.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,418 samples, 1.14%)</title><rect x="74.6133%" y="901" width="1.1442%" height="15" fill="rgb(243,107,47)" fg:x="92466" fg:w="1418"/><text x="74.8633%" y="911.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,418 samples, 1.14%)</title><rect x="74.6133%" y="885" width="1.1442%" height="15" fill="rgb(247,130,12)" fg:x="92466" fg:w="1418"/><text x="74.8633%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,418 samples, 1.14%)</title><rect x="74.6133%" y="869" width="1.1442%" height="15" fill="rgb(233,74,16)" fg:x="92466" fg:w="1418"/><text x="74.8633%" y="879.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,418 samples, 1.14%)</title><rect x="74.6133%" y="853" width="1.1442%" height="15" fill="rgb(208,58,18)" fg:x="92466" fg:w="1418"/><text x="74.8633%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,418 samples, 1.14%)</title><rect x="74.6133%" y="837" width="1.1442%" height="15" fill="rgb(242,225,1)" fg:x="92466" fg:w="1418"/><text x="74.8633%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,418 samples, 1.14%)</title><rect x="74.6133%" y="821" width="1.1442%" height="15" fill="rgb(249,39,40)" fg:x="92466" fg:w="1418"/><text x="74.8633%" y="831.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,418 samples, 1.14%)</title><rect x="74.6133%" y="805" width="1.1442%" height="15" fill="rgb(207,72,44)" fg:x="92466" fg:w="1418"/><text x="74.8633%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,418 samples, 1.14%)</title><rect x="74.6133%" y="789" width="1.1442%" height="15" fill="rgb(215,193,12)" fg:x="92466" fg:w="1418"/><text x="74.8633%" y="799.50"></text></g><g><title>event_listener::Inner::lock (529 samples, 0.43%)</title><rect x="75.3306%" y="773" width="0.4269%" height="15" fill="rgb(248,41,39)" fg:x="93355" fg:w="529"/><text x="75.5806%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (505 samples, 0.41%)</title><rect x="75.3500%" y="757" width="0.4075%" height="15" fill="rgb(253,85,4)" fg:x="93379" fg:w="505"/><text x="75.6000%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (463 samples, 0.37%)</title><rect x="75.3839%" y="741" width="0.3736%" height="15" fill="rgb(243,70,31)" fg:x="93421" fg:w="463"/><text x="75.6339%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (463 samples, 0.37%)</title><rect x="75.3839%" y="725" width="0.3736%" height="15" fill="rgb(253,195,26)" fg:x="93421" fg:w="463"/><text x="75.6339%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (463 samples, 0.37%)</title><rect x="75.3839%" y="709" width="0.3736%" height="15" fill="rgb(243,42,11)" fg:x="93421" fg:w="463"/><text x="75.6339%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (463 samples, 0.37%)</title><rect x="75.3839%" y="693" width="0.3736%" height="15" fill="rgb(239,66,17)" fg:x="93421" fg:w="463"/><text x="75.6339%" y="703.50"></text></g><g><title>[libc-2.31.so] (366 samples, 0.30%)</title><rect x="75.9213%" y="789" width="0.2953%" height="15" fill="rgb(217,132,21)" fg:x="94087" fg:w="366"/><text x="76.1713%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (294 samples, 0.24%)</title><rect x="76.3046%" y="773" width="0.2372%" height="15" fill="rgb(252,202,21)" fg:x="94562" fg:w="294"/><text x="76.5546%" y="783.50"></text></g><g><title>core::ptr::write (294 samples, 0.24%)</title><rect x="76.3046%" y="757" width="0.2372%" height="15" fill="rgb(233,98,36)" fg:x="94562" fg:w="294"/><text x="76.5546%" y="767.50"></text></g><g><title>[libc-2.31.so] (278 samples, 0.22%)</title><rect x="76.3175%" y="741" width="0.2243%" height="15" fill="rgb(216,153,54)" fg:x="94578" fg:w="278"/><text x="76.5675%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (427 samples, 0.34%)</title><rect x="76.5418%" y="773" width="0.3446%" height="15" fill="rgb(250,99,7)" fg:x="94856" fg:w="427"/><text x="76.7918%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (427 samples, 0.34%)</title><rect x="76.5418%" y="757" width="0.3446%" height="15" fill="rgb(207,56,50)" fg:x="94856" fg:w="427"/><text x="76.7918%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (137 samples, 0.11%)</title><rect x="76.8864%" y="773" width="0.1105%" height="15" fill="rgb(244,61,34)" fg:x="95283" fg:w="137"/><text x="77.1364%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (134 samples, 0.11%)</title><rect x="76.8888%" y="757" width="0.1081%" height="15" fill="rgb(241,50,38)" fg:x="95286" fg:w="134"/><text x="77.1388%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,430 samples, 1.15%)</title><rect x="75.8624%" y="805" width="1.1539%" height="15" fill="rgb(212,166,30)" fg:x="94014" fg:w="1430"/><text x="76.1124%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (991 samples, 0.80%)</title><rect x="76.2166%" y="789" width="0.7997%" height="15" fill="rgb(249,127,32)" fg:x="94453" fg:w="991"/><text x="76.4666%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (24 samples, 0.02%)</title><rect x="76.9969%" y="773" width="0.0194%" height="15" fill="rgb(209,103,0)" fg:x="95420" fg:w="24"/><text x="77.2469%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_store (24 samples, 0.02%)</title><rect x="76.9969%" y="757" width="0.0194%" height="15" fill="rgb(238,209,51)" fg:x="95420" fg:w="24"/><text x="77.2469%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (18 samples, 0.01%)</title><rect x="77.0316%" y="789" width="0.0145%" height="15" fill="rgb(237,56,23)" fg:x="95463" fg:w="18"/><text x="77.2816%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="77.0349%" y="773" width="0.0113%" height="15" fill="rgb(215,153,46)" fg:x="95467" fg:w="14"/><text x="77.2849%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="77.0349%" y="757" width="0.0113%" height="15" fill="rgb(224,49,31)" fg:x="95467" fg:w="14"/><text x="77.2849%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.02%)</title><rect x="77.0462%" y="789" width="0.0153%" height="15" fill="rgb(250,18,42)" fg:x="95481" fg:w="19"/><text x="77.2962%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.02%)</title><rect x="77.0462%" y="773" width="0.0153%" height="15" fill="rgb(215,176,39)" fg:x="95481" fg:w="19"/><text x="77.2962%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (24 samples, 0.02%)</title><rect x="77.0663%" y="725" width="0.0194%" height="15" fill="rgb(223,77,29)" fg:x="95506" fg:w="24"/><text x="77.3163%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="77.0663%" y="709" width="0.0194%" height="15" fill="rgb(234,94,52)" fg:x="95506" fg:w="24"/><text x="77.3163%" y="719.50"></text></g><g><title>event_listener::Inner::lock (29 samples, 0.02%)</title><rect x="77.0631%" y="789" width="0.0234%" height="15" fill="rgb(220,154,50)" fg:x="95502" fg:w="29"/><text x="77.3131%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="77.0647%" y="773" width="0.0218%" height="15" fill="rgb(212,11,10)" fg:x="95504" fg:w="27"/><text x="77.3147%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (25 samples, 0.02%)</title><rect x="77.0663%" y="757" width="0.0202%" height="15" fill="rgb(205,166,19)" fg:x="95506" fg:w="25"/><text x="77.3163%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (25 samples, 0.02%)</title><rect x="77.0663%" y="741" width="0.0202%" height="15" fill="rgb(244,198,16)" fg:x="95506" fg:w="25"/><text x="77.3163%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (19 samples, 0.02%)</title><rect x="77.1115%" y="693" width="0.0153%" height="15" fill="rgb(219,69,12)" fg:x="95562" fg:w="19"/><text x="77.3615%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="77.1115%" y="677" width="0.0153%" height="15" fill="rgb(245,30,7)" fg:x="95562" fg:w="19"/><text x="77.3615%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (13 samples, 0.01%)</title><rect x="77.1438%" y="613" width="0.0105%" height="15" fill="rgb(218,221,48)" fg:x="95602" fg:w="13"/><text x="77.3938%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.01%)</title><rect x="77.1438%" y="597" width="0.0105%" height="15" fill="rgb(216,66,15)" fg:x="95602" fg:w="13"/><text x="77.3938%" y="607.50"></text></g><g><title>parking::Unparker::unpark (31 samples, 0.03%)</title><rect x="77.1349%" y="645" width="0.0250%" height="15" fill="rgb(226,122,50)" fg:x="95591" fg:w="31"/><text x="77.3849%" y="655.50"></text></g><g><title>parking::Inner::unpark (23 samples, 0.02%)</title><rect x="77.1414%" y="629" width="0.0186%" height="15" fill="rgb(239,156,16)" fg:x="95599" fg:w="23"/><text x="77.3914%" y="639.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (42 samples, 0.03%)</title><rect x="77.1277%" y="661" width="0.0339%" height="15" fill="rgb(224,27,38)" fg:x="95582" fg:w="42"/><text x="77.3777%" y="671.50"></text></g><g><title>core::task::wake::Waker::wake (54 samples, 0.04%)</title><rect x="77.1269%" y="693" width="0.0436%" height="15" fill="rgb(224,39,27)" fg:x="95581" fg:w="54"/><text x="77.3769%" y="703.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (54 samples, 0.04%)</title><rect x="77.1269%" y="677" width="0.0436%" height="15" fill="rgb(215,92,29)" fg:x="95581" fg:w="54"/><text x="77.3769%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (19 samples, 0.02%)</title><rect x="77.1737%" y="645" width="0.0153%" height="15" fill="rgb(207,159,16)" fg:x="95639" fg:w="19"/><text x="77.4237%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="77.1737%" y="629" width="0.0153%" height="15" fill="rgb(238,163,47)" fg:x="95639" fg:w="19"/><text x="77.4237%" y="639.50"></text></g><g><title>async_executor::State::notify (121 samples, 0.10%)</title><rect x="77.0986%" y="709" width="0.0976%" height="15" fill="rgb(219,91,49)" fg:x="95546" fg:w="121"/><text x="77.3486%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="77.1704%" y="693" width="0.0258%" height="15" fill="rgb(227,167,31)" fg:x="95635" fg:w="32"/><text x="77.4204%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.02%)</title><rect x="77.1737%" y="677" width="0.0226%" height="15" fill="rgb(234,80,54)" fg:x="95639" fg:w="28"/><text x="77.4237%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (28 samples, 0.02%)</title><rect x="77.1737%" y="661" width="0.0226%" height="15" fill="rgb(212,114,2)" fg:x="95639" fg:w="28"/><text x="77.4237%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (59 samples, 0.05%)</title><rect x="77.2197%" y="677" width="0.0476%" height="15" fill="rgb(234,50,24)" fg:x="95696" fg:w="59"/><text x="77.4697%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (59 samples, 0.05%)</title><rect x="77.2197%" y="661" width="0.0476%" height="15" fill="rgb(221,68,8)" fg:x="95696" fg:w="59"/><text x="77.4697%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (23 samples, 0.02%)</title><rect x="77.2689%" y="677" width="0.0186%" height="15" fill="rgb(254,180,31)" fg:x="95757" fg:w="23"/><text x="77.5189%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (23 samples, 0.02%)</title><rect x="77.2689%" y="661" width="0.0186%" height="15" fill="rgb(247,130,50)" fg:x="95757" fg:w="23"/><text x="77.5189%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (238 samples, 0.19%)</title><rect x="77.0986%" y="725" width="0.1920%" height="15" fill="rgb(211,109,4)" fg:x="95546" fg:w="238"/><text x="77.3486%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (117 samples, 0.09%)</title><rect x="77.1963%" y="709" width="0.0944%" height="15" fill="rgb(238,50,21)" fg:x="95667" fg:w="117"/><text x="77.4463%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (110 samples, 0.09%)</title><rect x="77.2019%" y="693" width="0.0888%" height="15" fill="rgb(225,57,45)" fg:x="95674" fg:w="110"/><text x="77.4519%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (42 samples, 0.03%)</title><rect x="77.2907%" y="725" width="0.0339%" height="15" fill="rgb(209,196,50)" fg:x="95784" fg:w="42"/><text x="77.5407%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (42 samples, 0.03%)</title><rect x="77.2907%" y="709" width="0.0339%" height="15" fill="rgb(242,140,13)" fg:x="95784" fg:w="42"/><text x="77.5407%" y="719.50"></text></g><g><title>event_listener::List::notify (314 samples, 0.25%)</title><rect x="77.0865%" y="789" width="0.2534%" height="15" fill="rgb(217,111,7)" fg:x="95531" fg:w="314"/><text x="77.3365%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (307 samples, 0.25%)</title><rect x="77.0922%" y="773" width="0.2477%" height="15" fill="rgb(253,193,51)" fg:x="95538" fg:w="307"/><text x="77.3422%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (306 samples, 0.25%)</title><rect x="77.0930%" y="757" width="0.2469%" height="15" fill="rgb(252,70,29)" fg:x="95539" fg:w="306"/><text x="77.3430%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (299 samples, 0.24%)</title><rect x="77.0986%" y="741" width="0.2413%" height="15" fill="rgb(232,127,12)" fg:x="95546" fg:w="299"/><text x="77.3486%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.02%)</title><rect x="77.3246%" y="725" width="0.0153%" height="15" fill="rgb(211,180,21)" fg:x="95826" fg:w="19"/><text x="77.5746%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.02%)</title><rect x="77.3246%" y="709" width="0.0153%" height="15" fill="rgb(229,72,13)" fg:x="95826" fg:w="19"/><text x="77.5746%" y="719.50"></text></g><g><title>event_listener::full_fence (1,643 samples, 1.33%)</title><rect x="77.3399%" y="789" width="1.3258%" height="15" fill="rgb(240,211,49)" fg:x="95845" fg:w="1643"/><text x="77.5899%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,632 samples, 1.32%)</title><rect x="77.3488%" y="773" width="1.3169%" height="15" fill="rgb(219,149,40)" fg:x="95856" fg:w="1632"/><text x="77.5988%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,632 samples, 1.32%)</title><rect x="77.3488%" y="757" width="1.3169%" height="15" fill="rgb(210,127,46)" fg:x="95856" fg:w="1632"/><text x="77.5988%" y="767.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,517 samples, 2.84%)</title><rect x="75.8293%" y="821" width="2.8380%" height="15" fill="rgb(220,106,7)" fg:x="93973" fg:w="3517"/><text x="76.0793%" y="831.50">as..</text></g><g><title>event_listener::Event::notify (2,046 samples, 1.65%)</title><rect x="77.0163%" y="805" width="1.6510%" height="15" fill="rgb(249,31,22)" fg:x="95444" fg:w="2046"/><text x="77.2663%" y="815.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (26 samples, 0.02%)</title><rect x="78.6673%" y="821" width="0.0210%" height="15" fill="rgb(253,1,49)" fg:x="97490" fg:w="26"/><text x="78.9173%" y="831.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,393 samples, 4.35%)</title><rect x="74.6084%" y="917" width="4.3518%" height="15" fill="rgb(227,144,33)" fg:x="92460" fg:w="5393"/><text x="74.8584%" y="927.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,969 samples, 3.20%)</title><rect x="75.7575%" y="901" width="3.2027%" height="15" fill="rgb(249,163,44)" fg:x="93884" fg:w="3969"/><text x="76.0075%" y="911.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,969 samples, 3.20%)</title><rect x="75.7575%" y="885" width="3.2027%" height="15" fill="rgb(234,15,39)" fg:x="93884" fg:w="3969"/><text x="76.0075%" y="895.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,969 samples, 3.20%)</title><rect x="75.7575%" y="869" width="3.2027%" height="15" fill="rgb(207,66,16)" fg:x="93884" fg:w="3969"/><text x="76.0075%" y="879.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (3,969 samples, 3.20%)</title><rect x="75.7575%" y="853" width="3.2027%" height="15" fill="rgb(233,112,24)" fg:x="93884" fg:w="3969"/><text x="76.0075%" y="863.50">tre..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,969 samples, 3.20%)</title><rect x="75.7575%" y="837" width="3.2027%" height="15" fill="rgb(230,90,22)" fg:x="93884" fg:w="3969"/><text x="76.0075%" y="847.50">&lt;as..</text></g><g><title>event_listener::Event::notify (336 samples, 0.27%)</title><rect x="78.6891%" y="821" width="0.2711%" height="15" fill="rgb(229,61,13)" fg:x="97517" fg:w="336"/><text x="78.9391%" y="831.50"></text></g><g><title>event_listener::full_fence (318 samples, 0.26%)</title><rect x="78.7036%" y="805" width="0.2566%" height="15" fill="rgb(225,57,24)" fg:x="97535" fg:w="318"/><text x="78.9536%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (295 samples, 0.24%)</title><rect x="78.7222%" y="789" width="0.2380%" height="15" fill="rgb(208,169,48)" fg:x="97558" fg:w="295"/><text x="78.9722%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (295 samples, 0.24%)</title><rect x="78.7222%" y="773" width="0.2380%" height="15" fill="rgb(244,218,51)" fg:x="97558" fg:w="295"/><text x="78.9722%" y="783.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (40 samples, 0.03%)</title><rect x="78.9602%" y="917" width="0.0323%" height="15" fill="rgb(214,148,10)" fg:x="97853" fg:w="40"/><text x="79.2102%" y="927.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (26 samples, 0.02%)</title><rect x="78.9925%" y="917" width="0.0210%" height="15" fill="rgb(225,174,27)" fg:x="97893" fg:w="26"/><text x="79.2425%" y="927.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (21 samples, 0.02%)</title><rect x="79.0175%" y="917" width="0.0169%" height="15" fill="rgb(230,96,26)" fg:x="97924" fg:w="21"/><text x="79.2675%" y="927.50"></text></g><g><title>[unknown] (93,311 samples, 75.30%)</title><rect x="3.7425%" y="933" width="75.2951%" height="15" fill="rgb(232,10,30)" fg:x="4638" fg:w="93311"/><text x="3.9925%" y="943.50">[unknown]</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (43 samples, 0.03%)</title><rect x="79.0377%" y="917" width="0.0347%" height="15" fill="rgb(222,8,50)" fg:x="97949" fg:w="43"/><text x="79.2877%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="79.0724%" y="917" width="0.0129%" height="15" fill="rgb(213,81,27)" fg:x="97992" fg:w="16"/><text x="79.3224%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (17 samples, 0.01%)</title><rect x="79.0853%" y="917" width="0.0137%" height="15" fill="rgb(245,50,10)" fg:x="98008" fg:w="17"/><text x="79.3353%" y="927.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (50 samples, 0.04%)</title><rect x="79.0990%" y="917" width="0.0403%" height="15" fill="rgb(216,100,18)" fg:x="98025" fg:w="50"/><text x="79.3490%" y="927.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (40 samples, 0.03%)</title><rect x="79.1071%" y="901" width="0.0323%" height="15" fill="rgb(236,147,54)" fg:x="98035" fg:w="40"/><text x="79.3571%" y="911.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (37 samples, 0.03%)</title><rect x="79.1095%" y="885" width="0.0299%" height="15" fill="rgb(205,143,26)" fg:x="98038" fg:w="37"/><text x="79.3595%" y="895.50"></text></g><g><title>__rust_probestack (15 samples, 0.01%)</title><rect x="79.1393%" y="917" width="0.0121%" height="15" fill="rgb(236,26,9)" fg:x="98075" fg:w="15"/><text x="79.3893%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (49 samples, 0.04%)</title><rect x="79.1514%" y="917" width="0.0395%" height="15" fill="rgb(221,165,53)" fg:x="98090" fg:w="49"/><text x="79.4014%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (100 samples, 0.08%)</title><rect x="79.1958%" y="917" width="0.0807%" height="15" fill="rgb(214,110,17)" fg:x="98145" fg:w="100"/><text x="79.4458%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (76 samples, 0.06%)</title><rect x="79.2152%" y="901" width="0.0613%" height="15" fill="rgb(237,197,12)" fg:x="98169" fg:w="76"/><text x="79.4652%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (70 samples, 0.06%)</title><rect x="79.2200%" y="885" width="0.0565%" height="15" fill="rgb(205,84,17)" fg:x="98175" fg:w="70"/><text x="79.4700%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="79.2394%" y="869" width="0.0371%" height="15" fill="rgb(237,18,45)" fg:x="98199" fg:w="46"/><text x="79.4894%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (44 samples, 0.04%)</title><rect x="79.2410%" y="853" width="0.0355%" height="15" fill="rgb(221,87,14)" fg:x="98201" fg:w="44"/><text x="79.4910%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.01%)</title><rect x="79.4387%" y="869" width="0.0137%" height="15" fill="rgb(238,186,15)" fg:x="98446" fg:w="17"/><text x="79.6887%" y="879.50"></text></g><g><title>core::ptr::write (17 samples, 0.01%)</title><rect x="79.4387%" y="853" width="0.0137%" height="15" fill="rgb(208,115,11)" fg:x="98446" fg:w="17"/><text x="79.6887%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.05%)</title><rect x="79.4161%" y="901" width="0.0468%" height="15" fill="rgb(254,175,0)" fg:x="98418" fg:w="58"/><text x="79.6661%" y="911.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (46 samples, 0.04%)</title><rect x="79.4258%" y="885" width="0.0371%" height="15" fill="rgb(227,24,42)" fg:x="98430" fg:w="46"/><text x="79.6758%" y="895.50"></text></g><g><title>__dso_handle (540 samples, 0.44%)</title><rect x="79.0377%" y="933" width="0.4357%" height="15" fill="rgb(223,211,37)" fg:x="97949" fg:w="540"/><text x="79.2877%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (244 samples, 0.20%)</title><rect x="79.2765%" y="917" width="0.1969%" height="15" fill="rgb(235,49,27)" fg:x="98245" fg:w="244"/><text x="79.5265%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (13 samples, 0.01%)</title><rect x="79.4629%" y="901" width="0.0105%" height="15" fill="rgb(254,97,51)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="911.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="79.4629%" y="885" width="0.0105%" height="15" fill="rgb(249,51,40)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.01%)</title><rect x="79.4629%" y="869" width="0.0105%" height="15" fill="rgb(210,128,45)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="79.4629%" y="853" width="0.0105%" height="15" fill="rgb(224,137,50)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.01%)</title><rect x="79.4629%" y="837" width="0.0105%" height="15" fill="rgb(242,15,9)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="79.4629%" y="821" width="0.0105%" height="15" fill="rgb(233,187,41)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="79.4629%" y="805" width="0.0105%" height="15" fill="rgb(227,2,29)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="79.4629%" y="789" width="0.0105%" height="15" fill="rgb(222,70,3)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="799.50"></text></g><g><title>__rg_dealloc (13 samples, 0.01%)</title><rect x="79.4629%" y="773" width="0.0105%" height="15" fill="rgb(213,11,42)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="783.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.01%)</title><rect x="79.4629%" y="757" width="0.0105%" height="15" fill="rgb(225,150,9)" fg:x="98476" fg:w="13"/><text x="79.7129%" y="767.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.01%)</title><rect x="79.4734%" y="933" width="0.0113%" height="15" fill="rgb(230,162,45)" fg:x="98489" fg:w="14"/><text x="79.7234%" y="943.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (13 samples, 0.01%)</title><rect x="79.4847%" y="933" width="0.0105%" height="15" fill="rgb(222,14,52)" fg:x="98503" fg:w="13"/><text x="79.7347%" y="943.50"></text></g><g><title>anon.7ffb122119e4c1435beee04d7a36cdb5.9.llvm.14803035141670572092 (19 samples, 0.02%)</title><rect x="79.4952%" y="933" width="0.0153%" height="15" fill="rgb(254,198,14)" fg:x="98516" fg:w="19"/><text x="79.7452%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (49 samples, 0.04%)</title><rect x="79.5355%" y="901" width="0.0395%" height="15" fill="rgb(220,217,30)" fg:x="98566" fg:w="49"/><text x="79.7855%" y="911.50"></text></g><g><title>async_task::runnable::Runnable::run (48 samples, 0.04%)</title><rect x="79.5363%" y="885" width="0.0387%" height="15" fill="rgb(215,146,41)" fg:x="98567" fg:w="48"/><text x="79.7863%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (68 samples, 0.05%)</title><rect x="79.5242%" y="917" width="0.0549%" height="15" fill="rgb(217,27,36)" fg:x="98552" fg:w="68"/><text x="79.7742%" y="927.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="79.5791%" y="917" width="0.0266%" height="15" fill="rgb(219,218,39)" fg:x="98620" fg:w="33"/><text x="79.8291%" y="927.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (30 samples, 0.02%)</title><rect x="79.5815%" y="901" width="0.0242%" height="15" fill="rgb(219,4,42)" fg:x="98623" fg:w="30"/><text x="79.8315%" y="911.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (26 samples, 0.02%)</title><rect x="79.5848%" y="885" width="0.0210%" height="15" fill="rgb(249,119,36)" fg:x="98627" fg:w="26"/><text x="79.8348%" y="895.50"></text></g><g><title>async_io::reactor::ReactorLock::react (15 samples, 0.01%)</title><rect x="79.6154%" y="917" width="0.0121%" height="15" fill="rgb(209,23,33)" fg:x="98665" fg:w="15"/><text x="79.8654%" y="927.50"></text></g><g><title>parking::Inner::park (15 samples, 0.01%)</title><rect x="79.6356%" y="917" width="0.0121%" height="15" fill="rgb(211,10,0)" fg:x="98690" fg:w="15"/><text x="79.8856%" y="927.50"></text></g><g><title>polling::epoll::Poller::modify (33 samples, 0.03%)</title><rect x="79.6485%" y="917" width="0.0266%" height="15" fill="rgb(208,99,37)" fg:x="98706" fg:w="33"/><text x="79.8985%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (195 samples, 0.16%)</title><rect x="79.5218%" y="933" width="0.1574%" height="15" fill="rgb(213,132,31)" fg:x="98549" fg:w="195"/><text x="79.7718%" y="943.50"></text></g><g><title>snmalloc::BackendAllocator&lt;snmalloc::PALLinux, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, snmalloc::StandardLocalState&lt;snmalloc::PALLinux, snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, snmalloc::PagemapRegisterRange&lt;snmalloc::BasicPagemap&lt;snmalloc::PALLinux, snmalloc::FlatPagemap&lt;14ul, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, snmalloc::PALLinux, false&gt;, snmalloc::DefaultPagemapEntryT&lt;snmalloc::LaxProvenanceSlabMetadataMixin&lt;snmalloc::FrontendSlabMetadata&gt; &gt;, false&gt;, true&gt;::Type&lt;snmalloc::PalRange&lt;snmalloc::PALLinux&gt; &gt;, 14ul&gt; &gt;::alloc_chunk (15 samples, 0.01%)</title><rect x="79.6888%" y="517" width="0.0121%" height="15" fill="rgb(243,129,40)" fg:x="98756" fg:w="15"/><text x="79.9388%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc_slow&lt;(snmalloc::ZeroMem)0&gt; (19 samples, 0.02%)</title><rect x="79.6872%" y="533" width="0.0153%" height="15" fill="rgb(210,66,33)" fg:x="98754" fg:w="19"/><text x="79.9372%" y="543.50"></text></g><g><title>async_channel::bounded (24 samples, 0.02%)</title><rect x="79.6856%" y="693" width="0.0194%" height="15" fill="rgb(209,189,4)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="79.6856%" y="677" width="0.0194%" height="15" fill="rgb(214,107,37)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.02%)</title><rect x="79.6856%" y="661" width="0.0194%" height="15" fill="rgb(245,88,54)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="79.6856%" y="645" width="0.0194%" height="15" fill="rgb(205,146,20)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="79.6856%" y="629" width="0.0194%" height="15" fill="rgb(220,161,25)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="639.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="79.6856%" y="613" width="0.0194%" height="15" fill="rgb(215,152,15)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="623.50"></text></g><g><title>__rg_alloc (24 samples, 0.02%)</title><rect x="79.6856%" y="597" width="0.0194%" height="15" fill="rgb(233,192,44)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (24 samples, 0.02%)</title><rect x="79.6856%" y="581" width="0.0194%" height="15" fill="rgb(240,170,46)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="591.50"></text></g><g><title>sn_rust_alloc (24 samples, 0.02%)</title><rect x="79.6856%" y="565" width="0.0194%" height="15" fill="rgb(207,104,33)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="575.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::lazy_init&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long)#2}, unsigned long&gt; (24 samples, 0.02%)</title><rect x="79.6856%" y="549" width="0.0194%" height="15" fill="rgb(219,21,39)" fg:x="98752" fg:w="24"/><text x="79.9356%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (38 samples, 0.03%)</title><rect x="80.2109%" y="325" width="0.0307%" height="15" fill="rgb(214,133,29)" fg:x="99403" fg:w="38"/><text x="80.4609%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (39 samples, 0.03%)</title><rect x="80.4570%" y="229" width="0.0315%" height="15" fill="rgb(226,93,6)" fg:x="99708" fg:w="39"/><text x="80.7070%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (38 samples, 0.03%)</title><rect x="80.4579%" y="213" width="0.0307%" height="15" fill="rgb(252,222,34)" fg:x="99709" fg:w="38"/><text x="80.7079%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.02%)</title><rect x="80.4643%" y="197" width="0.0242%" height="15" fill="rgb(252,92,48)" fg:x="99717" fg:w="30"/><text x="80.7143%" y="207.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (30 samples, 0.02%)</title><rect x="80.4643%" y="181" width="0.0242%" height="15" fill="rgb(245,223,24)" fg:x="99717" fg:w="30"/><text x="80.7143%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (30 samples, 0.02%)</title><rect x="80.4643%" y="165" width="0.0242%" height="15" fill="rgb(205,176,3)" fg:x="99717" fg:w="30"/><text x="80.7143%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (125 samples, 0.10%)</title><rect x="80.4885%" y="229" width="0.1009%" height="15" fill="rgb(235,151,15)" fg:x="99747" fg:w="125"/><text x="80.7385%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (520 samples, 0.42%)</title><rect x="80.2513%" y="277" width="0.4196%" height="15" fill="rgb(237,209,11)" fg:x="99453" fg:w="520"/><text x="80.5013%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (437 samples, 0.35%)</title><rect x="80.3183%" y="261" width="0.3526%" height="15" fill="rgb(243,227,24)" fg:x="99536" fg:w="437"/><text x="80.5683%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (362 samples, 0.29%)</title><rect x="80.3788%" y="245" width="0.2921%" height="15" fill="rgb(239,193,16)" fg:x="99611" fg:w="362"/><text x="80.6288%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (101 samples, 0.08%)</title><rect x="80.5894%" y="229" width="0.0815%" height="15" fill="rgb(231,27,9)" fg:x="99872" fg:w="101"/><text x="80.8394%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (101 samples, 0.08%)</title><rect x="80.5894%" y="213" width="0.0815%" height="15" fill="rgb(219,169,10)" fg:x="99872" fg:w="101"/><text x="80.8394%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (47 samples, 0.04%)</title><rect x="80.6330%" y="197" width="0.0379%" height="15" fill="rgb(244,229,43)" fg:x="99926" fg:w="47"/><text x="80.8830%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (47 samples, 0.04%)</title><rect x="80.6330%" y="181" width="0.0379%" height="15" fill="rgb(254,38,20)" fg:x="99926" fg:w="47"/><text x="80.8830%" y="191.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (35 samples, 0.03%)</title><rect x="80.6426%" y="165" width="0.0282%" height="15" fill="rgb(250,47,30)" fg:x="99938" fg:w="35"/><text x="80.8926%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (35 samples, 0.03%)</title><rect x="80.6426%" y="149" width="0.0282%" height="15" fill="rgb(224,124,36)" fg:x="99938" fg:w="35"/><text x="80.8926%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (564 samples, 0.46%)</title><rect x="80.2416%" y="325" width="0.4551%" height="15" fill="rgb(246,68,51)" fg:x="99441" fg:w="564"/><text x="80.4916%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (564 samples, 0.46%)</title><rect x="80.2416%" y="309" width="0.4551%" height="15" fill="rgb(253,43,49)" fg:x="99441" fg:w="564"/><text x="80.4916%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (564 samples, 0.46%)</title><rect x="80.2416%" y="293" width="0.4551%" height="15" fill="rgb(219,54,36)" fg:x="99441" fg:w="564"/><text x="80.4916%" y="303.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (32 samples, 0.03%)</title><rect x="80.6709%" y="277" width="0.0258%" height="15" fill="rgb(227,133,34)" fg:x="99973" fg:w="32"/><text x="80.9209%" y="287.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1,407 samples, 1.14%)</title><rect x="81.0735%" y="293" width="1.1353%" height="15" fill="rgb(247,227,15)" fg:x="100472" fg:w="1407"/><text x="81.3235%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (992 samples, 0.80%)</title><rect x="81.4084%" y="277" width="0.8005%" height="15" fill="rgb(229,96,14)" fg:x="100887" fg:w="992"/><text x="81.6584%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (992 samples, 0.80%)</title><rect x="81.4084%" y="261" width="0.8005%" height="15" fill="rgb(220,79,17)" fg:x="100887" fg:w="992"/><text x="81.6584%" y="271.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1,773 samples, 1.43%)</title><rect x="80.8032%" y="309" width="1.4307%" height="15" fill="rgb(205,131,53)" fg:x="100137" fg:w="1773"/><text x="81.0532%" y="319.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (31 samples, 0.03%)</title><rect x="82.2089%" y="293" width="0.0250%" height="15" fill="rgb(209,50,29)" fg:x="101879" fg:w="31"/><text x="82.4589%" y="303.50"></text></g><g><title>async_executor::steal (1,915 samples, 1.55%)</title><rect x="80.6967%" y="325" width="1.5453%" height="15" fill="rgb(245,86,46)" fg:x="100005" fg:w="1915"/><text x="80.9467%" y="335.50"></text></g><g><title>concurrent_queue::full_fence (2,089 samples, 1.69%)</title><rect x="83.0771%" y="293" width="1.6857%" height="15" fill="rgb(235,66,46)" fg:x="102955" fg:w="2089"/><text x="83.3271%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2,048 samples, 1.65%)</title><rect x="83.1102%" y="277" width="1.6526%" height="15" fill="rgb(232,148,31)" fg:x="102996" fg:w="2048"/><text x="83.3602%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2,048 samples, 1.65%)</title><rect x="83.1102%" y="261" width="1.6526%" height="15" fill="rgb(217,149,8)" fg:x="102996" fg:w="2048"/><text x="83.3602%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2,048 samples, 1.65%)</title><rect x="83.1102%" y="245" width="1.6526%" height="15" fill="rgb(209,183,11)" fg:x="102996" fg:w="2048"/><text x="83.3602%" y="255.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,933 samples, 2.37%)</title><rect x="82.4953%" y="309" width="2.3667%" height="15" fill="rgb(208,55,20)" fg:x="102234" fg:w="2933"/><text x="82.7453%" y="319.50">co..</text></g><g><title>core::sync::atomic::AtomicUsize::load (121 samples, 0.10%)</title><rect x="84.7644%" y="293" width="0.0976%" height="15" fill="rgb(218,39,14)" fg:x="105046" fg:w="121"/><text x="85.0144%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (80 samples, 0.06%)</title><rect x="84.7975%" y="277" width="0.0646%" height="15" fill="rgb(216,169,33)" fg:x="105087" fg:w="80"/><text x="85.0475%" y="287.50"></text></g><g><title>concurrent_queue::full_fence (289 samples, 0.23%)</title><rect x="84.9097%" y="293" width="0.2332%" height="15" fill="rgb(233,80,24)" fg:x="105226" fg:w="289"/><text x="85.1597%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (289 samples, 0.23%)</title><rect x="84.9097%" y="277" width="0.2332%" height="15" fill="rgb(213,179,31)" fg:x="105226" fg:w="289"/><text x="85.1597%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (289 samples, 0.23%)</title><rect x="84.9097%" y="261" width="0.2332%" height="15" fill="rgb(209,19,5)" fg:x="105226" fg:w="289"/><text x="85.1597%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (289 samples, 0.23%)</title><rect x="84.9097%" y="245" width="0.2332%" height="15" fill="rgb(219,18,35)" fg:x="105226" fg:w="289"/><text x="85.1597%" y="255.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (39 samples, 0.03%)</title><rect x="85.1550%" y="293" width="0.0315%" height="15" fill="rgb(209,169,16)" fg:x="105530" fg:w="39"/><text x="85.4050%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.03%)</title><rect x="85.1574%" y="277" width="0.0290%" height="15" fill="rgb(245,90,51)" fg:x="105533" fg:w="36"/><text x="85.4074%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.03%)</title><rect x="85.1574%" y="261" width="0.0290%" height="15" fill="rgb(220,99,45)" fg:x="105533" fg:w="36"/><text x="85.4074%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (25 samples, 0.02%)</title><rect x="85.1969%" y="293" width="0.0202%" height="15" fill="rgb(249,89,25)" fg:x="105582" fg:w="25"/><text x="85.4469%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.02%)</title><rect x="85.1969%" y="277" width="0.0202%" height="15" fill="rgb(239,193,0)" fg:x="105582" fg:w="25"/><text x="85.4469%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (146 samples, 0.12%)</title><rect x="85.2171%" y="293" width="0.1178%" height="15" fill="rgb(231,126,1)" fg:x="105607" fg:w="146"/><text x="85.4671%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (146 samples, 0.12%)</title><rect x="85.2171%" y="277" width="0.1178%" height="15" fill="rgb(243,166,3)" fg:x="105607" fg:w="146"/><text x="85.4671%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (178 samples, 0.14%)</title><rect x="85.3349%" y="293" width="0.1436%" height="15" fill="rgb(223,22,34)" fg:x="105753" fg:w="178"/><text x="85.5849%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_or (178 samples, 0.14%)</title><rect x="85.3349%" y="277" width="0.1436%" height="15" fill="rgb(251,52,51)" fg:x="105753" fg:w="178"/><text x="85.5849%" y="287.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4,183 samples, 3.38%)</title><rect x="82.2420%" y="325" width="3.3754%" height="15" fill="rgb(221,165,28)" fg:x="101920" fg:w="4183"/><text x="82.4920%" y="335.50">con..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (936 samples, 0.76%)</title><rect x="84.8621%" y="309" width="0.7553%" height="15" fill="rgb(218,121,47)" fg:x="105167" fg:w="936"/><text x="85.1121%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (172 samples, 0.14%)</title><rect x="85.4785%" y="293" width="0.1388%" height="15" fill="rgb(209,120,9)" fg:x="105931" fg:w="172"/><text x="85.7285%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (172 samples, 0.14%)</title><rect x="85.4785%" y="277" width="0.1388%" height="15" fill="rgb(236,68,12)" fg:x="105931" fg:w="172"/><text x="85.7285%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (210 samples, 0.17%)</title><rect x="85.6173%" y="325" width="0.1695%" height="15" fill="rgb(225,194,26)" fg:x="106103" fg:w="210"/><text x="85.8673%" y="335.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (210 samples, 0.17%)</title><rect x="85.6173%" y="309" width="0.1695%" height="15" fill="rgb(231,84,39)" fg:x="106103" fg:w="210"/><text x="85.8673%" y="319.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (210 samples, 0.17%)</title><rect x="85.6173%" y="293" width="0.1695%" height="15" fill="rgb(210,11,45)" fg:x="106103" fg:w="210"/><text x="85.8673%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (210 samples, 0.17%)</title><rect x="85.6173%" y="277" width="0.1695%" height="15" fill="rgb(224,54,52)" fg:x="106103" fg:w="210"/><text x="85.8673%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (196 samples, 0.16%)</title><rect x="85.6286%" y="261" width="0.1582%" height="15" fill="rgb(238,102,14)" fg:x="106117" fg:w="196"/><text x="85.8786%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (196 samples, 0.16%)</title><rect x="85.6286%" y="245" width="0.1582%" height="15" fill="rgb(243,160,52)" fg:x="106117" fg:w="196"/><text x="85.8786%" y="255.50"></text></g><g><title>fastrand::usize (49 samples, 0.04%)</title><rect x="85.7868%" y="325" width="0.0395%" height="15" fill="rgb(216,114,19)" fg:x="106313" fg:w="49"/><text x="86.0368%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 0.04%)</title><rect x="85.7884%" y="309" width="0.0379%" height="15" fill="rgb(244,166,37)" fg:x="106315" fg:w="47"/><text x="86.0384%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.04%)</title><rect x="85.7884%" y="293" width="0.0379%" height="15" fill="rgb(246,29,44)" fg:x="106315" fg:w="47"/><text x="86.0384%" y="303.50"></text></g><g><title>fastrand::usize::{{closure}} (29 samples, 0.02%)</title><rect x="85.8029%" y="277" width="0.0234%" height="15" fill="rgb(215,56,53)" fg:x="106333" fg:w="29"/><text x="86.0529%" y="287.50"></text></g><g><title>fastrand::Rng::usize (29 samples, 0.02%)</title><rect x="85.8029%" y="261" width="0.0234%" height="15" fill="rgb(217,60,2)" fg:x="106333" fg:w="29"/><text x="86.0529%" y="271.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (21 samples, 0.02%)</title><rect x="85.8094%" y="245" width="0.0169%" height="15" fill="rgb(207,26,24)" fg:x="106341" fg:w="21"/><text x="86.0594%" y="255.50"></text></g><g><title>std::sync::poison::Flag::get (34 samples, 0.03%)</title><rect x="85.8263%" y="277" width="0.0274%" height="15" fill="rgb(252,210,15)" fg:x="106362" fg:w="34"/><text x="86.0763%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (34 samples, 0.03%)</title><rect x="85.8263%" y="261" width="0.0274%" height="15" fill="rgb(253,209,26)" fg:x="106362" fg:w="34"/><text x="86.0763%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.03%)</title><rect x="85.8263%" y="245" width="0.0274%" height="15" fill="rgb(238,170,14)" fg:x="106362" fg:w="34"/><text x="86.0763%" y="255.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (41 samples, 0.03%)</title><rect x="85.8263%" y="309" width="0.0331%" height="15" fill="rgb(216,178,15)" fg:x="106362" fg:w="41"/><text x="86.0763%" y="319.50"></text></g><g><title>std::sync::poison::Flag::borrow (41 samples, 0.03%)</title><rect x="85.8263%" y="293" width="0.0331%" height="15" fill="rgb(250,197,2)" fg:x="106362" fg:w="41"/><text x="86.0763%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (323 samples, 0.26%)</title><rect x="85.8626%" y="277" width="0.2606%" height="15" fill="rgb(212,70,42)" fg:x="106407" fg:w="323"/><text x="86.1126%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (323 samples, 0.26%)</title><rect x="85.8626%" y="261" width="0.2606%" height="15" fill="rgb(227,213,9)" fg:x="106407" fg:w="323"/><text x="86.1126%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (87 samples, 0.07%)</title><rect x="86.1233%" y="277" width="0.0702%" height="15" fill="rgb(245,99,25)" fg:x="106730" fg:w="87"/><text x="86.3733%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (87 samples, 0.07%)</title><rect x="86.1233%" y="261" width="0.0702%" height="15" fill="rgb(250,82,29)" fg:x="106730" fg:w="87"/><text x="86.3733%" y="271.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (7,690 samples, 6.21%)</title><rect x="79.9987%" y="341" width="6.2053%" height="15" fill="rgb(241,226,54)" fg:x="99140" fg:w="7690"/><text x="80.2487%" y="351.50">async_ex..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (468 samples, 0.38%)</title><rect x="85.8263%" y="325" width="0.3776%" height="15" fill="rgb(221,99,41)" fg:x="106362" fg:w="468"/><text x="86.0763%" y="335.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (427 samples, 0.34%)</title><rect x="85.8594%" y="309" width="0.3446%" height="15" fill="rgb(213,90,21)" fg:x="106403" fg:w="427"/><text x="86.1094%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (427 samples, 0.34%)</title><rect x="85.8594%" y="293" width="0.3446%" height="15" fill="rgb(205,208,24)" fg:x="106403" fg:w="427"/><text x="86.1094%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (43 samples, 0.03%)</title><rect x="86.2137%" y="261" width="0.0347%" height="15" fill="rgb(246,31,12)" fg:x="106842" fg:w="43"/><text x="86.4637%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (43 samples, 0.03%)</title><rect x="86.2137%" y="245" width="0.0347%" height="15" fill="rgb(213,154,6)" fg:x="106842" fg:w="43"/><text x="86.4637%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (44 samples, 0.04%)</title><rect x="86.2137%" y="325" width="0.0355%" height="15" fill="rgb(222,163,29)" fg:x="106842" fg:w="44"/><text x="86.4637%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="86.2137%" y="309" width="0.0355%" height="15" fill="rgb(227,201,8)" fg:x="106842" fg:w="44"/><text x="86.4637%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (44 samples, 0.04%)</title><rect x="86.2137%" y="293" width="0.0355%" height="15" fill="rgb(233,9,32)" fg:x="106842" fg:w="44"/><text x="86.4637%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (44 samples, 0.04%)</title><rect x="86.2137%" y="277" width="0.0355%" height="15" fill="rgb(217,54,24)" fg:x="106842" fg:w="44"/><text x="86.4637%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (78 samples, 0.06%)</title><rect x="86.2492%" y="325" width="0.0629%" height="15" fill="rgb(235,192,0)" fg:x="106886" fg:w="78"/><text x="86.4992%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (78 samples, 0.06%)</title><rect x="86.2492%" y="309" width="0.0629%" height="15" fill="rgb(235,45,9)" fg:x="106886" fg:w="78"/><text x="86.4992%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (17 samples, 0.01%)</title><rect x="86.3307%" y="245" width="0.0137%" height="15" fill="rgb(246,42,40)" fg:x="106987" fg:w="17"/><text x="86.5807%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.01%)</title><rect x="86.3307%" y="229" width="0.0137%" height="15" fill="rgb(248,111,24)" fg:x="106987" fg:w="17"/><text x="86.5807%" y="239.50"></text></g><g><title>async_io::reactor::Reactor::notify (61 samples, 0.05%)</title><rect x="86.3250%" y="277" width="0.0492%" height="15" fill="rgb(249,65,22)" fg:x="106980" fg:w="61"/><text x="86.5750%" y="287.50"></text></g><g><title>polling::Poller::notify (55 samples, 0.04%)</title><rect x="86.3299%" y="261" width="0.0444%" height="15" fill="rgb(238,111,51)" fg:x="106986" fg:w="55"/><text x="86.5799%" y="271.50"></text></g><g><title>polling::epoll::Poller::notify (35 samples, 0.03%)</title><rect x="86.3460%" y="245" width="0.0282%" height="15" fill="rgb(250,118,22)" fg:x="107006" fg:w="35"/><text x="86.5960%" y="255.50"></text></g><g><title>__libc_write (32 samples, 0.03%)</title><rect x="86.3484%" y="229" width="0.0258%" height="15" fill="rgb(234,84,26)" fg:x="107009" fg:w="32"/><text x="86.5984%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (23 samples, 0.02%)</title><rect x="86.3742%" y="277" width="0.0186%" height="15" fill="rgb(243,172,12)" fg:x="107041" fg:w="23"/><text x="86.6242%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.02%)</title><rect x="86.3742%" y="261" width="0.0186%" height="15" fill="rgb(236,150,49)" fg:x="107041" fg:w="23"/><text x="86.6242%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (78 samples, 0.06%)</title><rect x="86.4235%" y="245" width="0.0629%" height="15" fill="rgb(225,197,26)" fg:x="107102" fg:w="78"/><text x="86.6735%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_swap (78 samples, 0.06%)</title><rect x="86.4235%" y="229" width="0.0629%" height="15" fill="rgb(214,17,42)" fg:x="107102" fg:w="78"/><text x="86.6735%" y="239.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (44 samples, 0.04%)</title><rect x="86.4864%" y="245" width="0.0355%" height="15" fill="rgb(224,165,40)" fg:x="107180" fg:w="44"/><text x="86.7364%" y="255.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (44 samples, 0.04%)</title><rect x="86.4864%" y="229" width="0.0355%" height="15" fill="rgb(246,100,4)" fg:x="107180" fg:w="44"/><text x="86.7364%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (44 samples, 0.04%)</title><rect x="86.4864%" y="213" width="0.0355%" height="15" fill="rgb(222,103,0)" fg:x="107180" fg:w="44"/><text x="86.7364%" y="223.50"></text></g><g><title>std::sys::unix::futex::futex_wake (38 samples, 0.03%)</title><rect x="86.4912%" y="197" width="0.0307%" height="15" fill="rgb(227,189,26)" fg:x="107186" fg:w="38"/><text x="86.7412%" y="207.50"></text></g><g><title>syscall (36 samples, 0.03%)</title><rect x="86.4929%" y="181" width="0.0290%" height="15" fill="rgb(214,202,17)" fg:x="107188" fg:w="36"/><text x="86.7429%" y="191.50"></text></g><g><title>parking::Unparker::unpark (171 samples, 0.14%)</title><rect x="86.3928%" y="277" width="0.1380%" height="15" fill="rgb(229,111,3)" fg:x="107064" fg:w="171"/><text x="86.6428%" y="287.50"></text></g><g><title>parking::Inner::unpark (151 samples, 0.12%)</title><rect x="86.4089%" y="261" width="0.1218%" height="15" fill="rgb(229,172,15)" fg:x="107084" fg:w="151"/><text x="86.6589%" y="271.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (24 samples, 0.02%)</title><rect x="86.5308%" y="245" width="0.0194%" height="15" fill="rgb(230,224,35)" fg:x="107235" fg:w="24"/><text x="86.7808%" y="255.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (24 samples, 0.02%)</title><rect x="86.5308%" y="229" width="0.0194%" height="15" fill="rgb(251,141,6)" fg:x="107235" fg:w="24"/><text x="86.7808%" y="239.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (23 samples, 0.02%)</title><rect x="86.5316%" y="213" width="0.0186%" height="15" fill="rgb(225,208,6)" fg:x="107236" fg:w="23"/><text x="86.7816%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (23 samples, 0.02%)</title><rect x="86.5316%" y="197" width="0.0186%" height="15" fill="rgb(246,181,16)" fg:x="107236" fg:w="23"/><text x="86.7816%" y="207.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (297 samples, 0.24%)</title><rect x="86.3121%" y="293" width="0.2397%" height="15" fill="rgb(227,129,36)" fg:x="106964" fg:w="297"/><text x="86.5621%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.02%)</title><rect x="86.5308%" y="277" width="0.0210%" height="15" fill="rgb(248,117,24)" fg:x="107235" fg:w="26"/><text x="86.7808%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.02%)</title><rect x="86.5308%" y="261" width="0.0210%" height="15" fill="rgb(214,185,35)" fg:x="107235" fg:w="26"/><text x="86.7808%" y="271.50"></text></g><g><title>core::task::wake::Waker::wake (379 samples, 0.31%)</title><rect x="86.3121%" y="325" width="0.3058%" height="15" fill="rgb(236,150,34)" fg:x="106964" fg:w="379"/><text x="86.5621%" y="335.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (379 samples, 0.31%)</title><rect x="86.3121%" y="309" width="0.3058%" height="15" fill="rgb(243,228,27)" fg:x="106964" fg:w="379"/><text x="86.5621%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (82 samples, 0.07%)</title><rect x="86.5518%" y="293" width="0.0662%" height="15" fill="rgb(245,77,44)" fg:x="107261" fg:w="82"/><text x="86.8018%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.07%)</title><rect x="86.5518%" y="277" width="0.0662%" height="15" fill="rgb(235,214,42)" fg:x="107261" fg:w="82"/><text x="86.8018%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (75 samples, 0.06%)</title><rect x="86.5574%" y="261" width="0.0605%" height="15" fill="rgb(221,74,3)" fg:x="107268" fg:w="75"/><text x="86.8074%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (75 samples, 0.06%)</title><rect x="86.5574%" y="245" width="0.0605%" height="15" fill="rgb(206,121,29)" fg:x="107268" fg:w="75"/><text x="86.8074%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (33 samples, 0.03%)</title><rect x="86.6252%" y="277" width="0.0266%" height="15" fill="rgb(249,131,53)" fg:x="107352" fg:w="33"/><text x="86.8752%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.03%)</title><rect x="86.6252%" y="261" width="0.0266%" height="15" fill="rgb(236,170,29)" fg:x="107352" fg:w="33"/><text x="86.8752%" y="271.50"></text></g><g><title>async_executor::State::notify (563 samples, 0.45%)</title><rect x="86.2040%" y="341" width="0.4543%" height="15" fill="rgb(247,96,15)" fg:x="106830" fg:w="563"/><text x="86.4540%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.04%)</title><rect x="86.6179%" y="325" width="0.0403%" height="15" fill="rgb(211,210,7)" fg:x="107343" fg:w="50"/><text x="86.8679%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (42 samples, 0.03%)</title><rect x="86.6244%" y="309" width="0.0339%" height="15" fill="rgb(240,88,50)" fg:x="107351" fg:w="42"/><text x="86.8744%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (42 samples, 0.03%)</title><rect x="86.6244%" y="293" width="0.0339%" height="15" fill="rgb(209,229,26)" fg:x="107351" fg:w="42"/><text x="86.8744%" y="303.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (110 samples, 0.09%)</title><rect x="86.6865%" y="309" width="0.0888%" height="15" fill="rgb(210,68,23)" fg:x="107428" fg:w="110"/><text x="86.9365%" y="319.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (109 samples, 0.09%)</title><rect x="86.6873%" y="293" width="0.0880%" height="15" fill="rgb(229,180,13)" fg:x="107429" fg:w="109"/><text x="86.9373%" y="303.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (108 samples, 0.09%)</title><rect x="86.6881%" y="277" width="0.0871%" height="15" fill="rgb(236,53,44)" fg:x="107430" fg:w="108"/><text x="86.9381%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (108 samples, 0.09%)</title><rect x="86.6881%" y="261" width="0.0871%" height="15" fill="rgb(244,214,29)" fg:x="107430" fg:w="108"/><text x="86.9381%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (108 samples, 0.09%)</title><rect x="86.6881%" y="245" width="0.0871%" height="15" fill="rgb(220,75,29)" fg:x="107430" fg:w="108"/><text x="86.9381%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_add (108 samples, 0.09%)</title><rect x="86.6881%" y="229" width="0.0871%" height="15" fill="rgb(214,183,37)" fg:x="107430" fg:w="108"/><text x="86.9381%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (46 samples, 0.04%)</title><rect x="86.7753%" y="309" width="0.0371%" height="15" fill="rgb(239,117,29)" fg:x="107538" fg:w="46"/><text x="87.0253%" y="319.50"></text></g><g><title>async_executor::Sleepers::insert (196 samples, 0.16%)</title><rect x="86.6809%" y="325" width="0.1582%" height="15" fill="rgb(237,171,35)" fg:x="107421" fg:w="196"/><text x="86.9309%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (33 samples, 0.03%)</title><rect x="86.8124%" y="309" width="0.0266%" height="15" fill="rgb(229,178,53)" fg:x="107584" fg:w="33"/><text x="87.0624%" y="319.50"></text></g><g><title>core::ptr::write (29 samples, 0.02%)</title><rect x="86.8156%" y="293" width="0.0234%" height="15" fill="rgb(210,102,19)" fg:x="107588" fg:w="29"/><text x="87.0656%" y="303.50"></text></g><g><title>async_executor::Sleepers::is_notified (27 samples, 0.02%)</title><rect x="86.8390%" y="325" width="0.0218%" height="15" fill="rgb(235,127,22)" fg:x="107617" fg:w="27"/><text x="87.0890%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="86.9455%" y="309" width="0.0218%" height="15" fill="rgb(244,31,31)" fg:x="107749" fg:w="27"/><text x="87.1955%" y="319.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (106 samples, 0.09%)</title><rect x="86.9673%" y="309" width="0.0855%" height="15" fill="rgb(231,43,21)" fg:x="107776" fg:w="106"/><text x="87.2173%" y="319.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (103 samples, 0.08%)</title><rect x="86.9697%" y="293" width="0.0831%" height="15" fill="rgb(217,131,35)" fg:x="107779" fg:w="103"/><text x="87.2197%" y="303.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (102 samples, 0.08%)</title><rect x="86.9706%" y="277" width="0.0823%" height="15" fill="rgb(221,149,4)" fg:x="107780" fg:w="102"/><text x="87.2206%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (102 samples, 0.08%)</title><rect x="86.9706%" y="261" width="0.0823%" height="15" fill="rgb(232,170,28)" fg:x="107780" fg:w="102"/><text x="87.2206%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (102 samples, 0.08%)</title><rect x="86.9706%" y="245" width="0.0823%" height="15" fill="rgb(238,56,10)" fg:x="107780" fg:w="102"/><text x="87.2206%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_add (102 samples, 0.08%)</title><rect x="86.9706%" y="229" width="0.0823%" height="15" fill="rgb(235,196,14)" fg:x="107780" fg:w="102"/><text x="87.2206%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (30 samples, 0.02%)</title><rect x="87.0529%" y="309" width="0.0242%" height="15" fill="rgb(216,45,48)" fg:x="107882" fg:w="30"/><text x="87.3029%" y="319.50"></text></g><g><title>core::ptr::write (20 samples, 0.02%)</title><rect x="87.0609%" y="293" width="0.0161%" height="15" fill="rgb(238,213,17)" fg:x="107892" fg:w="20"/><text x="87.3109%" y="303.50"></text></g><g><title>async_executor::Sleepers::update (298 samples, 0.24%)</title><rect x="86.8608%" y="325" width="0.2405%" height="15" fill="rgb(212,13,2)" fg:x="107644" fg:w="298"/><text x="87.1108%" y="335.50"></text></g><g><title>core::task::wake::Waker::will_wake (30 samples, 0.02%)</title><rect x="87.0771%" y="309" width="0.0242%" height="15" fill="rgb(240,114,20)" fg:x="107912" fg:w="30"/><text x="87.3271%" y="319.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (30 samples, 0.02%)</title><rect x="87.0771%" y="293" width="0.0242%" height="15" fill="rgb(228,41,40)" fg:x="107912" fg:w="30"/><text x="87.3271%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.02%)</title><rect x="87.0859%" y="277" width="0.0153%" height="15" fill="rgb(244,132,35)" fg:x="107923" fg:w="19"/><text x="87.3359%" y="287.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="87.0859%" y="261" width="0.0153%" height="15" fill="rgb(253,189,4)" fg:x="107923" fg:w="19"/><text x="87.3359%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (181 samples, 0.15%)</title><rect x="87.1069%" y="261" width="0.1461%" height="15" fill="rgb(224,37,19)" fg:x="107949" fg:w="181"/><text x="87.3569%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (181 samples, 0.15%)</title><rect x="87.1069%" y="245" width="0.1461%" height="15" fill="rgb(235,223,18)" fg:x="107949" fg:w="181"/><text x="87.3569%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (191 samples, 0.15%)</title><rect x="87.1013%" y="325" width="0.1541%" height="15" fill="rgb(235,163,25)" fg:x="107942" fg:w="191"/><text x="87.3513%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (191 samples, 0.15%)</title><rect x="87.1013%" y="309" width="0.1541%" height="15" fill="rgb(217,145,28)" fg:x="107942" fg:w="191"/><text x="87.3513%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (184 samples, 0.15%)</title><rect x="87.1069%" y="293" width="0.1485%" height="15" fill="rgb(223,223,32)" fg:x="107949" fg:w="184"/><text x="87.3569%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (184 samples, 0.15%)</title><rect x="87.1069%" y="277" width="0.1485%" height="15" fill="rgb(227,189,39)" fg:x="107949" fg:w="184"/><text x="87.3569%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (194 samples, 0.16%)</title><rect x="87.2554%" y="325" width="0.1565%" height="15" fill="rgb(248,10,22)" fg:x="108133" fg:w="194"/><text x="87.5054%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (194 samples, 0.16%)</title><rect x="87.2554%" y="309" width="0.1565%" height="15" fill="rgb(248,46,39)" fg:x="108133" fg:w="194"/><text x="87.5054%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (230 samples, 0.19%)</title><rect x="87.4119%" y="325" width="0.1856%" height="15" fill="rgb(248,113,48)" fg:x="108327" fg:w="230"/><text x="87.6619%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_store (230 samples, 0.19%)</title><rect x="87.4119%" y="309" width="0.1856%" height="15" fill="rgb(245,16,25)" fg:x="108327" fg:w="230"/><text x="87.6619%" y="319.50"></text></g><g><title>std::sync::poison::Flag::get (24 samples, 0.02%)</title><rect x="87.5992%" y="277" width="0.0194%" height="15" fill="rgb(249,152,16)" fg:x="108559" fg:w="24"/><text x="87.8492%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (24 samples, 0.02%)</title><rect x="87.5992%" y="261" width="0.0194%" height="15" fill="rgb(250,16,1)" fg:x="108559" fg:w="24"/><text x="87.8492%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.02%)</title><rect x="87.6000%" y="245" width="0.0186%" height="15" fill="rgb(249,138,3)" fg:x="108560" fg:w="23"/><text x="87.8500%" y="255.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (30 samples, 0.02%)</title><rect x="87.5975%" y="309" width="0.0242%" height="15" fill="rgb(227,71,41)" fg:x="108557" fg:w="30"/><text x="87.8475%" y="319.50"></text></g><g><title>std::sync::poison::Flag::borrow (30 samples, 0.02%)</title><rect x="87.5975%" y="293" width="0.0242%" height="15" fill="rgb(209,184,23)" fg:x="108557" fg:w="30"/><text x="87.8475%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (214 samples, 0.17%)</title><rect x="87.6266%" y="277" width="0.1727%" height="15" fill="rgb(223,215,31)" fg:x="108593" fg:w="214"/><text x="87.8766%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (214 samples, 0.17%)</title><rect x="87.6266%" y="261" width="0.1727%" height="15" fill="rgb(210,146,28)" fg:x="108593" fg:w="214"/><text x="87.8766%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (43 samples, 0.03%)</title><rect x="87.8065%" y="261" width="0.0347%" height="15" fill="rgb(209,183,41)" fg:x="108816" fg:w="43"/><text x="88.0565%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.03%)</title><rect x="87.8065%" y="245" width="0.0347%" height="15" fill="rgb(209,224,45)" fg:x="108816" fg:w="43"/><text x="88.0565%" y="255.50"></text></g><g><title>core::hint::spin_loop (29 samples, 0.02%)</title><rect x="87.8525%" y="245" width="0.0234%" height="15" fill="rgb(224,209,51)" fg:x="108873" fg:w="29"/><text x="88.1025%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (29 samples, 0.02%)</title><rect x="87.8525%" y="229" width="0.0234%" height="15" fill="rgb(223,17,39)" fg:x="108873" fg:w="29"/><text x="88.1025%" y="239.50"></text></g><g><title>async_executor::Ticker::sleep (1,537 samples, 1.24%)</title><rect x="86.6583%" y="341" width="1.2402%" height="15" fill="rgb(234,204,37)" fg:x="107393" fg:w="1537"/><text x="86.9083%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (373 samples, 0.30%)</title><rect x="87.5975%" y="325" width="0.3010%" height="15" fill="rgb(236,120,5)" fg:x="108557" fg:w="373"/><text x="87.8475%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (343 samples, 0.28%)</title><rect x="87.6217%" y="309" width="0.2768%" height="15" fill="rgb(248,97,27)" fg:x="108587" fg:w="343"/><text x="87.8717%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (343 samples, 0.28%)</title><rect x="87.6217%" y="293" width="0.2768%" height="15" fill="rgb(240,66,17)" fg:x="108587" fg:w="343"/><text x="87.8717%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (123 samples, 0.10%)</title><rect x="87.7993%" y="277" width="0.0993%" height="15" fill="rgb(210,79,3)" fg:x="108807" fg:w="123"/><text x="88.0493%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (61 samples, 0.05%)</title><rect x="87.8493%" y="261" width="0.0492%" height="15" fill="rgb(214,176,27)" fg:x="108869" fg:w="61"/><text x="88.0993%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (28 samples, 0.02%)</title><rect x="87.8759%" y="245" width="0.0226%" height="15" fill="rgb(235,185,3)" fg:x="108902" fg:w="28"/><text x="88.1259%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (28 samples, 0.02%)</title><rect x="87.8759%" y="229" width="0.0226%" height="15" fill="rgb(227,24,12)" fg:x="108902" fg:w="28"/><text x="88.1259%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="87.9663%" y="309" width="0.0121%" height="15" fill="rgb(252,169,48)" fg:x="109014" fg:w="15"/><text x="88.2163%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (15 samples, 0.01%)</title><rect x="87.9663%" y="293" width="0.0121%" height="15" fill="rgb(212,65,1)" fg:x="109014" fg:w="15"/><text x="88.2163%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (15 samples, 0.01%)</title><rect x="87.9663%" y="277" width="0.0121%" height="15" fill="rgb(242,39,24)" fg:x="109014" fg:w="15"/><text x="88.2163%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.01%)</title><rect x="87.9784%" y="309" width="0.0113%" height="15" fill="rgb(249,32,23)" fg:x="109029" fg:w="14"/><text x="88.2284%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (13 samples, 0.01%)</title><rect x="87.9897%" y="309" width="0.0105%" height="15" fill="rgb(251,195,23)" fg:x="109043" fg:w="13"/><text x="88.2397%" y="319.50"></text></g><g><title>async_executor::Sleepers::remove (199 samples, 0.16%)</title><rect x="87.9260%" y="325" width="0.1606%" height="15" fill="rgb(236,174,8)" fg:x="108964" fg:w="199"/><text x="88.1760%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (107 samples, 0.09%)</title><rect x="88.0002%" y="309" width="0.0863%" height="15" fill="rgb(220,197,8)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (107 samples, 0.09%)</title><rect x="88.0002%" y="293" width="0.0863%" height="15" fill="rgb(240,108,37)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="303.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (107 samples, 0.09%)</title><rect x="88.0002%" y="277" width="0.0863%" height="15" fill="rgb(232,176,24)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="287.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (107 samples, 0.09%)</title><rect x="88.0002%" y="261" width="0.0863%" height="15" fill="rgb(243,35,29)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="271.50"></text></g><g><title>core::mem::drop (107 samples, 0.09%)</title><rect x="88.0002%" y="245" width="0.0863%" height="15" fill="rgb(210,37,18)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (107 samples, 0.09%)</title><rect x="88.0002%" y="229" width="0.0863%" height="15" fill="rgb(224,184,40)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="239.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.09%)</title><rect x="88.0002%" y="213" width="0.0863%" height="15" fill="rgb(236,39,29)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (107 samples, 0.09%)</title><rect x="88.0002%" y="197" width="0.0863%" height="15" fill="rgb(232,48,39)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_sub (107 samples, 0.09%)</title><rect x="88.0002%" y="181" width="0.0863%" height="15" fill="rgb(236,34,42)" fg:x="109056" fg:w="107"/><text x="88.2502%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (57 samples, 0.05%)</title><rect x="88.0865%" y="261" width="0.0460%" height="15" fill="rgb(243,106,37)" fg:x="109163" fg:w="57"/><text x="88.3365%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (57 samples, 0.05%)</title><rect x="88.0865%" y="245" width="0.0460%" height="15" fill="rgb(218,96,6)" fg:x="109163" fg:w="57"/><text x="88.3365%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (60 samples, 0.05%)</title><rect x="88.0865%" y="325" width="0.0484%" height="15" fill="rgb(235,130,12)" fg:x="109163" fg:w="60"/><text x="88.3365%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.05%)</title><rect x="88.0865%" y="309" width="0.0484%" height="15" fill="rgb(231,95,0)" fg:x="109163" fg:w="60"/><text x="88.3365%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (60 samples, 0.05%)</title><rect x="88.0865%" y="293" width="0.0484%" height="15" fill="rgb(228,12,23)" fg:x="109163" fg:w="60"/><text x="88.3365%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (60 samples, 0.05%)</title><rect x="88.0865%" y="277" width="0.0484%" height="15" fill="rgb(216,12,1)" fg:x="109163" fg:w="60"/><text x="88.3365%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (99 samples, 0.08%)</title><rect x="88.1350%" y="325" width="0.0799%" height="15" fill="rgb(219,59,3)" fg:x="109223" fg:w="99"/><text x="88.3850%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (99 samples, 0.08%)</title><rect x="88.1350%" y="309" width="0.0799%" height="15" fill="rgb(215,208,46)" fg:x="109223" fg:w="99"/><text x="88.3850%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (94 samples, 0.08%)</title><rect x="88.2148%" y="325" width="0.0759%" height="15" fill="rgb(254,224,29)" fg:x="109322" fg:w="94"/><text x="88.4648%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (94 samples, 0.08%)</title><rect x="88.2148%" y="309" width="0.0759%" height="15" fill="rgb(232,14,29)" fg:x="109322" fg:w="94"/><text x="88.4648%" y="319.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (14 samples, 0.01%)</title><rect x="88.2907%" y="309" width="0.0113%" height="15" fill="rgb(208,45,52)" fg:x="109416" fg:w="14"/><text x="88.5407%" y="319.50"></text></g><g><title>std::sync::poison::Flag::borrow (14 samples, 0.01%)</title><rect x="88.2907%" y="293" width="0.0113%" height="15" fill="rgb(234,191,28)" fg:x="109416" fg:w="14"/><text x="88.5407%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (73 samples, 0.06%)</title><rect x="88.3036%" y="277" width="0.0589%" height="15" fill="rgb(244,67,43)" fg:x="109432" fg:w="73"/><text x="88.5536%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (73 samples, 0.06%)</title><rect x="88.3036%" y="261" width="0.0589%" height="15" fill="rgb(236,189,24)" fg:x="109432" fg:w="73"/><text x="88.5536%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (16 samples, 0.01%)</title><rect x="88.3641%" y="261" width="0.0129%" height="15" fill="rgb(239,214,33)" fg:x="109507" fg:w="16"/><text x="88.6141%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="88.3641%" y="245" width="0.0129%" height="15" fill="rgb(226,176,41)" fg:x="109507" fg:w="16"/><text x="88.6141%" y="255.50"></text></g><g><title>core::hint::spin_loop (13 samples, 0.01%)</title><rect x="88.3778%" y="245" width="0.0105%" height="15" fill="rgb(248,47,8)" fg:x="109524" fg:w="13"/><text x="88.6278%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13 samples, 0.01%)</title><rect x="88.3778%" y="229" width="0.0105%" height="15" fill="rgb(218,81,44)" fg:x="109524" fg:w="13"/><text x="88.6278%" y="239.50"></text></g><g><title>async_executor::Ticker::wake (624 samples, 0.50%)</title><rect x="87.8985%" y="341" width="0.5035%" height="15" fill="rgb(213,98,6)" fg:x="108930" fg:w="624"/><text x="88.1485%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (138 samples, 0.11%)</title><rect x="88.2907%" y="325" width="0.1114%" height="15" fill="rgb(222,85,22)" fg:x="109416" fg:w="138"/><text x="88.5407%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (124 samples, 0.10%)</title><rect x="88.3020%" y="309" width="0.1001%" height="15" fill="rgb(239,46,39)" fg:x="109430" fg:w="124"/><text x="88.5520%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (124 samples, 0.10%)</title><rect x="88.3020%" y="293" width="0.1001%" height="15" fill="rgb(237,12,29)" fg:x="109430" fg:w="124"/><text x="88.5520%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (49 samples, 0.04%)</title><rect x="88.3625%" y="277" width="0.0395%" height="15" fill="rgb(214,77,8)" fg:x="109505" fg:w="49"/><text x="88.6125%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (30 samples, 0.02%)</title><rect x="88.3778%" y="261" width="0.0242%" height="15" fill="rgb(217,168,37)" fg:x="109524" fg:w="30"/><text x="88.6278%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (17 samples, 0.01%)</title><rect x="88.3883%" y="245" width="0.0137%" height="15" fill="rgb(221,217,23)" fg:x="109537" fg:w="17"/><text x="88.6383%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="88.3883%" y="229" width="0.0137%" height="15" fill="rgb(243,229,36)" fg:x="109537" fg:w="17"/><text x="88.6383%" y="239.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,494 samples, 8.47%)</title><rect x="79.9390%" y="405" width="8.4679%" height="15" fill="rgb(251,163,40)" fg:x="99066" fg:w="10494"/><text x="80.1890%" y="415.50">&lt;core::futur..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (10,494 samples, 8.47%)</title><rect x="79.9390%" y="389" width="8.4679%" height="15" fill="rgb(237,222,12)" fg:x="99066" fg:w="10494"/><text x="80.1890%" y="399.50">async_execut..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10,451 samples, 8.43%)</title><rect x="79.9737%" y="373" width="8.4332%" height="15" fill="rgb(248,132,6)" fg:x="99109" fg:w="10451"/><text x="80.2237%" y="383.50">&lt;futures_lit..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (10,443 samples, 8.43%)</title><rect x="79.9801%" y="357" width="8.4267%" height="15" fill="rgb(227,167,50)" fg:x="99117" fg:w="10443"/><text x="80.2301%" y="367.50">async_execut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,627 samples, 8.58%)</title><rect x="79.9051%" y="437" width="8.5752%" height="15" fill="rgb(242,84,37)" fg:x="99024" fg:w="10627"/><text x="80.1551%" y="447.50">&lt;core::futur..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (10,625 samples, 8.57%)</title><rect x="79.9067%" y="421" width="8.5736%" height="15" fill="rgb(212,4,50)" fg:x="99026" fg:w="10625"/><text x="80.1567%" y="431.50">async_execut..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (89 samples, 0.07%)</title><rect x="88.4085%" y="405" width="0.0718%" height="15" fill="rgb(230,228,32)" fg:x="109562" fg:w="89"/><text x="88.6585%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (89 samples, 0.07%)</title><rect x="88.4085%" y="389" width="0.0718%" height="15" fill="rgb(248,217,23)" fg:x="109562" fg:w="89"/><text x="88.6585%" y="399.50"></text></g><g><title>[libc-2.31.so] (57 samples, 0.05%)</title><rect x="88.7159%" y="293" width="0.0460%" height="15" fill="rgb(238,197,32)" fg:x="109943" fg:w="57"/><text x="88.9659%" y="303.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (34 samples, 0.03%)</title><rect x="88.7619%" y="293" width="0.0274%" height="15" fill="rgb(236,106,1)" fg:x="110000" fg:w="34"/><text x="89.0119%" y="303.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (31 samples, 0.03%)</title><rect x="88.7644%" y="277" width="0.0250%" height="15" fill="rgb(219,228,13)" fg:x="110003" fg:w="31"/><text x="89.0144%" y="287.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (31 samples, 0.03%)</title><rect x="88.7644%" y="261" width="0.0250%" height="15" fill="rgb(238,30,35)" fg:x="110003" fg:w="31"/><text x="89.0144%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (31 samples, 0.03%)</title><rect x="88.7644%" y="245" width="0.0250%" height="15" fill="rgb(236,70,23)" fg:x="110003" fg:w="31"/><text x="89.0144%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="89.2033%" y="229" width="0.0121%" height="15" fill="rgb(249,104,48)" fg:x="110547" fg:w="15"/><text x="89.4533%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (15 samples, 0.01%)</title><rect x="89.2033%" y="213" width="0.0121%" height="15" fill="rgb(254,117,50)" fg:x="110547" fg:w="15"/><text x="89.4533%" y="223.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="89.2154%" y="229" width="0.0161%" height="15" fill="rgb(223,152,4)" fg:x="110562" fg:w="20"/><text x="89.4654%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (17 samples, 0.01%)</title><rect x="89.4728%" y="181" width="0.0137%" height="15" fill="rgb(245,6,2)" fg:x="110881" fg:w="17"/><text x="89.7228%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (17 samples, 0.01%)</title><rect x="89.4728%" y="165" width="0.0137%" height="15" fill="rgb(249,150,24)" fg:x="110881" fg:w="17"/><text x="89.7228%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (17 samples, 0.01%)</title><rect x="89.4728%" y="149" width="0.0137%" height="15" fill="rgb(228,185,42)" fg:x="110881" fg:w="17"/><text x="89.7228%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="89.4728%" y="133" width="0.0137%" height="15" fill="rgb(226,39,33)" fg:x="110881" fg:w="17"/><text x="89.7228%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (15 samples, 0.01%)</title><rect x="89.4744%" y="117" width="0.0121%" height="15" fill="rgb(221,166,19)" fg:x="110883" fg:w="15"/><text x="89.7244%" y="127.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (340 samples, 0.27%)</title><rect x="89.2316%" y="229" width="0.2744%" height="15" fill="rgb(209,109,2)" fg:x="110582" fg:w="340"/><text x="89.4816%" y="239.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (340 samples, 0.27%)</title><rect x="89.2316%" y="213" width="0.2744%" height="15" fill="rgb(252,216,26)" fg:x="110582" fg:w="340"/><text x="89.4816%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (41 samples, 0.03%)</title><rect x="89.4728%" y="197" width="0.0331%" height="15" fill="rgb(227,173,36)" fg:x="110881" fg:w="41"/><text x="89.7228%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (24 samples, 0.02%)</title><rect x="89.4866%" y="181" width="0.0194%" height="15" fill="rgb(209,90,7)" fg:x="110898" fg:w="24"/><text x="89.7366%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (23 samples, 0.02%)</title><rect x="89.4874%" y="165" width="0.0186%" height="15" fill="rgb(250,194,11)" fg:x="110899" fg:w="23"/><text x="89.7374%" y="175.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="89.5059%" y="229" width="0.0161%" height="15" fill="rgb(220,72,50)" fg:x="110922" fg:w="20"/><text x="89.7559%" y="239.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (282 samples, 0.23%)</title><rect x="89.5221%" y="229" width="0.2276%" height="15" fill="rgb(222,106,48)" fg:x="110942" fg:w="282"/><text x="89.7721%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (18 samples, 0.01%)</title><rect x="89.7351%" y="213" width="0.0145%" height="15" fill="rgb(216,220,45)" fg:x="111206" fg:w="18"/><text x="89.9851%" y="223.50"></text></g><g><title>[libc-2.31.so] (211 samples, 0.17%)</title><rect x="89.7536%" y="213" width="0.1703%" height="15" fill="rgb(234,112,18)" fg:x="111229" fg:w="211"/><text x="90.0036%" y="223.50"></text></g><g><title>[libc-2.31.so] (468 samples, 0.38%)</title><rect x="89.9457%" y="197" width="0.3776%" height="15" fill="rgb(206,179,9)" fg:x="111467" fg:w="468"/><text x="90.1957%" y="207.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (287 samples, 0.23%)</title><rect x="90.4613%" y="85" width="0.2316%" height="15" fill="rgb(215,115,40)" fg:x="112106" fg:w="287"/><text x="90.7113%" y="95.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (968 samples, 0.78%)</title><rect x="89.9239%" y="213" width="0.7811%" height="15" fill="rgb(222,69,34)" fg:x="111440" fg:w="968"/><text x="90.1739%" y="223.50"></text></g><g><title>alloc::alloc::exchange_malloc (473 samples, 0.38%)</title><rect x="90.3233%" y="197" width="0.3817%" height="15" fill="rgb(209,161,10)" fg:x="111935" fg:w="473"/><text x="90.5733%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (473 samples, 0.38%)</title><rect x="90.3233%" y="181" width="0.3817%" height="15" fill="rgb(217,6,38)" fg:x="111935" fg:w="473"/><text x="90.5733%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (473 samples, 0.38%)</title><rect x="90.3233%" y="165" width="0.3817%" height="15" fill="rgb(229,229,48)" fg:x="111935" fg:w="473"/><text x="90.5733%" y="175.50"></text></g><g><title>alloc::alloc::alloc (473 samples, 0.38%)</title><rect x="90.3233%" y="149" width="0.3817%" height="15" fill="rgb(225,21,28)" fg:x="111935" fg:w="473"/><text x="90.5733%" y="159.50"></text></g><g><title>__rg_alloc (473 samples, 0.38%)</title><rect x="90.3233%" y="133" width="0.3817%" height="15" fill="rgb(206,33,13)" fg:x="111935" fg:w="473"/><text x="90.5733%" y="143.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (473 samples, 0.38%)</title><rect x="90.3233%" y="117" width="0.3817%" height="15" fill="rgb(242,178,17)" fg:x="111935" fg:w="473"/><text x="90.5733%" y="127.50"></text></g><g><title>sn_rust_alloc (446 samples, 0.36%)</title><rect x="90.3451%" y="101" width="0.3599%" height="15" fill="rgb(220,162,5)" fg:x="111962" fg:w="446"/><text x="90.5951%" y="111.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (15 samples, 0.01%)</title><rect x="90.6929%" y="85" width="0.0121%" height="15" fill="rgb(210,33,43)" fg:x="112393" fg:w="15"/><text x="90.9429%" y="95.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (1,224 samples, 0.99%)</title><rect x="89.7496%" y="229" width="0.9877%" height="15" fill="rgb(216,116,54)" fg:x="111224" fg:w="1224"/><text x="89.9996%" y="239.50"></text></g><g><title>core::future::from_generator (40 samples, 0.03%)</title><rect x="90.7050%" y="213" width="0.0323%" height="15" fill="rgb(249,92,24)" fg:x="112408" fg:w="40"/><text x="90.9550%" y="223.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (97 samples, 0.08%)</title><rect x="90.7623%" y="213" width="0.0783%" height="15" fill="rgb(231,189,14)" fg:x="112479" fg:w="97"/><text x="91.0123%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47 samples, 0.04%)</title><rect x="90.8026%" y="197" width="0.0379%" height="15" fill="rgb(230,8,41)" fg:x="112529" fg:w="47"/><text x="91.0526%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.02%)</title><rect x="90.8196%" y="181" width="0.0210%" height="15" fill="rgb(249,7,27)" fg:x="112550" fg:w="26"/><text x="91.0696%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.02%)</title><rect x="90.8196%" y="165" width="0.0210%" height="15" fill="rgb(232,86,5)" fg:x="112550" fg:w="26"/><text x="91.0696%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.02%)</title><rect x="90.8196%" y="149" width="0.0210%" height="15" fill="rgb(224,175,18)" fg:x="112550" fg:w="26"/><text x="91.0696%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="90.8220%" y="133" width="0.0186%" height="15" fill="rgb(220,129,12)" fg:x="112553" fg:w="23"/><text x="91.0720%" y="143.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (647 samples, 0.52%)</title><rect x="90.7373%" y="229" width="0.5221%" height="15" fill="rgb(210,19,36)" fg:x="112448" fg:w="647"/><text x="90.9873%" y="239.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (519 samples, 0.42%)</title><rect x="90.8406%" y="213" width="0.4188%" height="15" fill="rgb(219,96,14)" fg:x="112576" fg:w="519"/><text x="91.0906%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="91.2432%" y="197" width="0.0161%" height="15" fill="rgb(249,106,1)" fg:x="113075" fg:w="20"/><text x="91.4932%" y="207.50"></text></g><g><title>[libc-2.31.so] (1,998 samples, 1.61%)</title><rect x="91.2594%" y="229" width="1.6122%" height="15" fill="rgb(249,155,20)" fg:x="113095" fg:w="1998"/><text x="91.5094%" y="239.50"></text></g><g><title>sn_rust_dealloc (158 samples, 0.13%)</title><rect x="92.8950%" y="69" width="0.1275%" height="15" fill="rgb(244,168,9)" fg:x="115122" fg:w="158"/><text x="93.1450%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (198 samples, 0.16%)</title><rect x="92.8716%" y="229" width="0.1598%" height="15" fill="rgb(216,23,50)" fg:x="115093" fg:w="198"/><text x="93.1216%" y="239.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (198 samples, 0.16%)</title><rect x="92.8716%" y="213" width="0.1598%" height="15" fill="rgb(224,219,20)" fg:x="115093" fg:w="198"/><text x="93.1216%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (181 samples, 0.15%)</title><rect x="92.8853%" y="197" width="0.1461%" height="15" fill="rgb(222,156,15)" fg:x="115110" fg:w="181"/><text x="93.1353%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (181 samples, 0.15%)</title><rect x="92.8853%" y="181" width="0.1461%" height="15" fill="rgb(231,97,17)" fg:x="115110" fg:w="181"/><text x="93.1353%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (181 samples, 0.15%)</title><rect x="92.8853%" y="165" width="0.1461%" height="15" fill="rgb(218,70,48)" fg:x="115110" fg:w="181"/><text x="93.1353%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 0.15%)</title><rect x="92.8853%" y="149" width="0.1461%" height="15" fill="rgb(212,196,52)" fg:x="115110" fg:w="181"/><text x="93.1353%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (181 samples, 0.15%)</title><rect x="92.8853%" y="133" width="0.1461%" height="15" fill="rgb(243,203,18)" fg:x="115110" fg:w="181"/><text x="93.1353%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (181 samples, 0.15%)</title><rect x="92.8853%" y="117" width="0.1461%" height="15" fill="rgb(252,125,41)" fg:x="115110" fg:w="181"/><text x="93.1353%" y="127.50"></text></g><g><title>__rg_dealloc (181 samples, 0.15%)</title><rect x="92.8853%" y="101" width="0.1461%" height="15" fill="rgb(223,180,33)" fg:x="115110" fg:w="181"/><text x="93.1353%" y="111.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (181 samples, 0.15%)</title><rect x="92.8853%" y="85" width="0.1461%" height="15" fill="rgb(254,159,46)" fg:x="115110" fg:w="181"/><text x="93.1353%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (49 samples, 0.04%)</title><rect x="93.0314%" y="229" width="0.0395%" height="15" fill="rgb(254,38,10)" fg:x="115291" fg:w="49"/><text x="93.2814%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (49 samples, 0.04%)</title><rect x="93.0314%" y="213" width="0.0395%" height="15" fill="rgb(208,217,32)" fg:x="115291" fg:w="49"/><text x="93.2814%" y="223.50"></text></g><g><title>sn_rust_dealloc (66 samples, 0.05%)</title><rect x="93.1064%" y="117" width="0.0533%" height="15" fill="rgb(221,120,13)" fg:x="115384" fg:w="66"/><text x="93.3564%" y="127.50"></text></g><g><title>alloc::alloc::box_free (104 samples, 0.08%)</title><rect x="93.0790%" y="197" width="0.0839%" height="15" fill="rgb(246,54,52)" fg:x="115350" fg:w="104"/><text x="93.3290%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (103 samples, 0.08%)</title><rect x="93.0798%" y="181" width="0.0831%" height="15" fill="rgb(242,34,25)" fg:x="115351" fg:w="103"/><text x="93.3298%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (85 samples, 0.07%)</title><rect x="93.0943%" y="165" width="0.0686%" height="15" fill="rgb(247,209,9)" fg:x="115369" fg:w="85"/><text x="93.3443%" y="175.50"></text></g><g><title>__rg_dealloc (85 samples, 0.07%)</title><rect x="93.0943%" y="149" width="0.0686%" height="15" fill="rgb(228,71,26)" fg:x="115369" fg:w="85"/><text x="93.3443%" y="159.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (85 samples, 0.07%)</title><rect x="93.0943%" y="133" width="0.0686%" height="15" fill="rgb(222,145,49)" fg:x="115369" fg:w="85"/><text x="93.3443%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (124 samples, 0.10%)</title><rect x="93.0709%" y="229" width="0.1001%" height="15" fill="rgb(218,121,17)" fg:x="115340" fg:w="124"/><text x="93.3209%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (124 samples, 0.10%)</title><rect x="93.0709%" y="213" width="0.1001%" height="15" fill="rgb(244,50,7)" fg:x="115340" fg:w="124"/><text x="93.3209%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (114 samples, 0.09%)</title><rect x="93.2404%" y="213" width="0.0920%" height="15" fill="rgb(246,229,37)" fg:x="115550" fg:w="114"/><text x="93.4904%" y="223.50"></text></g><g><title>core::time::Duration::as_nanos (99 samples, 0.08%)</title><rect x="93.3324%" y="213" width="0.0799%" height="15" fill="rgb(225,18,5)" fg:x="115664" fg:w="99"/><text x="93.5824%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (442 samples, 0.36%)</title><rect x="93.4123%" y="197" width="0.3567%" height="15" fill="rgb(213,204,8)" fg:x="115763" fg:w="442"/><text x="93.6623%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (171 samples, 0.14%)</title><rect x="93.8980%" y="165" width="0.1380%" height="15" fill="rgb(238,103,6)" fg:x="116365" fg:w="171"/><text x="94.1480%" y="175.50"></text></g><g><title>core::cmp::PartialOrd::ge (171 samples, 0.14%)</title><rect x="93.8980%" y="149" width="0.1380%" height="15" fill="rgb(222,25,35)" fg:x="116365" fg:w="171"/><text x="94.1480%" y="159.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (160 samples, 0.13%)</title><rect x="93.9069%" y="133" width="0.1291%" height="15" fill="rgb(213,203,35)" fg:x="116376" fg:w="160"/><text x="94.1569%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (65 samples, 0.05%)</title><rect x="93.9836%" y="117" width="0.0525%" height="15" fill="rgb(221,79,53)" fg:x="116471" fg:w="65"/><text x="94.2336%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (65 samples, 0.05%)</title><rect x="93.9836%" y="101" width="0.0525%" height="15" fill="rgb(243,200,35)" fg:x="116471" fg:w="65"/><text x="94.2336%" y="111.50"></text></g><g><title>std::time::SystemTime::duration_since (834 samples, 0.67%)</title><rect x="93.4123%" y="213" width="0.6730%" height="15" fill="rgb(248,60,25)" fg:x="115763" fg:w="834"/><text x="93.6623%" y="223.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (392 samples, 0.32%)</title><rect x="93.7689%" y="197" width="0.3163%" height="15" fill="rgb(227,53,46)" fg:x="116205" fg:w="392"/><text x="94.0189%" y="207.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (392 samples, 0.32%)</title><rect x="93.7689%" y="181" width="0.3163%" height="15" fill="rgb(216,120,32)" fg:x="116205" fg:w="392"/><text x="94.0189%" y="191.50"></text></g><g><title>core::time::Duration::new (61 samples, 0.05%)</title><rect x="94.0360%" y="165" width="0.0492%" height="15" fill="rgb(220,134,1)" fg:x="116536" fg:w="61"/><text x="94.2860%" y="175.50"></text></g><g><title>tremor_common::time::nanotime (3,131 samples, 2.53%)</title><rect x="93.1710%" y="229" width="2.5265%" height="15" fill="rgb(237,168,5)" fg:x="115464" fg:w="3131"/><text x="93.4210%" y="239.50">tr..</text></g><g><title>std::time::SystemTime::now (1,998 samples, 1.61%)</title><rect x="94.0852%" y="213" width="1.6122%" height="15" fill="rgb(231,100,33)" fg:x="116597" fg:w="1998"/><text x="94.3352%" y="223.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (1,998 samples, 1.61%)</title><rect x="94.0852%" y="197" width="1.6122%" height="15" fill="rgb(236,177,47)" fg:x="116597" fg:w="1998"/><text x="94.3352%" y="207.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1,998 samples, 1.61%)</title><rect x="94.0852%" y="181" width="1.6122%" height="15" fill="rgb(235,7,49)" fg:x="116597" fg:w="1998"/><text x="94.3352%" y="191.50"></text></g><g><title>__clock_gettime (1,594 samples, 1.29%)</title><rect x="94.4112%" y="165" width="1.2862%" height="15" fill="rgb(232,119,22)" fg:x="117001" fg:w="1594"/><text x="94.6612%" y="175.50"></text></g><g><title>__vdso_clock_gettime (1,498 samples, 1.21%)</title><rect x="94.4887%" y="149" width="1.2088%" height="15" fill="rgb(254,73,53)" fg:x="117097" fg:w="1498"/><text x="94.7387%" y="159.50"></text></g><g><title>[[vdso]] (1,331 samples, 1.07%)</title><rect x="94.6234%" y="133" width="1.0740%" height="15" fill="rgb(251,35,20)" fg:x="117264" fg:w="1331"/><text x="94.8734%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (15 samples, 0.01%)</title><rect x="95.7080%" y="213" width="0.0121%" height="15" fill="rgb(241,119,20)" fg:x="118608" fg:w="15"/><text x="95.9580%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (21 samples, 0.02%)</title><rect x="95.7201%" y="165" width="0.0169%" height="15" fill="rgb(207,102,14)" fg:x="118623" fg:w="21"/><text x="95.9701%" y="175.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (19 samples, 0.02%)</title><rect x="95.7217%" y="149" width="0.0153%" height="15" fill="rgb(248,201,50)" fg:x="118625" fg:w="19"/><text x="95.9717%" y="159.50"></text></g><g><title>core::mem::drop (53 samples, 0.04%)</title><rect x="95.7370%" y="165" width="0.0428%" height="15" fill="rgb(222,185,44)" fg:x="118644" fg:w="53"/><text x="95.9870%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (53 samples, 0.04%)</title><rect x="95.7370%" y="149" width="0.0428%" height="15" fill="rgb(218,107,18)" fg:x="118644" fg:w="53"/><text x="95.9870%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="95.7523%" y="133" width="0.0274%" height="15" fill="rgb(237,177,39)" fg:x="118663" fg:w="34"/><text x="96.0023%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (15 samples, 0.01%)</title><rect x="95.7677%" y="117" width="0.0121%" height="15" fill="rgb(246,69,6)" fg:x="118682" fg:w="15"/><text x="96.0177%" y="127.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (15 samples, 0.01%)</title><rect x="95.7677%" y="101" width="0.0121%" height="15" fill="rgb(234,208,37)" fg:x="118682" fg:w="15"/><text x="96.0177%" y="111.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (15 samples, 0.01%)</title><rect x="95.7677%" y="85" width="0.0121%" height="15" fill="rgb(225,4,6)" fg:x="118682" fg:w="15"/><text x="96.0177%" y="95.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.01%)</title><rect x="95.7677%" y="69" width="0.0121%" height="15" fill="rgb(233,45,0)" fg:x="118682" fg:w="15"/><text x="96.0177%" y="79.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="95.7677%" y="53" width="0.0121%" height="15" fill="rgb(226,136,5)" fg:x="118682" fg:w="15"/><text x="96.0177%" y="63.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="95.7685%" y="37" width="0.0113%" height="15" fill="rgb(211,91,47)" fg:x="118683" fg:w="14"/><text x="96.0185%" y="47.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (120 samples, 0.10%)</title><rect x="95.6975%" y="229" width="0.0968%" height="15" fill="rgb(242,88,51)" fg:x="118595" fg:w="120"/><text x="95.9475%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (92 samples, 0.07%)</title><rect x="95.7201%" y="213" width="0.0742%" height="15" fill="rgb(230,91,28)" fg:x="118623" fg:w="92"/><text x="95.9701%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (92 samples, 0.07%)</title><rect x="95.7201%" y="197" width="0.0742%" height="15" fill="rgb(254,186,29)" fg:x="118623" fg:w="92"/><text x="95.9701%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.07%)</title><rect x="95.7201%" y="181" width="0.0742%" height="15" fill="rgb(238,6,4)" fg:x="118623" fg:w="92"/><text x="95.9701%" y="191.50"></text></g><g><title>core::ptr::read (18 samples, 0.01%)</title><rect x="95.7798%" y="165" width="0.0145%" height="15" fill="rgb(221,151,16)" fg:x="118697" fg:w="18"/><text x="96.0298%" y="175.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (17 samples, 0.01%)</title><rect x="95.7943%" y="229" width="0.0137%" height="15" fill="rgb(251,143,52)" fg:x="118715" fg:w="17"/><text x="96.0443%" y="239.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (8,702 samples, 7.02%)</title><rect x="88.7974%" y="245" width="7.0219%" height="15" fill="rgb(206,90,15)" fg:x="110044" fg:w="8702"/><text x="89.0474%" y="255.50">tremor_ru..</text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::periodic_flush (14 samples, 0.01%)</title><rect x="95.8080%" y="229" width="0.0113%" height="15" fill="rgb(218,35,8)" fg:x="118732" fg:w="14"/><text x="96.0580%" y="239.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,709 samples, 7.03%)</title><rect x="88.7934%" y="277" width="7.0275%" height="15" fill="rgb(239,215,6)" fg:x="110039" fg:w="8709"/><text x="89.0434%" y="287.50">&lt;async_st..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,709 samples, 7.03%)</title><rect x="88.7934%" y="261" width="7.0275%" height="15" fill="rgb(245,116,39)" fg:x="110039" fg:w="8709"/><text x="89.0434%" y="271.50">&lt;core::fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,960 samples, 7.23%)</title><rect x="88.5997%" y="389" width="7.2301%" height="15" fill="rgb(242,65,28)" fg:x="109799" fg:w="8960"/><text x="88.8497%" y="399.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,955 samples, 7.23%)</title><rect x="88.6038%" y="373" width="7.2260%" height="15" fill="rgb(252,132,53)" fg:x="109804" fg:w="8955"/><text x="88.8538%" y="383.50">async_exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,830 samples, 7.13%)</title><rect x="88.7046%" y="357" width="7.1252%" height="15" fill="rgb(224,159,50)" fg:x="109929" fg:w="8830"/><text x="88.9546%" y="367.50">&lt;async_std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,830 samples, 7.13%)</title><rect x="88.7046%" y="341" width="7.1252%" height="15" fill="rgb(224,93,4)" fg:x="109929" fg:w="8830"/><text x="88.9546%" y="351.50">async_std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,825 samples, 7.12%)</title><rect x="88.7087%" y="325" width="7.1211%" height="15" fill="rgb(208,81,34)" fg:x="109934" fg:w="8825"/><text x="88.9587%" y="335.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,821 samples, 7.12%)</title><rect x="88.7119%" y="309" width="7.1179%" height="15" fill="rgb(233,92,54)" fg:x="109938" fg:w="8821"/><text x="88.9619%" y="319.50">std::threa..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,725 samples, 7.04%)</title><rect x="88.7894%" y="293" width="7.0404%" height="15" fill="rgb(237,21,14)" fg:x="110034" fg:w="8725"/><text x="89.0394%" y="303.50">async_std..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,963 samples, 7.23%)</title><rect x="88.5997%" y="405" width="7.2325%" height="15" fill="rgb(249,128,51)" fg:x="109799" fg:w="8963"/><text x="88.8497%" y="415.50">&lt;core::pin..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (61 samples, 0.05%)</title><rect x="95.8330%" y="405" width="0.0492%" height="15" fill="rgb(223,129,24)" fg:x="118763" fg:w="61"/><text x="96.0830%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (57 samples, 0.05%)</title><rect x="95.8363%" y="389" width="0.0460%" height="15" fill="rgb(231,168,25)" fg:x="118767" fg:w="57"/><text x="96.0863%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (57 samples, 0.05%)</title><rect x="95.8363%" y="373" width="0.0460%" height="15" fill="rgb(224,39,20)" fg:x="118767" fg:w="57"/><text x="96.0863%" y="383.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (14 samples, 0.01%)</title><rect x="95.8855%" y="325" width="0.0113%" height="15" fill="rgb(225,152,53)" fg:x="118828" fg:w="14"/><text x="96.1355%" y="335.50"></text></g><g><title>core::task::wake::Waker::wake (18 samples, 0.01%)</title><rect x="95.8855%" y="357" width="0.0145%" height="15" fill="rgb(252,17,24)" fg:x="118828" fg:w="18"/><text x="96.1355%" y="367.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (18 samples, 0.01%)</title><rect x="95.8855%" y="341" width="0.0145%" height="15" fill="rgb(250,114,30)" fg:x="118828" fg:w="18"/><text x="96.1355%" y="351.50"></text></g><g><title>async_executor::State::notify (25 samples, 0.02%)</title><rect x="95.8823%" y="373" width="0.0202%" height="15" fill="rgb(229,5,4)" fg:x="118824" fg:w="25"/><text x="96.1323%" y="383.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (30 samples, 0.02%)</title><rect x="95.8823%" y="389" width="0.0242%" height="15" fill="rgb(225,176,49)" fg:x="118824" fg:w="30"/><text x="96.1323%" y="399.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (32 samples, 0.03%)</title><rect x="95.8823%" y="405" width="0.0258%" height="15" fill="rgb(224,221,49)" fg:x="118824" fg:w="32"/><text x="96.1323%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (319 samples, 0.26%)</title><rect x="95.9081%" y="405" width="0.2574%" height="15" fill="rgb(253,169,27)" fg:x="118856" fg:w="319"/><text x="96.1581%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (319 samples, 0.26%)</title><rect x="95.9081%" y="389" width="0.2574%" height="15" fill="rgb(211,206,16)" fg:x="118856" fg:w="319"/><text x="96.1581%" y="399.50"></text></g><g><title>async_task::runnable::Runnable::run (9,531 samples, 7.69%)</title><rect x="88.4819%" y="437" width="7.6908%" height="15" fill="rgb(244,87,35)" fg:x="109653" fg:w="9531"/><text x="88.7319%" y="447.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,470 samples, 7.64%)</title><rect x="88.5312%" y="421" width="7.6416%" height="15" fill="rgb(246,28,10)" fg:x="109714" fg:w="9470"/><text x="88.7812%" y="431.50">async_task..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (20,204 samples, 16.30%)</title><rect x="79.8906%" y="485" width="16.3031%" height="15" fill="rgb(229,12,44)" fg:x="99006" fg:w="20204"/><text x="80.1406%" y="495.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,204 samples, 16.30%)</title><rect x="79.8906%" y="469" width="16.3031%" height="15" fill="rgb(210,145,37)" fg:x="99006" fg:w="20204"/><text x="80.1406%" y="479.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (20,202 samples, 16.30%)</title><rect x="79.8922%" y="453" width="16.3015%" height="15" fill="rgb(227,112,52)" fg:x="99008" fg:w="20202"/><text x="80.1422%" y="463.50">async_executor::Executor:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (26 samples, 0.02%)</title><rect x="96.1727%" y="437" width="0.0210%" height="15" fill="rgb(238,155,34)" fg:x="119184" fg:w="26"/><text x="96.4227%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (26 samples, 0.02%)</title><rect x="96.1727%" y="421" width="0.0210%" height="15" fill="rgb(239,226,36)" fg:x="119184" fg:w="26"/><text x="96.4227%" y="431.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (20,252 samples, 16.34%)</title><rect x="79.8575%" y="501" width="16.3419%" height="15" fill="rgb(230,16,23)" fg:x="98965" fg:w="20252"/><text x="80.1075%" y="511.50">async_executor::Executor:..</text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (43 samples, 0.03%)</title><rect x="96.3091%" y="245" width="0.0347%" height="15" fill="rgb(236,171,36)" fg:x="119353" fg:w="43"/><text x="96.5591%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 0.03%)</title><rect x="96.3107%" y="229" width="0.0331%" height="15" fill="rgb(221,22,14)" fg:x="119355" fg:w="41"/><text x="96.5607%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38 samples, 0.03%)</title><rect x="96.3132%" y="213" width="0.0307%" height="15" fill="rgb(242,43,11)" fg:x="119358" fg:w="38"/><text x="96.5632%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.02%)</title><rect x="96.3196%" y="197" width="0.0242%" height="15" fill="rgb(232,69,23)" fg:x="119366" fg:w="30"/><text x="96.5696%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (30 samples, 0.02%)</title><rect x="96.3196%" y="181" width="0.0242%" height="15" fill="rgb(216,180,54)" fg:x="119366" fg:w="30"/><text x="96.5696%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (26 samples, 0.02%)</title><rect x="96.3228%" y="165" width="0.0210%" height="15" fill="rgb(216,5,24)" fg:x="119370" fg:w="26"/><text x="96.5728%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (26 samples, 0.02%)</title><rect x="96.3228%" y="149" width="0.0210%" height="15" fill="rgb(225,89,9)" fg:x="119370" fg:w="26"/><text x="96.5728%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.04%)</title><rect x="96.3075%" y="293" width="0.0379%" height="15" fill="rgb(243,75,33)" fg:x="119351" fg:w="47"/><text x="96.5575%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (47 samples, 0.04%)</title><rect x="96.3075%" y="277" width="0.0379%" height="15" fill="rgb(247,141,45)" fg:x="119351" fg:w="47"/><text x="96.5575%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.04%)</title><rect x="96.3075%" y="261" width="0.0379%" height="15" fill="rgb(232,177,36)" fg:x="119351" fg:w="47"/><text x="96.5575%" y="271.50"></text></g><g><title>concurrent_queue::full_fence (37 samples, 0.03%)</title><rect x="96.3842%" y="261" width="0.0299%" height="15" fill="rgb(219,125,36)" fg:x="119446" fg:w="37"/><text x="96.6342%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (36 samples, 0.03%)</title><rect x="96.3850%" y="245" width="0.0290%" height="15" fill="rgb(227,94,9)" fg:x="119447" fg:w="36"/><text x="96.6350%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (36 samples, 0.03%)</title><rect x="96.3850%" y="229" width="0.0290%" height="15" fill="rgb(240,34,52)" fg:x="119447" fg:w="36"/><text x="96.6350%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (36 samples, 0.03%)</title><rect x="96.3850%" y="213" width="0.0290%" height="15" fill="rgb(216,45,12)" fg:x="119447" fg:w="36"/><text x="96.6350%" y="223.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (146 samples, 0.12%)</title><rect x="96.3656%" y="277" width="0.1178%" height="15" fill="rgb(246,21,19)" fg:x="119423" fg:w="146"/><text x="96.6156%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (86 samples, 0.07%)</title><rect x="96.4140%" y="261" width="0.0694%" height="15" fill="rgb(213,98,42)" fg:x="119483" fg:w="86"/><text x="96.6640%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (86 samples, 0.07%)</title><rect x="96.4140%" y="245" width="0.0694%" height="15" fill="rgb(250,136,47)" fg:x="119483" fg:w="86"/><text x="96.6640%" y="255.50"></text></g><g><title>concurrent_queue::full_fence (46 samples, 0.04%)</title><rect x="96.4915%" y="261" width="0.0371%" height="15" fill="rgb(251,124,27)" fg:x="119579" fg:w="46"/><text x="96.7415%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (46 samples, 0.04%)</title><rect x="96.4915%" y="245" width="0.0371%" height="15" fill="rgb(229,180,14)" fg:x="119579" fg:w="46"/><text x="96.7415%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (46 samples, 0.04%)</title><rect x="96.4915%" y="229" width="0.0371%" height="15" fill="rgb(245,216,25)" fg:x="119579" fg:w="46"/><text x="96.7415%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (46 samples, 0.04%)</title><rect x="96.4915%" y="213" width="0.0371%" height="15" fill="rgb(251,43,5)" fg:x="119579" fg:w="46"/><text x="96.7415%" y="223.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (241 samples, 0.19%)</title><rect x="96.3454%" y="293" width="0.1945%" height="15" fill="rgb(250,128,24)" fg:x="119398" fg:w="241"/><text x="96.5954%" y="303.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (70 samples, 0.06%)</title><rect x="96.4834%" y="277" width="0.0565%" height="15" fill="rgb(217,117,27)" fg:x="119569" fg:w="70"/><text x="96.7334%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (46 samples, 0.04%)</title><rect x="96.5399%" y="293" width="0.0371%" height="15" fill="rgb(245,147,4)" fg:x="119639" fg:w="46"/><text x="96.7899%" y="303.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="96.5399%" y="277" width="0.0371%" height="15" fill="rgb(242,201,35)" fg:x="119639" fg:w="46"/><text x="96.7899%" y="287.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (42 samples, 0.03%)</title><rect x="96.5431%" y="261" width="0.0339%" height="15" fill="rgb(218,181,1)" fg:x="119643" fg:w="42"/><text x="96.7931%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (42 samples, 0.03%)</title><rect x="96.5431%" y="245" width="0.0339%" height="15" fill="rgb(222,6,29)" fg:x="119643" fg:w="42"/><text x="96.7931%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (39 samples, 0.03%)</title><rect x="96.5455%" y="229" width="0.0315%" height="15" fill="rgb(208,186,3)" fg:x="119646" fg:w="39"/><text x="96.7955%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (39 samples, 0.03%)</title><rect x="96.5455%" y="213" width="0.0315%" height="15" fill="rgb(216,36,26)" fg:x="119646" fg:w="39"/><text x="96.7955%" y="223.50"></text></g><g><title>fastrand::RNG::__getit (20 samples, 0.02%)</title><rect x="96.5794%" y="245" width="0.0161%" height="15" fill="rgb(248,201,23)" fg:x="119688" fg:w="20"/><text x="96.8294%" y="255.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (16 samples, 0.01%)</title><rect x="96.5827%" y="229" width="0.0129%" height="15" fill="rgb(251,170,31)" fg:x="119692" fg:w="16"/><text x="96.8327%" y="239.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (16 samples, 0.01%)</title><rect x="96.5827%" y="213" width="0.0129%" height="15" fill="rgb(207,110,25)" fg:x="119692" fg:w="16"/><text x="96.8327%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (16 samples, 0.01%)</title><rect x="96.5827%" y="197" width="0.0129%" height="15" fill="rgb(250,54,15)" fg:x="119692" fg:w="16"/><text x="96.8327%" y="207.50"></text></g><g><title>fastrand::usize (37 samples, 0.03%)</title><rect x="96.5770%" y="293" width="0.0299%" height="15" fill="rgb(227,68,33)" fg:x="119685" fg:w="37"/><text x="96.8270%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.03%)</title><rect x="96.5778%" y="277" width="0.0290%" height="15" fill="rgb(238,34,41)" fg:x="119686" fg:w="36"/><text x="96.8278%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.03%)</title><rect x="96.5786%" y="261" width="0.0282%" height="15" fill="rgb(220,11,15)" fg:x="119687" fg:w="35"/><text x="96.8286%" y="271.50"></text></g><g><title>fastrand::usize::{{closure}} (14 samples, 0.01%)</title><rect x="96.5956%" y="245" width="0.0113%" height="15" fill="rgb(246,111,35)" fg:x="119708" fg:w="14"/><text x="96.8456%" y="255.50"></text></g><g><title>fastrand::Rng::usize (14 samples, 0.01%)</title><rect x="96.5956%" y="229" width="0.0113%" height="15" fill="rgb(209,88,53)" fg:x="119708" fg:w="14"/><text x="96.8456%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (46 samples, 0.04%)</title><rect x="96.6101%" y="245" width="0.0371%" height="15" fill="rgb(231,185,47)" fg:x="119726" fg:w="46"/><text x="96.8601%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (46 samples, 0.04%)</title><rect x="96.6101%" y="229" width="0.0371%" height="15" fill="rgb(233,154,1)" fg:x="119726" fg:w="46"/><text x="96.8601%" y="239.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (432 samples, 0.35%)</title><rect x="96.3002%" y="309" width="0.3486%" height="15" fill="rgb(225,15,46)" fg:x="119342" fg:w="432"/><text x="96.5502%" y="319.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (52 samples, 0.04%)</title><rect x="96.6069%" y="293" width="0.0420%" height="15" fill="rgb(211,135,41)" fg:x="119722" fg:w="52"/><text x="96.8569%" y="303.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (49 samples, 0.04%)</title><rect x="96.6093%" y="277" width="0.0395%" height="15" fill="rgb(208,54,0)" fg:x="119725" fg:w="49"/><text x="96.8593%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (49 samples, 0.04%)</title><rect x="96.6093%" y="261" width="0.0395%" height="15" fill="rgb(244,136,14)" fg:x="119725" fg:w="49"/><text x="96.8593%" y="271.50"></text></g><g><title>async_executor::Sleepers::update (40 samples, 0.03%)</title><rect x="96.6609%" y="293" width="0.0323%" height="15" fill="rgb(241,56,14)" fg:x="119789" fg:w="40"/><text x="96.9109%" y="303.50"></text></g><g><title>core::task::wake::Waker::will_wake (24 samples, 0.02%)</title><rect x="96.6738%" y="277" width="0.0194%" height="15" fill="rgb(205,80,24)" fg:x="119805" fg:w="24"/><text x="96.9238%" y="287.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="96.6738%" y="261" width="0.0194%" height="15" fill="rgb(220,57,4)" fg:x="119805" fg:w="24"/><text x="96.9238%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (45 samples, 0.04%)</title><rect x="96.6932%" y="293" width="0.0363%" height="15" fill="rgb(226,193,50)" fg:x="119829" fg:w="45"/><text x="96.9432%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="96.6932%" y="277" width="0.0363%" height="15" fill="rgb(231,168,22)" fg:x="119829" fg:w="45"/><text x="96.9432%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (44 samples, 0.04%)</title><rect x="96.6940%" y="261" width="0.0355%" height="15" fill="rgb(254,215,14)" fg:x="119830" fg:w="44"/><text x="96.9440%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (44 samples, 0.04%)</title><rect x="96.6940%" y="245" width="0.0355%" height="15" fill="rgb(211,115,16)" fg:x="119830" fg:w="44"/><text x="96.9440%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (44 samples, 0.04%)</title><rect x="96.6940%" y="229" width="0.0355%" height="15" fill="rgb(236,210,16)" fg:x="119830" fg:w="44"/><text x="96.9440%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (44 samples, 0.04%)</title><rect x="96.6940%" y="213" width="0.0355%" height="15" fill="rgb(221,94,12)" fg:x="119830" fg:w="44"/><text x="96.9440%" y="223.50"></text></g><g><title>async_executor::Ticker::sleep (141 samples, 0.11%)</title><rect x="96.6488%" y="309" width="0.1138%" height="15" fill="rgb(235,218,49)" fg:x="119774" fg:w="141"/><text x="96.8988%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (41 samples, 0.03%)</title><rect x="96.7295%" y="293" width="0.0331%" height="15" fill="rgb(217,114,14)" fg:x="119874" fg:w="41"/><text x="96.9795%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.03%)</title><rect x="96.7328%" y="277" width="0.0299%" height="15" fill="rgb(216,145,22)" fg:x="119878" fg:w="37"/><text x="96.9828%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (37 samples, 0.03%)</title><rect x="96.7328%" y="261" width="0.0299%" height="15" fill="rgb(217,112,39)" fg:x="119878" fg:w="37"/><text x="96.9828%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (37 samples, 0.03%)</title><rect x="96.7328%" y="245" width="0.0299%" height="15" fill="rgb(225,85,32)" fg:x="119878" fg:w="37"/><text x="96.9828%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.03%)</title><rect x="96.7328%" y="229" width="0.0299%" height="15" fill="rgb(245,209,47)" fg:x="119878" fg:w="37"/><text x="96.9828%" y="239.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (630 samples, 0.51%)</title><rect x="96.2567%" y="421" width="0.5084%" height="15" fill="rgb(218,220,15)" fg:x="119288" fg:w="630"/><text x="96.5067%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (611 samples, 0.49%)</title><rect x="96.2720%" y="405" width="0.4930%" height="15" fill="rgb(222,202,31)" fg:x="119307" fg:w="611"/><text x="96.5220%" y="415.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (609 samples, 0.49%)</title><rect x="96.2736%" y="389" width="0.4914%" height="15" fill="rgb(243,203,4)" fg:x="119309" fg:w="609"/><text x="96.5236%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (596 samples, 0.48%)</title><rect x="96.2841%" y="373" width="0.4809%" height="15" fill="rgb(237,92,17)" fg:x="119322" fg:w="596"/><text x="96.5341%" y="383.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (596 samples, 0.48%)</title><rect x="96.2841%" y="357" width="0.4809%" height="15" fill="rgb(231,119,7)" fg:x="119322" fg:w="596"/><text x="96.5341%" y="367.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (583 samples, 0.47%)</title><rect x="96.2946%" y="341" width="0.4704%" height="15" fill="rgb(237,82,41)" fg:x="119335" fg:w="583"/><text x="96.5446%" y="351.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (582 samples, 0.47%)</title><rect x="96.2954%" y="325" width="0.4696%" height="15" fill="rgb(226,81,48)" fg:x="119336" fg:w="582"/><text x="96.5454%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (29 samples, 0.02%)</title><rect x="96.8457%" y="357" width="0.0234%" height="15" fill="rgb(234,70,51)" fg:x="120018" fg:w="29"/><text x="97.0957%" y="367.50"></text></g><g><title>core::mem::replace (29 samples, 0.02%)</title><rect x="96.8457%" y="341" width="0.0234%" height="15" fill="rgb(251,86,4)" fg:x="120018" fg:w="29"/><text x="97.0957%" y="351.50"></text></g><g><title>core::ptr::read (28 samples, 0.02%)</title><rect x="96.8465%" y="325" width="0.0226%" height="15" fill="rgb(244,144,28)" fg:x="120019" fg:w="28"/><text x="97.0965%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (47 samples, 0.04%)</title><rect x="96.8401%" y="373" width="0.0379%" height="15" fill="rgb(232,161,39)" fg:x="120011" fg:w="47"/><text x="97.0901%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (55 samples, 0.04%)</title><rect x="96.8780%" y="373" width="0.0444%" height="15" fill="rgb(247,34,51)" fg:x="120058" fg:w="55"/><text x="97.1280%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (53 samples, 0.04%)</title><rect x="96.8796%" y="357" width="0.0428%" height="15" fill="rgb(225,132,2)" fg:x="120060" fg:w="53"/><text x="97.1296%" y="367.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.04%)</title><rect x="96.8796%" y="341" width="0.0428%" height="15" fill="rgb(209,159,44)" fg:x="120060" fg:w="53"/><text x="97.1296%" y="351.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (49 samples, 0.04%)</title><rect x="96.8828%" y="325" width="0.0395%" height="15" fill="rgb(251,214,1)" fg:x="120064" fg:w="49"/><text x="97.1328%" y="335.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (49 samples, 0.04%)</title><rect x="96.8828%" y="309" width="0.0395%" height="15" fill="rgb(247,84,47)" fg:x="120064" fg:w="49"/><text x="97.1328%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (49 samples, 0.04%)</title><rect x="96.8828%" y="293" width="0.0395%" height="15" fill="rgb(240,111,43)" fg:x="120064" fg:w="49"/><text x="97.1328%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (49 samples, 0.04%)</title><rect x="96.8828%" y="277" width="0.0395%" height="15" fill="rgb(215,214,35)" fg:x="120064" fg:w="49"/><text x="97.1328%" y="287.50"></text></g><g><title>core::task::wake::Waker::will_wake (21 samples, 0.02%)</title><rect x="96.9264%" y="373" width="0.0169%" height="15" fill="rgb(248,207,23)" fg:x="120118" fg:w="21"/><text x="97.1764%" y="383.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="96.9264%" y="357" width="0.0169%" height="15" fill="rgb(214,186,4)" fg:x="120118" fg:w="21"/><text x="97.1764%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.02%)</title><rect x="96.9280%" y="341" width="0.0153%" height="15" fill="rgb(220,133,22)" fg:x="120120" fg:w="19"/><text x="97.1780%" y="351.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="96.9280%" y="325" width="0.0153%" height="15" fill="rgb(239,134,19)" fg:x="120120" fg:w="19"/><text x="97.1780%" y="335.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (231 samples, 0.19%)</title><rect x="96.8086%" y="389" width="0.1864%" height="15" fill="rgb(250,140,9)" fg:x="119972" fg:w="231"/><text x="97.0586%" y="399.50"></text></g><g><title>event_listener::Inner::lock (64 samples, 0.05%)</title><rect x="96.9434%" y="373" width="0.0516%" height="15" fill="rgb(225,59,14)" fg:x="120139" fg:w="64"/><text x="97.1934%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.05%)</title><rect x="96.9450%" y="357" width="0.0500%" height="15" fill="rgb(214,152,51)" fg:x="120141" fg:w="62"/><text x="97.1950%" y="367.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (57 samples, 0.05%)</title><rect x="96.9490%" y="341" width="0.0460%" height="15" fill="rgb(251,227,43)" fg:x="120146" fg:w="57"/><text x="97.1990%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (57 samples, 0.05%)</title><rect x="96.9490%" y="325" width="0.0460%" height="15" fill="rgb(241,96,17)" fg:x="120146" fg:w="57"/><text x="97.1990%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (57 samples, 0.05%)</title><rect x="96.9490%" y="309" width="0.0460%" height="15" fill="rgb(234,198,43)" fg:x="120146" fg:w="57"/><text x="97.1990%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (57 samples, 0.05%)</title><rect x="96.9490%" y="293" width="0.0460%" height="15" fill="rgb(220,108,29)" fg:x="120146" fg:w="57"/><text x="97.1990%" y="303.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (131 samples, 0.11%)</title><rect x="96.9950%" y="389" width="0.1057%" height="15" fill="rgb(226,163,33)" fg:x="120203" fg:w="131"/><text x="97.2450%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (131 samples, 0.11%)</title><rect x="96.9950%" y="373" width="0.1057%" height="15" fill="rgb(205,194,45)" fg:x="120203" fg:w="131"/><text x="97.2450%" y="383.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (92 samples, 0.07%)</title><rect x="97.0265%" y="357" width="0.0742%" height="15" fill="rgb(206,143,44)" fg:x="120242" fg:w="92"/><text x="97.2765%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (87 samples, 0.07%)</title><rect x="97.0305%" y="341" width="0.0702%" height="15" fill="rgb(236,136,36)" fg:x="120247" fg:w="87"/><text x="97.2805%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (87 samples, 0.07%)</title><rect x="97.0305%" y="325" width="0.0702%" height="15" fill="rgb(249,172,42)" fg:x="120247" fg:w="87"/><text x="97.2805%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (87 samples, 0.07%)</title><rect x="97.0305%" y="309" width="0.0702%" height="15" fill="rgb(216,139,23)" fg:x="120247" fg:w="87"/><text x="97.2805%" y="319.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,077 samples, 0.87%)</title><rect x="96.2486%" y="453" width="0.8691%" height="15" fill="rgb(207,166,20)" fg:x="119278" fg:w="1077"/><text x="96.4986%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,068 samples, 0.86%)</title><rect x="96.2559%" y="437" width="0.8618%" height="15" fill="rgb(210,209,22)" fg:x="119287" fg:w="1068"/><text x="96.5059%" y="447.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (437 samples, 0.35%)</title><rect x="96.7650%" y="421" width="0.3526%" height="15" fill="rgb(232,118,20)" fg:x="119918" fg:w="437"/><text x="97.0150%" y="431.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (411 samples, 0.33%)</title><rect x="96.7860%" y="405" width="0.3316%" height="15" fill="rgb(238,113,42)" fg:x="119944" fg:w="411"/><text x="97.0360%" y="415.50"></text></g><g><title>event_listener::Event::listen (21 samples, 0.02%)</title><rect x="97.1007%" y="389" width="0.0169%" height="15" fill="rgb(231,42,5)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="399.50"></text></g><g><title>event_listener::Event::inner (21 samples, 0.02%)</title><rect x="97.1007%" y="373" width="0.0169%" height="15" fill="rgb(243,166,24)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="97.1007%" y="357" width="0.0169%" height="15" fill="rgb(237,226,12)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.02%)</title><rect x="97.1007%" y="341" width="0.0169%" height="15" fill="rgb(229,133,24)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="97.1007%" y="325" width="0.0169%" height="15" fill="rgb(238,33,43)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="97.1007%" y="309" width="0.0169%" height="15" fill="rgb(227,59,38)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="319.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="97.1007%" y="293" width="0.0169%" height="15" fill="rgb(230,97,0)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="303.50"></text></g><g><title>__rg_alloc (21 samples, 0.02%)</title><rect x="97.1007%" y="277" width="0.0169%" height="15" fill="rgb(250,173,50)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (21 samples, 0.02%)</title><rect x="97.1007%" y="261" width="0.0169%" height="15" fill="rgb(240,15,50)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="271.50"></text></g><g><title>sn_rust_alloc (21 samples, 0.02%)</title><rect x="97.1007%" y="245" width="0.0169%" height="15" fill="rgb(221,93,22)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="255.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc_slow&lt;(snmalloc::ZeroMem)0&gt; (21 samples, 0.02%)</title><rect x="97.1007%" y="229" width="0.0169%" height="15" fill="rgb(245,180,53)" fg:x="120334" fg:w="21"/><text x="97.3507%" y="239.50"></text></g><g><title>async_executor::Executor::state (15 samples, 0.01%)</title><rect x="97.1177%" y="453" width="0.0121%" height="15" fill="rgb(231,88,51)" fg:x="120355" fg:w="15"/><text x="97.3677%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (15 samples, 0.01%)</title><rect x="97.1177%" y="437" width="0.0121%" height="15" fill="rgb(240,58,21)" fg:x="120355" fg:w="15"/><text x="97.3677%" y="447.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (15 samples, 0.01%)</title><rect x="97.1177%" y="421" width="0.0121%" height="15" fill="rgb(237,21,10)" fg:x="120355" fg:w="15"/><text x="97.3677%" y="431.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (14 samples, 0.01%)</title><rect x="97.1185%" y="405" width="0.0113%" height="15" fill="rgb(218,43,11)" fg:x="120356" fg:w="14"/><text x="97.3685%" y="415.50"></text></g><g><title>once_cell::imp::initialize_or_wait (14 samples, 0.01%)</title><rect x="97.1185%" y="389" width="0.0113%" height="15" fill="rgb(218,221,29)" fg:x="120356" fg:w="14"/><text x="97.3685%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 0.01%)</title><rect x="97.1185%" y="373" width="0.0113%" height="15" fill="rgb(214,118,42)" fg:x="120356" fg:w="14"/><text x="97.3685%" y="383.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (14 samples, 0.01%)</title><rect x="97.1185%" y="357" width="0.0113%" height="15" fill="rgb(251,200,26)" fg:x="120356" fg:w="14"/><text x="97.3685%" y="367.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (14 samples, 0.01%)</title><rect x="97.1185%" y="341" width="0.0113%" height="15" fill="rgb(237,101,39)" fg:x="120356" fg:w="14"/><text x="97.3685%" y="351.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (14 samples, 0.01%)</title><rect x="97.1185%" y="325" width="0.0113%" height="15" fill="rgb(251,117,11)" fg:x="120356" fg:w="14"/><text x="97.3685%" y="335.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (21,500 samples, 17.35%)</title><rect x="79.7970%" y="533" width="17.3489%" height="15" fill="rgb(216,223,23)" fg:x="98890" fg:w="21500"/><text x="80.0470%" y="543.50">&lt;futures_lite::future::Or&lt;F..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21,427 samples, 17.29%)</title><rect x="79.8559%" y="517" width="17.2900%" height="15" fill="rgb(251,54,12)" fg:x="98963" fg:w="21427"/><text x="80.1059%" y="527.50">&lt;core::future::from_generat..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,173 samples, 0.95%)</title><rect x="96.1994%" y="501" width="0.9465%" height="15" fill="rgb(254,176,54)" fg:x="119217" fg:w="1173"/><text x="96.4494%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,119 samples, 0.90%)</title><rect x="96.2429%" y="485" width="0.9030%" height="15" fill="rgb(210,32,8)" fg:x="119271" fg:w="1119"/><text x="96.4929%" y="495.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,119 samples, 0.90%)</title><rect x="96.2429%" y="469" width="0.9030%" height="15" fill="rgb(235,52,38)" fg:x="119271" fg:w="1119"/><text x="96.4929%" y="479.50"></text></g><g><title>async_executor::Runner::new (20 samples, 0.02%)</title><rect x="97.1298%" y="453" width="0.0161%" height="15" fill="rgb(231,4,44)" fg:x="120370" fg:w="20"/><text x="97.3798%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (20 samples, 0.02%)</title><rect x="97.1298%" y="437" width="0.0161%" height="15" fill="rgb(249,2,32)" fg:x="120370" fg:w="20"/><text x="97.3798%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="97.1459%" y="533" width="0.0105%" height="15" fill="rgb(224,65,26)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="97.1459%" y="517" width="0.0105%" height="15" fill="rgb(250,73,40)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="97.1459%" y="501" width="0.0105%" height="15" fill="rgb(253,177,16)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="97.1459%" y="485" width="0.0105%" height="15" fill="rgb(217,32,34)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="495.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="97.1459%" y="469" width="0.0105%" height="15" fill="rgb(212,7,10)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="479.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="97.1459%" y="453" width="0.0105%" height="15" fill="rgb(245,89,8)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="97.1459%" y="437" width="0.0105%" height="15" fill="rgb(237,16,53)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="447.50"></text></g><g><title>sn_rust_alloc (13 samples, 0.01%)</title><rect x="97.1459%" y="421" width="0.0105%" height="15" fill="rgb(250,204,30)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="431.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc_slow&lt;(snmalloc::ZeroMem)0&gt; (13 samples, 0.01%)</title><rect x="97.1459%" y="405" width="0.0105%" height="15" fill="rgb(208,77,27)" fg:x="120390" fg:w="13"/><text x="97.3959%" y="415.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="97.1596%" y="501" width="0.0178%" height="15" fill="rgb(250,204,28)" fg:x="120407" fg:w="22"/><text x="97.4096%" y="511.50"></text></g><g><title>std::sync::poison::Flag::borrow (22 samples, 0.02%)</title><rect x="97.1596%" y="485" width="0.0178%" height="15" fill="rgb(244,63,21)" fg:x="120407" fg:w="22"/><text x="97.4096%" y="495.50"></text></g><g><title>std::thread::panicking (17 samples, 0.01%)</title><rect x="97.1637%" y="469" width="0.0137%" height="15" fill="rgb(236,85,44)" fg:x="120412" fg:w="17"/><text x="97.4137%" y="479.50"></text></g><g><title>std::panicking::panicking (17 samples, 0.01%)</title><rect x="97.1637%" y="453" width="0.0137%" height="15" fill="rgb(215,98,4)" fg:x="120412" fg:w="17"/><text x="97.4137%" y="463.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (17 samples, 0.01%)</title><rect x="97.1637%" y="437" width="0.0137%" height="15" fill="rgb(235,38,11)" fg:x="120412" fg:w="17"/><text x="97.4137%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.01%)</title><rect x="97.1645%" y="421" width="0.0129%" height="15" fill="rgb(254,186,25)" fg:x="120413" fg:w="16"/><text x="97.4145%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="97.1645%" y="405" width="0.0129%" height="15" fill="rgb(225,55,31)" fg:x="120413" fg:w="16"/><text x="97.4145%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (79 samples, 0.06%)</title><rect x="97.1596%" y="533" width="0.0637%" height="15" fill="rgb(211,15,21)" fg:x="120407" fg:w="79"/><text x="97.4096%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (79 samples, 0.06%)</title><rect x="97.1596%" y="517" width="0.0637%" height="15" fill="rgb(215,187,41)" fg:x="120407" fg:w="79"/><text x="97.4096%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (57 samples, 0.05%)</title><rect x="97.1774%" y="501" width="0.0460%" height="15" fill="rgb(248,69,32)" fg:x="120429" fg:w="57"/><text x="97.4274%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (57 samples, 0.05%)</title><rect x="97.1774%" y="485" width="0.0460%" height="15" fill="rgb(252,102,52)" fg:x="120429" fg:w="57"/><text x="97.4274%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (57 samples, 0.05%)</title><rect x="97.1774%" y="469" width="0.0460%" height="15" fill="rgb(253,140,32)" fg:x="120429" fg:w="57"/><text x="97.4274%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (57 samples, 0.05%)</title><rect x="97.1774%" y="453" width="0.0460%" height="15" fill="rgb(216,56,42)" fg:x="120429" fg:w="57"/><text x="97.4274%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (22 samples, 0.02%)</title><rect x="97.2524%" y="517" width="0.0178%" height="15" fill="rgb(216,184,14)" fg:x="120522" fg:w="22"/><text x="97.5024%" y="527.50"></text></g><g><title>sn_rust_dealloc (45 samples, 0.04%)</title><rect x="97.2879%" y="357" width="0.0363%" height="15" fill="rgb(237,187,27)" fg:x="120566" fg:w="45"/><text x="97.5379%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59 samples, 0.05%)</title><rect x="97.2855%" y="421" width="0.0476%" height="15" fill="rgb(219,65,3)" fg:x="120563" fg:w="59"/><text x="97.5355%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 0.05%)</title><rect x="97.2863%" y="405" width="0.0468%" height="15" fill="rgb(245,83,25)" fg:x="120564" fg:w="58"/><text x="97.5363%" y="415.50"></text></g><g><title>__rg_dealloc (58 samples, 0.05%)</title><rect x="97.2863%" y="389" width="0.0468%" height="15" fill="rgb(214,205,45)" fg:x="120564" fg:w="58"/><text x="97.5363%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (58 samples, 0.05%)</title><rect x="97.2863%" y="373" width="0.0468%" height="15" fill="rgb(241,20,18)" fg:x="120564" fg:w="58"/><text x="97.5363%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.05%)</title><rect x="97.2815%" y="501" width="0.0533%" height="15" fill="rgb(232,163,23)" fg:x="120558" fg:w="66"/><text x="97.5315%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (63 samples, 0.05%)</title><rect x="97.2839%" y="485" width="0.0508%" height="15" fill="rgb(214,5,46)" fg:x="120561" fg:w="63"/><text x="97.5339%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (61 samples, 0.05%)</title><rect x="97.2855%" y="469" width="0.0492%" height="15" fill="rgb(229,78,17)" fg:x="120563" fg:w="61"/><text x="97.5355%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (61 samples, 0.05%)</title><rect x="97.2855%" y="453" width="0.0492%" height="15" fill="rgb(248,89,10)" fg:x="120563" fg:w="61"/><text x="97.5355%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (61 samples, 0.05%)</title><rect x="97.2855%" y="437" width="0.0492%" height="15" fill="rgb(248,54,15)" fg:x="120563" fg:w="61"/><text x="97.5355%" y="447.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (13 samples, 0.01%)</title><rect x="97.3347%" y="453" width="0.0105%" height="15" fill="rgb(223,116,6)" fg:x="120624" fg:w="13"/><text x="97.5847%" y="463.50"></text></g><g><title>alloc::collections::btree::mem::replace (13 samples, 0.01%)</title><rect x="97.3347%" y="437" width="0.0105%" height="15" fill="rgb(205,125,38)" fg:x="120624" fg:w="13"/><text x="97.5847%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="97.3347%" y="501" width="0.0137%" height="15" fill="rgb(251,78,38)" fg:x="120624" fg:w="17"/><text x="97.5847%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="97.3347%" y="485" width="0.0137%" height="15" fill="rgb(253,78,28)" fg:x="120624" fg:w="17"/><text x="97.5847%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (17 samples, 0.01%)</title><rect x="97.3347%" y="469" width="0.0137%" height="15" fill="rgb(209,120,3)" fg:x="120624" fg:w="17"/><text x="97.5847%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (45 samples, 0.04%)</title><rect x="97.3638%" y="469" width="0.0363%" height="15" fill="rgb(238,229,9)" fg:x="120660" fg:w="45"/><text x="97.6138%" y="479.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (32 samples, 0.03%)</title><rect x="97.3743%" y="453" width="0.0258%" height="15" fill="rgb(253,159,18)" fg:x="120673" fg:w="32"/><text x="97.6243%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.03%)</title><rect x="97.3743%" y="437" width="0.0258%" height="15" fill="rgb(244,42,34)" fg:x="120673" fg:w="32"/><text x="97.6243%" y="447.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.02%)</title><rect x="97.3759%" y="421" width="0.0242%" height="15" fill="rgb(224,8,7)" fg:x="120675" fg:w="30"/><text x="97.6259%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (33 samples, 0.03%)</title><rect x="97.4082%" y="437" width="0.0266%" height="15" fill="rgb(210,201,45)" fg:x="120715" fg:w="33"/><text x="97.6582%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (52 samples, 0.04%)</title><rect x="97.4017%" y="469" width="0.0420%" height="15" fill="rgb(252,185,21)" fg:x="120707" fg:w="52"/><text x="97.6517%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (52 samples, 0.04%)</title><rect x="97.4017%" y="453" width="0.0420%" height="15" fill="rgb(223,131,1)" fg:x="120707" fg:w="52"/><text x="97.6517%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (55 samples, 0.04%)</title><rect x="97.5009%" y="261" width="0.0444%" height="15" fill="rgb(245,141,16)" fg:x="120830" fg:w="55"/><text x="97.7509%" y="271.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (128 samples, 0.10%)</title><rect x="97.4437%" y="453" width="0.1033%" height="15" fill="rgb(229,55,45)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (128 samples, 0.10%)</title><rect x="97.4437%" y="437" width="0.1033%" height="15" fill="rgb(208,92,15)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="447.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (128 samples, 0.10%)</title><rect x="97.4437%" y="421" width="0.1033%" height="15" fill="rgb(234,185,47)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (128 samples, 0.10%)</title><rect x="97.4437%" y="405" width="0.1033%" height="15" fill="rgb(253,104,50)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (128 samples, 0.10%)</title><rect x="97.4437%" y="389" width="0.1033%" height="15" fill="rgb(205,70,7)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (128 samples, 0.10%)</title><rect x="97.4437%" y="373" width="0.1033%" height="15" fill="rgb(240,178,43)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (128 samples, 0.10%)</title><rect x="97.4437%" y="357" width="0.1033%" height="15" fill="rgb(214,112,2)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (128 samples, 0.10%)</title><rect x="97.4437%" y="341" width="0.1033%" height="15" fill="rgb(206,46,17)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="351.50"></text></g><g><title>alloc::alloc::alloc (128 samples, 0.10%)</title><rect x="97.4437%" y="325" width="0.1033%" height="15" fill="rgb(225,220,16)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="335.50"></text></g><g><title>__rg_alloc (128 samples, 0.10%)</title><rect x="97.4437%" y="309" width="0.1033%" height="15" fill="rgb(238,65,40)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (128 samples, 0.10%)</title><rect x="97.4437%" y="293" width="0.1033%" height="15" fill="rgb(230,151,21)" fg:x="120759" fg:w="128"/><text x="97.6937%" y="303.50"></text></g><g><title>sn_rust_alloc (127 samples, 0.10%)</title><rect x="97.4445%" y="277" width="0.1025%" height="15" fill="rgb(218,58,49)" fg:x="120760" fg:w="127"/><text x="97.6945%" y="287.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (234 samples, 0.19%)</title><rect x="97.3589%" y="485" width="0.1888%" height="15" fill="rgb(219,179,14)" fg:x="120654" fg:w="234"/><text x="97.6089%" y="495.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (129 samples, 0.10%)</title><rect x="97.4437%" y="469" width="0.1041%" height="15" fill="rgb(223,72,1)" fg:x="120759" fg:w="129"/><text x="97.6937%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (244 samples, 0.20%)</title><rect x="97.3541%" y="501" width="0.1969%" height="15" fill="rgb(238,126,10)" fg:x="120648" fg:w="244"/><text x="97.6041%" y="511.50"></text></g><g><title>concurrent_queue::full_fence (32 samples, 0.03%)</title><rect x="97.5712%" y="453" width="0.0258%" height="15" fill="rgb(224,206,38)" fg:x="120917" fg:w="32"/><text x="97.8212%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (31 samples, 0.03%)</title><rect x="97.5720%" y="437" width="0.0250%" height="15" fill="rgb(212,201,54)" fg:x="120918" fg:w="31"/><text x="97.8220%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (31 samples, 0.03%)</title><rect x="97.5720%" y="421" width="0.0250%" height="15" fill="rgb(218,154,48)" fg:x="120918" fg:w="31"/><text x="97.8220%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.03%)</title><rect x="97.5720%" y="405" width="0.0250%" height="15" fill="rgb(232,93,24)" fg:x="120918" fg:w="31"/><text x="97.8220%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (70 samples, 0.06%)</title><rect x="97.5510%" y="501" width="0.0565%" height="15" fill="rgb(245,30,21)" fg:x="120892" fg:w="70"/><text x="97.8010%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (61 samples, 0.05%)</title><rect x="97.5582%" y="485" width="0.0492%" height="15" fill="rgb(242,148,29)" fg:x="120901" fg:w="61"/><text x="97.8082%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (57 samples, 0.05%)</title><rect x="97.5615%" y="469" width="0.0460%" height="15" fill="rgb(244,153,54)" fg:x="120905" fg:w="57"/><text x="97.8115%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="97.5970%" y="453" width="0.0105%" height="15" fill="rgb(252,87,22)" fg:x="120949" fg:w="13"/><text x="97.8470%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="97.5970%" y="437" width="0.0105%" height="15" fill="rgb(210,51,29)" fg:x="120949" fg:w="13"/><text x="97.8470%" y="447.50"></text></g><g><title>core::mem::drop (106 samples, 0.09%)</title><rect x="97.6075%" y="501" width="0.0855%" height="15" fill="rgb(242,136,47)" fg:x="120962" fg:w="106"/><text x="97.8575%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (106 samples, 0.09%)</title><rect x="97.6075%" y="485" width="0.0855%" height="15" fill="rgb(238,68,4)" fg:x="120962" fg:w="106"/><text x="97.8575%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.09%)</title><rect x="97.6075%" y="469" width="0.0855%" height="15" fill="rgb(242,161,30)" fg:x="120962" fg:w="106"/><text x="97.8575%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (106 samples, 0.09%)</title><rect x="97.6075%" y="453" width="0.0855%" height="15" fill="rgb(218,58,44)" fg:x="120962" fg:w="106"/><text x="97.8575%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (106 samples, 0.09%)</title><rect x="97.6075%" y="437" width="0.0855%" height="15" fill="rgb(252,125,32)" fg:x="120962" fg:w="106"/><text x="97.8575%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (106 samples, 0.09%)</title><rect x="97.6075%" y="421" width="0.0855%" height="15" fill="rgb(219,178,0)" fg:x="120962" fg:w="106"/><text x="97.8575%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (106 samples, 0.09%)</title><rect x="97.6075%" y="405" width="0.0855%" height="15" fill="rgb(213,152,7)" fg:x="120962" fg:w="106"/><text x="97.8575%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="97.6946%" y="501" width="0.0161%" height="15" fill="rgb(249,109,34)" fg:x="121070" fg:w="20"/><text x="97.9446%" y="511.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (17 samples, 0.01%)</title><rect x="97.6970%" y="485" width="0.0137%" height="15" fill="rgb(232,96,21)" fg:x="121073" fg:w="17"/><text x="97.9470%" y="495.50"></text></g><g><title>std::time::Instant::duration_since (17 samples, 0.01%)</title><rect x="97.6970%" y="469" width="0.0137%" height="15" fill="rgb(228,27,39)" fg:x="121073" fg:w="17"/><text x="97.9470%" y="479.50"></text></g><g><title>std::time::Instant::checked_duration_since (17 samples, 0.01%)</title><rect x="97.6970%" y="453" width="0.0137%" height="15" fill="rgb(211,182,52)" fg:x="121073" fg:w="17"/><text x="97.9470%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (17 samples, 0.01%)</title><rect x="97.6970%" y="437" width="0.0137%" height="15" fill="rgb(234,178,38)" fg:x="121073" fg:w="17"/><text x="97.9470%" y="447.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (14 samples, 0.01%)</title><rect x="97.6995%" y="421" width="0.0113%" height="15" fill="rgb(221,111,3)" fg:x="121076" fg:w="14"/><text x="97.9495%" y="431.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (89 samples, 0.07%)</title><rect x="97.7140%" y="501" width="0.0718%" height="15" fill="rgb(228,175,21)" fg:x="121094" fg:w="89"/><text x="97.9640%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (86 samples, 0.07%)</title><rect x="97.7164%" y="485" width="0.0694%" height="15" fill="rgb(228,174,43)" fg:x="121097" fg:w="86"/><text x="97.9664%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (86 samples, 0.07%)</title><rect x="97.7164%" y="469" width="0.0694%" height="15" fill="rgb(211,191,0)" fg:x="121097" fg:w="86"/><text x="97.9664%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (86 samples, 0.07%)</title><rect x="97.7164%" y="453" width="0.0694%" height="15" fill="rgb(253,117,3)" fg:x="121097" fg:w="86"/><text x="97.9664%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (86 samples, 0.07%)</title><rect x="97.7164%" y="437" width="0.0694%" height="15" fill="rgb(241,127,19)" fg:x="121097" fg:w="86"/><text x="97.9664%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (713 samples, 0.58%)</title><rect x="97.2710%" y="517" width="0.5753%" height="15" fill="rgb(218,103,12)" fg:x="120545" fg:w="713"/><text x="97.5210%" y="527.50"></text></g><g><title>std::time::Instant::now (75 samples, 0.06%)</title><rect x="97.7858%" y="501" width="0.0605%" height="15" fill="rgb(236,214,43)" fg:x="121183" fg:w="75"/><text x="98.0358%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (75 samples, 0.06%)</title><rect x="97.7858%" y="485" width="0.0605%" height="15" fill="rgb(244,144,19)" fg:x="121183" fg:w="75"/><text x="98.0358%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (75 samples, 0.06%)</title><rect x="97.7858%" y="469" width="0.0605%" height="15" fill="rgb(246,188,10)" fg:x="121183" fg:w="75"/><text x="98.0358%" y="479.50"></text></g><g><title>__clock_gettime (74 samples, 0.06%)</title><rect x="97.7866%" y="453" width="0.0597%" height="15" fill="rgb(212,193,33)" fg:x="121184" fg:w="74"/><text x="98.0366%" y="463.50"></text></g><g><title>__vdso_clock_gettime (59 samples, 0.05%)</title><rect x="97.7987%" y="437" width="0.0476%" height="15" fill="rgb(241,51,29)" fg:x="121199" fg:w="59"/><text x="98.0487%" y="447.50"></text></g><g><title>[[vdso]] (55 samples, 0.04%)</title><rect x="97.8019%" y="421" width="0.0444%" height="15" fill="rgb(211,58,19)" fg:x="121203" fg:w="55"/><text x="98.0519%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20 samples, 0.02%)</title><rect x="97.8520%" y="517" width="0.0161%" height="15" fill="rgb(229,111,26)" fg:x="121265" fg:w="20"/><text x="98.1020%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (20 samples, 0.02%)</title><rect x="97.8520%" y="501" width="0.0161%" height="15" fill="rgb(213,115,40)" fg:x="121265" fg:w="20"/><text x="98.1020%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (34 samples, 0.03%)</title><rect x="97.9012%" y="501" width="0.0274%" height="15" fill="rgb(209,56,44)" fg:x="121326" fg:w="34"/><text x="98.1512%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="97.9012%" y="485" width="0.0274%" height="15" fill="rgb(230,108,32)" fg:x="121326" fg:w="34"/><text x="98.1512%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.02%)</title><rect x="97.9052%" y="469" width="0.0234%" height="15" fill="rgb(216,165,31)" fg:x="121331" fg:w="29"/><text x="98.1552%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (29 samples, 0.02%)</title><rect x="97.9052%" y="453" width="0.0234%" height="15" fill="rgb(218,122,21)" fg:x="121331" fg:w="29"/><text x="98.1552%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (29 samples, 0.02%)</title><rect x="97.9052%" y="437" width="0.0234%" height="15" fill="rgb(223,224,47)" fg:x="121331" fg:w="29"/><text x="98.1552%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.02%)</title><rect x="97.9052%" y="421" width="0.0234%" height="15" fill="rgb(238,102,44)" fg:x="121331" fg:w="29"/><text x="98.1552%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (13 samples, 0.01%)</title><rect x="97.9286%" y="501" width="0.0105%" height="15" fill="rgb(236,46,40)" fg:x="121360" fg:w="13"/><text x="98.1786%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.01%)</title><rect x="97.9286%" y="485" width="0.0105%" height="15" fill="rgb(247,202,50)" fg:x="121360" fg:w="13"/><text x="98.1786%" y="495.50"></text></g><g><title>__pthread_disable_asynccancel (13 samples, 0.01%)</title><rect x="98.0787%" y="469" width="0.0105%" height="15" fill="rgb(209,99,20)" fg:x="121546" fg:w="13"/><text x="98.3287%" y="479.50"></text></g><g><title>__libc_read (143 samples, 0.12%)</title><rect x="98.0343%" y="485" width="0.1154%" height="15" fill="rgb(252,27,34)" fg:x="121491" fg:w="143"/><text x="98.2843%" y="495.50"></text></g><g><title>__pthread_enable_asynccancel (75 samples, 0.06%)</title><rect x="98.0892%" y="469" width="0.0605%" height="15" fill="rgb(215,206,23)" fg:x="121559" fg:w="75"/><text x="98.3392%" y="479.50"></text></g><g><title>epoll_wait (172 samples, 0.14%)</title><rect x="98.1497%" y="485" width="0.1388%" height="15" fill="rgb(212,135,36)" fg:x="121634" fg:w="172"/><text x="98.3997%" y="495.50"></text></g><g><title>[libc-2.31.so] (55 samples, 0.04%)</title><rect x="98.2441%" y="469" width="0.0444%" height="15" fill="rgb(240,189,1)" fg:x="121751" fg:w="55"/><text x="98.4941%" y="479.50"></text></g><g><title>polling::epoll::Poller::modify (92 samples, 0.07%)</title><rect x="98.2917%" y="485" width="0.0742%" height="15" fill="rgb(242,56,20)" fg:x="121810" fg:w="92"/><text x="98.5417%" y="495.50"></text></g><g><title>polling::epoll::Poller::ctl (82 samples, 0.07%)</title><rect x="98.2998%" y="469" width="0.0662%" height="15" fill="rgb(247,132,33)" fg:x="121820" fg:w="82"/><text x="98.5498%" y="479.50"></text></g><g><title>epoll_ctl (72 samples, 0.06%)</title><rect x="98.3079%" y="453" width="0.0581%" height="15" fill="rgb(208,149,11)" fg:x="121830" fg:w="72"/><text x="98.5579%" y="463.50"></text></g><g><title>polling::epoll::Poller::wait (548 samples, 0.44%)</title><rect x="97.9440%" y="501" width="0.4422%" height="15" fill="rgb(211,33,11)" fg:x="121379" fg:w="548"/><text x="98.1940%" y="511.50"></text></g><g><title>syscall (25 samples, 0.02%)</title><rect x="98.3660%" y="485" width="0.0202%" height="15" fill="rgb(221,29,38)" fg:x="121902" fg:w="25"/><text x="98.6160%" y="495.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,494 samples, 1.21%)</title><rect x="97.2234%" y="533" width="1.2055%" height="15" fill="rgb(206,182,49)" fg:x="120486" fg:w="1494"/><text x="97.4734%" y="543.50"></text></g><g><title>polling::Poller::wait (690 samples, 0.56%)</title><rect x="97.8721%" y="517" width="0.5568%" height="15" fill="rgb(216,140,1)" fg:x="121290" fg:w="690"/><text x="98.1221%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (53 samples, 0.04%)</title><rect x="98.3861%" y="501" width="0.0428%" height="15" fill="rgb(232,57,40)" fg:x="121927" fg:w="53"/><text x="98.6361%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (51 samples, 0.04%)</title><rect x="98.3878%" y="485" width="0.0412%" height="15" fill="rgb(224,186,18)" fg:x="121929" fg:w="51"/><text x="98.6378%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (51 samples, 0.04%)</title><rect x="98.3878%" y="469" width="0.0412%" height="15" fill="rgb(215,121,11)" fg:x="121929" fg:w="51"/><text x="98.6378%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (51 samples, 0.04%)</title><rect x="98.3878%" y="453" width="0.0412%" height="15" fill="rgb(245,147,10)" fg:x="121929" fg:w="51"/><text x="98.6378%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.04%)</title><rect x="98.3878%" y="437" width="0.0412%" height="15" fill="rgb(238,153,13)" fg:x="121929" fg:w="51"/><text x="98.6378%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (36 samples, 0.03%)</title><rect x="98.4297%" y="485" width="0.0290%" height="15" fill="rgb(233,108,0)" fg:x="121981" fg:w="36"/><text x="98.6797%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_store (36 samples, 0.03%)</title><rect x="98.4297%" y="469" width="0.0290%" height="15" fill="rgb(212,157,17)" fg:x="121981" fg:w="36"/><text x="98.6797%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (40 samples, 0.03%)</title><rect x="98.4297%" y="533" width="0.0323%" height="15" fill="rgb(225,213,38)" fg:x="121981" fg:w="40"/><text x="98.6797%" y="543.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="98.4297%" y="517" width="0.0323%" height="15" fill="rgb(248,16,11)" fg:x="121981" fg:w="40"/><text x="98.6797%" y="527.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (40 samples, 0.03%)</title><rect x="98.4297%" y="501" width="0.0323%" height="15" fill="rgb(241,33,4)" fg:x="121981" fg:w="40"/><text x="98.6797%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (20 samples, 0.02%)</title><rect x="98.4644%" y="533" width="0.0161%" height="15" fill="rgb(222,26,43)" fg:x="122024" fg:w="20"/><text x="98.7144%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (20 samples, 0.02%)</title><rect x="98.4644%" y="517" width="0.0161%" height="15" fill="rgb(243,29,36)" fg:x="122024" fg:w="20"/><text x="98.7144%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (40 samples, 0.03%)</title><rect x="98.5072%" y="501" width="0.0323%" height="15" fill="rgb(241,9,27)" fg:x="122077" fg:w="40"/><text x="98.7572%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.03%)</title><rect x="98.5072%" y="485" width="0.0323%" height="15" fill="rgb(205,117,26)" fg:x="122077" fg:w="40"/><text x="98.7572%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.02%)</title><rect x="98.5153%" y="469" width="0.0242%" height="15" fill="rgb(209,80,39)" fg:x="122087" fg:w="30"/><text x="98.7653%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (30 samples, 0.02%)</title><rect x="98.5153%" y="453" width="0.0242%" height="15" fill="rgb(239,155,6)" fg:x="122087" fg:w="30"/><text x="98.7653%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (29 samples, 0.02%)</title><rect x="98.5161%" y="437" width="0.0234%" height="15" fill="rgb(212,104,12)" fg:x="122088" fg:w="29"/><text x="98.7661%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (29 samples, 0.02%)</title><rect x="98.5161%" y="421" width="0.0234%" height="15" fill="rgb(234,204,3)" fg:x="122088" fg:w="29"/><text x="98.7661%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (80 samples, 0.06%)</title><rect x="98.5395%" y="501" width="0.0646%" height="15" fill="rgb(251,218,7)" fg:x="122117" fg:w="80"/><text x="98.7895%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (80 samples, 0.06%)</title><rect x="98.5395%" y="485" width="0.0646%" height="15" fill="rgb(221,81,32)" fg:x="122117" fg:w="80"/><text x="98.7895%" y="495.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (68 samples, 0.05%)</title><rect x="98.6129%" y="421" width="0.0549%" height="15" fill="rgb(214,152,26)" fg:x="122208" fg:w="68"/><text x="98.8629%" y="431.50"></text></g><g><title>std::sys::unix::futex::futex_wait (403 samples, 0.33%)</title><rect x="98.6097%" y="437" width="0.3252%" height="15" fill="rgb(223,22,3)" fg:x="122204" fg:w="403"/><text x="98.8597%" y="447.50"></text></g><g><title>syscall (319 samples, 0.26%)</title><rect x="98.6774%" y="421" width="0.2574%" height="15" fill="rgb(207,174,7)" fg:x="122288" fg:w="319"/><text x="98.9274%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (260 samples, 0.21%)</title><rect x="98.9349%" y="437" width="0.2098%" height="15" fill="rgb(224,19,52)" fg:x="122607" fg:w="260"/><text x="99.1849%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (260 samples, 0.21%)</title><rect x="98.9349%" y="421" width="0.2098%" height="15" fill="rgb(228,24,14)" fg:x="122607" fg:w="260"/><text x="99.1849%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (260 samples, 0.21%)</title><rect x="98.9349%" y="405" width="0.2098%" height="15" fill="rgb(230,153,43)" fg:x="122607" fg:w="260"/><text x="99.1849%" y="415.50"></text></g><g><title>std::sync::condvar::Condvar::wait (691 samples, 0.56%)</title><rect x="98.6040%" y="501" width="0.5576%" height="15" fill="rgb(231,106,12)" fg:x="122197" fg:w="691"/><text x="98.8540%" y="511.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (687 samples, 0.55%)</title><rect x="98.6072%" y="485" width="0.5544%" height="15" fill="rgb(215,92,2)" fg:x="122201" fg:w="687"/><text x="98.8572%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (687 samples, 0.55%)</title><rect x="98.6072%" y="469" width="0.5544%" height="15" fill="rgb(249,143,25)" fg:x="122201" fg:w="687"/><text x="98.8572%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (687 samples, 0.55%)</title><rect x="98.6072%" y="453" width="0.5544%" height="15" fill="rgb(252,7,35)" fg:x="122201" fg:w="687"/><text x="98.8572%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (21 samples, 0.02%)</title><rect x="99.1447%" y="437" width="0.0169%" height="15" fill="rgb(216,69,40)" fg:x="122867" fg:w="21"/><text x="99.3947%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (21 samples, 0.02%)</title><rect x="99.1447%" y="421" width="0.0169%" height="15" fill="rgb(240,36,33)" fg:x="122867" fg:w="21"/><text x="99.3947%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (21 samples, 0.02%)</title><rect x="99.1447%" y="405" width="0.0169%" height="15" fill="rgb(231,128,14)" fg:x="122867" fg:w="21"/><text x="99.3947%" y="415.50"></text></g><g><title>parking::Parker::park (857 samples, 0.69%)</title><rect x="98.4902%" y="533" width="0.6915%" height="15" fill="rgb(245,143,14)" fg:x="122056" fg:w="857"/><text x="98.7402%" y="543.50"></text></g><g><title>parking::Inner::park (851 samples, 0.69%)</title><rect x="98.4951%" y="517" width="0.6867%" height="15" fill="rgb(222,130,28)" fg:x="122062" fg:w="851"/><text x="98.7451%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.02%)</title><rect x="99.1616%" y="501" width="0.0202%" height="15" fill="rgb(212,10,48)" fg:x="122888" fg:w="25"/><text x="99.4116%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="99.1640%" y="485" width="0.0178%" height="15" fill="rgb(254,118,45)" fg:x="122891" fg:w="22"/><text x="99.4140%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (22 samples, 0.02%)</title><rect x="99.1640%" y="469" width="0.0178%" height="15" fill="rgb(228,6,45)" fg:x="122891" fg:w="22"/><text x="99.4140%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (22 samples, 0.02%)</title><rect x="99.1640%" y="453" width="0.0178%" height="15" fill="rgb(241,18,35)" fg:x="122891" fg:w="22"/><text x="99.4140%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="99.1640%" y="437" width="0.0178%" height="15" fill="rgb(227,214,53)" fg:x="122891" fg:w="22"/><text x="99.4140%" y="447.50"></text></g><g><title>parking::Parker::park_timeout (369 samples, 0.30%)</title><rect x="99.1818%" y="533" width="0.2978%" height="15" fill="rgb(224,107,51)" fg:x="122913" fg:w="369"/><text x="99.4318%" y="543.50"></text></g><g><title>parking::Inner::park (313 samples, 0.25%)</title><rect x="99.2270%" y="517" width="0.2526%" height="15" fill="rgb(248,60,28)" fg:x="122969" fg:w="313"/><text x="99.4770%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (298 samples, 0.24%)</title><rect x="99.2391%" y="501" width="0.2405%" height="15" fill="rgb(249,101,23)" fg:x="122984" fg:w="298"/><text x="99.4891%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (298 samples, 0.24%)</title><rect x="99.2391%" y="485" width="0.2405%" height="15" fill="rgb(228,51,19)" fg:x="122984" fg:w="298"/><text x="99.4891%" y="495.50"></text></g><g><title>std::panic::catch_unwind (24,585 samples, 19.84%)</title><rect x="79.6856%" y="821" width="19.8383%" height="15" fill="rgb(213,20,6)" fg:x="98752" fg:w="24585"/><text x="79.9356%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24,585 samples, 19.84%)</title><rect x="79.6856%" y="805" width="19.8383%" height="15" fill="rgb(212,124,10)" fg:x="98752" fg:w="24585"/><text x="79.9356%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24,585 samples, 19.84%)</title><rect x="79.6856%" y="789" width="19.8383%" height="15" fill="rgb(248,3,40)" fg:x="98752" fg:w="24585"/><text x="79.9356%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24,585 samples, 19.84%)</title><rect x="79.6856%" y="773" width="19.8383%" height="15" fill="rgb(223,178,23)" fg:x="98752" fg:w="24585"/><text x="79.9356%" y="783.50">&lt;core::panic::unwind_safe::Asse..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (24,585 samples, 19.84%)</title><rect x="79.6856%" y="757" width="19.8383%" height="15" fill="rgb(240,132,45)" fg:x="98752" fg:w="24585"/><text x="79.9356%" y="767.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24,585 samples, 19.84%)</title><rect x="79.6856%" y="741" width="19.8383%" height="15" fill="rgb(245,164,36)" fg:x="98752" fg:w="24585"/><text x="79.9356%" y="751.50">std::sys_common::backtrace::__r..</text></g><g><title>core::ops::function::FnOnce::call_once (24,585 samples, 19.84%)</title><rect x="79.6856%" y="725" width="19.8383%" height="15" fill="rgb(231,188,53)" fg:x="98752" fg:w="24585"/><text x="79.9356%" y="735.50">core::ops::function::FnOnce::ca..</text></g><g><title>async_global_executor::threading::thread_main_loop (24,585 samples, 19.84%)</title><rect x="79.6856%" y="709" width="19.8383%" height="15" fill="rgb(237,198,39)" fg:x="98752" fg:w="24585"/><text x="79.9356%" y="719.50">async_global_executor::threadin..</text></g><g><title>std::panic::catch_unwind (24,561 samples, 19.82%)</title><rect x="79.7050%" y="693" width="19.8189%" height="15" fill="rgb(223,120,35)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24,561 samples, 19.82%)</title><rect x="79.7050%" y="677" width="19.8189%" height="15" fill="rgb(253,107,49)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24,561 samples, 19.82%)</title><rect x="79.7050%" y="661" width="19.8189%" height="15" fill="rgb(216,44,31)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="671.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (24,561 samples, 19.82%)</title><rect x="79.7050%" y="645" width="19.8189%" height="15" fill="rgb(253,87,21)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="655.50">async_global_executor::threadin..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24,561 samples, 19.82%)</title><rect x="79.7050%" y="629" width="19.8189%" height="15" fill="rgb(226,18,2)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="639.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,561 samples, 19.82%)</title><rect x="79.7050%" y="613" width="19.8189%" height="15" fill="rgb(216,8,46)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="623.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (24,561 samples, 19.82%)</title><rect x="79.7050%" y="597" width="19.8189%" height="15" fill="rgb(226,140,39)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="607.50">async_global_executor::threadin..</text></g><g><title>async_global_executor::reactor::block_on (24,561 samples, 19.82%)</title><rect x="79.7050%" y="581" width="19.8189%" height="15" fill="rgb(221,194,54)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="591.50">async_global_executor::reactor:..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (24,561 samples, 19.82%)</title><rect x="79.7050%" y="565" width="19.8189%" height="15" fill="rgb(213,92,11)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="575.50">async_global_executor::reactor:..</text></g><g><title>async_io::driver::block_on (24,561 samples, 19.82%)</title><rect x="79.7050%" y="549" width="19.8189%" height="15" fill="rgb(229,162,46)" fg:x="98776" fg:w="24561"/><text x="79.9550%" y="559.50">async_io::driver::block_on</text></g><g><title>std::time::Instant::now (42 samples, 0.03%)</title><rect x="99.4900%" y="533" width="0.0339%" height="15" fill="rgb(214,111,36)" fg:x="123295" fg:w="42"/><text x="99.7400%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (42 samples, 0.03%)</title><rect x="99.4900%" y="517" width="0.0339%" height="15" fill="rgb(207,6,21)" fg:x="123295" fg:w="42"/><text x="99.7400%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (42 samples, 0.03%)</title><rect x="99.4900%" y="501" width="0.0339%" height="15" fill="rgb(213,127,38)" fg:x="123295" fg:w="42"/><text x="99.7400%" y="511.50"></text></g><g><title>__clock_gettime (35 samples, 0.03%)</title><rect x="99.4957%" y="485" width="0.0282%" height="15" fill="rgb(238,118,32)" fg:x="123302" fg:w="35"/><text x="99.7457%" y="495.50"></text></g><g><title>__vdso_clock_gettime (22 samples, 0.02%)</title><rect x="99.5062%" y="469" width="0.0178%" height="15" fill="rgb(240,139,39)" fg:x="123315" fg:w="22"/><text x="99.7562%" y="479.50"></text></g><g><title>[[vdso]] (17 samples, 0.01%)</title><rect x="99.5102%" y="453" width="0.0137%" height="15" fill="rgb(235,10,37)" fg:x="123320" fg:w="17"/><text x="99.7602%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,595 samples, 19.85%)</title><rect x="79.6848%" y="885" width="19.8464%" height="15" fill="rgb(249,171,38)" fg:x="98751" fg:w="24595"/><text x="79.9348%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,595 samples, 19.85%)</title><rect x="79.6848%" y="869" width="19.8464%" height="15" fill="rgb(242,144,32)" fg:x="98751" fg:w="24595"/><text x="79.9348%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (24,595 samples, 19.85%)</title><rect x="79.6848%" y="853" width="19.8464%" height="15" fill="rgb(217,117,21)" fg:x="98751" fg:w="24595"/><text x="79.9348%" y="863.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (24,595 samples, 19.85%)</title><rect x="79.6848%" y="837" width="19.8464%" height="15" fill="rgb(249,87,1)" fg:x="98751" fg:w="24595"/><text x="79.9348%" y="847.50">std::thread::Builder::spawn_unc..</text></g><g><title>clone (24,607 samples, 19.86%)</title><rect x="79.6800%" y="933" width="19.8560%" height="15" fill="rgb(248,196,48)" fg:x="98745" fg:w="24607"/><text x="79.9300%" y="943.50">clone</text></g><g><title>start_thread (24,602 samples, 19.85%)</title><rect x="79.6840%" y="917" width="19.8520%" height="15" fill="rgb(251,206,33)" fg:x="98750" fg:w="24602"/><text x="79.9340%" y="927.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24,601 samples, 19.85%)</title><rect x="79.6848%" y="901" width="19.8512%" height="15" fill="rgb(232,141,28)" fg:x="98751" fg:w="24601"/><text x="79.9348%" y="911.50">std::sys::unix::thread::Thread:..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (14 samples, 0.01%)</title><rect x="99.5457%" y="933" width="0.0113%" height="15" fill="rgb(209,167,14)" fg:x="123364" fg:w="14"/><text x="99.7957%" y="943.50"></text></g><g><title>signal_hook_registry::GLOBAL_DATA (15 samples, 0.01%)</title><rect x="99.5570%" y="933" width="0.0121%" height="15" fill="rgb(225,11,50)" fg:x="123378" fg:w="15"/><text x="99.8070%" y="943.50"></text></g><g><title>tremor_common::time::nanotime (14 samples, 0.01%)</title><rect x="99.5715%" y="933" width="0.0113%" height="15" fill="rgb(209,50,20)" fg:x="123396" fg:w="14"/><text x="99.8215%" y="943.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (17 samples, 0.01%)</title><rect x="99.5828%" y="933" width="0.0137%" height="15" fill="rgb(212,17,46)" fg:x="123410" fg:w="17"/><text x="99.8328%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="99.5836%" y="917" width="0.0129%" height="15" fill="rgb(216,101,39)" fg:x="123411" fg:w="16"/><text x="99.8336%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="99.5836%" y="901" width="0.0129%" height="15" fill="rgb(212,228,48)" fg:x="123411" fg:w="16"/><text x="99.8336%" y="911.50"></text></g><g><title>async-std/runti (123,364 samples, 99.55%)</title><rect x="0.0581%" y="949" width="99.5457%" height="15" fill="rgb(250,6,50)" fg:x="72" fg:w="123364"/><text x="0.3081%" y="959.50">async-std/runti</text></g><g><title>clone (15 samples, 0.01%)</title><rect x="99.6038%" y="933" width="0.0121%" height="15" fill="rgb(250,160,48)" fg:x="123436" fg:w="15"/><text x="99.8538%" y="943.50"></text></g><g><title>blocking-1 (16 samples, 0.01%)</title><rect x="99.6038%" y="949" width="0.0129%" height="15" fill="rgb(244,216,33)" fg:x="123436" fg:w="16"/><text x="99.8538%" y="959.50"></text></g><g><title>std::sys::unix::futex::futex_wait (18 samples, 0.01%)</title><rect x="99.6175%" y="629" width="0.0145%" height="15" fill="rgb(207,157,5)" fg:x="123453" fg:w="18"/><text x="99.8675%" y="639.50"></text></g><g><title>syscall (17 samples, 0.01%)</title><rect x="99.6183%" y="613" width="0.0137%" height="15" fill="rgb(228,199,8)" fg:x="123454" fg:w="17"/><text x="99.8683%" y="623.50"></text></g><g><title>blocking-2 (21 samples, 0.02%)</title><rect x="99.6167%" y="949" width="0.0169%" height="15" fill="rgb(227,80,20)" fg:x="123452" fg:w="21"/><text x="99.8667%" y="959.50"></text></g><g><title>clone (20 samples, 0.02%)</title><rect x="99.6175%" y="933" width="0.0161%" height="15" fill="rgb(222,9,33)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="943.50"></text></g><g><title>start_thread (20 samples, 0.02%)</title><rect x="99.6175%" y="917" width="0.0161%" height="15" fill="rgb(239,44,28)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="927.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (20 samples, 0.02%)</title><rect x="99.6175%" y="901" width="0.0161%" height="15" fill="rgb(249,187,43)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (20 samples, 0.02%)</title><rect x="99.6175%" y="885" width="0.0161%" height="15" fill="rgb(216,141,28)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (20 samples, 0.02%)</title><rect x="99.6175%" y="869" width="0.0161%" height="15" fill="rgb(230,154,53)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (20 samples, 0.02%)</title><rect x="99.6175%" y="853" width="0.0161%" height="15" fill="rgb(227,82,4)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="863.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (20 samples, 0.02%)</title><rect x="99.6175%" y="837" width="0.0161%" height="15" fill="rgb(220,107,16)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="847.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.02%)</title><rect x="99.6175%" y="821" width="0.0161%" height="15" fill="rgb(207,187,2)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="831.50"></text></g><g><title>std::panicking::try (20 samples, 0.02%)</title><rect x="99.6175%" y="805" width="0.0161%" height="15" fill="rgb(210,162,52)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="815.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.02%)</title><rect x="99.6175%" y="789" width="0.0161%" height="15" fill="rgb(217,216,49)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.02%)</title><rect x="99.6175%" y="773" width="0.0161%" height="15" fill="rgb(218,146,49)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (20 samples, 0.02%)</title><rect x="99.6175%" y="757" width="0.0161%" height="15" fill="rgb(216,55,40)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 0.02%)</title><rect x="99.6175%" y="741" width="0.0161%" height="15" fill="rgb(208,196,21)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="751.50"></text></g><g><title>blocking::Executor::grow_pool::{{closure}} (20 samples, 0.02%)</title><rect x="99.6175%" y="725" width="0.0161%" height="15" fill="rgb(242,117,42)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="735.50"></text></g><g><title>blocking::Executor::main_loop (20 samples, 0.02%)</title><rect x="99.6175%" y="709" width="0.0161%" height="15" fill="rgb(210,11,23)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="719.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.6175%" y="693" width="0.0161%" height="15" fill="rgb(217,110,2)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="703.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.6175%" y="677" width="0.0161%" height="15" fill="rgb(229,77,54)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (20 samples, 0.02%)</title><rect x="99.6175%" y="661" width="0.0161%" height="15" fill="rgb(218,53,16)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (20 samples, 0.02%)</title><rect x="99.6175%" y="645" width="0.0161%" height="15" fill="rgb(215,38,13)" fg:x="123453" fg:w="20"/><text x="99.8675%" y="655.50"></text></g><g><title>[ld-2.31.so] (22 samples, 0.02%)</title><rect x="99.6466%" y="933" width="0.0178%" height="15" fill="rgb(235,42,18)" fg:x="123489" fg:w="22"/><text x="99.8966%" y="943.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (28 samples, 0.02%)</title><rect x="99.6748%" y="645" width="0.0226%" height="15" fill="rgb(219,66,54)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="655.50"></text></g><g><title>async_io::driver::block_on (28 samples, 0.02%)</title><rect x="99.6748%" y="629" width="0.0226%" height="15" fill="rgb(222,205,4)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="99.6748%" y="613" width="0.0226%" height="15" fill="rgb(227,213,46)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="623.50"></text></g><g><title>async_global_executor::init::init::{{closure}} (28 samples, 0.02%)</title><rect x="99.6748%" y="597" width="0.0226%" height="15" fill="rgb(250,145,42)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="99.6748%" y="581" width="0.0226%" height="15" fill="rgb(219,15,2)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="591.50"></text></g><g><title>async_global_executor::threading::spawn_more_threads::{{closure}} (28 samples, 0.02%)</title><rect x="99.6748%" y="565" width="0.0226%" height="15" fill="rgb(231,181,52)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="575.50"></text></g><g><title>std::thread::Builder::spawn (28 samples, 0.02%)</title><rect x="99.6748%" y="549" width="0.0226%" height="15" fill="rgb(235,1,42)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (28 samples, 0.02%)</title><rect x="99.6748%" y="533" width="0.0226%" height="15" fill="rgb(249,88,27)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="543.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (28 samples, 0.02%)</title><rect x="99.6748%" y="517" width="0.0226%" height="15" fill="rgb(235,145,16)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="527.50"></text></g><g><title>std::sys::unix::thread::Thread::new (28 samples, 0.02%)</title><rect x="99.6748%" y="501" width="0.0226%" height="15" fill="rgb(237,114,19)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="511.50"></text></g><g><title>__pthread_create_2_1 (28 samples, 0.02%)</title><rect x="99.6748%" y="485" width="0.0226%" height="15" fill="rgb(238,51,50)" fg:x="123524" fg:w="28"/><text x="99.9248%" y="495.50"></text></g><g><title>async_std::task::builder::Builder::blocking (31 samples, 0.03%)</title><rect x="99.6740%" y="917" width="0.0250%" height="15" fill="rgb(205,194,25)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="927.50"></text></g><g><title>async_std::task::builder::Builder::build (31 samples, 0.03%)</title><rect x="99.6740%" y="901" width="0.0250%" height="15" fill="rgb(215,203,17)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="911.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (31 samples, 0.03%)</title><rect x="99.6740%" y="885" width="0.0250%" height="15" fill="rgb(233,112,49)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="895.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (31 samples, 0.03%)</title><rect x="99.6740%" y="869" width="0.0250%" height="15" fill="rgb(241,130,26)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (31 samples, 0.03%)</title><rect x="99.6740%" y="853" width="0.0250%" height="15" fill="rgb(252,223,19)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="863.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (31 samples, 0.03%)</title><rect x="99.6740%" y="837" width="0.0250%" height="15" fill="rgb(211,95,25)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="847.50"></text></g><g><title>once_cell::imp::initialize_or_wait (31 samples, 0.03%)</title><rect x="99.6740%" y="821" width="0.0250%" height="15" fill="rgb(251,182,27)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (31 samples, 0.03%)</title><rect x="99.6740%" y="805" width="0.0250%" height="15" fill="rgb(238,24,4)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="815.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (31 samples, 0.03%)</title><rect x="99.6740%" y="789" width="0.0250%" height="15" fill="rgb(224,220,25)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="799.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (31 samples, 0.03%)</title><rect x="99.6740%" y="773" width="0.0250%" height="15" fill="rgb(239,133,26)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="783.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (31 samples, 0.03%)</title><rect x="99.6740%" y="757" width="0.0250%" height="15" fill="rgb(211,94,48)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 0.03%)</title><rect x="99.6740%" y="741" width="0.0250%" height="15" fill="rgb(239,87,6)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 0.03%)</title><rect x="99.6740%" y="725" width="0.0250%" height="15" fill="rgb(227,62,0)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="735.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}} (31 samples, 0.03%)</title><rect x="99.6740%" y="709" width="0.0250%" height="15" fill="rgb(211,226,4)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="719.50"></text></g><g><title>async_global_executor::init::init_with_config (31 samples, 0.03%)</title><rect x="99.6740%" y="693" width="0.0250%" height="15" fill="rgb(253,38,52)" fg:x="123523" fg:w="31"/><text x="99.9240%" y="703.50"></text></g><g><title>async_global_executor::init::init (30 samples, 0.02%)</title><rect x="99.6748%" y="677" width="0.0242%" height="15" fill="rgb(229,126,40)" fg:x="123524" fg:w="30"/><text x="99.9248%" y="687.50"></text></g><g><title>async_global_executor::reactor::block_on (30 samples, 0.02%)</title><rect x="99.6748%" y="661" width="0.0242%" height="15" fill="rgb(229,165,44)" fg:x="123524" fg:w="30"/><text x="99.9248%" y="671.50"></text></g><g><title>[unknown] (59 samples, 0.05%)</title><rect x="99.6643%" y="933" width="0.0476%" height="15" fill="rgb(247,95,47)" fg:x="123511" fg:w="59"/><text x="99.9143%" y="943.50"></text></g><g><title>__ctype_init (19 samples, 0.02%)</title><rect x="99.8991%" y="901" width="0.0153%" height="15" fill="rgb(216,140,30)" fg:x="123802" fg:w="19"/><text x="100.1491%" y="911.50"></text></g><g><title>main (348 samples, 0.28%)</title><rect x="99.6441%" y="949" width="0.2808%" height="15" fill="rgb(246,214,8)" fg:x="123486" fg:w="348"/><text x="99.8941%" y="959.50"></text></g><g><title>clone (262 samples, 0.21%)</title><rect x="99.7135%" y="933" width="0.2114%" height="15" fill="rgb(227,224,15)" fg:x="123572" fg:w="262"/><text x="99.9635%" y="943.50"></text></g><g><title>start_thread (45 samples, 0.04%)</title><rect x="99.8886%" y="917" width="0.0363%" height="15" fill="rgb(233,175,4)" fg:x="123789" fg:w="45"/><text x="100.1386%" y="927.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 0.01%)</title><rect x="99.9145%" y="901" width="0.0105%" height="15" fill="rgb(221,66,45)" fg:x="123821" fg:w="13"/><text x="100.1645%" y="911.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (13 samples, 0.01%)</title><rect x="99.9145%" y="885" width="0.0105%" height="15" fill="rgb(221,178,18)" fg:x="123821" fg:w="13"/><text x="100.1645%" y="895.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (13 samples, 0.01%)</title><rect x="99.9145%" y="869" width="0.0105%" height="15" fill="rgb(213,81,29)" fg:x="123821" fg:w="13"/><text x="100.1645%" y="879.50"></text></g><g><title>std::sys::unix::futex::futex_wait (58 samples, 0.05%)</title><rect x="99.9274%" y="613" width="0.0468%" height="15" fill="rgb(220,89,49)" fg:x="123837" fg:w="58"/><text x="100.1774%" y="623.50"></text></g><g><title>syscall (56 samples, 0.05%)</title><rect x="99.9290%" y="597" width="0.0452%" height="15" fill="rgb(227,60,33)" fg:x="123839" fg:w="56"/><text x="100.1790%" y="607.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (75 samples, 0.06%)</title><rect x="99.9274%" y="709" width="0.0605%" height="15" fill="rgb(205,113,12)" fg:x="123837" fg:w="75"/><text x="100.1774%" y="719.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (75 samples, 0.06%)</title><rect x="99.9274%" y="693" width="0.0605%" height="15" fill="rgb(211,32,1)" fg:x="123837" fg:w="75"/><text x="100.1774%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (75 samples, 0.06%)</title><rect x="99.9274%" y="677" width="0.0605%" height="15" fill="rgb(246,2,12)" fg:x="123837" fg:w="75"/><text x="100.1774%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (75 samples, 0.06%)</title><rect x="99.9274%" y="661" width="0.0605%" height="15" fill="rgb(243,37,27)" fg:x="123837" fg:w="75"/><text x="100.1774%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (75 samples, 0.06%)</title><rect x="99.9274%" y="645" width="0.0605%" height="15" fill="rgb(248,211,31)" fg:x="123837" fg:w="75"/><text x="100.1774%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (75 samples, 0.06%)</title><rect x="99.9274%" y="629" width="0.0605%" height="15" fill="rgb(242,146,47)" fg:x="123837" fg:w="75"/><text x="100.1774%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (17 samples, 0.01%)</title><rect x="99.9742%" y="613" width="0.0137%" height="15" fill="rgb(206,70,20)" fg:x="123895" fg:w="17"/><text x="100.2242%" y="623.50"></text></g><g><title>std::panic::catch_unwind (76 samples, 0.06%)</title><rect x="99.9274%" y="821" width="0.0613%" height="15" fill="rgb(215,10,51)" fg:x="123837" fg:w="76"/><text x="100.1774%" y="831.50"></text></g><g><title>std::panicking::try (76 samples, 0.06%)</title><rect x="99.9274%" y="805" width="0.0613%" height="15" fill="rgb(243,178,53)" fg:x="123837" fg:w="76"/><text x="100.1774%" y="815.50"></text></g><g><title>std::panicking::try::do_call (76 samples, 0.06%)</title><rect x="99.9274%" y="789" width="0.0613%" height="15" fill="rgb(233,221,20)" fg:x="123837" fg:w="76"/><text x="100.1774%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (76 samples, 0.06%)</title><rect x="99.9274%" y="773" width="0.0613%" height="15" fill="rgb(218,95,35)" fg:x="123837" fg:w="76"/><text x="100.1774%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (76 samples, 0.06%)</title><rect x="99.9274%" y="757" width="0.0613%" height="15" fill="rgb(229,13,5)" fg:x="123837" fg:w="76"/><text x="100.1774%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (76 samples, 0.06%)</title><rect x="99.9274%" y="741" width="0.0613%" height="15" fill="rgb(252,164,30)" fg:x="123837" fg:w="76"/><text x="100.1774%" y="751.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (76 samples, 0.06%)</title><rect x="99.9274%" y="725" width="0.0613%" height="15" fill="rgb(232,68,36)" fg:x="123837" fg:w="76"/><text x="100.1774%" y="735.50"></text></g><g><title>all (123,927 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(219,59,54)" fg:x="0" fg:w="123927"/><text x="0.2500%" y="975.50"></text></g><g><title>tokio-runtime-w (93 samples, 0.08%)</title><rect x="99.9250%" y="949" width="0.0750%" height="15" fill="rgb(250,92,33)" fg:x="123834" fg:w="93"/><text x="100.1750%" y="959.50"></text></g><g><title>clone (90 samples, 0.07%)</title><rect x="99.9274%" y="933" width="0.0726%" height="15" fill="rgb(229,162,54)" fg:x="123837" fg:w="90"/><text x="100.1774%" y="943.50"></text></g><g><title>start_thread (90 samples, 0.07%)</title><rect x="99.9274%" y="917" width="0.0726%" height="15" fill="rgb(244,114,52)" fg:x="123837" fg:w="90"/><text x="100.1774%" y="927.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (90 samples, 0.07%)</title><rect x="99.9274%" y="901" width="0.0726%" height="15" fill="rgb(212,211,43)" fg:x="123837" fg:w="90"/><text x="100.1774%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (90 samples, 0.07%)</title><rect x="99.9274%" y="885" width="0.0726%" height="15" fill="rgb(226,147,8)" fg:x="123837" fg:w="90"/><text x="100.1774%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (90 samples, 0.07%)</title><rect x="99.9274%" y="869" width="0.0726%" height="15" fill="rgb(226,23,13)" fg:x="123837" fg:w="90"/><text x="100.1774%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (90 samples, 0.07%)</title><rect x="99.9274%" y="853" width="0.0726%" height="15" fill="rgb(240,63,4)" fg:x="123837" fg:w="90"/><text x="100.1774%" y="863.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (90 samples, 0.07%)</title><rect x="99.9274%" y="837" width="0.0726%" height="15" fill="rgb(221,1,32)" fg:x="123837" fg:w="90"/><text x="100.1774%" y="847.50"></text></g></svg></svg>