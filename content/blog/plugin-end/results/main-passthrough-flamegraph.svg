<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="997.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="124195"><g><title>async-io (78 samples, 0.06%)</title><rect x="0.0008%" y="949" width="0.0628%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="78"/><text x="0.2508%" y="959.50"></text></g><g><title>clone (75 samples, 0.06%)</title><rect x="0.0032%" y="933" width="0.0604%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="75"/><text x="0.2532%" y="943.50"></text></g><g><title>start_thread (75 samples, 0.06%)</title><rect x="0.0032%" y="917" width="0.0604%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="75"/><text x="0.2532%" y="927.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (75 samples, 0.06%)</title><rect x="0.0032%" y="901" width="0.0604%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="75"/><text x="0.2532%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75 samples, 0.06%)</title><rect x="0.0032%" y="885" width="0.0604%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="75"/><text x="0.2532%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75 samples, 0.06%)</title><rect x="0.0032%" y="869" width="0.0604%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="75"/><text x="0.2532%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (75 samples, 0.06%)</title><rect x="0.0032%" y="853" width="0.0604%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="75"/><text x="0.2532%" y="863.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (75 samples, 0.06%)</title><rect x="0.0032%" y="837" width="0.0604%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="75"/><text x="0.2532%" y="847.50"></text></g><g><title>std::panic::catch_unwind (75 samples, 0.06%)</title><rect x="0.0032%" y="821" width="0.0604%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="75"/><text x="0.2532%" y="831.50"></text></g><g><title>std::panicking::try (75 samples, 0.06%)</title><rect x="0.0032%" y="805" width="0.0604%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="75"/><text x="0.2532%" y="815.50"></text></g><g><title>std::panicking::try::do_call (75 samples, 0.06%)</title><rect x="0.0032%" y="789" width="0.0604%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="75"/><text x="0.2532%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (75 samples, 0.06%)</title><rect x="0.0032%" y="773" width="0.0604%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="75"/><text x="0.2532%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (75 samples, 0.06%)</title><rect x="0.0032%" y="757" width="0.0604%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="75"/><text x="0.2532%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (75 samples, 0.06%)</title><rect x="0.0032%" y="741" width="0.0604%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="75"/><text x="0.2532%" y="751.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (75 samples, 0.06%)</title><rect x="0.0032%" y="725" width="0.0604%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="75"/><text x="0.2532%" y="735.50"></text></g><g><title>async_io::driver::main_loop (75 samples, 0.06%)</title><rect x="0.0032%" y="709" width="0.0604%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="75"/><text x="0.2532%" y="719.50"></text></g><g><title>parking::Parker::park_timeout (69 samples, 0.06%)</title><rect x="0.0081%" y="693" width="0.0556%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="69"/><text x="0.2581%" y="703.50"></text></g><g><title>parking::Inner::park (69 samples, 0.06%)</title><rect x="0.0081%" y="677" width="0.0556%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="69"/><text x="0.2581%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (69 samples, 0.06%)</title><rect x="0.0081%" y="661" width="0.0556%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="69"/><text x="0.2581%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (68 samples, 0.05%)</title><rect x="0.0089%" y="645" width="0.0548%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="68"/><text x="0.2589%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (68 samples, 0.05%)</title><rect x="0.0089%" y="629" width="0.0548%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="68"/><text x="0.2589%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (68 samples, 0.05%)</title><rect x="0.0089%" y="613" width="0.0548%" height="15" fill="rgb(235,183,28)" fg:x="11" fg:w="68"/><text x="0.2589%" y="623.50"></text></g><g><title>std::sys::unix::futex::futex_wait (67 samples, 0.05%)</title><rect x="0.0097%" y="597" width="0.0539%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="67"/><text x="0.2597%" y="607.50"></text></g><g><title>syscall (60 samples, 0.05%)</title><rect x="0.0153%" y="581" width="0.0483%" height="15" fill="rgb(247,18,42)" fg:x="19" fg:w="60"/><text x="0.2653%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="0.0636%" y="933" width="0.0113%" height="15" fill="rgb(241,131,45)" fg:x="79" fg:w="14"/><text x="0.3136%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="0.0749%" y="933" width="0.0113%" height="15" fill="rgb(249,31,29)" fg:x="93" fg:w="14"/><text x="0.3249%" y="943.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (28 samples, 0.02%)</title><rect x="0.0862%" y="933" width="0.0225%" height="15" fill="rgb(225,111,53)" fg:x="107" fg:w="28"/><text x="0.3362%" y="943.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="0.1087%" y="933" width="0.0193%" height="15" fill="rgb(238,160,17)" fg:x="135" fg:w="24"/><text x="0.3587%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.01%)</title><rect x="0.1280%" y="933" width="0.0145%" height="15" fill="rgb(214,148,48)" fg:x="159" fg:w="18"/><text x="0.3780%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.02%)</title><rect x="0.1530%" y="917" width="0.0242%" height="15" fill="rgb(232,36,49)" fg:x="190" fg:w="30"/><text x="0.4030%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.04%)</title><rect x="0.1771%" y="917" width="0.0419%" height="15" fill="rgb(209,103,24)" fg:x="220" fg:w="52"/><text x="0.4271%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.04%)</title><rect x="0.2255%" y="917" width="0.0395%" height="15" fill="rgb(229,88,8)" fg:x="280" fg:w="49"/><text x="0.4755%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.03%)</title><rect x="0.2649%" y="917" width="0.0330%" height="15" fill="rgb(213,181,19)" fg:x="329" fg:w="41"/><text x="0.5149%" y="927.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.04%)</title><rect x="0.2979%" y="917" width="0.0386%" height="15" fill="rgb(254,191,54)" fg:x="370" fg:w="48"/><text x="0.5479%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (233 samples, 0.19%)</title><rect x="0.3438%" y="917" width="0.1876%" height="15" fill="rgb(241,83,37)" fg:x="427" fg:w="233"/><text x="0.5938%" y="927.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (38 samples, 0.03%)</title><rect x="0.5008%" y="901" width="0.0306%" height="15" fill="rgb(233,36,39)" fg:x="622" fg:w="38"/><text x="0.7508%" y="911.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.02%)</title><rect x="0.5314%" y="917" width="0.0225%" height="15" fill="rgb(226,3,54)" fg:x="660" fg:w="28"/><text x="0.7814%" y="927.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (57 samples, 0.05%)</title><rect x="0.5966%" y="901" width="0.0459%" height="15" fill="rgb(245,192,40)" fg:x="741" fg:w="57"/><text x="0.8466%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (35 samples, 0.03%)</title><rect x="0.6144%" y="885" width="0.0282%" height="15" fill="rgb(238,167,29)" fg:x="763" fg:w="35"/><text x="0.8644%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (121 samples, 0.10%)</title><rect x="0.5540%" y="917" width="0.0974%" height="15" fill="rgb(232,182,51)" fg:x="688" fg:w="121"/><text x="0.8040%" y="927.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (38 samples, 0.03%)</title><rect x="0.9791%" y="901" width="0.0306%" height="15" fill="rgb(231,60,39)" fg:x="1216" fg:w="38"/><text x="1.2291%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="1.0355%" y="885" width="0.0153%" height="15" fill="rgb(208,69,12)" fg:x="1286" fg:w="19"/><text x="1.2855%" y="895.50"></text></g><g><title>core::ptr::read (19 samples, 0.02%)</title><rect x="1.0355%" y="869" width="0.0153%" height="15" fill="rgb(235,93,37)" fg:x="1286" fg:w="19"/><text x="1.2855%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (74 samples, 0.06%)</title><rect x="1.0161%" y="901" width="0.0596%" height="15" fill="rgb(213,116,39)" fg:x="1262" fg:w="74"/><text x="1.2661%" y="911.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (16 samples, 0.01%)</title><rect x="1.0854%" y="901" width="0.0129%" height="15" fill="rgb(222,207,29)" fg:x="1348" fg:w="16"/><text x="1.3354%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="1.1587%" y="757" width="0.0153%" height="15" fill="rgb(206,96,30)" fg:x="1439" fg:w="19"/><text x="1.4087%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.02%)</title><rect x="1.1587%" y="741" width="0.0153%" height="15" fill="rgb(218,138,4)" fg:x="1439" fg:w="19"/><text x="1.4087%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.02%)</title><rect x="1.1587%" y="725" width="0.0153%" height="15" fill="rgb(250,191,14)" fg:x="1439" fg:w="19"/><text x="1.4087%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="1.1587%" y="709" width="0.0153%" height="15" fill="rgb(239,60,40)" fg:x="1439" fg:w="19"/><text x="1.4087%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="1.1587%" y="693" width="0.0153%" height="15" fill="rgb(206,27,48)" fg:x="1439" fg:w="19"/><text x="1.4087%" y="703.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="1.1587%" y="677" width="0.0153%" height="15" fill="rgb(225,35,8)" fg:x="1439" fg:w="19"/><text x="1.4087%" y="687.50"></text></g><g><title>__rg_alloc (19 samples, 0.02%)</title><rect x="1.1587%" y="661" width="0.0153%" height="15" fill="rgb(250,213,24)" fg:x="1439" fg:w="19"/><text x="1.4087%" y="671.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (19 samples, 0.02%)</title><rect x="1.1587%" y="645" width="0.0153%" height="15" fill="rgb(247,123,22)" fg:x="1439" fg:w="19"/><text x="1.4087%" y="655.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (21 samples, 0.02%)</title><rect x="1.1587%" y="885" width="0.0169%" height="15" fill="rgb(231,138,38)" fg:x="1439" fg:w="21"/><text x="1.4087%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (21 samples, 0.02%)</title><rect x="1.1587%" y="869" width="0.0169%" height="15" fill="rgb(231,145,46)" fg:x="1439" fg:w="21"/><text x="1.4087%" y="879.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (21 samples, 0.02%)</title><rect x="1.1587%" y="853" width="0.0169%" height="15" fill="rgb(251,118,11)" fg:x="1439" fg:w="21"/><text x="1.4087%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (21 samples, 0.02%)</title><rect x="1.1587%" y="837" width="0.0169%" height="15" fill="rgb(217,147,25)" fg:x="1439" fg:w="21"/><text x="1.4087%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (21 samples, 0.02%)</title><rect x="1.1587%" y="821" width="0.0169%" height="15" fill="rgb(247,81,37)" fg:x="1439" fg:w="21"/><text x="1.4087%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.02%)</title><rect x="1.1587%" y="805" width="0.0169%" height="15" fill="rgb(209,12,38)" fg:x="1439" fg:w="21"/><text x="1.4087%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.02%)</title><rect x="1.1587%" y="789" width="0.0169%" height="15" fill="rgb(227,1,9)" fg:x="1439" fg:w="21"/><text x="1.4087%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.02%)</title><rect x="1.1587%" y="773" width="0.0169%" height="15" fill="rgb(248,47,43)" fg:x="1439" fg:w="21"/><text x="1.4087%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (659 samples, 0.53%)</title><rect x="0.6514%" y="917" width="0.5306%" height="15" fill="rgb(221,10,30)" fg:x="809" fg:w="659"/><text x="0.9014%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (104 samples, 0.08%)</title><rect x="1.0983%" y="901" width="0.0837%" height="15" fill="rgb(210,229,1)" fg:x="1364" fg:w="104"/><text x="1.3483%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (106 samples, 0.09%)</title><rect x="1.1820%" y="917" width="0.0853%" height="15" fill="rgb(222,148,37)" fg:x="1468" fg:w="106"/><text x="1.4320%" y="927.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.03%)</title><rect x="1.2730%" y="917" width="0.0282%" height="15" fill="rgb(234,67,33)" fg:x="1581" fg:w="35"/><text x="1.5230%" y="927.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (42 samples, 0.03%)</title><rect x="1.3012%" y="917" width="0.0338%" height="15" fill="rgb(247,98,35)" fg:x="1616" fg:w="42"/><text x="1.5512%" y="927.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (32 samples, 0.03%)</title><rect x="1.3447%" y="917" width="0.0258%" height="15" fill="rgb(247,138,52)" fg:x="1670" fg:w="32"/><text x="1.5947%" y="927.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (212 samples, 0.17%)</title><rect x="1.3704%" y="917" width="0.1707%" height="15" fill="rgb(213,79,30)" fg:x="1702" fg:w="212"/><text x="1.6204%" y="927.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (86 samples, 0.07%)</title><rect x="1.4719%" y="901" width="0.0692%" height="15" fill="rgb(246,177,23)" fg:x="1828" fg:w="86"/><text x="1.7219%" y="911.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.06%)</title><rect x="1.4848%" y="885" width="0.0564%" height="15" fill="rgb(230,62,27)" fg:x="1844" fg:w="70"/><text x="1.7348%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.01%)</title><rect x="1.5282%" y="869" width="0.0129%" height="15" fill="rgb(216,154,8)" fg:x="1898" fg:w="16"/><text x="1.7782%" y="879.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (22 samples, 0.02%)</title><rect x="1.5500%" y="917" width="0.0177%" height="15" fill="rgb(244,35,45)" fg:x="1925" fg:w="22"/><text x="1.8000%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="1.5564%" y="901" width="0.0113%" height="15" fill="rgb(251,115,12)" fg:x="1933" fg:w="14"/><text x="1.8064%" y="911.50"></text></g><g><title>[[vdso]] (27 samples, 0.02%)</title><rect x="1.5677%" y="917" width="0.0217%" height="15" fill="rgb(240,54,50)" fg:x="1947" fg:w="27"/><text x="1.8177%" y="927.50"></text></g><g><title>[libc-2.31.so] (69 samples, 0.06%)</title><rect x="1.5894%" y="917" width="0.0556%" height="15" fill="rgb(233,84,52)" fg:x="1974" fg:w="69"/><text x="1.8394%" y="927.50"></text></g><g><title>__clock_gettime (94 samples, 0.08%)</title><rect x="1.6450%" y="917" width="0.0757%" height="15" fill="rgb(207,117,47)" fg:x="2043" fg:w="94"/><text x="1.8950%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.01%)</title><rect x="1.7279%" y="917" width="0.0129%" height="15" fill="rgb(249,43,39)" fg:x="2146" fg:w="16"/><text x="1.9779%" y="927.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (22 samples, 0.02%)</title><rect x="1.7408%" y="917" width="0.0177%" height="15" fill="rgb(209,38,44)" fg:x="2162" fg:w="22"/><text x="1.9908%" y="927.50"></text></g><g><title>async_executor::State::notify (21 samples, 0.02%)</title><rect x="1.7585%" y="917" width="0.0169%" height="15" fill="rgb(236,212,23)" fg:x="2184" fg:w="21"/><text x="2.0085%" y="927.50"></text></g><g><title>async_executor::Ticker::sleep (18 samples, 0.01%)</title><rect x="1.7754%" y="917" width="0.0145%" height="15" fill="rgb(242,79,21)" fg:x="2205" fg:w="18"/><text x="2.0254%" y="927.50"></text></g><g><title>async_executor::Ticker::wake (37 samples, 0.03%)</title><rect x="1.7899%" y="917" width="0.0298%" height="15" fill="rgb(211,96,35)" fg:x="2223" fg:w="37"/><text x="2.0399%" y="927.50"></text></g><g><title>async_executor::steal (218 samples, 0.18%)</title><rect x="1.8197%" y="917" width="0.1755%" height="15" fill="rgb(253,215,40)" fg:x="2260" fg:w="218"/><text x="2.0697%" y="927.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (444 samples, 0.36%)</title><rect x="2.0242%" y="917" width="0.3575%" height="15" fill="rgb(211,81,21)" fg:x="2514" fg:w="444"/><text x="2.2742%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (17 samples, 0.01%)</title><rect x="2.3681%" y="901" width="0.0137%" height="15" fill="rgb(208,190,38)" fg:x="2941" fg:w="17"/><text x="2.6181%" y="911.50"></text></g><g><title>core::ptr::read (17 samples, 0.01%)</title><rect x="2.3681%" y="885" width="0.0137%" height="15" fill="rgb(235,213,38)" fg:x="2941" fg:w="17"/><text x="2.6181%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (49 samples, 0.04%)</title><rect x="2.3817%" y="917" width="0.0395%" height="15" fill="rgb(237,122,38)" fg:x="2958" fg:w="49"/><text x="2.6317%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (55 samples, 0.04%)</title><rect x="2.4212%" y="917" width="0.0443%" height="15" fill="rgb(244,218,35)" fg:x="3007" fg:w="55"/><text x="2.6712%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (33 samples, 0.03%)</title><rect x="2.4655%" y="917" width="0.0266%" height="15" fill="rgb(240,68,47)" fg:x="3062" fg:w="33"/><text x="2.7155%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (30 samples, 0.02%)</title><rect x="2.5049%" y="917" width="0.0242%" height="15" fill="rgb(210,16,53)" fg:x="3111" fg:w="30"/><text x="2.7549%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (23 samples, 0.02%)</title><rect x="2.5106%" y="901" width="0.0185%" height="15" fill="rgb(235,124,12)" fg:x="3118" fg:w="23"/><text x="2.7606%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::cb::CbSource&gt;::route_events::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="2.5347%" y="917" width="0.0129%" height="15" fill="rgb(224,169,11)" fg:x="3148" fg:w="16"/><text x="2.7847%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::OutputTarget::send_event::{{closure}}&gt;&gt; (52 samples, 0.04%)</title><rect x="2.5476%" y="917" width="0.0419%" height="15" fill="rgb(250,166,2)" fg:x="3164" fg:w="52"/><text x="2.7976%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="2.5895%" y="917" width="0.0169%" height="15" fill="rgb(242,216,29)" fg:x="3216" fg:w="21"/><text x="2.8395%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt; (21 samples, 0.02%)</title><rect x="2.5895%" y="901" width="0.0169%" height="15" fill="rgb(230,116,27)" fg:x="3216" fg:w="21"/><text x="2.8395%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="2.6064%" y="917" width="0.0105%" height="15" fill="rgb(228,99,48)" fg:x="3237" fg:w="13"/><text x="2.8564%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (101 samples, 0.08%)</title><rect x="2.6249%" y="917" width="0.0813%" height="15" fill="rgb(253,11,6)" fg:x="3260" fg:w="101"/><text x="2.8749%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (41 samples, 0.03%)</title><rect x="2.7449%" y="901" width="0.0330%" height="15" fill="rgb(247,143,39)" fg:x="3409" fg:w="41"/><text x="2.9949%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (41 samples, 0.03%)</title><rect x="2.7449%" y="885" width="0.0330%" height="15" fill="rgb(236,97,10)" fg:x="3409" fg:w="41"/><text x="2.9949%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (41 samples, 0.03%)</title><rect x="2.7449%" y="869" width="0.0330%" height="15" fill="rgb(233,208,19)" fg:x="3409" fg:w="41"/><text x="2.9949%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.03%)</title><rect x="2.7449%" y="853" width="0.0330%" height="15" fill="rgb(216,164,2)" fg:x="3409" fg:w="41"/><text x="2.9949%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.03%)</title><rect x="2.7449%" y="837" width="0.0330%" height="15" fill="rgb(220,129,5)" fg:x="3409" fg:w="41"/><text x="2.9949%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 0.03%)</title><rect x="2.7449%" y="821" width="0.0330%" height="15" fill="rgb(242,17,10)" fg:x="3409" fg:w="41"/><text x="2.9949%" y="831.50"></text></g><g><title>__rg_dealloc (41 samples, 0.03%)</title><rect x="2.7449%" y="805" width="0.0330%" height="15" fill="rgb(242,107,0)" fg:x="3409" fg:w="41"/><text x="2.9949%" y="815.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (41 samples, 0.03%)</title><rect x="2.7449%" y="789" width="0.0330%" height="15" fill="rgb(251,28,31)" fg:x="3409" fg:w="41"/><text x="2.9949%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (91 samples, 0.07%)</title><rect x="2.7094%" y="917" width="0.0733%" height="15" fill="rgb(233,223,10)" fg:x="3365" fg:w="91"/><text x="2.9594%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="2.8093%" y="901" width="0.0129%" height="15" fill="rgb(215,21,27)" fg:x="3489" fg:w="16"/><text x="3.0593%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="2.8093%" y="885" width="0.0129%" height="15" fill="rgb(232,23,21)" fg:x="3489" fg:w="16"/><text x="3.0593%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (16 samples, 0.01%)</title><rect x="2.8093%" y="869" width="0.0129%" height="15" fill="rgb(244,5,23)" fg:x="3489" fg:w="16"/><text x="3.0593%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="2.8093%" y="853" width="0.0129%" height="15" fill="rgb(226,81,46)" fg:x="3489" fg:w="16"/><text x="3.0593%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="2.8093%" y="837" width="0.0129%" height="15" fill="rgb(247,70,30)" fg:x="3489" fg:w="16"/><text x="3.0593%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (61 samples, 0.05%)</title><rect x="2.7827%" y="917" width="0.0491%" height="15" fill="rgb(212,68,19)" fg:x="3456" fg:w="61"/><text x="3.0327%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (51 samples, 0.04%)</title><rect x="2.8318%" y="917" width="0.0411%" height="15" fill="rgb(240,187,13)" fg:x="3517" fg:w="51"/><text x="3.0818%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (27 samples, 0.02%)</title><rect x="2.8512%" y="901" width="0.0217%" height="15" fill="rgb(223,113,26)" fg:x="3541" fg:w="27"/><text x="3.1012%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (27 samples, 0.02%)</title><rect x="2.8512%" y="885" width="0.0217%" height="15" fill="rgb(206,192,2)" fg:x="3541" fg:w="27"/><text x="3.1012%" y="895.50"></text></g><g><title>event_listener::Event::listen (18 samples, 0.01%)</title><rect x="2.8729%" y="917" width="0.0145%" height="15" fill="rgb(241,108,4)" fg:x="3568" fg:w="18"/><text x="3.1229%" y="927.50"></text></g><g><title>event_listener::Event::inner (16 samples, 0.01%)</title><rect x="2.8745%" y="901" width="0.0129%" height="15" fill="rgb(247,173,49)" fg:x="3570" fg:w="16"/><text x="3.1245%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (16 samples, 0.01%)</title><rect x="2.8745%" y="885" width="0.0129%" height="15" fill="rgb(224,114,35)" fg:x="3570" fg:w="16"/><text x="3.1245%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="2.8745%" y="869" width="0.0129%" height="15" fill="rgb(245,159,27)" fg:x="3570" fg:w="16"/><text x="3.1245%" y="879.50"></text></g><g><title>event_listener::Event::notify (196 samples, 0.16%)</title><rect x="2.8874%" y="917" width="0.1578%" height="15" fill="rgb(245,172,44)" fg:x="3586" fg:w="196"/><text x="3.1374%" y="927.50"></text></g><g><title>event_listener::full_fence (84 samples, 0.07%)</title><rect x="2.9776%" y="901" width="0.0676%" height="15" fill="rgb(236,23,11)" fg:x="3698" fg:w="84"/><text x="3.2276%" y="911.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (74 samples, 0.06%)</title><rect x="3.0557%" y="917" width="0.0596%" height="15" fill="rgb(205,117,38)" fg:x="3795" fg:w="74"/><text x="3.3057%" y="927.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (16 samples, 0.01%)</title><rect x="3.1024%" y="901" width="0.0129%" height="15" fill="rgb(237,72,25)" fg:x="3853" fg:w="16"/><text x="3.3524%" y="911.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (16 samples, 0.01%)</title><rect x="3.1024%" y="885" width="0.0129%" height="15" fill="rgb(244,70,9)" fg:x="3853" fg:w="16"/><text x="3.3524%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="3.1024%" y="869" width="0.0129%" height="15" fill="rgb(217,125,39)" fg:x="3853" fg:w="16"/><text x="3.3524%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (16 samples, 0.01%)</title><rect x="3.1024%" y="853" width="0.0129%" height="15" fill="rgb(235,36,10)" fg:x="3853" fg:w="16"/><text x="3.3524%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.01%)</title><rect x="3.1024%" y="837" width="0.0129%" height="15" fill="rgb(251,123,47)" fg:x="3853" fg:w="16"/><text x="3.3524%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (16 samples, 0.01%)</title><rect x="3.1024%" y="821" width="0.0129%" height="15" fill="rgb(221,13,13)" fg:x="3853" fg:w="16"/><text x="3.3524%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (16 samples, 0.01%)</title><rect x="3.1024%" y="805" width="0.0129%" height="15" fill="rgb(238,131,9)" fg:x="3853" fg:w="16"/><text x="3.3524%" y="815.50"></text></g><g><title>parking::Unparker::unpark (25 samples, 0.02%)</title><rect x="3.1153%" y="917" width="0.0201%" height="15" fill="rgb(211,50,8)" fg:x="3869" fg:w="25"/><text x="3.3653%" y="927.50"></text></g><g><title>sn_rust_alloc (79 samples, 0.06%)</title><rect x="3.1386%" y="917" width="0.0636%" height="15" fill="rgb(245,182,24)" fg:x="3898" fg:w="79"/><text x="3.3886%" y="927.50"></text></g><g><title>sn_rust_dealloc (18 samples, 0.01%)</title><rect x="3.2022%" y="917" width="0.0145%" height="15" fill="rgb(242,14,37)" fg:x="3977" fg:w="18"/><text x="3.4522%" y="927.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (22 samples, 0.02%)</title><rect x="3.2264%" y="917" width="0.0177%" height="15" fill="rgb(246,228,12)" fg:x="4007" fg:w="22"/><text x="3.4764%" y="927.50"></text></g><g><title>std::sys::unix::futex::futex_wait (24 samples, 0.02%)</title><rect x="3.2441%" y="917" width="0.0193%" height="15" fill="rgb(213,55,15)" fg:x="4029" fg:w="24"/><text x="3.4941%" y="927.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (13 samples, 0.01%)</title><rect x="3.2634%" y="917" width="0.0105%" height="15" fill="rgb(209,9,3)" fg:x="4053" fg:w="13"/><text x="3.5134%" y="927.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (62 samples, 0.05%)</title><rect x="3.2771%" y="917" width="0.0499%" height="15" fill="rgb(230,59,30)" fg:x="4070" fg:w="62"/><text x="3.5271%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (64 samples, 0.05%)</title><rect x="3.3270%" y="917" width="0.0515%" height="15" fill="rgb(209,121,21)" fg:x="4132" fg:w="64"/><text x="3.5770%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.02%)</title><rect x="3.3560%" y="901" width="0.0225%" height="15" fill="rgb(220,109,13)" fg:x="4168" fg:w="28"/><text x="3.6060%" y="911.50"></text></g><g><title>syscall (35 samples, 0.03%)</title><rect x="3.3786%" y="917" width="0.0282%" height="15" fill="rgb(232,18,1)" fg:x="4196" fg:w="35"/><text x="3.6286%" y="927.50"></text></g><g><title>tremor_common::time::nanotime (43 samples, 0.03%)</title><rect x="3.4067%" y="917" width="0.0346%" height="15" fill="rgb(215,41,42)" fg:x="4231" fg:w="43"/><text x="3.6567%" y="927.50"></text></g><g><title>std::time::SystemTime::now (27 samples, 0.02%)</title><rect x="3.4196%" y="901" width="0.0217%" height="15" fill="rgb(224,123,36)" fg:x="4247" fg:w="27"/><text x="3.6696%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (27 samples, 0.02%)</title><rect x="3.4196%" y="885" width="0.0217%" height="15" fill="rgb(240,125,3)" fg:x="4247" fg:w="27"/><text x="3.6696%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (27 samples, 0.02%)</title><rect x="3.4196%" y="869" width="0.0217%" height="15" fill="rgb(205,98,50)" fg:x="4247" fg:w="27"/><text x="3.6696%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (27 samples, 0.02%)</title><rect x="3.4494%" y="917" width="0.0217%" height="15" fill="rgb(205,185,37)" fg:x="4284" fg:w="27"/><text x="3.6994%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::maybe_send (32 samples, 0.03%)</title><rect x="3.4760%" y="917" width="0.0258%" height="15" fill="rgb(238,207,15)" fg:x="4317" fg:w="32"/><text x="3.7260%" y="927.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (29 samples, 0.02%)</title><rect x="3.5034%" y="917" width="0.0234%" height="15" fill="rgb(213,199,42)" fg:x="4351" fg:w="29"/><text x="3.7534%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.01%)</title><rect x="3.5162%" y="901" width="0.0105%" height="15" fill="rgb(235,201,11)" fg:x="4367" fg:w="13"/><text x="3.7662%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="3.5162%" y="885" width="0.0105%" height="15" fill="rgb(207,46,11)" fg:x="4367" fg:w="13"/><text x="3.7662%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="3.5162%" y="869" width="0.0105%" height="15" fill="rgb(241,35,35)" fg:x="4367" fg:w="13"/><text x="3.7662%" y="879.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="3.5162%" y="853" width="0.0105%" height="15" fill="rgb(243,32,47)" fg:x="4367" fg:w="13"/><text x="3.7662%" y="863.50"></text></g><g><title>__rg_alloc (13 samples, 0.01%)</title><rect x="3.5162%" y="837" width="0.0105%" height="15" fill="rgb(247,202,23)" fg:x="4367" fg:w="13"/><text x="3.7662%" y="847.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.01%)</title><rect x="3.5162%" y="821" width="0.0105%" height="15" fill="rgb(219,102,11)" fg:x="4367" fg:w="13"/><text x="3.7662%" y="831.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (43 samples, 0.03%)</title><rect x="3.5267%" y="917" width="0.0346%" height="15" fill="rgb(243,110,44)" fg:x="4380" fg:w="43"/><text x="3.7767%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (24 samples, 0.02%)</title><rect x="3.5420%" y="901" width="0.0193%" height="15" fill="rgb(222,74,54)" fg:x="4399" fg:w="24"/><text x="3.7920%" y="911.50"></text></g><g><title>value_trait::Builder::object (22 samples, 0.02%)</title><rect x="3.5613%" y="917" width="0.0177%" height="15" fill="rgb(216,99,12)" fg:x="4423" fg:w="22"/><text x="3.8113%" y="927.50"></text></g><g><title>[anon] (4,284 samples, 3.45%)</title><rect x="0.1530%" y="933" width="3.4494%" height="15" fill="rgb(226,22,26)" fg:x="190" fg:w="4284"/><text x="0.4030%" y="943.50">[an..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (20 samples, 0.02%)</title><rect x="3.5863%" y="917" width="0.0161%" height="15" fill="rgb(217,163,10)" fg:x="4454" fg:w="20"/><text x="3.8363%" y="927.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.01%)</title><rect x="3.6096%" y="917" width="0.0145%" height="15" fill="rgb(213,25,53)" fg:x="4483" fg:w="18"/><text x="3.8596%" y="927.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="3.6282%" y="885" width="0.0201%" height="15" fill="rgb(252,105,26)" fg:x="4506" fg:w="25"/><text x="3.8782%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="3.6282%" y="869" width="0.0201%" height="15" fill="rgb(220,39,43)" fg:x="4506" fg:w="25"/><text x="3.8782%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="3.6282%" y="853" width="0.0201%" height="15" fill="rgb(229,68,48)" fg:x="4506" fg:w="25"/><text x="3.8782%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.02%)</title><rect x="3.6282%" y="837" width="0.0201%" height="15" fill="rgb(252,8,32)" fg:x="4506" fg:w="25"/><text x="3.8782%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.02%)</title><rect x="3.6282%" y="821" width="0.0201%" height="15" fill="rgb(223,20,43)" fg:x="4506" fg:w="25"/><text x="3.8782%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.02%)</title><rect x="3.6282%" y="805" width="0.0201%" height="15" fill="rgb(229,81,49)" fg:x="4506" fg:w="25"/><text x="3.8782%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14 samples, 0.01%)</title><rect x="3.6370%" y="789" width="0.0113%" height="15" fill="rgb(236,28,36)" fg:x="4517" fg:w="14"/><text x="3.8870%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="3.6370%" y="773" width="0.0113%" height="15" fill="rgb(249,185,26)" fg:x="4517" fg:w="14"/><text x="3.8870%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.05%)</title><rect x="3.6241%" y="917" width="0.0459%" height="15" fill="rgb(249,174,33)" fg:x="4501" fg:w="57"/><text x="3.8741%" y="927.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (52 samples, 0.04%)</title><rect x="3.6282%" y="901" width="0.0419%" height="15" fill="rgb(233,201,37)" fg:x="4506" fg:w="52"/><text x="3.8782%" y="911.50"></text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (20 samples, 0.02%)</title><rect x="3.6539%" y="885" width="0.0161%" height="15" fill="rgb(221,78,26)" fg:x="4538" fg:w="20"/><text x="3.9039%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="3.6539%" y="869" width="0.0161%" height="15" fill="rgb(250,127,30)" fg:x="4538" fg:w="20"/><text x="3.9039%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.02%)</title><rect x="3.6539%" y="853" width="0.0161%" height="15" fill="rgb(230,49,44)" fg:x="4538" fg:w="20"/><text x="3.9039%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.02%)</title><rect x="3.6539%" y="837" width="0.0161%" height="15" fill="rgb(229,67,23)" fg:x="4538" fg:w="20"/><text x="3.9039%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.02%)</title><rect x="3.6539%" y="821" width="0.0161%" height="15" fill="rgb(249,83,47)" fg:x="4538" fg:w="20"/><text x="3.9039%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="3.6700%" y="917" width="0.0121%" height="15" fill="rgb(215,43,3)" fg:x="4558" fg:w="15"/><text x="3.9200%" y="927.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (34 samples, 0.03%)</title><rect x="3.6918%" y="917" width="0.0274%" height="15" fill="rgb(238,154,13)" fg:x="4585" fg:w="34"/><text x="3.9418%" y="927.50"></text></g><g><title>event_listener::Event::notify (15 samples, 0.01%)</title><rect x="3.7256%" y="917" width="0.0121%" height="15" fill="rgb(219,56,2)" fg:x="4627" fg:w="15"/><text x="3.9756%" y="927.50"></text></g><g><title>event_listener::full_fence (15 samples, 0.01%)</title><rect x="3.7256%" y="901" width="0.0121%" height="15" fill="rgb(233,0,4)" fg:x="4627" fg:w="15"/><text x="3.9756%" y="911.50"></text></g><g><title>[libc-2.31.so] (174 samples, 0.14%)</title><rect x="3.6024%" y="933" width="0.1401%" height="15" fill="rgb(235,30,7)" fg:x="4474" fg:w="174"/><text x="3.8524%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.02%)</title><rect x="3.7457%" y="917" width="0.0234%" height="15" fill="rgb(250,79,13)" fg:x="4652" fg:w="29"/><text x="3.9957%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (17 samples, 0.01%)</title><rect x="3.7691%" y="917" width="0.0137%" height="15" fill="rgb(211,146,34)" fg:x="4681" fg:w="17"/><text x="4.0191%" y="927.50"></text></g><g><title>[tremor-main] (62 samples, 0.05%)</title><rect x="3.7425%" y="933" width="0.0499%" height="15" fill="rgb(228,22,38)" fg:x="4648" fg:w="62"/><text x="3.9925%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="3.8021%" y="917" width="0.0298%" height="15" fill="rgb(235,168,5)" fg:x="4722" fg:w="37"/><text x="4.0521%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="3.8939%" y="773" width="0.0121%" height="15" fill="rgb(221,155,16)" fg:x="4836" fg:w="15"/><text x="4.1439%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="3.8939%" y="757" width="0.0121%" height="15" fill="rgb(215,215,53)" fg:x="4836" fg:w="15"/><text x="4.1439%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.01%)</title><rect x="3.8939%" y="741" width="0.0121%" height="15" fill="rgb(223,4,10)" fg:x="4836" fg:w="15"/><text x="4.1439%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="3.8939%" y="725" width="0.0121%" height="15" fill="rgb(234,103,6)" fg:x="4836" fg:w="15"/><text x="4.1439%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="3.8939%" y="709" width="0.0121%" height="15" fill="rgb(227,97,0)" fg:x="4836" fg:w="15"/><text x="4.1439%" y="719.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="3.8939%" y="693" width="0.0121%" height="15" fill="rgb(234,150,53)" fg:x="4836" fg:w="15"/><text x="4.1439%" y="703.50"></text></g><g><title>__rg_alloc (15 samples, 0.01%)</title><rect x="3.8939%" y="677" width="0.0121%" height="15" fill="rgb(228,201,54)" fg:x="4836" fg:w="15"/><text x="4.1439%" y="687.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="3.8939%" y="661" width="0.0121%" height="15" fill="rgb(222,22,37)" fg:x="4836" fg:w="15"/><text x="4.1439%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="3.8939%" y="853" width="0.0217%" height="15" fill="rgb(237,53,32)" fg:x="4836" fg:w="27"/><text x="4.1439%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="3.8939%" y="837" width="0.0217%" height="15" fill="rgb(233,25,53)" fg:x="4836" fg:w="27"/><text x="4.1439%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="3.8939%" y="821" width="0.0217%" height="15" fill="rgb(210,40,34)" fg:x="4836" fg:w="27"/><text x="4.1439%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="3.8939%" y="805" width="0.0217%" height="15" fill="rgb(241,220,44)" fg:x="4836" fg:w="27"/><text x="4.1439%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="3.8939%" y="789" width="0.0217%" height="15" fill="rgb(235,28,35)" fg:x="4836" fg:w="27"/><text x="4.1439%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (103 samples, 0.08%)</title><rect x="3.8407%" y="917" width="0.0829%" height="15" fill="rgb(210,56,17)" fg:x="4770" fg:w="103"/><text x="4.0907%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.03%)</title><rect x="3.8939%" y="901" width="0.0298%" height="15" fill="rgb(224,130,29)" fg:x="4836" fg:w="37"/><text x="4.1439%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.03%)</title><rect x="3.8939%" y="885" width="0.0298%" height="15" fill="rgb(235,212,8)" fg:x="4836" fg:w="37"/><text x="4.1439%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.03%)</title><rect x="3.8939%" y="869" width="0.0298%" height="15" fill="rgb(223,33,50)" fg:x="4836" fg:w="37"/><text x="4.1439%" y="879.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (67 samples, 0.05%)</title><rect x="3.9333%" y="917" width="0.0539%" height="15" fill="rgb(219,149,13)" fg:x="4885" fg:w="67"/><text x="4.1833%" y="927.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="3.9873%" y="917" width="0.0113%" height="15" fill="rgb(250,156,29)" fg:x="4952" fg:w="14"/><text x="4.2373%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (405 samples, 0.33%)</title><rect x="4.1604%" y="437" width="0.3261%" height="15" fill="rgb(216,193,19)" fg:x="5167" fg:w="405"/><text x="4.4104%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (405 samples, 0.33%)</title><rect x="4.1604%" y="421" width="0.3261%" height="15" fill="rgb(216,135,14)" fg:x="5167" fg:w="405"/><text x="4.4104%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (428 samples, 0.34%)</title><rect x="4.4865%" y="437" width="0.3446%" height="15" fill="rgb(241,47,5)" fg:x="5572" fg:w="428"/><text x="4.7365%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (426 samples, 0.34%)</title><rect x="4.4881%" y="421" width="0.3430%" height="15" fill="rgb(233,42,35)" fg:x="5574" fg:w="426"/><text x="4.7381%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (904 samples, 0.73%)</title><rect x="4.1064%" y="469" width="0.7279%" height="15" fill="rgb(231,13,6)" fg:x="5100" fg:w="904"/><text x="4.3564%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (904 samples, 0.73%)</title><rect x="4.1064%" y="453" width="0.7279%" height="15" fill="rgb(207,181,40)" fg:x="5100" fg:w="904"/><text x="4.3564%" y="463.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="4.8472%" y="437" width="0.0113%" height="15" fill="rgb(254,173,49)" fg:x="6020" fg:w="14"/><text x="5.0972%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (94 samples, 0.08%)</title><rect x="4.8472%" y="453" width="0.0757%" height="15" fill="rgb(221,1,38)" fg:x="6020" fg:w="94"/><text x="5.0972%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (80 samples, 0.06%)</title><rect x="4.8585%" y="437" width="0.0644%" height="15" fill="rgb(206,124,46)" fg:x="6034" fg:w="80"/><text x="5.1085%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.06%)</title><rect x="4.8585%" y="421" width="0.0644%" height="15" fill="rgb(249,21,11)" fg:x="6034" fg:w="80"/><text x="5.1085%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (78 samples, 0.06%)</title><rect x="4.8601%" y="405" width="0.0628%" height="15" fill="rgb(222,201,40)" fg:x="6036" fg:w="78"/><text x="5.1101%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (78 samples, 0.06%)</title><rect x="4.8601%" y="389" width="0.0628%" height="15" fill="rgb(235,61,29)" fg:x="6036" fg:w="78"/><text x="5.1101%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (77 samples, 0.06%)</title><rect x="4.8609%" y="373" width="0.0620%" height="15" fill="rgb(219,207,3)" fg:x="6037" fg:w="77"/><text x="5.1109%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (77 samples, 0.06%)</title><rect x="4.8609%" y="357" width="0.0620%" height="15" fill="rgb(222,56,46)" fg:x="6037" fg:w="77"/><text x="5.1109%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (72 samples, 0.06%)</title><rect x="4.9229%" y="453" width="0.0580%" height="15" fill="rgb(239,76,54)" fg:x="6114" fg:w="72"/><text x="5.1729%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (72 samples, 0.06%)</title><rect x="4.9229%" y="437" width="0.0580%" height="15" fill="rgb(231,124,27)" fg:x="6114" fg:w="72"/><text x="5.1729%" y="447.50"></text></g><g><title>event_listener::Inner::lock (97 samples, 0.08%)</title><rect x="4.9817%" y="453" width="0.0781%" height="15" fill="rgb(249,195,6)" fg:x="6187" fg:w="97"/><text x="5.2317%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (86 samples, 0.07%)</title><rect x="4.9905%" y="437" width="0.0692%" height="15" fill="rgb(237,174,47)" fg:x="6198" fg:w="86"/><text x="5.2405%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (74 samples, 0.06%)</title><rect x="5.0002%" y="421" width="0.0596%" height="15" fill="rgb(206,201,31)" fg:x="6210" fg:w="74"/><text x="5.2502%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (74 samples, 0.06%)</title><rect x="5.0002%" y="405" width="0.0596%" height="15" fill="rgb(231,57,52)" fg:x="6210" fg:w="74"/><text x="5.2502%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (73 samples, 0.06%)</title><rect x="5.0010%" y="389" width="0.0588%" height="15" fill="rgb(248,177,22)" fg:x="6211" fg:w="73"/><text x="5.2510%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (73 samples, 0.06%)</title><rect x="5.0010%" y="373" width="0.0588%" height="15" fill="rgb(215,211,37)" fg:x="6211" fg:w="73"/><text x="5.2510%" y="383.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2,061 samples, 1.66%)</title><rect x="4.1064%" y="485" width="1.6595%" height="15" fill="rgb(241,128,51)" fg:x="5100" fg:w="2061"/><text x="4.3564%" y="495.50"></text></g><g><title>event_listener::Event::notify (1,157 samples, 0.93%)</title><rect x="4.8343%" y="469" width="0.9316%" height="15" fill="rgb(227,165,31)" fg:x="6004" fg:w="1157"/><text x="5.0843%" y="479.50"></text></g><g><title>event_listener::full_fence (877 samples, 0.71%)</title><rect x="5.0598%" y="453" width="0.7061%" height="15" fill="rgb(228,167,24)" fg:x="6284" fg:w="877"/><text x="5.3098%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (877 samples, 0.71%)</title><rect x="5.0598%" y="437" width="0.7061%" height="15" fill="rgb(228,143,12)" fg:x="6284" fg:w="877"/><text x="5.3098%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (877 samples, 0.71%)</title><rect x="5.0598%" y="421" width="0.7061%" height="15" fill="rgb(249,149,8)" fg:x="6284" fg:w="877"/><text x="5.3098%" y="431.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="901" width="1.8254%" height="15" fill="rgb(243,35,44)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="911.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="885" width="1.8254%" height="15" fill="rgb(246,89,9)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="895.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="869" width="1.8254%" height="15" fill="rgb(233,213,13)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="879.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="853" width="1.8254%" height="15" fill="rgb(233,141,41)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="863.50">a..</text></g><g><title>async_task::runnable::Runnable::run (2,267 samples, 1.83%)</title><rect x="4.1064%" y="837" width="1.8254%" height="15" fill="rgb(239,167,4)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="847.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,267 samples, 1.83%)</title><rect x="4.1064%" y="821" width="1.8254%" height="15" fill="rgb(209,217,16)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="831.50">a..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="805" width="1.8254%" height="15" fill="rgb(219,88,35)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="815.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="789" width="1.8254%" height="15" fill="rgb(220,193,23)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="799.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="773" width="1.8254%" height="15" fill="rgb(230,90,52)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="783.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="757" width="1.8254%" height="15" fill="rgb(252,106,19)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="767.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,267 samples, 1.83%)</title><rect x="4.1064%" y="741" width="1.8254%" height="15" fill="rgb(206,74,20)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="751.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,267 samples, 1.83%)</title><rect x="4.1064%" y="725" width="1.8254%" height="15" fill="rgb(230,138,44)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="735.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,267 samples, 1.83%)</title><rect x="4.1064%" y="709" width="1.8254%" height="15" fill="rgb(235,182,43)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="719.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="693" width="1.8254%" height="15" fill="rgb(242,16,51)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="703.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="677" width="1.8254%" height="15" fill="rgb(248,9,4)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="687.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="661" width="1.8254%" height="15" fill="rgb(210,31,22)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="671.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="645" width="1.8254%" height="15" fill="rgb(239,54,39)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="655.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="629" width="1.8254%" height="15" fill="rgb(230,99,41)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="639.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="613" width="1.8254%" height="15" fill="rgb(253,106,12)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="623.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="597" width="1.8254%" height="15" fill="rgb(213,46,41)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="607.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="581" width="1.8254%" height="15" fill="rgb(215,133,35)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="591.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="565" width="1.8254%" height="15" fill="rgb(213,28,5)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="575.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="549" width="1.8254%" height="15" fill="rgb(215,77,49)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="559.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="533" width="1.8254%" height="15" fill="rgb(248,100,22)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (2,267 samples, 1.83%)</title><rect x="4.1064%" y="517" width="1.8254%" height="15" fill="rgb(208,67,9)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="527.50">t..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2,267 samples, 1.83%)</title><rect x="4.1064%" y="501" width="1.8254%" height="15" fill="rgb(219,133,21)" fg:x="5100" fg:w="2267"/><text x="4.3564%" y="511.50">&lt;..</text></g><g><title>event_listener::Event::notify (206 samples, 0.17%)</title><rect x="5.7659%" y="485" width="0.1659%" height="15" fill="rgb(246,46,29)" fg:x="7161" fg:w="206"/><text x="6.0159%" y="495.50"></text></g><g><title>event_listener::full_fence (203 samples, 0.16%)</title><rect x="5.7683%" y="469" width="0.1635%" height="15" fill="rgb(246,185,52)" fg:x="7164" fg:w="203"/><text x="6.0183%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (203 samples, 0.16%)</title><rect x="5.7683%" y="453" width="0.1635%" height="15" fill="rgb(252,136,11)" fg:x="7164" fg:w="203"/><text x="6.0183%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (203 samples, 0.16%)</title><rect x="5.7683%" y="437" width="0.1635%" height="15" fill="rgb(219,138,53)" fg:x="7164" fg:w="203"/><text x="6.0183%" y="447.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::default::Default&gt;::default (152 samples, 0.12%)</title><rect x="6.4077%" y="645" width="0.1224%" height="15" fill="rgb(211,51,23)" fg:x="7958" fg:w="152"/><text x="6.6577%" y="655.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (195 samples, 0.16%)</title><rect x="7.3191%" y="453" width="0.1570%" height="15" fill="rgb(247,221,28)" fg:x="9090" fg:w="195"/><text x="7.5691%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (792 samples, 0.64%)</title><rect x="6.8409%" y="581" width="0.6377%" height="15" fill="rgb(251,222,45)" fg:x="8496" fg:w="792"/><text x="7.0909%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (359 samples, 0.29%)</title><rect x="7.1895%" y="565" width="0.2891%" height="15" fill="rgb(217,162,53)" fg:x="8929" fg:w="359"/><text x="7.4395%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (359 samples, 0.29%)</title><rect x="7.1895%" y="549" width="0.2891%" height="15" fill="rgb(229,93,14)" fg:x="8929" fg:w="359"/><text x="7.4395%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (359 samples, 0.29%)</title><rect x="7.1895%" y="533" width="0.2891%" height="15" fill="rgb(209,67,49)" fg:x="8929" fg:w="359"/><text x="7.4395%" y="543.50"></text></g><g><title>alloc::alloc::alloc (358 samples, 0.29%)</title><rect x="7.1903%" y="517" width="0.2883%" height="15" fill="rgb(213,87,29)" fg:x="8930" fg:w="358"/><text x="7.4403%" y="527.50"></text></g><g><title>__rg_alloc (358 samples, 0.29%)</title><rect x="7.1903%" y="501" width="0.2883%" height="15" fill="rgb(205,151,52)" fg:x="8930" fg:w="358"/><text x="7.4403%" y="511.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (358 samples, 0.29%)</title><rect x="7.1903%" y="485" width="0.2883%" height="15" fill="rgb(253,215,39)" fg:x="8930" fg:w="358"/><text x="7.4403%" y="495.50"></text></g><g><title>sn_rust_alloc (335 samples, 0.27%)</title><rect x="7.2088%" y="469" width="0.2697%" height="15" fill="rgb(221,220,41)" fg:x="8953" fg:w="335"/><text x="7.4588%" y="479.50"></text></g><g><title>&lt;tremor_pipeline::event::Event as core::default::Default&gt;::default (1,391 samples, 1.12%)</title><rect x="6.3738%" y="661" width="1.1200%" height="15" fill="rgb(218,133,21)" fg:x="7916" fg:w="1391"/><text x="6.6238%" y="671.50"></text></g><g><title>&lt;tremor_script::srs::EventPayload as core::default::Default&gt;::default (1,197 samples, 0.96%)</title><rect x="6.5301%" y="645" width="0.9638%" height="15" fill="rgb(221,193,43)" fg:x="8110" fg:w="1197"/><text x="6.7801%" y="655.50"></text></g><g><title>&lt;tremor_script::srs::ValueAndMeta as core::default::Default&gt;::default (828 samples, 0.67%)</title><rect x="6.8272%" y="629" width="0.6667%" height="15" fill="rgb(240,128,52)" fg:x="8479" fg:w="828"/><text x="7.0772%" y="639.50"></text></g><g><title>value_trait::Builder::object (811 samples, 0.65%)</title><rect x="6.8409%" y="613" width="0.6530%" height="15" fill="rgb(253,114,12)" fg:x="8496" fg:w="811"/><text x="7.0909%" y="623.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (811 samples, 0.65%)</title><rect x="6.8409%" y="597" width="0.6530%" height="15" fill="rgb(215,223,47)" fg:x="8496" fg:w="811"/><text x="7.0909%" y="607.50"></text></g><g><title>halfbrown::HashMap&lt;K,V&gt;::with_capacity (19 samples, 0.02%)</title><rect x="7.4786%" y="581" width="0.0153%" height="15" fill="rgb(248,225,23)" fg:x="9288" fg:w="19"/><text x="7.7286%" y="591.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V&gt;::with_capacity (16 samples, 0.01%)</title><rect x="7.4810%" y="565" width="0.0129%" height="15" fill="rgb(250,108,0)" fg:x="9291" fg:w="16"/><text x="7.7310%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="7.4971%" y="645" width="0.0153%" height="15" fill="rgb(228,208,7)" fg:x="9311" fg:w="19"/><text x="7.7471%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="7.5446%" y="533" width="0.0113%" height="15" fill="rgb(244,45,10)" fg:x="9370" fg:w="14"/><text x="7.7946%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (14 samples, 0.01%)</title><rect x="7.5446%" y="517" width="0.0113%" height="15" fill="rgb(207,125,25)" fg:x="9370" fg:w="14"/><text x="7.7946%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (62 samples, 0.05%)</title><rect x="7.5124%" y="629" width="0.0499%" height="15" fill="rgb(210,195,18)" fg:x="9330" fg:w="62"/><text x="7.7624%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (39 samples, 0.03%)</title><rect x="7.5309%" y="613" width="0.0314%" height="15" fill="rgb(249,80,12)" fg:x="9353" fg:w="39"/><text x="7.7809%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (31 samples, 0.02%)</title><rect x="7.5373%" y="597" width="0.0250%" height="15" fill="rgb(221,65,9)" fg:x="9361" fg:w="31"/><text x="7.7873%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (31 samples, 0.02%)</title><rect x="7.5373%" y="581" width="0.0250%" height="15" fill="rgb(235,49,36)" fg:x="9361" fg:w="31"/><text x="7.7873%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (22 samples, 0.02%)</title><rect x="7.5446%" y="565" width="0.0177%" height="15" fill="rgb(225,32,20)" fg:x="9370" fg:w="22"/><text x="7.7946%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (22 samples, 0.02%)</title><rect x="7.5446%" y="549" width="0.0177%" height="15" fill="rgb(215,141,46)" fg:x="9370" fg:w="22"/><text x="7.7946%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (127 samples, 0.10%)</title><rect x="7.4971%" y="661" width="0.1023%" height="15" fill="rgb(250,160,47)" fg:x="9311" fg:w="127"/><text x="7.7471%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (108 samples, 0.09%)</title><rect x="7.5124%" y="645" width="0.0870%" height="15" fill="rgb(216,222,40)" fg:x="9330" fg:w="108"/><text x="7.7624%" y="655.50"></text></g><g><title>sn_rust_dealloc (46 samples, 0.04%)</title><rect x="7.5623%" y="629" width="0.0370%" height="15" fill="rgb(234,217,39)" fg:x="9392" fg:w="46"/><text x="7.8123%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="7.6235%" y="565" width="0.0185%" height="15" fill="rgb(207,178,40)" fg:x="9468" fg:w="23"/><text x="7.8735%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (23 samples, 0.02%)</title><rect x="7.6235%" y="549" width="0.0185%" height="15" fill="rgb(221,136,13)" fg:x="9468" fg:w="23"/><text x="7.8735%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (60 samples, 0.05%)</title><rect x="7.5993%" y="661" width="0.0483%" height="15" fill="rgb(249,199,10)" fg:x="9438" fg:w="60"/><text x="7.8493%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (48 samples, 0.04%)</title><rect x="7.6090%" y="645" width="0.0386%" height="15" fill="rgb(249,222,13)" fg:x="9450" fg:w="48"/><text x="7.8590%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (35 samples, 0.03%)</title><rect x="7.6195%" y="629" width="0.0282%" height="15" fill="rgb(244,185,38)" fg:x="9463" fg:w="35"/><text x="7.8695%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (35 samples, 0.03%)</title><rect x="7.6195%" y="613" width="0.0282%" height="15" fill="rgb(236,202,9)" fg:x="9463" fg:w="35"/><text x="7.8695%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (30 samples, 0.02%)</title><rect x="7.6235%" y="597" width="0.0242%" height="15" fill="rgb(250,229,37)" fg:x="9468" fg:w="30"/><text x="7.8735%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (30 samples, 0.02%)</title><rect x="7.6235%" y="581" width="0.0242%" height="15" fill="rgb(206,174,23)" fg:x="9468" fg:w="30"/><text x="7.8735%" y="591.50"></text></g><g><title>sn_rust_dealloc (52 samples, 0.04%)</title><rect x="7.6477%" y="661" width="0.0419%" height="15" fill="rgb(211,33,43)" fg:x="9498" fg:w="52"/><text x="7.8977%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (2,202 samples, 1.77%)</title><rect x="5.9326%" y="677" width="1.7730%" height="15" fill="rgb(245,58,50)" fg:x="7368" fg:w="2202"/><text x="6.1826%" y="687.50">t..</text></g><g><title>tremor_pipeline::EventIdGenerator::next_with_pull_id (20 samples, 0.02%)</title><rect x="7.6895%" y="661" width="0.0161%" height="15" fill="rgb(244,68,36)" fg:x="9550" fg:w="20"/><text x="7.9395%" y="671.50"></text></g><g><title>tremor_pipeline::EventId::new (13 samples, 0.01%)</title><rect x="7.6952%" y="645" width="0.0105%" height="15" fill="rgb(232,229,15)" fg:x="9557" fg:w="13"/><text x="7.9452%" y="655.50"></text></g><g><title>alloc::alloc::exchange_malloc (107 samples, 0.09%)</title><rect x="7.7451%" y="661" width="0.0862%" height="15" fill="rgb(254,30,23)" fg:x="9619" fg:w="107"/><text x="7.9951%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (107 samples, 0.09%)</title><rect x="7.7451%" y="645" width="0.0862%" height="15" fill="rgb(235,160,14)" fg:x="9619" fg:w="107"/><text x="7.9951%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (107 samples, 0.09%)</title><rect x="7.7451%" y="629" width="0.0862%" height="15" fill="rgb(212,155,44)" fg:x="9619" fg:w="107"/><text x="7.9951%" y="639.50"></text></g><g><title>alloc::alloc::alloc (106 samples, 0.09%)</title><rect x="7.7459%" y="613" width="0.0853%" height="15" fill="rgb(226,2,50)" fg:x="9620" fg:w="106"/><text x="7.9959%" y="623.50"></text></g><g><title>__rg_alloc (106 samples, 0.09%)</title><rect x="7.7459%" y="597" width="0.0853%" height="15" fill="rgb(234,177,6)" fg:x="9620" fg:w="106"/><text x="7.9959%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (106 samples, 0.09%)</title><rect x="7.7459%" y="581" width="0.0853%" height="15" fill="rgb(217,24,9)" fg:x="9620" fg:w="106"/><text x="7.9959%" y="591.50"></text></g><g><title>sn_rust_alloc (106 samples, 0.09%)</title><rect x="7.7459%" y="565" width="0.0853%" height="15" fill="rgb(220,13,46)" fg:x="9620" fg:w="106"/><text x="7.9959%" y="575.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (40 samples, 0.03%)</title><rect x="7.7990%" y="549" width="0.0322%" height="15" fill="rgb(239,221,27)" fg:x="9686" fg:w="40"/><text x="8.0490%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (13 samples, 0.01%)</title><rect x="7.8312%" y="661" width="0.0105%" height="15" fill="rgb(222,198,25)" fg:x="9726" fg:w="13"/><text x="8.0812%" y="671.50"></text></g><g><title>alloc::slice::hack::into_vec (13 samples, 0.01%)</title><rect x="7.8312%" y="645" width="0.0105%" height="15" fill="rgb(211,99,13)" fg:x="9726" fg:w="13"/><text x="8.0812%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (13 samples, 0.01%)</title><rect x="7.8312%" y="629" width="0.0105%" height="15" fill="rgb(232,111,31)" fg:x="9726" fg:w="13"/><text x="8.0812%" y="639.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (186 samples, 0.15%)</title><rect x="7.7056%" y="677" width="0.1498%" height="15" fill="rgb(245,82,37)" fg:x="9570" fg:w="186"/><text x="7.9556%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (156 samples, 0.13%)</title><rect x="8.2024%" y="661" width="0.1256%" height="15" fill="rgb(227,149,46)" fg:x="10187" fg:w="156"/><text x="8.4524%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (54 samples, 0.04%)</title><rect x="8.3280%" y="661" width="0.0435%" height="15" fill="rgb(218,36,50)" fg:x="10343" fg:w="54"/><text x="8.5780%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.04%)</title><rect x="8.3280%" y="645" width="0.0435%" height="15" fill="rgb(226,80,48)" fg:x="10343" fg:w="54"/><text x="8.5780%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.04%)</title><rect x="8.3280%" y="629" width="0.0435%" height="15" fill="rgb(238,224,15)" fg:x="10343" fg:w="54"/><text x="8.5780%" y="639.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.04%)</title><rect x="8.3321%" y="613" width="0.0395%" height="15" fill="rgb(241,136,10)" fg:x="10348" fg:w="49"/><text x="8.5821%" y="623.50"></text></g><g><title>__rg_alloc (49 samples, 0.04%)</title><rect x="8.3321%" y="597" width="0.0395%" height="15" fill="rgb(208,32,45)" fg:x="10348" fg:w="49"/><text x="8.5821%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (49 samples, 0.04%)</title><rect x="8.3321%" y="581" width="0.0395%" height="15" fill="rgb(207,135,9)" fg:x="10348" fg:w="49"/><text x="8.5821%" y="591.50"></text></g><g><title>sn_rust_alloc (44 samples, 0.04%)</title><rect x="8.3361%" y="565" width="0.0354%" height="15" fill="rgb(206,86,44)" fg:x="10353" fg:w="44"/><text x="8.5861%" y="575.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (14 samples, 0.01%)</title><rect x="8.3602%" y="549" width="0.0113%" height="15" fill="rgb(245,177,15)" fg:x="10383" fg:w="14"/><text x="8.6102%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (158 samples, 0.13%)</title><rect x="8.3715%" y="661" width="0.1272%" height="15" fill="rgb(206,64,50)" fg:x="10397" fg:w="158"/><text x="8.6215%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (150 samples, 0.12%)</title><rect x="8.3780%" y="645" width="0.1208%" height="15" fill="rgb(234,36,40)" fg:x="10405" fg:w="150"/><text x="8.6280%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (150 samples, 0.12%)</title><rect x="8.3780%" y="629" width="0.1208%" height="15" fill="rgb(213,64,8)" fg:x="10405" fg:w="150"/><text x="8.6280%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (150 samples, 0.12%)</title><rect x="8.3780%" y="613" width="0.1208%" height="15" fill="rgb(210,75,36)" fg:x="10405" fg:w="150"/><text x="8.6280%" y="623.50"></text></g><g><title>alloc::alloc::alloc (150 samples, 0.12%)</title><rect x="8.3780%" y="597" width="0.1208%" height="15" fill="rgb(229,88,21)" fg:x="10405" fg:w="150"/><text x="8.6280%" y="607.50"></text></g><g><title>__rg_alloc (150 samples, 0.12%)</title><rect x="8.3780%" y="581" width="0.1208%" height="15" fill="rgb(252,204,47)" fg:x="10405" fg:w="150"/><text x="8.6280%" y="591.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (150 samples, 0.12%)</title><rect x="8.3780%" y="565" width="0.1208%" height="15" fill="rgb(208,77,27)" fg:x="10405" fg:w="150"/><text x="8.6280%" y="575.50"></text></g><g><title>sn_rust_alloc (149 samples, 0.12%)</title><rect x="8.3788%" y="549" width="0.1200%" height="15" fill="rgb(221,76,26)" fg:x="10406" fg:w="149"/><text x="8.6288%" y="559.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (93 samples, 0.07%)</title><rect x="8.4238%" y="533" width="0.0749%" height="15" fill="rgb(225,139,18)" fg:x="10462" fg:w="93"/><text x="8.6738%" y="543.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (24 samples, 0.02%)</title><rect x="8.4987%" y="661" width="0.0193%" height="15" fill="rgb(230,137,11)" fg:x="10555" fg:w="24"/><text x="8.7487%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (24 samples, 0.02%)</title><rect x="8.4987%" y="645" width="0.0193%" height="15" fill="rgb(212,28,1)" fg:x="10555" fg:w="24"/><text x="8.7487%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (24 samples, 0.02%)</title><rect x="8.4987%" y="629" width="0.0193%" height="15" fill="rgb(248,164,17)" fg:x="10555" fg:w="24"/><text x="8.7487%" y="639.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::decode (21 samples, 0.02%)</title><rect x="8.8651%" y="645" width="0.0169%" height="15" fill="rgb(222,171,42)" fg:x="11010" fg:w="21"/><text x="9.1151%" y="655.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (220 samples, 0.18%)</title><rect x="8.9094%" y="597" width="0.1771%" height="15" fill="rgb(243,84,45)" fg:x="11065" fg:w="220"/><text x="9.1594%" y="607.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (165 samples, 0.13%)</title><rect x="8.9537%" y="581" width="0.1329%" height="15" fill="rgb(252,49,23)" fg:x="11120" fg:w="165"/><text x="9.2037%" y="591.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (164 samples, 0.13%)</title><rect x="8.9545%" y="565" width="0.1321%" height="15" fill="rgb(215,19,7)" fg:x="11121" fg:w="164"/><text x="9.2045%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.01%)</title><rect x="9.0728%" y="549" width="0.0137%" height="15" fill="rgb(238,81,41)" fg:x="11268" fg:w="17"/><text x="9.3228%" y="559.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (255 samples, 0.21%)</title><rect x="8.9094%" y="613" width="0.2053%" height="15" fill="rgb(210,199,37)" fg:x="11065" fg:w="255"/><text x="9.1594%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (35 samples, 0.03%)</title><rect x="9.0865%" y="597" width="0.0282%" height="15" fill="rgb(244,192,49)" fg:x="11285" fg:w="35"/><text x="9.3365%" y="607.50"></text></g><g><title>core::ptr::write (35 samples, 0.03%)</title><rect x="9.0865%" y="581" width="0.0282%" height="15" fill="rgb(226,211,11)" fg:x="11285" fg:w="35"/><text x="9.3365%" y="591.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (344 samples, 0.28%)</title><rect x="8.8820%" y="645" width="0.2770%" height="15" fill="rgb(236,162,54)" fg:x="11031" fg:w="344"/><text x="9.1320%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (320 samples, 0.26%)</title><rect x="8.9013%" y="629" width="0.2577%" height="15" fill="rgb(220,229,9)" fg:x="11055" fg:w="320"/><text x="9.1513%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (55 samples, 0.04%)</title><rect x="9.1147%" y="613" width="0.0443%" height="15" fill="rgb(250,87,22)" fg:x="11320" fg:w="55"/><text x="9.3647%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (55 samples, 0.04%)</title><rect x="9.1147%" y="597" width="0.0443%" height="15" fill="rgb(239,43,17)" fg:x="11320" fg:w="55"/><text x="9.3647%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.04%)</title><rect x="9.1147%" y="581" width="0.0443%" height="15" fill="rgb(231,177,25)" fg:x="11320" fg:w="55"/><text x="9.3647%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.04%)</title><rect x="9.1147%" y="565" width="0.0443%" height="15" fill="rgb(219,179,1)" fg:x="11320" fg:w="55"/><text x="9.3647%" y="575.50"></text></g><g><title>alloc::alloc::alloc (55 samples, 0.04%)</title><rect x="9.1147%" y="549" width="0.0443%" height="15" fill="rgb(238,219,53)" fg:x="11320" fg:w="55"/><text x="9.3647%" y="559.50"></text></g><g><title>__rg_alloc (55 samples, 0.04%)</title><rect x="9.1147%" y="533" width="0.0443%" height="15" fill="rgb(232,167,36)" fg:x="11320" fg:w="55"/><text x="9.3647%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (55 samples, 0.04%)</title><rect x="9.1147%" y="517" width="0.0443%" height="15" fill="rgb(244,19,51)" fg:x="11320" fg:w="55"/><text x="9.3647%" y="527.50"></text></g><g><title>sn_rust_alloc (55 samples, 0.04%)</title><rect x="9.1147%" y="501" width="0.0443%" height="15" fill="rgb(224,6,22)" fg:x="11320" fg:w="55"/><text x="9.3647%" y="511.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (4,282 samples, 3.45%)</title><rect x="5.9318%" y="773" width="3.4478%" height="15" fill="rgb(224,145,5)" fg:x="7367" fg:w="4282"/><text x="6.1818%" y="783.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,282 samples, 3.45%)</title><rect x="5.9318%" y="757" width="3.4478%" height="15" fill="rgb(234,130,49)" fg:x="7367" fg:w="4282"/><text x="6.1818%" y="767.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (4,282 samples, 3.45%)</title><rect x="5.9318%" y="741" width="3.4478%" height="15" fill="rgb(254,6,2)" fg:x="7367" fg:w="4282"/><text x="6.1818%" y="751.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,282 samples, 3.45%)</title><rect x="5.9318%" y="725" width="3.4478%" height="15" fill="rgb(208,96,46)" fg:x="7367" fg:w="4282"/><text x="6.1818%" y="735.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (4,282 samples, 3.45%)</title><rect x="5.9318%" y="709" width="3.4478%" height="15" fill="rgb(239,3,39)" fg:x="7367" fg:w="4282"/><text x="6.1818%" y="719.50">tre..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,281 samples, 3.45%)</title><rect x="5.9326%" y="693" width="3.4470%" height="15" fill="rgb(233,210,1)" fg:x="7368" fg:w="4281"/><text x="6.1826%" y="703.50">tre..</text></g><g><title>tremor_script::srs::EventPayload::try_new (1,893 samples, 1.52%)</title><rect x="7.8554%" y="677" width="1.5242%" height="15" fill="rgb(244,137,37)" fg:x="9756" fg:w="1893"/><text x="8.1054%" y="687.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (1,070 samples, 0.86%)</title><rect x="8.5181%" y="661" width="0.8615%" height="15" fill="rgb(240,136,2)" fg:x="10579" fg:w="1070"/><text x="8.7681%" y="671.50"></text></g><g><title>tremor_script::srs::ValueAndMeta::from_parts (274 samples, 0.22%)</title><rect x="9.1590%" y="645" width="0.2206%" height="15" fill="rgb(239,18,37)" fg:x="11375" fg:w="274"/><text x="9.4090%" y="655.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (65 samples, 0.05%)</title><rect x="9.5672%" y="629" width="0.0523%" height="15" fill="rgb(218,185,22)" fg:x="11882" fg:w="65"/><text x="9.8172%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (62 samples, 0.05%)</title><rect x="9.5696%" y="613" width="0.0499%" height="15" fill="rgb(225,218,4)" fg:x="11885" fg:w="62"/><text x="9.8196%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (61 samples, 0.05%)</title><rect x="9.5704%" y="597" width="0.0491%" height="15" fill="rgb(230,182,32)" fg:x="11886" fg:w="61"/><text x="9.8204%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (61 samples, 0.05%)</title><rect x="9.5704%" y="581" width="0.0491%" height="15" fill="rgb(242,56,43)" fg:x="11886" fg:w="61"/><text x="9.8204%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="9.6195%" y="629" width="0.0105%" height="15" fill="rgb(233,99,24)" fg:x="11947" fg:w="13"/><text x="9.8695%" y="639.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="9.6195%" y="613" width="0.0105%" height="15" fill="rgb(234,209,42)" fg:x="11947" fg:w="13"/><text x="9.8695%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (21 samples, 0.02%)</title><rect x="9.6300%" y="629" width="0.0169%" height="15" fill="rgb(227,7,12)" fg:x="11960" fg:w="21"/><text x="9.8800%" y="639.50"></text></g><g><title>core::mem::drop (64 samples, 0.05%)</title><rect x="9.6469%" y="629" width="0.0515%" height="15" fill="rgb(245,203,43)" fg:x="11981" fg:w="64"/><text x="9.8969%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (64 samples, 0.05%)</title><rect x="9.6469%" y="613" width="0.0515%" height="15" fill="rgb(238,205,33)" fg:x="11981" fg:w="64"/><text x="9.8969%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (56 samples, 0.05%)</title><rect x="9.6534%" y="597" width="0.0451%" height="15" fill="rgb(231,56,7)" fg:x="11989" fg:w="56"/><text x="9.9034%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="9.6534%" y="581" width="0.0451%" height="15" fill="rgb(244,186,29)" fg:x="11989" fg:w="56"/><text x="9.9034%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (53 samples, 0.04%)</title><rect x="9.6558%" y="565" width="0.0427%" height="15" fill="rgb(234,111,31)" fg:x="11992" fg:w="53"/><text x="9.9058%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (53 samples, 0.04%)</title><rect x="9.6558%" y="549" width="0.0427%" height="15" fill="rgb(241,149,10)" fg:x="11992" fg:w="53"/><text x="9.9058%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (53 samples, 0.04%)</title><rect x="9.6558%" y="533" width="0.0427%" height="15" fill="rgb(249,206,44)" fg:x="11992" fg:w="53"/><text x="9.9058%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (53 samples, 0.04%)</title><rect x="9.6558%" y="517" width="0.0427%" height="15" fill="rgb(251,153,30)" fg:x="11992" fg:w="53"/><text x="9.9058%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (67 samples, 0.05%)</title><rect x="9.6985%" y="629" width="0.0539%" height="15" fill="rgb(239,152,38)" fg:x="12045" fg:w="67"/><text x="9.9485%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (61 samples, 0.05%)</title><rect x="9.7033%" y="613" width="0.0491%" height="15" fill="rgb(249,139,47)" fg:x="12051" fg:w="61"/><text x="9.9533%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.05%)</title><rect x="9.7033%" y="597" width="0.0491%" height="15" fill="rgb(244,64,35)" fg:x="12051" fg:w="61"/><text x="9.9533%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (57 samples, 0.05%)</title><rect x="9.7065%" y="581" width="0.0459%" height="15" fill="rgb(216,46,15)" fg:x="12055" fg:w="57"/><text x="9.9565%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (57 samples, 0.05%)</title><rect x="9.7065%" y="565" width="0.0459%" height="15" fill="rgb(250,74,19)" fg:x="12055" fg:w="57"/><text x="9.9565%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (57 samples, 0.05%)</title><rect x="9.7065%" y="549" width="0.0459%" height="15" fill="rgb(249,42,33)" fg:x="12055" fg:w="57"/><text x="9.9565%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (57 samples, 0.05%)</title><rect x="9.7065%" y="533" width="0.0459%" height="15" fill="rgb(242,149,17)" fg:x="12055" fg:w="57"/><text x="9.9565%" y="543.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (19 samples, 0.02%)</title><rect x="9.7605%" y="597" width="0.0153%" height="15" fill="rgb(244,29,21)" fg:x="12122" fg:w="19"/><text x="10.0105%" y="607.50"></text></g><g><title>std::sync::poison::Flag::borrow (19 samples, 0.02%)</title><rect x="9.7605%" y="581" width="0.0153%" height="15" fill="rgb(220,130,37)" fg:x="12122" fg:w="19"/><text x="10.0105%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (121 samples, 0.10%)</title><rect x="9.7814%" y="565" width="0.0974%" height="15" fill="rgb(211,67,2)" fg:x="12148" fg:w="121"/><text x="10.0314%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (121 samples, 0.10%)</title><rect x="9.7814%" y="549" width="0.0974%" height="15" fill="rgb(235,68,52)" fg:x="12148" fg:w="121"/><text x="10.0314%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (79 samples, 0.06%)</title><rect x="9.8917%" y="549" width="0.0636%" height="15" fill="rgb(246,142,3)" fg:x="12285" fg:w="79"/><text x="10.1417%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (79 samples, 0.06%)</title><rect x="9.8917%" y="533" width="0.0636%" height="15" fill="rgb(241,25,7)" fg:x="12285" fg:w="79"/><text x="10.1417%" y="543.50"></text></g><g><title>core::hint::spin_loop (1,655 samples, 1.33%)</title><rect x="9.9690%" y="533" width="1.3326%" height="15" fill="rgb(242,119,39)" fg:x="12381" fg:w="1655"/><text x="10.2190%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1,655 samples, 1.33%)</title><rect x="9.9690%" y="517" width="1.3326%" height="15" fill="rgb(241,98,45)" fg:x="12381" fg:w="1655"/><text x="10.2190%" y="527.50"></text></g><g><title>event_listener::Inner::lock (1,997 samples, 1.61%)</title><rect x="9.7556%" y="629" width="1.6080%" height="15" fill="rgb(254,28,30)" fg:x="12116" fg:w="1997"/><text x="10.0056%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,991 samples, 1.60%)</title><rect x="9.7605%" y="613" width="1.6031%" height="15" fill="rgb(241,142,54)" fg:x="12122" fg:w="1991"/><text x="10.0105%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,972 samples, 1.59%)</title><rect x="9.7758%" y="597" width="1.5878%" height="15" fill="rgb(222,85,15)" fg:x="12141" fg:w="1972"/><text x="10.0258%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,972 samples, 1.59%)</title><rect x="9.7758%" y="581" width="1.5878%" height="15" fill="rgb(210,85,47)" fg:x="12141" fg:w="1972"/><text x="10.0258%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (1,844 samples, 1.48%)</title><rect x="9.8788%" y="565" width="1.4848%" height="15" fill="rgb(224,206,25)" fg:x="12269" fg:w="1844"/><text x="10.1288%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (1,749 samples, 1.41%)</title><rect x="9.9553%" y="549" width="1.4083%" height="15" fill="rgb(243,201,19)" fg:x="12364" fg:w="1749"/><text x="10.2053%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (77 samples, 0.06%)</title><rect x="11.3016%" y="533" width="0.0620%" height="15" fill="rgb(236,59,4)" fg:x="14036" fg:w="77"/><text x="11.5516%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (77 samples, 0.06%)</title><rect x="11.3016%" y="517" width="0.0620%" height="15" fill="rgb(254,179,45)" fg:x="14036" fg:w="77"/><text x="11.5516%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,350 samples, 1.89%)</title><rect x="9.5463%" y="645" width="1.8922%" height="15" fill="rgb(226,14,10)" fg:x="11856" fg:w="2350"/><text x="9.7963%" y="655.50">&lt;..</text></g><g><title>event_listener::List::remove (93 samples, 0.07%)</title><rect x="11.3636%" y="629" width="0.0749%" height="15" fill="rgb(244,27,41)" fg:x="14113" fg:w="93"/><text x="11.6136%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (62 samples, 0.05%)</title><rect x="11.3885%" y="613" width="0.0499%" height="15" fill="rgb(235,35,32)" fg:x="14144" fg:w="62"/><text x="11.6385%" y="623.50"></text></g><g><title>core::mem::replace (62 samples, 0.05%)</title><rect x="11.3885%" y="597" width="0.0499%" height="15" fill="rgb(218,68,31)" fg:x="14144" fg:w="62"/><text x="11.6385%" y="607.50"></text></g><g><title>core::ptr::read (62 samples, 0.05%)</title><rect x="11.3885%" y="581" width="0.0499%" height="15" fill="rgb(207,120,37)" fg:x="14144" fg:w="62"/><text x="11.6385%" y="591.50"></text></g><g><title>concurrent_queue::full_fence (147 samples, 0.12%)</title><rect x="11.6245%" y="597" width="0.1184%" height="15" fill="rgb(227,98,0)" fg:x="14437" fg:w="147"/><text x="11.8745%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (144 samples, 0.12%)</title><rect x="11.6269%" y="581" width="0.1159%" height="15" fill="rgb(207,7,3)" fg:x="14440" fg:w="144"/><text x="11.8769%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (144 samples, 0.12%)</title><rect x="11.6269%" y="565" width="0.1159%" height="15" fill="rgb(206,98,19)" fg:x="14440" fg:w="144"/><text x="11.8769%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (144 samples, 0.12%)</title><rect x="11.6269%" y="549" width="0.1159%" height="15" fill="rgb(217,5,26)" fg:x="14440" fg:w="144"/><text x="11.8769%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (290 samples, 0.23%)</title><rect x="11.7509%" y="597" width="0.2335%" height="15" fill="rgb(235,190,38)" fg:x="14594" fg:w="290"/><text x="12.0009%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (290 samples, 0.23%)</title><rect x="11.7509%" y="581" width="0.2335%" height="15" fill="rgb(247,86,24)" fg:x="14594" fg:w="290"/><text x="12.0009%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,115 samples, 0.90%)</title><rect x="11.4699%" y="629" width="0.8978%" height="15" fill="rgb(205,101,16)" fg:x="14245" fg:w="1115"/><text x="11.7199%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1,080 samples, 0.87%)</title><rect x="11.4980%" y="613" width="0.8696%" height="15" fill="rgb(246,168,33)" fg:x="14280" fg:w="1080"/><text x="11.7480%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (476 samples, 0.38%)</title><rect x="11.9844%" y="597" width="0.3833%" height="15" fill="rgb(231,114,1)" fg:x="14884" fg:w="476"/><text x="12.2344%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (475 samples, 0.38%)</title><rect x="11.9852%" y="581" width="0.3825%" height="15" fill="rgb(207,184,53)" fg:x="14885" fg:w="475"/><text x="12.2352%" y="591.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (2,432 samples, 1.96%)</title><rect x="11.4385%" y="645" width="1.9582%" height="15" fill="rgb(224,95,51)" fg:x="14206" fg:w="2432"/><text x="11.6885%" y="655.50">a..</text></g><g><title>event_listener::Event::notify (1,278 samples, 1.03%)</title><rect x="12.3676%" y="629" width="1.0290%" height="15" fill="rgb(212,188,45)" fg:x="15360" fg:w="1278"/><text x="12.6176%" y="639.50"></text></g><g><title>event_listener::full_fence (1,266 samples, 1.02%)</title><rect x="12.3773%" y="613" width="1.0194%" height="15" fill="rgb(223,154,38)" fg:x="15372" fg:w="1266"/><text x="12.6273%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,265 samples, 1.02%)</title><rect x="12.3781%" y="597" width="1.0186%" height="15" fill="rgb(251,22,52)" fg:x="15373" fg:w="1265"/><text x="12.6281%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,265 samples, 1.02%)</title><rect x="12.3781%" y="581" width="1.0186%" height="15" fill="rgb(229,209,22)" fg:x="15373" fg:w="1265"/><text x="12.6281%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (18 samples, 0.01%)</title><rect x="13.3967%" y="645" width="0.0145%" height="15" fill="rgb(234,138,34)" fg:x="16638" fg:w="18"/><text x="13.6467%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.01%)</title><rect x="13.4257%" y="597" width="0.0129%" height="15" fill="rgb(212,95,11)" fg:x="16674" fg:w="16"/><text x="13.6757%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (15 samples, 0.01%)</title><rect x="13.4265%" y="581" width="0.0121%" height="15" fill="rgb(240,179,47)" fg:x="16675" fg:w="15"/><text x="13.6765%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="13.4265%" y="565" width="0.0121%" height="15" fill="rgb(240,163,11)" fg:x="16675" fg:w="15"/><text x="13.6765%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="13.4265%" y="549" width="0.0121%" height="15" fill="rgb(236,37,12)" fg:x="16675" fg:w="15"/><text x="13.6765%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (15 samples, 0.01%)</title><rect x="13.4265%" y="533" width="0.0121%" height="15" fill="rgb(232,164,16)" fg:x="16675" fg:w="15"/><text x="13.6765%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.01%)</title><rect x="13.4265%" y="517" width="0.0121%" height="15" fill="rgb(244,205,15)" fg:x="16675" fg:w="15"/><text x="13.6765%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="13.4265%" y="501" width="0.0121%" height="15" fill="rgb(223,117,47)" fg:x="16675" fg:w="15"/><text x="13.6765%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (54 samples, 0.04%)</title><rect x="13.4522%" y="533" width="0.0435%" height="15" fill="rgb(244,107,35)" fg:x="16707" fg:w="54"/><text x="13.7022%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (54 samples, 0.04%)</title><rect x="13.4522%" y="517" width="0.0435%" height="15" fill="rgb(205,140,8)" fg:x="16707" fg:w="54"/><text x="13.7022%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (29 samples, 0.02%)</title><rect x="13.4973%" y="517" width="0.0234%" height="15" fill="rgb(228,84,46)" fg:x="16763" fg:w="29"/><text x="13.7473%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.02%)</title><rect x="13.4973%" y="501" width="0.0234%" height="15" fill="rgb(254,188,9)" fg:x="16763" fg:w="29"/><text x="13.7473%" y="511.50"></text></g><g><title>core::hint::spin_loop (28 samples, 0.02%)</title><rect x="13.5207%" y="501" width="0.0225%" height="15" fill="rgb(206,112,54)" fg:x="16792" fg:w="28"/><text x="13.7707%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (28 samples, 0.02%)</title><rect x="13.5207%" y="485" width="0.0225%" height="15" fill="rgb(216,84,49)" fg:x="16792" fg:w="28"/><text x="13.7707%" y="495.50"></text></g><g><title>event_listener::Inner::lock (173 samples, 0.14%)</title><rect x="13.4418%" y="597" width="0.1393%" height="15" fill="rgb(214,194,35)" fg:x="16694" fg:w="173"/><text x="13.6918%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (171 samples, 0.14%)</title><rect x="13.4434%" y="581" width="0.1377%" height="15" fill="rgb(249,28,3)" fg:x="16696" fg:w="171"/><text x="13.6934%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (162 samples, 0.13%)</title><rect x="13.4506%" y="565" width="0.1304%" height="15" fill="rgb(222,56,52)" fg:x="16705" fg:w="162"/><text x="13.7006%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (162 samples, 0.13%)</title><rect x="13.4506%" y="549" width="0.1304%" height="15" fill="rgb(245,217,50)" fg:x="16705" fg:w="162"/><text x="13.7006%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (106 samples, 0.09%)</title><rect x="13.4957%" y="533" width="0.0853%" height="15" fill="rgb(213,201,24)" fg:x="16761" fg:w="106"/><text x="13.7457%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (75 samples, 0.06%)</title><rect x="13.5207%" y="517" width="0.0604%" height="15" fill="rgb(248,116,28)" fg:x="16792" fg:w="75"/><text x="13.7707%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (47 samples, 0.04%)</title><rect x="13.5432%" y="501" width="0.0378%" height="15" fill="rgb(219,72,43)" fg:x="16820" fg:w="47"/><text x="13.7932%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (47 samples, 0.04%)</title><rect x="13.5432%" y="485" width="0.0378%" height="15" fill="rgb(209,138,14)" fg:x="16820" fg:w="47"/><text x="13.7932%" y="495.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (221 samples, 0.18%)</title><rect x="13.4241%" y="613" width="0.1779%" height="15" fill="rgb(222,18,33)" fg:x="16672" fg:w="221"/><text x="13.6741%" y="623.50"></text></g><g><title>event_listener::List::remove (25 samples, 0.02%)</title><rect x="13.5819%" y="597" width="0.0201%" height="15" fill="rgb(213,199,7)" fg:x="16868" fg:w="25"/><text x="13.8319%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (333 samples, 0.27%)</title><rect x="13.4112%" y="645" width="0.2681%" height="15" fill="rgb(250,110,10)" fg:x="16656" fg:w="333"/><text x="13.6612%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (319 samples, 0.26%)</title><rect x="13.4224%" y="629" width="0.2569%" height="15" fill="rgb(248,123,6)" fg:x="16670" fg:w="319"/><text x="13.6724%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (96 samples, 0.08%)</title><rect x="13.6020%" y="613" width="0.0773%" height="15" fill="rgb(206,91,31)" fg:x="16893" fg:w="96"/><text x="13.8520%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.08%)</title><rect x="13.6020%" y="597" width="0.0773%" height="15" fill="rgb(211,154,13)" fg:x="16893" fg:w="96"/><text x="13.8520%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (89 samples, 0.07%)</title><rect x="13.6076%" y="581" width="0.0717%" height="15" fill="rgb(225,148,7)" fg:x="16900" fg:w="89"/><text x="13.8576%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (89 samples, 0.07%)</title><rect x="13.6076%" y="565" width="0.0717%" height="15" fill="rgb(220,160,43)" fg:x="16900" fg:w="89"/><text x="13.8576%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (78 samples, 0.06%)</title><rect x="13.6841%" y="629" width="0.0628%" height="15" fill="rgb(213,52,39)" fg:x="16995" fg:w="78"/><text x="13.9341%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (78 samples, 0.06%)</title><rect x="13.6841%" y="613" width="0.0628%" height="15" fill="rgb(243,137,7)" fg:x="16995" fg:w="78"/><text x="13.9341%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (78 samples, 0.06%)</title><rect x="13.6841%" y="597" width="0.0628%" height="15" fill="rgb(230,79,13)" fg:x="16995" fg:w="78"/><text x="13.9341%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (137 samples, 0.11%)</title><rect x="13.7469%" y="629" width="0.1103%" height="15" fill="rgb(247,105,23)" fg:x="17073" fg:w="137"/><text x="13.9969%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (130 samples, 0.10%)</title><rect x="13.7526%" y="613" width="0.1047%" height="15" fill="rgb(223,179,41)" fg:x="17080" fg:w="130"/><text x="14.0026%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.10%)</title><rect x="13.7526%" y="597" width="0.1047%" height="15" fill="rgb(218,9,34)" fg:x="17080" fg:w="130"/><text x="14.0026%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (130 samples, 0.10%)</title><rect x="13.7526%" y="581" width="0.1047%" height="15" fill="rgb(222,106,8)" fg:x="17080" fg:w="130"/><text x="14.0026%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (130 samples, 0.10%)</title><rect x="13.7526%" y="565" width="0.1047%" height="15" fill="rgb(211,220,0)" fg:x="17080" fg:w="130"/><text x="14.0026%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (130 samples, 0.10%)</title><rect x="13.7526%" y="549" width="0.1047%" height="15" fill="rgb(229,52,16)" fg:x="17080" fg:w="130"/><text x="14.0026%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (130 samples, 0.10%)</title><rect x="13.7526%" y="533" width="0.1047%" height="15" fill="rgb(212,155,18)" fg:x="17080" fg:w="130"/><text x="14.0026%" y="543.50"></text></g><g><title>event_listener::Inner::lock (68 samples, 0.05%)</title><rect x="13.8597%" y="629" width="0.0548%" height="15" fill="rgb(242,21,14)" fg:x="17213" fg:w="68"/><text x="14.1097%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (60 samples, 0.05%)</title><rect x="13.8661%" y="613" width="0.0483%" height="15" fill="rgb(222,19,48)" fg:x="17221" fg:w="60"/><text x="14.1161%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (56 samples, 0.05%)</title><rect x="13.8693%" y="597" width="0.0451%" height="15" fill="rgb(232,45,27)" fg:x="17225" fg:w="56"/><text x="14.1193%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (56 samples, 0.05%)</title><rect x="13.8693%" y="581" width="0.0451%" height="15" fill="rgb(249,103,42)" fg:x="17225" fg:w="56"/><text x="14.1193%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (56 samples, 0.05%)</title><rect x="13.8693%" y="565" width="0.0451%" height="15" fill="rgb(246,81,33)" fg:x="17225" fg:w="56"/><text x="14.1193%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (56 samples, 0.05%)</title><rect x="13.8693%" y="549" width="0.0451%" height="15" fill="rgb(252,33,42)" fg:x="17225" fg:w="56"/><text x="14.1193%" y="559.50"></text></g><g><title>event_listener::List::insert (15 samples, 0.01%)</title><rect x="13.9144%" y="629" width="0.0121%" height="15" fill="rgb(209,212,41)" fg:x="17281" fg:w="15"/><text x="14.1644%" y="639.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (5,578 samples, 4.49%)</title><rect x="9.4899%" y="661" width="4.4913%" height="15" fill="rgb(207,154,6)" fg:x="11786" fg:w="5578"/><text x="9.7399%" y="671.50">&lt;asyn..</text></g><g><title>event_listener::Event::listen (375 samples, 0.30%)</title><rect x="13.6793%" y="645" width="0.3019%" height="15" fill="rgb(223,64,47)" fg:x="16989" fg:w="375"/><text x="13.9293%" y="655.50"></text></g><g><title>event_listener::full_fence (68 samples, 0.05%)</title><rect x="13.9265%" y="629" width="0.0548%" height="15" fill="rgb(211,161,38)" fg:x="17296" fg:w="68"/><text x="14.1765%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (67 samples, 0.05%)</title><rect x="13.9273%" y="613" width="0.0539%" height="15" fill="rgb(219,138,40)" fg:x="17297" fg:w="67"/><text x="14.1773%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (67 samples, 0.05%)</title><rect x="13.9273%" y="597" width="0.0539%" height="15" fill="rgb(241,228,46)" fg:x="17297" fg:w="67"/><text x="14.1773%" y="607.50"></text></g><g><title>[libc-2.31.so] (329 samples, 0.26%)</title><rect x="13.9885%" y="645" width="0.2649%" height="15" fill="rgb(223,209,38)" fg:x="17373" fg:w="329"/><text x="14.2385%" y="655.50"></text></g><g><title>[libc-2.31.so] (1,432 samples, 1.15%)</title><rect x="14.2639%" y="613" width="1.1530%" height="15" fill="rgb(236,164,45)" fg:x="17715" fg:w="1432"/><text x="14.5139%" y="623.50"></text></g><g><title>sn_rust_dealloc (117 samples, 0.09%)</title><rect x="15.4241%" y="533" width="0.0942%" height="15" fill="rgb(231,15,5)" fg:x="19156" fg:w="117"/><text x="15.6741%" y="543.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (7,921 samples, 6.38%)</title><rect x="9.4344%" y="693" width="6.3779%" height="15" fill="rgb(252,35,15)" fg:x="11717" fg:w="7921"/><text x="9.6844%" y="703.50">&lt;async_s..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (7,888 samples, 6.35%)</title><rect x="9.4609%" y="677" width="6.3513%" height="15" fill="rgb(248,181,18)" fg:x="11750" fg:w="7888"/><text x="9.7109%" y="687.50">&lt;async_s..</text></g><g><title>core::option::Option&lt;T&gt;::map (2,274 samples, 1.83%)</title><rect x="13.9812%" y="661" width="1.8310%" height="15" fill="rgb(233,39,42)" fg:x="17364" fg:w="2274"/><text x="14.2312%" y="671.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,936 samples, 1.56%)</title><rect x="14.2534%" y="645" width="1.5588%" height="15" fill="rgb(238,110,33)" fg:x="17702" fg:w="1936"/><text x="14.5034%" y="655.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}}::{{closure}} (1,936 samples, 1.56%)</title><rect x="14.2534%" y="629" width="1.5588%" height="15" fill="rgb(233,195,10)" fg:x="17702" fg:w="1936"/><text x="14.5034%" y="639.50"></text></g><g><title>alloc::alloc::box_free (491 samples, 0.40%)</title><rect x="15.4169%" y="613" width="0.3953%" height="15" fill="rgb(254,105,3)" fg:x="19147" fg:w="491"/><text x="15.6669%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (491 samples, 0.40%)</title><rect x="15.4169%" y="597" width="0.3953%" height="15" fill="rgb(221,225,9)" fg:x="19147" fg:w="491"/><text x="15.6669%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (491 samples, 0.40%)</title><rect x="15.4169%" y="581" width="0.3953%" height="15" fill="rgb(224,227,45)" fg:x="19147" fg:w="491"/><text x="15.6669%" y="591.50"></text></g><g><title>__rg_dealloc (491 samples, 0.40%)</title><rect x="15.4169%" y="565" width="0.3953%" height="15" fill="rgb(229,198,43)" fg:x="19147" fg:w="491"/><text x="15.6669%" y="575.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (491 samples, 0.40%)</title><rect x="15.4169%" y="549" width="0.3953%" height="15" fill="rgb(206,209,35)" fg:x="19147" fg:w="491"/><text x="15.6669%" y="559.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (365 samples, 0.29%)</title><rect x="15.5183%" y="533" width="0.2939%" height="15" fill="rgb(245,195,53)" fg:x="19273" fg:w="365"/><text x="15.7683%" y="543.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,617 samples, 7.74%)</title><rect x="9.3796%" y="757" width="7.7435%" height="15" fill="rgb(240,92,26)" fg:x="11649" fg:w="9617"/><text x="9.6296%" y="767.50">&lt;async_std:..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (9,617 samples, 7.74%)</title><rect x="9.3796%" y="741" width="7.7435%" height="15" fill="rgb(207,40,23)" fg:x="11649" fg:w="9617"/><text x="9.6296%" y="751.50">&lt;tremor_run..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (9,617 samples, 7.74%)</title><rect x="9.3796%" y="725" width="7.7435%" height="15" fill="rgb(223,111,35)" fg:x="11649" fg:w="9617"/><text x="9.6296%" y="735.50">&lt;async_std:..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (9,617 samples, 7.74%)</title><rect x="9.3796%" y="709" width="7.7435%" height="15" fill="rgb(229,147,28)" fg:x="11649" fg:w="9617"/><text x="9.6296%" y="719.50">&lt;tremor_run..</text></g><g><title>[libc-2.31.so] (1,628 samples, 1.31%)</title><rect x="15.8122%" y="693" width="1.3108%" height="15" fill="rgb(211,29,28)" fg:x="19638" fg:w="1628"/><text x="16.0622%" y="703.50"></text></g><g><title>[libc-2.31.so] (191 samples, 0.15%)</title><rect x="17.1231%" y="709" width="0.1538%" height="15" fill="rgb(228,72,33)" fg:x="21266" fg:w="191"/><text x="17.3731%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.01%)</title><rect x="17.4331%" y="693" width="0.0105%" height="15" fill="rgb(205,214,31)" fg:x="21651" fg:w="13"/><text x="17.6831%" y="703.50"></text></g><g><title>[libc-2.31.so] (1,328 samples, 1.07%)</title><rect x="17.4435%" y="693" width="1.0693%" height="15" fill="rgb(224,111,15)" fg:x="21664" fg:w="1328"/><text x="17.6935%" y="703.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (15,648 samples, 12.60%)</title><rect x="5.9318%" y="901" width="12.5995%" height="15" fill="rgb(253,21,26)" fg:x="7367" fg:w="15648"/><text x="6.1818%" y="911.50">async_executor::Exe..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (15,648 samples, 12.60%)</title><rect x="5.9318%" y="885" width="12.5995%" height="15" fill="rgb(245,139,43)" fg:x="7367" fg:w="15648"/><text x="6.1818%" y="895.50">&lt;async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (15,648 samples, 12.60%)</title><rect x="5.9318%" y="869" width="12.5995%" height="15" fill="rgb(252,170,7)" fg:x="7367" fg:w="15648"/><text x="6.1818%" y="879.50">async_std::task::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,648 samples, 12.60%)</title><rect x="5.9318%" y="853" width="12.5995%" height="15" fill="rgb(231,118,14)" fg:x="7367" fg:w="15648"/><text x="6.1818%" y="863.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15,648 samples, 12.60%)</title><rect x="5.9318%" y="837" width="12.5995%" height="15" fill="rgb(238,83,0)" fg:x="7367" fg:w="15648"/><text x="6.1818%" y="847.50">std::thread::local:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (15,648 samples, 12.60%)</title><rect x="5.9318%" y="821" width="12.5995%" height="15" fill="rgb(221,39,39)" fg:x="7367" fg:w="15648"/><text x="6.1818%" y="831.50">async_std::task::ta..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (15,648 samples, 12.60%)</title><rect x="5.9318%" y="805" width="12.5995%" height="15" fill="rgb(222,119,46)" fg:x="7367" fg:w="15648"/><text x="6.1818%" y="815.50">&lt;async_std::task::b..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,648 samples, 12.60%)</title><rect x="5.9318%" y="789" width="12.5995%" height="15" fill="rgb(222,165,49)" fg:x="7367" fg:w="15648"/><text x="6.1818%" y="799.50">&lt;core::future::from..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (11,366 samples, 9.15%)</title><rect x="9.3796%" y="773" width="9.1517%" height="15" fill="rgb(219,113,52)" fg:x="11649" fg:w="11366"/><text x="9.6296%" y="783.50">tremor_runtim..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,749 samples, 1.41%)</title><rect x="17.1231%" y="757" width="1.4083%" height="15" fill="rgb(214,7,15)" fg:x="21266" fg:w="1749"/><text x="17.3731%" y="767.50"></text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (1,749 samples, 1.41%)</title><rect x="17.1231%" y="741" width="1.4083%" height="15" fill="rgb(235,32,4)" fg:x="21266" fg:w="1749"/><text x="17.3731%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,749 samples, 1.41%)</title><rect x="17.1231%" y="725" width="1.4083%" height="15" fill="rgb(238,90,54)" fg:x="21266" fg:w="1749"/><text x="17.3731%" y="735.50"></text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (1,558 samples, 1.25%)</title><rect x="17.2769%" y="709" width="1.2545%" height="15" fill="rgb(213,208,19)" fg:x="21457" fg:w="1558"/><text x="17.5269%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (23 samples, 0.02%)</title><rect x="18.5128%" y="693" width="0.0185%" height="15" fill="rgb(233,156,4)" fg:x="22992" fg:w="23"/><text x="18.7628%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,056 samples, 14.54%)</title><rect x="3.9986%" y="917" width="14.5384%" height="15" fill="rgb(207,194,5)" fg:x="4966" fg:w="18056"/><text x="4.2486%" y="927.50">&lt;core::future::from_ge..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (50 samples, 0.04%)</title><rect x="18.5370%" y="917" width="0.0403%" height="15" fill="rgb(206,111,30)" fg:x="23022" fg:w="50"/><text x="18.7870%" y="927.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="18.5853%" y="917" width="0.0113%" height="15" fill="rgb(243,70,54)" fg:x="23082" fg:w="14"/><text x="18.8353%" y="927.50"></text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (52 samples, 0.04%)</title><rect x="18.5966%" y="917" width="0.0419%" height="15" fill="rgb(242,28,8)" fg:x="23096" fg:w="52"/><text x="18.8466%" y="927.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (35 samples, 0.03%)</title><rect x="18.6473%" y="917" width="0.0282%" height="15" fill="rgb(219,106,18)" fg:x="23159" fg:w="35"/><text x="18.8973%" y="927.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (17 samples, 0.01%)</title><rect x="18.6827%" y="917" width="0.0137%" height="15" fill="rgb(244,222,10)" fg:x="23203" fg:w="17"/><text x="18.9327%" y="927.50"></text></g><g><title>[libc-2.31.so] (189 samples, 0.15%)</title><rect x="18.6964%" y="917" width="0.1522%" height="15" fill="rgb(236,179,52)" fg:x="23220" fg:w="189"/><text x="18.9464%" y="927.50"></text></g><g><title>__clock_gettime (75 samples, 0.06%)</title><rect x="18.8486%" y="917" width="0.0604%" height="15" fill="rgb(213,23,39)" fg:x="23409" fg:w="75"/><text x="19.0986%" y="927.50"></text></g><g><title>__vdso_clock_gettime (49 samples, 0.04%)</title><rect x="18.9154%" y="917" width="0.0395%" height="15" fill="rgb(238,48,10)" fg:x="23492" fg:w="49"/><text x="19.1654%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (14 samples, 0.01%)</title><rect x="18.9549%" y="917" width="0.0113%" height="15" fill="rgb(251,196,23)" fg:x="23541" fg:w="14"/><text x="19.2049%" y="927.50"></text></g><g><title>async_executor::Ticker::sleep (25 samples, 0.02%)</title><rect x="18.9669%" y="917" width="0.0201%" height="15" fill="rgb(250,152,24)" fg:x="23556" fg:w="25"/><text x="19.2169%" y="927.50"></text></g><g><title>async_executor::steal (153 samples, 0.12%)</title><rect x="18.9871%" y="917" width="0.1232%" height="15" fill="rgb(209,150,17)" fg:x="23581" fg:w="153"/><text x="19.2371%" y="927.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="19.1690%" y="469" width="0.0185%" height="15" fill="rgb(234,202,34)" fg:x="23807" fg:w="23"/><text x="19.4190%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (23 samples, 0.02%)</title><rect x="19.1690%" y="453" width="0.0185%" height="15" fill="rgb(253,148,53)" fg:x="23807" fg:w="23"/><text x="19.4190%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.02%)</title><rect x="19.1690%" y="437" width="0.0185%" height="15" fill="rgb(218,129,16)" fg:x="23807" fg:w="23"/><text x="19.4190%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.02%)</title><rect x="19.1690%" y="421" width="0.0185%" height="15" fill="rgb(216,85,19)" fg:x="23807" fg:w="23"/><text x="19.4190%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (13 samples, 0.01%)</title><rect x="19.1908%" y="469" width="0.0105%" height="15" fill="rgb(235,228,7)" fg:x="23834" fg:w="13"/><text x="19.4408%" y="479.50"></text></g><g><title>core::mem::drop (28 samples, 0.02%)</title><rect x="19.2013%" y="469" width="0.0225%" height="15" fill="rgb(245,175,0)" fg:x="23847" fg:w="28"/><text x="19.4513%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (28 samples, 0.02%)</title><rect x="19.2013%" y="453" width="0.0225%" height="15" fill="rgb(208,168,36)" fg:x="23847" fg:w="28"/><text x="19.4513%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (26 samples, 0.02%)</title><rect x="19.2029%" y="437" width="0.0209%" height="15" fill="rgb(246,171,24)" fg:x="23849" fg:w="26"/><text x="19.4529%" y="447.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="19.2029%" y="421" width="0.0209%" height="15" fill="rgb(215,142,24)" fg:x="23849" fg:w="26"/><text x="19.4529%" y="431.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.01%)</title><rect x="19.2093%" y="405" width="0.0145%" height="15" fill="rgb(250,187,7)" fg:x="23857" fg:w="18"/><text x="19.4593%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (18 samples, 0.01%)</title><rect x="19.2093%" y="389" width="0.0145%" height="15" fill="rgb(228,66,33)" fg:x="23857" fg:w="18"/><text x="19.4593%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (18 samples, 0.01%)</title><rect x="19.2093%" y="373" width="0.0145%" height="15" fill="rgb(234,215,21)" fg:x="23857" fg:w="18"/><text x="19.4593%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.01%)</title><rect x="19.2093%" y="357" width="0.0145%" height="15" fill="rgb(222,191,20)" fg:x="23857" fg:w="18"/><text x="19.4593%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (21 samples, 0.02%)</title><rect x="19.2238%" y="469" width="0.0169%" height="15" fill="rgb(245,79,54)" fg:x="23875" fg:w="21"/><text x="19.4738%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (17 samples, 0.01%)</title><rect x="19.2270%" y="453" width="0.0137%" height="15" fill="rgb(240,10,37)" fg:x="23879" fg:w="17"/><text x="19.4770%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="19.2270%" y="437" width="0.0137%" height="15" fill="rgb(214,192,32)" fg:x="23879" fg:w="17"/><text x="19.4770%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.01%)</title><rect x="19.2270%" y="421" width="0.0137%" height="15" fill="rgb(209,36,54)" fg:x="23879" fg:w="17"/><text x="19.4770%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (17 samples, 0.01%)</title><rect x="19.2270%" y="405" width="0.0137%" height="15" fill="rgb(220,10,11)" fg:x="23879" fg:w="17"/><text x="19.4770%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (17 samples, 0.01%)</title><rect x="19.2270%" y="389" width="0.0137%" height="15" fill="rgb(221,106,17)" fg:x="23879" fg:w="17"/><text x="19.4770%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (17 samples, 0.01%)</title><rect x="19.2270%" y="373" width="0.0137%" height="15" fill="rgb(251,142,44)" fg:x="23879" fg:w="17"/><text x="19.4770%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (85 samples, 0.07%)</title><rect x="19.2488%" y="405" width="0.0684%" height="15" fill="rgb(238,13,15)" fg:x="23906" fg:w="85"/><text x="19.4988%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (85 samples, 0.07%)</title><rect x="19.2488%" y="389" width="0.0684%" height="15" fill="rgb(208,107,27)" fg:x="23906" fg:w="85"/><text x="19.4988%" y="399.50"></text></g><g><title>event_listener::Inner::lock (135 samples, 0.11%)</title><rect x="19.2447%" y="469" width="0.1087%" height="15" fill="rgb(205,136,37)" fg:x="23901" fg:w="135"/><text x="19.4947%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (135 samples, 0.11%)</title><rect x="19.2447%" y="453" width="0.1087%" height="15" fill="rgb(250,205,27)" fg:x="23901" fg:w="135"/><text x="19.4947%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (131 samples, 0.11%)</title><rect x="19.2480%" y="437" width="0.1055%" height="15" fill="rgb(210,80,43)" fg:x="23905" fg:w="131"/><text x="19.4980%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (131 samples, 0.11%)</title><rect x="19.2480%" y="421" width="0.1055%" height="15" fill="rgb(247,160,36)" fg:x="23905" fg:w="131"/><text x="19.4980%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (45 samples, 0.04%)</title><rect x="19.3172%" y="405" width="0.0362%" height="15" fill="rgb(234,13,49)" fg:x="23991" fg:w="45"/><text x="19.5672%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (43 samples, 0.03%)</title><rect x="19.3188%" y="389" width="0.0346%" height="15" fill="rgb(234,122,0)" fg:x="23993" fg:w="43"/><text x="19.5688%" y="399.50"></text></g><g><title>core::hint::spin_loop (43 samples, 0.03%)</title><rect x="19.3188%" y="373" width="0.0346%" height="15" fill="rgb(207,146,38)" fg:x="23993" fg:w="43"/><text x="19.5688%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (43 samples, 0.03%)</title><rect x="19.3188%" y="357" width="0.0346%" height="15" fill="rgb(207,177,25)" fg:x="23993" fg:w="43"/><text x="19.5688%" y="367.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (289 samples, 0.23%)</title><rect x="19.1610%" y="485" width="0.2327%" height="15" fill="rgb(211,178,42)" fg:x="23797" fg:w="289"/><text x="19.4110%" y="495.50"></text></g><g><title>event_listener::List::remove (50 samples, 0.04%)</title><rect x="19.3534%" y="469" width="0.0403%" height="15" fill="rgb(230,69,54)" fg:x="24036" fg:w="50"/><text x="19.6034%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (36 samples, 0.03%)</title><rect x="19.3647%" y="453" width="0.0290%" height="15" fill="rgb(214,135,41)" fg:x="24050" fg:w="36"/><text x="19.6147%" y="463.50"></text></g><g><title>core::mem::replace (36 samples, 0.03%)</title><rect x="19.3647%" y="437" width="0.0290%" height="15" fill="rgb(237,67,25)" fg:x="24050" fg:w="36"/><text x="19.6147%" y="447.50"></text></g><g><title>core::ptr::read (36 samples, 0.03%)</title><rect x="19.3647%" y="421" width="0.0290%" height="15" fill="rgb(222,189,50)" fg:x="24050" fg:w="36"/><text x="19.6147%" y="431.50"></text></g><g><title>[libc-2.31.so] (754 samples, 0.61%)</title><rect x="19.3937%" y="485" width="0.6071%" height="15" fill="rgb(245,148,34)" fg:x="24086" fg:w="754"/><text x="19.6437%" y="495.50"></text></g><g><title>[libc-2.31.so] (1,220 samples, 0.98%)</title><rect x="20.0523%" y="469" width="0.9823%" height="15" fill="rgb(222,29,6)" fg:x="24904" fg:w="1220"/><text x="20.3023%" y="479.50"></text></g><g><title>[libc-2.31.so] (304 samples, 0.24%)</title><rect x="21.1973%" y="437" width="0.2448%" height="15" fill="rgb(221,189,43)" fg:x="26326" fg:w="304"/><text x="21.4473%" y="447.50"></text></g><g><title>concurrent_queue::full_fence (101 samples, 0.08%)</title><rect x="21.4421%" y="437" width="0.0813%" height="15" fill="rgb(207,36,27)" fg:x="26630" fg:w="101"/><text x="21.6921%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (92 samples, 0.07%)</title><rect x="21.4493%" y="421" width="0.0741%" height="15" fill="rgb(217,90,24)" fg:x="26639" fg:w="92"/><text x="21.6993%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (92 samples, 0.07%)</title><rect x="21.4493%" y="405" width="0.0741%" height="15" fill="rgb(224,66,35)" fg:x="26639" fg:w="92"/><text x="21.6993%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (92 samples, 0.07%)</title><rect x="21.4493%" y="389" width="0.0741%" height="15" fill="rgb(221,13,50)" fg:x="26639" fg:w="92"/><text x="21.6993%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (19 samples, 0.02%)</title><rect x="21.5234%" y="437" width="0.0153%" height="15" fill="rgb(236,68,49)" fg:x="26731" fg:w="19"/><text x="21.7734%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (470 samples, 0.38%)</title><rect x="21.5387%" y="437" width="0.3784%" height="15" fill="rgb(229,146,28)" fg:x="26750" fg:w="470"/><text x="21.7887%" y="447.50"></text></g><g><title>core::ptr::read (470 samples, 0.38%)</title><rect x="21.5387%" y="421" width="0.3784%" height="15" fill="rgb(225,31,38)" fg:x="26750" fg:w="470"/><text x="21.7887%" y="431.50"></text></g><g><title>[libc-2.31.so] (470 samples, 0.38%)</title><rect x="21.5387%" y="405" width="0.3784%" height="15" fill="rgb(250,208,3)" fg:x="26750" fg:w="470"/><text x="21.7887%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1,677 samples, 1.35%)</title><rect x="21.9171%" y="437" width="1.3503%" height="15" fill="rgb(246,54,23)" fg:x="27220" fg:w="1677"/><text x="22.1671%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,677 samples, 1.35%)</title><rect x="21.9171%" y="421" width="1.3503%" height="15" fill="rgb(243,76,11)" fg:x="27220" fg:w="1677"/><text x="22.1671%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2,963 samples, 2.39%)</title><rect x="21.0347%" y="469" width="2.3858%" height="15" fill="rgb(245,21,50)" fg:x="26124" fg:w="2963"/><text x="21.2847%" y="479.50">co..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,940 samples, 2.37%)</title><rect x="21.0532%" y="453" width="2.3672%" height="15" fill="rgb(228,9,43)" fg:x="26147" fg:w="2940"/><text x="21.3032%" y="463.50">co..</text></g><g><title>core::sync::atomic::AtomicUsize::load (190 samples, 0.15%)</title><rect x="23.2674%" y="437" width="0.1530%" height="15" fill="rgb(208,100,47)" fg:x="28897" fg:w="190"/><text x="23.5174%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (178 samples, 0.14%)</title><rect x="23.2771%" y="421" width="0.1433%" height="15" fill="rgb(232,26,8)" fg:x="28909" fg:w="178"/><text x="23.5271%" y="431.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (4,676 samples, 3.77%)</title><rect x="20.0008%" y="485" width="3.7650%" height="15" fill="rgb(216,166,38)" fg:x="24840" fg:w="4676"/><text x="20.2508%" y="495.50">asyn..</text></g><g><title>event_listener::Event::notify (429 samples, 0.35%)</title><rect x="23.4204%" y="469" width="0.3454%" height="15" fill="rgb(251,202,51)" fg:x="29087" fg:w="429"/><text x="23.6704%" y="479.50"></text></g><g><title>event_listener::full_fence (417 samples, 0.34%)</title><rect x="23.4301%" y="453" width="0.3358%" height="15" fill="rgb(254,216,34)" fg:x="29099" fg:w="417"/><text x="23.6801%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (410 samples, 0.33%)</title><rect x="23.4357%" y="437" width="0.3301%" height="15" fill="rgb(251,32,27)" fg:x="29106" fg:w="410"/><text x="23.6857%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (410 samples, 0.33%)</title><rect x="23.4357%" y="421" width="0.3301%" height="15" fill="rgb(208,127,28)" fg:x="29106" fg:w="410"/><text x="23.6857%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (21 samples, 0.02%)</title><rect x="23.7659%" y="485" width="0.0169%" height="15" fill="rgb(224,137,22)" fg:x="29516" fg:w="21"/><text x="24.0159%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (105 samples, 0.08%)</title><rect x="23.7828%" y="485" width="0.0845%" height="15" fill="rgb(254,70,32)" fg:x="29537" fg:w="105"/><text x="24.0328%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (84 samples, 0.07%)</title><rect x="23.7997%" y="469" width="0.0676%" height="15" fill="rgb(229,75,37)" fg:x="29558" fg:w="84"/><text x="24.0497%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (77 samples, 0.06%)</title><rect x="23.8053%" y="453" width="0.0620%" height="15" fill="rgb(252,64,23)" fg:x="29565" fg:w="77"/><text x="24.0553%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.06%)</title><rect x="23.8053%" y="437" width="0.0620%" height="15" fill="rgb(232,162,48)" fg:x="29565" fg:w="77"/><text x="24.0553%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (76 samples, 0.06%)</title><rect x="23.8061%" y="421" width="0.0612%" height="15" fill="rgb(246,160,12)" fg:x="29566" fg:w="76"/><text x="24.0561%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (76 samples, 0.06%)</title><rect x="23.8061%" y="405" width="0.0612%" height="15" fill="rgb(247,166,0)" fg:x="29566" fg:w="76"/><text x="24.0561%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (38 samples, 0.03%)</title><rect x="23.8721%" y="469" width="0.0306%" height="15" fill="rgb(249,219,21)" fg:x="29648" fg:w="38"/><text x="24.1221%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (38 samples, 0.03%)</title><rect x="23.8721%" y="453" width="0.0306%" height="15" fill="rgb(205,209,3)" fg:x="29648" fg:w="38"/><text x="24.1221%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (38 samples, 0.03%)</title><rect x="23.8721%" y="437" width="0.0306%" height="15" fill="rgb(243,44,1)" fg:x="29648" fg:w="38"/><text x="24.1221%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (51 samples, 0.04%)</title><rect x="23.9027%" y="469" width="0.0411%" height="15" fill="rgb(206,159,16)" fg:x="29686" fg:w="51"/><text x="24.1527%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (51 samples, 0.04%)</title><rect x="23.9027%" y="453" width="0.0411%" height="15" fill="rgb(244,77,30)" fg:x="29686" fg:w="51"/><text x="24.1527%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.04%)</title><rect x="23.9027%" y="437" width="0.0411%" height="15" fill="rgb(218,69,12)" fg:x="29686" fg:w="51"/><text x="24.1527%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (50 samples, 0.04%)</title><rect x="23.9035%" y="421" width="0.0403%" height="15" fill="rgb(212,87,7)" fg:x="29687" fg:w="50"/><text x="24.1535%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (50 samples, 0.04%)</title><rect x="23.9035%" y="405" width="0.0403%" height="15" fill="rgb(245,114,25)" fg:x="29687" fg:w="50"/><text x="24.1535%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (50 samples, 0.04%)</title><rect x="23.9035%" y="389" width="0.0403%" height="15" fill="rgb(210,61,42)" fg:x="29687" fg:w="50"/><text x="24.1535%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (50 samples, 0.04%)</title><rect x="23.9035%" y="373" width="0.0403%" height="15" fill="rgb(211,52,33)" fg:x="29687" fg:w="50"/><text x="24.1535%" y="383.50"></text></g><g><title>event_listener::Inner::lock (23 samples, 0.02%)</title><rect x="23.9486%" y="469" width="0.0185%" height="15" fill="rgb(234,58,33)" fg:x="29743" fg:w="23"/><text x="24.1986%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (19 samples, 0.02%)</title><rect x="23.9518%" y="453" width="0.0153%" height="15" fill="rgb(220,115,36)" fg:x="29747" fg:w="19"/><text x="24.2018%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="23.9559%" y="437" width="0.0113%" height="15" fill="rgb(243,153,54)" fg:x="29752" fg:w="14"/><text x="24.2059%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (14 samples, 0.01%)</title><rect x="23.9559%" y="421" width="0.0113%" height="15" fill="rgb(251,47,18)" fg:x="29752" fg:w="14"/><text x="24.2059%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (14 samples, 0.01%)</title><rect x="23.9559%" y="405" width="0.0113%" height="15" fill="rgb(242,102,42)" fg:x="29752" fg:w="14"/><text x="24.2059%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="23.9559%" y="389" width="0.0113%" height="15" fill="rgb(234,31,38)" fg:x="29752" fg:w="14"/><text x="24.2059%" y="399.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,051 samples, 4.87%)</title><rect x="19.1111%" y="565" width="4.8722%" height="15" fill="rgb(221,117,51)" fg:x="23735" fg:w="6051"/><text x="19.3611%" y="575.50">&lt;async..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (6,051 samples, 4.87%)</title><rect x="19.1111%" y="549" width="4.8722%" height="15" fill="rgb(212,20,18)" fg:x="23735" fg:w="6051"/><text x="19.3611%" y="559.50">&lt;tremo..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (6,051 samples, 4.87%)</title><rect x="19.1111%" y="533" width="4.8722%" height="15" fill="rgb(245,133,36)" fg:x="23735" fg:w="6051"/><text x="19.3611%" y="543.50">&lt;async..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (6,051 samples, 4.87%)</title><rect x="19.1111%" y="517" width="4.8722%" height="15" fill="rgb(212,6,19)" fg:x="23735" fg:w="6051"/><text x="19.3611%" y="527.50">&lt;async..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (6,051 samples, 4.87%)</title><rect x="19.1111%" y="501" width="4.8722%" height="15" fill="rgb(218,1,36)" fg:x="23735" fg:w="6051"/><text x="19.3611%" y="511.50">&lt;async..</text></g><g><title>event_listener::Event::listen (144 samples, 0.12%)</title><rect x="23.8673%" y="485" width="0.1159%" height="15" fill="rgb(246,84,54)" fg:x="29642" fg:w="144"/><text x="24.1173%" y="495.50"></text></g><g><title>event_listener::full_fence (17 samples, 0.01%)</title><rect x="23.9696%" y="469" width="0.0137%" height="15" fill="rgb(242,110,6)" fg:x="29769" fg:w="17"/><text x="24.2196%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.01%)</title><rect x="23.9720%" y="453" width="0.0113%" height="15" fill="rgb(214,47,5)" fg:x="29772" fg:w="14"/><text x="24.2220%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="23.9720%" y="437" width="0.0113%" height="15" fill="rgb(218,159,25)" fg:x="29772" fg:w="14"/><text x="24.2220%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (20 samples, 0.02%)</title><rect x="24.0332%" y="469" width="0.0161%" height="15" fill="rgb(215,211,28)" fg:x="29848" fg:w="20"/><text x="24.2832%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (18 samples, 0.01%)</title><rect x="24.0348%" y="453" width="0.0145%" height="15" fill="rgb(238,59,32)" fg:x="29850" fg:w="18"/><text x="24.2848%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (852 samples, 0.69%)</title><rect x="24.0493%" y="469" width="0.6860%" height="15" fill="rgb(226,82,3)" fg:x="29868" fg:w="852"/><text x="24.2993%" y="479.50"></text></g><g><title>[libc-2.31.so] (2,078 samples, 1.67%)</title><rect x="24.7812%" y="453" width="1.6732%" height="15" fill="rgb(240,164,32)" fg:x="30777" fg:w="2078"/><text x="25.0312%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (317 samples, 0.26%)</title><rect x="26.6331%" y="437" width="0.2552%" height="15" fill="rgb(232,46,7)" fg:x="33077" fg:w="317"/><text x="26.8831%" y="447.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (9,697 samples, 7.81%)</title><rect x="19.1111%" y="581" width="7.8079%" height="15" fill="rgb(229,129,53)" fg:x="23735" fg:w="9697"/><text x="19.3611%" y="591.50">tremor_runt..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,646 samples, 2.94%)</title><rect x="23.9833%" y="565" width="2.9357%" height="15" fill="rgb(234,188,29)" fg:x="29786" fg:w="3646"/><text x="24.2333%" y="575.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,646 samples, 2.94%)</title><rect x="23.9833%" y="549" width="2.9357%" height="15" fill="rgb(246,141,4)" fg:x="29786" fg:w="3646"/><text x="24.2333%" y="559.50">&lt;c..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (3,646 samples, 2.94%)</title><rect x="23.9833%" y="533" width="2.9357%" height="15" fill="rgb(229,23,39)" fg:x="29786" fg:w="3646"/><text x="24.2333%" y="543.50">&lt;t..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (3,646 samples, 2.94%)</title><rect x="23.9833%" y="517" width="2.9357%" height="15" fill="rgb(206,12,3)" fg:x="29786" fg:w="3646"/><text x="24.2333%" y="527.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (3,646 samples, 2.94%)</title><rect x="23.9833%" y="501" width="2.9357%" height="15" fill="rgb(252,226,20)" fg:x="29786" fg:w="3646"/><text x="24.2333%" y="511.50">tr..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (3,646 samples, 2.94%)</title><rect x="23.9833%" y="485" width="2.9357%" height="15" fill="rgb(216,123,35)" fg:x="29786" fg:w="3646"/><text x="24.2333%" y="495.50">tr..</text></g><g><title>&lt;tremor_runtime::codec::binary::Binary as tremor_runtime::codec::Codec&gt;::encode (2,712 samples, 2.18%)</title><rect x="24.7353%" y="469" width="2.1837%" height="15" fill="rgb(212,68,40)" fg:x="30720" fg:w="2712"/><text x="24.9853%" y="479.50">&lt;..</text></g><g><title>sn_rust_alloc (577 samples, 0.46%)</title><rect x="26.4544%" y="453" width="0.4646%" height="15" fill="rgb(254,125,32)" fg:x="32855" fg:w="577"/><text x="26.7044%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (38 samples, 0.03%)</title><rect x="26.8884%" y="437" width="0.0306%" height="15" fill="rgb(253,97,22)" fg:x="33394" fg:w="38"/><text x="27.1384%" y="447.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (17 samples, 0.01%)</title><rect x="27.2612%" y="565" width="0.0137%" height="15" fill="rgb(241,101,14)" fg:x="33857" fg:w="17"/><text x="27.5112%" y="575.50"></text></g><g><title>[libc-2.31.so] (312 samples, 0.25%)</title><rect x="27.2749%" y="549" width="0.2512%" height="15" fill="rgb(238,103,29)" fg:x="33874" fg:w="312"/><text x="27.5249%" y="559.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (17 samples, 0.01%)</title><rect x="27.9271%" y="533" width="0.0137%" height="15" fill="rgb(233,195,47)" fg:x="34684" fg:w="17"/><text x="28.1771%" y="543.50"></text></g><g><title>[libc-2.31.so] (380 samples, 0.31%)</title><rect x="27.9504%" y="517" width="0.3060%" height="15" fill="rgb(246,218,30)" fg:x="34713" fg:w="380"/><text x="28.2004%" y="527.50"></text></g><g><title>[libc-2.31.so] (141 samples, 0.11%)</title><rect x="28.5036%" y="501" width="0.1135%" height="15" fill="rgb(219,145,47)" fg:x="35400" fg:w="141"/><text x="28.7536%" y="511.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (101 samples, 0.08%)</title><rect x="28.7765%" y="309" width="0.0813%" height="15" fill="rgb(243,12,26)" fg:x="35739" fg:w="101"/><text x="29.0265%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (261 samples, 0.21%)</title><rect x="28.6493%" y="437" width="0.2102%" height="15" fill="rgb(214,87,16)" fg:x="35581" fg:w="261"/><text x="28.8993%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (157 samples, 0.13%)</title><rect x="28.7330%" y="421" width="0.1264%" height="15" fill="rgb(208,99,42)" fg:x="35685" fg:w="157"/><text x="28.9830%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (157 samples, 0.13%)</title><rect x="28.7330%" y="405" width="0.1264%" height="15" fill="rgb(253,99,2)" fg:x="35685" fg:w="157"/><text x="28.9830%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (157 samples, 0.13%)</title><rect x="28.7330%" y="389" width="0.1264%" height="15" fill="rgb(220,168,23)" fg:x="35685" fg:w="157"/><text x="28.9830%" y="399.50"></text></g><g><title>alloc::alloc::alloc (157 samples, 0.13%)</title><rect x="28.7330%" y="373" width="0.1264%" height="15" fill="rgb(242,38,24)" fg:x="35685" fg:w="157"/><text x="28.9830%" y="383.50"></text></g><g><title>__rg_alloc (157 samples, 0.13%)</title><rect x="28.7330%" y="357" width="0.1264%" height="15" fill="rgb(225,182,9)" fg:x="35685" fg:w="157"/><text x="28.9830%" y="367.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (157 samples, 0.13%)</title><rect x="28.7330%" y="341" width="0.1264%" height="15" fill="rgb(243,178,37)" fg:x="35685" fg:w="157"/><text x="28.9830%" y="351.50"></text></g><g><title>sn_rust_alloc (147 samples, 0.12%)</title><rect x="28.7411%" y="325" width="0.1184%" height="15" fill="rgb(232,139,19)" fg:x="35695" fg:w="147"/><text x="28.9911%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (302 samples, 0.24%)</title><rect x="28.6260%" y="501" width="0.2432%" height="15" fill="rgb(225,201,24)" fg:x="35552" fg:w="302"/><text x="28.8760%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (289 samples, 0.23%)</title><rect x="28.6364%" y="485" width="0.2327%" height="15" fill="rgb(221,47,46)" fg:x="35565" fg:w="289"/><text x="28.8864%" y="495.50"></text></g><g><title>value_trait::Builder::object (280 samples, 0.23%)</title><rect x="28.6437%" y="469" width="0.2255%" height="15" fill="rgb(249,23,13)" fg:x="35574" fg:w="280"/><text x="28.8937%" y="479.50"></text></g><g><title>&lt;tremor_value::value::Value as value_trait::Builder&gt;::object_with_capacity (273 samples, 0.22%)</title><rect x="28.6493%" y="453" width="0.2198%" height="15" fill="rgb(219,9,5)" fg:x="35581" fg:w="273"/><text x="28.8993%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (125 samples, 0.10%)</title><rect x="28.9029%" y="421" width="0.1006%" height="15" fill="rgb(254,171,16)" fg:x="35896" fg:w="125"/><text x="29.1529%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (125 samples, 0.10%)</title><rect x="28.9029%" y="405" width="0.1006%" height="15" fill="rgb(230,171,20)" fg:x="35896" fg:w="125"/><text x="29.1529%" y="415.50"></text></g><g><title>__rg_dealloc (125 samples, 0.10%)</title><rect x="28.9029%" y="389" width="0.1006%" height="15" fill="rgb(210,71,41)" fg:x="35896" fg:w="125"/><text x="29.1529%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (125 samples, 0.10%)</title><rect x="28.9029%" y="373" width="0.1006%" height="15" fill="rgb(206,173,20)" fg:x="35896" fg:w="125"/><text x="29.1529%" y="383.50"></text></g><g><title>sn_rust_dealloc (125 samples, 0.10%)</title><rect x="28.9029%" y="357" width="0.1006%" height="15" fill="rgb(233,88,34)" fg:x="35896" fg:w="125"/><text x="29.1529%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (144 samples, 0.12%)</title><rect x="28.8925%" y="485" width="0.1159%" height="15" fill="rgb(223,209,46)" fg:x="35883" fg:w="144"/><text x="29.1425%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (144 samples, 0.12%)</title><rect x="28.8925%" y="469" width="0.1159%" height="15" fill="rgb(250,43,18)" fg:x="35883" fg:w="144"/><text x="29.1425%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (144 samples, 0.12%)</title><rect x="28.8925%" y="453" width="0.1159%" height="15" fill="rgb(208,13,10)" fg:x="35883" fg:w="144"/><text x="29.1425%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.12%)</title><rect x="28.8925%" y="437" width="0.1159%" height="15" fill="rgb(212,200,36)" fg:x="35883" fg:w="144"/><text x="29.1425%" y="447.50"></text></g><g><title>sn_rust_dealloc (53 samples, 0.04%)</title><rect x="29.0269%" y="309" width="0.0427%" height="15" fill="rgb(225,90,30)" fg:x="36050" fg:w="53"/><text x="29.2769%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (76 samples, 0.06%)</title><rect x="29.0141%" y="373" width="0.0612%" height="15" fill="rgb(236,182,39)" fg:x="36034" fg:w="76"/><text x="29.2641%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (76 samples, 0.06%)</title><rect x="29.0141%" y="357" width="0.0612%" height="15" fill="rgb(212,144,35)" fg:x="36034" fg:w="76"/><text x="29.2641%" y="367.50"></text></g><g><title>__rg_dealloc (76 samples, 0.06%)</title><rect x="29.0141%" y="341" width="0.0612%" height="15" fill="rgb(228,63,44)" fg:x="36034" fg:w="76"/><text x="29.2641%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (76 samples, 0.06%)</title><rect x="29.0141%" y="325" width="0.0612%" height="15" fill="rgb(228,109,6)" fg:x="36034" fg:w="76"/><text x="29.2641%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.08%)</title><rect x="29.0084%" y="469" width="0.0781%" height="15" fill="rgb(238,117,24)" fg:x="36027" fg:w="97"/><text x="29.2584%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (95 samples, 0.08%)</title><rect x="29.0100%" y="453" width="0.0765%" height="15" fill="rgb(242,26,26)" fg:x="36029" fg:w="95"/><text x="29.2600%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (91 samples, 0.07%)</title><rect x="29.0132%" y="437" width="0.0733%" height="15" fill="rgb(221,92,48)" fg:x="36033" fg:w="91"/><text x="29.2632%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (91 samples, 0.07%)</title><rect x="29.0132%" y="421" width="0.0733%" height="15" fill="rgb(209,209,32)" fg:x="36033" fg:w="91"/><text x="29.2632%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (91 samples, 0.07%)</title><rect x="29.0132%" y="405" width="0.0733%" height="15" fill="rgb(221,70,22)" fg:x="36033" fg:w="91"/><text x="29.2632%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.07%)</title><rect x="29.0132%" y="389" width="0.0733%" height="15" fill="rgb(248,145,5)" fg:x="36033" fg:w="91"/><text x="29.2632%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (14 samples, 0.01%)</title><rect x="29.0752%" y="373" width="0.0113%" height="15" fill="rgb(226,116,26)" fg:x="36110" fg:w="14"/><text x="29.3252%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (263 samples, 0.21%)</title><rect x="28.8925%" y="501" width="0.2118%" height="15" fill="rgb(244,5,17)" fg:x="35883" fg:w="263"/><text x="29.1425%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (119 samples, 0.10%)</title><rect x="29.0084%" y="485" width="0.0958%" height="15" fill="rgb(252,159,33)" fg:x="36027" fg:w="119"/><text x="29.2584%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (22 samples, 0.02%)</title><rect x="29.0865%" y="469" width="0.0177%" height="15" fill="rgb(206,71,0)" fg:x="36124" fg:w="22"/><text x="29.3365%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="29.0865%" y="453" width="0.0177%" height="15" fill="rgb(233,118,54)" fg:x="36124" fg:w="22"/><text x="29.3365%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (64 samples, 0.05%)</title><rect x="29.1042%" y="501" width="0.0515%" height="15" fill="rgb(234,83,48)" fg:x="36146" fg:w="64"/><text x="29.3542%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (40 samples, 0.03%)</title><rect x="29.1236%" y="485" width="0.0322%" height="15" fill="rgb(228,3,54)" fg:x="36170" fg:w="40"/><text x="29.3736%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (31 samples, 0.02%)</title><rect x="29.1308%" y="469" width="0.0250%" height="15" fill="rgb(226,155,13)" fg:x="36179" fg:w="31"/><text x="29.3808%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (31 samples, 0.02%)</title><rect x="29.1308%" y="453" width="0.0250%" height="15" fill="rgb(241,28,37)" fg:x="36179" fg:w="31"/><text x="29.3808%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (15 samples, 0.01%)</title><rect x="29.1437%" y="437" width="0.0121%" height="15" fill="rgb(233,93,10)" fg:x="36195" fg:w="15"/><text x="29.3937%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (15 samples, 0.01%)</title><rect x="29.1437%" y="421" width="0.0121%" height="15" fill="rgb(225,113,19)" fg:x="36195" fg:w="15"/><text x="29.3937%" y="431.50"></text></g><g><title>sn_rust_dealloc (94 samples, 0.08%)</title><rect x="29.1558%" y="501" width="0.0757%" height="15" fill="rgb(241,2,18)" fg:x="36210" fg:w="94"/><text x="29.4058%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (32 samples, 0.03%)</title><rect x="29.2524%" y="485" width="0.0258%" height="15" fill="rgb(228,207,21)" fg:x="36330" fg:w="32"/><text x="29.5024%" y="495.50"></text></g><g><title>core::time::Duration::as_nanos (24 samples, 0.02%)</title><rect x="29.2782%" y="485" width="0.0193%" height="15" fill="rgb(213,211,35)" fg:x="36362" fg:w="24"/><text x="29.5282%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (142 samples, 0.11%)</title><rect x="29.2975%" y="469" width="0.1143%" height="15" fill="rgb(209,83,10)" fg:x="36386" fg:w="142"/><text x="29.5475%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (59 samples, 0.05%)</title><rect x="29.4537%" y="437" width="0.0475%" height="15" fill="rgb(209,164,1)" fg:x="36580" fg:w="59"/><text x="29.7037%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::ge (59 samples, 0.05%)</title><rect x="29.4537%" y="421" width="0.0475%" height="15" fill="rgb(213,184,43)" fg:x="36580" fg:w="59"/><text x="29.7037%" y="431.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (59 samples, 0.05%)</title><rect x="29.4537%" y="405" width="0.0475%" height="15" fill="rgb(231,61,34)" fg:x="36580" fg:w="59"/><text x="29.7037%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (30 samples, 0.02%)</title><rect x="29.4770%" y="389" width="0.0242%" height="15" fill="rgb(235,75,3)" fg:x="36609" fg:w="30"/><text x="29.7270%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (30 samples, 0.02%)</title><rect x="29.4770%" y="373" width="0.0242%" height="15" fill="rgb(220,106,47)" fg:x="36609" fg:w="30"/><text x="29.7270%" y="383.50"></text></g><g><title>std::time::SystemTime::duration_since (284 samples, 0.23%)</title><rect x="29.2975%" y="485" width="0.2287%" height="15" fill="rgb(210,196,33)" fg:x="36386" fg:w="284"/><text x="29.5475%" y="495.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (142 samples, 0.11%)</title><rect x="29.4118%" y="469" width="0.1143%" height="15" fill="rgb(229,154,42)" fg:x="36528" fg:w="142"/><text x="29.6618%" y="479.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (141 samples, 0.11%)</title><rect x="29.4126%" y="453" width="0.1135%" height="15" fill="rgb(228,114,26)" fg:x="36529" fg:w="141"/><text x="29.6626%" y="463.50"></text></g><g><title>core::time::Duration::new (31 samples, 0.02%)</title><rect x="29.5012%" y="437" width="0.0250%" height="15" fill="rgb(208,144,1)" fg:x="36639" fg:w="31"/><text x="29.7512%" y="447.50"></text></g><g><title>tremor_common::time::nanotime (828 samples, 0.67%)</title><rect x="29.2315%" y="501" width="0.6667%" height="15" fill="rgb(239,112,37)" fg:x="36304" fg:w="828"/><text x="29.4815%" y="511.50"></text></g><g><title>std::time::SystemTime::now (462 samples, 0.37%)</title><rect x="29.5261%" y="485" width="0.3720%" height="15" fill="rgb(210,96,50)" fg:x="36670" fg:w="462"/><text x="29.7761%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (462 samples, 0.37%)</title><rect x="29.5261%" y="469" width="0.3720%" height="15" fill="rgb(222,178,2)" fg:x="36670" fg:w="462"/><text x="29.7761%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (462 samples, 0.37%)</title><rect x="29.5261%" y="453" width="0.3720%" height="15" fill="rgb(226,74,18)" fg:x="36670" fg:w="462"/><text x="29.7761%" y="463.50"></text></g><g><title>__clock_gettime (362 samples, 0.29%)</title><rect x="29.6067%" y="437" width="0.2915%" height="15" fill="rgb(225,67,54)" fg:x="36770" fg:w="362"/><text x="29.8567%" y="447.50"></text></g><g><title>__vdso_clock_gettime (346 samples, 0.28%)</title><rect x="29.6195%" y="421" width="0.2786%" height="15" fill="rgb(251,92,32)" fg:x="36786" fg:w="346"/><text x="29.8695%" y="431.50"></text></g><g><title>[[vdso]] (307 samples, 0.25%)</title><rect x="29.6510%" y="405" width="0.2472%" height="15" fill="rgb(228,149,22)" fg:x="36825" fg:w="307"/><text x="29.9010%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,499 samples, 2.01%)</title><rect x="27.9407%" y="533" width="2.0122%" height="15" fill="rgb(243,54,13)" fg:x="34701" fg:w="2499"/><text x="28.1907%" y="543.50">&lt;..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (2,107 samples, 1.70%)</title><rect x="28.2564%" y="517" width="1.6965%" height="15" fill="rgb(243,180,28)" fg:x="35093" fg:w="2107"/><text x="28.5064%" y="527.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (68 samples, 0.05%)</title><rect x="29.8981%" y="501" width="0.0548%" height="15" fill="rgb(208,167,24)" fg:x="37132" fg:w="68"/><text x="30.1481%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (50 samples, 0.04%)</title><rect x="29.9126%" y="485" width="0.0403%" height="15" fill="rgb(245,73,45)" fg:x="37150" fg:w="50"/><text x="30.1626%" y="495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (29 samples, 0.02%)</title><rect x="29.9295%" y="469" width="0.0234%" height="15" fill="rgb(237,203,48)" fg:x="37171" fg:w="29"/><text x="30.1795%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (29 samples, 0.02%)</title><rect x="29.9295%" y="453" width="0.0234%" height="15" fill="rgb(211,197,16)" fg:x="37171" fg:w="29"/><text x="30.1795%" y="463.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (29 samples, 0.02%)</title><rect x="29.9295%" y="437" width="0.0234%" height="15" fill="rgb(243,99,51)" fg:x="37171" fg:w="29"/><text x="30.1795%" y="447.50"></text></g><g><title>[libc-2.31.so] (380 samples, 0.31%)</title><rect x="29.9601%" y="533" width="0.3060%" height="15" fill="rgb(215,123,29)" fg:x="37209" fg:w="380"/><text x="30.2101%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,736 samples, 3.01%)</title><rect x="27.2749%" y="565" width="3.0082%" height="15" fill="rgb(239,186,37)" fg:x="33874" fg:w="3736"/><text x="27.5249%" y="575.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (3,424 samples, 2.76%)</title><rect x="27.5261%" y="549" width="2.7570%" height="15" fill="rgb(252,136,39)" fg:x="34186" fg:w="3424"/><text x="27.7761%" y="559.50">tr..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="30.2661%" y="533" width="0.0169%" height="15" fill="rgb(223,213,32)" fg:x="37589" fg:w="21"/><text x="30.5161%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (21 samples, 0.02%)</title><rect x="30.2661%" y="517" width="0.0169%" height="15" fill="rgb(233,115,5)" fg:x="37589" fg:w="21"/><text x="30.5161%" y="527.50"></text></g><g><title>[libc-2.31.so] (595 samples, 0.48%)</title><rect x="30.5503%" y="549" width="0.4791%" height="15" fill="rgb(207,226,44)" fg:x="37942" fg:w="595"/><text x="30.8003%" y="559.50"></text></g><g><title>sn_rust_dealloc (31 samples, 0.02%)</title><rect x="31.0343%" y="437" width="0.0250%" height="15" fill="rgb(208,126,0)" fg:x="38543" fg:w="31"/><text x="31.2843%" y="447.50"></text></g><g><title>alloc::alloc::box_free (38 samples, 0.03%)</title><rect x="31.0318%" y="517" width="0.0306%" height="15" fill="rgb(244,66,21)" fg:x="38540" fg:w="38"/><text x="31.2818%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.03%)</title><rect x="31.0318%" y="501" width="0.0306%" height="15" fill="rgb(222,97,12)" fg:x="38540" fg:w="38"/><text x="31.2818%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.03%)</title><rect x="31.0318%" y="485" width="0.0306%" height="15" fill="rgb(219,213,19)" fg:x="38540" fg:w="38"/><text x="31.2818%" y="495.50"></text></g><g><title>__rg_dealloc (38 samples, 0.03%)</title><rect x="31.0318%" y="469" width="0.0306%" height="15" fill="rgb(252,169,30)" fg:x="38540" fg:w="38"/><text x="31.2818%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (38 samples, 0.03%)</title><rect x="31.0318%" y="453" width="0.0306%" height="15" fill="rgb(206,32,51)" fg:x="38540" fg:w="38"/><text x="31.2818%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (40 samples, 0.03%)</title><rect x="31.0318%" y="549" width="0.0322%" height="15" fill="rgb(250,172,42)" fg:x="38540" fg:w="40"/><text x="31.2818%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::source::SourceReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (40 samples, 0.03%)</title><rect x="31.0318%" y="533" width="0.0322%" height="15" fill="rgb(209,34,43)" fg:x="38540" fg:w="40"/><text x="31.2818%" y="543.50"></text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (989 samples, 0.80%)</title><rect x="30.2830%" y="565" width="0.7963%" height="15" fill="rgb(223,11,35)" fg:x="37610" fg:w="989"/><text x="30.5330%" y="575.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (19 samples, 0.02%)</title><rect x="31.0641%" y="549" width="0.0153%" height="15" fill="rgb(251,219,26)" fg:x="38580" fg:w="19"/><text x="31.3141%" y="559.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (175 samples, 0.14%)</title><rect x="31.2927%" y="421" width="0.1409%" height="15" fill="rgb(231,119,3)" fg:x="38864" fg:w="175"/><text x="31.5427%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (448 samples, 0.36%)</title><rect x="31.0794%" y="549" width="0.3607%" height="15" fill="rgb(216,97,11)" fg:x="38599" fg:w="448"/><text x="31.3294%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (237 samples, 0.19%)</title><rect x="31.2492%" y="533" width="0.1908%" height="15" fill="rgb(223,59,9)" fg:x="38810" fg:w="237"/><text x="31.4992%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (237 samples, 0.19%)</title><rect x="31.2492%" y="517" width="0.1908%" height="15" fill="rgb(233,93,31)" fg:x="38810" fg:w="237"/><text x="31.4992%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (237 samples, 0.19%)</title><rect x="31.2492%" y="501" width="0.1908%" height="15" fill="rgb(239,81,33)" fg:x="38810" fg:w="237"/><text x="31.4992%" y="511.50"></text></g><g><title>alloc::alloc::alloc (231 samples, 0.19%)</title><rect x="31.2541%" y="485" width="0.1860%" height="15" fill="rgb(213,120,34)" fg:x="38816" fg:w="231"/><text x="31.5041%" y="495.50"></text></g><g><title>__rg_alloc (231 samples, 0.19%)</title><rect x="31.2541%" y="469" width="0.1860%" height="15" fill="rgb(243,49,53)" fg:x="38816" fg:w="231"/><text x="31.5041%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (231 samples, 0.19%)</title><rect x="31.2541%" y="453" width="0.1860%" height="15" fill="rgb(247,216,33)" fg:x="38816" fg:w="231"/><text x="31.5041%" y="463.50"></text></g><g><title>sn_rust_alloc (218 samples, 0.18%)</title><rect x="31.2645%" y="437" width="0.1755%" height="15" fill="rgb(226,26,14)" fg:x="38829" fg:w="218"/><text x="31.5145%" y="447.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data (454 samples, 0.37%)</title><rect x="31.0794%" y="565" width="0.3656%" height="15" fill="rgb(215,49,53)" fg:x="38599" fg:w="454"/><text x="31.3294%" y="575.50"></text></g><g><title>[libc-2.31.so] (383 samples, 0.31%)</title><rect x="31.4449%" y="565" width="0.3084%" height="15" fill="rgb(245,162,40)" fg:x="39053" fg:w="383"/><text x="31.6949%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (6,034 samples, 4.86%)</title><rect x="26.9190%" y="581" width="4.8585%" height="15" fill="rgb(229,68,17)" fg:x="33432" fg:w="6034"/><text x="27.1690%" y="591.50">tremor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::should_pull_data (16 samples, 0.01%)</title><rect x="31.7646%" y="565" width="0.0129%" height="15" fill="rgb(213,182,10)" fg:x="39450" fg:w="16"/><text x="32.0146%" y="575.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (37 samples, 0.03%)</title><rect x="32.4119%" y="565" width="0.0298%" height="15" fill="rgb(245,125,30)" fg:x="40254" fg:w="37"/><text x="32.6619%" y="575.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.02%)</title><rect x="32.4417%" y="565" width="0.0242%" height="15" fill="rgb(232,202,2)" fg:x="40291" fg:w="30"/><text x="32.6917%" y="575.50"></text></g><g><title>[libc-2.31.so] (421 samples, 0.34%)</title><rect x="32.4981%" y="549" width="0.3390%" height="15" fill="rgb(237,140,51)" fg:x="40361" fg:w="421"/><text x="32.7481%" y="559.50"></text></g><g><title>[libc-2.31.so] (1,014 samples, 0.82%)</title><rect x="33.0029%" y="533" width="0.8165%" height="15" fill="rgb(236,157,25)" fg:x="40988" fg:w="1014"/><text x="33.2529%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (19 samples, 0.02%)</title><rect x="33.8403%" y="517" width="0.0153%" height="15" fill="rgb(219,209,0)" fg:x="42028" fg:w="19"/><text x="34.0903%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.02%)</title><rect x="33.8403%" y="501" width="0.0153%" height="15" fill="rgb(240,116,54)" fg:x="42028" fg:w="19"/><text x="34.0903%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (512 samples, 0.41%)</title><rect x="33.8194%" y="533" width="0.4123%" height="15" fill="rgb(216,10,36)" fg:x="42002" fg:w="512"/><text x="34.0694%" y="543.50"></text></g><g><title>core::ptr::write (467 samples, 0.38%)</title><rect x="33.8556%" y="517" width="0.3760%" height="15" fill="rgb(222,72,44)" fg:x="42047" fg:w="467"/><text x="34.1056%" y="527.50"></text></g><g><title>[libc-2.31.so] (467 samples, 0.38%)</title><rect x="33.8556%" y="501" width="0.3760%" height="15" fill="rgb(232,159,9)" fg:x="42047" fg:w="467"/><text x="34.1056%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (33 samples, 0.03%)</title><rect x="34.2317%" y="533" width="0.0266%" height="15" fill="rgb(210,39,32)" fg:x="42514" fg:w="33"/><text x="34.4817%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (13 samples, 0.01%)</title><rect x="34.2582%" y="533" width="0.0105%" height="15" fill="rgb(216,194,45)" fg:x="42547" fg:w="13"/><text x="34.5082%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="34.2824%" y="485" width="0.0137%" height="15" fill="rgb(218,18,35)" fg:x="42577" fg:w="17"/><text x="34.5324%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.01%)</title><rect x="34.2824%" y="469" width="0.0137%" height="15" fill="rgb(207,83,51)" fg:x="42577" fg:w="17"/><text x="34.5324%" y="479.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.01%)</title><rect x="34.2824%" y="501" width="0.0145%" height="15" fill="rgb(225,63,43)" fg:x="42577" fg:w="18"/><text x="34.5324%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.01%)</title><rect x="34.3049%" y="501" width="0.0137%" height="15" fill="rgb(207,57,36)" fg:x="42605" fg:w="17"/><text x="34.5549%" y="511.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get (1,262 samples, 1.02%)</title><rect x="34.2687%" y="533" width="1.0161%" height="15" fill="rgb(216,99,33)" fg:x="42560" fg:w="1262"/><text x="34.5187%" y="543.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get (1,245 samples, 1.00%)</title><rect x="34.2824%" y="517" width="1.0025%" height="15" fill="rgb(225,42,16)" fg:x="42577" fg:w="1245"/><text x="34.5324%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,200 samples, 0.97%)</title><rect x="34.3186%" y="501" width="0.9662%" height="15" fill="rgb(220,201,45)" fg:x="42622" fg:w="1200"/><text x="34.5686%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,200 samples, 0.97%)</title><rect x="34.3186%" y="485" width="0.9662%" height="15" fill="rgb(225,33,4)" fg:x="42622" fg:w="1200"/><text x="34.5686%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,200 samples, 0.97%)</title><rect x="34.3186%" y="469" width="0.9662%" height="15" fill="rgb(224,33,50)" fg:x="42622" fg:w="1200"/><text x="34.5686%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,200 samples, 0.97%)</title><rect x="34.3186%" y="453" width="0.9662%" height="15" fill="rgb(246,198,51)" fg:x="42622" fg:w="1200"/><text x="34.5686%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,200 samples, 0.97%)</title><rect x="34.3186%" y="437" width="0.9662%" height="15" fill="rgb(205,22,4)" fg:x="42622" fg:w="1200"/><text x="34.5686%" y="447.50"></text></g><g><title>[libc-2.31.so] (1,188 samples, 0.96%)</title><rect x="34.3283%" y="421" width="0.9566%" height="15" fill="rgb(206,3,8)" fg:x="42634" fg:w="1188"/><text x="34.5783%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (35 samples, 0.03%)</title><rect x="35.3034%" y="517" width="0.0282%" height="15" fill="rgb(251,23,15)" fg:x="43845" fg:w="35"/><text x="35.5534%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse::revswap (17 samples, 0.01%)</title><rect x="35.3178%" y="501" width="0.0137%" height="15" fill="rgb(252,88,28)" fg:x="43863" fg:w="17"/><text x="35.5678%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 0.01%)</title><rect x="35.3178%" y="485" width="0.0137%" height="15" fill="rgb(212,127,14)" fg:x="43863" fg:w="17"/><text x="35.5678%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 0.01%)</title><rect x="35.3178%" y="469" width="0.0137%" height="15" fill="rgb(247,145,37)" fg:x="43863" fg:w="17"/><text x="35.5678%" y="479.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="35.7003%" y="501" width="0.0193%" height="15" fill="rgb(209,117,53)" fg:x="44338" fg:w="24"/><text x="35.9503%" y="511.50"></text></g><g><title>[libc-2.31.so] (342 samples, 0.28%)</title><rect x="35.7196%" y="501" width="0.2754%" height="15" fill="rgb(212,90,42)" fg:x="44362" fg:w="342"/><text x="35.9696%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (905 samples, 0.73%)</title><rect x="35.9950%" y="501" width="0.7287%" height="15" fill="rgb(218,164,37)" fg:x="44704" fg:w="905"/><text x="36.2450%" y="511.50"></text></g><g><title>core::ptr::read (879 samples, 0.71%)</title><rect x="36.0159%" y="485" width="0.7078%" height="15" fill="rgb(246,65,34)" fg:x="44730" fg:w="879"/><text x="36.2659%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (440 samples, 0.35%)</title><rect x="36.7237%" y="501" width="0.3543%" height="15" fill="rgb(231,100,33)" fg:x="45609" fg:w="440"/><text x="36.9737%" y="511.50"></text></g><g><title>core::ptr::write (425 samples, 0.34%)</title><rect x="36.7358%" y="485" width="0.3422%" height="15" fill="rgb(228,126,14)" fg:x="45624" fg:w="425"/><text x="36.9858%" y="495.50"></text></g><g><title>[libc-2.31.so] (422 samples, 0.34%)</title><rect x="36.7382%" y="469" width="0.3398%" height="15" fill="rgb(215,173,21)" fg:x="45627" fg:w="422"/><text x="36.9882%" y="479.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (5,282 samples, 4.25%)</title><rect x="32.8371%" y="549" width="4.2530%" height="15" fill="rgb(210,6,40)" fg:x="40782" fg:w="5282"/><text x="33.0871%" y="559.50">tremo..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (2,242 samples, 1.81%)</title><rect x="35.2848%" y="533" width="1.8052%" height="15" fill="rgb(212,48,18)" fg:x="43822" fg:w="2242"/><text x="35.5348%" y="543.50">t..</text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (2,184 samples, 1.76%)</title><rect x="35.3315%" y="517" width="1.7585%" height="15" fill="rgb(230,214,11)" fg:x="43880" fg:w="2184"/><text x="35.5815%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (15 samples, 0.01%)</title><rect x="37.0780%" y="501" width="0.0121%" height="15" fill="rgb(254,105,39)" fg:x="46049" fg:w="15"/><text x="37.3280%" y="511.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="37.0780%" y="485" width="0.0121%" height="15" fill="rgb(245,158,5)" fg:x="46049" fg:w="15"/><text x="37.3280%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,794 samples, 4.67%)</title><rect x="32.4667%" y="565" width="4.6652%" height="15" fill="rgb(249,208,11)" fg:x="40322" fg:w="5794"/><text x="32.7167%" y="575.50">&lt;core..</text></g><g><title>tremor_runtime::pipeline::handle_insights::{{closure}} (52 samples, 0.04%)</title><rect x="37.0901%" y="549" width="0.0419%" height="15" fill="rgb(210,39,28)" fg:x="46064" fg:w="52"/><text x="37.3401%" y="559.50"></text></g><g><title>[libc-2.31.so] (1,959 samples, 1.58%)</title><rect x="37.1319%" y="565" width="1.5774%" height="15" fill="rgb(211,56,53)" fg:x="46116" fg:w="1959"/><text x="37.3819%" y="575.50"></text></g><g><title>sn_rust_dealloc (149 samples, 0.12%)</title><rect x="38.7222%" y="405" width="0.1200%" height="15" fill="rgb(226,201,30)" fg:x="48091" fg:w="149"/><text x="38.9722%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (173 samples, 0.14%)</title><rect x="38.7109%" y="565" width="0.1393%" height="15" fill="rgb(239,101,34)" fg:x="48077" fg:w="173"/><text x="38.9609%" y="575.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (173 samples, 0.14%)</title><rect x="38.7109%" y="549" width="0.1393%" height="15" fill="rgb(226,209,5)" fg:x="48077" fg:w="173"/><text x="38.9609%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (160 samples, 0.13%)</title><rect x="38.7214%" y="533" width="0.1288%" height="15" fill="rgb(250,105,47)" fg:x="48090" fg:w="160"/><text x="38.9714%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (160 samples, 0.13%)</title><rect x="38.7214%" y="517" width="0.1288%" height="15" fill="rgb(230,72,3)" fg:x="48090" fg:w="160"/><text x="38.9714%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (160 samples, 0.13%)</title><rect x="38.7214%" y="501" width="0.1288%" height="15" fill="rgb(232,218,39)" fg:x="48090" fg:w="160"/><text x="38.9714%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.13%)</title><rect x="38.7214%" y="485" width="0.1288%" height="15" fill="rgb(248,166,6)" fg:x="48090" fg:w="160"/><text x="38.9714%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (160 samples, 0.13%)</title><rect x="38.7214%" y="469" width="0.1288%" height="15" fill="rgb(247,89,20)" fg:x="48090" fg:w="160"/><text x="38.9714%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (160 samples, 0.13%)</title><rect x="38.7214%" y="453" width="0.1288%" height="15" fill="rgb(248,130,54)" fg:x="48090" fg:w="160"/><text x="38.9714%" y="463.50"></text></g><g><title>__rg_dealloc (160 samples, 0.13%)</title><rect x="38.7214%" y="437" width="0.1288%" height="15" fill="rgb(234,196,4)" fg:x="48090" fg:w="160"/><text x="38.9714%" y="447.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (160 samples, 0.13%)</title><rect x="38.7214%" y="421" width="0.1288%" height="15" fill="rgb(250,143,31)" fg:x="48090" fg:w="160"/><text x="38.9714%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}}&gt;&gt; (16 samples, 0.01%)</title><rect x="38.8502%" y="565" width="0.0129%" height="15" fill="rgb(211,110,34)" fg:x="48250" fg:w="16"/><text x="39.1002%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}}&gt; (16 samples, 0.01%)</title><rect x="38.8502%" y="549" width="0.0129%" height="15" fill="rgb(215,124,48)" fg:x="48250" fg:w="16"/><text x="39.1002%" y="559.50"></text></g><g><title>async_global_executor::reactor::block_on (24,544 samples, 19.76%)</title><rect x="19.1103%" y="917" width="19.7625%" height="15" fill="rgb(216,46,13)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="927.50">async_global_executor::reactor:..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (24,544 samples, 19.76%)</title><rect x="19.1103%" y="901" width="19.7625%" height="15" fill="rgb(205,184,25)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="911.50">async_global_executor::reactor:..</text></g><g><title>async_io::driver::block_on (24,544 samples, 19.76%)</title><rect x="19.1103%" y="885" width="19.7625%" height="15" fill="rgb(228,1,10)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="895.50">async_io::driver::block_on</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24,544 samples, 19.76%)</title><rect x="19.1103%" y="869" width="19.7625%" height="15" fill="rgb(213,116,27)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="879.50">&lt;futures_lite::future::Or&lt;F1,F2..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,544 samples, 19.76%)</title><rect x="19.1103%" y="853" width="19.7625%" height="15" fill="rgb(241,95,50)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="863.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::run::{{closure}} (24,544 samples, 19.76%)</title><rect x="19.1103%" y="837" width="19.7625%" height="15" fill="rgb(238,48,32)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="847.50">async_executor::Executor::run::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24,544 samples, 19.76%)</title><rect x="19.1103%" y="821" width="19.7625%" height="15" fill="rgb(235,113,49)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="831.50">&lt;futures_lite::future::Or&lt;F1,F2..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,544 samples, 19.76%)</title><rect x="19.1103%" y="805" width="19.7625%" height="15" fill="rgb(205,127,43)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="815.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (24,544 samples, 19.76%)</title><rect x="19.1103%" y="789" width="19.7625%" height="15" fill="rgb(250,162,2)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="799.50">async_executor::Executor::run::..</text></g><g><title>async_task::runnable::Runnable::run (24,544 samples, 19.76%)</title><rect x="19.1103%" y="773" width="19.7625%" height="15" fill="rgb(220,13,41)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="783.50">async_task::runnable::Runnable:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (24,544 samples, 19.76%)</title><rect x="19.1103%" y="757" width="19.7625%" height="15" fill="rgb(249,221,25)" fg:x="23734" fg:w="24544"/><text x="19.3603%" y="767.50">async_task::raw::RawTask&lt;F,T,S&gt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24,543 samples, 19.76%)</title><rect x="19.1111%" y="741" width="19.7617%" height="15" fill="rgb(215,208,19)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="751.50">&lt;core::pin::Pin&lt;P&gt; as core::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,543 samples, 19.76%)</title><rect x="19.1111%" y="725" width="19.7617%" height="15" fill="rgb(236,175,2)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="735.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (24,543 samples, 19.76%)</title><rect x="19.1111%" y="709" width="19.7617%" height="15" fill="rgb(241,52,2)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="719.50">async_executor::Executor::spawn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (24,543 samples, 19.76%)</title><rect x="19.1111%" y="693" width="19.7617%" height="15" fill="rgb(248,140,14)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="703.50">&lt;async_std::task::builder::Supp..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (24,543 samples, 19.76%)</title><rect x="19.1111%" y="677" width="19.7617%" height="15" fill="rgb(253,22,42)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="687.50">async_std::task::task_locals_wr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24,543 samples, 19.76%)</title><rect x="19.1111%" y="661" width="19.7617%" height="15" fill="rgb(234,61,47)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="671.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,543 samples, 19.76%)</title><rect x="19.1111%" y="645" width="19.7617%" height="15" fill="rgb(208,226,15)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="655.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (24,543 samples, 19.76%)</title><rect x="19.1111%" y="629" width="19.7617%" height="15" fill="rgb(217,221,4)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="639.50">async_std::task::task_locals_wr..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (24,543 samples, 19.76%)</title><rect x="19.1111%" y="613" width="19.7617%" height="15" fill="rgb(212,174,34)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="623.50">&lt;async_std::task::builder::Supp..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,543 samples, 19.76%)</title><rect x="19.1111%" y="597" width="19.7617%" height="15" fill="rgb(253,83,4)" fg:x="23735" fg:w="24543"/><text x="19.3611%" y="607.50">&lt;core::future::from_generator::..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (8,812 samples, 7.10%)</title><rect x="31.7774%" y="581" width="7.0953%" height="15" fill="rgb(250,195,49)" fg:x="39466" fg:w="8812"/><text x="32.0274%" y="591.50">tremor_run..</text></g><g><title>[libc-2.31.so] (858 samples, 0.69%)</title><rect x="39.0298%" y="373" width="0.6908%" height="15" fill="rgb(241,192,25)" fg:x="48473" fg:w="858"/><text x="39.2798%" y="383.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (917 samples, 0.74%)</title><rect x="38.9951%" y="389" width="0.7384%" height="15" fill="rgb(208,124,10)" fg:x="48430" fg:w="917"/><text x="39.2451%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.01%)</title><rect x="39.7206%" y="373" width="0.0129%" height="15" fill="rgb(222,33,0)" fg:x="49331" fg:w="16"/><text x="39.9706%" y="383.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,456 samples, 1.17%)</title><rect x="38.9025%" y="405" width="1.1723%" height="15" fill="rgb(234,209,28)" fg:x="48315" fg:w="1456"/><text x="39.1525%" y="415.50"></text></g><g><title>[libc-2.31.so] (424 samples, 0.34%)</title><rect x="39.7335%" y="389" width="0.3414%" height="15" fill="rgb(224,11,23)" fg:x="49347" fg:w="424"/><text x="39.9835%" y="399.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,507 samples, 1.21%)</title><rect x="38.8727%" y="437" width="1.2134%" height="15" fill="rgb(232,99,1)" fg:x="48278" fg:w="1507"/><text x="39.1227%" y="447.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,507 samples, 1.21%)</title><rect x="38.8727%" y="421" width="1.2134%" height="15" fill="rgb(237,95,45)" fg:x="48278" fg:w="1507"/><text x="39.1227%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (14 samples, 0.01%)</title><rect x="40.0749%" y="405" width="0.0113%" height="15" fill="rgb(208,109,11)" fg:x="49771" fg:w="14"/><text x="40.3249%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="45.0179%" y="389" width="0.0153%" height="15" fill="rgb(216,190,48)" fg:x="55910" fg:w="19"/><text x="45.2679%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.01%)</title><rect x="45.0187%" y="373" width="0.0145%" height="15" fill="rgb(251,171,36)" fg:x="55911" fg:w="18"/><text x="45.2687%" y="383.50"></text></g><g><title>&lt;tremor_pipeline::event::ValueIter as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.04%)</title><rect x="45.0332%" y="389" width="0.0427%" height="15" fill="rgb(230,62,22)" fg:x="55929" fg:w="53"/><text x="45.2832%" y="399.50"></text></g><g><title>[libc-2.31.so] (421 samples, 0.34%)</title><rect x="45.0759%" y="389" width="0.3390%" height="15" fill="rgb(225,114,35)" fg:x="55982" fg:w="421"/><text x="45.3259%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (13 samples, 0.01%)</title><rect x="45.4149%" y="389" width="0.0105%" height="15" fill="rgb(215,118,42)" fg:x="56403" fg:w="13"/><text x="45.6649%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (56 samples, 0.05%)</title><rect x="45.4253%" y="389" width="0.0451%" height="15" fill="rgb(243,119,21)" fg:x="56416" fg:w="56"/><text x="45.6753%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (56 samples, 0.05%)</title><rect x="45.4253%" y="373" width="0.0451%" height="15" fill="rgb(252,177,53)" fg:x="56416" fg:w="56"/><text x="45.6753%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (26 samples, 0.02%)</title><rect x="45.4495%" y="357" width="0.0209%" height="15" fill="rgb(237,209,29)" fg:x="56446" fg:w="26"/><text x="45.6995%" y="367.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}::{{closure}} (26 samples, 0.02%)</title><rect x="45.4495%" y="341" width="0.0209%" height="15" fill="rgb(212,65,23)" fg:x="56446" fg:w="26"/><text x="45.6995%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="45.4712%" y="325" width="0.0258%" height="15" fill="rgb(230,222,46)" fg:x="56473" fg:w="32"/><text x="45.7212%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (49 samples, 0.04%)</title><rect x="45.4704%" y="389" width="0.0395%" height="15" fill="rgb(215,135,32)" fg:x="56472" fg:w="49"/><text x="45.7204%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (49 samples, 0.04%)</title><rect x="45.4704%" y="373" width="0.0395%" height="15" fill="rgb(246,101,22)" fg:x="56472" fg:w="49"/><text x="45.7204%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.04%)</title><rect x="45.4704%" y="357" width="0.0395%" height="15" fill="rgb(206,107,13)" fg:x="56472" fg:w="49"/><text x="45.7204%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (49 samples, 0.04%)</title><rect x="45.4704%" y="341" width="0.0395%" height="15" fill="rgb(250,100,44)" fg:x="56472" fg:w="49"/><text x="45.7204%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16 samples, 0.01%)</title><rect x="45.4970%" y="325" width="0.0129%" height="15" fill="rgb(231,147,38)" fg:x="56505" fg:w="16"/><text x="45.7470%" y="335.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (16 samples, 0.01%)</title><rect x="45.4970%" y="309" width="0.0129%" height="15" fill="rgb(229,8,40)" fg:x="56505" fg:w="16"/><text x="45.7470%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (18 samples, 0.01%)</title><rect x="45.5099%" y="389" width="0.0145%" height="15" fill="rgb(221,135,30)" fg:x="56521" fg:w="18"/><text x="45.7599%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (18 samples, 0.01%)</title><rect x="45.5099%" y="373" width="0.0145%" height="15" fill="rgb(249,193,18)" fg:x="56521" fg:w="18"/><text x="45.7599%" y="383.50"></text></g><g><title>sn_rust_dealloc (160 samples, 0.13%)</title><rect x="45.5679%" y="229" width="0.1288%" height="15" fill="rgb(209,133,39)" fg:x="56593" fg:w="160"/><text x="45.8179%" y="239.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_local_object_slow (54 samples, 0.04%)</title><rect x="45.6967%" y="229" width="0.0435%" height="15" fill="rgb(232,100,14)" fg:x="56753" fg:w="54"/><text x="45.9467%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (269 samples, 0.22%)</title><rect x="45.5244%" y="373" width="0.2166%" height="15" fill="rgb(224,185,1)" fg:x="56539" fg:w="269"/><text x="45.7744%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u8&gt;]&gt; (269 samples, 0.22%)</title><rect x="45.5244%" y="357" width="0.2166%" height="15" fill="rgb(223,139,8)" fg:x="56539" fg:w="269"/><text x="45.7744%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (249 samples, 0.20%)</title><rect x="45.5405%" y="341" width="0.2005%" height="15" fill="rgb(232,213,38)" fg:x="56559" fg:w="249"/><text x="45.7905%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (249 samples, 0.20%)</title><rect x="45.5405%" y="325" width="0.2005%" height="15" fill="rgb(207,94,22)" fg:x="56559" fg:w="249"/><text x="45.7905%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (249 samples, 0.20%)</title><rect x="45.5405%" y="309" width="0.2005%" height="15" fill="rgb(219,183,54)" fg:x="56559" fg:w="249"/><text x="45.7905%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (235 samples, 0.19%)</title><rect x="45.5518%" y="293" width="0.1892%" height="15" fill="rgb(216,185,54)" fg:x="56573" fg:w="235"/><text x="45.8018%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (235 samples, 0.19%)</title><rect x="45.5518%" y="277" width="0.1892%" height="15" fill="rgb(254,217,39)" fg:x="56573" fg:w="235"/><text x="45.8018%" y="287.50"></text></g><g><title>__rg_dealloc (235 samples, 0.19%)</title><rect x="45.5518%" y="261" width="0.1892%" height="15" fill="rgb(240,178,23)" fg:x="56573" fg:w="235"/><text x="45.8018%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (235 samples, 0.19%)</title><rect x="45.5518%" y="245" width="0.1892%" height="15" fill="rgb(218,11,47)" fg:x="56573" fg:w="235"/><text x="45.8018%" y="255.50"></text></g><g><title>sn_rust_dealloc (86 samples, 0.07%)</title><rect x="45.7498%" y="277" width="0.0692%" height="15" fill="rgb(218,51,51)" fg:x="56819" fg:w="86"/><text x="45.9998%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (99 samples, 0.08%)</title><rect x="45.7410%" y="341" width="0.0797%" height="15" fill="rgb(238,126,27)" fg:x="56808" fg:w="99"/><text x="45.9910%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (99 samples, 0.08%)</title><rect x="45.7410%" y="325" width="0.0797%" height="15" fill="rgb(249,202,22)" fg:x="56808" fg:w="99"/><text x="45.9910%" y="335.50"></text></g><g><title>__rg_dealloc (99 samples, 0.08%)</title><rect x="45.7410%" y="309" width="0.0797%" height="15" fill="rgb(254,195,49)" fg:x="56808" fg:w="99"/><text x="45.9910%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (99 samples, 0.08%)</title><rect x="45.7410%" y="293" width="0.0797%" height="15" fill="rgb(208,123,14)" fg:x="56808" fg:w="99"/><text x="45.9910%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (377 samples, 0.30%)</title><rect x="45.5244%" y="389" width="0.3036%" height="15" fill="rgb(224,200,8)" fg:x="56539" fg:w="377"/><text x="45.7744%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (108 samples, 0.09%)</title><rect x="45.7410%" y="373" width="0.0870%" height="15" fill="rgb(217,61,36)" fg:x="56808" fg:w="108"/><text x="45.9910%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.09%)</title><rect x="45.7410%" y="357" width="0.0870%" height="15" fill="rgb(206,35,45)" fg:x="56808" fg:w="108"/><text x="45.9910%" y="367.50"></text></g><g><title>sn_rust_dealloc (210 samples, 0.17%)</title><rect x="45.8690%" y="213" width="0.1691%" height="15" fill="rgb(217,65,33)" fg:x="56967" fg:w="210"/><text x="46.1190%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (280 samples, 0.23%)</title><rect x="45.8448%" y="341" width="0.2255%" height="15" fill="rgb(222,158,48)" fg:x="56937" fg:w="280"/><text x="46.0948%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (280 samples, 0.23%)</title><rect x="45.8448%" y="325" width="0.2255%" height="15" fill="rgb(254,2,54)" fg:x="56937" fg:w="280"/><text x="46.0948%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (280 samples, 0.23%)</title><rect x="45.8448%" y="309" width="0.2255%" height="15" fill="rgb(250,143,38)" fg:x="56937" fg:w="280"/><text x="46.0948%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (280 samples, 0.23%)</title><rect x="45.8448%" y="293" width="0.2255%" height="15" fill="rgb(248,25,0)" fg:x="56937" fg:w="280"/><text x="46.0948%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (250 samples, 0.20%)</title><rect x="45.8690%" y="277" width="0.2013%" height="15" fill="rgb(206,152,27)" fg:x="56967" fg:w="250"/><text x="46.1190%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (250 samples, 0.20%)</title><rect x="45.8690%" y="261" width="0.2013%" height="15" fill="rgb(240,77,30)" fg:x="56967" fg:w="250"/><text x="46.1190%" y="271.50"></text></g><g><title>__rg_dealloc (250 samples, 0.20%)</title><rect x="45.8690%" y="245" width="0.2013%" height="15" fill="rgb(231,5,3)" fg:x="56967" fg:w="250"/><text x="46.1190%" y="255.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (250 samples, 0.20%)</title><rect x="45.8690%" y="229" width="0.2013%" height="15" fill="rgb(207,226,32)" fg:x="56967" fg:w="250"/><text x="46.1190%" y="239.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (40 samples, 0.03%)</title><rect x="46.0381%" y="213" width="0.0322%" height="15" fill="rgb(222,207,47)" fg:x="57177" fg:w="40"/><text x="46.2881%" y="223.50"></text></g><g><title>sn_rust_dealloc (404 samples, 0.33%)</title><rect x="46.9850%" y="165" width="0.3253%" height="15" fill="rgb(229,115,45)" fg:x="58353" fg:w="404"/><text x="47.2350%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (469 samples, 0.38%)</title><rect x="46.9713%" y="229" width="0.3776%" height="15" fill="rgb(224,191,6)" fg:x="58336" fg:w="469"/><text x="47.2213%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (469 samples, 0.38%)</title><rect x="46.9713%" y="213" width="0.3776%" height="15" fill="rgb(230,227,24)" fg:x="58336" fg:w="469"/><text x="47.2213%" y="223.50"></text></g><g><title>__rg_dealloc (469 samples, 0.38%)</title><rect x="46.9713%" y="197" width="0.3776%" height="15" fill="rgb(228,80,19)" fg:x="58336" fg:w="469"/><text x="47.2213%" y="207.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (469 samples, 0.38%)</title><rect x="46.9713%" y="181" width="0.3776%" height="15" fill="rgb(247,229,0)" fg:x="58336" fg:w="469"/><text x="47.2213%" y="191.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (48 samples, 0.04%)</title><rect x="47.3103%" y="165" width="0.0386%" height="15" fill="rgb(237,194,15)" fg:x="58757" fg:w="48"/><text x="47.5603%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,620 samples, 1.30%)</title><rect x="46.0703%" y="325" width="1.3044%" height="15" fill="rgb(219,203,20)" fg:x="57217" fg:w="1620"/><text x="46.3203%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1,600 samples, 1.29%)</title><rect x="46.0864%" y="309" width="1.2883%" height="15" fill="rgb(234,128,8)" fg:x="57237" fg:w="1600"/><text x="46.3364%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,585 samples, 1.28%)</title><rect x="46.0985%" y="293" width="1.2762%" height="15" fill="rgb(248,202,8)" fg:x="57252" fg:w="1585"/><text x="46.3485%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,585 samples, 1.28%)</title><rect x="46.0985%" y="277" width="1.2762%" height="15" fill="rgb(206,104,37)" fg:x="57252" fg:w="1585"/><text x="46.3485%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,585 samples, 1.28%)</title><rect x="46.0985%" y="261" width="1.2762%" height="15" fill="rgb(223,8,27)" fg:x="57252" fg:w="1585"/><text x="46.3485%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,585 samples, 1.28%)</title><rect x="46.0985%" y="245" width="1.2762%" height="15" fill="rgb(216,217,28)" fg:x="57252" fg:w="1585"/><text x="46.3485%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (32 samples, 0.03%)</title><rect x="47.3489%" y="229" width="0.0258%" height="15" fill="rgb(249,199,1)" fg:x="58805" fg:w="32"/><text x="47.5989%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="47.3819%" y="293" width="0.0129%" height="15" fill="rgb(240,85,17)" fg:x="58846" fg:w="16"/><text x="47.6319%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="47.3819%" y="277" width="0.0129%" height="15" fill="rgb(206,108,45)" fg:x="58846" fg:w="16"/><text x="47.6319%" y="287.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="47.3819%" y="261" width="0.0129%" height="15" fill="rgb(245,210,41)" fg:x="58846" fg:w="16"/><text x="47.6319%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="47.3819%" y="245" width="0.0129%" height="15" fill="rgb(206,13,37)" fg:x="58846" fg:w="16"/><text x="47.6319%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (1,926 samples, 1.55%)</title><rect x="45.8448%" y="357" width="1.5508%" height="15" fill="rgb(250,61,18)" fg:x="56937" fg:w="1926"/><text x="46.0948%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1,646 samples, 1.33%)</title><rect x="46.0703%" y="341" width="1.3253%" height="15" fill="rgb(235,172,48)" fg:x="57217" fg:w="1646"/><text x="46.3203%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (26 samples, 0.02%)</title><rect x="47.3747%" y="325" width="0.0209%" height="15" fill="rgb(249,201,17)" fg:x="58837" fg:w="26"/><text x="47.6247%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="47.3747%" y="309" width="0.0209%" height="15" fill="rgb(219,208,6)" fg:x="58837" fg:w="26"/><text x="47.6247%" y="319.50"></text></g><g><title>sn_rust_dealloc (144 samples, 0.12%)</title><rect x="47.3956%" y="357" width="0.1159%" height="15" fill="rgb(248,31,23)" fg:x="58863" fg:w="144"/><text x="47.6456%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_script::ctx::EventOriginUri&gt;&gt; (2,118 samples, 1.71%)</title><rect x="45.8295%" y="373" width="1.7054%" height="15" fill="rgb(245,15,42)" fg:x="56918" fg:w="2118"/><text x="46.0795%" y="383.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (29 samples, 0.02%)</title><rect x="47.5116%" y="357" width="0.0234%" height="15" fill="rgb(222,217,39)" fg:x="59007" fg:w="29"/><text x="47.7616%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (13 samples, 0.01%)</title><rect x="47.5349%" y="373" width="0.0105%" height="15" fill="rgb(210,219,27)" fg:x="59036" fg:w="13"/><text x="47.7849%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="47.5349%" y="357" width="0.0105%" height="15" fill="rgb(252,166,36)" fg:x="59036" fg:w="13"/><text x="47.7849%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (13 samples, 0.01%)</title><rect x="47.5349%" y="341" width="0.0105%" height="15" fill="rgb(245,132,34)" fg:x="59036" fg:w="13"/><text x="47.7849%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="47.5349%" y="325" width="0.0105%" height="15" fill="rgb(236,54,3)" fg:x="59036" fg:w="13"/><text x="47.7849%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="47.5349%" y="309" width="0.0105%" height="15" fill="rgb(241,173,43)" fg:x="59036" fg:w="13"/><text x="47.7849%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.03%)</title><rect x="48.2757%" y="213" width="0.0266%" height="15" fill="rgb(215,190,9)" fg:x="59956" fg:w="33"/><text x="48.5257%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.03%)</title><rect x="48.2757%" y="197" width="0.0266%" height="15" fill="rgb(242,101,16)" fg:x="59956" fg:w="33"/><text x="48.5257%" y="207.50"></text></g><g><title>__rg_dealloc (33 samples, 0.03%)</title><rect x="48.2757%" y="181" width="0.0266%" height="15" fill="rgb(223,190,21)" fg:x="59956" fg:w="33"/><text x="48.5257%" y="191.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (33 samples, 0.03%)</title><rect x="48.2757%" y="165" width="0.0266%" height="15" fill="rgb(215,228,25)" fg:x="59956" fg:w="33"/><text x="48.5257%" y="175.50"></text></g><g><title>core::mem::drop (1,503 samples, 1.21%)</title><rect x="48.2749%" y="261" width="1.2102%" height="15" fill="rgb(225,36,22)" fg:x="59955" fg:w="1503"/><text x="48.5249%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;alloc::string::String&gt;&gt; (1,503 samples, 1.21%)</title><rect x="48.2749%" y="245" width="1.2102%" height="15" fill="rgb(251,106,46)" fg:x="59955" fg:w="1503"/><text x="48.5249%" y="255.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,503 samples, 1.21%)</title><rect x="48.2749%" y="229" width="1.2102%" height="15" fill="rgb(208,90,1)" fg:x="59955" fg:w="1503"/><text x="48.5249%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,461 samples, 1.18%)</title><rect x="48.3087%" y="213" width="1.1764%" height="15" fill="rgb(243,10,4)" fg:x="59997" fg:w="1461"/><text x="48.5587%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,461 samples, 1.18%)</title><rect x="48.3087%" y="197" width="1.1764%" height="15" fill="rgb(212,137,27)" fg:x="59997" fg:w="1461"/><text x="48.5587%" y="207.50"></text></g><g><title>sn_rust_dealloc (230 samples, 0.19%)</title><rect x="49.5245%" y="133" width="0.1852%" height="15" fill="rgb(231,220,49)" fg:x="61507" fg:w="230"/><text x="49.7745%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (867 samples, 0.70%)</title><rect x="49.5245%" y="197" width="0.6981%" height="15" fill="rgb(237,96,20)" fg:x="61507" fg:w="867"/><text x="49.7745%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (867 samples, 0.70%)</title><rect x="49.5245%" y="181" width="0.6981%" height="15" fill="rgb(239,229,30)" fg:x="61507" fg:w="867"/><text x="49.7745%" y="191.50"></text></g><g><title>__rg_dealloc (867 samples, 0.70%)</title><rect x="49.5245%" y="165" width="0.6981%" height="15" fill="rgb(219,65,33)" fg:x="61507" fg:w="867"/><text x="49.7745%" y="175.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (867 samples, 0.70%)</title><rect x="49.5245%" y="149" width="0.6981%" height="15" fill="rgb(243,134,7)" fg:x="61507" fg:w="867"/><text x="49.7745%" y="159.50"></text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (637 samples, 0.51%)</title><rect x="49.7097%" y="133" width="0.5129%" height="15" fill="rgb(216,177,54)" fg:x="61737" fg:w="637"/><text x="49.9597%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2,429 samples, 1.96%)</title><rect x="48.2684%" y="277" width="1.9558%" height="15" fill="rgb(211,160,20)" fg:x="59947" fg:w="2429"/><text x="48.5184%" y="287.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (918 samples, 0.74%)</title><rect x="49.4851%" y="261" width="0.7392%" height="15" fill="rgb(239,85,39)" fg:x="61458" fg:w="918"/><text x="49.7351%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (918 samples, 0.74%)</title><rect x="49.4851%" y="245" width="0.7392%" height="15" fill="rgb(232,125,22)" fg:x="61458" fg:w="918"/><text x="49.7351%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (918 samples, 0.74%)</title><rect x="49.4851%" y="229" width="0.7392%" height="15" fill="rgb(244,57,34)" fg:x="61458" fg:w="918"/><text x="49.7351%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (918 samples, 0.74%)</title><rect x="49.4851%" y="213" width="0.7392%" height="15" fill="rgb(214,203,32)" fg:x="61458" fg:w="918"/><text x="49.7351%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,881 samples, 1.51%)</title><rect x="50.2242%" y="277" width="1.5146%" height="15" fill="rgb(207,58,43)" fg:x="62376" fg:w="1881"/><text x="50.4742%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,881 samples, 1.51%)</title><rect x="50.2242%" y="261" width="1.5146%" height="15" fill="rgb(215,193,15)" fg:x="62376" fg:w="1881"/><text x="50.4742%" y="271.50"></text></g><g><title>sn_rust_dealloc (128 samples, 0.10%)</title><rect x="51.7388%" y="277" width="0.1031%" height="15" fill="rgb(232,15,44)" fg:x="64257" fg:w="128"/><text x="51.9888%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,378 samples, 4.33%)</title><rect x="47.5486%" y="341" width="4.3303%" height="15" fill="rgb(212,3,48)" fg:x="59053" fg:w="5378"/><text x="47.7986%" y="351.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;]&gt; (5,378 samples, 4.33%)</title><rect x="47.5486%" y="325" width="4.3303%" height="15" fill="rgb(218,128,7)" fg:x="59053" fg:w="5378"/><text x="47.7986%" y="335.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (5,347 samples, 4.31%)</title><rect x="47.5736%" y="309" width="4.3053%" height="15" fill="rgb(226,216,39)" fg:x="59084" fg:w="5347"/><text x="47.8236%" y="319.50">core:..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,347 samples, 4.31%)</title><rect x="47.5736%" y="293" width="4.3053%" height="15" fill="rgb(243,47,51)" fg:x="59084" fg:w="5347"/><text x="47.8236%" y="303.50">&lt;allo..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (46 samples, 0.04%)</title><rect x="51.8419%" y="277" width="0.0370%" height="15" fill="rgb(241,183,40)" fg:x="64385" fg:w="46"/><text x="52.0919%" y="287.50"></text></g><g><title>sn_rust_dealloc (125 samples, 0.10%)</title><rect x="51.9087%" y="245" width="0.1006%" height="15" fill="rgb(231,217,32)" fg:x="64468" fg:w="125"/><text x="52.1587%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (150 samples, 0.12%)</title><rect x="51.8918%" y="309" width="0.1208%" height="15" fill="rgb(229,61,38)" fg:x="64447" fg:w="150"/><text x="52.1418%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (150 samples, 0.12%)</title><rect x="51.8918%" y="293" width="0.1208%" height="15" fill="rgb(225,210,5)" fg:x="64447" fg:w="150"/><text x="52.1418%" y="303.50"></text></g><g><title>__rg_dealloc (150 samples, 0.12%)</title><rect x="51.8918%" y="277" width="0.1208%" height="15" fill="rgb(231,79,45)" fg:x="64447" fg:w="150"/><text x="52.1418%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (150 samples, 0.12%)</title><rect x="51.8918%" y="261" width="0.1208%" height="15" fill="rgb(224,100,7)" fg:x="64447" fg:w="150"/><text x="52.1418%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (5,545 samples, 4.46%)</title><rect x="47.5486%" y="357" width="4.4648%" height="15" fill="rgb(241,198,18)" fg:x="59053" fg:w="5545"/><text x="47.7986%" y="367.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;core::pin::Pin&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (167 samples, 0.13%)</title><rect x="51.8789%" y="341" width="0.1345%" height="15" fill="rgb(252,97,53)" fg:x="64431" fg:w="167"/><text x="52.1289%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.13%)</title><rect x="51.8789%" y="325" width="0.1345%" height="15" fill="rgb(220,88,7)" fg:x="64431" fg:w="167"/><text x="52.1289%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (5,587 samples, 4.50%)</title><rect x="47.5486%" y="373" width="4.4986%" height="15" fill="rgb(213,176,14)" fg:x="59053" fg:w="5587"/><text x="47.7986%" y="383.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (42 samples, 0.03%)</title><rect x="52.0134%" y="357" width="0.0338%" height="15" fill="rgb(246,73,7)" fg:x="64598" fg:w="42"/><text x="52.2634%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (28 samples, 0.02%)</title><rect x="52.0246%" y="341" width="0.0225%" height="15" fill="rgb(245,64,36)" fg:x="64612" fg:w="28"/><text x="52.2746%" y="351.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.01%)</title><rect x="52.0979%" y="341" width="0.0145%" height="15" fill="rgb(245,80,10)" fg:x="64703" fg:w="18"/><text x="52.3479%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.01%)</title><rect x="52.0979%" y="325" width="0.0145%" height="15" fill="rgb(232,107,50)" fg:x="64703" fg:w="18"/><text x="52.3479%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.01%)</title><rect x="52.0979%" y="309" width="0.0145%" height="15" fill="rgb(253,3,0)" fg:x="64703" fg:w="18"/><text x="52.3479%" y="319.50"></text></g><g><title>__rg_dealloc (18 samples, 0.01%)</title><rect x="52.0979%" y="293" width="0.0145%" height="15" fill="rgb(212,99,53)" fg:x="64703" fg:w="18"/><text x="52.3479%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (18 samples, 0.01%)</title><rect x="52.0979%" y="277" width="0.0145%" height="15" fill="rgb(249,111,54)" fg:x="64703" fg:w="18"/><text x="52.3479%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.03%)</title><rect x="52.1768%" y="277" width="0.0314%" height="15" fill="rgb(249,55,30)" fg:x="64801" fg:w="39"/><text x="52.4268%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)]&gt; (37 samples, 0.03%)</title><rect x="52.1784%" y="261" width="0.0298%" height="15" fill="rgb(237,47,42)" fg:x="64803" fg:w="37"/><text x="52.4284%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_value::value::Value&gt; (219 samples, 0.18%)</title><rect x="52.0472%" y="373" width="0.1763%" height="15" fill="rgb(211,20,18)" fg:x="64640" fg:w="219"/><text x="52.2972%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt;&gt; (159 samples, 0.13%)</title><rect x="52.0955%" y="357" width="0.1280%" height="15" fill="rgb(231,203,46)" fg:x="64700" fg:w="159"/><text x="52.3455%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (138 samples, 0.11%)</title><rect x="52.1124%" y="341" width="0.1111%" height="15" fill="rgb(237,142,3)" fg:x="64721" fg:w="138"/><text x="52.3624%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (138 samples, 0.11%)</title><rect x="52.1124%" y="325" width="0.1111%" height="15" fill="rgb(241,107,1)" fg:x="64721" fg:w="138"/><text x="52.3624%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::vecmap::VecMap&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (58 samples, 0.05%)</title><rect x="52.1768%" y="309" width="0.0467%" height="15" fill="rgb(229,83,13)" fg:x="64801" fg:w="58"/><text x="52.4268%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (58 samples, 0.05%)</title><rect x="52.1768%" y="293" width="0.0467%" height="15" fill="rgb(241,91,40)" fg:x="64801" fg:w="58"/><text x="52.4268%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value)&gt;&gt; (19 samples, 0.02%)</title><rect x="52.2082%" y="277" width="0.0153%" height="15" fill="rgb(225,3,45)" fg:x="64840" fg:w="19"/><text x="52.4582%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="52.2082%" y="261" width="0.0153%" height="15" fill="rgb(244,223,14)" fg:x="64840" fg:w="19"/><text x="52.4582%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.01%)</title><rect x="52.2090%" y="245" width="0.0145%" height="15" fill="rgb(224,124,37)" fg:x="64841" fg:w="18"/><text x="52.4590%" y="255.50"></text></g><g><title>sn_rust_dealloc (119 samples, 0.10%)</title><rect x="52.2235%" y="373" width="0.0958%" height="15" fill="rgb(251,171,30)" fg:x="64859" fg:w="119"/><text x="52.4735%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (8,090 samples, 6.51%)</title><rect x="45.8279%" y="389" width="6.5139%" height="15" fill="rgb(236,46,54)" fg:x="56916" fg:w="8090"/><text x="46.0779%" y="399.50">core::ptr..</text></g><g><title>snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::dealloc_remote_slow (28 samples, 0.02%)</title><rect x="52.3193%" y="373" width="0.0225%" height="15" fill="rgb(245,213,5)" fg:x="64978" fg:w="28"/><text x="52.5693%" y="383.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (15 samples, 0.01%)</title><rect x="52.4498%" y="341" width="0.0121%" height="15" fill="rgb(230,144,27)" fg:x="65140" fg:w="15"/><text x="52.6998%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (15 samples, 0.01%)</title><rect x="52.4498%" y="325" width="0.0121%" height="15" fill="rgb(220,86,6)" fg:x="65140" fg:w="15"/><text x="52.6998%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (14 samples, 0.01%)</title><rect x="52.5174%" y="309" width="0.0113%" height="15" fill="rgb(240,20,13)" fg:x="65224" fg:w="14"/><text x="52.7674%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (14 samples, 0.01%)</title><rect x="52.5174%" y="293" width="0.0113%" height="15" fill="rgb(217,89,34)" fg:x="65224" fg:w="14"/><text x="52.7674%" y="303.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (80 samples, 0.06%)</title><rect x="52.4699%" y="341" width="0.0644%" height="15" fill="rgb(229,13,5)" fg:x="65165" fg:w="80"/><text x="52.7199%" y="351.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (69 samples, 0.06%)</title><rect x="52.4788%" y="325" width="0.0556%" height="15" fill="rgb(244,67,35)" fg:x="65176" fg:w="69"/><text x="52.7288%" y="335.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (248 samples, 0.20%)</title><rect x="52.3507%" y="389" width="0.1997%" height="15" fill="rgb(221,40,2)" fg:x="65017" fg:w="248"/><text x="52.6007%" y="399.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (245 samples, 0.20%)</title><rect x="52.3532%" y="373" width="0.1973%" height="15" fill="rgb(237,157,21)" fg:x="65020" fg:w="245"/><text x="52.6032%" y="383.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (245 samples, 0.20%)</title><rect x="52.3532%" y="357" width="0.1973%" height="15" fill="rgb(222,94,11)" fg:x="65020" fg:w="245"/><text x="52.6032%" y="367.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::update_min_max (20 samples, 0.02%)</title><rect x="52.5343%" y="341" width="0.0161%" height="15" fill="rgb(249,113,6)" fg:x="65245" fg:w="20"/><text x="52.7843%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (55 samples, 0.04%)</title><rect x="52.5875%" y="373" width="0.0443%" height="15" fill="rgb(238,137,36)" fg:x="65311" fg:w="55"/><text x="52.8375%" y="383.50"></text></g><g><title>core::time::Duration::as_nanos (71 samples, 0.06%)</title><rect x="52.6317%" y="373" width="0.0572%" height="15" fill="rgb(210,102,26)" fg:x="65366" fg:w="71"/><text x="52.8817%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (226 samples, 0.18%)</title><rect x="52.6889%" y="357" width="0.1820%" height="15" fill="rgb(218,30,30)" fg:x="65437" fg:w="226"/><text x="52.9389%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (84 samples, 0.07%)</title><rect x="52.9345%" y="325" width="0.0676%" height="15" fill="rgb(214,67,26)" fg:x="65742" fg:w="84"/><text x="53.1845%" y="335.50"></text></g><g><title>core::cmp::PartialOrd::ge (84 samples, 0.07%)</title><rect x="52.9345%" y="309" width="0.0676%" height="15" fill="rgb(251,9,53)" fg:x="65742" fg:w="84"/><text x="53.1845%" y="319.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (79 samples, 0.06%)</title><rect x="52.9385%" y="293" width="0.0636%" height="15" fill="rgb(228,204,25)" fg:x="65747" fg:w="79"/><text x="53.1885%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (40 samples, 0.03%)</title><rect x="52.9699%" y="277" width="0.0322%" height="15" fill="rgb(207,153,8)" fg:x="65786" fg:w="40"/><text x="53.2199%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (40 samples, 0.03%)</title><rect x="52.9699%" y="261" width="0.0322%" height="15" fill="rgb(242,9,16)" fg:x="65786" fg:w="40"/><text x="53.2199%" y="271.50"></text></g><g><title>std::time::SystemTime::duration_since (438 samples, 0.35%)</title><rect x="52.6889%" y="373" width="0.3527%" height="15" fill="rgb(217,211,10)" fg:x="65437" fg:w="438"/><text x="52.9389%" y="383.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (212 samples, 0.17%)</title><rect x="52.8709%" y="357" width="0.1707%" height="15" fill="rgb(219,228,52)" fg:x="65663" fg:w="212"/><text x="53.1209%" y="367.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (212 samples, 0.17%)</title><rect x="52.8709%" y="341" width="0.1707%" height="15" fill="rgb(231,92,29)" fg:x="65663" fg:w="212"/><text x="53.1209%" y="351.50"></text></g><g><title>core::time::Duration::new (49 samples, 0.04%)</title><rect x="53.0021%" y="325" width="0.0395%" height="15" fill="rgb(232,8,23)" fg:x="65826" fg:w="49"/><text x="53.2521%" y="335.50"></text></g><g><title>tremor_common::time::nanotime (1,613 samples, 1.30%)</title><rect x="52.5504%" y="389" width="1.2988%" height="15" fill="rgb(216,211,34)" fg:x="65265" fg:w="1613"/><text x="52.8004%" y="399.50"></text></g><g><title>std::time::SystemTime::now (1,003 samples, 0.81%)</title><rect x="53.0416%" y="373" width="0.8076%" height="15" fill="rgb(236,151,0)" fg:x="65875" fg:w="1003"/><text x="53.2916%" y="383.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (1,003 samples, 0.81%)</title><rect x="53.0416%" y="357" width="0.8076%" height="15" fill="rgb(209,168,3)" fg:x="65875" fg:w="1003"/><text x="53.2916%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1,003 samples, 0.81%)</title><rect x="53.0416%" y="341" width="0.8076%" height="15" fill="rgb(208,129,28)" fg:x="65875" fg:w="1003"/><text x="53.2916%" y="351.50"></text></g><g><title>__clock_gettime (797 samples, 0.64%)</title><rect x="53.2075%" y="325" width="0.6417%" height="15" fill="rgb(229,78,22)" fg:x="66081" fg:w="797"/><text x="53.4575%" y="335.50"></text></g><g><title>__vdso_clock_gettime (771 samples, 0.62%)</title><rect x="53.2284%" y="309" width="0.6208%" height="15" fill="rgb(228,187,13)" fg:x="66107" fg:w="771"/><text x="53.4784%" y="319.50"></text></g><g><title>[[vdso]] (673 samples, 0.54%)</title><rect x="53.3073%" y="293" width="0.5419%" height="15" fill="rgb(240,119,24)" fg:x="66205" fg:w="673"/><text x="53.5573%" y="303.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (18,617 samples, 14.99%)</title><rect x="38.8727%" y="453" width="14.9901%" height="15" fill="rgb(209,194,42)" fg:x="48278" fg:w="18617"/><text x="39.1227%" y="463.50">tremor_runtime::connect..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17,110 samples, 13.78%)</title><rect x="40.0862%" y="437" width="13.7767%" height="15" fill="rgb(247,200,46)" fg:x="49785" fg:w="17110"/><text x="40.3362%" y="447.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,110 samples, 13.78%)</title><rect x="40.0862%" y="421" width="13.7767%" height="15" fill="rgb(218,76,16)" fg:x="49785" fg:w="17110"/><text x="40.3362%" y="431.50">&lt;core::future::from_g..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (11,487 samples, 9.25%)</title><rect x="44.6137%" y="405" width="9.2492%" height="15" fill="rgb(225,21,48)" fg:x="55408" fg:w="11487"/><text x="44.8637%" y="415.50">&lt;tremor_runti..</text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (17 samples, 0.01%)</title><rect x="53.8492%" y="389" width="0.0137%" height="15" fill="rgb(239,223,50)" fg:x="66878" fg:w="17"/><text x="54.0992%" y="399.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (17 samples, 0.01%)</title><rect x="53.8492%" y="373" width="0.0137%" height="15" fill="rgb(244,45,21)" fg:x="66878" fg:w="17"/><text x="54.0992%" y="383.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (18,627 samples, 15.00%)</title><rect x="38.8727%" y="917" width="14.9982%" height="15" fill="rgb(232,33,43)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="927.50">async_global_executor::..</text></g><g><title>std::panic::catch_unwind (18,627 samples, 15.00%)</title><rect x="38.8727%" y="901" width="14.9982%" height="15" fill="rgb(209,8,3)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18,627 samples, 15.00%)</title><rect x="38.8727%" y="885" width="14.9982%" height="15" fill="rgb(214,25,53)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18,627 samples, 15.00%)</title><rect x="38.8727%" y="869" width="14.9982%" height="15" fill="rgb(254,186,54)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="879.50">std::panicking::try::do..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (18,627 samples, 15.00%)</title><rect x="38.8727%" y="853" width="14.9982%" height="15" fill="rgb(208,174,49)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="863.50">async_global_executor::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,627 samples, 15.00%)</title><rect x="38.8727%" y="837" width="14.9982%" height="15" fill="rgb(233,191,51)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="847.50">std::thread::local::Loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,627 samples, 15.00%)</title><rect x="38.8727%" y="821" width="14.9982%" height="15" fill="rgb(222,134,10)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="831.50">std::thread::local::Loc..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (18,627 samples, 15.00%)</title><rect x="38.8727%" y="805" width="14.9982%" height="15" fill="rgb(230,226,20)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="815.50">async_global_executor::..</text></g><g><title>async_global_executor::reactor::block_on (18,627 samples, 15.00%)</title><rect x="38.8727%" y="789" width="14.9982%" height="15" fill="rgb(251,111,25)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="799.50">async_global_executor::..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (18,627 samples, 15.00%)</title><rect x="38.8727%" y="773" width="14.9982%" height="15" fill="rgb(224,40,46)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="783.50">async_global_executor::..</text></g><g><title>async_io::driver::block_on (18,627 samples, 15.00%)</title><rect x="38.8727%" y="757" width="14.9982%" height="15" fill="rgb(236,108,47)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="767.50">async_io::driver::block..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,627 samples, 15.00%)</title><rect x="38.8727%" y="741" width="14.9982%" height="15" fill="rgb(234,93,0)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="751.50">&lt;futures_lite::future::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,627 samples, 15.00%)</title><rect x="38.8727%" y="725" width="14.9982%" height="15" fill="rgb(224,213,32)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="735.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::run::{{closure}} (18,627 samples, 15.00%)</title><rect x="38.8727%" y="709" width="14.9982%" height="15" fill="rgb(251,11,48)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="719.50">async_executor::Executo..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,627 samples, 15.00%)</title><rect x="38.8727%" y="693" width="14.9982%" height="15" fill="rgb(236,173,5)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="703.50">&lt;futures_lite::future::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,627 samples, 15.00%)</title><rect x="38.8727%" y="677" width="14.9982%" height="15" fill="rgb(230,95,12)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="687.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (18,627 samples, 15.00%)</title><rect x="38.8727%" y="661" width="14.9982%" height="15" fill="rgb(232,209,1)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="671.50">async_executor::Executo..</text></g><g><title>async_task::runnable::Runnable::run (18,627 samples, 15.00%)</title><rect x="38.8727%" y="645" width="14.9982%" height="15" fill="rgb(232,6,1)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="655.50">async_task::runnable::R..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (18,627 samples, 15.00%)</title><rect x="38.8727%" y="629" width="14.9982%" height="15" fill="rgb(210,224,50)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="639.50">async_task::raw::RawTas..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18,627 samples, 15.00%)</title><rect x="38.8727%" y="613" width="14.9982%" height="15" fill="rgb(228,127,35)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="623.50">&lt;core::pin::Pin&lt;P&gt; as c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,627 samples, 15.00%)</title><rect x="38.8727%" y="597" width="14.9982%" height="15" fill="rgb(245,102,45)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="607.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (18,627 samples, 15.00%)</title><rect x="38.8727%" y="581" width="14.9982%" height="15" fill="rgb(214,1,49)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="591.50">async_executor::Executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (18,627 samples, 15.00%)</title><rect x="38.8727%" y="565" width="14.9982%" height="15" fill="rgb(226,163,40)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="575.50">&lt;async_std::task::build..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (18,627 samples, 15.00%)</title><rect x="38.8727%" y="549" width="14.9982%" height="15" fill="rgb(239,212,28)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="559.50">async_std::task::task_l..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18,627 samples, 15.00%)</title><rect x="38.8727%" y="533" width="14.9982%" height="15" fill="rgb(220,20,13)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="543.50">std::thread::local::Loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,627 samples, 15.00%)</title><rect x="38.8727%" y="517" width="14.9982%" height="15" fill="rgb(210,164,35)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="527.50">std::thread::local::Loc..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (18,627 samples, 15.00%)</title><rect x="38.8727%" y="501" width="14.9982%" height="15" fill="rgb(248,109,41)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="511.50">async_std::task::task_l..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (18,627 samples, 15.00%)</title><rect x="38.8727%" y="485" width="14.9982%" height="15" fill="rgb(238,23,50)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="495.50">&lt;async_std::task::build..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,627 samples, 15.00%)</title><rect x="38.8727%" y="469" width="14.9982%" height="15" fill="rgb(211,48,49)" fg:x="48278" fg:w="18627"/><text x="39.1227%" y="479.50">&lt;core::future::from_gen..</text></g><g><title>alloc::alloc::exchange_malloc (77 samples, 0.06%)</title><rect x="53.9418%" y="485" width="0.0620%" height="15" fill="rgb(223,36,21)" fg:x="66993" fg:w="77"/><text x="54.1918%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.06%)</title><rect x="53.9418%" y="469" width="0.0620%" height="15" fill="rgb(207,123,46)" fg:x="66993" fg:w="77"/><text x="54.1918%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.06%)</title><rect x="53.9418%" y="453" width="0.0620%" height="15" fill="rgb(240,218,32)" fg:x="66993" fg:w="77"/><text x="54.1918%" y="463.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.05%)</title><rect x="53.9506%" y="437" width="0.0531%" height="15" fill="rgb(252,5,43)" fg:x="67004" fg:w="66"/><text x="54.2006%" y="447.50"></text></g><g><title>__rg_alloc (66 samples, 0.05%)</title><rect x="53.9506%" y="421" width="0.0531%" height="15" fill="rgb(252,84,19)" fg:x="67004" fg:w="66"/><text x="54.2006%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (66 samples, 0.05%)</title><rect x="53.9506%" y="405" width="0.0531%" height="15" fill="rgb(243,152,39)" fg:x="67004" fg:w="66"/><text x="54.2006%" y="415.50"></text></g><g><title>sn_rust_alloc (66 samples, 0.05%)</title><rect x="53.9506%" y="389" width="0.0531%" height="15" fill="rgb(234,160,15)" fg:x="67004" fg:w="66"/><text x="54.2006%" y="399.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (16 samples, 0.01%)</title><rect x="54.0199%" y="485" width="0.0129%" height="15" fill="rgb(237,34,20)" fg:x="67090" fg:w="16"/><text x="54.2699%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (16 samples, 0.01%)</title><rect x="54.0199%" y="469" width="0.0129%" height="15" fill="rgb(229,97,13)" fg:x="67090" fg:w="16"/><text x="54.2699%" y="479.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (16 samples, 0.01%)</title><rect x="54.0199%" y="453" width="0.0129%" height="15" fill="rgb(234,71,50)" fg:x="67090" fg:w="16"/><text x="54.2699%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (16 samples, 0.01%)</title><rect x="54.0199%" y="437" width="0.0129%" height="15" fill="rgb(253,155,4)" fg:x="67090" fg:w="16"/><text x="54.2699%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.01%)</title><rect x="54.0199%" y="421" width="0.0129%" height="15" fill="rgb(222,185,37)" fg:x="67090" fg:w="16"/><text x="54.2699%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (45 samples, 0.04%)</title><rect x="54.0601%" y="469" width="0.0362%" height="15" fill="rgb(251,177,13)" fg:x="67140" fg:w="45"/><text x="54.3101%" y="479.50"></text></g><g><title>core::time::Duration::as_nanos (49 samples, 0.04%)</title><rect x="54.0964%" y="469" width="0.0395%" height="15" fill="rgb(250,179,40)" fg:x="67185" fg:w="49"/><text x="54.3464%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (187 samples, 0.15%)</title><rect x="54.1358%" y="453" width="0.1506%" height="15" fill="rgb(242,44,2)" fg:x="67234" fg:w="187"/><text x="54.3858%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (73 samples, 0.06%)</title><rect x="54.3371%" y="421" width="0.0588%" height="15" fill="rgb(216,177,13)" fg:x="67484" fg:w="73"/><text x="54.5871%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::ge (73 samples, 0.06%)</title><rect x="54.3371%" y="405" width="0.0588%" height="15" fill="rgb(216,106,43)" fg:x="67484" fg:w="73"/><text x="54.5871%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (73 samples, 0.06%)</title><rect x="54.3371%" y="389" width="0.0588%" height="15" fill="rgb(216,183,2)" fg:x="67484" fg:w="73"/><text x="54.5871%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (46 samples, 0.04%)</title><rect x="54.3589%" y="373" width="0.0370%" height="15" fill="rgb(249,75,3)" fg:x="67511" fg:w="46"/><text x="54.6089%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (46 samples, 0.04%)</title><rect x="54.3589%" y="357" width="0.0370%" height="15" fill="rgb(219,67,39)" fg:x="67511" fg:w="46"/><text x="54.6089%" y="367.50"></text></g><g><title>std::time::SystemTime::duration_since (359 samples, 0.29%)</title><rect x="54.1358%" y="469" width="0.2891%" height="15" fill="rgb(253,228,2)" fg:x="67234" fg:w="359"/><text x="54.3858%" y="479.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (172 samples, 0.14%)</title><rect x="54.2864%" y="453" width="0.1385%" height="15" fill="rgb(235,138,27)" fg:x="67421" fg:w="172"/><text x="54.5364%" y="463.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (172 samples, 0.14%)</title><rect x="54.2864%" y="437" width="0.1385%" height="15" fill="rgb(236,97,51)" fg:x="67421" fg:w="172"/><text x="54.5364%" y="447.50"></text></g><g><title>core::time::Duration::new (36 samples, 0.03%)</title><rect x="54.3959%" y="421" width="0.0290%" height="15" fill="rgb(240,80,30)" fg:x="67557" fg:w="36"/><text x="54.6459%" y="431.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (1,518 samples, 1.22%)</title><rect x="53.8709%" y="613" width="1.2223%" height="15" fill="rgb(230,178,19)" fg:x="66905" fg:w="1518"/><text x="54.1209%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,518 samples, 1.22%)</title><rect x="53.8709%" y="597" width="1.2223%" height="15" fill="rgb(210,190,27)" fg:x="66905" fg:w="1518"/><text x="54.1209%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,518 samples, 1.22%)</title><rect x="53.8709%" y="581" width="1.2223%" height="15" fill="rgb(222,107,31)" fg:x="66905" fg:w="1518"/><text x="54.1209%" y="591.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}} (1,518 samples, 1.22%)</title><rect x="53.8709%" y="565" width="1.2223%" height="15" fill="rgb(216,127,34)" fg:x="66905" fg:w="1518"/><text x="54.1209%" y="575.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize (1,518 samples, 1.22%)</title><rect x="53.8709%" y="549" width="1.2223%" height="15" fill="rgb(234,116,52)" fg:x="66905" fg:w="1518"/><text x="54.1209%" y="559.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream (1,518 samples, 1.22%)</title><rect x="53.8709%" y="533" width="1.2223%" height="15" fill="rgb(222,124,15)" fg:x="66905" fg:w="1518"/><text x="54.1209%" y="543.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (1,518 samples, 1.22%)</title><rect x="53.8709%" y="517" width="1.2223%" height="15" fill="rgb(231,179,28)" fg:x="66905" fg:w="1518"/><text x="54.1209%" y="527.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (1,518 samples, 1.22%)</title><rect x="53.8709%" y="501" width="1.2223%" height="15" fill="rgb(226,93,45)" fg:x="66905" fg:w="1518"/><text x="54.1209%" y="511.50"></text></g><g><title>tremor_common::time::nanotime (1,317 samples, 1.06%)</title><rect x="54.0328%" y="485" width="1.0604%" height="15" fill="rgb(215,8,51)" fg:x="67106" fg:w="1317"/><text x="54.2828%" y="495.50"></text></g><g><title>std::time::SystemTime::now (830 samples, 0.67%)</title><rect x="54.4249%" y="469" width="0.6683%" height="15" fill="rgb(223,106,5)" fg:x="67593" fg:w="830"/><text x="54.6749%" y="479.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (830 samples, 0.67%)</title><rect x="54.4249%" y="453" width="0.6683%" height="15" fill="rgb(250,191,5)" fg:x="67593" fg:w="830"/><text x="54.6749%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (830 samples, 0.67%)</title><rect x="54.4249%" y="437" width="0.6683%" height="15" fill="rgb(242,132,44)" fg:x="67593" fg:w="830"/><text x="54.6749%" y="447.50"></text></g><g><title>__clock_gettime (666 samples, 0.54%)</title><rect x="54.5569%" y="421" width="0.5363%" height="15" fill="rgb(251,152,29)" fg:x="67757" fg:w="666"/><text x="54.8069%" y="431.50"></text></g><g><title>__vdso_clock_gettime (613 samples, 0.49%)</title><rect x="54.5996%" y="405" width="0.4936%" height="15" fill="rgb(218,179,5)" fg:x="67810" fg:w="613"/><text x="54.8496%" y="415.50"></text></g><g><title>[[vdso]] (549 samples, 0.44%)</title><rect x="54.6512%" y="389" width="0.4420%" height="15" fill="rgb(227,67,19)" fg:x="67874" fg:w="549"/><text x="54.9012%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (490 samples, 0.39%)</title><rect x="55.2550%" y="501" width="0.3945%" height="15" fill="rgb(233,119,31)" fg:x="68624" fg:w="490"/><text x="55.5050%" y="511.50"></text></g><g><title>core::ptr::read (456 samples, 0.37%)</title><rect x="55.2824%" y="485" width="0.3672%" height="15" fill="rgb(241,120,22)" fg:x="68658" fg:w="456"/><text x="55.5324%" y="495.50"></text></g><g><title>[libc-2.31.so] (446 samples, 0.36%)</title><rect x="55.2905%" y="469" width="0.3591%" height="15" fill="rgb(224,102,30)" fg:x="68668" fg:w="446"/><text x="55.5405%" y="479.50"></text></g><g><title>[libc-2.31.so] (153 samples, 0.12%)</title><rect x="55.6601%" y="485" width="0.1232%" height="15" fill="rgb(210,164,37)" fg:x="69127" fg:w="153"/><text x="55.9101%" y="495.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (37 samples, 0.03%)</title><rect x="55.8412%" y="453" width="0.0298%" height="15" fill="rgb(226,191,16)" fg:x="69352" fg:w="37"/><text x="56.0912%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (21 samples, 0.02%)</title><rect x="55.8541%" y="437" width="0.0169%" height="15" fill="rgb(214,40,45)" fg:x="69368" fg:w="21"/><text x="56.1041%" y="447.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (84 samples, 0.07%)</title><rect x="55.8155%" y="469" width="0.0676%" height="15" fill="rgb(244,29,26)" fg:x="69320" fg:w="84"/><text x="56.0655%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (297 samples, 0.24%)</title><rect x="55.6496%" y="501" width="0.2391%" height="15" fill="rgb(216,16,5)" fg:x="69114" fg:w="297"/><text x="55.8996%" y="511.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (131 samples, 0.11%)</title><rect x="55.7832%" y="485" width="0.1055%" height="15" fill="rgb(249,76,35)" fg:x="69280" fg:w="131"/><text x="56.0332%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (158 samples, 0.13%)</title><rect x="55.8984%" y="373" width="0.1272%" height="15" fill="rgb(207,11,44)" fg:x="69423" fg:w="158"/><text x="56.1484%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (158 samples, 0.13%)</title><rect x="55.8984%" y="357" width="0.1272%" height="15" fill="rgb(228,190,49)" fg:x="69423" fg:w="158"/><text x="56.1484%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (158 samples, 0.13%)</title><rect x="55.8984%" y="341" width="0.1272%" height="15" fill="rgb(214,173,12)" fg:x="69423" fg:w="158"/><text x="56.1484%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (158 samples, 0.13%)</title><rect x="55.8984%" y="325" width="0.1272%" height="15" fill="rgb(218,26,35)" fg:x="69423" fg:w="158"/><text x="56.1484%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (158 samples, 0.13%)</title><rect x="55.8984%" y="309" width="0.1272%" height="15" fill="rgb(220,200,19)" fg:x="69423" fg:w="158"/><text x="56.1484%" y="319.50"></text></g><g><title>alloc::alloc::alloc (158 samples, 0.13%)</title><rect x="55.8984%" y="293" width="0.1272%" height="15" fill="rgb(239,95,49)" fg:x="69423" fg:w="158"/><text x="56.1484%" y="303.50"></text></g><g><title>__rg_alloc (158 samples, 0.13%)</title><rect x="55.8984%" y="277" width="0.1272%" height="15" fill="rgb(235,85,53)" fg:x="69423" fg:w="158"/><text x="56.1484%" y="287.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (158 samples, 0.13%)</title><rect x="55.8984%" y="261" width="0.1272%" height="15" fill="rgb(233,133,31)" fg:x="69423" fg:w="158"/><text x="56.1484%" y="271.50"></text></g><g><title>sn_rust_alloc (152 samples, 0.12%)</title><rect x="55.9032%" y="245" width="0.1224%" height="15" fill="rgb(218,25,20)" fg:x="69429" fg:w="152"/><text x="56.1532%" y="255.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (20 samples, 0.02%)</title><rect x="56.0095%" y="229" width="0.0161%" height="15" fill="rgb(252,210,38)" fg:x="69561" fg:w="20"/><text x="56.2595%" y="239.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (214 samples, 0.17%)</title><rect x="55.8984%" y="501" width="0.1723%" height="15" fill="rgb(242,134,21)" fg:x="69423" fg:w="214"/><text x="56.1484%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (214 samples, 0.17%)</title><rect x="55.8984%" y="485" width="0.1723%" height="15" fill="rgb(213,28,48)" fg:x="69423" fg:w="214"/><text x="56.1484%" y="495.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (214 samples, 0.17%)</title><rect x="55.8984%" y="469" width="0.1723%" height="15" fill="rgb(250,196,2)" fg:x="69423" fg:w="214"/><text x="56.1484%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (214 samples, 0.17%)</title><rect x="55.8984%" y="453" width="0.1723%" height="15" fill="rgb(227,5,17)" fg:x="69423" fg:w="214"/><text x="56.1484%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (214 samples, 0.17%)</title><rect x="55.8984%" y="437" width="0.1723%" height="15" fill="rgb(221,226,24)" fg:x="69423" fg:w="214"/><text x="56.1484%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (214 samples, 0.17%)</title><rect x="55.8984%" y="421" width="0.1723%" height="15" fill="rgb(211,5,48)" fg:x="69423" fg:w="214"/><text x="56.1484%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (214 samples, 0.17%)</title><rect x="55.8984%" y="405" width="0.1723%" height="15" fill="rgb(219,150,6)" fg:x="69423" fg:w="214"/><text x="56.1484%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (214 samples, 0.17%)</title><rect x="55.8984%" y="389" width="0.1723%" height="15" fill="rgb(251,46,16)" fg:x="69423" fg:w="214"/><text x="56.1484%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (56 samples, 0.05%)</title><rect x="56.0256%" y="373" width="0.0451%" height="15" fill="rgb(220,204,40)" fg:x="69581" fg:w="56"/><text x="56.2756%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56 samples, 0.05%)</title><rect x="56.0256%" y="357" width="0.0451%" height="15" fill="rgb(211,85,2)" fg:x="69581" fg:w="56"/><text x="56.2756%" y="367.50"></text></g><g><title>[libc-2.31.so] (41 samples, 0.03%)</title><rect x="56.0377%" y="341" width="0.0330%" height="15" fill="rgb(229,17,7)" fg:x="69596" fg:w="41"/><text x="56.2877%" y="351.50"></text></g><g><title>[libc-2.31.so] (698 samples, 0.56%)</title><rect x="56.0707%" y="501" width="0.5620%" height="15" fill="rgb(239,72,28)" fg:x="69637" fg:w="698"/><text x="56.3207%" y="511.50"></text></g><g><title>[libc-2.31.so] (407 samples, 0.33%)</title><rect x="56.6416%" y="485" width="0.3277%" height="15" fill="rgb(230,47,54)" fg:x="70346" fg:w="407"/><text x="56.8916%" y="495.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,082 samples, 0.87%)</title><rect x="57.0337%" y="373" width="0.8712%" height="15" fill="rgb(214,50,8)" fg:x="70833" fg:w="1082"/><text x="57.2837%" y="383.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (28 samples, 0.02%)</title><rect x="57.9049%" y="373" width="0.0225%" height="15" fill="rgb(216,198,43)" fg:x="71915" fg:w="28"/><text x="58.1549%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,609 samples, 1.30%)</title><rect x="56.6327%" y="501" width="1.2955%" height="15" fill="rgb(234,20,35)" fg:x="70335" fg:w="1609"/><text x="56.8827%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,191 samples, 0.96%)</title><rect x="56.9693%" y="485" width="0.9590%" height="15" fill="rgb(254,45,19)" fg:x="70753" fg:w="1191"/><text x="57.2193%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,191 samples, 0.96%)</title><rect x="56.9693%" y="469" width="0.9590%" height="15" fill="rgb(219,14,44)" fg:x="70753" fg:w="1191"/><text x="57.2193%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,191 samples, 0.96%)</title><rect x="56.9693%" y="453" width="0.9590%" height="15" fill="rgb(217,220,26)" fg:x="70753" fg:w="1191"/><text x="57.2193%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1,190 samples, 0.96%)</title><rect x="56.9701%" y="437" width="0.9582%" height="15" fill="rgb(213,158,28)" fg:x="70754" fg:w="1190"/><text x="57.2201%" y="447.50"></text></g><g><title>__rg_alloc (1,190 samples, 0.96%)</title><rect x="56.9701%" y="421" width="0.9582%" height="15" fill="rgb(252,51,52)" fg:x="70754" fg:w="1190"/><text x="57.2201%" y="431.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,190 samples, 0.96%)</title><rect x="56.9701%" y="405" width="0.9582%" height="15" fill="rgb(246,89,16)" fg:x="70754" fg:w="1190"/><text x="57.2201%" y="415.50"></text></g><g><title>sn_rust_alloc (1,187 samples, 0.96%)</title><rect x="56.9725%" y="389" width="0.9558%" height="15" fill="rgb(216,158,49)" fg:x="70757" fg:w="1187"/><text x="57.2225%" y="399.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (19 samples, 0.02%)</title><rect x="57.9323%" y="469" width="0.0153%" height="15" fill="rgb(236,107,19)" fg:x="71949" fg:w="19"/><text x="58.1823%" y="479.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (19 samples, 0.02%)</title><rect x="57.9323%" y="453" width="0.0153%" height="15" fill="rgb(228,185,30)" fg:x="71949" fg:w="19"/><text x="58.1823%" y="463.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (19 samples, 0.02%)</title><rect x="57.9323%" y="437" width="0.0153%" height="15" fill="rgb(246,134,8)" fg:x="71949" fg:w="19"/><text x="58.1823%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (19 samples, 0.02%)</title><rect x="57.9323%" y="421" width="0.0153%" height="15" fill="rgb(214,143,50)" fg:x="71949" fg:w="19"/><text x="58.1823%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (19 samples, 0.02%)</title><rect x="57.9323%" y="405" width="0.0153%" height="15" fill="rgb(228,75,8)" fg:x="71949" fg:w="19"/><text x="58.1823%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event),alloc::alloc::Global&gt;&gt; (23 samples, 0.02%)</title><rect x="57.9476%" y="469" width="0.0185%" height="15" fill="rgb(207,175,4)" fg:x="71968" fg:w="23"/><text x="58.1976%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="57.9476%" y="453" width="0.0185%" height="15" fill="rgb(205,108,24)" fg:x="71968" fg:w="23"/><text x="58.1976%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (16 samples, 0.01%)</title><rect x="57.9532%" y="437" width="0.0129%" height="15" fill="rgb(244,120,49)" fg:x="71975" fg:w="16"/><text x="58.2032%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="57.9532%" y="421" width="0.0129%" height="15" fill="rgb(223,47,38)" fg:x="71975" fg:w="16"/><text x="58.2032%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.01%)</title><rect x="57.9532%" y="405" width="0.0129%" height="15" fill="rgb(229,179,11)" fg:x="71975" fg:w="16"/><text x="58.2032%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.01%)</title><rect x="57.9532%" y="389" width="0.0129%" height="15" fill="rgb(231,122,1)" fg:x="71975" fg:w="16"/><text x="58.2032%" y="399.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="57.9532%" y="373" width="0.0129%" height="15" fill="rgb(245,119,9)" fg:x="71975" fg:w="16"/><text x="58.2032%" y="383.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="57.9532%" y="357" width="0.0129%" height="15" fill="rgb(241,163,25)" fg:x="71975" fg:w="16"/><text x="58.2032%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="57.9283%" y="485" width="0.0467%" height="15" fill="rgb(217,214,3)" fg:x="71944" fg:w="58"/><text x="58.1783%" y="495.50"></text></g><g><title>sn_rust_dealloc (37 samples, 0.03%)</title><rect x="57.9750%" y="485" width="0.0298%" height="15" fill="rgb(240,86,28)" fg:x="72002" fg:w="37"/><text x="58.2250%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (100 samples, 0.08%)</title><rect x="57.9283%" y="501" width="0.0805%" height="15" fill="rgb(215,47,9)" fg:x="71944" fg:w="100"/><text x="58.1783%" y="511.50"></text></g><g><title>core::str::&lt;impl str&gt;::eq_ignore_ascii_case (54 samples, 0.04%)</title><rect x="58.0241%" y="501" width="0.0435%" height="15" fill="rgb(252,25,45)" fg:x="72063" fg:w="54"/><text x="58.2741%" y="511.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case (54 samples, 0.04%)</title><rect x="58.0241%" y="485" width="0.0435%" height="15" fill="rgb(251,164,9)" fg:x="72063" fg:w="54"/><text x="58.2741%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (53 samples, 0.04%)</title><rect x="58.0249%" y="469" width="0.0427%" height="15" fill="rgb(233,194,0)" fg:x="72064" fg:w="53"/><text x="58.2749%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (53 samples, 0.04%)</title><rect x="58.0249%" y="453" width="0.0427%" height="15" fill="rgb(249,111,24)" fg:x="72064" fg:w="53"/><text x="58.2749%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (40 samples, 0.03%)</title><rect x="58.0353%" y="437" width="0.0322%" height="15" fill="rgb(250,223,3)" fg:x="72077" fg:w="40"/><text x="58.2853%" y="447.50"></text></g><g><title>core::slice::ascii::&lt;impl [u8]&gt;::eq_ignore_ascii_case::{{closure}} (40 samples, 0.03%)</title><rect x="58.0353%" y="421" width="0.0322%" height="15" fill="rgb(236,178,37)" fg:x="72077" fg:w="40"/><text x="58.2853%" y="431.50"></text></g><g><title>core::num::&lt;impl u8&gt;::eq_ignore_ascii_case (40 samples, 0.03%)</title><rect x="58.0353%" y="405" width="0.0322%" height="15" fill="rgb(241,158,50)" fg:x="72077" fg:w="40"/><text x="58.2853%" y="415.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (40 samples, 0.03%)</title><rect x="58.0353%" y="389" width="0.0322%" height="15" fill="rgb(213,121,41)" fg:x="72077" fg:w="40"/><text x="58.2853%" y="399.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (15 samples, 0.01%)</title><rect x="58.0555%" y="373" width="0.0121%" height="15" fill="rgb(240,92,3)" fg:x="72102" fg:w="15"/><text x="58.3055%" y="383.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (13 samples, 0.01%)</title><rect x="58.0692%" y="501" width="0.0105%" height="15" fill="rgb(205,123,3)" fg:x="72119" fg:w="13"/><text x="58.3192%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,718 samples, 2.99%)</title><rect x="55.0932%" y="597" width="2.9937%" height="15" fill="rgb(205,97,47)" fg:x="68423" fg:w="3718"/><text x="55.3432%" y="607.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (3,718 samples, 2.99%)</title><rect x="55.0932%" y="581" width="2.9937%" height="15" fill="rgb(247,152,14)" fg:x="68423" fg:w="3718"/><text x="55.3432%" y="591.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,718 samples, 2.99%)</title><rect x="55.0932%" y="565" width="2.9937%" height="15" fill="rgb(248,195,53)" fg:x="68423" fg:w="3718"/><text x="55.3432%" y="575.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (3,718 samples, 2.99%)</title><rect x="55.0932%" y="549" width="2.9937%" height="15" fill="rgb(226,201,16)" fg:x="68423" fg:w="3718"/><text x="55.3432%" y="559.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,718 samples, 2.99%)</title><rect x="55.0932%" y="533" width="2.9937%" height="15" fill="rgb(205,98,0)" fg:x="68423" fg:w="3718"/><text x="55.3432%" y="543.50">&lt;co..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (3,711 samples, 2.99%)</title><rect x="55.0988%" y="517" width="2.9880%" height="15" fill="rgb(214,191,48)" fg:x="68430" fg:w="3711"/><text x="55.3488%" y="527.50">tre..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (105 samples, 0.08%)</title><rect x="58.2060%" y="517" width="0.0845%" height="15" fill="rgb(237,112,39)" fg:x="72289" fg:w="105"/><text x="58.4560%" y="527.50"></text></g><g><title>core::mem::replace (105 samples, 0.08%)</title><rect x="58.2060%" y="501" width="0.0845%" height="15" fill="rgb(247,203,27)" fg:x="72289" fg:w="105"/><text x="58.4560%" y="511.50"></text></g><g><title>core::ptr::read (105 samples, 0.08%)</title><rect x="58.2060%" y="485" width="0.0845%" height="15" fill="rgb(235,124,28)" fg:x="72289" fg:w="105"/><text x="58.4560%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (182 samples, 0.15%)</title><rect x="58.1763%" y="533" width="0.1465%" height="15" fill="rgb(208,207,46)" fg:x="72252" fg:w="182"/><text x="58.4263%" y="543.50"></text></g><g><title>core::mem::drop (40 samples, 0.03%)</title><rect x="58.2906%" y="517" width="0.0322%" height="15" fill="rgb(234,176,4)" fg:x="72394" fg:w="40"/><text x="58.5406%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (40 samples, 0.03%)</title><rect x="58.2906%" y="501" width="0.0322%" height="15" fill="rgb(230,133,28)" fg:x="72394" fg:w="40"/><text x="58.5406%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (197 samples, 0.16%)</title><rect x="58.3228%" y="533" width="0.1586%" height="15" fill="rgb(211,137,40)" fg:x="72434" fg:w="197"/><text x="58.5728%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (187 samples, 0.15%)</title><rect x="58.3309%" y="517" width="0.1506%" height="15" fill="rgb(254,35,13)" fg:x="72444" fg:w="187"/><text x="58.5809%" y="527.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (187 samples, 0.15%)</title><rect x="58.3309%" y="501" width="0.1506%" height="15" fill="rgb(225,49,51)" fg:x="72444" fg:w="187"/><text x="58.5809%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (177 samples, 0.14%)</title><rect x="58.3389%" y="485" width="0.1425%" height="15" fill="rgb(251,10,15)" fg:x="72454" fg:w="177"/><text x="58.5889%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (177 samples, 0.14%)</title><rect x="58.3389%" y="469" width="0.1425%" height="15" fill="rgb(228,207,15)" fg:x="72454" fg:w="177"/><text x="58.5889%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (177 samples, 0.14%)</title><rect x="58.3389%" y="453" width="0.1425%" height="15" fill="rgb(241,99,19)" fg:x="72454" fg:w="177"/><text x="58.5889%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (177 samples, 0.14%)</title><rect x="58.3389%" y="437" width="0.1425%" height="15" fill="rgb(207,104,49)" fg:x="72454" fg:w="177"/><text x="58.5889%" y="447.50"></text></g><g><title>core::task::wake::Waker::will_wake (24 samples, 0.02%)</title><rect x="58.4887%" y="533" width="0.0193%" height="15" fill="rgb(234,99,18)" fg:x="72640" fg:w="24"/><text x="58.7387%" y="543.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="58.4887%" y="517" width="0.0193%" height="15" fill="rgb(213,191,49)" fg:x="72640" fg:w="24"/><text x="58.7387%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (24 samples, 0.02%)</title><rect x="58.4887%" y="501" width="0.0193%" height="15" fill="rgb(210,226,19)" fg:x="72640" fg:w="24"/><text x="58.7387%" y="511.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="58.4887%" y="485" width="0.0193%" height="15" fill="rgb(229,97,18)" fg:x="72640" fg:w="24"/><text x="58.7387%" y="495.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (683 samples, 0.55%)</title><rect x="58.1159%" y="549" width="0.5499%" height="15" fill="rgb(211,167,15)" fg:x="72177" fg:w="683"/><text x="58.3659%" y="559.50"></text></g><g><title>event_listener::Inner::lock (196 samples, 0.16%)</title><rect x="58.5080%" y="533" width="0.1578%" height="15" fill="rgb(210,169,34)" fg:x="72664" fg:w="196"/><text x="58.7580%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (184 samples, 0.15%)</title><rect x="58.5177%" y="517" width="0.1482%" height="15" fill="rgb(241,121,31)" fg:x="72676" fg:w="184"/><text x="58.7677%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (172 samples, 0.14%)</title><rect x="58.5273%" y="501" width="0.1385%" height="15" fill="rgb(232,40,11)" fg:x="72688" fg:w="172"/><text x="58.7773%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (172 samples, 0.14%)</title><rect x="58.5273%" y="485" width="0.1385%" height="15" fill="rgb(205,86,26)" fg:x="72688" fg:w="172"/><text x="58.7773%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (172 samples, 0.14%)</title><rect x="58.5273%" y="469" width="0.1385%" height="15" fill="rgb(231,126,28)" fg:x="72688" fg:w="172"/><text x="58.7773%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (172 samples, 0.14%)</title><rect x="58.5273%" y="453" width="0.1385%" height="15" fill="rgb(219,221,18)" fg:x="72688" fg:w="172"/><text x="58.7773%" y="463.50"></text></g><g><title>concurrent_queue::full_fence (231 samples, 0.19%)</title><rect x="58.7415%" y="501" width="0.1860%" height="15" fill="rgb(211,40,0)" fg:x="72954" fg:w="231"/><text x="58.9915%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (231 samples, 0.19%)</title><rect x="58.7415%" y="485" width="0.1860%" height="15" fill="rgb(239,85,43)" fg:x="72954" fg:w="231"/><text x="58.9915%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (231 samples, 0.19%)</title><rect x="58.7415%" y="469" width="0.1860%" height="15" fill="rgb(231,55,21)" fg:x="72954" fg:w="231"/><text x="58.9915%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (231 samples, 0.19%)</title><rect x="58.7415%" y="453" width="0.1860%" height="15" fill="rgb(225,184,43)" fg:x="72954" fg:w="231"/><text x="58.9915%" y="463.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1,053 samples, 0.85%)</title><rect x="58.0869%" y="565" width="0.8479%" height="15" fill="rgb(251,158,41)" fg:x="72141" fg:w="1053"/><text x="58.3369%" y="575.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (334 samples, 0.27%)</title><rect x="58.6658%" y="549" width="0.2689%" height="15" fill="rgb(234,159,37)" fg:x="72860" fg:w="334"/><text x="58.9158%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (317 samples, 0.26%)</title><rect x="58.6795%" y="533" width="0.2552%" height="15" fill="rgb(216,204,22)" fg:x="72877" fg:w="317"/><text x="58.9295%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (296 samples, 0.24%)</title><rect x="58.6964%" y="517" width="0.2383%" height="15" fill="rgb(214,17,3)" fg:x="72898" fg:w="296"/><text x="58.9464%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (52 samples, 0.04%)</title><rect x="60.2633%" y="277" width="0.0419%" height="15" fill="rgb(212,111,17)" fg:x="74844" fg:w="52"/><text x="60.5133%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (522 samples, 0.42%)</title><rect x="59.8873%" y="421" width="0.4203%" height="15" fill="rgb(221,157,24)" fg:x="74377" fg:w="522"/><text x="60.1373%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (522 samples, 0.42%)</title><rect x="59.8873%" y="405" width="0.4203%" height="15" fill="rgb(252,16,13)" fg:x="74377" fg:w="522"/><text x="60.1373%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (522 samples, 0.42%)</title><rect x="59.8873%" y="389" width="0.4203%" height="15" fill="rgb(221,62,2)" fg:x="74377" fg:w="522"/><text x="60.1373%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (518 samples, 0.42%)</title><rect x="59.8905%" y="373" width="0.4171%" height="15" fill="rgb(247,87,22)" fg:x="74381" fg:w="518"/><text x="60.1405%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (518 samples, 0.42%)</title><rect x="59.8905%" y="357" width="0.4171%" height="15" fill="rgb(215,73,9)" fg:x="74381" fg:w="518"/><text x="60.1405%" y="367.50"></text></g><g><title>alloc::alloc::alloc (518 samples, 0.42%)</title><rect x="59.8905%" y="341" width="0.4171%" height="15" fill="rgb(207,175,33)" fg:x="74381" fg:w="518"/><text x="60.1405%" y="351.50"></text></g><g><title>__rg_alloc (518 samples, 0.42%)</title><rect x="59.8905%" y="325" width="0.4171%" height="15" fill="rgb(243,129,54)" fg:x="74381" fg:w="518"/><text x="60.1405%" y="335.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (518 samples, 0.42%)</title><rect x="59.8905%" y="309" width="0.4171%" height="15" fill="rgb(227,119,45)" fg:x="74381" fg:w="518"/><text x="60.1405%" y="319.50"></text></g><g><title>sn_rust_alloc (483 samples, 0.39%)</title><rect x="59.9187%" y="293" width="0.3889%" height="15" fill="rgb(205,109,36)" fg:x="74416" fg:w="483"/><text x="60.1687%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (606 samples, 0.49%)</title><rect x="59.8720%" y="501" width="0.4879%" height="15" fill="rgb(205,6,39)" fg:x="74358" fg:w="606"/><text x="60.1220%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (590 samples, 0.48%)</title><rect x="59.8849%" y="485" width="0.4751%" height="15" fill="rgb(221,32,16)" fg:x="74374" fg:w="590"/><text x="60.1349%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (590 samples, 0.48%)</title><rect x="59.8849%" y="469" width="0.4751%" height="15" fill="rgb(228,144,50)" fg:x="74374" fg:w="590"/><text x="60.1349%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (590 samples, 0.48%)</title><rect x="59.8849%" y="453" width="0.4751%" height="15" fill="rgb(229,201,53)" fg:x="74374" fg:w="590"/><text x="60.1349%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (590 samples, 0.48%)</title><rect x="59.8849%" y="437" width="0.4751%" height="15" fill="rgb(249,153,27)" fg:x="74374" fg:w="590"/><text x="60.1349%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (65 samples, 0.05%)</title><rect x="60.3076%" y="421" width="0.0523%" height="15" fill="rgb(227,106,25)" fg:x="74899" fg:w="65"/><text x="60.5576%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.05%)</title><rect x="60.3076%" y="405" width="0.0523%" height="15" fill="rgb(230,65,29)" fg:x="74899" fg:w="65"/><text x="60.5576%" y="415.50"></text></g><g><title>[libc-2.31.so] (54 samples, 0.04%)</title><rect x="60.3164%" y="389" width="0.0435%" height="15" fill="rgb(221,57,46)" fg:x="74910" fg:w="54"/><text x="60.5664%" y="399.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (92 samples, 0.07%)</title><rect x="60.5065%" y="213" width="0.0741%" height="15" fill="rgb(229,161,17)" fg:x="75146" fg:w="92"/><text x="60.7565%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (223 samples, 0.18%)</title><rect x="60.4026%" y="357" width="0.1796%" height="15" fill="rgb(222,213,11)" fg:x="75017" fg:w="223"/><text x="60.6526%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (223 samples, 0.18%)</title><rect x="60.4026%" y="341" width="0.1796%" height="15" fill="rgb(235,35,13)" fg:x="75017" fg:w="223"/><text x="60.6526%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (223 samples, 0.18%)</title><rect x="60.4026%" y="325" width="0.1796%" height="15" fill="rgb(233,158,34)" fg:x="75017" fg:w="223"/><text x="60.6526%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (219 samples, 0.18%)</title><rect x="60.4058%" y="309" width="0.1763%" height="15" fill="rgb(215,151,48)" fg:x="75021" fg:w="219"/><text x="60.6558%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (219 samples, 0.18%)</title><rect x="60.4058%" y="293" width="0.1763%" height="15" fill="rgb(229,84,14)" fg:x="75021" fg:w="219"/><text x="60.6558%" y="303.50"></text></g><g><title>alloc::alloc::alloc (219 samples, 0.18%)</title><rect x="60.4058%" y="277" width="0.1763%" height="15" fill="rgb(229,68,14)" fg:x="75021" fg:w="219"/><text x="60.6558%" y="287.50"></text></g><g><title>__rg_alloc (219 samples, 0.18%)</title><rect x="60.4058%" y="261" width="0.1763%" height="15" fill="rgb(243,106,26)" fg:x="75021" fg:w="219"/><text x="60.6558%" y="271.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (219 samples, 0.18%)</title><rect x="60.4058%" y="245" width="0.1763%" height="15" fill="rgb(206,45,38)" fg:x="75021" fg:w="219"/><text x="60.6558%" y="255.50"></text></g><g><title>sn_rust_alloc (208 samples, 0.17%)</title><rect x="60.4147%" y="229" width="0.1675%" height="15" fill="rgb(226,6,15)" fg:x="75032" fg:w="208"/><text x="60.6647%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (374 samples, 0.30%)</title><rect x="60.3849%" y="437" width="0.3011%" height="15" fill="rgb(232,22,54)" fg:x="74995" fg:w="374"/><text x="60.6349%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (352 samples, 0.28%)</title><rect x="60.4026%" y="421" width="0.2834%" height="15" fill="rgb(229,222,32)" fg:x="75017" fg:w="352"/><text x="60.6526%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (352 samples, 0.28%)</title><rect x="60.4026%" y="405" width="0.2834%" height="15" fill="rgb(228,62,29)" fg:x="75017" fg:w="352"/><text x="60.6526%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (352 samples, 0.28%)</title><rect x="60.4026%" y="389" width="0.2834%" height="15" fill="rgb(251,103,34)" fg:x="75017" fg:w="352"/><text x="60.6526%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (352 samples, 0.28%)</title><rect x="60.4026%" y="373" width="0.2834%" height="15" fill="rgb(233,12,30)" fg:x="75017" fg:w="352"/><text x="60.6526%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (129 samples, 0.10%)</title><rect x="60.5821%" y="357" width="0.1039%" height="15" fill="rgb(238,52,0)" fg:x="75240" fg:w="129"/><text x="60.8321%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (129 samples, 0.10%)</title><rect x="60.5821%" y="341" width="0.1039%" height="15" fill="rgb(223,98,5)" fg:x="75240" fg:w="129"/><text x="60.8321%" y="351.50"></text></g><g><title>[libc-2.31.so] (118 samples, 0.10%)</title><rect x="60.5910%" y="325" width="0.0950%" height="15" fill="rgb(228,75,37)" fg:x="75251" fg:w="118"/><text x="60.8410%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="60.6860%" y="437" width="0.0258%" height="15" fill="rgb(205,115,49)" fg:x="75369" fg:w="32"/><text x="60.9360%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="60.6925%" y="421" width="0.0193%" height="15" fill="rgb(250,154,43)" fg:x="75377" fg:w="24"/><text x="60.9425%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="60.6925%" y="405" width="0.0193%" height="15" fill="rgb(226,43,29)" fg:x="75377" fg:w="24"/><text x="60.9425%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113 samples, 0.09%)</title><rect x="60.7287%" y="389" width="0.0910%" height="15" fill="rgb(249,228,39)" fg:x="75422" fg:w="113"/><text x="60.9787%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113 samples, 0.09%)</title><rect x="60.7287%" y="373" width="0.0910%" height="15" fill="rgb(216,79,43)" fg:x="75422" fg:w="113"/><text x="60.9787%" y="383.50"></text></g><g><title>alloc::alloc::alloc (110 samples, 0.09%)</title><rect x="60.7311%" y="357" width="0.0886%" height="15" fill="rgb(228,95,12)" fg:x="75425" fg:w="110"/><text x="60.9811%" y="367.50"></text></g><g><title>__rg_alloc (110 samples, 0.09%)</title><rect x="60.7311%" y="341" width="0.0886%" height="15" fill="rgb(249,221,15)" fg:x="75425" fg:w="110"/><text x="60.9811%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (110 samples, 0.09%)</title><rect x="60.7311%" y="325" width="0.0886%" height="15" fill="rgb(233,34,13)" fg:x="75425" fg:w="110"/><text x="60.9811%" y="335.50"></text></g><g><title>sn_rust_alloc (110 samples, 0.09%)</title><rect x="60.7311%" y="309" width="0.0886%" height="15" fill="rgb(214,103,39)" fg:x="75425" fg:w="110"/><text x="60.9811%" y="319.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (48 samples, 0.04%)</title><rect x="60.7810%" y="293" width="0.0386%" height="15" fill="rgb(251,126,39)" fg:x="75487" fg:w="48"/><text x="61.0310%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (143 samples, 0.12%)</title><rect x="60.7126%" y="437" width="0.1151%" height="15" fill="rgb(214,216,36)" fg:x="75402" fg:w="143"/><text x="60.9626%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (123 samples, 0.10%)</title><rect x="60.7287%" y="421" width="0.0990%" height="15" fill="rgb(220,221,8)" fg:x="75422" fg:w="123"/><text x="60.9787%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (123 samples, 0.10%)</title><rect x="60.7287%" y="405" width="0.0990%" height="15" fill="rgb(240,216,3)" fg:x="75422" fg:w="123"/><text x="60.9787%" y="415.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,876 samples, 1.51%)</title><rect x="59.3244%" y="517" width="1.5105%" height="15" fill="rgb(232,218,17)" fg:x="73678" fg:w="1876"/><text x="59.5744%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (590 samples, 0.48%)</title><rect x="60.3599%" y="501" width="0.4751%" height="15" fill="rgb(229,163,45)" fg:x="74964" fg:w="590"/><text x="60.6099%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (572 samples, 0.46%)</title><rect x="60.3744%" y="485" width="0.4606%" height="15" fill="rgb(231,110,42)" fg:x="74982" fg:w="572"/><text x="60.6244%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (572 samples, 0.46%)</title><rect x="60.3744%" y="469" width="0.4606%" height="15" fill="rgb(208,170,48)" fg:x="74982" fg:w="572"/><text x="60.6244%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (572 samples, 0.46%)</title><rect x="60.3744%" y="453" width="0.4606%" height="15" fill="rgb(239,116,25)" fg:x="74982" fg:w="572"/><text x="60.6244%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (43 samples, 0.03%)</title><rect x="60.8954%" y="437" width="0.0346%" height="15" fill="rgb(219,200,50)" fg:x="75629" fg:w="43"/><text x="61.1454%" y="447.50"></text></g><g><title>core::time::Duration::as_nanos (26 samples, 0.02%)</title><rect x="60.9300%" y="437" width="0.0209%" height="15" fill="rgb(245,200,0)" fg:x="75672" fg:w="26"/><text x="61.1800%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (118 samples, 0.10%)</title><rect x="60.9509%" y="421" width="0.0950%" height="15" fill="rgb(245,119,33)" fg:x="75698" fg:w="118"/><text x="61.2009%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (53 samples, 0.04%)</title><rect x="61.0830%" y="389" width="0.0427%" height="15" fill="rgb(231,125,12)" fg:x="75862" fg:w="53"/><text x="61.3330%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::ge (53 samples, 0.04%)</title><rect x="61.0830%" y="373" width="0.0427%" height="15" fill="rgb(216,96,41)" fg:x="75862" fg:w="53"/><text x="61.3330%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (53 samples, 0.04%)</title><rect x="61.0830%" y="357" width="0.0427%" height="15" fill="rgb(248,43,45)" fg:x="75862" fg:w="53"/><text x="61.3330%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (25 samples, 0.02%)</title><rect x="61.1055%" y="341" width="0.0201%" height="15" fill="rgb(217,222,7)" fg:x="75890" fg:w="25"/><text x="61.3555%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (25 samples, 0.02%)</title><rect x="61.1055%" y="325" width="0.0201%" height="15" fill="rgb(233,28,6)" fg:x="75890" fg:w="25"/><text x="61.3555%" y="335.50"></text></g><g><title>std::time::SystemTime::duration_since (246 samples, 0.20%)</title><rect x="60.9509%" y="437" width="0.1981%" height="15" fill="rgb(231,218,15)" fg:x="75698" fg:w="246"/><text x="61.2009%" y="447.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (128 samples, 0.10%)</title><rect x="61.0459%" y="421" width="0.1031%" height="15" fill="rgb(226,171,48)" fg:x="75816" fg:w="128"/><text x="61.2959%" y="431.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (128 samples, 0.10%)</title><rect x="61.0459%" y="405" width="0.1031%" height="15" fill="rgb(235,201,9)" fg:x="75816" fg:w="128"/><text x="61.2959%" y="415.50"></text></g><g><title>core::time::Duration::new (29 samples, 0.02%)</title><rect x="61.1256%" y="389" width="0.0234%" height="15" fill="rgb(217,80,15)" fg:x="75915" fg:w="29"/><text x="61.3756%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (933 samples, 0.75%)</title><rect x="60.8350%" y="517" width="0.7512%" height="15" fill="rgb(219,152,8)" fg:x="75554" fg:w="933"/><text x="61.0850%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (933 samples, 0.75%)</title><rect x="60.8350%" y="501" width="0.7512%" height="15" fill="rgb(243,107,38)" fg:x="75554" fg:w="933"/><text x="61.0850%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (906 samples, 0.73%)</title><rect x="60.8567%" y="485" width="0.7295%" height="15" fill="rgb(231,17,5)" fg:x="75581" fg:w="906"/><text x="61.1067%" y="495.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}}::{{closure}} (906 samples, 0.73%)</title><rect x="60.8567%" y="469" width="0.7295%" height="15" fill="rgb(209,25,54)" fg:x="75581" fg:w="906"/><text x="61.1067%" y="479.50"></text></g><g><title>tremor_common::time::nanotime (897 samples, 0.72%)</title><rect x="60.8640%" y="453" width="0.7223%" height="15" fill="rgb(219,0,2)" fg:x="75590" fg:w="897"/><text x="61.1140%" y="463.50"></text></g><g><title>std::time::SystemTime::now (543 samples, 0.44%)</title><rect x="61.1490%" y="437" width="0.4372%" height="15" fill="rgb(246,9,5)" fg:x="75944" fg:w="543"/><text x="61.3990%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (543 samples, 0.44%)</title><rect x="61.1490%" y="421" width="0.4372%" height="15" fill="rgb(226,159,4)" fg:x="75944" fg:w="543"/><text x="61.3990%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (543 samples, 0.44%)</title><rect x="61.1490%" y="405" width="0.4372%" height="15" fill="rgb(219,175,34)" fg:x="75944" fg:w="543"/><text x="61.3990%" y="415.50"></text></g><g><title>__clock_gettime (428 samples, 0.34%)</title><rect x="61.2416%" y="389" width="0.3446%" height="15" fill="rgb(236,10,46)" fg:x="76059" fg:w="428"/><text x="61.4916%" y="399.50"></text></g><g><title>__vdso_clock_gettime (418 samples, 0.34%)</title><rect x="61.2496%" y="373" width="0.3366%" height="15" fill="rgb(240,211,16)" fg:x="76069" fg:w="418"/><text x="61.4996%" y="383.50"></text></g><g><title>[[vdso]] (359 samples, 0.29%)</title><rect x="61.2972%" y="357" width="0.2891%" height="15" fill="rgb(205,3,43)" fg:x="76128" fg:w="359"/><text x="61.5472%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter (20 samples, 0.02%)</title><rect x="61.5862%" y="517" width="0.0161%" height="15" fill="rgb(245,7,22)" fg:x="76487" fg:w="20"/><text x="61.8362%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (20 samples, 0.02%)</title><rect x="61.5862%" y="501" width="0.0161%" height="15" fill="rgb(239,132,32)" fg:x="76487" fg:w="20"/><text x="61.8362%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (33 samples, 0.03%)</title><rect x="61.6345%" y="485" width="0.0266%" height="15" fill="rgb(228,202,34)" fg:x="76547" fg:w="33"/><text x="61.8845%" y="495.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,291 samples, 1.04%)</title><rect x="61.9783%" y="293" width="1.0395%" height="15" fill="rgb(254,200,22)" fg:x="76974" fg:w="1291"/><text x="62.2283%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,714 samples, 1.38%)</title><rect x="61.6635%" y="437" width="1.3801%" height="15" fill="rgb(219,10,39)" fg:x="76583" fg:w="1714"/><text x="61.9135%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,705 samples, 1.37%)</title><rect x="61.6708%" y="421" width="1.3728%" height="15" fill="rgb(226,210,39)" fg:x="76592" fg:w="1705"/><text x="61.9208%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,705 samples, 1.37%)</title><rect x="61.6708%" y="405" width="1.3728%" height="15" fill="rgb(208,219,16)" fg:x="76592" fg:w="1705"/><text x="61.9208%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,695 samples, 1.36%)</title><rect x="61.6788%" y="389" width="1.3648%" height="15" fill="rgb(216,158,51)" fg:x="76602" fg:w="1695"/><text x="61.9288%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,695 samples, 1.36%)</title><rect x="61.6788%" y="373" width="1.3648%" height="15" fill="rgb(233,14,44)" fg:x="76602" fg:w="1695"/><text x="61.9288%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1,695 samples, 1.36%)</title><rect x="61.6788%" y="357" width="1.3648%" height="15" fill="rgb(237,97,39)" fg:x="76602" fg:w="1695"/><text x="61.9288%" y="367.50"></text></g><g><title>__rg_alloc (1,695 samples, 1.36%)</title><rect x="61.6788%" y="341" width="1.3648%" height="15" fill="rgb(218,198,43)" fg:x="76602" fg:w="1695"/><text x="61.9288%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,695 samples, 1.36%)</title><rect x="61.6788%" y="325" width="1.3648%" height="15" fill="rgb(231,104,20)" fg:x="76602" fg:w="1695"/><text x="61.9288%" y="335.50"></text></g><g><title>sn_rust_alloc (1,688 samples, 1.36%)</title><rect x="61.6844%" y="309" width="1.3592%" height="15" fill="rgb(254,36,13)" fg:x="76609" fg:w="1688"/><text x="61.9344%" y="319.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (32 samples, 0.03%)</title><rect x="63.0178%" y="293" width="0.0258%" height="15" fill="rgb(248,14,50)" fg:x="78265" fg:w="32"/><text x="63.2678%" y="303.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,521 samples, 4.45%)</title><rect x="58.9347%" y="549" width="4.4454%" height="15" fill="rgb(217,107,29)" fg:x="73194" fg:w="5521"/><text x="59.1847%" y="559.50">&lt;core..</text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blaster as tremor_runtime::connectors::source::Source&gt;::pull_data::{{closure}} (5,488 samples, 4.42%)</title><rect x="58.9613%" y="533" width="4.4189%" height="15" fill="rgb(251,169,33)" fg:x="73227" fg:w="5488"/><text x="59.2113%" y="543.50">&lt;trem..</text></g><g><title>tremor_runtime::connectors::impls::bench::Acc::next (2,208 samples, 1.78%)</title><rect x="61.6023%" y="517" width="1.7778%" height="15" fill="rgb(217,108,32)" fg:x="76507" fg:w="2208"/><text x="61.8523%" y="527.50">t..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,168 samples, 1.75%)</title><rect x="61.6345%" y="501" width="1.7456%" height="15" fill="rgb(219,66,42)" fg:x="76547" fg:w="2168"/><text x="61.8845%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,135 samples, 1.72%)</title><rect x="61.6611%" y="485" width="1.7191%" height="15" fill="rgb(206,180,7)" fg:x="76580" fg:w="2135"/><text x="61.9111%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2,135 samples, 1.72%)</title><rect x="61.6611%" y="469" width="1.7191%" height="15" fill="rgb(208,226,31)" fg:x="76580" fg:w="2135"/><text x="61.9111%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,135 samples, 1.72%)</title><rect x="61.6611%" y="453" width="1.7191%" height="15" fill="rgb(218,26,49)" fg:x="76580" fg:w="2135"/><text x="61.9111%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (418 samples, 0.34%)</title><rect x="63.0436%" y="437" width="0.3366%" height="15" fill="rgb(233,197,48)" fg:x="78297" fg:w="418"/><text x="63.2936%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (418 samples, 0.34%)</title><rect x="63.0436%" y="421" width="0.3366%" height="15" fill="rgb(252,181,51)" fg:x="78297" fg:w="418"/><text x="63.2936%" y="431.50"></text></g><g><title>[libc-2.31.so] (418 samples, 0.34%)</title><rect x="63.0436%" y="405" width="0.3366%" height="15" fill="rgb(253,90,19)" fg:x="78297" fg:w="418"/><text x="63.2936%" y="415.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (10,299 samples, 8.29%)</title><rect x="55.0932%" y="613" width="8.2926%" height="15" fill="rgb(215,171,30)" fg:x="68423" fg:w="10299"/><text x="55.3432%" y="623.50">tremor_runti..</text></g><g><title>&lt;futures_util::future::select::Select&lt;A,B&gt; as core::future::future::Future&gt;::poll (6,581 samples, 5.30%)</title><rect x="58.0869%" y="597" width="5.2989%" height="15" fill="rgb(214,222,9)" fg:x="72141" fg:w="6581"/><text x="58.3369%" y="607.50">&lt;futur..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (6,581 samples, 5.30%)</title><rect x="58.0869%" y="581" width="5.2989%" height="15" fill="rgb(223,3,22)" fg:x="72141" fg:w="6581"/><text x="58.3369%" y="591.50">future..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,528 samples, 4.45%)</title><rect x="58.9347%" y="565" width="4.4511%" height="15" fill="rgb(225,196,46)" fg:x="73194" fg:w="5528"/><text x="59.1847%" y="575.50">&lt;core..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (24 samples, 0.02%)</title><rect x="63.5323%" y="549" width="0.0193%" height="15" fill="rgb(209,110,37)" fg:x="78904" fg:w="24"/><text x="63.7823%" y="559.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,010 samples, 0.81%)</title><rect x="63.4196%" y="565" width="0.8132%" height="15" fill="rgb(249,89,12)" fg:x="78764" fg:w="1010"/><text x="63.6696%" y="575.50"></text></g><g><title>[libc-2.31.so] (846 samples, 0.68%)</title><rect x="63.5517%" y="549" width="0.6812%" height="15" fill="rgb(226,27,33)" fg:x="78928" fg:w="846"/><text x="63.8017%" y="559.50"></text></g><g><title>[libc-2.31.so] (445 samples, 0.36%)</title><rect x="64.2329%" y="565" width="0.3583%" height="15" fill="rgb(213,82,22)" fg:x="79774" fg:w="445"/><text x="64.4829%" y="575.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,498 samples, 1.21%)</title><rect x="63.3858%" y="597" width="1.2062%" height="15" fill="rgb(248,140,0)" fg:x="78722" fg:w="1498"/><text x="63.6358%" y="607.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,498 samples, 1.21%)</title><rect x="63.3858%" y="581" width="1.2062%" height="15" fill="rgb(228,106,3)" fg:x="78722" fg:w="1498"/><text x="63.6358%" y="591.50"></text></g><g><title>[libc-2.31.so] (206 samples, 0.17%)</title><rect x="64.6330%" y="581" width="0.1659%" height="15" fill="rgb(209,23,37)" fg:x="80271" fg:w="206"/><text x="64.8830%" y="591.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (17 samples, 0.01%)</title><rect x="65.1476%" y="565" width="0.0137%" height="15" fill="rgb(241,93,50)" fg:x="80910" fg:w="17"/><text x="65.3976%" y="575.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (28 samples, 0.02%)</title><rect x="65.1612%" y="565" width="0.0225%" height="15" fill="rgb(253,46,43)" fg:x="80927" fg:w="28"/><text x="65.4112%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (14 samples, 0.01%)</title><rect x="65.1838%" y="565" width="0.0113%" height="15" fill="rgb(226,206,43)" fg:x="80955" fg:w="14"/><text x="65.4338%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.04%)</title><rect x="65.1951%" y="549" width="0.0419%" height="15" fill="rgb(217,54,7)" fg:x="80969" fg:w="52"/><text x="65.4451%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (17 samples, 0.01%)</title><rect x="65.2232%" y="533" width="0.0137%" height="15" fill="rgb(223,5,52)" fg:x="81004" fg:w="17"/><text x="65.4732%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (15 samples, 0.01%)</title><rect x="65.2248%" y="517" width="0.0121%" height="15" fill="rgb(206,52,46)" fg:x="81006" fg:w="15"/><text x="65.4748%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (886 samples, 0.71%)</title><rect x="65.1951%" y="565" width="0.7134%" height="15" fill="rgb(253,136,11)" fg:x="80969" fg:w="886"/><text x="65.4451%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (834 samples, 0.67%)</title><rect x="65.2369%" y="549" width="0.6715%" height="15" fill="rgb(208,106,33)" fg:x="81021" fg:w="834"/><text x="65.4869%" y="559.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (830 samples, 0.67%)</title><rect x="65.2401%" y="533" width="0.6683%" height="15" fill="rgb(206,54,4)" fg:x="81025" fg:w="830"/><text x="65.4901%" y="543.50"></text></g><g><title>core::ptr::read (830 samples, 0.67%)</title><rect x="65.2401%" y="517" width="0.6683%" height="15" fill="rgb(213,3,15)" fg:x="81025" fg:w="830"/><text x="65.4901%" y="527.50"></text></g><g><title>[libc-2.31.so] (830 samples, 0.67%)</title><rect x="65.2401%" y="501" width="0.6683%" height="15" fill="rgb(252,211,39)" fg:x="81025" fg:w="830"/><text x="65.4901%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="65.9093%" y="565" width="0.0105%" height="15" fill="rgb(223,6,36)" fg:x="81856" fg:w="13"/><text x="66.1593%" y="575.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (22 samples, 0.02%)</title><rect x="66.0598%" y="293" width="0.0177%" height="15" fill="rgb(252,169,45)" fg:x="82043" fg:w="22"/><text x="66.3098%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (197 samples, 0.16%)</title><rect x="65.9197%" y="437" width="0.1586%" height="15" fill="rgb(212,48,26)" fg:x="81869" fg:w="197"/><text x="66.1697%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (197 samples, 0.16%)</title><rect x="65.9197%" y="421" width="0.1586%" height="15" fill="rgb(251,102,48)" fg:x="81869" fg:w="197"/><text x="66.1697%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (197 samples, 0.16%)</title><rect x="65.9197%" y="405" width="0.1586%" height="15" fill="rgb(243,208,16)" fg:x="81869" fg:w="197"/><text x="66.1697%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (196 samples, 0.16%)</title><rect x="65.9205%" y="389" width="0.1578%" height="15" fill="rgb(219,96,24)" fg:x="81870" fg:w="196"/><text x="66.1705%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (196 samples, 0.16%)</title><rect x="65.9205%" y="373" width="0.1578%" height="15" fill="rgb(219,33,29)" fg:x="81870" fg:w="196"/><text x="66.1705%" y="383.50"></text></g><g><title>alloc::alloc::alloc (196 samples, 0.16%)</title><rect x="65.9205%" y="357" width="0.1578%" height="15" fill="rgb(223,176,5)" fg:x="81870" fg:w="196"/><text x="66.1705%" y="367.50"></text></g><g><title>__rg_alloc (196 samples, 0.16%)</title><rect x="65.9205%" y="341" width="0.1578%" height="15" fill="rgb(228,140,14)" fg:x="81870" fg:w="196"/><text x="66.1705%" y="351.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (196 samples, 0.16%)</title><rect x="65.9205%" y="325" width="0.1578%" height="15" fill="rgb(217,179,31)" fg:x="81870" fg:w="196"/><text x="66.1705%" y="335.50"></text></g><g><title>sn_rust_alloc (191 samples, 0.15%)</title><rect x="65.9246%" y="309" width="0.1538%" height="15" fill="rgb(230,9,30)" fg:x="81875" fg:w="191"/><text x="66.1746%" y="319.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (247 samples, 0.20%)</title><rect x="65.9197%" y="565" width="0.1989%" height="15" fill="rgb(230,136,20)" fg:x="81869" fg:w="247"/><text x="66.1697%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (247 samples, 0.20%)</title><rect x="65.9197%" y="549" width="0.1989%" height="15" fill="rgb(215,210,22)" fg:x="81869" fg:w="247"/><text x="66.1697%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (247 samples, 0.20%)</title><rect x="65.9197%" y="533" width="0.1989%" height="15" fill="rgb(218,43,5)" fg:x="81869" fg:w="247"/><text x="66.1697%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (247 samples, 0.20%)</title><rect x="65.9197%" y="517" width="0.1989%" height="15" fill="rgb(216,11,5)" fg:x="81869" fg:w="247"/><text x="66.1697%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (247 samples, 0.20%)</title><rect x="65.9197%" y="501" width="0.1989%" height="15" fill="rgb(209,82,29)" fg:x="81869" fg:w="247"/><text x="66.1697%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (247 samples, 0.20%)</title><rect x="65.9197%" y="485" width="0.1989%" height="15" fill="rgb(244,115,12)" fg:x="81869" fg:w="247"/><text x="66.1697%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (247 samples, 0.20%)</title><rect x="65.9197%" y="469" width="0.1989%" height="15" fill="rgb(222,82,18)" fg:x="81869" fg:w="247"/><text x="66.1697%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (247 samples, 0.20%)</title><rect x="65.9197%" y="453" width="0.1989%" height="15" fill="rgb(249,227,8)" fg:x="81869" fg:w="247"/><text x="66.1697%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (50 samples, 0.04%)</title><rect x="66.0783%" y="437" width="0.0403%" height="15" fill="rgb(253,141,45)" fg:x="82066" fg:w="50"/><text x="66.3283%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.04%)</title><rect x="66.0783%" y="421" width="0.0403%" height="15" fill="rgb(234,184,4)" fg:x="82066" fg:w="50"/><text x="66.3283%" y="431.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.03%)</title><rect x="66.0864%" y="405" width="0.0322%" height="15" fill="rgb(218,194,23)" fg:x="82076" fg:w="40"/><text x="66.3364%" y="415.50"></text></g><g><title>[libc-2.31.so] (786 samples, 0.63%)</title><rect x="66.1186%" y="565" width="0.6329%" height="15" fill="rgb(235,66,41)" fg:x="82116" fg:w="786"/><text x="66.3686%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (16 samples, 0.01%)</title><rect x="66.7515%" y="565" width="0.0129%" height="15" fill="rgb(245,217,1)" fg:x="82902" fg:w="16"/><text x="67.0015%" y="575.50"></text></g><g><title>core::mem::replace (18 samples, 0.01%)</title><rect x="66.7877%" y="533" width="0.0145%" height="15" fill="rgb(229,91,1)" fg:x="82947" fg:w="18"/><text x="67.0377%" y="543.50"></text></g><g><title>core::ptr::write (18 samples, 0.01%)</title><rect x="66.7877%" y="517" width="0.0145%" height="15" fill="rgb(207,101,30)" fg:x="82947" fg:w="18"/><text x="67.0377%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_pipeline::event::Event)&gt;&gt; (58 samples, 0.05%)</title><rect x="66.7644%" y="565" width="0.0467%" height="15" fill="rgb(223,82,49)" fg:x="82918" fg:w="58"/><text x="67.0144%" y="575.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="66.7644%" y="549" width="0.0467%" height="15" fill="rgb(218,167,17)" fg:x="82918" fg:w="58"/><text x="67.0144%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (17 samples, 0.01%)</title><rect x="66.8111%" y="565" width="0.0137%" height="15" fill="rgb(208,103,14)" fg:x="82976" fg:w="17"/><text x="67.0611%" y="575.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="66.8111%" y="549" width="0.0137%" height="15" fill="rgb(238,20,8)" fg:x="82976" fg:w="17"/><text x="67.0611%" y="559.50"></text></g><g><title>beef::generic::Cow&lt;T,U&gt;::borrow (22 samples, 0.02%)</title><rect x="66.8570%" y="517" width="0.0177%" height="15" fill="rgb(218,80,54)" fg:x="83033" fg:w="22"/><text x="67.1070%" y="527.50"></text></g><g><title>&lt;beef::generic::Cow&lt;A,U&gt; as core::cmp::PartialEq&lt;beef::generic::Cow&lt;B,V&gt;&gt;&gt;::eq (140 samples, 0.11%)</title><rect x="66.8570%" y="533" width="0.1127%" height="15" fill="rgb(240,144,17)" fg:x="83033" fg:w="140"/><text x="67.1070%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (118 samples, 0.10%)</title><rect x="66.8747%" y="517" width="0.0950%" height="15" fill="rgb(245,27,50)" fg:x="83055" fg:w="118"/><text x="67.1247%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (118 samples, 0.10%)</title><rect x="66.8747%" y="501" width="0.0950%" height="15" fill="rgb(251,51,7)" fg:x="83055" fg:w="118"/><text x="67.1247%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (118 samples, 0.10%)</title><rect x="66.8747%" y="485" width="0.0950%" height="15" fill="rgb(245,217,29)" fg:x="83055" fg:w="118"/><text x="67.1247%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (118 samples, 0.10%)</title><rect x="66.8747%" y="469" width="0.0950%" height="15" fill="rgb(221,176,29)" fg:x="83055" fg:w="118"/><text x="67.1247%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (118 samples, 0.10%)</title><rect x="66.8747%" y="453" width="0.0950%" height="15" fill="rgb(212,180,24)" fg:x="83055" fg:w="118"/><text x="67.1247%" y="463.50"></text></g><g><title>[libc-2.31.so] (81 samples, 0.07%)</title><rect x="66.9045%" y="437" width="0.0652%" height="15" fill="rgb(254,24,2)" fg:x="83092" fg:w="81"/><text x="67.1545%" y="447.50"></text></g><g><title>halfbrown::HashMap&lt;K,V,S&gt;::get_mut (184 samples, 0.15%)</title><rect x="66.8425%" y="565" width="0.1482%" height="15" fill="rgb(230,100,2)" fg:x="83015" fg:w="184"/><text x="67.0925%" y="575.50"></text></g><g><title>halfbrown::vecmap::VecMap&lt;K,V,S&gt;::get_mut (166 samples, 0.13%)</title><rect x="66.8570%" y="549" width="0.1337%" height="15" fill="rgb(219,142,25)" fg:x="83033" fg:w="166"/><text x="67.1070%" y="559.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.02%)</title><rect x="66.9697%" y="533" width="0.0209%" height="15" fill="rgb(240,73,43)" fg:x="83173" fg:w="26"/><text x="67.2197%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,997 samples, 2.41%)</title><rect x="64.5920%" y="597" width="2.4131%" height="15" fill="rgb(214,114,15)" fg:x="80220" fg:w="2997"/><text x="64.8420%" y="607.50">&lt;c..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (2,740 samples, 2.21%)</title><rect x="64.7989%" y="581" width="2.2062%" height="15" fill="rgb(207,130,4)" fg:x="80477" fg:w="2740"/><text x="65.0489%" y="591.50">t..</text></g><g><title>tremor_script::ast::deploy::DeployEndpoint::port (18 samples, 0.01%)</title><rect x="66.9906%" y="565" width="0.0145%" height="15" fill="rgb(221,25,40)" fg:x="83199" fg:w="18"/><text x="67.2406%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (18 samples, 0.01%)</title><rect x="66.9906%" y="549" width="0.0145%" height="15" fill="rgb(241,184,7)" fg:x="83199" fg:w="18"/><text x="67.2406%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.01%)</title><rect x="66.9906%" y="533" width="0.0145%" height="15" fill="rgb(235,159,4)" fg:x="83199" fg:w="18"/><text x="67.2406%" y="543.50"></text></g><g><title>async_io::driver::block_on (16,314 samples, 13.14%)</title><rect x="53.8709%" y="917" width="13.1358%" height="15" fill="rgb(214,87,48)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="927.50">async_io::driver::bl..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,314 samples, 13.14%)</title><rect x="53.8709%" y="901" width="13.1358%" height="15" fill="rgb(246,198,24)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="911.50">&lt;futures_lite::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,314 samples, 13.14%)</title><rect x="53.8709%" y="885" width="13.1358%" height="15" fill="rgb(209,66,40)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="895.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::run::{{closure}} (16,314 samples, 13.14%)</title><rect x="53.8709%" y="869" width="13.1358%" height="15" fill="rgb(233,147,39)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="879.50">async_executor::Exec..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,314 samples, 13.14%)</title><rect x="53.8709%" y="853" width="13.1358%" height="15" fill="rgb(231,145,52)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="863.50">&lt;futures_lite::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,314 samples, 13.14%)</title><rect x="53.8709%" y="837" width="13.1358%" height="15" fill="rgb(206,20,26)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="847.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (16,314 samples, 13.14%)</title><rect x="53.8709%" y="821" width="13.1358%" height="15" fill="rgb(238,220,4)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="831.50">async_executor::Exec..</text></g><g><title>async_task::runnable::Runnable::run (16,314 samples, 13.14%)</title><rect x="53.8709%" y="805" width="13.1358%" height="15" fill="rgb(252,195,42)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="815.50">async_task::runnable..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (16,314 samples, 13.14%)</title><rect x="53.8709%" y="789" width="13.1358%" height="15" fill="rgb(209,10,6)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="799.50">async_task::raw::Raw..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16,314 samples, 13.14%)</title><rect x="53.8709%" y="773" width="13.1358%" height="15" fill="rgb(229,3,52)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="783.50">&lt;core::pin::Pin&lt;P&gt; a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,314 samples, 13.14%)</title><rect x="53.8709%" y="757" width="13.1358%" height="15" fill="rgb(253,49,37)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="767.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (16,314 samples, 13.14%)</title><rect x="53.8709%" y="741" width="13.1358%" height="15" fill="rgb(240,103,49)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="751.50">async_executor::Exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (16,314 samples, 13.14%)</title><rect x="53.8709%" y="725" width="13.1358%" height="15" fill="rgb(250,182,30)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="735.50">&lt;async_std::task::bu..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (16,314 samples, 13.14%)</title><rect x="53.8709%" y="709" width="13.1358%" height="15" fill="rgb(248,8,30)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="719.50">async_std::task::tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16,314 samples, 13.14%)</title><rect x="53.8709%" y="693" width="13.1358%" height="15" fill="rgb(237,120,30)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="703.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,314 samples, 13.14%)</title><rect x="53.8709%" y="677" width="13.1358%" height="15" fill="rgb(221,146,34)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="687.50">std::thread::local::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (16,314 samples, 13.14%)</title><rect x="53.8709%" y="661" width="13.1358%" height="15" fill="rgb(242,55,13)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="671.50">async_std::task::tas..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (16,314 samples, 13.14%)</title><rect x="53.8709%" y="645" width="13.1358%" height="15" fill="rgb(242,112,31)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="655.50">&lt;async_std::task::bu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,314 samples, 13.14%)</title><rect x="53.8709%" y="629" width="13.1358%" height="15" fill="rgb(249,192,27)" fg:x="66905" fg:w="16314"/><text x="54.1209%" y="639.50">&lt;core::future::from_..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (4,497 samples, 3.62%)</title><rect x="63.3858%" y="613" width="3.6209%" height="15" fill="rgb(208,204,44)" fg:x="78722" fg:w="4497"/><text x="63.6358%" y="623.50">trem..</text></g><g><title>async_io::reactor::Reactor::process_timers (21 samples, 0.02%)</title><rect x="67.0091%" y="917" width="0.0169%" height="15" fill="rgb(208,93,54)" fg:x="83222" fg:w="21"/><text x="67.2591%" y="927.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.02%)</title><rect x="67.0357%" y="549" width="0.0177%" height="15" fill="rgb(242,1,31)" fg:x="83255" fg:w="22"/><text x="67.2857%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="67.0357%" y="533" width="0.0177%" height="15" fill="rgb(241,83,25)" fg:x="83255" fg:w="22"/><text x="67.2857%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="67.0357%" y="517" width="0.0177%" height="15" fill="rgb(205,169,50)" fg:x="83255" fg:w="22"/><text x="67.2857%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (22 samples, 0.02%)</title><rect x="67.0357%" y="501" width="0.0177%" height="15" fill="rgb(239,186,37)" fg:x="83255" fg:w="22"/><text x="67.2857%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (22 samples, 0.02%)</title><rect x="67.0357%" y="485" width="0.0177%" height="15" fill="rgb(205,221,10)" fg:x="83255" fg:w="22"/><text x="67.2857%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (17 samples, 0.01%)</title><rect x="67.0397%" y="469" width="0.0137%" height="15" fill="rgb(218,196,15)" fg:x="83260" fg:w="17"/><text x="67.2897%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (24 samples, 0.02%)</title><rect x="67.0808%" y="501" width="0.0193%" height="15" fill="rgb(218,196,35)" fg:x="83311" fg:w="24"/><text x="67.3308%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="67.0816%" y="485" width="0.0185%" height="15" fill="rgb(233,63,24)" fg:x="83312" fg:w="23"/><text x="67.3316%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="67.0816%" y="469" width="0.0185%" height="15" fill="rgb(225,8,4)" fg:x="83312" fg:w="23"/><text x="67.3316%" y="479.50"></text></g><g><title>async_executor::Sleepers::notify (17 samples, 0.01%)</title><rect x="67.1042%" y="453" width="0.0137%" height="15" fill="rgb(234,105,35)" fg:x="83340" fg:w="17"/><text x="67.3542%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (52 samples, 0.04%)</title><rect x="67.1178%" y="453" width="0.0419%" height="15" fill="rgb(236,21,32)" fg:x="83357" fg:w="52"/><text x="67.3678%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.04%)</title><rect x="67.1178%" y="437" width="0.0419%" height="15" fill="rgb(228,109,6)" fg:x="83357" fg:w="52"/><text x="67.3678%" y="447.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (52 samples, 0.04%)</title><rect x="67.1178%" y="421" width="0.0419%" height="15" fill="rgb(229,215,31)" fg:x="83357" fg:w="52"/><text x="67.3678%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (52 samples, 0.04%)</title><rect x="67.1178%" y="405" width="0.0419%" height="15" fill="rgb(221,52,54)" fg:x="83357" fg:w="52"/><text x="67.3678%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (52 samples, 0.04%)</title><rect x="67.1178%" y="389" width="0.0419%" height="15" fill="rgb(252,129,43)" fg:x="83357" fg:w="52"/><text x="67.3678%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_swap (52 samples, 0.04%)</title><rect x="67.1178%" y="373" width="0.0419%" height="15" fill="rgb(248,183,27)" fg:x="83357" fg:w="52"/><text x="67.3678%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (37 samples, 0.03%)</title><rect x="67.1597%" y="453" width="0.0298%" height="15" fill="rgb(250,0,22)" fg:x="83409" fg:w="37"/><text x="67.4097%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.03%)</title><rect x="67.1597%" y="437" width="0.0298%" height="15" fill="rgb(213,166,10)" fg:x="83409" fg:w="37"/><text x="67.4097%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (14 samples, 0.01%)</title><rect x="67.2024%" y="373" width="0.0113%" height="15" fill="rgb(207,163,36)" fg:x="83462" fg:w="14"/><text x="67.4524%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="67.2024%" y="357" width="0.0113%" height="15" fill="rgb(208,122,22)" fg:x="83462" fg:w="14"/><text x="67.4524%" y="367.50"></text></g><g><title>async_io::reactor::Reactor::notify (37 samples, 0.03%)</title><rect x="67.1984%" y="405" width="0.0298%" height="15" fill="rgb(207,104,49)" fg:x="83457" fg:w="37"/><text x="67.4484%" y="415.50"></text></g><g><title>polling::Poller::notify (32 samples, 0.03%)</title><rect x="67.2024%" y="389" width="0.0258%" height="15" fill="rgb(248,211,50)" fg:x="83462" fg:w="32"/><text x="67.4524%" y="399.50"></text></g><g><title>polling::epoll::Poller::notify (18 samples, 0.01%)</title><rect x="67.2137%" y="373" width="0.0145%" height="15" fill="rgb(217,13,45)" fg:x="83476" fg:w="18"/><text x="67.4637%" y="383.50"></text></g><g><title>__libc_write (14 samples, 0.01%)</title><rect x="67.2169%" y="357" width="0.0113%" height="15" fill="rgb(211,216,49)" fg:x="83480" fg:w="14"/><text x="67.4669%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (19 samples, 0.02%)</title><rect x="67.2281%" y="405" width="0.0153%" height="15" fill="rgb(221,58,53)" fg:x="83494" fg:w="19"/><text x="67.4781%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.02%)</title><rect x="67.2281%" y="389" width="0.0153%" height="15" fill="rgb(220,112,41)" fg:x="83494" fg:w="19"/><text x="67.4781%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (42 samples, 0.03%)</title><rect x="67.2700%" y="373" width="0.0338%" height="15" fill="rgb(236,38,28)" fg:x="83546" fg:w="42"/><text x="67.5200%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (42 samples, 0.03%)</title><rect x="67.2700%" y="357" width="0.0338%" height="15" fill="rgb(227,195,22)" fg:x="83546" fg:w="42"/><text x="67.5200%" y="367.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (24 samples, 0.02%)</title><rect x="67.3038%" y="373" width="0.0193%" height="15" fill="rgb(214,55,33)" fg:x="83588" fg:w="24"/><text x="67.5538%" y="383.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (24 samples, 0.02%)</title><rect x="67.3038%" y="357" width="0.0193%" height="15" fill="rgb(248,80,13)" fg:x="83588" fg:w="24"/><text x="67.5538%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (24 samples, 0.02%)</title><rect x="67.3038%" y="341" width="0.0193%" height="15" fill="rgb(238,52,6)" fg:x="83588" fg:w="24"/><text x="67.5538%" y="351.50"></text></g><g><title>parking::Unparker::unpark (111 samples, 0.09%)</title><rect x="67.2434%" y="405" width="0.0894%" height="15" fill="rgb(224,198,47)" fg:x="83513" fg:w="111"/><text x="67.4934%" y="415.50"></text></g><g><title>parking::Inner::unpark (90 samples, 0.07%)</title><rect x="67.2604%" y="389" width="0.0725%" height="15" fill="rgb(233,171,20)" fg:x="83534" fg:w="90"/><text x="67.5104%" y="399.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (185 samples, 0.15%)</title><rect x="67.1895%" y="421" width="0.1490%" height="15" fill="rgb(241,30,25)" fg:x="83446" fg:w="185"/><text x="67.4395%" y="431.50"></text></g><g><title>core::task::wake::Waker::wake (243 samples, 0.20%)</title><rect x="67.1895%" y="453" width="0.1957%" height="15" fill="rgb(207,171,38)" fg:x="83446" fg:w="243"/><text x="67.4395%" y="463.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (243 samples, 0.20%)</title><rect x="67.1895%" y="437" width="0.1957%" height="15" fill="rgb(234,70,1)" fg:x="83446" fg:w="243"/><text x="67.4395%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (58 samples, 0.05%)</title><rect x="67.3385%" y="421" width="0.0467%" height="15" fill="rgb(232,178,18)" fg:x="83631" fg:w="58"/><text x="67.5885%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="67.3385%" y="405" width="0.0467%" height="15" fill="rgb(241,78,40)" fg:x="83631" fg:w="58"/><text x="67.5885%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (58 samples, 0.05%)</title><rect x="67.3385%" y="389" width="0.0467%" height="15" fill="rgb(222,35,25)" fg:x="83631" fg:w="58"/><text x="67.5885%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (58 samples, 0.05%)</title><rect x="67.3385%" y="373" width="0.0467%" height="15" fill="rgb(207,92,16)" fg:x="83631" fg:w="58"/><text x="67.5885%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (42 samples, 0.03%)</title><rect x="67.3884%" y="405" width="0.0338%" height="15" fill="rgb(216,59,51)" fg:x="83693" fg:w="42"/><text x="67.6384%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.03%)</title><rect x="67.3884%" y="389" width="0.0338%" height="15" fill="rgb(213,80,28)" fg:x="83693" fg:w="42"/><text x="67.6384%" y="399.50"></text></g><g><title>async_executor::State::notify (410 samples, 0.33%)</title><rect x="67.1017%" y="469" width="0.3301%" height="15" fill="rgb(220,93,7)" fg:x="83337" fg:w="410"/><text x="67.3517%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.05%)</title><rect x="67.3852%" y="453" width="0.0467%" height="15" fill="rgb(225,24,44)" fg:x="83689" fg:w="58"/><text x="67.6352%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.04%)</title><rect x="67.3876%" y="437" width="0.0443%" height="15" fill="rgb(243,74,40)" fg:x="83692" fg:w="55"/><text x="67.6376%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (55 samples, 0.04%)</title><rect x="67.3876%" y="421" width="0.0443%" height="15" fill="rgb(228,39,7)" fg:x="83692" fg:w="55"/><text x="67.6376%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (92 samples, 0.07%)</title><rect x="67.4455%" y="437" width="0.0741%" height="15" fill="rgb(227,79,8)" fg:x="83764" fg:w="92"/><text x="67.6955%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (92 samples, 0.07%)</title><rect x="67.4455%" y="421" width="0.0741%" height="15" fill="rgb(236,58,11)" fg:x="83764" fg:w="92"/><text x="67.6955%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (37 samples, 0.03%)</title><rect x="67.5220%" y="437" width="0.0298%" height="15" fill="rgb(249,63,35)" fg:x="83859" fg:w="37"/><text x="67.7720%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_or (37 samples, 0.03%)</title><rect x="67.5220%" y="421" width="0.0298%" height="15" fill="rgb(252,114,16)" fg:x="83859" fg:w="37"/><text x="67.7720%" y="431.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (560 samples, 0.45%)</title><rect x="67.1017%" y="485" width="0.4509%" height="15" fill="rgb(254,151,24)" fg:x="83337" fg:w="560"/><text x="67.3517%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (150 samples, 0.12%)</title><rect x="67.4319%" y="469" width="0.1208%" height="15" fill="rgb(253,54,39)" fg:x="83747" fg:w="150"/><text x="67.6819%" y="479.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (148 samples, 0.12%)</title><rect x="67.4335%" y="453" width="0.1192%" height="15" fill="rgb(243,25,45)" fg:x="83749" fg:w="148"/><text x="67.6835%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (143 samples, 0.12%)</title><rect x="67.5526%" y="485" width="0.1151%" height="15" fill="rgb(234,134,9)" fg:x="83897" fg:w="143"/><text x="67.8026%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (143 samples, 0.12%)</title><rect x="67.5526%" y="469" width="0.1151%" height="15" fill="rgb(227,166,31)" fg:x="83897" fg:w="143"/><text x="67.8026%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (821 samples, 0.66%)</title><rect x="67.0357%" y="661" width="0.6611%" height="15" fill="rgb(245,143,41)" fg:x="83255" fg:w="821"/><text x="67.2857%" y="671.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::route_events::{{closure}} (821 samples, 0.66%)</title><rect x="67.0357%" y="645" width="0.6611%" height="15" fill="rgb(238,181,32)" fg:x="83255" fg:w="821"/><text x="67.2857%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (821 samples, 0.66%)</title><rect x="67.0357%" y="629" width="0.6611%" height="15" fill="rgb(224,113,18)" fg:x="83255" fg:w="821"/><text x="67.2857%" y="639.50"></text></g><g><title>tremor_runtime::pipeline::Addr::send::{{closure}} (821 samples, 0.66%)</title><rect x="67.0357%" y="613" width="0.6611%" height="15" fill="rgb(240,229,28)" fg:x="83255" fg:w="821"/><text x="67.2857%" y="623.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (821 samples, 0.66%)</title><rect x="67.0357%" y="597" width="0.6611%" height="15" fill="rgb(250,185,3)" fg:x="83255" fg:w="821"/><text x="67.2857%" y="607.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (821 samples, 0.66%)</title><rect x="67.0357%" y="581" width="0.6611%" height="15" fill="rgb(212,59,25)" fg:x="83255" fg:w="821"/><text x="67.2857%" y="591.50"></text></g><g><title>event_listener::Event::notify (821 samples, 0.66%)</title><rect x="67.0357%" y="565" width="0.6611%" height="15" fill="rgb(221,87,20)" fg:x="83255" fg:w="821"/><text x="67.2857%" y="575.50"></text></g><g><title>event_listener::List::notify (799 samples, 0.64%)</title><rect x="67.0534%" y="549" width="0.6433%" height="15" fill="rgb(213,74,28)" fg:x="83277" fg:w="799"/><text x="67.3034%" y="559.50"></text></g><g><title>core::task::wake::Waker::wake (767 samples, 0.62%)</title><rect x="67.0792%" y="533" width="0.6176%" height="15" fill="rgb(224,132,34)" fg:x="83309" fg:w="767"/><text x="67.3292%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (766 samples, 0.62%)</title><rect x="67.0800%" y="517" width="0.6168%" height="15" fill="rgb(222,101,24)" fg:x="83310" fg:w="766"/><text x="67.3300%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (741 samples, 0.60%)</title><rect x="67.1001%" y="501" width="0.5966%" height="15" fill="rgb(254,142,4)" fg:x="83335" fg:w="741"/><text x="67.3501%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.03%)</title><rect x="67.6678%" y="485" width="0.0290%" height="15" fill="rgb(230,229,49)" fg:x="84040" fg:w="36"/><text x="67.9178%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.03%)</title><rect x="67.6678%" y="469" width="0.0290%" height="15" fill="rgb(238,70,47)" fg:x="84040" fg:w="36"/><text x="67.9178%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.04%)</title><rect x="68.7451%" y="645" width="0.0395%" height="15" fill="rgb(231,160,17)" fg:x="85378" fg:w="49"/><text x="68.9951%" y="655.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="68.7846%" y="645" width="0.0161%" height="15" fill="rgb(218,68,53)" fg:x="85427" fg:w="20"/><text x="69.0346%" y="655.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (44 samples, 0.04%)</title><rect x="69.2765%" y="405" width="0.0354%" height="15" fill="rgb(236,111,10)" fg:x="86038" fg:w="44"/><text x="69.5265%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (191 samples, 0.15%)</title><rect x="69.1598%" y="549" width="0.1538%" height="15" fill="rgb(224,34,41)" fg:x="85893" fg:w="191"/><text x="69.4098%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (191 samples, 0.15%)</title><rect x="69.1598%" y="533" width="0.1538%" height="15" fill="rgb(241,118,19)" fg:x="85893" fg:w="191"/><text x="69.4098%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (191 samples, 0.15%)</title><rect x="69.1598%" y="517" width="0.1538%" height="15" fill="rgb(238,129,25)" fg:x="85893" fg:w="191"/><text x="69.4098%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (187 samples, 0.15%)</title><rect x="69.1630%" y="501" width="0.1506%" height="15" fill="rgb(238,22,31)" fg:x="85897" fg:w="187"/><text x="69.4130%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (187 samples, 0.15%)</title><rect x="69.1630%" y="485" width="0.1506%" height="15" fill="rgb(222,174,48)" fg:x="85897" fg:w="187"/><text x="69.4130%" y="495.50"></text></g><g><title>alloc::alloc::alloc (187 samples, 0.15%)</title><rect x="69.1630%" y="469" width="0.1506%" height="15" fill="rgb(206,152,40)" fg:x="85897" fg:w="187"/><text x="69.4130%" y="479.50"></text></g><g><title>__rg_alloc (187 samples, 0.15%)</title><rect x="69.1630%" y="453" width="0.1506%" height="15" fill="rgb(218,99,54)" fg:x="85897" fg:w="187"/><text x="69.4130%" y="463.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (187 samples, 0.15%)</title><rect x="69.1630%" y="437" width="0.1506%" height="15" fill="rgb(220,174,26)" fg:x="85897" fg:w="187"/><text x="69.4130%" y="447.50"></text></g><g><title>sn_rust_alloc (174 samples, 0.14%)</title><rect x="69.1735%" y="421" width="0.1401%" height="15" fill="rgb(245,116,9)" fg:x="85910" fg:w="174"/><text x="69.4235%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (302 samples, 0.24%)</title><rect x="69.1308%" y="629" width="0.2432%" height="15" fill="rgb(209,72,35)" fg:x="85857" fg:w="302"/><text x="69.3808%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (266 samples, 0.21%)</title><rect x="69.1598%" y="613" width="0.2142%" height="15" fill="rgb(226,126,21)" fg:x="85893" fg:w="266"/><text x="69.4098%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (266 samples, 0.21%)</title><rect x="69.1598%" y="597" width="0.2142%" height="15" fill="rgb(227,192,1)" fg:x="85893" fg:w="266"/><text x="69.4098%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (266 samples, 0.21%)</title><rect x="69.1598%" y="581" width="0.2142%" height="15" fill="rgb(237,180,29)" fg:x="85893" fg:w="266"/><text x="69.4098%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (266 samples, 0.21%)</title><rect x="69.1598%" y="565" width="0.2142%" height="15" fill="rgb(230,197,35)" fg:x="85893" fg:w="266"/><text x="69.4098%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (75 samples, 0.06%)</title><rect x="69.3136%" y="549" width="0.0604%" height="15" fill="rgb(246,193,31)" fg:x="86084" fg:w="75"/><text x="69.5636%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.06%)</title><rect x="69.3136%" y="533" width="0.0604%" height="15" fill="rgb(241,36,4)" fg:x="86084" fg:w="75"/><text x="69.5636%" y="543.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.04%)</title><rect x="69.3321%" y="517" width="0.0419%" height="15" fill="rgb(241,130,17)" fg:x="86107" fg:w="52"/><text x="69.5821%" y="527.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (95 samples, 0.08%)</title><rect x="69.4263%" y="341" width="0.0765%" height="15" fill="rgb(206,137,32)" fg:x="86224" fg:w="95"/><text x="69.6763%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (155 samples, 0.12%)</title><rect x="69.3812%" y="485" width="0.1248%" height="15" fill="rgb(237,228,51)" fg:x="86168" fg:w="155"/><text x="69.6312%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (155 samples, 0.12%)</title><rect x="69.3812%" y="469" width="0.1248%" height="15" fill="rgb(243,6,42)" fg:x="86168" fg:w="155"/><text x="69.6312%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (155 samples, 0.12%)</title><rect x="69.3812%" y="453" width="0.1248%" height="15" fill="rgb(251,74,28)" fg:x="86168" fg:w="155"/><text x="69.6312%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (144 samples, 0.12%)</title><rect x="69.3901%" y="437" width="0.1159%" height="15" fill="rgb(218,20,49)" fg:x="86179" fg:w="144"/><text x="69.6401%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (144 samples, 0.12%)</title><rect x="69.3901%" y="421" width="0.1159%" height="15" fill="rgb(238,28,14)" fg:x="86179" fg:w="144"/><text x="69.6401%" y="431.50"></text></g><g><title>alloc::alloc::alloc (144 samples, 0.12%)</title><rect x="69.3901%" y="405" width="0.1159%" height="15" fill="rgb(229,40,46)" fg:x="86179" fg:w="144"/><text x="69.6401%" y="415.50"></text></g><g><title>__rg_alloc (144 samples, 0.12%)</title><rect x="69.3901%" y="389" width="0.1159%" height="15" fill="rgb(244,195,20)" fg:x="86179" fg:w="144"/><text x="69.6401%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (144 samples, 0.12%)</title><rect x="69.3901%" y="373" width="0.1159%" height="15" fill="rgb(253,56,35)" fg:x="86179" fg:w="144"/><text x="69.6401%" y="383.50"></text></g><g><title>sn_rust_alloc (135 samples, 0.11%)</title><rect x="69.3973%" y="357" width="0.1087%" height="15" fill="rgb(210,149,44)" fg:x="86188" fg:w="135"/><text x="69.6473%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (203 samples, 0.16%)</title><rect x="69.3796%" y="565" width="0.1635%" height="15" fill="rgb(240,135,12)" fg:x="86166" fg:w="203"/><text x="69.6296%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (201 samples, 0.16%)</title><rect x="69.3812%" y="549" width="0.1618%" height="15" fill="rgb(251,24,50)" fg:x="86168" fg:w="201"/><text x="69.6312%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (201 samples, 0.16%)</title><rect x="69.3812%" y="533" width="0.1618%" height="15" fill="rgb(243,200,47)" fg:x="86168" fg:w="201"/><text x="69.6312%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (201 samples, 0.16%)</title><rect x="69.3812%" y="517" width="0.1618%" height="15" fill="rgb(224,166,26)" fg:x="86168" fg:w="201"/><text x="69.6312%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (201 samples, 0.16%)</title><rect x="69.3812%" y="501" width="0.1618%" height="15" fill="rgb(233,0,47)" fg:x="86168" fg:w="201"/><text x="69.6312%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (46 samples, 0.04%)</title><rect x="69.5060%" y="485" width="0.0370%" height="15" fill="rgb(253,80,5)" fg:x="86323" fg:w="46"/><text x="69.7560%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.04%)</title><rect x="69.5060%" y="469" width="0.0370%" height="15" fill="rgb(214,133,25)" fg:x="86323" fg:w="46"/><text x="69.7560%" y="479.50"></text></g><g><title>[libc-2.31.so] (34 samples, 0.03%)</title><rect x="69.5157%" y="453" width="0.0274%" height="15" fill="rgb(209,27,14)" fg:x="86335" fg:w="34"/><text x="69.7657%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="69.5431%" y="565" width="0.0354%" height="15" fill="rgb(219,102,51)" fg:x="86369" fg:w="44"/><text x="69.7931%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.02%)</title><rect x="69.5543%" y="549" width="0.0242%" height="15" fill="rgb(237,18,16)" fg:x="86383" fg:w="30"/><text x="69.8043%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.02%)</title><rect x="69.5543%" y="533" width="0.0242%" height="15" fill="rgb(241,85,17)" fg:x="86383" fg:w="30"/><text x="69.8043%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.08%)</title><rect x="69.5978%" y="517" width="0.0757%" height="15" fill="rgb(236,90,42)" fg:x="86437" fg:w="94"/><text x="69.8478%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.08%)</title><rect x="69.5978%" y="501" width="0.0757%" height="15" fill="rgb(249,57,21)" fg:x="86437" fg:w="94"/><text x="69.8478%" y="511.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.08%)</title><rect x="69.5978%" y="485" width="0.0757%" height="15" fill="rgb(243,12,36)" fg:x="86437" fg:w="94"/><text x="69.8478%" y="495.50"></text></g><g><title>__rg_alloc (94 samples, 0.08%)</title><rect x="69.5978%" y="469" width="0.0757%" height="15" fill="rgb(253,128,47)" fg:x="86437" fg:w="94"/><text x="69.8478%" y="479.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (94 samples, 0.08%)</title><rect x="69.5978%" y="453" width="0.0757%" height="15" fill="rgb(207,33,20)" fg:x="86437" fg:w="94"/><text x="69.8478%" y="463.50"></text></g><g><title>sn_rust_alloc (81 samples, 0.07%)</title><rect x="69.6083%" y="437" width="0.0652%" height="15" fill="rgb(233,215,35)" fg:x="86450" fg:w="81"/><text x="69.8583%" y="447.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (40 samples, 0.03%)</title><rect x="69.6413%" y="421" width="0.0322%" height="15" fill="rgb(249,188,52)" fg:x="86491" fg:w="40"/><text x="69.8913%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (129 samples, 0.10%)</title><rect x="69.5785%" y="565" width="0.1039%" height="15" fill="rgb(225,12,32)" fg:x="86413" fg:w="129"/><text x="69.8285%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (116 samples, 0.09%)</title><rect x="69.5890%" y="549" width="0.0934%" height="15" fill="rgb(247,98,14)" fg:x="86426" fg:w="116"/><text x="69.8390%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (116 samples, 0.09%)</title><rect x="69.5890%" y="533" width="0.0934%" height="15" fill="rgb(247,219,48)" fg:x="86426" fg:w="116"/><text x="69.8390%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (395 samples, 0.32%)</title><rect x="69.3740%" y="629" width="0.3180%" height="15" fill="rgb(253,60,48)" fg:x="86159" fg:w="395"/><text x="69.6240%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (395 samples, 0.32%)</title><rect x="69.3740%" y="613" width="0.3180%" height="15" fill="rgb(245,15,52)" fg:x="86159" fg:w="395"/><text x="69.6240%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (395 samples, 0.32%)</title><rect x="69.3740%" y="597" width="0.3180%" height="15" fill="rgb(220,133,28)" fg:x="86159" fg:w="395"/><text x="69.6240%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (395 samples, 0.32%)</title><rect x="69.3740%" y="581" width="0.3180%" height="15" fill="rgb(217,180,4)" fg:x="86159" fg:w="395"/><text x="69.6240%" y="591.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (1,112 samples, 0.90%)</title><rect x="68.8007%" y="645" width="0.8954%" height="15" fill="rgb(251,24,1)" fg:x="85447" fg:w="1112"/><text x="69.0507%" y="655.50"></text></g><g><title>[libc-2.31.so] (109 samples, 0.09%)</title><rect x="69.6960%" y="645" width="0.0878%" height="15" fill="rgb(212,185,49)" fg:x="86559" fg:w="109"/><text x="69.9460%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (342 samples, 0.28%)</title><rect x="69.7902%" y="645" width="0.2754%" height="15" fill="rgb(215,175,22)" fg:x="86676" fg:w="342"/><text x="70.0402%" y="655.50"></text></g><g><title>core::ptr::write (317 samples, 0.26%)</title><rect x="69.8104%" y="629" width="0.2552%" height="15" fill="rgb(250,205,14)" fg:x="86701" fg:w="317"/><text x="70.0604%" y="639.50"></text></g><g><title>[libc-2.31.so] (317 samples, 0.26%)</title><rect x="69.8104%" y="613" width="0.2552%" height="15" fill="rgb(225,211,22)" fg:x="86701" fg:w="317"/><text x="70.0604%" y="623.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (1,031 samples, 0.83%)</title><rect x="70.1453%" y="485" width="0.8301%" height="15" fill="rgb(251,179,42)" fg:x="87117" fg:w="1031"/><text x="70.3953%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,121 samples, 0.90%)</title><rect x="70.0825%" y="581" width="0.9026%" height="15" fill="rgb(208,216,51)" fg:x="87039" fg:w="1121"/><text x="70.3325%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,121 samples, 0.90%)</title><rect x="70.0825%" y="565" width="0.9026%" height="15" fill="rgb(235,36,11)" fg:x="87039" fg:w="1121"/><text x="70.3325%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1,121 samples, 0.90%)</title><rect x="70.0825%" y="549" width="0.9026%" height="15" fill="rgb(213,189,28)" fg:x="87039" fg:w="1121"/><text x="70.3325%" y="559.50"></text></g><g><title>__rg_alloc (1,121 samples, 0.90%)</title><rect x="70.0825%" y="533" width="0.9026%" height="15" fill="rgb(227,203,42)" fg:x="87039" fg:w="1121"/><text x="70.3325%" y="543.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,121 samples, 0.90%)</title><rect x="70.0825%" y="517" width="0.9026%" height="15" fill="rgb(244,72,36)" fg:x="87039" fg:w="1121"/><text x="70.3325%" y="527.50"></text></g><g><title>sn_rust_alloc (1,112 samples, 0.90%)</title><rect x="70.0898%" y="501" width="0.8954%" height="15" fill="rgb(213,53,17)" fg:x="87048" fg:w="1112"/><text x="70.3398%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,157 samples, 0.93%)</title><rect x="70.0656%" y="645" width="0.9316%" height="15" fill="rgb(207,167,3)" fg:x="87018" fg:w="1157"/><text x="70.3156%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,157 samples, 0.93%)</title><rect x="70.0656%" y="629" width="0.9316%" height="15" fill="rgb(216,98,30)" fg:x="87018" fg:w="1157"/><text x="70.3156%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,148 samples, 0.92%)</title><rect x="70.0729%" y="613" width="0.9244%" height="15" fill="rgb(236,123,15)" fg:x="87027" fg:w="1148"/><text x="70.3229%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,148 samples, 0.92%)</title><rect x="70.0729%" y="597" width="0.9244%" height="15" fill="rgb(248,81,50)" fg:x="87027" fg:w="1148"/><text x="70.3229%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::array (15 samples, 0.01%)</title><rect x="70.9851%" y="581" width="0.0121%" height="15" fill="rgb(214,120,4)" fg:x="88160" fg:w="15"/><text x="71.2351%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (15 samples, 0.01%)</title><rect x="70.9851%" y="565" width="0.0121%" height="15" fill="rgb(208,179,34)" fg:x="88160" fg:w="15"/><text x="71.2351%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (15 samples, 0.01%)</title><rect x="70.9851%" y="549" width="0.0121%" height="15" fill="rgb(227,140,7)" fg:x="88160" fg:w="15"/><text x="71.2351%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (67 samples, 0.05%)</title><rect x="71.0077%" y="549" width="0.0539%" height="15" fill="rgb(214,22,6)" fg:x="88188" fg:w="67"/><text x="71.2577%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (67 samples, 0.05%)</title><rect x="71.0077%" y="533" width="0.0539%" height="15" fill="rgb(207,137,27)" fg:x="88188" fg:w="67"/><text x="71.2577%" y="543.50"></text></g><g><title>__rg_dealloc (67 samples, 0.05%)</title><rect x="71.0077%" y="517" width="0.0539%" height="15" fill="rgb(210,8,46)" fg:x="88188" fg:w="67"/><text x="71.2577%" y="527.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (67 samples, 0.05%)</title><rect x="71.0077%" y="501" width="0.0539%" height="15" fill="rgb(240,16,54)" fg:x="88188" fg:w="67"/><text x="71.2577%" y="511.50"></text></g><g><title>sn_rust_dealloc (61 samples, 0.05%)</title><rect x="71.0125%" y="485" width="0.0491%" height="15" fill="rgb(211,209,29)" fg:x="88194" fg:w="61"/><text x="71.2625%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (92 samples, 0.07%)</title><rect x="70.9972%" y="645" width="0.0741%" height="15" fill="rgb(226,228,24)" fg:x="88175" fg:w="92"/><text x="71.2472%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.07%)</title><rect x="70.9972%" y="629" width="0.0741%" height="15" fill="rgb(222,84,9)" fg:x="88175" fg:w="92"/><text x="71.2472%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::vec::Vec&lt;u8&gt;,alloc::alloc::Global&gt;&gt; (79 samples, 0.06%)</title><rect x="71.0077%" y="613" width="0.0636%" height="15" fill="rgb(234,203,30)" fg:x="88188" fg:w="79"/><text x="71.2577%" y="623.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.06%)</title><rect x="71.0077%" y="597" width="0.0636%" height="15" fill="rgb(238,109,14)" fg:x="88188" fg:w="79"/><text x="71.2577%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (79 samples, 0.06%)</title><rect x="71.0077%" y="581" width="0.0636%" height="15" fill="rgb(233,206,34)" fg:x="88188" fg:w="79"/><text x="71.2577%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.06%)</title><rect x="71.0077%" y="565" width="0.0636%" height="15" fill="rgb(220,167,47)" fg:x="88188" fg:w="79"/><text x="71.2577%" y="575.50"></text></g><g><title>tremor_runtime::connectors::source::build_event (27 samples, 0.02%)</title><rect x="71.0713%" y="645" width="0.0217%" height="15" fill="rgb(238,105,10)" fg:x="88267" fg:w="27"/><text x="71.3213%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,046 samples, 4.06%)</title><rect x="67.0357%" y="725" width="4.0630%" height="15" fill="rgb(213,227,17)" fg:x="83255" fg:w="5046"/><text x="67.2857%" y="735.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (5,046 samples, 4.06%)</title><rect x="67.0357%" y="709" width="4.0630%" height="15" fill="rgb(217,132,38)" fg:x="83255" fg:w="5046"/><text x="67.2857%" y="719.50">trem..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,046 samples, 4.06%)</title><rect x="67.0357%" y="693" width="4.0630%" height="15" fill="rgb(242,146,4)" fg:x="83255" fg:w="5046"/><text x="67.2857%" y="703.50">&lt;cor..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (5,046 samples, 4.06%)</title><rect x="67.0357%" y="677" width="4.0630%" height="15" fill="rgb(212,61,9)" fg:x="83255" fg:w="5046"/><text x="67.2857%" y="687.50">trem..</text></g><g><title>tremor_runtime::connectors::source::build_events (4,225 samples, 3.40%)</title><rect x="67.6968%" y="661" width="3.4019%" height="15" fill="rgb(247,126,22)" fg:x="84076" fg:w="4225"/><text x="67.9468%" y="671.50">tre..</text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (5,047 samples, 4.06%)</title><rect x="67.0357%" y="741" width="4.0638%" height="15" fill="rgb(220,196,2)" fg:x="83255" fg:w="5047"/><text x="67.2857%" y="751.50">trem..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (231 samples, 0.19%)</title><rect x="71.3000%" y="613" width="0.1860%" height="15" fill="rgb(208,46,4)" fg:x="88551" fg:w="231"/><text x="71.5500%" y="623.50"></text></g><g><title>core::mem::replace (231 samples, 0.19%)</title><rect x="71.3000%" y="597" width="0.1860%" height="15" fill="rgb(252,104,46)" fg:x="88551" fg:w="231"/><text x="71.5500%" y="607.50"></text></g><g><title>core::ptr::read (231 samples, 0.19%)</title><rect x="71.3000%" y="581" width="0.1860%" height="15" fill="rgb(237,152,48)" fg:x="88551" fg:w="231"/><text x="71.5500%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (371 samples, 0.30%)</title><rect x="71.2364%" y="629" width="0.2987%" height="15" fill="rgb(221,59,37)" fg:x="88472" fg:w="371"/><text x="71.4864%" y="639.50"></text></g><g><title>core::mem::drop (61 samples, 0.05%)</title><rect x="71.4860%" y="613" width="0.0491%" height="15" fill="rgb(209,202,51)" fg:x="88782" fg:w="61"/><text x="71.7360%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (61 samples, 0.05%)</title><rect x="71.4860%" y="597" width="0.0491%" height="15" fill="rgb(228,81,30)" fg:x="88782" fg:w="61"/><text x="71.7360%" y="607.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="71.5351%" y="613" width="0.0161%" height="15" fill="rgb(227,42,39)" fg:x="88843" fg:w="20"/><text x="71.7851%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (399 samples, 0.32%)</title><rect x="71.5351%" y="629" width="0.3213%" height="15" fill="rgb(221,26,2)" fg:x="88843" fg:w="399"/><text x="71.7851%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (379 samples, 0.31%)</title><rect x="71.5512%" y="613" width="0.3052%" height="15" fill="rgb(254,61,31)" fg:x="88863" fg:w="379"/><text x="71.8012%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (379 samples, 0.31%)</title><rect x="71.5512%" y="597" width="0.3052%" height="15" fill="rgb(222,173,38)" fg:x="88863" fg:w="379"/><text x="71.8012%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (352 samples, 0.28%)</title><rect x="71.5729%" y="581" width="0.2834%" height="15" fill="rgb(218,50,12)" fg:x="88890" fg:w="352"/><text x="71.8229%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (352 samples, 0.28%)</title><rect x="71.5729%" y="565" width="0.2834%" height="15" fill="rgb(223,88,40)" fg:x="88890" fg:w="352"/><text x="71.8229%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (351 samples, 0.28%)</title><rect x="71.5737%" y="549" width="0.2826%" height="15" fill="rgb(237,54,19)" fg:x="88891" fg:w="351"/><text x="71.8237%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (351 samples, 0.28%)</title><rect x="71.5737%" y="533" width="0.2826%" height="15" fill="rgb(251,129,25)" fg:x="88891" fg:w="351"/><text x="71.8237%" y="543.50"></text></g><g><title>core::task::wake::Context::waker (16 samples, 0.01%)</title><rect x="71.8564%" y="629" width="0.0129%" height="15" fill="rgb(238,97,19)" fg:x="89242" fg:w="16"/><text x="72.1064%" y="639.50"></text></g><g><title>core::task::wake::Waker::will_wake (50 samples, 0.04%)</title><rect x="71.8692%" y="629" width="0.0403%" height="15" fill="rgb(240,169,18)" fg:x="89258" fg:w="50"/><text x="72.1192%" y="639.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (50 samples, 0.04%)</title><rect x="71.8692%" y="613" width="0.0403%" height="15" fill="rgb(230,187,49)" fg:x="89258" fg:w="50"/><text x="72.1192%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (48 samples, 0.04%)</title><rect x="71.8708%" y="597" width="0.0386%" height="15" fill="rgb(209,44,26)" fg:x="89260" fg:w="48"/><text x="72.1208%" y="607.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (48 samples, 0.04%)</title><rect x="71.8708%" y="581" width="0.0386%" height="15" fill="rgb(244,0,6)" fg:x="89260" fg:w="48"/><text x="72.1208%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (31 samples, 0.02%)</title><rect x="71.9272%" y="597" width="0.0250%" height="15" fill="rgb(248,18,21)" fg:x="89330" fg:w="31"/><text x="72.1772%" y="607.50"></text></g><g><title>std::sync::poison::Flag::borrow (31 samples, 0.02%)</title><rect x="71.9272%" y="581" width="0.0250%" height="15" fill="rgb(245,180,19)" fg:x="89330" fg:w="31"/><text x="72.1772%" y="591.50"></text></g><g><title>std::thread::panicking (15 samples, 0.01%)</title><rect x="71.9401%" y="565" width="0.0121%" height="15" fill="rgb(252,118,36)" fg:x="89346" fg:w="15"/><text x="72.1901%" y="575.50"></text></g><g><title>std::panicking::panicking (15 samples, 0.01%)</title><rect x="71.9401%" y="549" width="0.0121%" height="15" fill="rgb(210,224,19)" fg:x="89346" fg:w="15"/><text x="72.1901%" y="559.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (15 samples, 0.01%)</title><rect x="71.9401%" y="533" width="0.0121%" height="15" fill="rgb(218,30,24)" fg:x="89346" fg:w="15"/><text x="72.1901%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="71.9401%" y="517" width="0.0121%" height="15" fill="rgb(219,75,50)" fg:x="89346" fg:w="15"/><text x="72.1901%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="71.9401%" y="501" width="0.0121%" height="15" fill="rgb(234,72,50)" fg:x="89346" fg:w="15"/><text x="72.1901%" y="511.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2,924 samples, 2.35%)</title><rect x="71.1397%" y="645" width="2.3544%" height="15" fill="rgb(219,100,48)" fg:x="88352" fg:w="2924"/><text x="71.3897%" y="655.50">&lt;..</text></g><g><title>event_listener::Inner::lock (1,968 samples, 1.58%)</title><rect x="71.9095%" y="629" width="1.5846%" height="15" fill="rgb(253,5,41)" fg:x="89308" fg:w="1968"/><text x="72.1595%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,946 samples, 1.57%)</title><rect x="71.9272%" y="613" width="1.5669%" height="15" fill="rgb(247,181,11)" fg:x="89330" fg:w="1946"/><text x="72.1772%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,915 samples, 1.54%)</title><rect x="71.9522%" y="597" width="1.5419%" height="15" fill="rgb(222,223,25)" fg:x="89361" fg:w="1915"/><text x="72.2022%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,915 samples, 1.54%)</title><rect x="71.9522%" y="581" width="1.5419%" height="15" fill="rgb(214,198,28)" fg:x="89361" fg:w="1915"/><text x="72.2022%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1,914 samples, 1.54%)</title><rect x="71.9530%" y="565" width="1.5411%" height="15" fill="rgb(230,46,43)" fg:x="89362" fg:w="1914"/><text x="72.2030%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,914 samples, 1.54%)</title><rect x="71.9530%" y="549" width="1.5411%" height="15" fill="rgb(233,65,53)" fg:x="89362" fg:w="1914"/><text x="72.2030%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8,042 samples, 6.48%)</title><rect x="67.0317%" y="917" width="6.4753%" height="15" fill="rgb(221,121,27)" fg:x="83250" fg:w="8042"/><text x="67.2817%" y="927.50">async_ta..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,037 samples, 6.47%)</title><rect x="67.0357%" y="901" width="6.4713%" height="15" fill="rgb(247,70,47)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="911.50">&lt;core::p..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,037 samples, 6.47%)</title><rect x="67.0357%" y="885" width="6.4713%" height="15" fill="rgb(228,85,35)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="895.50">&lt;core::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,037 samples, 6.47%)</title><rect x="67.0357%" y="869" width="6.4713%" height="15" fill="rgb(209,50,18)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="879.50">async_ex..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,037 samples, 6.47%)</title><rect x="67.0357%" y="853" width="6.4713%" height="15" fill="rgb(250,19,35)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="863.50">&lt;async_s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,037 samples, 6.47%)</title><rect x="67.0357%" y="837" width="6.4713%" height="15" fill="rgb(253,107,29)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="847.50">async_st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,037 samples, 6.47%)</title><rect x="67.0357%" y="821" width="6.4713%" height="15" fill="rgb(252,179,29)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="831.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,037 samples, 6.47%)</title><rect x="67.0357%" y="805" width="6.4713%" height="15" fill="rgb(238,194,6)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="815.50">std::thr..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8,037 samples, 6.47%)</title><rect x="67.0357%" y="789" width="6.4713%" height="15" fill="rgb(238,164,29)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="799.50">async_st..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (8,037 samples, 6.47%)</title><rect x="67.0357%" y="773" width="6.4713%" height="15" fill="rgb(224,25,9)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="783.50">&lt;async_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,037 samples, 6.47%)</title><rect x="67.0357%" y="757" width="6.4713%" height="15" fill="rgb(244,153,23)" fg:x="83255" fg:w="8037"/><text x="67.2857%" y="767.50">&lt;core::f..</text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (2,990 samples, 2.41%)</title><rect x="71.0995%" y="741" width="2.4075%" height="15" fill="rgb(212,203,14)" fg:x="88302" fg:w="2990"/><text x="71.3495%" y="751.50">tr..</text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,990 samples, 2.41%)</title><rect x="71.0995%" y="725" width="2.4075%" height="15" fill="rgb(220,164,20)" fg:x="88302" fg:w="2990"/><text x="71.3495%" y="735.50">&lt;a..</text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (2,990 samples, 2.41%)</title><rect x="71.0995%" y="709" width="2.4075%" height="15" fill="rgb(222,203,48)" fg:x="88302" fg:w="2990"/><text x="71.3495%" y="719.50">&lt;t..</text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (2,990 samples, 2.41%)</title><rect x="71.0995%" y="693" width="2.4075%" height="15" fill="rgb(215,159,22)" fg:x="88302" fg:w="2990"/><text x="71.3495%" y="703.50">&lt;a..</text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (2,990 samples, 2.41%)</title><rect x="71.0995%" y="677" width="2.4075%" height="15" fill="rgb(216,183,47)" fg:x="88302" fg:w="2990"/><text x="71.3495%" y="687.50">&lt;a..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (2,990 samples, 2.41%)</title><rect x="71.0995%" y="661" width="2.4075%" height="15" fill="rgb(229,195,25)" fg:x="88302" fg:w="2990"/><text x="71.3495%" y="671.50">&lt;a..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (16 samples, 0.01%)</title><rect x="73.4941%" y="645" width="0.0129%" height="15" fill="rgb(224,132,51)" fg:x="91276" fg:w="16"/><text x="73.7441%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (15 samples, 0.01%)</title><rect x="73.5134%" y="917" width="0.0121%" height="15" fill="rgb(240,63,7)" fg:x="91300" fg:w="15"/><text x="73.7634%" y="927.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (34 samples, 0.03%)</title><rect x="73.5319%" y="917" width="0.0274%" height="15" fill="rgb(249,182,41)" fg:x="91323" fg:w="34"/><text x="73.7819%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (18 samples, 0.01%)</title><rect x="73.5593%" y="917" width="0.0145%" height="15" fill="rgb(243,47,26)" fg:x="91357" fg:w="18"/><text x="73.8093%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;tremor_runtime::connectors::impls::cb::CbSink as tremor_runtime::connectors::sink::Sink&gt;::on_event::{{closure}}&gt;&gt; (13 samples, 0.01%)</title><rect x="73.5795%" y="917" width="0.0105%" height="15" fill="rgb(233,48,2)" fg:x="91382" fg:w="13"/><text x="73.8295%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt;&gt; (43 samples, 0.03%)</title><rect x="73.5996%" y="917" width="0.0346%" height="15" fill="rgb(244,165,34)" fg:x="91407" fg:w="43"/><text x="73.8496%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::source::SourceManager&lt;tremor_runtime::connectors::impls::bench::Blaster&gt;::handle_data::{{closure}}&gt; (19 samples, 0.02%)</title><rect x="73.6189%" y="901" width="0.0153%" height="15" fill="rgb(207,89,7)" fg:x="91431" fg:w="19"/><text x="73.8689%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::handle_insights::{{closure}}&gt;&gt; (38 samples, 0.03%)</title><rect x="73.6535%" y="917" width="0.0306%" height="15" fill="rgb(244,117,36)" fg:x="91474" fg:w="38"/><text x="73.9035%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::pipeline::send_events::{{closure}}&gt;&gt; (45 samples, 0.04%)</title><rect x="73.6841%" y="917" width="0.0362%" height="15" fill="rgb(226,144,34)" fg:x="91512" fg:w="45"/><text x="73.9341%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (20 samples, 0.02%)</title><rect x="73.7204%" y="917" width="0.0161%" height="15" fill="rgb(213,23,19)" fg:x="91557" fg:w="20"/><text x="73.9704%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;halfbrown::HashMapInt&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;,tremor_value::value::Value&gt;&gt; (53 samples, 0.04%)</title><rect x="73.7437%" y="917" width="0.0427%" height="15" fill="rgb(217,75,12)" fg:x="91586" fg:w="53"/><text x="73.9937%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::event::Event&gt; (45 samples, 0.04%)</title><rect x="73.7864%" y="917" width="0.0362%" height="15" fill="rgb(224,159,17)" fg:x="91639" fg:w="45"/><text x="74.0364%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::ctx::EventOriginUri&gt; (25 samples, 0.02%)</title><rect x="73.8226%" y="917" width="0.0201%" height="15" fill="rgb(217,118,1)" fg:x="91684" fg:w="25"/><text x="74.0726%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (25 samples, 0.02%)</title><rect x="73.8226%" y="901" width="0.0201%" height="15" fill="rgb(232,180,48)" fg:x="91684" fg:w="25"/><text x="74.0726%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (25 samples, 0.02%)</title><rect x="73.8226%" y="885" width="0.0201%" height="15" fill="rgb(230,27,33)" fg:x="91684" fg:w="25"/><text x="74.0726%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="73.8226%" y="869" width="0.0201%" height="15" fill="rgb(205,31,21)" fg:x="91684" fg:w="25"/><text x="74.0726%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="73.8226%" y="853" width="0.0201%" height="15" fill="rgb(253,59,4)" fg:x="91684" fg:w="25"/><text x="74.0726%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="73.8226%" y="837" width="0.0201%" height="15" fill="rgb(224,201,9)" fg:x="91684" fg:w="25"/><text x="74.0726%" y="847.50"></text></g><g><title>__rg_dealloc (25 samples, 0.02%)</title><rect x="73.8226%" y="821" width="0.0201%" height="15" fill="rgb(229,206,30)" fg:x="91684" fg:w="25"/><text x="74.0726%" y="831.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (25 samples, 0.02%)</title><rect x="73.8226%" y="805" width="0.0201%" height="15" fill="rgb(212,67,47)" fg:x="91684" fg:w="25"/><text x="74.0726%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::EventPayload&gt; (49 samples, 0.04%)</title><rect x="73.8427%" y="917" width="0.0395%" height="15" fill="rgb(211,96,50)" fg:x="91709" fg:w="49"/><text x="74.0927%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_script::srs::ValueAndMeta&gt; (40 samples, 0.03%)</title><rect x="73.8500%" y="901" width="0.0322%" height="15" fill="rgb(252,114,18)" fg:x="91718" fg:w="40"/><text x="74.1000%" y="911.50"></text></g><g><title>event_listener::Event::notify (102 samples, 0.08%)</title><rect x="73.8894%" y="917" width="0.0821%" height="15" fill="rgb(223,58,37)" fg:x="91767" fg:w="102"/><text x="74.1394%" y="927.50"></text></g><g><title>event_listener::full_fence (45 samples, 0.04%)</title><rect x="73.9353%" y="901" width="0.0362%" height="15" fill="rgb(237,70,4)" fg:x="91824" fg:w="45"/><text x="74.1853%" y="911.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (56 samples, 0.05%)</title><rect x="73.9780%" y="917" width="0.0451%" height="15" fill="rgb(244,85,46)" fg:x="91877" fg:w="56"/><text x="74.2280%" y="927.50"></text></g><g><title>parking::Inner::park (26 samples, 0.02%)</title><rect x="74.0231%" y="917" width="0.0209%" height="15" fill="rgb(223,39,52)" fg:x="91933" fg:w="26"/><text x="74.2731%" y="927.50"></text></g><g><title>polling::epoll::Poller::wait (53 samples, 0.04%)</title><rect x="74.0521%" y="917" width="0.0427%" height="15" fill="rgb(218,200,14)" fg:x="91969" fg:w="53"/><text x="74.3021%" y="927.50"></text></g><g><title>sn_rust_alloc (123 samples, 0.10%)</title><rect x="74.0948%" y="917" width="0.0990%" height="15" fill="rgb(208,171,16)" fg:x="92022" fg:w="123"/><text x="74.3448%" y="927.50"></text></g><g><title>sn_rust_dealloc (54 samples, 0.04%)</title><rect x="74.1938%" y="917" width="0.0435%" height="15" fill="rgb(234,200,18)" fg:x="92145" fg:w="54"/><text x="74.4438%" y="927.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (66 samples, 0.05%)</title><rect x="74.2582%" y="917" width="0.0531%" height="15" fill="rgb(228,45,11)" fg:x="92225" fg:w="66"/><text x="74.5082%" y="927.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (16 samples, 0.01%)</title><rect x="74.3154%" y="677" width="0.0129%" height="15" fill="rgb(237,182,11)" fg:x="92296" fg:w="16"/><text x="74.5654%" y="687.50"></text></g><g><title>&lt;halfbrown::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="74.3154%" y="661" width="0.0129%" height="15" fill="rgb(241,175,49)" fg:x="92296" fg:w="16"/><text x="74.5654%" y="671.50"></text></g><g><title>&lt;halfbrown::HashMapInt&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="74.3154%" y="645" width="0.0129%" height="15" fill="rgb(247,38,35)" fg:x="92296" fg:w="16"/><text x="74.5654%" y="655.50"></text></g><g><title>&lt;halfbrown::vecmap::VecMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="74.3154%" y="629" width="0.0129%" height="15" fill="rgb(228,39,49)" fg:x="92296" fg:w="16"/><text x="74.5654%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="74.3154%" y="613" width="0.0129%" height="15" fill="rgb(226,101,26)" fg:x="92296" fg:w="16"/><text x="74.5654%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.01%)</title><rect x="74.3154%" y="597" width="0.0129%" height="15" fill="rgb(206,141,19)" fg:x="92296" fg:w="16"/><text x="74.5654%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="74.3154%" y="581" width="0.0129%" height="15" fill="rgb(211,200,13)" fg:x="92296" fg:w="16"/><text x="74.5654%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="74.3154%" y="565" width="0.0129%" height="15" fill="rgb(241,121,6)" fg:x="92296" fg:w="16"/><text x="74.5654%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="74.3162%" y="549" width="0.0121%" height="15" fill="rgb(234,221,29)" fg:x="92297" fg:w="15"/><text x="74.5662%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (93 samples, 0.07%)</title><rect x="74.3154%" y="821" width="0.0749%" height="15" fill="rgb(229,136,5)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (93 samples, 0.07%)</title><rect x="74.3154%" y="805" width="0.0749%" height="15" fill="rgb(238,36,11)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (93 samples, 0.07%)</title><rect x="74.3154%" y="789" width="0.0749%" height="15" fill="rgb(251,55,41)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="799.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (93 samples, 0.07%)</title><rect x="74.3154%" y="773" width="0.0749%" height="15" fill="rgb(242,34,40)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="783.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (93 samples, 0.07%)</title><rect x="74.3154%" y="757" width="0.0749%" height="15" fill="rgb(215,42,17)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="767.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (93 samples, 0.07%)</title><rect x="74.3154%" y="741" width="0.0749%" height="15" fill="rgb(207,44,46)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="751.50"></text></g><g><title>tremor_runtime::connectors::source::build_last_events::{{closure}} (93 samples, 0.07%)</title><rect x="74.3154%" y="725" width="0.0749%" height="15" fill="rgb(211,206,28)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="735.50"></text></g><g><title>&lt;tremor_value::value::Value as core::clone::Clone&gt;::clone (93 samples, 0.07%)</title><rect x="74.3154%" y="709" width="0.0749%" height="15" fill="rgb(237,167,16)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (93 samples, 0.07%)</title><rect x="74.3154%" y="693" width="0.0749%" height="15" fill="rgb(233,66,6)" fg:x="92296" fg:w="93"/><text x="74.5654%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (77 samples, 0.06%)</title><rect x="74.3283%" y="677" width="0.0620%" height="15" fill="rgb(246,123,29)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (77 samples, 0.06%)</title><rect x="74.3283%" y="661" width="0.0620%" height="15" fill="rgb(209,62,40)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.06%)</title><rect x="74.3283%" y="645" width="0.0620%" height="15" fill="rgb(218,4,25)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.06%)</title><rect x="74.3283%" y="629" width="0.0620%" height="15" fill="rgb(253,91,49)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="639.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.06%)</title><rect x="74.3283%" y="613" width="0.0620%" height="15" fill="rgb(228,155,29)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="623.50"></text></g><g><title>__rg_alloc (77 samples, 0.06%)</title><rect x="74.3283%" y="597" width="0.0620%" height="15" fill="rgb(243,57,37)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="607.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (77 samples, 0.06%)</title><rect x="74.3283%" y="581" width="0.0620%" height="15" fill="rgb(244,167,17)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="591.50"></text></g><g><title>sn_rust_alloc (77 samples, 0.06%)</title><rect x="74.3283%" y="565" width="0.0620%" height="15" fill="rgb(207,181,38)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="575.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (77 samples, 0.06%)</title><rect x="74.3283%" y="549" width="0.0620%" height="15" fill="rgb(211,8,23)" fg:x="92312" fg:w="77"/><text x="74.5783%" y="559.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (95 samples, 0.08%)</title><rect x="74.3154%" y="837" width="0.0765%" height="15" fill="rgb(235,11,44)" fg:x="92296" fg:w="95"/><text x="74.5654%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (162 samples, 0.13%)</title><rect x="74.3122%" y="917" width="0.1304%" height="15" fill="rgb(248,18,52)" fg:x="92292" fg:w="162"/><text x="74.5622%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (158 samples, 0.13%)</title><rect x="74.3154%" y="901" width="0.1272%" height="15" fill="rgb(208,4,7)" fg:x="92296" fg:w="158"/><text x="74.5654%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (158 samples, 0.13%)</title><rect x="74.3154%" y="885" width="0.1272%" height="15" fill="rgb(240,17,39)" fg:x="92296" fg:w="158"/><text x="74.5654%" y="895.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (158 samples, 0.13%)</title><rect x="74.3154%" y="869" width="0.1272%" height="15" fill="rgb(207,170,3)" fg:x="92296" fg:w="158"/><text x="74.5654%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (158 samples, 0.13%)</title><rect x="74.3154%" y="853" width="0.1272%" height="15" fill="rgb(236,100,52)" fg:x="92296" fg:w="158"/><text x="74.5654%" y="863.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (63 samples, 0.05%)</title><rect x="74.3919%" y="837" width="0.0507%" height="15" fill="rgb(246,78,51)" fg:x="92391" fg:w="63"/><text x="74.6419%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.05%)</title><rect x="74.3919%" y="821" width="0.0507%" height="15" fill="rgb(211,17,15)" fg:x="92391" fg:w="63"/><text x="74.6419%" y="831.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.05%)</title><rect x="74.3919%" y="805" width="0.0507%" height="15" fill="rgb(209,59,46)" fg:x="92391" fg:w="63"/><text x="74.6419%" y="815.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.05%)</title><rect x="74.3919%" y="789" width="0.0507%" height="15" fill="rgb(210,92,25)" fg:x="92391" fg:w="63"/><text x="74.6419%" y="799.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.05%)</title><rect x="74.3919%" y="773" width="0.0507%" height="15" fill="rgb(238,174,52)" fg:x="92391" fg:w="63"/><text x="74.6419%" y="783.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.05%)</title><rect x="74.3919%" y="757" width="0.0507%" height="15" fill="rgb(230,73,7)" fg:x="92391" fg:w="63"/><text x="74.6419%" y="767.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.05%)</title><rect x="74.3919%" y="741" width="0.0507%" height="15" fill="rgb(243,124,40)" fg:x="92391" fg:w="63"/><text x="74.6419%" y="751.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (63 samples, 0.05%)</title><rect x="74.3919%" y="725" width="0.0507%" height="15" fill="rgb(244,170,11)" fg:x="92391" fg:w="63"/><text x="74.6419%" y="735.50"></text></g><g><title>tremor_common::time::nanotime (43 samples, 0.03%)</title><rect x="74.4426%" y="917" width="0.0346%" height="15" fill="rgb(207,114,54)" fg:x="92454" fg:w="43"/><text x="74.6926%" y="927.50"></text></g><g><title>tremor_runtime::connectors::sink::EventSerializer::serialize_for_stream_with_codec (78 samples, 0.06%)</title><rect x="74.4772%" y="917" width="0.0628%" height="15" fill="rgb(205,42,20)" fg:x="92497" fg:w="78"/><text x="74.7272%" y="927.50"></text></g><g><title>tremor_runtime::connectors::source::Streams::get_or_create_stream (22 samples, 0.02%)</title><rect x="74.5433%" y="917" width="0.0177%" height="15" fill="rgb(230,30,28)" fg:x="92579" fg:w="22"/><text x="74.7933%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="74.6085%" y="805" width="0.0201%" height="15" fill="rgb(205,73,54)" fg:x="92660" fg:w="25"/><text x="74.8585%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="74.6085%" y="789" width="0.0201%" height="15" fill="rgb(254,227,23)" fg:x="92660" fg:w="25"/><text x="74.8585%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.02%)</title><rect x="74.6085%" y="773" width="0.0201%" height="15" fill="rgb(228,202,34)" fg:x="92660" fg:w="25"/><text x="74.8585%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.02%)</title><rect x="74.6085%" y="757" width="0.0201%" height="15" fill="rgb(222,225,37)" fg:x="92660" fg:w="25"/><text x="74.8585%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.02%)</title><rect x="74.6085%" y="741" width="0.0201%" height="15" fill="rgb(221,14,54)" fg:x="92660" fg:w="25"/><text x="74.8585%" y="751.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.02%)</title><rect x="74.6085%" y="725" width="0.0201%" height="15" fill="rgb(254,102,2)" fg:x="92660" fg:w="25"/><text x="74.8585%" y="735.50"></text></g><g><title>__rg_alloc (25 samples, 0.02%)</title><rect x="74.6085%" y="709" width="0.0201%" height="15" fill="rgb(232,104,17)" fg:x="92660" fg:w="25"/><text x="74.8585%" y="719.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (25 samples, 0.02%)</title><rect x="74.6085%" y="693" width="0.0201%" height="15" fill="rgb(250,220,14)" fg:x="92660" fg:w="25"/><text x="74.8585%" y="703.50"></text></g><g><title>&lt;tremor_script::ctx::EventOriginUri as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="74.5996%" y="901" width="0.0370%" height="15" fill="rgb(241,158,9)" fg:x="92649" fg:w="46"/><text x="74.8496%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="74.6085%" y="885" width="0.0282%" height="15" fill="rgb(246,9,43)" fg:x="92660" fg:w="35"/><text x="74.8585%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="74.6085%" y="869" width="0.0282%" height="15" fill="rgb(206,73,33)" fg:x="92660" fg:w="35"/><text x="74.8585%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.03%)</title><rect x="74.6085%" y="853" width="0.0282%" height="15" fill="rgb(222,79,8)" fg:x="92660" fg:w="35"/><text x="74.8585%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.03%)</title><rect x="74.6085%" y="837" width="0.0282%" height="15" fill="rgb(234,8,54)" fg:x="92660" fg:w="35"/><text x="74.8585%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.03%)</title><rect x="74.6085%" y="821" width="0.0282%" height="15" fill="rgb(209,134,38)" fg:x="92660" fg:w="35"/><text x="74.8585%" y="831.50"></text></g><g><title>tremor_runtime::connectors::source::build_events (106 samples, 0.09%)</title><rect x="74.5610%" y="917" width="0.0853%" height="15" fill="rgb(230,127,29)" fg:x="92601" fg:w="106"/><text x="74.8110%" y="927.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SourceReporter::periodic_flush (16 samples, 0.01%)</title><rect x="74.6463%" y="917" width="0.0129%" height="15" fill="rgb(242,44,41)" fg:x="92707" fg:w="16"/><text x="74.8963%" y="927.50"></text></g><g><title>tremor_runtime::pipeline::maybe_send (28 samples, 0.02%)</title><rect x="74.6592%" y="917" width="0.0225%" height="15" fill="rgb(222,56,43)" fg:x="92723" fg:w="28"/><text x="74.9092%" y="927.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (18 samples, 0.01%)</title><rect x="74.7590%" y="773" width="0.0145%" height="15" fill="rgb(238,39,47)" fg:x="92847" fg:w="18"/><text x="75.0090%" y="783.50"></text></g><g><title>core::mem::replace (18 samples, 0.01%)</title><rect x="74.7590%" y="757" width="0.0145%" height="15" fill="rgb(226,79,43)" fg:x="92847" fg:w="18"/><text x="75.0090%" y="767.50"></text></g><g><title>core::ptr::read (18 samples, 0.01%)</title><rect x="74.7590%" y="741" width="0.0145%" height="15" fill="rgb(242,105,53)" fg:x="92847" fg:w="18"/><text x="75.0090%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (220 samples, 0.18%)</title><rect x="74.8404%" y="757" width="0.1771%" height="15" fill="rgb(251,132,46)" fg:x="92948" fg:w="220"/><text x="75.0904%" y="767.50"></text></g><g><title>core::mem::replace (220 samples, 0.18%)</title><rect x="74.8404%" y="741" width="0.1771%" height="15" fill="rgb(231,77,14)" fg:x="92948" fg:w="220"/><text x="75.0904%" y="751.50"></text></g><g><title>core::ptr::read (220 samples, 0.18%)</title><rect x="74.8404%" y="725" width="0.1771%" height="15" fill="rgb(240,135,9)" fg:x="92948" fg:w="220"/><text x="75.0904%" y="735.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (361 samples, 0.29%)</title><rect x="74.7735%" y="773" width="0.2907%" height="15" fill="rgb(248,109,14)" fg:x="92865" fg:w="361"/><text x="75.0235%" y="783.50"></text></g><g><title>core::mem::drop (58 samples, 0.05%)</title><rect x="75.0175%" y="757" width="0.0467%" height="15" fill="rgb(227,146,52)" fg:x="93168" fg:w="58"/><text x="75.2675%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (58 samples, 0.05%)</title><rect x="75.0175%" y="741" width="0.0467%" height="15" fill="rgb(232,54,3)" fg:x="93168" fg:w="58"/><text x="75.2675%" y="751.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="75.0642%" y="757" width="0.0137%" height="15" fill="rgb(229,201,43)" fg:x="93226" fg:w="17"/><text x="75.3142%" y="767.50"></text></g><g><title>std::sync::poison::Flag::done (18 samples, 0.01%)</title><rect x="75.0884%" y="725" width="0.0145%" height="15" fill="rgb(252,161,33)" fg:x="93256" fg:w="18"/><text x="75.3384%" y="735.50"></text></g><g><title>std::thread::panicking (18 samples, 0.01%)</title><rect x="75.0884%" y="709" width="0.0145%" height="15" fill="rgb(226,146,40)" fg:x="93256" fg:w="18"/><text x="75.3384%" y="719.50"></text></g><g><title>std::panicking::panicking (18 samples, 0.01%)</title><rect x="75.0884%" y="693" width="0.0145%" height="15" fill="rgb(219,47,25)" fg:x="93256" fg:w="18"/><text x="75.3384%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (18 samples, 0.01%)</title><rect x="75.0884%" y="677" width="0.0145%" height="15" fill="rgb(250,135,13)" fg:x="93256" fg:w="18"/><text x="75.3384%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (442 samples, 0.36%)</title><rect x="75.0642%" y="773" width="0.3559%" height="15" fill="rgb(219,229,18)" fg:x="93226" fg:w="442"/><text x="75.3142%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (425 samples, 0.34%)</title><rect x="75.0779%" y="757" width="0.3422%" height="15" fill="rgb(217,152,27)" fg:x="93243" fg:w="425"/><text x="75.3279%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (425 samples, 0.34%)</title><rect x="75.0779%" y="741" width="0.3422%" height="15" fill="rgb(225,71,47)" fg:x="93243" fg:w="425"/><text x="75.3279%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (394 samples, 0.32%)</title><rect x="75.1029%" y="725" width="0.3172%" height="15" fill="rgb(220,139,14)" fg:x="93274" fg:w="394"/><text x="75.3529%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (394 samples, 0.32%)</title><rect x="75.1029%" y="709" width="0.3172%" height="15" fill="rgb(247,54,32)" fg:x="93274" fg:w="394"/><text x="75.3529%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (394 samples, 0.32%)</title><rect x="75.1029%" y="693" width="0.3172%" height="15" fill="rgb(252,131,39)" fg:x="93274" fg:w="394"/><text x="75.3529%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (394 samples, 0.32%)</title><rect x="75.1029%" y="677" width="0.3172%" height="15" fill="rgb(210,108,39)" fg:x="93274" fg:w="394"/><text x="75.3529%" y="687.50"></text></g><g><title>core::task::wake::Context::waker (28 samples, 0.02%)</title><rect x="75.4201%" y="773" width="0.0225%" height="15" fill="rgb(205,23,29)" fg:x="93668" fg:w="28"/><text x="75.6701%" y="783.50"></text></g><g><title>core::task::wake::Waker::will_wake (49 samples, 0.04%)</title><rect x="75.4427%" y="773" width="0.0395%" height="15" fill="rgb(246,139,46)" fg:x="93696" fg:w="49"/><text x="75.6927%" y="783.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (49 samples, 0.04%)</title><rect x="75.4427%" y="757" width="0.0395%" height="15" fill="rgb(250,81,26)" fg:x="93696" fg:w="49"/><text x="75.6927%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (49 samples, 0.04%)</title><rect x="75.4427%" y="741" width="0.0395%" height="15" fill="rgb(214,104,7)" fg:x="93696" fg:w="49"/><text x="75.6927%" y="751.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (49 samples, 0.04%)</title><rect x="75.4427%" y="725" width="0.0395%" height="15" fill="rgb(233,189,8)" fg:x="93696" fg:w="49"/><text x="75.6927%" y="735.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (31 samples, 0.02%)</title><rect x="75.5030%" y="741" width="0.0250%" height="15" fill="rgb(228,141,17)" fg:x="93771" fg:w="31"/><text x="75.7530%" y="751.50"></text></g><g><title>std::sync::poison::Flag::borrow (31 samples, 0.02%)</title><rect x="75.5030%" y="725" width="0.0250%" height="15" fill="rgb(247,157,1)" fg:x="93771" fg:w="31"/><text x="75.7530%" y="735.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="75.5167%" y="709" width="0.0113%" height="15" fill="rgb(249,225,5)" fg:x="93788" fg:w="14"/><text x="75.7667%" y="719.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="75.5167%" y="693" width="0.0113%" height="15" fill="rgb(242,55,13)" fg:x="93788" fg:w="14"/><text x="75.7667%" y="703.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="75.5167%" y="677" width="0.0113%" height="15" fill="rgb(230,49,50)" fg:x="93788" fg:w="14"/><text x="75.7667%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="75.5167%" y="661" width="0.0113%" height="15" fill="rgb(241,111,38)" fg:x="93788" fg:w="14"/><text x="75.7667%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="75.5167%" y="645" width="0.0113%" height="15" fill="rgb(252,155,4)" fg:x="93788" fg:w="14"/><text x="75.7667%" y="655.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,634 samples, 1.32%)</title><rect x="74.6866%" y="901" width="1.3157%" height="15" fill="rgb(212,69,32)" fg:x="92757" fg:w="1634"/><text x="74.9366%" y="911.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,634 samples, 1.32%)</title><rect x="74.6866%" y="885" width="1.3157%" height="15" fill="rgb(243,107,47)" fg:x="92757" fg:w="1634"/><text x="74.9366%" y="895.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,634 samples, 1.32%)</title><rect x="74.6866%" y="869" width="1.3157%" height="15" fill="rgb(247,130,12)" fg:x="92757" fg:w="1634"/><text x="74.9366%" y="879.50"></text></g><g><title>&lt;tremor_runtime::primerge::PriorityMerge&lt;High,Low&gt; as futures_core::stream::Stream&gt;::poll_next (1,634 samples, 1.32%)</title><rect x="74.6866%" y="853" width="1.3157%" height="15" fill="rgb(233,74,16)" fg:x="92757" fg:w="1634"/><text x="74.9366%" y="863.50"></text></g><g><title>&lt;async_std::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (1,634 samples, 1.32%)</title><rect x="74.6866%" y="837" width="1.3157%" height="15" fill="rgb(208,58,18)" fg:x="92757" fg:w="1634"/><text x="74.9366%" y="847.50"></text></g><g><title>&lt;async_std::stream::stream::map::Map&lt;S,F&gt; as futures_core::stream::Stream&gt;::poll_next (1,634 samples, 1.32%)</title><rect x="74.6866%" y="821" width="1.3157%" height="15" fill="rgb(242,225,1)" fg:x="92757" fg:w="1634"/><text x="74.9366%" y="831.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1,634 samples, 1.32%)</title><rect x="74.6866%" y="805" width="1.3157%" height="15" fill="rgb(249,39,40)" fg:x="92757" fg:w="1634"/><text x="74.9366%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,634 samples, 1.32%)</title><rect x="74.6866%" y="789" width="1.3157%" height="15" fill="rgb(207,72,44)" fg:x="92757" fg:w="1634"/><text x="74.9366%" y="799.50"></text></g><g><title>event_listener::Inner::lock (646 samples, 0.52%)</title><rect x="75.4821%" y="773" width="0.5201%" height="15" fill="rgb(215,193,12)" fg:x="93745" fg:w="646"/><text x="75.7321%" y="783.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (620 samples, 0.50%)</title><rect x="75.5030%" y="757" width="0.4992%" height="15" fill="rgb(248,41,39)" fg:x="93771" fg:w="620"/><text x="75.7530%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (589 samples, 0.47%)</title><rect x="75.5280%" y="741" width="0.4743%" height="15" fill="rgb(253,85,4)" fg:x="93802" fg:w="589"/><text x="75.7780%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (589 samples, 0.47%)</title><rect x="75.5280%" y="725" width="0.4743%" height="15" fill="rgb(243,70,31)" fg:x="93802" fg:w="589"/><text x="75.7780%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (589 samples, 0.47%)</title><rect x="75.5280%" y="709" width="0.4743%" height="15" fill="rgb(253,195,26)" fg:x="93802" fg:w="589"/><text x="75.7780%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (589 samples, 0.47%)</title><rect x="75.5280%" y="693" width="0.4743%" height="15" fill="rgb(243,42,11)" fg:x="93802" fg:w="589"/><text x="75.7780%" y="703.50"></text></g><g><title>[libc-2.31.so] (396 samples, 0.32%)</title><rect x="76.1424%" y="789" width="0.3189%" height="15" fill="rgb(239,66,17)" fg:x="94565" fg:w="396"/><text x="76.3924%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (256 samples, 0.21%)</title><rect x="76.5458%" y="773" width="0.2061%" height="15" fill="rgb(217,132,21)" fg:x="95066" fg:w="256"/><text x="76.7958%" y="783.50"></text></g><g><title>core::ptr::write (256 samples, 0.21%)</title><rect x="76.5458%" y="757" width="0.2061%" height="15" fill="rgb(252,202,21)" fg:x="95066" fg:w="256"/><text x="76.7958%" y="767.50"></text></g><g><title>[libc-2.31.so] (248 samples, 0.20%)</title><rect x="76.5522%" y="741" width="0.1997%" height="15" fill="rgb(233,98,36)" fg:x="95074" fg:w="248"/><text x="76.8022%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (416 samples, 0.33%)</title><rect x="76.7519%" y="773" width="0.3350%" height="15" fill="rgb(216,153,54)" fg:x="95322" fg:w="416"/><text x="77.0019%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (416 samples, 0.33%)</title><rect x="76.7519%" y="757" width="0.3350%" height="15" fill="rgb(250,99,7)" fg:x="95322" fg:w="416"/><text x="77.0019%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (129 samples, 0.10%)</title><rect x="77.0868%" y="773" width="0.1039%" height="15" fill="rgb(207,56,50)" fg:x="95738" fg:w="129"/><text x="77.3368%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (126 samples, 0.10%)</title><rect x="77.0893%" y="757" width="0.1015%" height="15" fill="rgb(244,61,34)" fg:x="95741" fg:w="126"/><text x="77.3393%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,368 samples, 1.10%)</title><rect x="76.1005%" y="805" width="1.1015%" height="15" fill="rgb(241,50,38)" fg:x="94513" fg:w="1368"/><text x="76.3505%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (920 samples, 0.74%)</title><rect x="76.4612%" y="789" width="0.7408%" height="15" fill="rgb(212,166,30)" fg:x="94961" fg:w="920"/><text x="76.7112%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (14 samples, 0.01%)</title><rect x="77.1907%" y="773" width="0.0113%" height="15" fill="rgb(249,127,32)" fg:x="95867" fg:w="14"/><text x="77.4407%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.01%)</title><rect x="77.1907%" y="757" width="0.0113%" height="15" fill="rgb(209,103,0)" fg:x="95867" fg:w="14"/><text x="77.4407%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (30 samples, 0.02%)</title><rect x="77.2229%" y="789" width="0.0242%" height="15" fill="rgb(238,209,51)" fg:x="95907" fg:w="30"/><text x="77.4729%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="77.2269%" y="773" width="0.0201%" height="15" fill="rgb(237,56,23)" fg:x="95912" fg:w="25"/><text x="77.4769%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="77.2269%" y="757" width="0.0201%" height="15" fill="rgb(215,153,46)" fg:x="95912" fg:w="25"/><text x="77.4769%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="77.2294%" y="741" width="0.0177%" height="15" fill="rgb(224,49,31)" fg:x="95915" fg:w="22"/><text x="77.4794%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (22 samples, 0.02%)</title><rect x="77.2294%" y="725" width="0.0177%" height="15" fill="rgb(250,18,42)" fg:x="95915" fg:w="22"/><text x="77.4794%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (22 samples, 0.02%)</title><rect x="77.2294%" y="709" width="0.0177%" height="15" fill="rgb(215,176,39)" fg:x="95915" fg:w="22"/><text x="77.4794%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (22 samples, 0.02%)</title><rect x="77.2294%" y="693" width="0.0177%" height="15" fill="rgb(223,77,29)" fg:x="95915" fg:w="22"/><text x="77.4794%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="77.2471%" y="789" width="0.0177%" height="15" fill="rgb(234,94,52)" fg:x="95937" fg:w="22"/><text x="77.4971%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="77.2471%" y="773" width="0.0177%" height="15" fill="rgb(220,154,50)" fg:x="95937" fg:w="22"/><text x="77.4971%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (22 samples, 0.02%)</title><rect x="77.2688%" y="725" width="0.0177%" height="15" fill="rgb(212,11,10)" fg:x="95964" fg:w="22"/><text x="77.5188%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="77.2688%" y="709" width="0.0177%" height="15" fill="rgb(205,166,19)" fg:x="95964" fg:w="22"/><text x="77.5188%" y="719.50"></text></g><g><title>event_listener::Inner::lock (28 samples, 0.02%)</title><rect x="77.2648%" y="789" width="0.0225%" height="15" fill="rgb(244,198,16)" fg:x="95959" fg:w="28"/><text x="77.5148%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="77.2680%" y="773" width="0.0193%" height="15" fill="rgb(219,69,12)" fg:x="95963" fg:w="24"/><text x="77.5180%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="77.2688%" y="757" width="0.0185%" height="15" fill="rgb(245,30,7)" fg:x="95964" fg:w="23"/><text x="77.5188%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (23 samples, 0.02%)</title><rect x="77.2688%" y="741" width="0.0185%" height="15" fill="rgb(218,221,48)" fg:x="95964" fg:w="23"/><text x="77.5188%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (14 samples, 0.01%)</title><rect x="77.2914%" y="741" width="0.0113%" height="15" fill="rgb(216,66,15)" fg:x="95992" fg:w="14"/><text x="77.5414%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="77.2922%" y="725" width="0.0105%" height="15" fill="rgb(226,122,50)" fg:x="95993" fg:w="13"/><text x="77.5422%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="77.2922%" y="709" width="0.0105%" height="15" fill="rgb(239,156,16)" fg:x="95993" fg:w="13"/><text x="77.5422%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (14 samples, 0.01%)</title><rect x="77.3131%" y="693" width="0.0113%" height="15" fill="rgb(224,27,38)" fg:x="96019" fg:w="14"/><text x="77.5631%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="77.3131%" y="677" width="0.0113%" height="15" fill="rgb(224,39,27)" fg:x="96019" fg:w="14"/><text x="77.5631%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (18 samples, 0.01%)</title><rect x="77.3437%" y="613" width="0.0145%" height="15" fill="rgb(215,92,29)" fg:x="96057" fg:w="18"/><text x="77.5937%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.01%)</title><rect x="77.3437%" y="597" width="0.0145%" height="15" fill="rgb(207,159,16)" fg:x="96057" fg:w="18"/><text x="77.5937%" y="607.50"></text></g><g><title>parking::Unparker::unpark (41 samples, 0.03%)</title><rect x="77.3324%" y="645" width="0.0330%" height="15" fill="rgb(238,163,47)" fg:x="96043" fg:w="41"/><text x="77.5824%" y="655.50"></text></g><g><title>parking::Inner::unpark (30 samples, 0.02%)</title><rect x="77.3413%" y="629" width="0.0242%" height="15" fill="rgb(219,91,49)" fg:x="96054" fg:w="30"/><text x="77.5913%" y="639.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (53 samples, 0.04%)</title><rect x="77.3244%" y="661" width="0.0427%" height="15" fill="rgb(227,167,31)" fg:x="96033" fg:w="53"/><text x="77.5744%" y="671.50"></text></g><g><title>core::task::wake::Waker::wake (64 samples, 0.05%)</title><rect x="77.3244%" y="693" width="0.0515%" height="15" fill="rgb(234,80,54)" fg:x="96033" fg:w="64"/><text x="77.5744%" y="703.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (64 samples, 0.05%)</title><rect x="77.3244%" y="677" width="0.0515%" height="15" fill="rgb(212,114,2)" fg:x="96033" fg:w="64"/><text x="77.5744%" y="687.50"></text></g><g><title>async_executor::State::notify (112 samples, 0.09%)</title><rect x="77.3034%" y="709" width="0.0902%" height="15" fill="rgb(234,50,24)" fg:x="96007" fg:w="112"/><text x="77.5534%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="77.3759%" y="693" width="0.0177%" height="15" fill="rgb(221,68,8)" fg:x="96097" fg:w="22"/><text x="77.6259%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="77.3775%" y="677" width="0.0161%" height="15" fill="rgb(254,180,31)" fg:x="96099" fg:w="20"/><text x="77.6275%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (20 samples, 0.02%)</title><rect x="77.3775%" y="661" width="0.0161%" height="15" fill="rgb(247,130,50)" fg:x="96099" fg:w="20"/><text x="77.6275%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (88 samples, 0.07%)</title><rect x="77.4081%" y="677" width="0.0709%" height="15" fill="rgb(211,109,4)" fg:x="96137" fg:w="88"/><text x="77.6581%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (88 samples, 0.07%)</title><rect x="77.4081%" y="661" width="0.0709%" height="15" fill="rgb(238,50,21)" fg:x="96137" fg:w="88"/><text x="77.6581%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (24 samples, 0.02%)</title><rect x="77.4790%" y="677" width="0.0193%" height="15" fill="rgb(225,57,45)" fg:x="96225" fg:w="24"/><text x="77.7290%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (24 samples, 0.02%)</title><rect x="77.4790%" y="661" width="0.0193%" height="15" fill="rgb(209,196,50)" fg:x="96225" fg:w="24"/><text x="77.7290%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (244 samples, 0.20%)</title><rect x="77.3034%" y="725" width="0.1965%" height="15" fill="rgb(242,140,13)" fg:x="96007" fg:w="244"/><text x="77.5534%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (132 samples, 0.11%)</title><rect x="77.3936%" y="709" width="0.1063%" height="15" fill="rgb(217,111,7)" fg:x="96119" fg:w="132"/><text x="77.6436%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (129 samples, 0.10%)</title><rect x="77.3960%" y="693" width="0.1039%" height="15" fill="rgb(253,193,51)" fg:x="96122" fg:w="129"/><text x="77.6460%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (54 samples, 0.04%)</title><rect x="77.4999%" y="725" width="0.0435%" height="15" fill="rgb(252,70,29)" fg:x="96251" fg:w="54"/><text x="77.7499%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (54 samples, 0.04%)</title><rect x="77.4999%" y="709" width="0.0435%" height="15" fill="rgb(232,127,12)" fg:x="96251" fg:w="54"/><text x="77.7499%" y="719.50"></text></g><g><title>event_listener::List::notify (330 samples, 0.27%)</title><rect x="77.2873%" y="789" width="0.2657%" height="15" fill="rgb(211,180,21)" fg:x="95987" fg:w="330"/><text x="77.5373%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (325 samples, 0.26%)</title><rect x="77.2914%" y="773" width="0.2617%" height="15" fill="rgb(229,72,13)" fg:x="95992" fg:w="325"/><text x="77.5414%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (325 samples, 0.26%)</title><rect x="77.2914%" y="757" width="0.2617%" height="15" fill="rgb(240,211,49)" fg:x="95992" fg:w="325"/><text x="77.5414%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (311 samples, 0.25%)</title><rect x="77.3026%" y="741" width="0.2504%" height="15" fill="rgb(219,149,40)" fg:x="96006" fg:w="311"/><text x="77.5526%" y="751.50"></text></g><g><title>event_listener::full_fence (1,681 samples, 1.35%)</title><rect x="77.5530%" y="789" width="1.3535%" height="15" fill="rgb(210,127,46)" fg:x="96317" fg:w="1681"/><text x="77.8030%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,664 samples, 1.34%)</title><rect x="77.5667%" y="773" width="1.3398%" height="15" fill="rgb(220,106,7)" fg:x="96334" fg:w="1664"/><text x="77.8167%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,664 samples, 1.34%)</title><rect x="77.5667%" y="757" width="1.3398%" height="15" fill="rgb(249,31,22)" fg:x="96334" fg:w="1664"/><text x="77.8167%" y="767.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3,511 samples, 2.83%)</title><rect x="76.0804%" y="821" width="2.8270%" height="15" fill="rgb(253,1,49)" fg:x="94488" fg:w="3511"/><text x="76.3304%" y="831.50">as..</text></g><g><title>event_listener::Event::notify (2,118 samples, 1.71%)</title><rect x="77.2020%" y="805" width="1.7054%" height="15" fill="rgb(227,144,33)" fg:x="95881" fg:w="2118"/><text x="77.4520%" y="815.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (34 samples, 0.03%)</title><rect x="78.9074%" y="821" width="0.0274%" height="15" fill="rgb(249,163,44)" fg:x="97999" fg:w="34"/><text x="79.1574%" y="831.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (5,598 samples, 4.51%)</title><rect x="74.6818%" y="917" width="4.5074%" height="15" fill="rgb(234,15,39)" fg:x="92751" fg:w="5598"/><text x="74.9318%" y="927.50">tremo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,958 samples, 3.19%)</title><rect x="76.0023%" y="901" width="3.1869%" height="15" fill="rgb(207,66,16)" fg:x="94391" fg:w="3958"/><text x="76.2523%" y="911.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::send_events::{{closure}} (3,958 samples, 3.19%)</title><rect x="76.0023%" y="885" width="3.1869%" height="15" fill="rgb(233,112,24)" fg:x="94391" fg:w="3958"/><text x="76.2523%" y="895.50">tre..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,958 samples, 3.19%)</title><rect x="76.0023%" y="869" width="3.1869%" height="15" fill="rgb(230,90,22)" fg:x="94391" fg:w="3958"/><text x="76.2523%" y="879.50">&lt;co..</text></g><g><title>tremor_runtime::pipeline::OutputTarget::send_event::{{closure}} (3,958 samples, 3.19%)</title><rect x="76.0023%" y="853" width="3.1869%" height="15" fill="rgb(229,61,13)" fg:x="94391" fg:w="3958"/><text x="76.2523%" y="863.50">tre..</text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (3,958 samples, 3.19%)</title><rect x="76.0023%" y="837" width="3.1869%" height="15" fill="rgb(225,57,24)" fg:x="94391" fg:w="3958"/><text x="76.2523%" y="847.50">&lt;as..</text></g><g><title>event_listener::Event::notify (311 samples, 0.25%)</title><rect x="78.9388%" y="821" width="0.2504%" height="15" fill="rgb(208,169,48)" fg:x="98038" fg:w="311"/><text x="79.1888%" y="831.50"></text></g><g><title>event_listener::full_fence (298 samples, 0.24%)</title><rect x="78.9492%" y="805" width="0.2399%" height="15" fill="rgb(244,218,51)" fg:x="98051" fg:w="298"/><text x="79.1992%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (283 samples, 0.23%)</title><rect x="78.9613%" y="789" width="0.2279%" height="15" fill="rgb(214,148,10)" fg:x="98066" fg:w="283"/><text x="79.2113%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (283 samples, 0.23%)</title><rect x="78.9613%" y="773" width="0.2279%" height="15" fill="rgb(225,174,27)" fg:x="98066" fg:w="283"/><text x="79.2113%" y="783.50"></text></g><g><title>tremor_runtime::postprocessor::postprocess (53 samples, 0.04%)</title><rect x="79.1892%" y="917" width="0.0427%" height="15" fill="rgb(230,96,26)" fg:x="98349" fg:w="53"/><text x="79.4392%" y="927.50"></text></g><g><title>tremor_runtime::preprocessor::preprocess (29 samples, 0.02%)</title><rect x="79.2319%" y="917" width="0.0234%" height="15" fill="rgb(232,10,30)" fg:x="98402" fg:w="29"/><text x="79.4819%" y="927.50"></text></g><g><title>tremor_script::srs::EventPayload::try_new (25 samples, 0.02%)</title><rect x="79.2560%" y="917" width="0.0201%" height="15" fill="rgb(222,8,50)" fg:x="98432" fg:w="25"/><text x="79.5060%" y="927.50"></text></g><g><title>[unknown] (93,748 samples, 75.48%)</title><rect x="3.7924%" y="933" width="75.4845%" height="15" fill="rgb(213,81,27)" fg:x="4710" fg:w="93748"/><text x="4.0424%" y="943.50">[unknown]</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (38 samples, 0.03%)</title><rect x="79.2769%" y="917" width="0.0306%" height="15" fill="rgb(245,50,10)" fg:x="98458" fg:w="38"/><text x="79.5269%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.01%)</title><rect x="79.3075%" y="917" width="0.0121%" height="15" fill="rgb(216,100,18)" fg:x="98496" fg:w="15"/><text x="79.5575%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="79.3196%" y="917" width="0.0193%" height="15" fill="rgb(236,147,54)" fg:x="98511" fg:w="24"/><text x="79.5696%" y="927.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (15 samples, 0.01%)</title><rect x="79.3599%" y="869" width="0.0121%" height="15" fill="rgb(205,143,26)" fg:x="98561" fg:w="15"/><text x="79.6099%" y="879.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (48 samples, 0.04%)</title><rect x="79.3389%" y="917" width="0.0386%" height="15" fill="rgb(236,26,9)" fg:x="98535" fg:w="48"/><text x="79.5889%" y="927.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (42 samples, 0.03%)</title><rect x="79.3438%" y="901" width="0.0338%" height="15" fill="rgb(221,165,53)" fg:x="98541" fg:w="42"/><text x="79.5938%" y="911.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (39 samples, 0.03%)</title><rect x="79.3462%" y="885" width="0.0314%" height="15" fill="rgb(214,110,17)" fg:x="98544" fg:w="39"/><text x="79.5962%" y="895.50"></text></g><g><title>__rust_probestack (15 samples, 0.01%)</title><rect x="79.3776%" y="917" width="0.0121%" height="15" fill="rgb(237,197,12)" fg:x="98583" fg:w="15"/><text x="79.6276%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (56 samples, 0.05%)</title><rect x="79.3905%" y="917" width="0.0451%" height="15" fill="rgb(205,84,17)" fg:x="98599" fg:w="56"/><text x="79.6405%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.05%)</title><rect x="79.4710%" y="901" width="0.0515%" height="15" fill="rgb(237,18,45)" fg:x="98699" fg:w="64"/><text x="79.7210%" y="911.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_source_reply::{{closure}} (55 samples, 0.04%)</title><rect x="79.4782%" y="885" width="0.0443%" height="15" fill="rgb(221,87,14)" fg:x="98708" fg:w="55"/><text x="79.7282%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.03%)</title><rect x="79.4895%" y="869" width="0.0330%" height="15" fill="rgb(238,186,15)" fg:x="98722" fg:w="41"/><text x="79.7395%" y="879.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::handle_data::{{closure}} (38 samples, 0.03%)</title><rect x="79.4919%" y="853" width="0.0306%" height="15" fill="rgb(208,115,11)" fg:x="98725" fg:w="38"/><text x="79.7419%" y="863.50"></text></g><g><title>tremor_runtime::connectors::source::SourceManager&lt;S&gt;::run::{{closure}} (94 samples, 0.08%)</title><rect x="79.4476%" y="917" width="0.0757%" height="15" fill="rgb(254,175,0)" fg:x="98670" fg:w="94"/><text x="79.6976%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.01%)</title><rect x="79.7117%" y="869" width="0.0121%" height="15" fill="rgb(227,24,42)" fg:x="98998" fg:w="15"/><text x="79.9617%" y="879.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="79.7117%" y="853" width="0.0121%" height="15" fill="rgb(223,211,37)" fg:x="98998" fg:w="15"/><text x="79.9617%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.05%)</title><rect x="79.6884%" y="901" width="0.0515%" height="15" fill="rgb(235,49,27)" fg:x="98969" fg:w="64"/><text x="79.9384%" y="911.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::enqueue::{{closure}} (49 samples, 0.04%)</title><rect x="79.7005%" y="885" width="0.0395%" height="15" fill="rgb(254,97,51)" fg:x="98984" fg:w="49"/><text x="79.9505%" y="895.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::run (20 samples, 0.02%)</title><rect x="79.7238%" y="869" width="0.0161%" height="15" fill="rgb(249,51,40)" fg:x="99013" fg:w="20"/><text x="79.9738%" y="879.50"></text></g><g><title>tremor_pipeline::executable_graph::ExecutableGraph::next (20 samples, 0.02%)</title><rect x="79.7238%" y="853" width="0.0161%" height="15" fill="rgb(210,128,45)" fg:x="99013" fg:w="20"/><text x="79.9738%" y="863.50"></text></g><g><title>__dso_handle (587 samples, 0.47%)</title><rect x="79.2769%" y="933" width="0.4726%" height="15" fill="rgb(224,137,50)" fg:x="98458" fg:w="587"/><text x="79.5269%" y="943.50"></text></g><g><title>tremor_runtime::pipeline::pipeline_task::{{closure}} (281 samples, 0.23%)</title><rect x="79.5233%" y="917" width="0.2263%" height="15" fill="rgb(242,15,9)" fg:x="98764" fg:w="281"/><text x="79.7733%" y="927.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (20 samples, 0.02%)</title><rect x="79.7544%" y="933" width="0.0161%" height="15" fill="rgb(233,187,41)" fg:x="99051" fg:w="20"/><text x="80.0044%" y="943.50"></text></g><g><title>anon.7ffb122119e4c1435beee04d7a36cdb5.9.llvm.14803035141670572092 (21 samples, 0.02%)</title><rect x="79.7705%" y="933" width="0.0169%" height="15" fill="rgb(227,2,29)" fg:x="99071" fg:w="21"/><text x="80.0205%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (41 samples, 0.03%)</title><rect x="79.8261%" y="901" width="0.0330%" height="15" fill="rgb(222,70,3)" fg:x="99140" fg:w="41"/><text x="80.0761%" y="911.50"></text></g><g><title>async_task::runnable::Runnable::run (40 samples, 0.03%)</title><rect x="79.8269%" y="885" width="0.0322%" height="15" fill="rgb(213,11,42)" fg:x="99141" fg:w="40"/><text x="80.0769%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (67 samples, 0.05%)</title><rect x="79.8060%" y="917" width="0.0539%" height="15" fill="rgb(225,150,9)" fg:x="99115" fg:w="67"/><text x="80.0560%" y="927.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (38 samples, 0.03%)</title><rect x="79.8599%" y="917" width="0.0306%" height="15" fill="rgb(230,162,45)" fg:x="99182" fg:w="38"/><text x="80.1099%" y="927.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (37 samples, 0.03%)</title><rect x="79.8607%" y="901" width="0.0298%" height="15" fill="rgb(222,14,52)" fg:x="99183" fg:w="37"/><text x="80.1107%" y="911.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (33 samples, 0.03%)</title><rect x="79.8639%" y="885" width="0.0266%" height="15" fill="rgb(254,198,14)" fg:x="99187" fg:w="33"/><text x="80.1139%" y="895.50"></text></g><g><title>parking::Inner::park (16 samples, 0.01%)</title><rect x="79.9114%" y="917" width="0.0129%" height="15" fill="rgb(220,217,30)" fg:x="99246" fg:w="16"/><text x="80.1614%" y="927.50"></text></g><g><title>polling::epoll::Poller::modify (23 samples, 0.02%)</title><rect x="79.9251%" y="917" width="0.0185%" height="15" fill="rgb(215,146,41)" fg:x="99263" fg:w="23"/><text x="80.1751%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (179 samples, 0.14%)</title><rect x="79.8003%" y="933" width="0.1441%" height="15" fill="rgb(217,27,36)" fg:x="99108" fg:w="179"/><text x="80.0503%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (54 samples, 0.04%)</title><rect x="80.4203%" y="325" width="0.0435%" height="15" fill="rgb(219,218,39)" fg:x="99878" fg:w="54"/><text x="80.6703%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::nth (19 samples, 0.02%)</title><rect x="80.5210%" y="261" width="0.0153%" height="15" fill="rgb(219,4,42)" fg:x="100003" fg:w="19"/><text x="80.7710%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (36 samples, 0.03%)</title><rect x="80.6836%" y="229" width="0.0290%" height="15" fill="rgb(249,119,36)" fg:x="100205" fg:w="36"/><text x="80.9336%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (36 samples, 0.03%)</title><rect x="80.6836%" y="213" width="0.0290%" height="15" fill="rgb(209,23,33)" fg:x="100205" fg:w="36"/><text x="80.9336%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (31 samples, 0.02%)</title><rect x="80.6876%" y="197" width="0.0250%" height="15" fill="rgb(211,10,0)" fg:x="100210" fg:w="31"/><text x="80.9376%" y="207.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (30 samples, 0.02%)</title><rect x="80.6884%" y="181" width="0.0242%" height="15" fill="rgb(208,99,37)" fg:x="100211" fg:w="30"/><text x="80.9384%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (30 samples, 0.02%)</title><rect x="80.6884%" y="165" width="0.0242%" height="15" fill="rgb(213,132,31)" fg:x="100211" fg:w="30"/><text x="80.9384%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.10%)</title><rect x="80.7126%" y="229" width="0.0966%" height="15" fill="rgb(243,129,40)" fg:x="100241" fg:w="120"/><text x="80.9626%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (510 samples, 0.41%)</title><rect x="80.4686%" y="277" width="0.4106%" height="15" fill="rgb(210,66,33)" fg:x="99938" fg:w="510"/><text x="80.7186%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (426 samples, 0.34%)</title><rect x="80.5363%" y="261" width="0.3430%" height="15" fill="rgb(209,189,4)" fg:x="100022" fg:w="426"/><text x="80.7863%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (353 samples, 0.28%)</title><rect x="80.5950%" y="245" width="0.2842%" height="15" fill="rgb(214,107,37)" fg:x="100095" fg:w="353"/><text x="80.8450%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (87 samples, 0.07%)</title><rect x="80.8092%" y="229" width="0.0701%" height="15" fill="rgb(245,88,54)" fg:x="100361" fg:w="87"/><text x="81.0592%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (87 samples, 0.07%)</title><rect x="80.8092%" y="213" width="0.0701%" height="15" fill="rgb(205,146,20)" fg:x="100361" fg:w="87"/><text x="81.0592%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (40 samples, 0.03%)</title><rect x="80.8471%" y="197" width="0.0322%" height="15" fill="rgb(220,161,25)" fg:x="100408" fg:w="40"/><text x="81.0971%" y="207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (40 samples, 0.03%)</title><rect x="80.8471%" y="181" width="0.0322%" height="15" fill="rgb(215,152,15)" fg:x="100408" fg:w="40"/><text x="81.0971%" y="191.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (26 samples, 0.02%)</title><rect x="80.8583%" y="165" width="0.0209%" height="15" fill="rgb(233,192,44)" fg:x="100422" fg:w="26"/><text x="81.1083%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (26 samples, 0.02%)</title><rect x="80.8583%" y="149" width="0.0209%" height="15" fill="rgb(240,170,46)" fg:x="100422" fg:w="26"/><text x="81.1083%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (541 samples, 0.44%)</title><rect x="80.4638%" y="325" width="0.4356%" height="15" fill="rgb(207,104,33)" fg:x="99932" fg:w="541"/><text x="80.7138%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (541 samples, 0.44%)</title><rect x="80.4638%" y="309" width="0.4356%" height="15" fill="rgb(219,21,39)" fg:x="99932" fg:w="541"/><text x="80.7138%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (541 samples, 0.44%)</title><rect x="80.4638%" y="293" width="0.4356%" height="15" fill="rgb(214,133,29)" fg:x="99932" fg:w="541"/><text x="80.7138%" y="303.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (25 samples, 0.02%)</title><rect x="80.8793%" y="277" width="0.0201%" height="15" fill="rgb(226,93,6)" fg:x="100448" fg:w="25"/><text x="81.1293%" y="287.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1,196 samples, 0.96%)</title><rect x="81.2674%" y="293" width="0.9630%" height="15" fill="rgb(252,222,34)" fg:x="100930" fg:w="1196"/><text x="81.5174%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (848 samples, 0.68%)</title><rect x="81.5476%" y="277" width="0.6828%" height="15" fill="rgb(252,92,48)" fg:x="101278" fg:w="848"/><text x="81.7976%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (848 samples, 0.68%)</title><rect x="81.5476%" y="261" width="0.6828%" height="15" fill="rgb(245,223,24)" fg:x="101278" fg:w="848"/><text x="81.7976%" y="271.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1,544 samples, 1.24%)</title><rect x="81.0065%" y="309" width="1.2432%" height="15" fill="rgb(205,176,3)" fg:x="100606" fg:w="1544"/><text x="81.2565%" y="319.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (24 samples, 0.02%)</title><rect x="82.2304%" y="293" width="0.0193%" height="15" fill="rgb(235,151,15)" fg:x="102126" fg:w="24"/><text x="82.4804%" y="303.50"></text></g><g><title>async_executor::steal (1,682 samples, 1.35%)</title><rect x="80.8994%" y="325" width="1.3543%" height="15" fill="rgb(237,209,11)" fg:x="100473" fg:w="1682"/><text x="81.1494%" y="335.50"></text></g><g><title>concurrent_queue::full_fence (2,051 samples, 1.65%)</title><rect x="83.0661%" y="293" width="1.6514%" height="15" fill="rgb(243,227,24)" fg:x="103164" fg:w="2051"/><text x="83.3161%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2,005 samples, 1.61%)</title><rect x="83.1032%" y="277" width="1.6144%" height="15" fill="rgb(239,193,16)" fg:x="103210" fg:w="2005"/><text x="83.3532%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2,005 samples, 1.61%)</title><rect x="83.1032%" y="261" width="1.6144%" height="15" fill="rgb(231,27,9)" fg:x="103210" fg:w="2005"/><text x="83.3532%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2,005 samples, 1.61%)</title><rect x="83.1032%" y="245" width="1.6144%" height="15" fill="rgb(219,169,10)" fg:x="103210" fg:w="2005"/><text x="83.3532%" y="255.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,895 samples, 2.33%)</title><rect x="82.4912%" y="309" width="2.3310%" height="15" fill="rgb(244,229,43)" fg:x="102450" fg:w="2895"/><text x="82.7412%" y="319.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::load (128 samples, 0.10%)</title><rect x="84.7192%" y="293" width="0.1031%" height="15" fill="rgb(254,38,20)" fg:x="105217" fg:w="128"/><text x="84.9692%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (84 samples, 0.07%)</title><rect x="84.7546%" y="277" width="0.0676%" height="15" fill="rgb(250,47,30)" fg:x="105261" fg:w="84"/><text x="85.0046%" y="287.50"></text></g><g><title>__rg_dealloc (16 samples, 0.01%)</title><rect x="84.8818%" y="293" width="0.0129%" height="15" fill="rgb(224,124,36)" fg:x="105419" fg:w="16"/><text x="85.1318%" y="303.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16 samples, 0.01%)</title><rect x="84.8818%" y="277" width="0.0129%" height="15" fill="rgb(246,68,51)" fg:x="105419" fg:w="16"/><text x="85.1318%" y="287.50"></text></g><g><title>concurrent_queue::full_fence (268 samples, 0.22%)</title><rect x="84.8955%" y="293" width="0.2158%" height="15" fill="rgb(253,43,49)" fg:x="105436" fg:w="268"/><text x="85.1455%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (268 samples, 0.22%)</title><rect x="84.8955%" y="277" width="0.2158%" height="15" fill="rgb(219,54,36)" fg:x="105436" fg:w="268"/><text x="85.1455%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (268 samples, 0.22%)</title><rect x="84.8955%" y="261" width="0.2158%" height="15" fill="rgb(227,133,34)" fg:x="105436" fg:w="268"/><text x="85.1455%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (268 samples, 0.22%)</title><rect x="84.8955%" y="245" width="0.2158%" height="15" fill="rgb(247,227,15)" fg:x="105436" fg:w="268"/><text x="85.1455%" y="255.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (52 samples, 0.04%)</title><rect x="85.1170%" y="293" width="0.0419%" height="15" fill="rgb(229,96,14)" fg:x="105711" fg:w="52"/><text x="85.3670%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (47 samples, 0.04%)</title><rect x="85.1210%" y="277" width="0.0378%" height="15" fill="rgb(220,79,17)" fg:x="105716" fg:w="47"/><text x="85.3710%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (47 samples, 0.04%)</title><rect x="85.1210%" y="261" width="0.0378%" height="15" fill="rgb(205,131,53)" fg:x="105716" fg:w="47"/><text x="85.3710%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (30 samples, 0.02%)</title><rect x="85.1677%" y="293" width="0.0242%" height="15" fill="rgb(209,50,29)" fg:x="105774" fg:w="30"/><text x="85.4177%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.02%)</title><rect x="85.1677%" y="277" width="0.0242%" height="15" fill="rgb(245,86,46)" fg:x="105774" fg:w="30"/><text x="85.4177%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (164 samples, 0.13%)</title><rect x="85.1918%" y="293" width="0.1321%" height="15" fill="rgb(235,66,46)" fg:x="105804" fg:w="164"/><text x="85.4418%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (164 samples, 0.13%)</title><rect x="85.1918%" y="277" width="0.1321%" height="15" fill="rgb(232,148,31)" fg:x="105804" fg:w="164"/><text x="85.4418%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (164 samples, 0.13%)</title><rect x="85.3239%" y="293" width="0.1321%" height="15" fill="rgb(217,149,8)" fg:x="105968" fg:w="164"/><text x="85.5739%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_or (164 samples, 0.13%)</title><rect x="85.3239%" y="277" width="0.1321%" height="15" fill="rgb(209,183,11)" fg:x="105968" fg:w="164"/><text x="85.5739%" y="287.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4,174 samples, 3.36%)</title><rect x="82.2537%" y="325" width="3.3608%" height="15" fill="rgb(208,55,20)" fg:x="102155" fg:w="4174"/><text x="82.5037%" y="335.50">con..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (984 samples, 0.79%)</title><rect x="84.8223%" y="309" width="0.7923%" height="15" fill="rgb(218,39,14)" fg:x="105345" fg:w="984"/><text x="85.0723%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (197 samples, 0.16%)</title><rect x="85.4559%" y="293" width="0.1586%" height="15" fill="rgb(216,169,33)" fg:x="106132" fg:w="197"/><text x="85.7059%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (197 samples, 0.16%)</title><rect x="85.4559%" y="277" width="0.1586%" height="15" fill="rgb(233,80,24)" fg:x="106132" fg:w="197"/><text x="85.7059%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (200 samples, 0.16%)</title><rect x="85.6146%" y="325" width="0.1610%" height="15" fill="rgb(213,179,31)" fg:x="106329" fg:w="200"/><text x="85.8646%" y="335.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (200 samples, 0.16%)</title><rect x="85.6146%" y="309" width="0.1610%" height="15" fill="rgb(209,19,5)" fg:x="106329" fg:w="200"/><text x="85.8646%" y="319.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (200 samples, 0.16%)</title><rect x="85.6146%" y="293" width="0.1610%" height="15" fill="rgb(219,18,35)" fg:x="106329" fg:w="200"/><text x="85.8646%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (200 samples, 0.16%)</title><rect x="85.6146%" y="277" width="0.1610%" height="15" fill="rgb(209,169,16)" fg:x="106329" fg:w="200"/><text x="85.8646%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (191 samples, 0.15%)</title><rect x="85.6218%" y="261" width="0.1538%" height="15" fill="rgb(245,90,51)" fg:x="106338" fg:w="191"/><text x="85.8718%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (191 samples, 0.15%)</title><rect x="85.6218%" y="245" width="0.1538%" height="15" fill="rgb(220,99,45)" fg:x="106338" fg:w="191"/><text x="85.8718%" y="255.50"></text></g><g><title>fastrand::RNG::__getit (14 samples, 0.01%)</title><rect x="85.7869%" y="277" width="0.0113%" height="15" fill="rgb(249,89,25)" fg:x="106543" fg:w="14"/><text x="86.0369%" y="287.50"></text></g><g><title>fastrand::usize (55 samples, 0.04%)</title><rect x="85.7756%" y="325" width="0.0443%" height="15" fill="rgb(239,193,0)" fg:x="106529" fg:w="55"/><text x="86.0256%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 0.04%)</title><rect x="85.7820%" y="309" width="0.0378%" height="15" fill="rgb(231,126,1)" fg:x="106537" fg:w="47"/><text x="86.0320%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.04%)</title><rect x="85.7820%" y="293" width="0.0378%" height="15" fill="rgb(243,166,3)" fg:x="106537" fg:w="47"/><text x="86.0320%" y="303.50"></text></g><g><title>fastrand::usize::{{closure}} (27 samples, 0.02%)</title><rect x="85.7981%" y="277" width="0.0217%" height="15" fill="rgb(223,22,34)" fg:x="106557" fg:w="27"/><text x="86.0481%" y="287.50"></text></g><g><title>fastrand::Rng::usize (27 samples, 0.02%)</title><rect x="85.7981%" y="261" width="0.0217%" height="15" fill="rgb(251,52,51)" fg:x="106557" fg:w="27"/><text x="86.0481%" y="271.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (18 samples, 0.01%)</title><rect x="85.8054%" y="245" width="0.0145%" height="15" fill="rgb(221,165,28)" fg:x="106566" fg:w="18"/><text x="86.0554%" y="255.50"></text></g><g><title>std::sync::poison::Flag::get (40 samples, 0.03%)</title><rect x="85.8199%" y="277" width="0.0322%" height="15" fill="rgb(218,121,47)" fg:x="106584" fg:w="40"/><text x="86.0699%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (40 samples, 0.03%)</title><rect x="85.8199%" y="261" width="0.0322%" height="15" fill="rgb(209,120,9)" fg:x="106584" fg:w="40"/><text x="86.0699%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.03%)</title><rect x="85.8199%" y="245" width="0.0322%" height="15" fill="rgb(236,68,12)" fg:x="106584" fg:w="40"/><text x="86.0699%" y="255.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (46 samples, 0.04%)</title><rect x="85.8199%" y="309" width="0.0370%" height="15" fill="rgb(225,194,26)" fg:x="106584" fg:w="46"/><text x="86.0699%" y="319.50"></text></g><g><title>std::sync::poison::Flag::borrow (46 samples, 0.04%)</title><rect x="85.8199%" y="293" width="0.0370%" height="15" fill="rgb(231,84,39)" fg:x="106584" fg:w="46"/><text x="86.0699%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (327 samples, 0.26%)</title><rect x="85.8585%" y="277" width="0.2633%" height="15" fill="rgb(210,11,45)" fg:x="106632" fg:w="327"/><text x="86.1085%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (327 samples, 0.26%)</title><rect x="85.8585%" y="261" width="0.2633%" height="15" fill="rgb(224,54,52)" fg:x="106632" fg:w="327"/><text x="86.1085%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (93 samples, 0.07%)</title><rect x="86.1218%" y="277" width="0.0749%" height="15" fill="rgb(238,102,14)" fg:x="106959" fg:w="93"/><text x="86.3718%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (93 samples, 0.07%)</title><rect x="86.1218%" y="261" width="0.0749%" height="15" fill="rgb(243,160,52)" fg:x="106959" fg:w="93"/><text x="86.3718%" y="271.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (7,444 samples, 5.99%)</title><rect x="80.2126%" y="341" width="5.9938%" height="15" fill="rgb(216,114,19)" fg:x="99620" fg:w="7444"/><text x="80.4626%" y="351.50">async_ex..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (480 samples, 0.39%)</title><rect x="85.8199%" y="325" width="0.3865%" height="15" fill="rgb(244,166,37)" fg:x="106584" fg:w="480"/><text x="86.0699%" y="335.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (434 samples, 0.35%)</title><rect x="85.8569%" y="309" width="0.3495%" height="15" fill="rgb(246,29,44)" fg:x="106630" fg:w="434"/><text x="86.1069%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (434 samples, 0.35%)</title><rect x="85.8569%" y="293" width="0.3495%" height="15" fill="rgb(215,56,53)" fg:x="106630" fg:w="434"/><text x="86.1069%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (42 samples, 0.03%)</title><rect x="86.2193%" y="261" width="0.0338%" height="15" fill="rgb(217,60,2)" fg:x="107080" fg:w="42"/><text x="86.4693%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (42 samples, 0.03%)</title><rect x="86.2193%" y="245" width="0.0338%" height="15" fill="rgb(207,26,24)" fg:x="107080" fg:w="42"/><text x="86.4693%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (43 samples, 0.03%)</title><rect x="86.2193%" y="325" width="0.0346%" height="15" fill="rgb(252,210,15)" fg:x="107080" fg:w="43"/><text x="86.4693%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.03%)</title><rect x="86.2193%" y="309" width="0.0346%" height="15" fill="rgb(253,209,26)" fg:x="107080" fg:w="43"/><text x="86.4693%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (43 samples, 0.03%)</title><rect x="86.2193%" y="293" width="0.0346%" height="15" fill="rgb(238,170,14)" fg:x="107080" fg:w="43"/><text x="86.4693%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (43 samples, 0.03%)</title><rect x="86.2193%" y="277" width="0.0346%" height="15" fill="rgb(216,178,15)" fg:x="107080" fg:w="43"/><text x="86.4693%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (100 samples, 0.08%)</title><rect x="86.2539%" y="325" width="0.0805%" height="15" fill="rgb(250,197,2)" fg:x="107123" fg:w="100"/><text x="86.5039%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (100 samples, 0.08%)</title><rect x="86.2539%" y="309" width="0.0805%" height="15" fill="rgb(212,70,42)" fg:x="107123" fg:w="100"/><text x="86.5039%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (16 samples, 0.01%)</title><rect x="86.3537%" y="245" width="0.0129%" height="15" fill="rgb(227,213,9)" fg:x="107247" fg:w="16"/><text x="86.6037%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="86.3537%" y="229" width="0.0129%" height="15" fill="rgb(245,99,25)" fg:x="107247" fg:w="16"/><text x="86.6037%" y="239.50"></text></g><g><title>async_io::reactor::Reactor::notify (53 samples, 0.04%)</title><rect x="86.3489%" y="277" width="0.0427%" height="15" fill="rgb(250,82,29)" fg:x="107241" fg:w="53"/><text x="86.5989%" y="287.50"></text></g><g><title>polling::Poller::notify (48 samples, 0.04%)</title><rect x="86.3529%" y="261" width="0.0386%" height="15" fill="rgb(241,226,54)" fg:x="107246" fg:w="48"/><text x="86.6029%" y="271.50"></text></g><g><title>polling::epoll::Poller::notify (31 samples, 0.02%)</title><rect x="86.3666%" y="245" width="0.0250%" height="15" fill="rgb(221,99,41)" fg:x="107263" fg:w="31"/><text x="86.6166%" y="255.50"></text></g><g><title>__libc_write (26 samples, 0.02%)</title><rect x="86.3706%" y="229" width="0.0209%" height="15" fill="rgb(213,90,21)" fg:x="107268" fg:w="26"/><text x="86.6206%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (16 samples, 0.01%)</title><rect x="86.3916%" y="277" width="0.0129%" height="15" fill="rgb(205,208,24)" fg:x="107294" fg:w="16"/><text x="86.6416%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="86.3924%" y="261" width="0.0121%" height="15" fill="rgb(246,31,12)" fg:x="107295" fg:w="15"/><text x="86.6424%" y="271.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="86.4350%" y="245" width="0.0121%" height="15" fill="rgb(213,154,6)" fg:x="107348" fg:w="15"/><text x="86.6850%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (15 samples, 0.01%)</title><rect x="86.4350%" y="229" width="0.0121%" height="15" fill="rgb(222,163,29)" fg:x="107348" fg:w="15"/><text x="86.6850%" y="239.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="86.4350%" y="213" width="0.0121%" height="15" fill="rgb(227,201,8)" fg:x="107348" fg:w="15"/><text x="86.6850%" y="223.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.01%)</title><rect x="86.4350%" y="197" width="0.0121%" height="15" fill="rgb(233,9,32)" fg:x="107348" fg:w="15"/><text x="86.6850%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (15 samples, 0.01%)</title><rect x="86.4350%" y="181" width="0.0121%" height="15" fill="rgb(217,54,24)" fg:x="107348" fg:w="15"/><text x="86.6850%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.01%)</title><rect x="86.4350%" y="165" width="0.0121%" height="15" fill="rgb(235,192,0)" fg:x="107348" fg:w="15"/><text x="86.6850%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="86.4350%" y="149" width="0.0121%" height="15" fill="rgb(235,45,9)" fg:x="107348" fg:w="15"/><text x="86.6850%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (76 samples, 0.06%)</title><rect x="86.4471%" y="245" width="0.0612%" height="15" fill="rgb(246,42,40)" fg:x="107363" fg:w="76"/><text x="86.6971%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_swap (76 samples, 0.06%)</title><rect x="86.4471%" y="229" width="0.0612%" height="15" fill="rgb(248,111,24)" fg:x="107363" fg:w="76"/><text x="86.6971%" y="239.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="86.5083%" y="245" width="0.0274%" height="15" fill="rgb(249,65,22)" fg:x="107439" fg:w="34"/><text x="86.7583%" y="255.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (34 samples, 0.03%)</title><rect x="86.5083%" y="229" width="0.0274%" height="15" fill="rgb(238,111,51)" fg:x="107439" fg:w="34"/><text x="86.7583%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (34 samples, 0.03%)</title><rect x="86.5083%" y="213" width="0.0274%" height="15" fill="rgb(250,118,22)" fg:x="107439" fg:w="34"/><text x="86.7583%" y="223.50"></text></g><g><title>std::sys::unix::futex::futex_wake (23 samples, 0.02%)</title><rect x="86.5172%" y="197" width="0.0185%" height="15" fill="rgb(234,84,26)" fg:x="107450" fg:w="23"/><text x="86.7672%" y="207.50"></text></g><g><title>syscall (23 samples, 0.02%)</title><rect x="86.5172%" y="181" width="0.0185%" height="15" fill="rgb(243,172,12)" fg:x="107450" fg:w="23"/><text x="86.7672%" y="191.50"></text></g><g><title>parking::Unparker::unpark (180 samples, 0.14%)</title><rect x="86.4044%" y="277" width="0.1449%" height="15" fill="rgb(236,150,49)" fg:x="107310" fg:w="180"/><text x="86.6544%" y="287.50"></text></g><g><title>parking::Inner::unpark (148 samples, 0.12%)</title><rect x="86.4302%" y="261" width="0.1192%" height="15" fill="rgb(225,197,26)" fg:x="107342" fg:w="148"/><text x="86.6802%" y="271.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.01%)</title><rect x="86.5357%" y="245" width="0.0137%" height="15" fill="rgb(214,17,42)" fg:x="107473" fg:w="17"/><text x="86.7857%" y="255.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.01%)</title><rect x="86.5381%" y="229" width="0.0113%" height="15" fill="rgb(224,165,40)" fg:x="107476" fg:w="14"/><text x="86.7881%" y="239.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (14 samples, 0.01%)</title><rect x="86.5381%" y="213" width="0.0113%" height="15" fill="rgb(246,100,4)" fg:x="107476" fg:w="14"/><text x="86.7881%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (14 samples, 0.01%)</title><rect x="86.5381%" y="197" width="0.0113%" height="15" fill="rgb(222,103,0)" fg:x="107476" fg:w="14"/><text x="86.7881%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="86.5381%" y="181" width="0.0113%" height="15" fill="rgb(227,189,26)" fg:x="107476" fg:w="14"/><text x="86.7881%" y="191.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (30 samples, 0.02%)</title><rect x="86.5494%" y="245" width="0.0242%" height="15" fill="rgb(214,202,17)" fg:x="107490" fg:w="30"/><text x="86.7994%" y="255.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (30 samples, 0.02%)</title><rect x="86.5494%" y="229" width="0.0242%" height="15" fill="rgb(229,111,3)" fg:x="107490" fg:w="30"/><text x="86.7994%" y="239.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (29 samples, 0.02%)</title><rect x="86.5502%" y="213" width="0.0234%" height="15" fill="rgb(229,172,15)" fg:x="107491" fg:w="29"/><text x="86.8002%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (29 samples, 0.02%)</title><rect x="86.5502%" y="197" width="0.0234%" height="15" fill="rgb(230,224,35)" fg:x="107491" fg:w="29"/><text x="86.8002%" y="207.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (298 samples, 0.24%)</title><rect x="86.3352%" y="293" width="0.2399%" height="15" fill="rgb(251,141,6)" fg:x="107224" fg:w="298"/><text x="86.5852%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.03%)</title><rect x="86.5494%" y="277" width="0.0258%" height="15" fill="rgb(225,208,6)" fg:x="107490" fg:w="32"/><text x="86.7994%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.03%)</title><rect x="86.5494%" y="261" width="0.0258%" height="15" fill="rgb(246,181,16)" fg:x="107490" fg:w="32"/><text x="86.7994%" y="271.50"></text></g><g><title>core::task::wake::Waker::wake (391 samples, 0.31%)</title><rect x="86.3344%" y="325" width="0.3148%" height="15" fill="rgb(227,129,36)" fg:x="107223" fg:w="391"/><text x="86.5844%" y="335.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (391 samples, 0.31%)</title><rect x="86.3344%" y="309" width="0.3148%" height="15" fill="rgb(248,117,24)" fg:x="107223" fg:w="391"/><text x="86.5844%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (92 samples, 0.07%)</title><rect x="86.5751%" y="293" width="0.0741%" height="15" fill="rgb(214,185,35)" fg:x="107522" fg:w="92"/><text x="86.8251%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.07%)</title><rect x="86.5751%" y="277" width="0.0741%" height="15" fill="rgb(236,150,34)" fg:x="107522" fg:w="92"/><text x="86.8251%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (84 samples, 0.07%)</title><rect x="86.5816%" y="261" width="0.0676%" height="15" fill="rgb(243,228,27)" fg:x="107530" fg:w="84"/><text x="86.8316%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_sub (84 samples, 0.07%)</title><rect x="86.5816%" y="245" width="0.0676%" height="15" fill="rgb(245,77,44)" fg:x="107530" fg:w="84"/><text x="86.8316%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (32 samples, 0.03%)</title><rect x="86.6532%" y="277" width="0.0258%" height="15" fill="rgb(235,214,42)" fg:x="107619" fg:w="32"/><text x="86.9032%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.03%)</title><rect x="86.6532%" y="261" width="0.0258%" height="15" fill="rgb(221,74,3)" fg:x="107619" fg:w="32"/><text x="86.9032%" y="271.50"></text></g><g><title>async_executor::State::notify (594 samples, 0.48%)</title><rect x="86.2064%" y="341" width="0.4783%" height="15" fill="rgb(206,121,29)" fg:x="107064" fg:w="594"/><text x="86.4564%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (44 samples, 0.04%)</title><rect x="86.6492%" y="325" width="0.0354%" height="15" fill="rgb(249,131,53)" fg:x="107614" fg:w="44"/><text x="86.8992%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.03%)</title><rect x="86.6532%" y="309" width="0.0314%" height="15" fill="rgb(236,170,29)" fg:x="107619" fg:w="39"/><text x="86.9032%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (39 samples, 0.03%)</title><rect x="86.6532%" y="293" width="0.0314%" height="15" fill="rgb(247,96,15)" fg:x="107619" fg:w="39"/><text x="86.9032%" y="303.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (136 samples, 0.11%)</title><rect x="86.7072%" y="309" width="0.1095%" height="15" fill="rgb(211,210,7)" fg:x="107686" fg:w="136"/><text x="86.9572%" y="319.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (135 samples, 0.11%)</title><rect x="86.7080%" y="293" width="0.1087%" height="15" fill="rgb(240,88,50)" fg:x="107687" fg:w="135"/><text x="86.9580%" y="303.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (135 samples, 0.11%)</title><rect x="86.7080%" y="277" width="0.1087%" height="15" fill="rgb(209,229,26)" fg:x="107687" fg:w="135"/><text x="86.9580%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (135 samples, 0.11%)</title><rect x="86.7080%" y="261" width="0.1087%" height="15" fill="rgb(210,68,23)" fg:x="107687" fg:w="135"/><text x="86.9580%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (135 samples, 0.11%)</title><rect x="86.7080%" y="245" width="0.1087%" height="15" fill="rgb(229,180,13)" fg:x="107687" fg:w="135"/><text x="86.9580%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_add (135 samples, 0.11%)</title><rect x="86.7080%" y="229" width="0.1087%" height="15" fill="rgb(236,53,44)" fg:x="107687" fg:w="135"/><text x="86.9580%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (31 samples, 0.02%)</title><rect x="86.8167%" y="309" width="0.0250%" height="15" fill="rgb(244,214,29)" fg:x="107822" fg:w="31"/><text x="87.0667%" y="319.50"></text></g><g><title>async_executor::Sleepers::insert (219 samples, 0.18%)</title><rect x="86.7048%" y="325" width="0.1763%" height="15" fill="rgb(220,75,29)" fg:x="107683" fg:w="219"/><text x="86.9548%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.04%)</title><rect x="86.8417%" y="309" width="0.0395%" height="15" fill="rgb(214,183,37)" fg:x="107853" fg:w="49"/><text x="87.0917%" y="319.50"></text></g><g><title>core::ptr::write (37 samples, 0.03%)</title><rect x="86.8513%" y="293" width="0.0298%" height="15" fill="rgb(239,117,29)" fg:x="107865" fg:w="37"/><text x="87.1013%" y="303.50"></text></g><g><title>async_executor::Sleepers::is_notified (20 samples, 0.02%)</title><rect x="86.8811%" y="325" width="0.0161%" height="15" fill="rgb(237,171,35)" fg:x="107902" fg:w="20"/><text x="87.1311%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.02%)</title><rect x="86.9584%" y="309" width="0.0242%" height="15" fill="rgb(229,178,53)" fg:x="107998" fg:w="30"/><text x="87.2084%" y="319.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (104 samples, 0.08%)</title><rect x="86.9826%" y="309" width="0.0837%" height="15" fill="rgb(210,102,19)" fg:x="108028" fg:w="104"/><text x="87.2326%" y="319.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (101 samples, 0.08%)</title><rect x="86.9850%" y="293" width="0.0813%" height="15" fill="rgb(235,127,22)" fg:x="108031" fg:w="101"/><text x="87.2350%" y="303.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (101 samples, 0.08%)</title><rect x="86.9850%" y="277" width="0.0813%" height="15" fill="rgb(244,31,31)" fg:x="108031" fg:w="101"/><text x="87.2350%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (101 samples, 0.08%)</title><rect x="86.9850%" y="261" width="0.0813%" height="15" fill="rgb(231,43,21)" fg:x="108031" fg:w="101"/><text x="87.2350%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (101 samples, 0.08%)</title><rect x="86.9850%" y="245" width="0.0813%" height="15" fill="rgb(217,131,35)" fg:x="108031" fg:w="101"/><text x="87.2350%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_add (101 samples, 0.08%)</title><rect x="86.9850%" y="229" width="0.0813%" height="15" fill="rgb(221,149,4)" fg:x="108031" fg:w="101"/><text x="87.2350%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.02%)</title><rect x="87.0663%" y="309" width="0.0193%" height="15" fill="rgb(232,170,28)" fg:x="108132" fg:w="24"/><text x="87.3163%" y="319.50"></text></g><g><title>core::ptr::write (18 samples, 0.01%)</title><rect x="87.0711%" y="293" width="0.0145%" height="15" fill="rgb(238,56,10)" fg:x="108138" fg:w="18"/><text x="87.3211%" y="303.50"></text></g><g><title>async_executor::Sleepers::update (259 samples, 0.21%)</title><rect x="86.8972%" y="325" width="0.2085%" height="15" fill="rgb(235,196,14)" fg:x="107922" fg:w="259"/><text x="87.1472%" y="335.50"></text></g><g><title>core::task::wake::Waker::will_wake (25 samples, 0.02%)</title><rect x="87.0856%" y="309" width="0.0201%" height="15" fill="rgb(216,45,48)" fg:x="108156" fg:w="25"/><text x="87.3356%" y="319.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (25 samples, 0.02%)</title><rect x="87.0856%" y="293" width="0.0201%" height="15" fill="rgb(238,213,17)" fg:x="108156" fg:w="25"/><text x="87.3356%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="87.0945%" y="277" width="0.0113%" height="15" fill="rgb(212,13,2)" fg:x="108167" fg:w="14"/><text x="87.3445%" y="287.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="87.0945%" y="261" width="0.0113%" height="15" fill="rgb(240,114,20)" fg:x="108167" fg:w="14"/><text x="87.3445%" y="271.50"></text></g><g><title>std::sync::poison::Flag::done (15 samples, 0.01%)</title><rect x="87.1066%" y="293" width="0.0121%" height="15" fill="rgb(228,41,40)" fg:x="108182" fg:w="15"/><text x="87.3566%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (183 samples, 0.15%)</title><rect x="87.1186%" y="261" width="0.1473%" height="15" fill="rgb(244,132,35)" fg:x="108197" fg:w="183"/><text x="87.3686%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (183 samples, 0.15%)</title><rect x="87.1186%" y="245" width="0.1473%" height="15" fill="rgb(253,189,4)" fg:x="108197" fg:w="183"/><text x="87.3686%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (203 samples, 0.16%)</title><rect x="87.1058%" y="325" width="0.1635%" height="15" fill="rgb(224,37,19)" fg:x="108181" fg:w="203"/><text x="87.3558%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (203 samples, 0.16%)</title><rect x="87.1058%" y="309" width="0.1635%" height="15" fill="rgb(235,223,18)" fg:x="108181" fg:w="203"/><text x="87.3558%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (187 samples, 0.15%)</title><rect x="87.1186%" y="293" width="0.1506%" height="15" fill="rgb(235,163,25)" fg:x="108197" fg:w="187"/><text x="87.3686%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (187 samples, 0.15%)</title><rect x="87.1186%" y="277" width="0.1506%" height="15" fill="rgb(217,145,28)" fg:x="108197" fg:w="187"/><text x="87.3686%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (211 samples, 0.17%)</title><rect x="87.2692%" y="325" width="0.1699%" height="15" fill="rgb(223,223,32)" fg:x="108384" fg:w="211"/><text x="87.5192%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (211 samples, 0.17%)</title><rect x="87.2692%" y="309" width="0.1699%" height="15" fill="rgb(227,189,39)" fg:x="108384" fg:w="211"/><text x="87.5192%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (199 samples, 0.16%)</title><rect x="87.4391%" y="325" width="0.1602%" height="15" fill="rgb(248,10,22)" fg:x="108595" fg:w="199"/><text x="87.6891%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_store (199 samples, 0.16%)</title><rect x="87.4391%" y="309" width="0.1602%" height="15" fill="rgb(248,46,39)" fg:x="108595" fg:w="199"/><text x="87.6891%" y="319.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (32 samples, 0.03%)</title><rect x="87.5993%" y="309" width="0.0258%" height="15" fill="rgb(248,113,48)" fg:x="108794" fg:w="32"/><text x="87.8493%" y="319.50"></text></g><g><title>std::sync::poison::Flag::borrow (32 samples, 0.03%)</title><rect x="87.5993%" y="293" width="0.0258%" height="15" fill="rgb(245,16,25)" fg:x="108794" fg:w="32"/><text x="87.8493%" y="303.50"></text></g><g><title>std::thread::panicking (13 samples, 0.01%)</title><rect x="87.6146%" y="277" width="0.0105%" height="15" fill="rgb(249,152,16)" fg:x="108813" fg:w="13"/><text x="87.8646%" y="287.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.01%)</title><rect x="87.6146%" y="261" width="0.0105%" height="15" fill="rgb(250,16,1)" fg:x="108813" fg:w="13"/><text x="87.8646%" y="271.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.01%)</title><rect x="87.6146%" y="245" width="0.0105%" height="15" fill="rgb(249,138,3)" fg:x="108813" fg:w="13"/><text x="87.8646%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (224 samples, 0.18%)</title><rect x="87.6283%" y="277" width="0.1804%" height="15" fill="rgb(227,71,41)" fg:x="108830" fg:w="224"/><text x="87.8783%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (224 samples, 0.18%)</title><rect x="87.6283%" y="261" width="0.1804%" height="15" fill="rgb(209,184,23)" fg:x="108830" fg:w="224"/><text x="87.8783%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (35 samples, 0.03%)</title><rect x="87.8103%" y="261" width="0.0282%" height="15" fill="rgb(223,215,31)" fg:x="109056" fg:w="35"/><text x="88.0603%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="87.8103%" y="245" width="0.0282%" height="15" fill="rgb(210,146,28)" fg:x="109056" fg:w="35"/><text x="88.0603%" y="255.50"></text></g><g><title>core::hint::spin_loop (33 samples, 0.03%)</title><rect x="87.8465%" y="245" width="0.0266%" height="15" fill="rgb(209,183,41)" fg:x="109101" fg:w="33"/><text x="88.0965%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (33 samples, 0.03%)</title><rect x="87.8465%" y="229" width="0.0266%" height="15" fill="rgb(209,224,45)" fg:x="109101" fg:w="33"/><text x="88.0965%" y="239.50"></text></g><g><title>async_executor::Ticker::sleep (1,508 samples, 1.21%)</title><rect x="86.6846%" y="341" width="1.2142%" height="15" fill="rgb(224,209,51)" fg:x="107658" fg:w="1508"/><text x="86.9346%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (372 samples, 0.30%)</title><rect x="87.5993%" y="325" width="0.2995%" height="15" fill="rgb(223,17,39)" fg:x="108794" fg:w="372"/><text x="87.8493%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (340 samples, 0.27%)</title><rect x="87.6251%" y="309" width="0.2738%" height="15" fill="rgb(234,204,37)" fg:x="108826" fg:w="340"/><text x="87.8751%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (340 samples, 0.27%)</title><rect x="87.6251%" y="293" width="0.2738%" height="15" fill="rgb(236,120,5)" fg:x="108826" fg:w="340"/><text x="87.8751%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (112 samples, 0.09%)</title><rect x="87.8087%" y="277" width="0.0902%" height="15" fill="rgb(248,97,27)" fg:x="109054" fg:w="112"/><text x="88.0587%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (65 samples, 0.05%)</title><rect x="87.8465%" y="261" width="0.0523%" height="15" fill="rgb(240,66,17)" fg:x="109101" fg:w="65"/><text x="88.0965%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (32 samples, 0.03%)</title><rect x="87.8731%" y="245" width="0.0258%" height="15" fill="rgb(210,79,3)" fg:x="109134" fg:w="32"/><text x="88.1231%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.03%)</title><rect x="87.8731%" y="229" width="0.0258%" height="15" fill="rgb(214,176,27)" fg:x="109134" fg:w="32"/><text x="88.1231%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="87.9552%" y="309" width="0.0121%" height="15" fill="rgb(235,185,3)" fg:x="109236" fg:w="15"/><text x="88.2052%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (15 samples, 0.01%)</title><rect x="87.9552%" y="293" width="0.0121%" height="15" fill="rgb(227,24,12)" fg:x="109236" fg:w="15"/><text x="88.2052%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (15 samples, 0.01%)</title><rect x="87.9552%" y="277" width="0.0121%" height="15" fill="rgb(252,169,48)" fg:x="109236" fg:w="15"/><text x="88.2052%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.01%)</title><rect x="87.9673%" y="309" width="0.0121%" height="15" fill="rgb(212,65,1)" fg:x="109251" fg:w="15"/><text x="88.2173%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (17 samples, 0.01%)</title><rect x="87.9794%" y="309" width="0.0137%" height="15" fill="rgb(242,39,24)" fg:x="109266" fg:w="17"/><text x="88.2294%" y="319.50"></text></g><g><title>async_executor::Sleepers::remove (172 samples, 0.14%)</title><rect x="87.9206%" y="325" width="0.1385%" height="15" fill="rgb(249,32,23)" fg:x="109193" fg:w="172"/><text x="88.1706%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (82 samples, 0.07%)</title><rect x="87.9931%" y="309" width="0.0660%" height="15" fill="rgb(251,195,23)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (82 samples, 0.07%)</title><rect x="87.9931%" y="293" width="0.0660%" height="15" fill="rgb(236,174,8)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="303.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (82 samples, 0.07%)</title><rect x="87.9931%" y="277" width="0.0660%" height="15" fill="rgb(220,197,8)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="287.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (82 samples, 0.07%)</title><rect x="87.9931%" y="261" width="0.0660%" height="15" fill="rgb(240,108,37)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="271.50"></text></g><g><title>core::mem::drop (82 samples, 0.07%)</title><rect x="87.9931%" y="245" width="0.0660%" height="15" fill="rgb(232,176,24)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (82 samples, 0.07%)</title><rect x="87.9931%" y="229" width="0.0660%" height="15" fill="rgb(243,35,29)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="239.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.07%)</title><rect x="87.9931%" y="213" width="0.0660%" height="15" fill="rgb(210,37,18)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (82 samples, 0.07%)</title><rect x="87.9931%" y="197" width="0.0660%" height="15" fill="rgb(224,184,40)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_sub (82 samples, 0.07%)</title><rect x="87.9931%" y="181" width="0.0660%" height="15" fill="rgb(236,39,29)" fg:x="109283" fg:w="82"/><text x="88.2431%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (42 samples, 0.03%)</title><rect x="88.0647%" y="261" width="0.0338%" height="15" fill="rgb(232,48,39)" fg:x="109372" fg:w="42"/><text x="88.3147%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_swap (42 samples, 0.03%)</title><rect x="88.0647%" y="245" width="0.0338%" height="15" fill="rgb(236,34,42)" fg:x="109372" fg:w="42"/><text x="88.3147%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (51 samples, 0.04%)</title><rect x="88.0591%" y="325" width="0.0411%" height="15" fill="rgb(243,106,37)" fg:x="109365" fg:w="51"/><text x="88.3091%" y="335.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.04%)</title><rect x="88.0591%" y="309" width="0.0411%" height="15" fill="rgb(218,96,6)" fg:x="109365" fg:w="51"/><text x="88.3091%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (44 samples, 0.04%)</title><rect x="88.0647%" y="293" width="0.0354%" height="15" fill="rgb(235,130,12)" fg:x="109372" fg:w="44"/><text x="88.3147%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (44 samples, 0.04%)</title><rect x="88.0647%" y="277" width="0.0354%" height="15" fill="rgb(231,95,0)" fg:x="109372" fg:w="44"/><text x="88.3147%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (101 samples, 0.08%)</title><rect x="88.1002%" y="325" width="0.0813%" height="15" fill="rgb(228,12,23)" fg:x="109416" fg:w="101"/><text x="88.3502%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (101 samples, 0.08%)</title><rect x="88.1002%" y="309" width="0.0813%" height="15" fill="rgb(216,12,1)" fg:x="109416" fg:w="101"/><text x="88.3502%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (92 samples, 0.07%)</title><rect x="88.1815%" y="325" width="0.0741%" height="15" fill="rgb(219,59,3)" fg:x="109517" fg:w="92"/><text x="88.4315%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (92 samples, 0.07%)</title><rect x="88.1815%" y="309" width="0.0741%" height="15" fill="rgb(215,208,46)" fg:x="109517" fg:w="92"/><text x="88.4315%" y="319.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (13 samples, 0.01%)</title><rect x="88.2556%" y="309" width="0.0105%" height="15" fill="rgb(254,224,29)" fg:x="109609" fg:w="13"/><text x="88.5056%" y="319.50"></text></g><g><title>std::sync::poison::Flag::borrow (13 samples, 0.01%)</title><rect x="88.2556%" y="293" width="0.0105%" height="15" fill="rgb(232,14,29)" fg:x="109609" fg:w="13"/><text x="88.5056%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (88 samples, 0.07%)</title><rect x="88.2668%" y="277" width="0.0709%" height="15" fill="rgb(208,45,52)" fg:x="109623" fg:w="88"/><text x="88.5168%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (88 samples, 0.07%)</title><rect x="88.2668%" y="261" width="0.0709%" height="15" fill="rgb(234,191,28)" fg:x="109623" fg:w="88"/><text x="88.5168%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (17 samples, 0.01%)</title><rect x="88.3393%" y="261" width="0.0137%" height="15" fill="rgb(244,67,43)" fg:x="109713" fg:w="17"/><text x="88.5893%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.01%)</title><rect x="88.3393%" y="245" width="0.0137%" height="15" fill="rgb(236,189,24)" fg:x="109713" fg:w="17"/><text x="88.5893%" y="255.50"></text></g><g><title>core::hint::spin_loop (13 samples, 0.01%)</title><rect x="88.3546%" y="245" width="0.0105%" height="15" fill="rgb(239,214,33)" fg:x="109732" fg:w="13"/><text x="88.6046%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (13 samples, 0.01%)</title><rect x="88.3546%" y="229" width="0.0105%" height="15" fill="rgb(226,176,41)" fg:x="109732" fg:w="13"/><text x="88.6046%" y="239.50"></text></g><g><title>async_executor::Ticker::wake (599 samples, 0.48%)</title><rect x="87.8989%" y="341" width="0.4823%" height="15" fill="rgb(248,47,8)" fg:x="109166" fg:w="599"/><text x="88.1489%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (156 samples, 0.13%)</title><rect x="88.2556%" y="325" width="0.1256%" height="15" fill="rgb(218,81,44)" fg:x="109609" fg:w="156"/><text x="88.5056%" y="335.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (143 samples, 0.12%)</title><rect x="88.2660%" y="309" width="0.1151%" height="15" fill="rgb(213,98,6)" fg:x="109622" fg:w="143"/><text x="88.5160%" y="319.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (143 samples, 0.12%)</title><rect x="88.2660%" y="293" width="0.1151%" height="15" fill="rgb(222,85,22)" fg:x="109622" fg:w="143"/><text x="88.5160%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (54 samples, 0.04%)</title><rect x="88.3377%" y="277" width="0.0435%" height="15" fill="rgb(239,46,39)" fg:x="109711" fg:w="54"/><text x="88.5877%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (33 samples, 0.03%)</title><rect x="88.3546%" y="261" width="0.0266%" height="15" fill="rgb(237,12,29)" fg:x="109732" fg:w="33"/><text x="88.6046%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (20 samples, 0.02%)</title><rect x="88.3651%" y="245" width="0.0161%" height="15" fill="rgb(214,77,8)" fg:x="109745" fg:w="20"/><text x="88.6151%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="88.3651%" y="229" width="0.0161%" height="15" fill="rgb(217,168,37)" fg:x="109745" fg:w="20"/><text x="88.6151%" y="239.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,222 samples, 8.23%)</title><rect x="80.1554%" y="405" width="8.2306%" height="15" fill="rgb(221,217,23)" fg:x="99549" fg:w="10222"/><text x="80.4054%" y="415.50">&lt;core::futu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (10,222 samples, 8.23%)</title><rect x="80.1554%" y="389" width="8.2306%" height="15" fill="rgb(243,229,36)" fg:x="99549" fg:w="10222"/><text x="80.4054%" y="399.50">async_execu..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10,191 samples, 8.21%)</title><rect x="80.1804%" y="373" width="8.2056%" height="15" fill="rgb(251,163,40)" fg:x="99580" fg:w="10191"/><text x="80.4304%" y="383.50">&lt;futures_li..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (10,184 samples, 8.20%)</title><rect x="80.1860%" y="357" width="8.2000%" height="15" fill="rgb(237,222,12)" fg:x="99587" fg:w="10184"/><text x="80.4360%" y="367.50">async_execu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,360 samples, 8.34%)</title><rect x="80.1216%" y="437" width="8.3417%" height="15" fill="rgb(248,132,6)" fg:x="99507" fg:w="10360"/><text x="80.3716%" y="447.50">&lt;core::futur..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (10,359 samples, 8.34%)</title><rect x="80.1224%" y="421" width="8.3409%" height="15" fill="rgb(227,167,50)" fg:x="99508" fg:w="10359"/><text x="80.3724%" y="431.50">async_execut..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (94 samples, 0.08%)</title><rect x="88.3876%" y="405" width="0.0757%" height="15" fill="rgb(242,84,37)" fg:x="109773" fg:w="94"/><text x="88.6376%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (94 samples, 0.08%)</title><rect x="88.3876%" y="389" width="0.0757%" height="15" fill="rgb(212,4,50)" fg:x="109773" fg:w="94"/><text x="88.6376%" y="399.50"></text></g><g><title>[libc-2.31.so] (57 samples, 0.05%)</title><rect x="88.7121%" y="293" width="0.0459%" height="15" fill="rgb(230,228,32)" fg:x="110176" fg:w="57"/><text x="88.9621%" y="303.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (20 samples, 0.02%)</title><rect x="88.7580%" y="293" width="0.0161%" height="15" fill="rgb(248,217,23)" fg:x="110233" fg:w="20"/><text x="89.0080%" y="303.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (18 samples, 0.01%)</title><rect x="88.7596%" y="277" width="0.0145%" height="15" fill="rgb(238,197,32)" fg:x="110235" fg:w="18"/><text x="89.0096%" y="287.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (18 samples, 0.01%)</title><rect x="88.7596%" y="261" width="0.0145%" height="15" fill="rgb(236,106,1)" fg:x="110235" fg:w="18"/><text x="89.0096%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (18 samples, 0.01%)</title><rect x="88.7596%" y="245" width="0.0145%" height="15" fill="rgb(219,228,13)" fg:x="110235" fg:w="18"/><text x="89.0096%" y="255.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.02%)</title><rect x="89.2870%" y="229" width="0.0177%" height="15" fill="rgb(238,30,35)" fg:x="110890" fg:w="22"/><text x="89.5370%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::EventId&gt; (20 samples, 0.02%)</title><rect x="89.5785%" y="181" width="0.0161%" height="15" fill="rgb(236,70,23)" fg:x="111252" fg:w="20"/><text x="89.8285%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (20 samples, 0.02%)</title><rect x="89.5785%" y="165" width="0.0161%" height="15" fill="rgb(249,104,48)" fg:x="111252" fg:w="20"/><text x="89.8285%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tremor_pipeline::TrackedPullIds&gt;&gt; (20 samples, 0.02%)</title><rect x="89.5785%" y="149" width="0.0161%" height="15" fill="rgb(254,117,50)" fg:x="111252" fg:w="20"/><text x="89.8285%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="89.5785%" y="133" width="0.0161%" height="15" fill="rgb(223,152,4)" fg:x="111252" fg:w="20"/><text x="89.8285%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.01%)</title><rect x="89.5817%" y="117" width="0.0129%" height="15" fill="rgb(245,6,2)" fg:x="111256" fg:w="16"/><text x="89.8317%" y="127.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (388 samples, 0.31%)</title><rect x="89.3047%" y="229" width="0.3124%" height="15" fill="rgb(249,150,24)" fg:x="110912" fg:w="388"/><text x="89.5547%" y="239.50"></text></g><g><title>tremor_runtime::connectors::sink::handle_replies::{{closure}} (388 samples, 0.31%)</title><rect x="89.3047%" y="213" width="0.3124%" height="15" fill="rgb(228,185,42)" fg:x="110912" fg:w="388"/><text x="89.5547%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::ContraflowData&gt; (48 samples, 0.04%)</title><rect x="89.5785%" y="197" width="0.0386%" height="15" fill="rgb(226,39,33)" fg:x="111252" fg:w="48"/><text x="89.8285%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (28 samples, 0.02%)</title><rect x="89.5946%" y="181" width="0.0225%" height="15" fill="rgb(221,166,19)" fg:x="111272" fg:w="28"/><text x="89.8446%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (28 samples, 0.02%)</title><rect x="89.5946%" y="165" width="0.0225%" height="15" fill="rgb(209,109,2)" fg:x="111272" fg:w="28"/><text x="89.8446%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="89.6043%" y="149" width="0.0129%" height="15" fill="rgb(252,216,26)" fg:x="111284" fg:w="16"/><text x="89.8543%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.01%)</title><rect x="89.6043%" y="133" width="0.0129%" height="15" fill="rgb(227,173,36)" fg:x="111284" fg:w="16"/><text x="89.8543%" y="143.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="89.6171%" y="229" width="0.0193%" height="15" fill="rgb(209,90,7)" fg:x="111300" fg:w="24"/><text x="89.8671%" y="239.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (247 samples, 0.20%)</title><rect x="89.6365%" y="229" width="0.1989%" height="15" fill="rgb(250,194,11)" fg:x="111324" fg:w="247"/><text x="89.8865%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="89.8241%" y="213" width="0.0113%" height="15" fill="rgb(220,72,50)" fg:x="111557" fg:w="14"/><text x="90.0741%" y="223.50"></text></g><g><title>[libc-2.31.so] (212 samples, 0.17%)</title><rect x="89.8386%" y="213" width="0.1707%" height="15" fill="rgb(222,106,48)" fg:x="111575" fg:w="212"/><text x="90.0886%" y="223.50"></text></g><g><title>[libc-2.31.so] (469 samples, 0.38%)</title><rect x="90.0294%" y="197" width="0.3776%" height="15" fill="rgb(216,220,45)" fg:x="111812" fg:w="469"/><text x="90.2794%" y="207.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (279 samples, 0.22%)</title><rect x="90.5270%" y="85" width="0.2246%" height="15" fill="rgb(234,112,18)" fg:x="112430" fg:w="279"/><text x="90.7770%" y="95.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (947 samples, 0.76%)</title><rect x="90.0093%" y="213" width="0.7625%" height="15" fill="rgb(206,179,9)" fg:x="111787" fg:w="947"/><text x="90.2593%" y="223.50"></text></g><g><title>alloc::alloc::exchange_malloc (453 samples, 0.36%)</title><rect x="90.4070%" y="197" width="0.3647%" height="15" fill="rgb(215,115,40)" fg:x="112281" fg:w="453"/><text x="90.6570%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (453 samples, 0.36%)</title><rect x="90.4070%" y="181" width="0.3647%" height="15" fill="rgb(222,69,34)" fg:x="112281" fg:w="453"/><text x="90.6570%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (453 samples, 0.36%)</title><rect x="90.4070%" y="165" width="0.3647%" height="15" fill="rgb(209,161,10)" fg:x="112281" fg:w="453"/><text x="90.6570%" y="175.50"></text></g><g><title>alloc::alloc::alloc (452 samples, 0.36%)</title><rect x="90.4078%" y="149" width="0.3639%" height="15" fill="rgb(217,6,38)" fg:x="112282" fg:w="452"/><text x="90.6578%" y="159.50"></text></g><g><title>__rg_alloc (452 samples, 0.36%)</title><rect x="90.4078%" y="133" width="0.3639%" height="15" fill="rgb(229,229,48)" fg:x="112282" fg:w="452"/><text x="90.6578%" y="143.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (452 samples, 0.36%)</title><rect x="90.4078%" y="117" width="0.3639%" height="15" fill="rgb(225,21,28)" fg:x="112282" fg:w="452"/><text x="90.6578%" y="127.50"></text></g><g><title>sn_rust_alloc (423 samples, 0.34%)</title><rect x="90.4312%" y="101" width="0.3406%" height="15" fill="rgb(206,33,13)" fg:x="112311" fg:w="423"/><text x="90.6812%" y="111.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt; (25 samples, 0.02%)</title><rect x="90.7516%" y="85" width="0.0201%" height="15" fill="rgb(242,178,17)" fg:x="112709" fg:w="25"/><text x="91.0016%" y="95.50"></text></g><g><title>&lt;tremor_runtime::connectors::impls::bench::Blackhole as tremor_runtime::connectors::sink::Sink&gt;::on_event (1,186 samples, 0.95%)</title><rect x="89.8353%" y="229" width="0.9549%" height="15" fill="rgb(220,162,5)" fg:x="111571" fg:w="1186"/><text x="90.0853%" y="239.50"></text></g><g><title>core::future::from_generator (23 samples, 0.02%)</title><rect x="90.7718%" y="213" width="0.0185%" height="15" fill="rgb(210,33,43)" fg:x="112734" fg:w="23"/><text x="91.0218%" y="223.50"></text></g><g><title>&lt;tremor_pipeline::EventId as core::clone::Clone&gt;::clone (104 samples, 0.08%)</title><rect x="90.8177%" y="213" width="0.0837%" height="15" fill="rgb(216,116,54)" fg:x="112791" fg:w="104"/><text x="91.0677%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="90.8644%" y="197" width="0.0370%" height="15" fill="rgb(249,92,24)" fg:x="112849" fg:w="46"/><text x="91.1144%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.01%)</title><rect x="90.8877%" y="181" width="0.0137%" height="15" fill="rgb(231,189,14)" fg:x="112878" fg:w="17"/><text x="91.1377%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.01%)</title><rect x="90.8877%" y="165" width="0.0137%" height="15" fill="rgb(230,8,41)" fg:x="112878" fg:w="17"/><text x="91.1377%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.01%)</title><rect x="90.8877%" y="149" width="0.0137%" height="15" fill="rgb(249,7,27)" fg:x="112878" fg:w="17"/><text x="91.1377%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="90.8893%" y="133" width="0.0121%" height="15" fill="rgb(232,86,5)" fg:x="112880" fg:w="15"/><text x="91.1393%" y="143.50"></text></g><g><title>&lt;tremor_runtime::connectors::sink::ContraflowData as core::convert::From&lt;&amp;tremor_pipeline::event::Event&gt;&gt;::from (660 samples, 0.53%)</title><rect x="90.7903%" y="229" width="0.5314%" height="15" fill="rgb(224,175,18)" fg:x="112757" fg:w="660"/><text x="91.0403%" y="239.50"></text></g><g><title>&lt;tremor_pipeline::OpMeta as core::clone::Clone&gt;::clone (522 samples, 0.42%)</title><rect x="90.9014%" y="213" width="0.4203%" height="15" fill="rgb(220,129,12)" fg:x="112895" fg:w="522"/><text x="91.1514%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="91.3104%" y="197" width="0.0113%" height="15" fill="rgb(210,19,36)" fg:x="113403" fg:w="14"/><text x="91.5604%" y="207.50"></text></g><g><title>[libc-2.31.so] (2,079 samples, 1.67%)</title><rect x="91.3217%" y="229" width="1.6740%" height="15" fill="rgb(219,96,14)" fg:x="113417" fg:w="2079"/><text x="91.5717%" y="239.50"></text></g><g><title>sn_rust_dealloc (160 samples, 0.13%)</title><rect x="93.0207%" y="69" width="0.1288%" height="15" fill="rgb(249,106,1)" fg:x="115527" fg:w="160"/><text x="93.2707%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;beef::generic::Cow&lt;str,beef::wide::internal::Wide&gt;&gt; (195 samples, 0.16%)</title><rect x="92.9957%" y="229" width="0.1570%" height="15" fill="rgb(249,155,20)" fg:x="115496" fg:w="195"/><text x="93.2457%" y="239.50"></text></g><g><title>&lt;beef::generic::Cow&lt;T,U&gt; as core::ops::drop::Drop&gt;::drop (195 samples, 0.16%)</title><rect x="92.9957%" y="213" width="0.1570%" height="15" fill="rgb(244,168,9)" fg:x="115496" fg:w="195"/><text x="93.2457%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (177 samples, 0.14%)</title><rect x="93.0102%" y="197" width="0.1425%" height="15" fill="rgb(216,23,50)" fg:x="115514" fg:w="177"/><text x="93.2602%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (177 samples, 0.14%)</title><rect x="93.0102%" y="181" width="0.1425%" height="15" fill="rgb(224,219,20)" fg:x="115514" fg:w="177"/><text x="93.2602%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (177 samples, 0.14%)</title><rect x="93.0102%" y="165" width="0.1425%" height="15" fill="rgb(222,156,15)" fg:x="115514" fg:w="177"/><text x="93.2602%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (177 samples, 0.14%)</title><rect x="93.0102%" y="149" width="0.1425%" height="15" fill="rgb(231,97,17)" fg:x="115514" fg:w="177"/><text x="93.2602%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (177 samples, 0.14%)</title><rect x="93.0102%" y="133" width="0.1425%" height="15" fill="rgb(218,70,48)" fg:x="115514" fg:w="177"/><text x="93.2602%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (177 samples, 0.14%)</title><rect x="93.0102%" y="117" width="0.1425%" height="15" fill="rgb(212,196,52)" fg:x="115514" fg:w="177"/><text x="93.2602%" y="127.50"></text></g><g><title>__rg_dealloc (177 samples, 0.14%)</title><rect x="93.0102%" y="101" width="0.1425%" height="15" fill="rgb(243,203,18)" fg:x="115514" fg:w="177"/><text x="93.2602%" y="111.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (177 samples, 0.14%)</title><rect x="93.0102%" y="85" width="0.1425%" height="15" fill="rgb(252,125,41)" fg:x="115514" fg:w="177"/><text x="93.2602%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt;&gt; (55 samples, 0.04%)</title><rect x="93.1527%" y="229" width="0.0443%" height="15" fill="rgb(223,180,33)" fg:x="115691" fg:w="55"/><text x="93.4027%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_runtime::connectors::sink::handle_replies::{{closure}}&gt; (55 samples, 0.04%)</title><rect x="93.1527%" y="213" width="0.0443%" height="15" fill="rgb(254,159,46)" fg:x="115691" fg:w="55"/><text x="93.4027%" y="223.50"></text></g><g><title>sn_rust_dealloc (78 samples, 0.06%)</title><rect x="93.2340%" y="117" width="0.0628%" height="15" fill="rgb(254,38,10)" fg:x="115792" fg:w="78"/><text x="93.4840%" y="127.50"></text></g><g><title>alloc::alloc::box_free (113 samples, 0.09%)</title><rect x="93.2075%" y="197" width="0.0910%" height="15" fill="rgb(208,217,32)" fg:x="115759" fg:w="113"/><text x="93.4575%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (113 samples, 0.09%)</title><rect x="93.2075%" y="181" width="0.0910%" height="15" fill="rgb(221,120,13)" fg:x="115759" fg:w="113"/><text x="93.4575%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (96 samples, 0.08%)</title><rect x="93.2211%" y="165" width="0.0773%" height="15" fill="rgb(246,54,52)" fg:x="115776" fg:w="96"/><text x="93.4711%" y="175.50"></text></g><g><title>__rg_dealloc (96 samples, 0.08%)</title><rect x="93.2211%" y="149" width="0.0773%" height="15" fill="rgb(242,34,25)" fg:x="115776" fg:w="96"/><text x="93.4711%" y="159.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (96 samples, 0.08%)</title><rect x="93.2211%" y="133" width="0.0773%" height="15" fill="rgb(247,209,9)" fg:x="115776" fg:w="96"/><text x="93.4711%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt;&gt; (136 samples, 0.11%)</title><rect x="93.1970%" y="229" width="0.1095%" height="15" fill="rgb(228,71,26)" fg:x="115746" fg:w="136"/><text x="93.4470%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;tremor_runtime::connectors::sink::SinkReply,tremor_runtime::errors::Error&gt;+core::marker::Send&gt;&gt; (136 samples, 0.11%)</title><rect x="93.1970%" y="213" width="0.1095%" height="15" fill="rgb(222,145,49)" fg:x="115746" fg:w="136"/><text x="93.4470%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (113 samples, 0.09%)</title><rect x="93.3822%" y="213" width="0.0910%" height="15" fill="rgb(218,121,17)" fg:x="115976" fg:w="113"/><text x="93.6322%" y="223.50"></text></g><g><title>core::time::Duration::as_nanos (90 samples, 0.07%)</title><rect x="93.4732%" y="213" width="0.0725%" height="15" fill="rgb(244,50,7)" fg:x="116089" fg:w="90"/><text x="93.7232%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (456 samples, 0.37%)</title><rect x="93.5456%" y="197" width="0.3672%" height="15" fill="rgb(246,229,37)" fg:x="116179" fg:w="456"/><text x="93.7956%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (202 samples, 0.16%)</title><rect x="94.0529%" y="165" width="0.1626%" height="15" fill="rgb(225,18,5)" fg:x="116809" fg:w="202"/><text x="94.3029%" y="175.50"></text></g><g><title>core::cmp::PartialOrd::ge (202 samples, 0.16%)</title><rect x="94.0529%" y="149" width="0.1626%" height="15" fill="rgb(213,204,8)" fg:x="116809" fg:w="202"/><text x="94.3029%" y="159.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (183 samples, 0.15%)</title><rect x="94.0682%" y="133" width="0.1473%" height="15" fill="rgb(238,103,6)" fg:x="116828" fg:w="183"/><text x="94.3182%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (79 samples, 0.06%)</title><rect x="94.1519%" y="117" width="0.0636%" height="15" fill="rgb(222,25,35)" fg:x="116932" fg:w="79"/><text x="94.4019%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (79 samples, 0.06%)</title><rect x="94.1519%" y="101" width="0.0636%" height="15" fill="rgb(213,203,35)" fg:x="116932" fg:w="79"/><text x="94.4019%" y="111.50"></text></g><g><title>std::time::SystemTime::duration_since (910 samples, 0.73%)</title><rect x="93.5456%" y="213" width="0.7327%" height="15" fill="rgb(221,79,53)" fg:x="116179" fg:w="910"/><text x="93.7956%" y="223.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (454 samples, 0.37%)</title><rect x="93.9128%" y="197" width="0.3656%" height="15" fill="rgb(243,200,35)" fg:x="116635" fg:w="454"/><text x="94.1628%" y="207.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (454 samples, 0.37%)</title><rect x="93.9128%" y="181" width="0.3656%" height="15" fill="rgb(248,60,25)" fg:x="116635" fg:w="454"/><text x="94.1628%" y="191.50"></text></g><g><title>core::time::Duration::new (78 samples, 0.06%)</title><rect x="94.2155%" y="165" width="0.0628%" height="15" fill="rgb(227,53,46)" fg:x="117011" fg:w="78"/><text x="94.4655%" y="175.50"></text></g><g><title>tremor_common::time::nanotime (3,297 samples, 2.65%)</title><rect x="93.3065%" y="229" width="2.6547%" height="15" fill="rgb(216,120,32)" fg:x="115882" fg:w="3297"/><text x="93.5565%" y="239.50">tr..</text></g><g><title>std::time::SystemTime::now (2,090 samples, 1.68%)</title><rect x="94.2784%" y="213" width="1.6828%" height="15" fill="rgb(220,134,1)" fg:x="117089" fg:w="2090"/><text x="94.5284%" y="223.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (2,090 samples, 1.68%)</title><rect x="94.2784%" y="197" width="1.6828%" height="15" fill="rgb(237,168,5)" fg:x="117089" fg:w="2090"/><text x="94.5284%" y="207.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2,090 samples, 1.68%)</title><rect x="94.2784%" y="181" width="1.6828%" height="15" fill="rgb(231,100,33)" fg:x="117089" fg:w="2090"/><text x="94.5284%" y="191.50"></text></g><g><title>__clock_gettime (1,697 samples, 1.37%)</title><rect x="94.5948%" y="165" width="1.3664%" height="15" fill="rgb(236,177,47)" fg:x="117482" fg:w="1697"/><text x="94.8448%" y="175.50"></text></g><g><title>__vdso_clock_gettime (1,581 samples, 1.27%)</title><rect x="94.6882%" y="149" width="1.2730%" height="15" fill="rgb(235,7,49)" fg:x="117598" fg:w="1581"/><text x="94.9382%" y="159.50"></text></g><g><title>[[vdso]] (1,375 samples, 1.11%)</title><rect x="94.8541%" y="133" width="1.1071%" height="15" fill="rgb(232,119,22)" fg:x="117804" fg:w="1375"/><text x="95.1041%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::append (23 samples, 0.02%)</title><rect x="95.9692%" y="213" width="0.0185%" height="15" fill="rgb(254,73,53)" fg:x="119189" fg:w="23"/><text x="96.2192%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (18 samples, 0.01%)</title><rect x="95.9878%" y="165" width="0.0145%" height="15" fill="rgb(251,35,20)" fg:x="119212" fg:w="18"/><text x="96.2378%" y="175.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::none (18 samples, 0.01%)</title><rect x="95.9878%" y="149" width="0.0145%" height="15" fill="rgb(241,119,20)" fg:x="119212" fg:w="18"/><text x="96.2378%" y="159.50"></text></g><g><title>core::mem::drop (68 samples, 0.05%)</title><rect x="96.0023%" y="165" width="0.0548%" height="15" fill="rgb(207,102,14)" fg:x="119230" fg:w="68"/><text x="96.2523%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (68 samples, 0.05%)</title><rect x="96.0023%" y="149" width="0.0548%" height="15" fill="rgb(248,201,50)" fg:x="119230" fg:w="68"/><text x="96.2523%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.04%)</title><rect x="96.0200%" y="133" width="0.0370%" height="15" fill="rgb(222,185,44)" fg:x="119252" fg:w="46"/><text x="96.2700%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (29 samples, 0.02%)</title><rect x="96.0337%" y="117" width="0.0234%" height="15" fill="rgb(218,107,18)" fg:x="119269" fg:w="29"/><text x="96.2837%" y="127.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (28 samples, 0.02%)</title><rect x="96.0345%" y="101" width="0.0225%" height="15" fill="rgb(237,177,39)" fg:x="119270" fg:w="28"/><text x="96.2845%" y="111.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (28 samples, 0.02%)</title><rect x="96.0345%" y="85" width="0.0225%" height="15" fill="rgb(246,69,6)" fg:x="119270" fg:w="28"/><text x="96.2845%" y="95.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (28 samples, 0.02%)</title><rect x="96.0345%" y="69" width="0.0225%" height="15" fill="rgb(234,208,37)" fg:x="119270" fg:w="28"/><text x="96.2845%" y="79.50"></text></g><g><title>core::mem::replace (28 samples, 0.02%)</title><rect x="96.0345%" y="53" width="0.0225%" height="15" fill="rgb(225,4,6)" fg:x="119270" fg:w="28"/><text x="96.2845%" y="63.50"></text></g><g><title>core::ptr::read (28 samples, 0.02%)</title><rect x="96.0345%" y="37" width="0.0225%" height="15" fill="rgb(233,45,0)" fg:x="119270" fg:w="28"/><text x="96.2845%" y="47.50"></text></g><g><title>tremor_pipeline::OpMeta::merge (132 samples, 0.11%)</title><rect x="95.9612%" y="229" width="0.1063%" height="15" fill="rgb(226,136,5)" fg:x="119179" fg:w="132"/><text x="96.2112%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;tremor_pipeline::OpMeta&gt; (99 samples, 0.08%)</title><rect x="95.9878%" y="213" width="0.0797%" height="15" fill="rgb(211,91,47)" fg:x="119212" fg:w="99"/><text x="96.2378%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;tremor_pipeline::PrimStr&lt;tremor_common::ids::OperatorId&gt;,simd_json::value::owned::Value&gt;&gt; (99 samples, 0.08%)</title><rect x="95.9878%" y="197" width="0.0797%" height="15" fill="rgb(242,88,51)" fg:x="119212" fg:w="99"/><text x="96.2378%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.08%)</title><rect x="95.9878%" y="181" width="0.0797%" height="15" fill="rgb(230,91,28)" fg:x="119212" fg:w="99"/><text x="96.2378%" y="191.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="96.0570%" y="165" width="0.0105%" height="15" fill="rgb(254,186,29)" fg:x="119298" fg:w="13"/><text x="96.3070%" y="175.50"></text></g><g><title>tremor_runtime::connectors::utils::metrics::SinkReporter::increment_in (15 samples, 0.01%)</title><rect x="96.0675%" y="229" width="0.0121%" height="15" fill="rgb(238,6,4)" fg:x="119311" fg:w="15"/><text x="96.3175%" y="239.50"></text></g><g><title>tremor_runtime::connectors::sink::SinkManager&lt;S&gt;::run::{{closure}} (9,075 samples, 7.31%)</title><rect x="88.7805%" y="245" width="7.3071%" height="15" fill="rgb(221,151,16)" fg:x="110261" fg:w="9075"/><text x="89.0305%" y="255.50">tremor_run..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,085 samples, 7.32%)</title><rect x="88.7765%" y="277" width="7.3151%" height="15" fill="rgb(251,143,52)" fg:x="110256" fg:w="9085"/><text x="89.0265%" y="287.50">&lt;async_std..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,085 samples, 7.32%)</title><rect x="88.7765%" y="261" width="7.3151%" height="15" fill="rgb(206,90,15)" fg:x="110256" fg:w="9085"/><text x="89.0265%" y="271.50">&lt;core::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,325 samples, 7.51%)</title><rect x="88.5962%" y="389" width="7.5084%" height="15" fill="rgb(218,35,8)" fg:x="110032" fg:w="9325"/><text x="88.8462%" y="399.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,321 samples, 7.51%)</title><rect x="88.5994%" y="373" width="7.5051%" height="15" fill="rgb(239,215,6)" fg:x="110036" fg:w="9321"/><text x="88.8494%" y="383.50">async_exec..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,193 samples, 7.40%)</title><rect x="88.7024%" y="357" width="7.4021%" height="15" fill="rgb(245,116,39)" fg:x="110164" fg:w="9193"/><text x="88.9524%" y="367.50">&lt;async_std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,193 samples, 7.40%)</title><rect x="88.7024%" y="341" width="7.4021%" height="15" fill="rgb(242,65,28)" fg:x="110164" fg:w="9193"/><text x="88.9524%" y="351.50">async_std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,189 samples, 7.40%)</title><rect x="88.7057%" y="325" width="7.3988%" height="15" fill="rgb(252,132,53)" fg:x="110168" fg:w="9189"/><text x="88.9557%" y="335.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,185 samples, 7.40%)</title><rect x="88.7089%" y="309" width="7.3956%" height="15" fill="rgb(224,159,50)" fg:x="110172" fg:w="9185"/><text x="88.9589%" y="319.50">std::threa..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,104 samples, 7.33%)</title><rect x="88.7741%" y="293" width="7.3304%" height="15" fill="rgb(224,93,4)" fg:x="110253" fg:w="9104"/><text x="89.0241%" y="303.50">async_std:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,328 samples, 7.51%)</title><rect x="88.5962%" y="405" width="7.5108%" height="15" fill="rgb(208,81,34)" fg:x="110032" fg:w="9328"/><text x="88.8462%" y="415.50">&lt;core::pin..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (39 samples, 0.03%)</title><rect x="96.1069%" y="405" width="0.0314%" height="15" fill="rgb(233,92,54)" fg:x="119360" fg:w="39"/><text x="96.3569%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (39 samples, 0.03%)</title><rect x="96.1069%" y="389" width="0.0314%" height="15" fill="rgb(237,21,14)" fg:x="119360" fg:w="39"/><text x="96.3569%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (39 samples, 0.03%)</title><rect x="96.1069%" y="373" width="0.0314%" height="15" fill="rgb(249,128,51)" fg:x="119360" fg:w="39"/><text x="96.3569%" y="383.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (16 samples, 0.01%)</title><rect x="96.1440%" y="325" width="0.0129%" height="15" fill="rgb(223,129,24)" fg:x="119406" fg:w="16"/><text x="96.3940%" y="335.50"></text></g><g><title>core::task::wake::Waker::wake (21 samples, 0.02%)</title><rect x="96.1440%" y="357" width="0.0169%" height="15" fill="rgb(231,168,25)" fg:x="119406" fg:w="21"/><text x="96.3940%" y="367.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (21 samples, 0.02%)</title><rect x="96.1440%" y="341" width="0.0169%" height="15" fill="rgb(224,39,20)" fg:x="119406" fg:w="21"/><text x="96.3940%" y="351.50"></text></g><g><title>async_executor::State::notify (31 samples, 0.02%)</title><rect x="96.1383%" y="373" width="0.0250%" height="15" fill="rgb(225,152,53)" fg:x="119399" fg:w="31"/><text x="96.3883%" y="383.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (39 samples, 0.03%)</title><rect x="96.1383%" y="389" width="0.0314%" height="15" fill="rgb(252,17,24)" fg:x="119399" fg:w="39"/><text x="96.3883%" y="399.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (40 samples, 0.03%)</title><rect x="96.1383%" y="405" width="0.0322%" height="15" fill="rgb(250,114,30)" fg:x="119399" fg:w="40"/><text x="96.3883%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (371 samples, 0.30%)</title><rect x="96.1705%" y="405" width="0.2987%" height="15" fill="rgb(229,5,4)" fg:x="119439" fg:w="371"/><text x="96.4205%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (371 samples, 0.30%)</title><rect x="96.1705%" y="389" width="0.2987%" height="15" fill="rgb(225,176,49)" fg:x="119439" fg:w="371"/><text x="96.4205%" y="399.50"></text></g><g><title>async_task::runnable::Runnable::run (9,947 samples, 8.01%)</title><rect x="88.4673%" y="437" width="8.0092%" height="15" fill="rgb(224,221,49)" fg:x="109872" fg:w="9947"/><text x="88.7173%" y="447.50">async_task:..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,862 samples, 7.94%)</title><rect x="88.5358%" y="421" width="7.9407%" height="15" fill="rgb(253,169,27)" fg:x="109957" fg:w="9862"/><text x="88.7858%" y="431.50">async_task:..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (20,346 samples, 16.38%)</title><rect x="80.1023%" y="485" width="16.3823%" height="15" fill="rgb(211,206,16)" fg:x="99483" fg:w="20346"/><text x="80.3523%" y="495.50">&lt;futures_lite::future::Or..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,346 samples, 16.38%)</title><rect x="80.1023%" y="469" width="16.3823%" height="15" fill="rgb(244,87,35)" fg:x="99483" fg:w="20346"/><text x="80.3523%" y="479.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (20,345 samples, 16.38%)</title><rect x="80.1031%" y="453" width="16.3815%" height="15" fill="rgb(246,28,10)" fg:x="99484" fg:w="20345"/><text x="80.3531%" y="463.50">async_executor::Executor:..</text></g><g><title>async_executor::Executor::run::{{closure}} (20,389 samples, 16.42%)</title><rect x="80.0725%" y="501" width="16.4169%" height="15" fill="rgb(229,12,44)" fg:x="99446" fg:w="20389"/><text x="80.3225%" y="511.50">async_executor::Executor:..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.04%)</title><rect x="96.5908%" y="293" width="0.0378%" height="15" fill="rgb(210,145,37)" fg:x="119961" fg:w="47"/><text x="96.8408%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (47 samples, 0.04%)</title><rect x="96.5908%" y="277" width="0.0378%" height="15" fill="rgb(227,112,52)" fg:x="119961" fg:w="47"/><text x="96.8408%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.04%)</title><rect x="96.5908%" y="261" width="0.0378%" height="15" fill="rgb(238,155,34)" fg:x="119961" fg:w="47"/><text x="96.8408%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.04%)</title><rect x="96.5908%" y="245" width="0.0378%" height="15" fill="rgb(239,226,36)" fg:x="119961" fg:w="47"/><text x="96.8408%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.04%)</title><rect x="96.5908%" y="229" width="0.0378%" height="15" fill="rgb(230,16,23)" fg:x="119961" fg:w="47"/><text x="96.8408%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (43 samples, 0.03%)</title><rect x="96.5941%" y="213" width="0.0346%" height="15" fill="rgb(236,171,36)" fg:x="119965" fg:w="43"/><text x="96.8441%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (37 samples, 0.03%)</title><rect x="96.5989%" y="197" width="0.0298%" height="15" fill="rgb(221,22,14)" fg:x="119971" fg:w="37"/><text x="96.8489%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (37 samples, 0.03%)</title><rect x="96.5989%" y="181" width="0.0298%" height="15" fill="rgb(242,43,11)" fg:x="119971" fg:w="37"/><text x="96.8489%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (34 samples, 0.03%)</title><rect x="96.6013%" y="165" width="0.0274%" height="15" fill="rgb(232,69,23)" fg:x="119974" fg:w="34"/><text x="96.8513%" y="175.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34 samples, 0.03%)</title><rect x="96.6013%" y="149" width="0.0274%" height="15" fill="rgb(216,180,54)" fg:x="119974" fg:w="34"/><text x="96.8513%" y="159.50"></text></g><g><title>concurrent_queue::full_fence (46 samples, 0.04%)</title><rect x="96.6842%" y="261" width="0.0370%" height="15" fill="rgb(216,5,24)" fg:x="120077" fg:w="46"/><text x="96.9342%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (45 samples, 0.04%)</title><rect x="96.6851%" y="245" width="0.0362%" height="15" fill="rgb(225,89,9)" fg:x="120078" fg:w="45"/><text x="96.9351%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (45 samples, 0.04%)</title><rect x="96.6851%" y="229" width="0.0362%" height="15" fill="rgb(243,75,33)" fg:x="120078" fg:w="45"/><text x="96.9351%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (45 samples, 0.04%)</title><rect x="96.6851%" y="213" width="0.0362%" height="15" fill="rgb(247,141,45)" fg:x="120078" fg:w="45"/><text x="96.9351%" y="223.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (182 samples, 0.15%)</title><rect x="96.6585%" y="277" width="0.1465%" height="15" fill="rgb(232,177,36)" fg:x="120045" fg:w="182"/><text x="96.9085%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (104 samples, 0.08%)</title><rect x="96.7213%" y="261" width="0.0837%" height="15" fill="rgb(219,125,36)" fg:x="120123" fg:w="104"/><text x="96.9713%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (104 samples, 0.08%)</title><rect x="96.7213%" y="245" width="0.0837%" height="15" fill="rgb(227,94,9)" fg:x="120123" fg:w="104"/><text x="96.9713%" y="255.50"></text></g><g><title>concurrent_queue::full_fence (33 samples, 0.03%)</title><rect x="96.8147%" y="261" width="0.0266%" height="15" fill="rgb(240,34,52)" fg:x="120239" fg:w="33"/><text x="97.0647%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (33 samples, 0.03%)</title><rect x="96.8147%" y="245" width="0.0266%" height="15" fill="rgb(216,45,12)" fg:x="120239" fg:w="33"/><text x="97.0647%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (33 samples, 0.03%)</title><rect x="96.8147%" y="229" width="0.0266%" height="15" fill="rgb(246,21,19)" fg:x="120239" fg:w="33"/><text x="97.0647%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.03%)</title><rect x="96.8147%" y="213" width="0.0266%" height="15" fill="rgb(213,98,42)" fg:x="120239" fg:w="33"/><text x="97.0647%" y="223.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (289 samples, 0.23%)</title><rect x="96.6287%" y="293" width="0.2327%" height="15" fill="rgb(250,136,47)" fg:x="120008" fg:w="289"/><text x="96.8787%" y="303.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (70 samples, 0.06%)</title><rect x="96.8050%" y="277" width="0.0564%" height="15" fill="rgb(251,124,27)" fg:x="120227" fg:w="70"/><text x="97.0550%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.02%)</title><rect x="96.8453%" y="261" width="0.0161%" height="15" fill="rgb(229,180,14)" fg:x="120277" fg:w="20"/><text x="97.0953%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="96.8453%" y="245" width="0.0161%" height="15" fill="rgb(245,216,25)" fg:x="120277" fg:w="20"/><text x="97.0953%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (65 samples, 0.05%)</title><rect x="96.8614%" y="293" width="0.0523%" height="15" fill="rgb(251,43,5)" fg:x="120297" fg:w="65"/><text x="97.1114%" y="303.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.05%)</title><rect x="96.8614%" y="277" width="0.0523%" height="15" fill="rgb(250,128,24)" fg:x="120297" fg:w="65"/><text x="97.1114%" y="287.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (57 samples, 0.05%)</title><rect x="96.8678%" y="261" width="0.0459%" height="15" fill="rgb(217,117,27)" fg:x="120305" fg:w="57"/><text x="97.1178%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (57 samples, 0.05%)</title><rect x="96.8678%" y="245" width="0.0459%" height="15" fill="rgb(245,147,4)" fg:x="120305" fg:w="57"/><text x="97.1178%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (51 samples, 0.04%)</title><rect x="96.8727%" y="229" width="0.0411%" height="15" fill="rgb(242,201,35)" fg:x="120311" fg:w="51"/><text x="97.1227%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (51 samples, 0.04%)</title><rect x="96.8727%" y="213" width="0.0411%" height="15" fill="rgb(218,181,1)" fg:x="120311" fg:w="51"/><text x="97.1227%" y="223.50"></text></g><g><title>fastrand::RNG::__getit (16 samples, 0.01%)</title><rect x="96.9218%" y="245" width="0.0129%" height="15" fill="rgb(222,6,29)" fg:x="120372" fg:w="16"/><text x="97.1718%" y="255.50"></text></g><g><title>fastrand::usize (43 samples, 0.03%)</title><rect x="96.9137%" y="293" width="0.0346%" height="15" fill="rgb(208,186,3)" fg:x="120362" fg:w="43"/><text x="97.1637%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (37 samples, 0.03%)</title><rect x="96.9186%" y="277" width="0.0298%" height="15" fill="rgb(216,36,26)" fg:x="120368" fg:w="37"/><text x="97.1686%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.03%)</title><rect x="96.9194%" y="261" width="0.0290%" height="15" fill="rgb(248,201,23)" fg:x="120369" fg:w="36"/><text x="97.1694%" y="271.50"></text></g><g><title>fastrand::usize::{{closure}} (17 samples, 0.01%)</title><rect x="96.9347%" y="245" width="0.0137%" height="15" fill="rgb(251,170,31)" fg:x="120388" fg:w="17"/><text x="97.1847%" y="255.50"></text></g><g><title>fastrand::Rng::usize (17 samples, 0.01%)</title><rect x="96.9347%" y="229" width="0.0137%" height="15" fill="rgb(207,110,25)" fg:x="120388" fg:w="17"/><text x="97.1847%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (36 samples, 0.03%)</title><rect x="96.9524%" y="245" width="0.0290%" height="15" fill="rgb(250,54,15)" fg:x="120410" fg:w="36"/><text x="97.2024%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (36 samples, 0.03%)</title><rect x="96.9524%" y="229" width="0.0290%" height="15" fill="rgb(227,68,33)" fg:x="120410" fg:w="36"/><text x="97.2024%" y="239.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (512 samples, 0.41%)</title><rect x="96.5731%" y="309" width="0.4123%" height="15" fill="rgb(238,34,41)" fg:x="119939" fg:w="512"/><text x="96.8231%" y="319.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (46 samples, 0.04%)</title><rect x="96.9483%" y="293" width="0.0370%" height="15" fill="rgb(220,11,15)" fg:x="120405" fg:w="46"/><text x="97.1983%" y="303.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (41 samples, 0.03%)</title><rect x="96.9524%" y="277" width="0.0330%" height="15" fill="rgb(246,111,35)" fg:x="120410" fg:w="41"/><text x="97.2024%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (41 samples, 0.03%)</title><rect x="96.9524%" y="261" width="0.0330%" height="15" fill="rgb(209,88,53)" fg:x="120410" fg:w="41"/><text x="97.2024%" y="271.50"></text></g><g><title>async_executor::Sleepers::update (35 samples, 0.03%)</title><rect x="96.9918%" y="293" width="0.0282%" height="15" fill="rgb(231,185,47)" fg:x="120459" fg:w="35"/><text x="97.2418%" y="303.50"></text></g><g><title>core::task::wake::Waker::will_wake (19 samples, 0.02%)</title><rect x="97.0047%" y="277" width="0.0153%" height="15" fill="rgb(233,154,1)" fg:x="120475" fg:w="19"/><text x="97.2547%" y="287.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="97.0047%" y="261" width="0.0153%" height="15" fill="rgb(225,15,46)" fg:x="120475" fg:w="19"/><text x="97.2547%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.01%)</title><rect x="97.0087%" y="245" width="0.0113%" height="15" fill="rgb(211,135,41)" fg:x="120480" fg:w="14"/><text x="97.2587%" y="255.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="97.0087%" y="229" width="0.0113%" height="15" fill="rgb(208,54,0)" fg:x="120480" fg:w="14"/><text x="97.2587%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (52 samples, 0.04%)</title><rect x="97.0200%" y="293" width="0.0419%" height="15" fill="rgb(244,136,14)" fg:x="120494" fg:w="52"/><text x="97.2700%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.04%)</title><rect x="97.0200%" y="277" width="0.0419%" height="15" fill="rgb(241,56,14)" fg:x="120494" fg:w="52"/><text x="97.2700%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (50 samples, 0.04%)</title><rect x="97.0216%" y="261" width="0.0403%" height="15" fill="rgb(205,80,24)" fg:x="120496" fg:w="50"/><text x="97.2716%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (50 samples, 0.04%)</title><rect x="97.0216%" y="245" width="0.0403%" height="15" fill="rgb(220,57,4)" fg:x="120496" fg:w="50"/><text x="97.2716%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (50 samples, 0.04%)</title><rect x="97.0216%" y="229" width="0.0403%" height="15" fill="rgb(226,193,50)" fg:x="120496" fg:w="50"/><text x="97.2716%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (50 samples, 0.04%)</title><rect x="97.0216%" y="213" width="0.0403%" height="15" fill="rgb(231,168,22)" fg:x="120496" fg:w="50"/><text x="97.2716%" y="223.50"></text></g><g><title>async_executor::Ticker::sleep (151 samples, 0.12%)</title><rect x="96.9854%" y="309" width="0.1216%" height="15" fill="rgb(254,215,14)" fg:x="120451" fg:w="151"/><text x="97.2354%" y="319.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (56 samples, 0.05%)</title><rect x="97.0619%" y="293" width="0.0451%" height="15" fill="rgb(211,115,16)" fg:x="120546" fg:w="56"/><text x="97.3119%" y="303.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.04%)</title><rect x="97.0627%" y="277" width="0.0443%" height="15" fill="rgb(236,210,16)" fg:x="120547" fg:w="55"/><text x="97.3127%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (55 samples, 0.04%)</title><rect x="97.0627%" y="261" width="0.0443%" height="15" fill="rgb(221,94,12)" fg:x="120547" fg:w="55"/><text x="97.3127%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (55 samples, 0.04%)</title><rect x="97.0627%" y="245" width="0.0443%" height="15" fill="rgb(235,218,49)" fg:x="120547" fg:w="55"/><text x="97.3127%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55 samples, 0.04%)</title><rect x="97.0627%" y="229" width="0.0443%" height="15" fill="rgb(217,114,14)" fg:x="120547" fg:w="55"/><text x="97.3127%" y="239.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (708 samples, 0.57%)</title><rect x="96.5385%" y="421" width="0.5701%" height="15" fill="rgb(216,145,22)" fg:x="119896" fg:w="708"/><text x="96.7885%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (687 samples, 0.55%)</title><rect x="96.5554%" y="405" width="0.5532%" height="15" fill="rgb(217,112,39)" fg:x="119917" fg:w="687"/><text x="96.8054%" y="415.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (686 samples, 0.55%)</title><rect x="96.5562%" y="389" width="0.5524%" height="15" fill="rgb(225,85,32)" fg:x="119918" fg:w="686"/><text x="96.8062%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (679 samples, 0.55%)</title><rect x="96.5619%" y="373" width="0.5467%" height="15" fill="rgb(245,209,47)" fg:x="119925" fg:w="679"/><text x="96.8119%" y="383.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (679 samples, 0.55%)</title><rect x="96.5619%" y="357" width="0.5467%" height="15" fill="rgb(218,220,15)" fg:x="119925" fg:w="679"/><text x="96.8119%" y="367.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (668 samples, 0.54%)</title><rect x="96.5707%" y="341" width="0.5379%" height="15" fill="rgb(222,202,31)" fg:x="119936" fg:w="668"/><text x="96.8207%" y="351.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (666 samples, 0.54%)</title><rect x="96.5723%" y="325" width="0.5363%" height="15" fill="rgb(243,203,4)" fg:x="119938" fg:w="666"/><text x="96.8223%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (27 samples, 0.02%)</title><rect x="97.1875%" y="357" width="0.0217%" height="15" fill="rgb(237,92,17)" fg:x="120702" fg:w="27"/><text x="97.4375%" y="367.50"></text></g><g><title>core::mem::replace (27 samples, 0.02%)</title><rect x="97.1875%" y="341" width="0.0217%" height="15" fill="rgb(231,119,7)" fg:x="120702" fg:w="27"/><text x="97.4375%" y="351.50"></text></g><g><title>core::ptr::read (27 samples, 0.02%)</title><rect x="97.1875%" y="325" width="0.0217%" height="15" fill="rgb(237,82,41)" fg:x="120702" fg:w="27"/><text x="97.4375%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (52 samples, 0.04%)</title><rect x="97.1770%" y="373" width="0.0419%" height="15" fill="rgb(226,81,48)" fg:x="120689" fg:w="52"/><text x="97.4270%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (49 samples, 0.04%)</title><rect x="97.2189%" y="373" width="0.0395%" height="15" fill="rgb(234,70,51)" fg:x="120741" fg:w="49"/><text x="97.4689%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (44 samples, 0.04%)</title><rect x="97.2229%" y="357" width="0.0354%" height="15" fill="rgb(251,86,4)" fg:x="120746" fg:w="44"/><text x="97.4729%" y="367.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="97.2229%" y="341" width="0.0354%" height="15" fill="rgb(244,144,28)" fg:x="120746" fg:w="44"/><text x="97.4729%" y="351.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (44 samples, 0.04%)</title><rect x="97.2229%" y="325" width="0.0354%" height="15" fill="rgb(232,161,39)" fg:x="120746" fg:w="44"/><text x="97.4729%" y="335.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (44 samples, 0.04%)</title><rect x="97.2229%" y="309" width="0.0354%" height="15" fill="rgb(247,34,51)" fg:x="120746" fg:w="44"/><text x="97.4729%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (44 samples, 0.04%)</title><rect x="97.2229%" y="293" width="0.0354%" height="15" fill="rgb(225,132,2)" fg:x="120746" fg:w="44"/><text x="97.4729%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (44 samples, 0.04%)</title><rect x="97.2229%" y="277" width="0.0354%" height="15" fill="rgb(209,159,44)" fg:x="120746" fg:w="44"/><text x="97.4729%" y="287.50"></text></g><g><title>core::task::wake::Waker::will_wake (26 samples, 0.02%)</title><rect x="97.2591%" y="373" width="0.0209%" height="15" fill="rgb(251,214,1)" fg:x="120791" fg:w="26"/><text x="97.5091%" y="383.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (26 samples, 0.02%)</title><rect x="97.2591%" y="357" width="0.0209%" height="15" fill="rgb(247,84,47)" fg:x="120791" fg:w="26"/><text x="97.5091%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.02%)</title><rect x="97.2624%" y="341" width="0.0177%" height="15" fill="rgb(240,111,43)" fg:x="120795" fg:w="22"/><text x="97.5124%" y="351.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (22 samples, 0.02%)</title><rect x="97.2624%" y="325" width="0.0177%" height="15" fill="rgb(215,214,35)" fg:x="120795" fg:w="22"/><text x="97.5124%" y="335.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (239 samples, 0.19%)</title><rect x="97.1408%" y="389" width="0.1924%" height="15" fill="rgb(248,207,23)" fg:x="120644" fg:w="239"/><text x="97.3908%" y="399.50"></text></g><g><title>event_listener::Inner::lock (66 samples, 0.05%)</title><rect x="97.2801%" y="373" width="0.0531%" height="15" fill="rgb(214,186,4)" fg:x="120817" fg:w="66"/><text x="97.5301%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.05%)</title><rect x="97.2833%" y="357" width="0.0499%" height="15" fill="rgb(220,133,22)" fg:x="120821" fg:w="62"/><text x="97.5333%" y="367.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.04%)</title><rect x="97.2889%" y="341" width="0.0443%" height="15" fill="rgb(239,134,19)" fg:x="120828" fg:w="55"/><text x="97.5389%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (55 samples, 0.04%)</title><rect x="97.2889%" y="325" width="0.0443%" height="15" fill="rgb(250,140,9)" fg:x="120828" fg:w="55"/><text x="97.5389%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (55 samples, 0.04%)</title><rect x="97.2889%" y="309" width="0.0443%" height="15" fill="rgb(225,59,14)" fg:x="120828" fg:w="55"/><text x="97.5389%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55 samples, 0.04%)</title><rect x="97.2889%" y="293" width="0.0443%" height="15" fill="rgb(214,152,51)" fg:x="120828" fg:w="55"/><text x="97.5389%" y="303.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (104 samples, 0.08%)</title><rect x="97.3332%" y="389" width="0.0837%" height="15" fill="rgb(251,227,43)" fg:x="120883" fg:w="104"/><text x="97.5832%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (102 samples, 0.08%)</title><rect x="97.3348%" y="373" width="0.0821%" height="15" fill="rgb(241,96,17)" fg:x="120885" fg:w="102"/><text x="97.5848%" y="383.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (70 samples, 0.06%)</title><rect x="97.3606%" y="357" width="0.0564%" height="15" fill="rgb(234,198,43)" fg:x="120917" fg:w="70"/><text x="97.6106%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (66 samples, 0.05%)</title><rect x="97.3638%" y="341" width="0.0531%" height="15" fill="rgb(220,108,29)" fg:x="120921" fg:w="66"/><text x="97.6138%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (66 samples, 0.05%)</title><rect x="97.3638%" y="325" width="0.0531%" height="15" fill="rgb(226,163,33)" fg:x="120921" fg:w="66"/><text x="97.6138%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (66 samples, 0.05%)</title><rect x="97.3638%" y="309" width="0.0531%" height="15" fill="rgb(205,194,45)" fg:x="120921" fg:w="66"/><text x="97.6138%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,095 samples, 0.88%)</title><rect x="96.5361%" y="437" width="0.8817%" height="15" fill="rgb(206,143,44)" fg:x="119893" fg:w="1095"/><text x="96.7861%" y="447.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (384 samples, 0.31%)</title><rect x="97.1086%" y="421" width="0.3092%" height="15" fill="rgb(236,136,36)" fg:x="120604" fg:w="384"/><text x="97.3586%" y="431.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (362 samples, 0.29%)</title><rect x="97.1263%" y="405" width="0.2915%" height="15" fill="rgb(249,172,42)" fg:x="120626" fg:w="362"/><text x="97.3763%" y="415.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,101 samples, 0.89%)</title><rect x="96.5321%" y="453" width="0.8865%" height="15" fill="rgb(216,139,23)" fg:x="119888" fg:w="1101"/><text x="96.7821%" y="463.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (21,603 samples, 17.39%)</title><rect x="80.0282%" y="533" width="17.3944%" height="15" fill="rgb(207,166,20)" fg:x="99391" fg:w="21603"/><text x="80.2782%" y="543.50">&lt;futures_lite::future::Or&lt;F..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21,550 samples, 17.35%)</title><rect x="80.0709%" y="517" width="17.3517%" height="15" fill="rgb(210,209,22)" fg:x="99444" fg:w="21550"/><text x="80.3209%" y="527.50">&lt;core::future::from_generat..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,159 samples, 0.93%)</title><rect x="96.4894%" y="501" width="0.9332%" height="15" fill="rgb(232,118,20)" fg:x="119835" fg:w="1159"/><text x="96.7394%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,117 samples, 0.90%)</title><rect x="96.5232%" y="485" width="0.8994%" height="15" fill="rgb(238,113,42)" fg:x="119877" fg:w="1117"/><text x="96.7732%" y="495.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,117 samples, 0.90%)</title><rect x="96.5232%" y="469" width="0.8994%" height="15" fill="rgb(231,42,5)" fg:x="119877" fg:w="1117"/><text x="96.7732%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::get (15 samples, 0.01%)</title><rect x="97.4226%" y="533" width="0.0121%" height="15" fill="rgb(243,166,24)" fg:x="120994" fg:w="15"/><text x="97.6726%" y="543.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="97.4226%" y="517" width="0.0121%" height="15" fill="rgb(237,226,12)" fg:x="120994" fg:w="15"/><text x="97.6726%" y="527.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (15 samples, 0.01%)</title><rect x="97.4226%" y="501" width="0.0121%" height="15" fill="rgb(229,133,24)" fg:x="120994" fg:w="15"/><text x="97.6726%" y="511.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (15 samples, 0.01%)</title><rect x="97.4226%" y="485" width="0.0121%" height="15" fill="rgb(238,33,43)" fg:x="120994" fg:w="15"/><text x="97.6726%" y="495.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (15 samples, 0.01%)</title><rect x="97.4226%" y="469" width="0.0121%" height="15" fill="rgb(227,59,38)" fg:x="120994" fg:w="15"/><text x="97.6726%" y="479.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 0.01%)</title><rect x="97.4347%" y="501" width="0.0137%" height="15" fill="rgb(230,97,0)" fg:x="121009" fg:w="17"/><text x="97.6847%" y="511.50"></text></g><g><title>std::sync::poison::Flag::borrow (17 samples, 0.01%)</title><rect x="97.4347%" y="485" width="0.0137%" height="15" fill="rgb(250,173,50)" fg:x="121009" fg:w="17"/><text x="97.6847%" y="495.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (76 samples, 0.06%)</title><rect x="97.4347%" y="533" width="0.0612%" height="15" fill="rgb(240,15,50)" fg:x="121009" fg:w="76"/><text x="97.6847%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (76 samples, 0.06%)</title><rect x="97.4347%" y="517" width="0.0612%" height="15" fill="rgb(221,93,22)" fg:x="121009" fg:w="76"/><text x="97.6847%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (59 samples, 0.05%)</title><rect x="97.4484%" y="501" width="0.0475%" height="15" fill="rgb(245,180,53)" fg:x="121026" fg:w="59"/><text x="97.6984%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (59 samples, 0.05%)</title><rect x="97.4484%" y="485" width="0.0475%" height="15" fill="rgb(231,88,51)" fg:x="121026" fg:w="59"/><text x="97.6984%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (59 samples, 0.05%)</title><rect x="97.4484%" y="469" width="0.0475%" height="15" fill="rgb(240,58,21)" fg:x="121026" fg:w="59"/><text x="97.6984%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.05%)</title><rect x="97.4484%" y="453" width="0.0475%" height="15" fill="rgb(237,21,10)" fg:x="121026" fg:w="59"/><text x="97.6984%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (16 samples, 0.01%)</title><rect x="97.5200%" y="517" width="0.0129%" height="15" fill="rgb(218,43,11)" fg:x="121115" fg:w="16"/><text x="97.7700%" y="527.50"></text></g><g><title>sn_rust_dealloc (68 samples, 0.05%)</title><rect x="97.5579%" y="357" width="0.0548%" height="15" fill="rgb(218,221,29)" fg:x="121162" fg:w="68"/><text x="97.8079%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (84 samples, 0.07%)</title><rect x="97.5547%" y="453" width="0.0676%" height="15" fill="rgb(214,118,42)" fg:x="121158" fg:w="84"/><text x="97.8047%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (83 samples, 0.07%)</title><rect x="97.5555%" y="437" width="0.0668%" height="15" fill="rgb(251,200,26)" fg:x="121159" fg:w="83"/><text x="97.8055%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (83 samples, 0.07%)</title><rect x="97.5555%" y="421" width="0.0668%" height="15" fill="rgb(237,101,39)" fg:x="121159" fg:w="83"/><text x="97.8055%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (81 samples, 0.07%)</title><rect x="97.5571%" y="405" width="0.0652%" height="15" fill="rgb(251,117,11)" fg:x="121161" fg:w="81"/><text x="97.8071%" y="415.50"></text></g><g><title>__rg_dealloc (81 samples, 0.07%)</title><rect x="97.5571%" y="389" width="0.0652%" height="15" fill="rgb(216,223,23)" fg:x="121161" fg:w="81"/><text x="97.8071%" y="399.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (81 samples, 0.07%)</title><rect x="97.5571%" y="373" width="0.0652%" height="15" fill="rgb(251,54,12)" fg:x="121161" fg:w="81"/><text x="97.8071%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.08%)</title><rect x="97.5482%" y="501" width="0.0773%" height="15" fill="rgb(254,176,54)" fg:x="121150" fg:w="96"/><text x="97.7982%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (90 samples, 0.07%)</title><rect x="97.5530%" y="485" width="0.0725%" height="15" fill="rgb(210,32,8)" fg:x="121156" fg:w="90"/><text x="97.8030%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (88 samples, 0.07%)</title><rect x="97.5547%" y="469" width="0.0709%" height="15" fill="rgb(235,52,38)" fg:x="121158" fg:w="88"/><text x="97.8047%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (17 samples, 0.01%)</title><rect x="97.6271%" y="421" width="0.0137%" height="15" fill="rgb(231,4,44)" fg:x="121248" fg:w="17"/><text x="97.8771%" y="431.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (19 samples, 0.02%)</title><rect x="97.6271%" y="453" width="0.0153%" height="15" fill="rgb(249,2,32)" fg:x="121248" fg:w="19"/><text x="97.8771%" y="463.50"></text></g><g><title>alloc::collections::btree::mem::replace (19 samples, 0.02%)</title><rect x="97.6271%" y="437" width="0.0153%" height="15" fill="rgb(224,65,26)" fg:x="121248" fg:w="19"/><text x="97.8771%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.02%)</title><rect x="97.6255%" y="501" width="0.0250%" height="15" fill="rgb(250,73,40)" fg:x="121246" fg:w="31"/><text x="97.8755%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.02%)</title><rect x="97.6255%" y="485" width="0.0250%" height="15" fill="rgb(253,177,16)" fg:x="121246" fg:w="31"/><text x="97.8755%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (29 samples, 0.02%)</title><rect x="97.6271%" y="469" width="0.0234%" height="15" fill="rgb(217,32,34)" fg:x="121248" fg:w="29"/><text x="97.8771%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (35 samples, 0.03%)</title><rect x="97.6795%" y="469" width="0.0282%" height="15" fill="rgb(212,7,10)" fg:x="121313" fg:w="35"/><text x="97.9295%" y="479.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (28 samples, 0.02%)</title><rect x="97.6851%" y="453" width="0.0225%" height="15" fill="rgb(245,89,8)" fg:x="121320" fg:w="28"/><text x="97.9351%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.02%)</title><rect x="97.6851%" y="437" width="0.0225%" height="15" fill="rgb(237,16,53)" fg:x="121320" fg:w="28"/><text x="97.9351%" y="447.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.02%)</title><rect x="97.6851%" y="421" width="0.0225%" height="15" fill="rgb(250,204,30)" fg:x="121320" fg:w="28"/><text x="97.9351%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (27 samples, 0.02%)</title><rect x="97.7205%" y="437" width="0.0217%" height="15" fill="rgb(208,77,27)" fg:x="121364" fg:w="27"/><text x="97.9705%" y="447.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (47 samples, 0.04%)</title><rect x="97.7092%" y="469" width="0.0378%" height="15" fill="rgb(250,204,28)" fg:x="121350" fg:w="47"/><text x="97.9592%" y="479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (47 samples, 0.04%)</title><rect x="97.7092%" y="453" width="0.0378%" height="15" fill="rgb(244,63,21)" fg:x="121350" fg:w="47"/><text x="97.9592%" y="463.50"></text></g><g><title>snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;::handle_message_queue_inner&lt;snmalloc::LocalAllocator&lt;snmalloc::StandardConfig&gt;::small_alloc&lt;(snmalloc::ZeroMem)0&gt;(unsigned long)::{lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}::operator()(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*) const::{lambda(snmalloc::CoreAllocator&lt;snmalloc::StandardConfig&gt;*, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#1}, {lambda(unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*)#2}, unsigned long, snmalloc::freelist::Iter&lt;snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)1&gt;, snmalloc::capptr::bound&lt;(snmalloc::capptr::dimension::Spatial)0, (snmalloc::capptr::dimension::AddressSpaceControl)0, (snmalloc::capptr::dimension::Wildness)0&gt; &gt;*&gt; (74 samples, 0.06%)</title><rect x="97.7994%" y="261" width="0.0596%" height="15" fill="rgb(236,85,44)" fg:x="121462" fg:w="74"/><text x="98.0494%" y="271.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (143 samples, 0.12%)</title><rect x="97.7471%" y="453" width="0.1151%" height="15" fill="rgb(215,98,4)" fg:x="121397" fg:w="143"/><text x="97.9971%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (143 samples, 0.12%)</title><rect x="97.7471%" y="437" width="0.1151%" height="15" fill="rgb(235,38,11)" fg:x="121397" fg:w="143"/><text x="97.9971%" y="447.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (143 samples, 0.12%)</title><rect x="97.7471%" y="421" width="0.1151%" height="15" fill="rgb(254,186,25)" fg:x="121397" fg:w="143"/><text x="97.9971%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (143 samples, 0.12%)</title><rect x="97.7471%" y="405" width="0.1151%" height="15" fill="rgb(225,55,31)" fg:x="121397" fg:w="143"/><text x="97.9971%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (143 samples, 0.12%)</title><rect x="97.7471%" y="389" width="0.1151%" height="15" fill="rgb(211,15,21)" fg:x="121397" fg:w="143"/><text x="97.9971%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (143 samples, 0.12%)</title><rect x="97.7471%" y="373" width="0.1151%" height="15" fill="rgb(215,187,41)" fg:x="121397" fg:w="143"/><text x="97.9971%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (143 samples, 0.12%)</title><rect x="97.7471%" y="357" width="0.1151%" height="15" fill="rgb(248,69,32)" fg:x="121397" fg:w="143"/><text x="97.9971%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (143 samples, 0.12%)</title><rect x="97.7471%" y="341" width="0.1151%" height="15" fill="rgb(252,102,52)" fg:x="121397" fg:w="143"/><text x="97.9971%" y="351.50"></text></g><g><title>alloc::alloc::alloc (141 samples, 0.11%)</title><rect x="97.7487%" y="325" width="0.1135%" height="15" fill="rgb(253,140,32)" fg:x="121399" fg:w="141"/><text x="97.9987%" y="335.50"></text></g><g><title>__rg_alloc (141 samples, 0.11%)</title><rect x="97.7487%" y="309" width="0.1135%" height="15" fill="rgb(216,56,42)" fg:x="121399" fg:w="141"/><text x="97.9987%" y="319.50"></text></g><g><title>&lt;snmalloc_rs::SnMalloc as core::alloc::global::GlobalAlloc&gt;::alloc (141 samples, 0.11%)</title><rect x="97.7487%" y="293" width="0.1135%" height="15" fill="rgb(216,184,14)" fg:x="121399" fg:w="141"/><text x="97.9987%" y="303.50"></text></g><g><title>sn_rust_alloc (141 samples, 0.11%)</title><rect x="97.7487%" y="277" width="0.1135%" height="15" fill="rgb(237,187,27)" fg:x="121399" fg:w="141"/><text x="97.9987%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (253 samples, 0.20%)</title><rect x="97.6593%" y="501" width="0.2037%" height="15" fill="rgb(219,65,3)" fg:x="121288" fg:w="253"/><text x="97.9093%" y="511.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (239 samples, 0.19%)</title><rect x="97.6706%" y="485" width="0.1924%" height="15" fill="rgb(245,83,25)" fg:x="121302" fg:w="239"/><text x="97.9206%" y="495.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (144 samples, 0.12%)</title><rect x="97.7471%" y="469" width="0.1159%" height="15" fill="rgb(214,205,45)" fg:x="121397" fg:w="144"/><text x="97.9971%" y="479.50"></text></g><g><title>concurrent_queue::full_fence (30 samples, 0.02%)</title><rect x="97.8856%" y="453" width="0.0242%" height="15" fill="rgb(241,20,18)" fg:x="121569" fg:w="30"/><text x="98.1356%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (30 samples, 0.02%)</title><rect x="97.8856%" y="437" width="0.0242%" height="15" fill="rgb(232,163,23)" fg:x="121569" fg:w="30"/><text x="98.1356%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (30 samples, 0.02%)</title><rect x="97.8856%" y="421" width="0.0242%" height="15" fill="rgb(214,5,46)" fg:x="121569" fg:w="30"/><text x="98.1356%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.02%)</title><rect x="97.8856%" y="405" width="0.0242%" height="15" fill="rgb(229,78,17)" fg:x="121569" fg:w="30"/><text x="98.1356%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (71 samples, 0.06%)</title><rect x="97.8630%" y="501" width="0.0572%" height="15" fill="rgb(248,89,10)" fg:x="121541" fg:w="71"/><text x="98.1130%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (58 samples, 0.05%)</title><rect x="97.8735%" y="485" width="0.0467%" height="15" fill="rgb(248,54,15)" fg:x="121554" fg:w="58"/><text x="98.1235%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (51 samples, 0.04%)</title><rect x="97.8791%" y="469" width="0.0411%" height="15" fill="rgb(223,116,6)" fg:x="121561" fg:w="51"/><text x="98.1291%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="97.9097%" y="453" width="0.0105%" height="15" fill="rgb(205,125,38)" fg:x="121599" fg:w="13"/><text x="98.1597%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="97.9097%" y="437" width="0.0105%" height="15" fill="rgb(251,78,38)" fg:x="121599" fg:w="13"/><text x="98.1597%" y="447.50"></text></g><g><title>core::mem::drop (110 samples, 0.09%)</title><rect x="97.9202%" y="501" width="0.0886%" height="15" fill="rgb(253,78,28)" fg:x="121612" fg:w="110"/><text x="98.1702%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (110 samples, 0.09%)</title><rect x="97.9202%" y="485" width="0.0886%" height="15" fill="rgb(209,120,3)" fg:x="121612" fg:w="110"/><text x="98.1702%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.09%)</title><rect x="97.9202%" y="469" width="0.0886%" height="15" fill="rgb(238,229,9)" fg:x="121612" fg:w="110"/><text x="98.1702%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (107 samples, 0.09%)</title><rect x="97.9226%" y="453" width="0.0862%" height="15" fill="rgb(253,159,18)" fg:x="121615" fg:w="107"/><text x="98.1726%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (107 samples, 0.09%)</title><rect x="97.9226%" y="437" width="0.0862%" height="15" fill="rgb(244,42,34)" fg:x="121615" fg:w="107"/><text x="98.1726%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (107 samples, 0.09%)</title><rect x="97.9226%" y="421" width="0.0862%" height="15" fill="rgb(224,8,7)" fg:x="121615" fg:w="107"/><text x="98.1726%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (107 samples, 0.09%)</title><rect x="97.9226%" y="405" width="0.0862%" height="15" fill="rgb(210,201,45)" fg:x="121615" fg:w="107"/><text x="98.1726%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="98.0112%" y="501" width="0.0177%" height="15" fill="rgb(252,185,21)" fg:x="121725" fg:w="22"/><text x="98.2612%" y="511.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (17 samples, 0.01%)</title><rect x="98.0152%" y="485" width="0.0137%" height="15" fill="rgb(223,131,1)" fg:x="121730" fg:w="17"/><text x="98.2652%" y="495.50"></text></g><g><title>std::time::Instant::duration_since (17 samples, 0.01%)</title><rect x="98.0152%" y="469" width="0.0137%" height="15" fill="rgb(245,141,16)" fg:x="121730" fg:w="17"/><text x="98.2652%" y="479.50"></text></g><g><title>std::time::Instant::checked_duration_since (17 samples, 0.01%)</title><rect x="98.0152%" y="453" width="0.0137%" height="15" fill="rgb(229,55,45)" fg:x="121730" fg:w="17"/><text x="98.2652%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (17 samples, 0.01%)</title><rect x="98.0152%" y="437" width="0.0137%" height="15" fill="rgb(208,92,15)" fg:x="121730" fg:w="17"/><text x="98.2652%" y="447.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (83 samples, 0.07%)</title><rect x="98.0321%" y="501" width="0.0668%" height="15" fill="rgb(234,185,47)" fg:x="121751" fg:w="83"/><text x="98.2821%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (82 samples, 0.07%)</title><rect x="98.0329%" y="485" width="0.0660%" height="15" fill="rgb(253,104,50)" fg:x="121752" fg:w="82"/><text x="98.2829%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (82 samples, 0.07%)</title><rect x="98.0329%" y="469" width="0.0660%" height="15" fill="rgb(205,70,7)" fg:x="121752" fg:w="82"/><text x="98.2829%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (81 samples, 0.07%)</title><rect x="98.0337%" y="453" width="0.0652%" height="15" fill="rgb(240,178,43)" fg:x="121753" fg:w="81"/><text x="98.2837%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (81 samples, 0.07%)</title><rect x="98.0337%" y="437" width="0.0652%" height="15" fill="rgb(214,112,2)" fg:x="121753" fg:w="81"/><text x="98.2837%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (770 samples, 0.62%)</title><rect x="97.5345%" y="517" width="0.6200%" height="15" fill="rgb(206,46,17)" fg:x="121133" fg:w="770"/><text x="97.7845%" y="527.50"></text></g><g><title>std::time::Instant::now (69 samples, 0.06%)</title><rect x="98.0990%" y="501" width="0.0556%" height="15" fill="rgb(225,220,16)" fg:x="121834" fg:w="69"/><text x="98.3490%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (69 samples, 0.06%)</title><rect x="98.0990%" y="485" width="0.0556%" height="15" fill="rgb(238,65,40)" fg:x="121834" fg:w="69"/><text x="98.3490%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (69 samples, 0.06%)</title><rect x="98.0990%" y="469" width="0.0556%" height="15" fill="rgb(230,151,21)" fg:x="121834" fg:w="69"/><text x="98.3490%" y="479.50"></text></g><g><title>__clock_gettime (69 samples, 0.06%)</title><rect x="98.0990%" y="453" width="0.0556%" height="15" fill="rgb(218,58,49)" fg:x="121834" fg:w="69"/><text x="98.3490%" y="463.50"></text></g><g><title>__vdso_clock_gettime (59 samples, 0.05%)</title><rect x="98.1070%" y="437" width="0.0475%" height="15" fill="rgb(219,179,14)" fg:x="121844" fg:w="59"/><text x="98.3570%" y="447.50"></text></g><g><title>[[vdso]] (47 samples, 0.04%)</title><rect x="98.1167%" y="421" width="0.0378%" height="15" fill="rgb(223,72,1)" fg:x="121856" fg:w="47"/><text x="98.3667%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.02%)</title><rect x="98.1577%" y="517" width="0.0193%" height="15" fill="rgb(238,126,10)" fg:x="121907" fg:w="24"/><text x="98.4077%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="98.1577%" y="501" width="0.0193%" height="15" fill="rgb(224,206,38)" fg:x="121907" fg:w="24"/><text x="98.4077%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (17 samples, 0.01%)</title><rect x="98.2093%" y="501" width="0.0137%" height="15" fill="rgb(212,201,54)" fg:x="121971" fg:w="17"/><text x="98.4593%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="98.2093%" y="485" width="0.0137%" height="15" fill="rgb(218,154,48)" fg:x="121971" fg:w="17"/><text x="98.4593%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.01%)</title><rect x="98.2125%" y="469" width="0.0105%" height="15" fill="rgb(232,93,24)" fg:x="121975" fg:w="13"/><text x="98.4625%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (13 samples, 0.01%)</title><rect x="98.2125%" y="453" width="0.0105%" height="15" fill="rgb(245,30,21)" fg:x="121975" fg:w="13"/><text x="98.4625%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (13 samples, 0.01%)</title><rect x="98.2125%" y="437" width="0.0105%" height="15" fill="rgb(242,148,29)" fg:x="121975" fg:w="13"/><text x="98.4625%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.01%)</title><rect x="98.2125%" y="421" width="0.0105%" height="15" fill="rgb(244,153,54)" fg:x="121975" fg:w="13"/><text x="98.4625%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (19 samples, 0.02%)</title><rect x="98.2230%" y="501" width="0.0153%" height="15" fill="rgb(252,87,22)" fg:x="121988" fg:w="19"/><text x="98.4730%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_swap (19 samples, 0.02%)</title><rect x="98.2230%" y="485" width="0.0153%" height="15" fill="rgb(210,51,29)" fg:x="121988" fg:w="19"/><text x="98.4730%" y="495.50"></text></g><g><title>__pthread_disable_asynccancel (14 samples, 0.01%)</title><rect x="98.3832%" y="469" width="0.0113%" height="15" fill="rgb(242,136,47)" fg:x="122187" fg:w="14"/><text x="98.6332%" y="479.50"></text></g><g><title>__libc_read (131 samples, 0.11%)</title><rect x="98.3461%" y="485" width="0.1055%" height="15" fill="rgb(238,68,4)" fg:x="122141" fg:w="131"/><text x="98.5961%" y="495.50"></text></g><g><title>__pthread_enable_asynccancel (71 samples, 0.06%)</title><rect x="98.3945%" y="469" width="0.0572%" height="15" fill="rgb(242,161,30)" fg:x="122201" fg:w="71"/><text x="98.6445%" y="479.50"></text></g><g><title>epoll_wait (166 samples, 0.13%)</title><rect x="98.4516%" y="485" width="0.1337%" height="15" fill="rgb(218,58,44)" fg:x="122272" fg:w="166"/><text x="98.7016%" y="495.50"></text></g><g><title>[libc-2.31.so] (61 samples, 0.05%)</title><rect x="98.5362%" y="469" width="0.0491%" height="15" fill="rgb(252,125,32)" fg:x="122377" fg:w="61"/><text x="98.7862%" y="479.50"></text></g><g><title>polling::epoll::Poller::modify (107 samples, 0.09%)</title><rect x="98.5861%" y="485" width="0.0862%" height="15" fill="rgb(219,178,0)" fg:x="122439" fg:w="107"/><text x="98.8361%" y="495.50"></text></g><g><title>polling::epoll::Poller::ctl (95 samples, 0.08%)</title><rect x="98.5958%" y="469" width="0.0765%" height="15" fill="rgb(213,152,7)" fg:x="122451" fg:w="95"/><text x="98.8458%" y="479.50"></text></g><g><title>epoll_ctl (86 samples, 0.07%)</title><rect x="98.6030%" y="453" width="0.0692%" height="15" fill="rgb(249,109,34)" fg:x="122460" fg:w="86"/><text x="98.8530%" y="463.50"></text></g><g><title>polling::epoll::Poller::wait (564 samples, 0.45%)</title><rect x="98.2471%" y="501" width="0.4541%" height="15" fill="rgb(232,96,21)" fg:x="122018" fg:w="564"/><text x="98.4971%" y="511.50"></text></g><g><title>syscall (35 samples, 0.03%)</title><rect x="98.6731%" y="485" width="0.0282%" height="15" fill="rgb(228,27,39)" fg:x="122547" fg:w="35"/><text x="98.9231%" y="495.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,526 samples, 1.23%)</title><rect x="97.4959%" y="533" width="1.2287%" height="15" fill="rgb(211,182,52)" fg:x="121085" fg:w="1526"/><text x="97.7459%" y="543.50"></text></g><g><title>polling::Poller::wait (678 samples, 0.55%)</title><rect x="98.1787%" y="517" width="0.5459%" height="15" fill="rgb(234,178,38)" fg:x="121933" fg:w="678"/><text x="98.4287%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (29 samples, 0.02%)</title><rect x="98.7012%" y="501" width="0.0234%" height="15" fill="rgb(221,111,3)" fg:x="122582" fg:w="29"/><text x="98.9512%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (27 samples, 0.02%)</title><rect x="98.7028%" y="485" width="0.0217%" height="15" fill="rgb(228,175,21)" fg:x="122584" fg:w="27"/><text x="98.9528%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (27 samples, 0.02%)</title><rect x="98.7028%" y="469" width="0.0217%" height="15" fill="rgb(228,174,43)" fg:x="122584" fg:w="27"/><text x="98.9528%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (27 samples, 0.02%)</title><rect x="98.7028%" y="453" width="0.0217%" height="15" fill="rgb(211,191,0)" fg:x="122584" fg:w="27"/><text x="98.9528%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.02%)</title><rect x="98.7028%" y="437" width="0.0217%" height="15" fill="rgb(253,117,3)" fg:x="122584" fg:w="27"/><text x="98.9528%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (18 samples, 0.01%)</title><rect x="98.7254%" y="485" width="0.0145%" height="15" fill="rgb(241,127,19)" fg:x="122612" fg:w="18"/><text x="98.9754%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_store (18 samples, 0.01%)</title><rect x="98.7254%" y="469" width="0.0145%" height="15" fill="rgb(218,103,12)" fg:x="122612" fg:w="18"/><text x="98.9754%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (27 samples, 0.02%)</title><rect x="98.7246%" y="533" width="0.0217%" height="15" fill="rgb(236,214,43)" fg:x="122611" fg:w="27"/><text x="98.9746%" y="543.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="98.7246%" y="517" width="0.0217%" height="15" fill="rgb(244,144,19)" fg:x="122611" fg:w="27"/><text x="98.9746%" y="527.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (27 samples, 0.02%)</title><rect x="98.7246%" y="501" width="0.0217%" height="15" fill="rgb(246,188,10)" fg:x="122611" fg:w="27"/><text x="98.9746%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (25 samples, 0.02%)</title><rect x="98.7504%" y="533" width="0.0201%" height="15" fill="rgb(212,193,33)" fg:x="122643" fg:w="25"/><text x="99.0004%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_store (25 samples, 0.02%)</title><rect x="98.7504%" y="517" width="0.0201%" height="15" fill="rgb(241,51,29)" fg:x="122643" fg:w="25"/><text x="99.0004%" y="527.50"></text></g><g><title>log::max_level (14 samples, 0.01%)</title><rect x="98.7705%" y="533" width="0.0113%" height="15" fill="rgb(211,58,19)" fg:x="122668" fg:w="14"/><text x="99.0205%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="98.7705%" y="517" width="0.0113%" height="15" fill="rgb(229,111,26)" fg:x="122668" fg:w="14"/><text x="99.0205%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="98.7705%" y="501" width="0.0113%" height="15" fill="rgb(213,115,40)" fg:x="122668" fg:w="14"/><text x="99.0205%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (39 samples, 0.03%)</title><rect x="98.8035%" y="501" width="0.0314%" height="15" fill="rgb(209,56,44)" fg:x="122709" fg:w="39"/><text x="99.0535%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.03%)</title><rect x="98.8035%" y="485" width="0.0314%" height="15" fill="rgb(230,108,32)" fg:x="122709" fg:w="39"/><text x="99.0535%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (27 samples, 0.02%)</title><rect x="98.8132%" y="469" width="0.0217%" height="15" fill="rgb(216,165,31)" fg:x="122721" fg:w="27"/><text x="99.0632%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (27 samples, 0.02%)</title><rect x="98.8132%" y="453" width="0.0217%" height="15" fill="rgb(218,122,21)" fg:x="122721" fg:w="27"/><text x="99.0632%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (27 samples, 0.02%)</title><rect x="98.8132%" y="437" width="0.0217%" height="15" fill="rgb(223,224,47)" fg:x="122721" fg:w="27"/><text x="99.0632%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (27 samples, 0.02%)</title><rect x="98.8132%" y="421" width="0.0217%" height="15" fill="rgb(238,102,44)" fg:x="122721" fg:w="27"/><text x="99.0632%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (93 samples, 0.07%)</title><rect x="98.8349%" y="501" width="0.0749%" height="15" fill="rgb(236,46,40)" fg:x="122748" fg:w="93"/><text x="99.0849%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (93 samples, 0.07%)</title><rect x="98.8349%" y="485" width="0.0749%" height="15" fill="rgb(247,202,50)" fg:x="122748" fg:w="93"/><text x="99.0849%" y="495.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (76 samples, 0.06%)</title><rect x="98.9162%" y="421" width="0.0612%" height="15" fill="rgb(209,99,20)" fg:x="122849" fg:w="76"/><text x="99.1662%" y="431.50"></text></g><g><title>std::sys::unix::futex::futex_wait (287 samples, 0.23%)</title><rect x="98.9146%" y="437" width="0.2311%" height="15" fill="rgb(252,27,34)" fg:x="122847" fg:w="287"/><text x="99.1646%" y="447.50"></text></g><g><title>syscall (198 samples, 0.16%)</title><rect x="98.9863%" y="421" width="0.1594%" height="15" fill="rgb(215,206,23)" fg:x="122936" fg:w="198"/><text x="99.2363%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (257 samples, 0.21%)</title><rect x="99.1457%" y="437" width="0.2069%" height="15" fill="rgb(212,135,36)" fg:x="123134" fg:w="257"/><text x="99.3957%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (257 samples, 0.21%)</title><rect x="99.1457%" y="421" width="0.2069%" height="15" fill="rgb(240,189,1)" fg:x="123134" fg:w="257"/><text x="99.3957%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (257 samples, 0.21%)</title><rect x="99.1457%" y="405" width="0.2069%" height="15" fill="rgb(242,56,20)" fg:x="123134" fg:w="257"/><text x="99.3957%" y="415.50"></text></g><g><title>std::sync::condvar::Condvar::wait (571 samples, 0.46%)</title><rect x="98.9098%" y="501" width="0.4598%" height="15" fill="rgb(247,132,33)" fg:x="122841" fg:w="571"/><text x="99.1598%" y="511.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (569 samples, 0.46%)</title><rect x="98.9114%" y="485" width="0.4582%" height="15" fill="rgb(208,149,11)" fg:x="122843" fg:w="569"/><text x="99.1614%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (569 samples, 0.46%)</title><rect x="98.9114%" y="469" width="0.4582%" height="15" fill="rgb(211,33,11)" fg:x="122843" fg:w="569"/><text x="99.1614%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (569 samples, 0.46%)</title><rect x="98.9114%" y="453" width="0.4582%" height="15" fill="rgb(221,29,38)" fg:x="122843" fg:w="569"/><text x="99.1614%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (21 samples, 0.02%)</title><rect x="99.3526%" y="437" width="0.0169%" height="15" fill="rgb(206,182,49)" fg:x="123391" fg:w="21"/><text x="99.6026%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (21 samples, 0.02%)</title><rect x="99.3526%" y="421" width="0.0169%" height="15" fill="rgb(216,140,1)" fg:x="123391" fg:w="21"/><text x="99.6026%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (21 samples, 0.02%)</title><rect x="99.3526%" y="405" width="0.0169%" height="15" fill="rgb(232,57,40)" fg:x="123391" fg:w="21"/><text x="99.6026%" y="415.50"></text></g><g><title>parking::Parker::park (753 samples, 0.61%)</title><rect x="98.7818%" y="533" width="0.6063%" height="15" fill="rgb(224,186,18)" fg:x="122682" fg:w="753"/><text x="99.0318%" y="543.50"></text></g><g><title>parking::Inner::park (743 samples, 0.60%)</title><rect x="98.7898%" y="517" width="0.5983%" height="15" fill="rgb(215,121,11)" fg:x="122692" fg:w="743"/><text x="99.0398%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="99.3695%" y="501" width="0.0185%" height="15" fill="rgb(245,147,10)" fg:x="123412" fg:w="23"/><text x="99.6195%" y="511.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (19 samples, 0.02%)</title><rect x="99.3728%" y="485" width="0.0153%" height="15" fill="rgb(238,153,13)" fg:x="123416" fg:w="19"/><text x="99.6228%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (19 samples, 0.02%)</title><rect x="99.3728%" y="469" width="0.0153%" height="15" fill="rgb(233,108,0)" fg:x="123416" fg:w="19"/><text x="99.6228%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (19 samples, 0.02%)</title><rect x="99.3728%" y="453" width="0.0153%" height="15" fill="rgb(212,157,17)" fg:x="123416" fg:w="19"/><text x="99.6228%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="99.3728%" y="437" width="0.0153%" height="15" fill="rgb(225,213,38)" fg:x="123416" fg:w="19"/><text x="99.6228%" y="447.50"></text></g><g><title>parking::Parker::park_timeout (364 samples, 0.29%)</title><rect x="99.3881%" y="533" width="0.2931%" height="15" fill="rgb(248,16,11)" fg:x="123435" fg:w="364"/><text x="99.6381%" y="543.50"></text></g><g><title>parking::Inner::park (314 samples, 0.25%)</title><rect x="99.4283%" y="517" width="0.2528%" height="15" fill="rgb(241,33,4)" fg:x="123485" fg:w="314"/><text x="99.6783%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (300 samples, 0.24%)</title><rect x="99.4396%" y="501" width="0.2416%" height="15" fill="rgb(222,26,43)" fg:x="123499" fg:w="300"/><text x="99.6896%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (300 samples, 0.24%)</title><rect x="99.4396%" y="485" width="0.2416%" height="15" fill="rgb(243,29,36)" fg:x="123499" fg:w="300"/><text x="99.6896%" y="495.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (24,574 samples, 19.79%)</title><rect x="79.9517%" y="565" width="19.7866%" height="15" fill="rgb(241,9,27)" fg:x="99296" fg:w="24574"/><text x="80.2017%" y="575.50">async_global_executor::reactor:..</text></g><g><title>async_io::driver::block_on (24,574 samples, 19.79%)</title><rect x="79.9517%" y="549" width="19.7866%" height="15" fill="rgb(205,117,26)" fg:x="99296" fg:w="24574"/><text x="80.2017%" y="559.50">async_io::driver::block_on</text></g><g><title>std::time::Instant::now (65 samples, 0.05%)</title><rect x="99.6860%" y="533" width="0.0523%" height="15" fill="rgb(209,80,39)" fg:x="123805" fg:w="65"/><text x="99.9360%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (65 samples, 0.05%)</title><rect x="99.6860%" y="517" width="0.0523%" height="15" fill="rgb(239,155,6)" fg:x="123805" fg:w="65"/><text x="99.9360%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (65 samples, 0.05%)</title><rect x="99.6860%" y="501" width="0.0523%" height="15" fill="rgb(212,104,12)" fg:x="123805" fg:w="65"/><text x="99.9360%" y="511.50"></text></g><g><title>__clock_gettime (53 samples, 0.04%)</title><rect x="99.6956%" y="485" width="0.0427%" height="15" fill="rgb(234,204,3)" fg:x="123817" fg:w="53"/><text x="99.9456%" y="495.50"></text></g><g><title>__vdso_clock_gettime (43 samples, 0.03%)</title><rect x="99.7037%" y="469" width="0.0346%" height="15" fill="rgb(251,218,7)" fg:x="123827" fg:w="43"/><text x="99.9537%" y="479.50"></text></g><g><title>[[vdso]] (39 samples, 0.03%)</title><rect x="99.7069%" y="453" width="0.0314%" height="15" fill="rgb(221,81,32)" fg:x="123831" fg:w="39"/><text x="99.9569%" y="463.50"></text></g><g><title>std::panic::catch_unwind (24,575 samples, 19.79%)</title><rect x="79.9517%" y="693" width="19.7874%" height="15" fill="rgb(214,152,26)" fg:x="99296" fg:w="24575"/><text x="80.2017%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24,575 samples, 19.79%)</title><rect x="79.9517%" y="677" width="19.7874%" height="15" fill="rgb(223,22,3)" fg:x="99296" fg:w="24575"/><text x="80.2017%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24,575 samples, 19.79%)</title><rect x="79.9517%" y="661" width="19.7874%" height="15" fill="rgb(207,174,7)" fg:x="99296" fg:w="24575"/><text x="80.2017%" y="671.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (24,575 samples, 19.79%)</title><rect x="79.9517%" y="645" width="19.7874%" height="15" fill="rgb(224,19,52)" fg:x="99296" fg:w="24575"/><text x="80.2017%" y="655.50">async_global_executor::threadin..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24,575 samples, 19.79%)</title><rect x="79.9517%" y="629" width="19.7874%" height="15" fill="rgb(228,24,14)" fg:x="99296" fg:w="24575"/><text x="80.2017%" y="639.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,575 samples, 19.79%)</title><rect x="79.9517%" y="613" width="19.7874%" height="15" fill="rgb(230,153,43)" fg:x="99296" fg:w="24575"/><text x="80.2017%" y="623.50">std::thread::local::LocalKey&lt;T&gt;..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (24,575 samples, 19.79%)</title><rect x="79.9517%" y="597" width="19.7874%" height="15" fill="rgb(231,106,12)" fg:x="99296" fg:w="24575"/><text x="80.2017%" y="607.50">async_global_executor::threadin..</text></g><g><title>async_global_executor::reactor::block_on (24,575 samples, 19.79%)</title><rect x="79.9517%" y="581" width="19.7874%" height="15" fill="rgb(215,92,2)" fg:x="99296" fg:w="24575"/><text x="80.2017%" y="591.50">async_global_executor::reactor:..</text></g><g><title>std::panic::catch_unwind (24,582 samples, 19.79%)</title><rect x="79.9469%" y="821" width="19.7931%" height="15" fill="rgb(249,143,25)" fg:x="99290" fg:w="24582"/><text x="80.1969%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (24,582 samples, 19.79%)</title><rect x="79.9469%" y="805" width="19.7931%" height="15" fill="rgb(252,7,35)" fg:x="99290" fg:w="24582"/><text x="80.1969%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (24,582 samples, 19.79%)</title><rect x="79.9469%" y="789" width="19.7931%" height="15" fill="rgb(216,69,40)" fg:x="99290" fg:w="24582"/><text x="80.1969%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24,582 samples, 19.79%)</title><rect x="79.9469%" y="773" width="19.7931%" height="15" fill="rgb(240,36,33)" fg:x="99290" fg:w="24582"/><text x="80.1969%" y="783.50">&lt;core::panic::unwind_safe::Asse..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (24,582 samples, 19.79%)</title><rect x="79.9469%" y="757" width="19.7931%" height="15" fill="rgb(231,128,14)" fg:x="99290" fg:w="24582"/><text x="80.1969%" y="767.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24,582 samples, 19.79%)</title><rect x="79.9469%" y="741" width="19.7931%" height="15" fill="rgb(245,143,14)" fg:x="99290" fg:w="24582"/><text x="80.1969%" y="751.50">std::sys_common::backtrace::__r..</text></g><g><title>core::ops::function::FnOnce::call_once (24,582 samples, 19.79%)</title><rect x="79.9469%" y="725" width="19.7931%" height="15" fill="rgb(222,130,28)" fg:x="99290" fg:w="24582"/><text x="80.1969%" y="735.50">core::ops::function::FnOnce::ca..</text></g><g><title>async_global_executor::threading::thread_main_loop (24,582 samples, 19.79%)</title><rect x="79.9469%" y="709" width="19.7931%" height="15" fill="rgb(212,10,48)" fg:x="99290" fg:w="24582"/><text x="80.1969%" y="719.50">async_global_executor::threadin..</text></g><g><title>clone (24,588 samples, 19.80%)</title><rect x="79.9469%" y="933" width="19.7979%" height="15" fill="rgb(254,118,45)" fg:x="99290" fg:w="24588"/><text x="80.1969%" y="943.50">clone</text></g><g><title>start_thread (24,588 samples, 19.80%)</title><rect x="79.9469%" y="917" width="19.7979%" height="15" fill="rgb(228,6,45)" fg:x="99290" fg:w="24588"/><text x="80.1969%" y="927.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24,588 samples, 19.80%)</title><rect x="79.9469%" y="901" width="19.7979%" height="15" fill="rgb(241,18,35)" fg:x="99290" fg:w="24588"/><text x="80.1969%" y="911.50">std::sys::unix::thread::Thread:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,588 samples, 19.80%)</title><rect x="79.9469%" y="885" width="19.7979%" height="15" fill="rgb(227,214,53)" fg:x="99290" fg:w="24588"/><text x="80.1969%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,588 samples, 19.80%)</title><rect x="79.9469%" y="869" width="19.7979%" height="15" fill="rgb(224,107,51)" fg:x="99290" fg:w="24588"/><text x="80.1969%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (24,588 samples, 19.80%)</title><rect x="79.9469%" y="853" width="19.7979%" height="15" fill="rgb(248,60,28)" fg:x="99290" fg:w="24588"/><text x="80.1969%" y="863.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (24,588 samples, 19.80%)</title><rect x="79.9469%" y="837" width="19.7979%" height="15" fill="rgb(249,101,23)" fg:x="99290" fg:w="24588"/><text x="80.1969%" y="847.50">std::thread::Builder::spawn_unc..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Send&lt;tremor_runtime::connectors::sink::SinkMsg&gt;&gt; (13 samples, 0.01%)</title><rect x="99.7448%" y="933" width="0.0105%" height="15" fill="rgb(228,51,19)" fg:x="123878" fg:w="13"/><text x="99.9948%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tremor_runtime::connectors::sink::SinkMsgWrapper&gt;&gt; (17 samples, 0.01%)</title><rect x="99.7552%" y="933" width="0.0137%" height="15" fill="rgb(213,20,6)" fg:x="123891" fg:w="17"/><text x="100.0052%" y="943.50"></text></g><g><title>signal_hook_registry::GLOBAL_DATA (16 samples, 0.01%)</title><rect x="99.7697%" y="933" width="0.0129%" height="15" fill="rgb(212,124,10)" fg:x="123909" fg:w="16"/><text x="100.0197%" y="943.50"></text></g><g><title>tremor_common::time::nanotime (18 samples, 0.01%)</title><rect x="99.7939%" y="933" width="0.0145%" height="15" fill="rgb(248,3,40)" fg:x="123939" fg:w="18"/><text x="100.0439%" y="943.50"></text></g><g><title>async-std/runti (123,899 samples, 99.76%)</title><rect x="0.0636%" y="949" width="99.7617%" height="15" fill="rgb(223,178,23)" fg:x="79" fg:w="123899"/><text x="0.3136%" y="959.50">async-std/runti</text></g><g><title>std::sys::unix::futex::futex_wait (46 samples, 0.04%)</title><rect x="99.8325%" y="613" width="0.0370%" height="15" fill="rgb(240,132,45)" fg:x="123987" fg:w="46"/><text x="100.0825%" y="623.50"></text></g><g><title>syscall (41 samples, 0.03%)</title><rect x="99.8365%" y="597" width="0.0330%" height="15" fill="rgb(245,164,36)" fg:x="123992" fg:w="41"/><text x="100.0865%" y="607.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (48 samples, 0.04%)</title><rect x="99.8325%" y="693" width="0.0386%" height="15" fill="rgb(231,188,53)" fg:x="123987" fg:w="48"/><text x="100.0825%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (48 samples, 0.04%)</title><rect x="99.8325%" y="677" width="0.0386%" height="15" fill="rgb(237,198,39)" fg:x="123987" fg:w="48"/><text x="100.0825%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (48 samples, 0.04%)</title><rect x="99.8325%" y="661" width="0.0386%" height="15" fill="rgb(223,120,35)" fg:x="123987" fg:w="48"/><text x="100.0825%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (48 samples, 0.04%)</title><rect x="99.8325%" y="645" width="0.0386%" height="15" fill="rgb(253,107,49)" fg:x="123987" fg:w="48"/><text x="100.0825%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (48 samples, 0.04%)</title><rect x="99.8325%" y="629" width="0.0386%" height="15" fill="rgb(216,44,31)" fg:x="123987" fg:w="48"/><text x="100.0825%" y="639.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.04%)</title><rect x="99.8317%" y="821" width="0.0403%" height="15" fill="rgb(253,87,21)" fg:x="123986" fg:w="50"/><text x="100.0817%" y="831.50"></text></g><g><title>std::panicking::try (50 samples, 0.04%)</title><rect x="99.8317%" y="805" width="0.0403%" height="15" fill="rgb(226,18,2)" fg:x="123986" fg:w="50"/><text x="100.0817%" y="815.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.04%)</title><rect x="99.8317%" y="789" width="0.0403%" height="15" fill="rgb(216,8,46)" fg:x="123986" fg:w="50"/><text x="100.0817%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.04%)</title><rect x="99.8317%" y="773" width="0.0403%" height="15" fill="rgb(226,140,39)" fg:x="123986" fg:w="50"/><text x="100.0817%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (50 samples, 0.04%)</title><rect x="99.8317%" y="757" width="0.0403%" height="15" fill="rgb(221,194,54)" fg:x="123986" fg:w="50"/><text x="100.0817%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50 samples, 0.04%)</title><rect x="99.8317%" y="741" width="0.0403%" height="15" fill="rgb(213,92,11)" fg:x="123986" fg:w="50"/><text x="100.0817%" y="751.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (50 samples, 0.04%)</title><rect x="99.8317%" y="725" width="0.0403%" height="15" fill="rgb(229,162,46)" fg:x="123986" fg:w="50"/><text x="100.0817%" y="735.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (50 samples, 0.04%)</title><rect x="99.8317%" y="709" width="0.0403%" height="15" fill="rgb(214,111,36)" fg:x="123986" fg:w="50"/><text x="100.0817%" y="719.50"></text></g><g><title>clone (53 samples, 0.04%)</title><rect x="99.8317%" y="933" width="0.0427%" height="15" fill="rgb(207,6,21)" fg:x="123986" fg:w="53"/><text x="100.0817%" y="943.50"></text></g><g><title>start_thread (53 samples, 0.04%)</title><rect x="99.8317%" y="917" width="0.0427%" height="15" fill="rgb(213,127,38)" fg:x="123986" fg:w="53"/><text x="100.0817%" y="927.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (53 samples, 0.04%)</title><rect x="99.8317%" y="901" width="0.0427%" height="15" fill="rgb(238,118,32)" fg:x="123986" fg:w="53"/><text x="100.0817%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (53 samples, 0.04%)</title><rect x="99.8317%" y="885" width="0.0427%" height="15" fill="rgb(240,139,39)" fg:x="123986" fg:w="53"/><text x="100.0817%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (53 samples, 0.04%)</title><rect x="99.8317%" y="869" width="0.0427%" height="15" fill="rgb(235,10,37)" fg:x="123986" fg:w="53"/><text x="100.0817%" y="879.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (53 samples, 0.04%)</title><rect x="99.8317%" y="853" width="0.0427%" height="15" fill="rgb(249,171,38)" fg:x="123986" fg:w="53"/><text x="100.0817%" y="863.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (53 samples, 0.04%)</title><rect x="99.8317%" y="837" width="0.0427%" height="15" fill="rgb(242,144,32)" fg:x="123986" fg:w="53"/><text x="100.0817%" y="847.50"></text></g><g><title>tokio-runtime-w (55 samples, 0.04%)</title><rect x="99.8309%" y="949" width="0.0443%" height="15" fill="rgb(217,117,21)" fg:x="123985" fg:w="55"/><text x="100.0809%" y="959.50"></text></g><g><title>[ld-2.31.so] (14 samples, 0.01%)</title><rect x="99.8768%" y="933" width="0.0113%" height="15" fill="rgb(249,87,1)" fg:x="124042" fg:w="14"/><text x="100.1268%" y="943.50"></text></g><g><title>all (124,195 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(248,196,48)" fg:x="0" fg:w="124195"/><text x="0.2500%" y="975.50"></text></g><g><title>tremor-main (155 samples, 0.12%)</title><rect x="99.8752%" y="949" width="0.1248%" height="15" fill="rgb(251,206,33)" fg:x="124040" fg:w="155"/><text x="100.1252%" y="959.50"></text></g><g><title>clone (133 samples, 0.11%)</title><rect x="99.8929%" y="933" width="0.1071%" height="15" fill="rgb(232,141,28)" fg:x="124062" fg:w="133"/><text x="100.1429%" y="943.50"></text></g><g><title>start_thread (20 samples, 0.02%)</title><rect x="99.9839%" y="917" width="0.0161%" height="15" fill="rgb(209,167,14)" fg:x="124175" fg:w="20"/><text x="100.2339%" y="927.50"></text></g></svg></svg>